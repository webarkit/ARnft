!function(A,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.ARnft=I():A.ARnft=I()}("undefined"!=typeof self?self:this,(()=>(()=>{var A={466:function(A){var I;A.exports=(I=function(){function A(A){return C.appendChild(A.dom),A}function g(A){for(var I=0;I<C.children.length;I++)C.children[I].style.display=I===A?"block":"none";B=A}var B=0,C=document.createElement("div");C.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",C.addEventListener("click",(function(A){A.preventDefault(),g(++B%C.children.length)}),!1);var Q=(performance||Date).now(),E=Q,i=0,o=A(new I.Panel("FPS","#0ff","#002")),D=A(new I.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var a=A(new I.Panel("MB","#f08","#201"));return g(0),{REVISION:16,dom:C,addPanel:A,showPanel:g,begin:function(){Q=(performance||Date).now()},end:function(){i++;var A=(performance||Date).now();if(D.update(A-Q,200),A>E+1e3&&(o.update(1e3*i/(A-E),100),E=A,i=0,a)){var I=performance.memory;a.update(I.usedJSHeapSize/1048576,I.jsHeapSizeLimit/1048576)}return A},update:function(){Q=this.end()},domElement:C,setMode:g}},I.Panel=function(A,I,g){var B=1/0,C=0,Q=Math.round,E=Q(window.devicePixelRatio||1),i=80*E,o=48*E,D=3*E,a=2*E,s=3*E,t=15*E,w=74*E,h=30*E,G=document.createElement("canvas");G.width=i,G.height=o,G.style.cssText="width:80px;height:48px";var R=G.getContext("2d");return R.font="bold "+9*E+"px Helvetica,Arial,sans-serif",R.textBaseline="top",R.fillStyle=g,R.fillRect(0,0,i,o),R.fillStyle=I,R.fillText(A,D,a),R.fillRect(s,t,w,h),R.fillStyle=g,R.globalAlpha=.9,R.fillRect(s,t,w,h),{dom:G,update:function(o,r){B=Math.min(B,o),C=Math.max(C,o),R.fillStyle=g,R.globalAlpha=1,R.fillRect(0,0,i,t),R.fillStyle=I,R.fillText(Q(o)+" "+A+" ("+Q(B)+"-"+Q(C)+")",D,a),R.drawImage(G,s+E,t,w-E,h,s,t,w-E,h),R.fillRect(s+w-E,t,E,h),R.fillStyle=g,R.globalAlpha=.9,R.fillRect(s+w-E,t,E,Q((1-o/r)*h))}}},I)},477:A=>{"use strict";A.exports=function(A,I,g,B){var C=self||window;try{try{var Q;try{Q=new C.Blob([A])}catch(I){(Q=new(C.BlobBuilder||C.WebKitBlobBuilder||C.MozBlobBuilder||C.MSBlobBuilder)).append(A),Q=Q.getBlob()}var E=C.URL||C.webkitURL,i=E.createObjectURL(Q),o=new C[I](i,g);return E.revokeObjectURL(i),o}catch(B){return new C[I]("data:application/javascript,".concat(encodeURIComponent(A)),g)}}catch(A){if(!B)throw Error("Inline worker is not supported");return new C[I](B,g)}}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";g.d(B,{default:()=>M});class A{static createContainer(A){if(A.container.create){const A=document.createElement("div");A.id="app";const I=document.createElement("canvas");I.id="canvas";const g=document.createElement("video");g.id="video",g.setAttribute("autoplay",""),g.setAttribute("muted",""),g.setAttribute("playsinline",""),A.appendChild(g),A.appendChild(I);const B=document.getElementById("loading");return document.body.insertBefore(A,B),{container:A,canvas:I,video:g}}return{container:document.getElementById(A.container.containerName),canvas:document.getElementById(A.container.canvasName),video:document.getElementById("video")}}static createStats(A,I){if(A&&I.stats.createHtml){const A=document.createElement("div");A.id="stats",A.className="ui stats";const I=document.createElement("div");I.id="stats1",I.className="stats-item";const g=document.createElement("p");g.className="stats-item-title",g.innerText="Main",I.appendChild(g),A.appendChild(I);const B=document.createElement("div");B.id="stats2",B.className="stats-item";const C=document.createElement("p");C.className="stats-item-title",C.innerText="Worker",B.appendChild(C),A.appendChild(B);const Q=document.getElementById("loading");return document.body.insertBefore(A,Q),A}}static createLoading(A){if(A.loading.create){const I=document.createElement("div");I.id="loading";const g=document.createElement("img");g.src=A.loading.logo.src,g.alt=A.loading.logo.alt;const B=document.createElement("span");return B.setAttribute("class","loading-text"),B.innerText=A.loading.loadingMessage,I.appendChild(g),I.appendChild(B),document.body.insertBefore(I,document.body.firstChild),I}}}var I=g(466),C=g.n(I);class Q{canvas_process;context_process;_video;_facing;vw;vh;w;h;pw;ph;ox;oy;target;targetFrameRate=60;imageDataCache;_frame;lastCache=0;constructor(A){this.canvas_process=document.createElement("canvas"),this.context_process=this.canvas_process.getContext("2d",{alpha:!1}),this._video=A,this.target=window||g.g,this._frame=0}get facing(){return this._facing}get height(){return this.vh}get width(){return this.vw}get video(){return this._video}get frame(){return this._frame}get canvasProcess(){return this.canvas_process}get contextProcess(){return this.context_process}getFrame(){return this._frame}getImage(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}get image(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}prepareImage(){this.vw=this._video.videoWidth,this.vh=this._video.videoHeight;var A=320/Math.max(this.vw,this.vh/3*4);this.w=Math.floor(this.vw*A),this.h=Math.floor(this.vh*A),this.pw=Math.floor(Math.max(this.w,this.h/3*4)),this.ph=Math.floor(Math.max(this.h,this.w/4*3)),this.ox=Math.floor((this.pw-this.w)/2),this.oy=Math.floor((this.ph-this.h)/2),this.canvas_process.width=this.pw,this.canvas_process.height=this.ph,this.context_process.fillStyle="black",this.context_process.fillRect(0,0,this.pw,this.ph)}async initialize(A){if(this._facing=A.facingMode||"environment",null!=A.targetFrameRate&&(this.targetFrameRate=A.targetFrameRate),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return Promise.reject("Sorry, Your device does not support this experience.");try{const I={audio:!1,video:{facingMode:this._facing,width:{min:A.width.min,max:A.width.max}}};if(navigator.mediaDevices.enumerateDevices){const A=await navigator.mediaDevices.enumerateDevices(),g=[];let B=0;A.forEach((function(A){"videoinput"==A.kind&&(g[B++]=A.deviceId)})),g.length>1&&(I.video.deviceId={exact:g[g.length-1]})}const g=await navigator.mediaDevices.getUserMedia(I);return this._video.srcObject=g,this._video=await new Promise((A=>{this._video.onloadedmetadata=()=>A(this._video)})),this.prepareImage(),!0}catch(A){return Promise.reject(A)}}destroy(){const A=this._video;this.target.addEventListener("stopVideoStreaming",(function(){const I=A.srcObject;if(console.log("stop streaming"),null!=I){I.getTracks().forEach((function(A){A.stop()})),A.srcObject=null;let g=document.getElementById("app");null!=g&&g.remove()}}))}}window||g.g;function E(A,I){var g=320/Math.max(A,I/3*4),B=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?window.outerWidth/A:1;let C=A*g,Q=I*g;return[A*B,I*B,Math.max(C,Q/3*4),Math.max(Q,C/4*3),C,Q]}async function i(A){try{const I=await fetch(A);if(!I.ok)throw new Error("HTTP error, status = "+I.status);return I.json()}catch(A){return Promise.reject(A)}}var o=g(477),D=g.n(o);function a(){return D()('(()=>{var A={801:function(A){var I;"undefined"!=typeof self&&self,I=()=>(()=>{var A={230:A=>{A.exports="object"==typeof self?self.FormData:window.FormData},567:()=>{},889:()=>{},431:()=>{},61:(A,I,g)=>{var B=g(698).default;function C(){"use strict";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E=Object.defineProperty||function(A,I,g){A[I]=g.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",D=i.asyncIterator||"@@asyncIterator",a=i.toStringTag||"@@toStringTag";function w(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{w({},"")}catch(A){w=function(A,I,g){return A[I]=g}}function s(A,I,g,B){var C=I&&I.prototype instanceof t?I:t,Q=Object.create(C.prototype),i=new J(B||[]);return E(Q,"_invoke",{value:n(A,g,i)}),Q}function G(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}I.wrap=s;var h={};function t(){}function R(){}function F(){}var y={};w(y,o,(function(){return this}));var r=Object.getPrototypeOf,M=r&&r(r(K([])));M&&M!==g&&Q.call(M,o)&&(y=M);var e=F.prototype=t.prototype=Object.create(y);function S(A){["next","throw","return"].forEach((function(I){w(A,I,(function(A){return this._invoke(I,A)}))}))}function N(A,I){function g(C,E,i,o){var D=G(A[C],A,E);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&Q.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;E(this,"_invoke",{value:function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}})}function n(A,I,g){var B="suspendedStart";return function(C,Q){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=c(E,g);if(i){if(i===h)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var o=G(A,I,g);if("normal"===o.type){if(B=g.done?"completed":"suspendedYield",o.arg===h)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B="completed",g.method="throw",g.arg=o.arg)}}}function c(A,I){var g=A.iterator[I.method];if(void 0===g){if(I.delegate=null,"throw"===I.method){if(A.iterator.return&&(I.method="return",I.arg=void 0,c(A,I),"throw"===I.method))return h;I.method="throw",I.arg=new TypeError("The iterator does not provide a \'throw\' method")}return h}var B=G(g,A.iterator,I.arg);if("throw"===B.type)return I.method="throw",I.arg=B.arg,I.delegate=null,h;var C=B.arg;return C?C.done?(I[A.resultName]=C.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,h):C:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,h)}function k(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function U(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function J(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(k,this),this.reset(!0)}function K(A){if(A){var I=A[o];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:Y}}function Y(){return{value:void 0,done:!0}}return R.prototype=F,E(e,"constructor",{value:F,configurable:!0}),E(F,"constructor",{value:R,configurable:!0}),R.displayName=w(F,a,"GeneratorFunction"),I.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===R||"GeneratorFunction"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,F):(A.__proto__=F,w(A,a,"GeneratorFunction")),A.prototype=Object.create(e),A},I.awrap=function(A){return{__await:A}},S(N.prototype),w(N.prototype,D,(function(){return this})),I.AsyncIterator=N,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new N(s(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},S(e),w(e,a,"Generator"),w(e,o,(function(){return this})),w(e,"toString",(function(){return"[object Generator]"})),I.keys=function(A){var I=Object(A),g=[];for(var B in I)g.push(B);return g.reverse(),function A(){for(;g.length;){var B=g.pop();if(B in I)return A.value=B,A.done=!1,A}return A.done=!0,A}},I.values=K,J.prototype={constructor:J,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(U),!A)for(var I in this)"t"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if("root"===C.tryLoc)return g("end");if(C.tryLoc<=this.prev){var i=Q.call(C,"catchLoc"),o=Q.call(C,"finallyLoc");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method="next",this.next=C.finallyLoc,h):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),h},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),U(g),h}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;U(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:K(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),h}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B](Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function C(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function Q(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&Q(A.prototype,I),g&&Q(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}function i(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}g.d(B,{default:()=>EI});var o,D=g(687),a=g.n(D);const w=(o=(o="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){var I,B;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,B=g}));var C,Q,E,i,D,a,w=Object.assign({},A),s=[],G="./this.program",h=(A,I)=>{throw I},t="object"==typeof window,R="function"==typeof importScripts,F="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,y="";F?(y=R?g(431).dirname(y)+"/":"//",a=()=>{D||(i=g(889),D=g(431))},C=function(A,I){var g=pI(A);return g?I?g:g.toString():(a(),A=D.normalize(A),i.readFileSync(A,I?void 0:"utf8"))},E=A=>{var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},Q=(A,I,g)=>{var B=pI(A);B&&I(B),a(),A=D.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(G=process.argv[1].replace(/\\\\/g,"/")),s=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof iA))throw A})),process.on("unhandledRejection",(function(A){throw A})),h=(A,I)=>{if(T())throw process.exitCode=A,I;var g;(g=I)instanceof iA||e("exiting due to exception: "+g),process.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):(t||R)&&(R?y=self.location.href:"undefined"!=typeof document&&document.currentScript&&(y=document.currentScript.src),o&&(y=o),y=0!==y.indexOf("blob:")?y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):"",C=A=>{try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=pI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(fI&&c(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},R&&(E=A=>{try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=pI(A);if(g)return g;throw I}}),Q=(A,I,g)=>{var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=()=>{if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=pI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)});var r,M=A.print||console.log.bind(console),e=A.printErr||console.warn.bind(console);Object.assign(A,w),w=null,A.arguments&&(s=A.arguments),A.thisProgram&&(G=A.thisProgram),A.quit&&(h=A.quit),A.wasmBinary&&(r=A.wasmBinary);var S,N=A.noExitRuntime||!0;"object"!=typeof WebAssembly&&z("no native wasm support detected");var n=!1;function c(A,I){A||z(I)}var k,U,J,K,Y,L,d,l,q,H="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function f(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&H)return H.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function u(A,I){return A?f(J,A,I):""}function p(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function W(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function b(I){k=I,A.HEAP8=U=new Int8Array(I),A.HEAP16=K=new Int16Array(I),A.HEAP32=L=new Int32Array(I),A.HEAPU8=J=new Uint8Array(I),A.HEAPU16=Y=new Uint16Array(I),A.HEAPU32=d=new Uint32Array(I),A.HEAPF32=l=new Float32Array(I),A.HEAPF64=q=new Float64Array(I)}A.INITIAL_MEMORY;var m,Z=[],x=[],V=[];function T(){return N}var X=0,O=null,j=null;function v(I){X++,A.monitorRunDependencies&&A.monitorRunDependencies(X)}function P(I){if(X--,A.monitorRunDependencies&&A.monitorRunDependencies(X),0==X&&(null!==O&&(clearInterval(O),O=null),j)){var g=j;j=null,g()}}function z(I){A.onAbort&&A.onAbort(I),e(I="Aborted("+I+")"),n=!0,I+=". Build with -sASSERTIONS for more info.";var g=new WebAssembly.RuntimeError(I);throw B(g),g}var _,$,AA,IA,gA="data:application/octet-stream;base64,";function BA(A){return A.startsWith(gA)}function CA(A){return A.startsWith("file://")}function QA(A){try{if(A==_&&r)return new Uint8Array(r);var I=pI(A);if(I)return I;if(E)return E(A);throw"both async and sync fetching of the wasm failed"}catch(A){z(A)}}BA(_="data:application/octet-stream;base64,")||($=_,_=A.locateFile?A.locateFile($,y):y+$);var EA={62256:(A,I,g)=>{var B=u(A),C=u(I),Q=u(g);console.log(C+B,Q)},62395:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.log(Q+C,E,i)},62573:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.log(Q+C,E,i)},62751:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.log(Q+C,E,i)},62929:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.log(Q+C,E,i)},63107:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g);console.log(Q+C,E,B)},63250:(A,I,g)=>{var B=u(A),C=u(I),Q=u(g);console.error(C+B,Q)},63393:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.error(Q+C,E,i)},63575:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.error(Q+C,E,i)},63757:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.error(Q+C,E,i)},63939:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.error(Q+C,E,i)},64121:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g);console.error(Q+C,E,B)},64268:(A,I,g)=>{var B=u(A),C=u(I),Q=u(g);console.warn(C+B,Q)},64408:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.warn(Q+C,E,i)},64589:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.warn(Q+C,E,i)},64770:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.warn(Q+C,E,i)},64951:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g),i=u(B);console.warn(Q+C,E,i)},65132:(A,I,g,B)=>{var C=u(A),Q=u(I),E=u(g);console.warn(Q+C,E,B)},65278:function(){var A=arguments,I=0;artoolkitNFT.NFTMarkerInfo||(artoolkitNFT.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkitNFT.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65984:function(){var A=arguments,I=0;artoolkitNFT.NFTMarkerInfo||(artoolkitNFT.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkitNFT.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},66613:(A,I,g,B,C,Q)=>{artoolkitNFT.frameMalloc||(artoolkitNFT.frameMalloc={});var E=artoolkitNFT.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q}};function iA(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function oA(I){for(;I.length>0;)I.shift()(A)}function DA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){d[this.ptr+4>>2]=A},this.get_type=function(){return d[this.ptr+4>>2]},this.set_destructor=function(A){d[this.ptr+8>>2]=A},this.get_destructor=function(){return d[this.ptr+8>>2]},this.set_refcount=function(A){L[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=U[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=L[this.ptr>>2];L[this.ptr>>2]=A+1},this.release_ref=function(){var A=L[this.ptr>>2];return L[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){d[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return d[this.ptr+16>>2]},this.get_exception_ptr=function(){if(jI(this.get_type()))return d[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var aA={isAbs:A=>"/"===A.charAt(0),splitPath:A=>/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1),normalizeArray:(A,I)=>{for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:A=>{var I=aA.isAbs(A),g="/"===A.substr(-1);return(A=aA.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:A=>{var I=aA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:A=>{if("/"===A)return"/";var I=(A=(A=aA.normalize(A)).replace(/\\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return aA.normalize(A.join("/"))},join2:(A,I)=>aA.normalize(A+"/"+I)},wA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:RA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=aA.isAbs(B)}return(I?"/":"")+(A=aA.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||"."},relative:(A,I)=>{function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=wA.resolve(A).substr(1),I=wA.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}};function sA(A,I,g){var B=g>0?g:W(A)+1,C=new Array(B),Q=p(A,C,0,C.length);return I&&(C.length=Q),C}var GA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){GA.ttys[A]={input:[],output:[],ops:I},RA.registerDevice(A,GA.stream_ops)},stream_ops:{open:function(A){var I=GA.ttys[A.node.rdev];if(!I)throw new RA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new RA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new RA.ErrnoError(29)}if(void 0===i&&0===Q)throw new RA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new RA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new RA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(F){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes("EOF"))throw A;B=0}I=B>0?g.slice(0,B).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\\n");if(!I)return null;A.input=sA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(M(f(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(M(f(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(e(f(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(e(f(A.output,0)),A.output=[])}}};function hA(A){z()}var tA={ops_table:null,mount:function(A){return tA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(RA.isBlkdev(g)||RA.isFIFO(g))throw new RA.ErrnoError(63);tA.ops_table||(tA.ops_table={dir:{node:{getattr:tA.node_ops.getattr,setattr:tA.node_ops.setattr,lookup:tA.node_ops.lookup,mknod:tA.node_ops.mknod,rename:tA.node_ops.rename,unlink:tA.node_ops.unlink,rmdir:tA.node_ops.rmdir,readdir:tA.node_ops.readdir,symlink:tA.node_ops.symlink},stream:{llseek:tA.stream_ops.llseek}},file:{node:{getattr:tA.node_ops.getattr,setattr:tA.node_ops.setattr},stream:{llseek:tA.stream_ops.llseek,read:tA.stream_ops.read,write:tA.stream_ops.write,allocate:tA.stream_ops.allocate,mmap:tA.stream_ops.mmap,msync:tA.stream_ops.msync}},link:{node:{getattr:tA.node_ops.getattr,setattr:tA.node_ops.setattr,readlink:tA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:tA.node_ops.getattr,setattr:tA.node_ops.setattr},stream:RA.chrdev_stream_ops}});var C=RA.createNode(A,I,g,B);return RA.isDir(C.mode)?(C.node_ops=tA.ops_table.dir.node,C.stream_ops=tA.ops_table.dir.stream,C.contents={}):RA.isFile(C.mode)?(C.node_ops=tA.ops_table.file.node,C.stream_ops=tA.ops_table.file.stream,C.usedBytes=0,C.contents=null):RA.isLink(C.mode)?(C.node_ops=tA.ops_table.link.node,C.stream_ops=tA.ops_table.link.stream):RA.isChrdev(C.mode)&&(C.node_ops=tA.ops_table.chrdev.node,C.stream_ops=tA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=RA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,RA.isDir(A.mode)?I.size=4096:RA.isFile(A.mode)?I.size=A.usedBytes:RA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&tA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw RA.genericErrors[44]},mknod:function(A,I,g,B){return tA.createNode(A,I,g,B)},rename:function(A,I,g){if(RA.isDir(A.mode)){var B;try{B=RA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new RA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=RA.lookupNode(A,I);for(var B in g.contents)throw new RA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=tA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!RA.isLink(A.mode))throw new RA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===U.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(tA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&RA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new RA.ErrnoError(28);return B},allocate:function(A,I,g){tA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!RA.isFile(A.node.mode))throw new RA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==k){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=hA()))throw new RA.ErrnoError(48);U.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){if(!RA.isFile(A.node.mode))throw new RA.ErrnoError(43);return 2&C||tA.stream_ops.write(A,I,0,B,g,!1),0}}},RA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(A,I={})=>{if(!(A=wA.resolve(RA.cwd(),A)))return{path:"",node:null};if((I=Object.assign({follow_mount:!0,recurse_count:0},I)).recurse_count>8)throw new RA.ErrnoError(32);for(var g=aA.normalizeArray(A.split("/").filter((A=>!!A)),!1),B=RA.root,C="/",Q=0;Q<g.length;Q++){var E=Q===g.length-1;if(E&&I.parent)break;if(B=RA.lookupNode(B,g[Q]),C=aA.join2(C,g[Q]),RA.isMountpoint(B)&&(!E||E&&I.follow_mount)&&(B=B.mounted.root),!E||I.follow)for(var i=0;RA.isLink(B.mode);){var o=RA.readlink(C);if(C=wA.resolve(aA.dirname(C),o),B=RA.lookupPath(C,{recurse_count:I.recurse_count+1}).node,i++>40)throw new RA.ErrnoError(32)}}return{path:C,node:B}},getPath:A=>{for(var I;;){if(RA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:(A,I)=>{for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%RA.nameTable.length},hashAddNode:A=>{var I=RA.hashName(A.parent.id,A.name);A.name_next=RA.nameTable[I],RA.nameTable[I]=A},hashRemoveNode:A=>{var I=RA.hashName(A.parent.id,A.name);if(RA.nameTable[I]===A)RA.nameTable[I]=A.name_next;else for(var g=RA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:(A,I)=>{var g=RA.mayLookup(A);if(g)throw new RA.ErrnoError(g,A);for(var B=RA.hashName(A.id,I),C=RA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return RA.lookup(A,I)},createNode:(A,I,g,B)=>{var C=new RA.FSNode(A,I,g,B);return RA.hashAddNode(C),C},destroyNode:A=>{RA.hashRemoveNode(A)},isRoot:A=>A===A.parent,isMountpoint:A=>!!A.mounted,isFile:A=>32768==(61440&A),isDir:A=>16384==(61440&A),isLink:A=>40960==(61440&A),isChrdev:A=>8192==(61440&A),isBlkdev:A=>24576==(61440&A),isFIFO:A=>4096==(61440&A),isSocket:A=>49152==(49152&A),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:A=>{var I=RA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:A=>{var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:(A,I)=>RA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2,mayLookup:A=>RA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2),mayCreate:(A,I)=>{try{return RA.lookupNode(A,I),20}catch(A){}return RA.nodePermissions(A,"wx")},mayDelete:(A,I,g)=>{var B;try{B=RA.lookupNode(A,I)}catch(A){return A.errno}var C=RA.nodePermissions(A,"wx");if(C)return C;if(g){if(!RA.isDir(B.mode))return 54;if(RA.isRoot(B)||RA.getPath(B)===RA.cwd())return 10}else if(RA.isDir(B.mode))return 31;return 0},mayOpen:(A,I)=>A?RA.isLink(A.mode)?32:RA.isDir(A.mode)&&("r"!==RA.flagsToPermissionString(I)||512&I)?31:RA.nodePermissions(A,RA.flagsToPermissionString(I)):44,MAX_OPEN_FDS:4096,nextfd:(A=0,I=RA.MAX_OPEN_FDS)=>{for(var g=A;g<=I;g++)if(!RA.streams[g])return g;throw new RA.ErrnoError(33)},getStream:A=>RA.streams[A],createStream:(A,I,g)=>{RA.FSStream||(RA.FSStream=function(){this.shared={}},RA.FSStream.prototype={},Object.defineProperties(RA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new RA.FSStream,A);var B=RA.nextfd(I,g);return A.fd=B,RA.streams[B]=A,A},closeStream:A=>{RA.streams[A]=null},chrdev_stream_ops:{open:A=>{var I=RA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:()=>{throw new RA.ErrnoError(70)}},major:A=>A>>8,minor:A=>255&A,makedev:(A,I)=>A<<8|I,registerDevice:(A,I)=>{RA.devices[A]={stream_ops:I}},getDevice:A=>RA.devices[A],getMounts:A=>{for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:(A,I)=>{"function"==typeof A&&(I=A,A=!1),RA.syncFSRequests++,RA.syncFSRequests>1&&e("warning: "+RA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=RA.getMounts(RA.root.mount),B=0;function C(A){return RA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((I=>{if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:(A,I,g)=>{var B,C="/"===g,Q=!g;if(C&&RA.root)throw new RA.ErrnoError(10);if(!C&&!Q){var E=RA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,RA.isMountpoint(B))throw new RA.ErrnoError(10);if(!RA.isDir(B.mode))throw new RA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?RA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:A=>{var I=RA.lookupPath(A,{follow_mount:!1});if(!RA.isMountpoint(I.node))throw new RA.ErrnoError(28);var g=I.node,B=g.mounted,C=RA.getMounts(B);Object.keys(RA.nameTable).forEach((A=>{for(var I=RA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&RA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:(A,I)=>A.node_ops.lookup(A,I),mknod:(A,I,g)=>{var B=RA.lookupPath(A,{parent:!0}).node,C=aA.basename(A);if(!C||"."===C||".."===C)throw new RA.ErrnoError(28);var Q=RA.mayCreate(B,C);if(Q)throw new RA.ErrnoError(Q);if(!B.node_ops.mknod)throw new RA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:(A,I)=>(I=void 0!==I?I:438,I&=4095,I|=32768,RA.mknod(A,I,0)),mkdir:(A,I)=>(I=void 0!==I?I:511,I&=1023,I|=16384,RA.mknod(A,I,0)),mkdirTree:(A,I)=>{for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{RA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:(A,I,g)=>(void 0===g&&(g=I,I=438),I|=8192,RA.mknod(A,I,g)),symlink:(A,I)=>{if(!wA.resolve(A))throw new RA.ErrnoError(44);var g=RA.lookupPath(I,{parent:!0}).node;if(!g)throw new RA.ErrnoError(44);var B=aA.basename(I),C=RA.mayCreate(g,B);if(C)throw new RA.ErrnoError(C);if(!g.node_ops.symlink)throw new RA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:(A,I)=>{var g,B,C=aA.dirname(A),Q=aA.dirname(I),E=aA.basename(A),i=aA.basename(I);if(g=RA.lookupPath(A,{parent:!0}).node,B=RA.lookupPath(I,{parent:!0}).node,!g||!B)throw new RA.ErrnoError(44);if(g.mount!==B.mount)throw new RA.ErrnoError(75);var o,D=RA.lookupNode(g,E),a=wA.relative(A,Q);if("."!==a.charAt(0))throw new RA.ErrnoError(28);if("."!==(a=wA.relative(I,C)).charAt(0))throw new RA.ErrnoError(55);try{o=RA.lookupNode(B,i)}catch(A){}if(D!==o){var w=RA.isDir(D.mode),s=RA.mayDelete(g,E,w);if(s)throw new RA.ErrnoError(s);if(s=o?RA.mayDelete(B,i,w):RA.mayCreate(B,i))throw new RA.ErrnoError(s);if(!g.node_ops.rename)throw new RA.ErrnoError(63);if(RA.isMountpoint(D)||o&&RA.isMountpoint(o))throw new RA.ErrnoError(10);if(B!==g&&(s=RA.nodePermissions(g,"w")))throw new RA.ErrnoError(s);RA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{RA.hashAddNode(D)}}},rmdir:A=>{var I=RA.lookupPath(A,{parent:!0}).node,g=aA.basename(A),B=RA.lookupNode(I,g),C=RA.mayDelete(I,g,!0);if(C)throw new RA.ErrnoError(C);if(!I.node_ops.rmdir)throw new RA.ErrnoError(63);if(RA.isMountpoint(B))throw new RA.ErrnoError(10);I.node_ops.rmdir(I,g),RA.destroyNode(B)},readdir:A=>{var I=RA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new RA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:A=>{var I=RA.lookupPath(A,{parent:!0}).node;if(!I)throw new RA.ErrnoError(44);var g=aA.basename(A),B=RA.lookupNode(I,g),C=RA.mayDelete(I,g,!1);if(C)throw new RA.ErrnoError(C);if(!I.node_ops.unlink)throw new RA.ErrnoError(63);if(RA.isMountpoint(B))throw new RA.ErrnoError(10);I.node_ops.unlink(I,g),RA.destroyNode(B)},readlink:A=>{var I=RA.lookupPath(A).node;if(!I)throw new RA.ErrnoError(44);if(!I.node_ops.readlink)throw new RA.ErrnoError(28);return wA.resolve(RA.getPath(I.parent),I.node_ops.readlink(I))},stat:(A,I)=>{var g=RA.lookupPath(A,{follow:!I}).node;if(!g)throw new RA.ErrnoError(44);if(!g.node_ops.getattr)throw new RA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:A=>RA.stat(A,!0),chmod:(A,I,g)=>{var B;if(!(B="string"==typeof A?RA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new RA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:(A,I)=>{RA.chmod(A,I,!0)},fchmod:(A,I)=>{var g=RA.getStream(A);if(!g)throw new RA.ErrnoError(8);RA.chmod(g.node,I)},chown:(A,I,g,B)=>{var C;if(!(C="string"==typeof A?RA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new RA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:(A,I,g)=>{RA.chown(A,I,g,!0)},fchown:(A,I,g)=>{var B=RA.getStream(A);if(!B)throw new RA.ErrnoError(8);RA.chown(B.node,I,g)},truncate:(A,I)=>{if(I<0)throw new RA.ErrnoError(28);var g;if(!(g="string"==typeof A?RA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new RA.ErrnoError(63);if(RA.isDir(g.mode))throw new RA.ErrnoError(31);if(!RA.isFile(g.mode))throw new RA.ErrnoError(28);var B=RA.nodePermissions(g,"w");if(B)throw new RA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:(A,I)=>{var g=RA.getStream(A);if(!g)throw new RA.ErrnoError(8);if(0==(2097155&g.flags))throw new RA.ErrnoError(28);RA.truncate(g.node,I)},utime:(A,I,g)=>{var B=RA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:(I,g,B)=>{if(""===I)throw new RA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?RA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==typeof I)C=I;else{I=aA.normalize(I);try{C=RA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new RA.ErrnoError(20)}else C=RA.mknod(I,B,0),Q=!0;if(!C)throw new RA.ErrnoError(44);if(RA.isChrdev(C.mode)&&(g&=-513),65536&g&&!RA.isDir(C.mode))throw new RA.ErrnoError(54);if(!Q){var E=RA.mayOpen(C,g);if(E)throw new RA.ErrnoError(E)}512&g&&!Q&&RA.truncate(C,0),g&=-131713;var i=RA.createStream({node:C,path:RA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(RA.readFiles||(RA.readFiles={}),I in RA.readFiles||(RA.readFiles[I]=1)),i},close:A=>{if(RA.isClosed(A))throw new RA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{RA.closeStream(A.fd)}A.fd=null},isClosed:A=>null===A.fd,llseek:(A,I,g)=>{if(RA.isClosed(A))throw new RA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new RA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new RA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:(A,I,g,B,C)=>{if(B<0||C<0)throw new RA.ErrnoError(28);if(RA.isClosed(A))throw new RA.ErrnoError(8);if(1==(2097155&A.flags))throw new RA.ErrnoError(8);if(RA.isDir(A.node.mode))throw new RA.ErrnoError(31);if(!A.stream_ops.read)throw new RA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new RA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:(A,I,g,B,C,Q)=>{if(B<0||C<0)throw new RA.ErrnoError(28);if(RA.isClosed(A))throw new RA.ErrnoError(8);if(0==(2097155&A.flags))throw new RA.ErrnoError(8);if(RA.isDir(A.node.mode))throw new RA.ErrnoError(31);if(!A.stream_ops.write)throw new RA.ErrnoError(28);A.seekable&&1024&A.flags&&RA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new RA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:(A,I,g)=>{if(RA.isClosed(A))throw new RA.ErrnoError(8);if(I<0||g<=0)throw new RA.ErrnoError(28);if(0==(2097155&A.flags))throw new RA.ErrnoError(8);if(!RA.isFile(A.node.mode)&&!RA.isDir(A.node.mode))throw new RA.ErrnoError(43);if(!A.stream_ops.allocate)throw new RA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:(A,I,g,B,C)=>{if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new RA.ErrnoError(2);if(1==(2097155&A.flags))throw new RA.ErrnoError(2);if(!A.stream_ops.mmap)throw new RA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:(A,I,g,B,C)=>A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0,munmap:A=>0,ioctl:(A,I,g)=>{if(!A.stream_ops.ioctl)throw new RA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:(A,I={})=>{if(I.flags=I.flags||0,I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error(\'Invalid encoding type "\'+I.encoding+\'"\');var g,B=RA.open(A,I.flags),C=RA.stat(A).size,Q=new Uint8Array(C);return RA.read(B,Q,0,C,0),"utf8"===I.encoding?g=f(Q,0):"binary"===I.encoding&&(g=Q),RA.close(B),g},writeFile:(A,I,g={})=>{g.flags=g.flags||577;var B=RA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(W(I)+1),Q=p(I,C,0,C.length);RA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");RA.write(B,I,0,I.byteLength,void 0,g.canOwn)}RA.close(B)},cwd:()=>RA.currentPath,chdir:A=>{var I=RA.lookupPath(A,{follow:!0});if(null===I.node)throw new RA.ErrnoError(44);if(!RA.isDir(I.node.mode))throw new RA.ErrnoError(54);var g=RA.nodePermissions(I.node,"x");if(g)throw new RA.ErrnoError(g);RA.currentPath=I.path},createDefaultDirectories:()=>{RA.mkdir("/tmp"),RA.mkdir("/home"),RA.mkdir("/home/web_user")},createDefaultDevices:()=>{RA.mkdir("/dev"),RA.registerDevice(RA.makedev(1,3),{read:()=>0,write:(A,I,g,B,C)=>B}),RA.mkdev("/dev/null",RA.makedev(1,3)),GA.register(RA.makedev(5,0),GA.default_tty_ops),GA.register(RA.makedev(6,0),GA.default_tty1_ops),RA.mkdev("/dev/tty",RA.makedev(5,0)),RA.mkdev("/dev/tty1",RA.makedev(6,0));var A=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return()=>(crypto.getRandomValues(A),A[0])}if(F)try{var I=g(567);return()=>I.randomBytes(1)[0]}catch(A){}return()=>z("randomDevice")}();RA.createDevice("/dev","random",A),RA.createDevice("/dev","urandom",A),RA.mkdir("/dev/shm"),RA.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{RA.mkdir("/proc");var A=RA.mkdir("/proc/self");RA.mkdir("/proc/self/fd"),RA.mount({mount:()=>{var I=RA.createNode(A,"fd",16895,73);return I.node_ops={lookup:(A,I)=>{var g=+I,B=RA.getStream(g);if(!B)throw new RA.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>B.path}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams:()=>{A.stdin?RA.createDevice("/dev","stdin",A.stdin):RA.symlink("/dev/tty","/dev/stdin"),A.stdout?RA.createDevice("/dev","stdout",null,A.stdout):RA.symlink("/dev/tty","/dev/stdout"),A.stderr?RA.createDevice("/dev","stderr",null,A.stderr):RA.symlink("/dev/tty1","/dev/stderr"),RA.open("/dev/stdin",0),RA.open("/dev/stdout",1),RA.open("/dev/stderr",1)},ensureErrnoError:()=>{RA.ErrnoError||(RA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},RA.ErrnoError.prototype=new Error,RA.ErrnoError.prototype.constructor=RA.ErrnoError,[44].forEach((A=>{RA.genericErrors[A]=new RA.ErrnoError(A),RA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:()=>{RA.ensureErrnoError(),RA.nameTable=new Array(4096),RA.mount(tA,{},"/"),RA.createDefaultDirectories(),RA.createDefaultDevices(),RA.createSpecialDirectories(),RA.filesystems={MEMFS:tA}},init:(I,g,B)=>{RA.init.initialized=!0,RA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,RA.createStandardStreams()},quit:()=>{RA.init.initialized=!1;for(var A=0;A<RA.streams.length;A++){var I=RA.streams[A];I&&RA.close(I)}},getMode:(A,I)=>{var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:(A,I)=>{var g=RA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:(A,I)=>{try{A=(B=RA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=RA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=aA.basename(A),B=RA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:(A,I,g,B)=>{A="string"==typeof A?A:RA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=aA.join2(A,Q);try{RA.mkdir(E)}catch(A){}A=E}}return E},createFile:(A,I,g,B,C)=>{var Q=aA.join2("string"==typeof A?A:RA.getPath(A),I),E=RA.getMode(B,C);return RA.create(Q,E)},createDataFile:(A,I,g,B,C,Q)=>{var E=I;A&&(A="string"==typeof A?A:RA.getPath(A),E=I?aA.join2(A,I):A);var i=RA.getMode(B,C),o=RA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}RA.chmod(o,146|i);var s=RA.open(o,577);RA.write(s,g,0,g.length,0,Q),RA.close(s),RA.chmod(o,i)}return o},createDevice:(A,I,g,B)=>{var C=aA.join2("string"==typeof A?A:RA.getPath(A),I),Q=RA.getMode(!!g,!!B);RA.createDevice.major||(RA.createDevice.major=64);var E=RA.makedev(RA.createDevice.major++,0);return RA.registerDevice(E,{open:A=>{A.seekable=!1},close:A=>{B&&B.buffer&&B.buffer.length&&B(10)},read:(A,I,B,C,Q)=>{for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new RA.ErrnoError(29)}if(void 0===o&&0===E)throw new RA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:(A,I,g,C,Q)=>{for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new RA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),RA.mkdev(C,Q,E)},forceLoadFile:A=>{if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!C)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=sA(C(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new RA.ErrnoError(29)}},createLazyFile:(A,I,g,B,C)=>{function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn\'t load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((A=>{var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=((A,I)=>{if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),C.responseType="arraybuffer",C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn\'t load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):sA(C.responseText||"",!0)})(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,M("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!R)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=RA.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(o.stream_ops).forEach((A=>{var I=o.stream_ops[A];D[A]=function(){return RA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=(A,I,g,B,C)=>(RA.forceLoadFile(o),a(A,I,g,B,C)),D.mmap=(A,I,g,B,C)=>{RA.forceLoadFile(o);var Q=hA();if(!Q)throw new RA.ErrnoError(48);return a(A,U,Q,I,g),{ptr:Q,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:(A,I,g,B,C,E,i,o,D,a)=>{var w=I?wA.resolve(aA.join2(A,I)):A;function s(g){function Q(g){a&&a(),o||RA.createDataFile(A,I,g,B,C,D),E&&E(),P()}Browser.handledByPreloadPlugin(g,w,Q,(()=>{i&&i(),P()}))||Q(g)}v(),"string"==typeof g?function(A,I,g,B){var C="al "+A;Q(A,(I=>{c(I,\'Loading data file "\'+A+\'" failed (no arrayBuffer).\'),s(new Uint8Array(I)),C&&P()}),(I=>{if(!g)throw\'Loading data file "\'+A+\'" failed.\';g()})),C&&v()}(g,0,i):s(g)},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(A,I,g)=>{I=I||(()=>{}),g=g||(()=>{});var B=RA.indexedDB();try{var C=B.open(RA.DB_NAME(),RA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=()=>{M("creating db"),C.result.createObjectStore(RA.DB_STORE_NAME)},C.onsuccess=()=>{var B=C.result.transaction([RA.DB_STORE_NAME],"readwrite"),Q=B.objectStore(RA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((A=>{var I=Q.put(RA.analyzePath(A).object.contents,A);I.onsuccess=()=>{++E+i==o&&D()},I.onerror=()=>{i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:(A,I,g)=>{I=I||(()=>{}),g=g||(()=>{});var B=RA.indexedDB();try{var C=B.open(RA.DB_NAME(),RA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=()=>{var B=C.result;try{var Q=B.transaction([RA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(RA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((A=>{var I=E.get(A);I.onsuccess=()=>{RA.analyzePath(A).exists&&RA.unlink(A),RA.createDataFile(aA.dirname(A),aA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=()=>{o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},FA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(aA.isAbs(I))return I;var B;if(B=-100===A?RA.cwd():FA.getStreamFromFD(A).path,0==I.length){if(!g)throw new RA.ErrnoError(44);return B}return aA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&aA.normalize(I)!==aA.normalize(RA.getPath(A.node)))return-54;throw A}return L[g>>2]=B.dev,L[g+8>>2]=B.ino,L[g+12>>2]=B.mode,d[g+16>>2]=B.nlink,L[g+20>>2]=B.uid,L[g+24>>2]=B.gid,L[g+28>>2]=B.rdev,IA=[B.size>>>0,(AA=B.size,+Math.abs(AA)>=1?AA>0?(0|Math.min(+Math.floor(AA/4294967296),4294967295))>>>0:~~+Math.ceil((AA-+(~~AA>>>0))/4294967296)>>>0:0)],L[g+40>>2]=IA[0],L[g+44>>2]=IA[1],L[g+48>>2]=4096,L[g+52>>2]=B.blocks,IA=[Math.floor(B.atime.getTime()/1e3)>>>0,(AA=Math.floor(B.atime.getTime()/1e3),+Math.abs(AA)>=1?AA>0?(0|Math.min(+Math.floor(AA/4294967296),4294967295))>>>0:~~+Math.ceil((AA-+(~~AA>>>0))/4294967296)>>>0:0)],L[g+56>>2]=IA[0],L[g+60>>2]=IA[1],d[g+64>>2]=0,IA=[Math.floor(B.mtime.getTime()/1e3)>>>0,(AA=Math.floor(B.mtime.getTime()/1e3),+Math.abs(AA)>=1?AA>0?(0|Math.min(+Math.floor(AA/4294967296),4294967295))>>>0:~~+Math.ceil((AA-+(~~AA>>>0))/4294967296)>>>0:0)],L[g+72>>2]=IA[0],L[g+76>>2]=IA[1],d[g+80>>2]=0,IA=[Math.floor(B.ctime.getTime()/1e3)>>>0,(AA=Math.floor(B.ctime.getTime()/1e3),+Math.abs(AA)>=1?AA>0?(0|Math.min(+Math.floor(AA/4294967296),4294967295))>>>0:~~+Math.ceil((AA-+(~~AA>>>0))/4294967296)>>>0:0)],L[g+88>>2]=IA[0],L[g+92>>2]=IA[1],d[g+96>>2]=0,IA=[B.ino>>>0,(AA=B.ino,+Math.abs(AA)>=1?AA>0?(0|Math.min(+Math.floor(AA/4294967296),4294967295))>>>0:~~+Math.ceil((AA-+(~~AA>>>0))/4294967296)>>>0:0)],L[g+104>>2]=IA[0],L[g+108>>2]=IA[1],0},doMsync:function(A,I,g,B,C){var Q=J.slice(A,A+g);RA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return FA.varargs+=4,L[FA.varargs-4>>2]},getStr:function(A){return u(A)},getStreamFromFD:function(A){var I=RA.getStream(A);if(!I)throw new RA.ErrnoError(8);return I}},yA={};function rA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function MA(A){return this.fromWireType(L[A>>2])}var eA={},SA={},NA={};function nA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?"_"+A:A}function cA(A,I){return A=nA(A),new Function("body","return function "+A+\'() {\\n    "use strict";    return body.apply(this, arguments);\\n};\\n\')(I)}function kA(A,I){var g=cA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\\n"+g.replace(/^Error(:[^\\n]*)?\\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var UA=void 0;function JA(A){throw new UA(A)}function KA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&JA("Mismatched type converter count");for(var C=0;C<A.length;++C)HA(A[C],B[C])}A.forEach((function(A){NA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach(((A,I)=>{SA.hasOwnProperty(A)?C[I]=SA[A]:(Q.push(A),eA.hasOwnProperty(A)||(eA[A]=[]),eA[A].push((()=>{C[I]=SA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function YA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var LA=void 0;function dA(A){for(var I="",g=A;J[g];)I+=LA[J[g++]];return I}var lA=void 0;function qA(A){throw new lA(A)}function HA(A,I,g={}){if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||qA(\'type "\'+B+\'" must have a positive integer typeid pointer\'),SA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;qA("Cannot register type \'"+B+"\' twice")}if(SA[A]=I,delete NA[A],eA.hasOwnProperty(A)){var C=eA[A];delete eA[A],C.forEach((A=>A()))}}function fA(A){qA(A.$$.ptrType.registeredClass.name+" instance already deleted")}var uA=!1;function pA(A){}function WA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function bA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=bA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var mA={},ZA=[];function xA(){for(;ZA.length;){var A=ZA.pop();A.$$.deleteScheduled=!1,A.delete()}}var VA=void 0,TA={};function XA(A,I){return I.ptrType&&I.ptr||JA("makeClassHandle requires ptr and ptrType"),!!I.smartPtrType!=!!I.smartPtr&&JA("Both smartPtrType and smartPtr must be specified"),I.count={value:1},OA(Object.create(A,{$$:{value:I}}))}function OA(A){return"undefined"==typeof FinalizationRegistry?(OA=A=>A,A):(uA=new FinalizationRegistry((A=>{WA(A.$$)})),OA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};uA.register(A,g,A)}return A},pA=A=>uA.unregister(A),OA(A))}function jA(){}function vA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||qA("Function \'"+g+"\' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function PA(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&qA("Cannot register public name \'"+I+"\' twice"),vA(A,I,I),A.hasOwnProperty(B)&&qA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function zA(A,I,g,B,C,Q,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=C,this.getActualType=Q,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function _A(A,I,g){for(;I!==g;)I.upcast||qA("Expected null or instance of "+g.name+", got an instance of "+I.name),A=I.upcast(A),I=I.baseClass;return A}function $A(A,I){if(null===I)return this.isReference&&qA("null is not a valid "+this.name),0;I.$$||qA(\'Cannot pass "\'+RI(I)+\'" as a \'+this.name),I.$$.ptr||qA("Cannot pass deleted object as a pointer of type "+this.name);var g=I.$$.ptrType.registeredClass;return _A(I.$$.ptr,g,this.registeredClass)}function AI(A,I){var g;if(null===I)return this.isReference&&qA("null is not a valid "+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||qA(\'Cannot pass "\'+RI(I)+\'" as a \'+this.name),I.$$.ptr||qA("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&I.$$.ptrType.isConst&&qA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);var B=I.$$.ptrType.registeredClass;if(g=_A(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&qA("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:qA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var C=I.clone();g=this.rawShare(g,tI.toHandle((function(){C.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:qA("Unsupporting sharing policy")}return g}function II(A,I){if(null===I)return this.isReference&&qA("null is not a valid "+this.name),0;I.$$||qA(\'Cannot pass "\'+RI(I)+\'" as a \'+this.name),I.$$.ptr||qA("Cannot pass deleted object as a pointer of type "+this.name),I.$$.ptrType.isConst&&qA("Cannot convert argument of type "+I.$$.ptrType.name+" to parameter type "+this.name);var g=I.$$.ptrType.registeredClass;return _A(I.$$.ptr,g,this.registeredClass)}function gI(A,I,g,B,C,Q,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=C,this.pointeeType=Q,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,C||void 0!==I.baseClass?this.toWireType=AI:B?(this.toWireType=$A,this.destructorFunction=null):(this.toWireType=II,this.destructorFunction=null)}function BI(I,g,B){A.hasOwnProperty(I)||JA("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function CI(A){return m.get(A)}function QI(I,g,B){return I.includes("j")?function(I,g,B){var C=A["dynCall_"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):CI(g).apply(null,B)}function EI(A,I){var g,B,C,Q=(A=dA(A)).includes("j")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),QI(g,B,C)}):CI(I);return"function"!=typeof Q&&qA("unknown function pointer with signature "+A+": "+I),Q}var iI=void 0;function oI(A){var I=VI(A),g=dA(I);return ZI(I),g}function DI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||SA[I]||(NA[I]?NA[I].forEach(A):(g.push(I),B[I]=!0))})),new iI(A+": "+g.map(oI).join([", "]))}function aI(A,I){for(var g=[],B=0;B<A;B++)g.push(d[I+4*B>>2]);return g}function wI(A,I,g,B,C){var Q=I.length;Q<2&&qA("argTypes array size mismatch! Must at least get return value and \'this\' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D="void"!==I[0].name,a="",w="";for(o=0;o<Q-2;++o)a+=(0!==o?", ":"")+"arg"+o,w+=(0!==o?", ":"")+"arg"+o+"Wired";var s="return function "+nA(A)+"("+a+") {\\nif (arguments.length !== "+(Q-2)+") {\\nthrowBindingError(\'function "+A+" called with \' + arguments.length + \' arguments, expected "+(Q-2)+" args!\');\\n}\\n";i&&(s+="var destructors = [];\\n");var G=i?"destructors":"null",h=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],t=[qA,B,C,rA,I[0],I[1]];for(E&&(s+="var thisWired = classParam.toWireType("+G+", this);\\n"),o=0;o<Q-2;++o)s+="var arg"+o+"Wired = argType"+o+".toWireType("+G+", arg"+o+"); // "+I[o+2].name+"\\n",h.push("argType"+o),t.push(I[o+2]);if(E&&(w="thisWired"+(w.length>0?", ":"")+w),s+=(D?"var rv = ":"")+"invoker(fn"+(w.length>0?", ":"")+w+");\\n",i)s+="runDestructors(destructors);\\n";else for(o=E?1:2;o<I.length;++o){var R=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(s+=R+"_dtor("+R+"); // "+I[o].name+"\\n",h.push(R+"_dtor"),t.push(I[o].destructorFunction))}return D&&(s+="var ret = retType.fromWireType(rv);\\nreturn ret;\\n"),s+="}\\n",h.push(s),function(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+typeof A+" which is not a function");var g=cA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}(Function,h).apply(null,t)}var sI=[],GI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function hI(A){A>4&&0==--GI[A].refcount&&(GI[A]=void 0,sI.push(A))}var tI={toValue:A=>(A||qA("Cannot use deleted val. handle = "+A),GI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=sI.length?sI.pop():GI.length;return GI[I]={refcount:1,value:A},I}}};function RI(A){if(null===A)return"null";var I=typeof A;return"object"===I||"array"===I||"function"===I?A.toString():""+A}function FI(A,I){switch(I){case 2:return function(A){return this.fromWireType(l[A>>2])};case 3:return function(A){return this.fromWireType(q[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function yI(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return J[A]};case 1:return g?function(A){return K[A>>1]}:function(A){return Y[A>>1]};case 2:return g?function(A){return L[A>>2]}:function(A){return d[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var rI="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function MI(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&Y[B];)++B;if((g=B<<1)-A>32&&rI)return rI.decode(J.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=K[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function eI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);K[I>>1]=E,I+=2}return K[I>>1]=0,I-B}function SI(A){return 2*A.length}function NI(A,I){for(var g=0,B="";!(g>=I/4);){var C=L[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function nI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),L[I>>2]=E,(I+=4)+4>C)break}return L[I>>2]=0,I-B}function cI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function kI(A){var I=W(A)+1,g=mI(I);return g&&p(A,U,g,I),g}var UI=[];function JI(A){try{return S.grow(A-k.byteLength+65535>>>16),b(S.buffer),1}catch(A){}}var KI={};function YI(){if(!YI.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:G||"./this.program"};for(var I in KI)void 0===KI[I]?delete A[I]:A[I]=KI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);YI.strings=g}return YI.strings}function LI(A){return A%4==0&&(A%100!=0||A%400==0)}var dI=[31,29,31,30,31,30,31,31,30,31,30,31],lI=[31,28,31,30,31,30,31,31,30,31,30,31];function qI(A,I,g,B){var C=L[B+40>>2],Q={tm_sec:L[B>>2],tm_min:L[B+4>>2],tm_hour:L[B+8>>2],tm_mday:L[B+12>>2],tm_mon:L[B+16>>2],tm_year:L[B+20>>2],tm_wday:L[B+24>>2],tm_yday:L[B+28>>2],tm_isdst:L[B+32>>2],tm_gmtoff:L[B+36>>2],tm_zone:C?u(C):""},E=u(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,"0")}function G(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function h(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function t(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=LI(g.getFullYear()),C=g.getMonth(),Q=(B?dI:lI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=h(g),Q=h(B);return G(C,I)<=0?G(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return s((A.tm_year+1900)/100|0,2)},"%d":function(A){return s(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return t(A).toString().substring(2)},"%G":function(A){return t(A)},"%H":function(A){return s(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},"%j":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(LI(A.tm_year+1900)?dI:lI,A.tm_mon-1),3)},"%m":function(A){return s(A.tm_mon+1,2)},"%M":function(A){return s(A.tm_min,2)},"%n":function(){return"\\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return s(A.tm_sec,2)},"%t":function(){return"\\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&LI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&LI(A.tm_year%400-1))&&I++}return s(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\\0\\0"),R)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),R[o](Q)));var F=sA(E=E.replace(/\\0\\0/g,"%"),!1);return F.length>I?0:(function(A,I){U.set(A,I)}(F,A),F.length-1)}var HI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=RA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(HI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return RA.isDir(this.mode)}},isDevice:{get:function(){return RA.isChrdev(this.mode)}}}),RA.FSNode=HI,RA.staticInit(),UA=A.InternalError=kA(Error,"InternalError"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);LA=A}(),lA=A.BindingError=kA(Error,"BindingError"),jA.prototype.isAliasOf=function(A){if(!(this instanceof jA))return!1;if(!(A instanceof jA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,C=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)C=B.upcast(C),B=B.baseClass;return I===B&&g===C},jA.prototype.clone=function(){if(this.$$.ptr||fA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=OA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},jA.prototype.delete=function(){this.$$.ptr||fA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&qA("Object already scheduled for deletion"),pA(this),WA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},jA.prototype.isDeleted=function(){return!this.$$.ptr},jA.prototype.deleteLater=function(){return this.$$.ptr||fA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&qA("Object already scheduled for deletion"),ZA.push(this),1===ZA.length&&VA&&VA(xA),this.$$.deleteScheduled=!0,this},A.getInheritedInstanceCount=function(){return Object.keys(TA).length},A.getLiveInheritedInstances=function(){var A=[];for(var I in TA)TA.hasOwnProperty(I)&&A.push(TA[I]);return A},A.flushPendingDeletes=xA,A.setDelayFunction=function(A){VA=A,ZA.length&&VA&&VA(xA)},gI.prototype.getPointee=function(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},gI.prototype.destructor=function(A){this.rawDestructor&&this.rawDestructor(A)},gI.prototype.argPackAdvance=8,gI.prototype.readValueFromPointer=MA,gI.prototype.deleteObject=function(A){null!==A&&A.delete()},gI.prototype.fromWireType=function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=function(A,I){return I=function(A,I){for(void 0===I&&qA("ptr should not be undefined");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),TA[I]}(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function C(){return this.isSmartPointer?XA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):XA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var Q,E=this.registeredClass.getActualType(I),i=mA[E];if(!i)return C.call(this);Q=this.isConst?i.constPointerType:i.pointerType;var o=bA(I,this.registeredClass,Q.registeredClass);return null===o?C.call(this):this.isSmartPointer?XA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o,smartPtrType:this,smartPtr:A}):XA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o})},iI=A.UnboundTypeError=kA(Error,"UnboundTypeError"),A.count_emval_handles=function(){for(var A=0,I=5;I<GI.length;++I)void 0!==GI[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<GI.length;++A)if(void 0!==GI[A])return GI[A];return null};var fI=!1,uI="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function pI(A){if(BA(A))return function(A){if("boolean"==typeof F&&F){var I=Buffer.from(A,"base64");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=uI(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(gA.length))}var WI,bI={h:function(A){return mI(A+24)+24},g:function(A,I,g){throw new DA(A).init(I,g),A},r:function(A,I,g){FA.varargs=g;try{var B=FA.getStreamFromFD(A);switch(I){case 0:return(C=FA.get())<0?-28:RA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=FA.get();return B.flags|=C,0;case 5:return C=FA.get(),K[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return L[xI()>>2]=28,-1}}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return-A.errno}},J:function(A,I,g){FA.varargs=g;try{var B=FA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=FA.get();return L[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=FA.get(),RA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return-A.errno}},K:function(A,I,g,B){FA.varargs=B;try{I=FA.getStr(I),I=FA.calculateAt(A,I);var C=B?FA.get():0;return RA.open(I,g,C).fd}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return-A.errno}},S:function(A){var I=yA[A];delete yA[A];var g=I.rawConstructor,B=I.rawDestructor,C=I.fields;KA([A],C.map((A=>A.getterReturnType)).concat(C.map((A=>A.setterArgumentType))),(A=>{var Q={};return C.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+C.length],a=I.setter,w=I.setterContext;Q[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];a(w,A,D.toWireType(g,I)),rA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in Q)I[g]=Q[g].read(A);return B(A),I},toWireType:function(A,I){for(var C in Q)if(!(C in I))throw new TypeError(\'Missing field:  "\'+C+\'"\');var E=g();for(C in Q)Q[C].write(E,I[C]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:MA,destructorFunction:B}]}))},B:function(A,I,g,B,C){},O:function(A,I,g,B,C){var Q=YA(g);HA(A,{name:I=dA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=K;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=L}return this.fromWireType(B[A>>Q])},destructorFunction:null})},o:function(A,I,g,B,C,Q,E,i,o,D,a,w,s){a=dA(a),Q=EI(C,Q),i&&(i=EI(E,i)),D&&(D=EI(o,D)),s=EI(w,s);var G=nA(a);PA(G,(function(){DI("Cannot construct "+a+" due to unbound types",[B])})),KA([A,I,g],B?[B]:[],(function(I){var g,C;I=I[0],C=B?(g=I.registeredClass).instancePrototype:jA.prototype;var E=cA(G,(function(){if(Object.getPrototypeOf(this)!==o)throw new lA("Use \'new\' to construct "+a);if(void 0===w.constructor_body)throw new lA(a+" has no accessible constructor");var A=w.constructor_body[arguments.length];if(void 0===A)throw new lA("Tried to invoke ctor of "+a+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(w.constructor_body).toString()+") parameters instead!");return A.apply(this,arguments)})),o=Object.create(C,{constructor:{value:E}});E.prototype=o;var w=new zA(a,E,o,s,g,Q,i,D),h=new gI(a,w,!0,!1,!1),t=new gI(a+"*",w,!1,!1,!1),R=new gI(a+" const*",w,!1,!0,!1);return mA[A]={pointerType:t,constPointerType:R},BI(G,E),[h,t,R]}))},n:function(A,I,g,B,C,Q){c(I>0);var E=aI(I,g);C=EI(B,C),KA([],[A],(function(A){var g="constructor "+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new lA("Cannot register multiple constructors with identical number of parameters ("+(I-1)+") for class \'"+A.name+"\'! Overload resolution is currently only performed using the parameter count, not actual type info!");return A.registeredClass.constructor_body[I-1]=()=>{DI("Cannot construct "+A.name+" due to unbound types",E)},KA([],E,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=wI(g,B,null,C,Q),[]})),[]}))},d:function(A,I,g,B,C,Q,E,i){var o=aI(g,B);I=dA(I),Q=EI(C,Q),KA([],[A],(function(A){var B=(A=A[0]).name+"."+I;function C(){DI("Cannot call "+B+" due to unbound types",o)}I.startsWith("@@")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,a=D[I];return void 0===a||void 0===a.overloadTable&&a.className!==A.name&&a.argCount===g-2?(C.argCount=g-2,C.className=A.name,D[I]=C):(vA(D,I,B),D[I].overloadTable[g-2]=C),KA([],o,(function(C){var i=wI(B,C,A,Q,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},v:function(I,g,B){I=dA(I),KA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},N:function(A,I){HA(A,{name:I=dA(I),fromWireType:function(A){var I=tI.toValue(A);return hI(A),I},toWireType:function(A,I){return tI.toHandle(I)},argPackAdvance:8,readValueFromPointer:MA,destructorFunction:null})},u:function(A,I,g){var B=YA(g);HA(A,{name:I=dA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:FI(I,B),destructorFunction:null})},e:function(A,I,g,B,C,Q){var E=aI(I,g);A=dA(A),C=EI(B,C),PA(A,(function(){DI("Cannot call "+A+" due to unbound types",E)}),I-1),KA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return BI(A,wI(A,B,null,C,Q),I-1),[]}))},f:function(A,I,g,B,C){I=dA(I),-1===C&&(C=4294967295);var Q=YA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes("unsigned");HA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:yI(I,Q,0!==B),destructorFunction:null})},b:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=d,g=I[A>>=2],C=I[A+1];return new B(k,C,g)}HA(A,{name:g=dA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},t:function(A,I){var g="std::string"===(I=dA(I));HA(A,{name:I,fromWireType:function(A){var I,B=d[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==J[i]){var o=u(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(J[C+E]);I=D.join("")}return ZI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||qA("Cannot pass non-string to std::string"),B=g&&C?W(I):I.length;var Q=mI(4+B+1),E=Q+4;if(d[Q>>2]=B,g&&C)p(I,J,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(ZI(E),qA("String has UTF-16 code units that do not fit in 8 bits")),J[E+i]=o}else for(i=0;i<B;++i)J[E+i]=I[i];return null!==A&&A.push(ZI,Q),Q},argPackAdvance:8,readValueFromPointer:MA,destructorFunction:function(A){ZI(A)}})},l:function(A,I,g){var B,C,Q,E,i;g=dA(g),2===I?(B=MI,C=eI,E=SI,Q=()=>Y,i=1):4===I&&(B=NI,C=nI,E=cI,Q=()=>d,i=2),HA(A,{name:g,fromWireType:function(A){for(var g,C=d[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return ZI(A),g},toWireType:function(A,B){"string"!=typeof B&&qA("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=mI(4+Q+I);return d[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(ZI,o),o},argPackAdvance:8,readValueFromPointer:MA,destructorFunction:function(A){ZI(A)}})},U:function(A,I,g,B,C,Q){yA[A]={name:dA(I),rawConstructor:EI(g,B),rawDestructor:EI(C,Q),fields:[]}},T:function(A,I,g,B,C,Q,E,i,o,D){yA[A].fields.push({fieldName:dA(I),getterReturnType:g,getter:EI(B,C),getterContext:Q,setterArgumentType:E,setter:EI(i,o),setterContext:D})},P:function(A,I){HA(A,{isVoid:!0,name:I=dA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},s:function(){return Date.now()},D:function(){throw 1/0},Q:hI,R:function(A){A>4&&(GI[A].refcount+=1)},m:function(A,I){var g,B;void 0===(B=SA[g=A])&&qA("_emval_take_value has unknown type "+oI(g));var C=(A=B).readValueFromPointer(I);return tI.toHandle(C)},L:function(A,I){var g,B=new Date(1e3*(d[(g=A)>>2]+4294967296*L[g+4>>2]));L[I>>2]=B.getSeconds(),L[I+4>>2]=B.getMinutes(),L[I+8>>2]=B.getHours(),L[I+12>>2]=B.getDate(),L[I+16>>2]=B.getMonth(),L[I+20>>2]=B.getFullYear()-1900,L[I+24>>2]=B.getDay();var C=new Date(B.getFullYear(),0,1),Q=(B.getTime()-C.getTime())/864e5|0;L[I+28>>2]=Q,L[I+36>>2]=-60*B.getTimezoneOffset();var E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=C.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));L[I+32>>2]=o},M:function A(I,g,B){A.called||(A.called=!0,function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:"GMT"}L[A>>2]=60*o,L[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=kI(a),G=kI(w);i<E?(d[g>>2]=s,d[g+4>>2]=G):(d[g>>2]=G,d[g+4>>2]=s)}(I,g,B))},a:function(){z("")},i:function(A,I,g){var B=function(A,I){var g;for(UI.length=0,I>>=2;g=J[A++];)I+=105!=g&I,UI.push(105==g?L[I]:q[I++>>1]),++I;return UI}(I,g);return EA[A].apply(null,B)},E:function(A){var I,g=J.length,B=2147483648;if((A>>>=0)>B)return!1;for(var C=1;C<=4;C*=2){var Q=g*(1+.2/C);if(Q=Math.min(Q,A+100663296),JI(Math.min(B,(I=Math.max(A,Q))+(65536-I%65536)%65536)))return!0}return!1},F:function(A,I){var g=0;return YI().forEach((function(B,C){var Q=I+g;d[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)U[I++>>0]=A.charCodeAt(B);U[I>>0]=0}(B,Q),g+=B.length+1})),0},G:function(A,I){var g=YI();d[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),d[I>>2]=B,0},c:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),n=!0),h(B,new iA(B))},p:function(A){try{var I=FA.getStreamFromFD(A);return RA.close(I),0}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return A.errno}},I:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=d[I>>2],i=d[I+4>>2];I+=8;var o=RA.read(A,U,E,i,void 0);if(o<0)return-1;if(C+=o,o<i)break}return C}(FA.getStreamFromFD(A),I,g);return d[B>>2]=C,0}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return A.errno}},A:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=FA.getStreamFromFD(A);return RA.llseek(E,Q,B),IA=[E.position>>>0,(AA=E.position,+Math.abs(AA)>=1?AA>0?(0|Math.min(+Math.floor(AA/4294967296),4294967295))>>>0:~~+Math.ceil((AA-+(~~AA>>>0))/4294967296)>>>0:0)],L[C>>2]=IA[0],L[C+4>>2]=IA[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return A.errno}var i,o},q:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=d[I>>2],i=d[I+4>>2];I+=8;var o=RA.write(A,U,E,i,void 0);if(o<0)return-1;C+=o}return C}(FA.getStreamFromFD(A),I,g);return d[B>>2]=C,0}catch(A){if(void 0===RA||!(A instanceof RA.ErrnoError))throw A;return A.errno}},w:function(A,I){var g=XI();try{return CI(A)(I)}catch(A){if(OI(g),A!==A+0)throw A;TI(1,0)}},y:function(A,I,g){var B=XI();try{return CI(A)(I,g)}catch(A){if(OI(B),A!==A+0)throw A;TI(1,0)}},x:function(A,I,g,B){var C=XI();try{return CI(A)(I,g,B)}catch(A){if(OI(C),A!==A+0)throw A;TI(1,0)}},j:function(A,I){var g=XI();try{CI(A)(I)}catch(A){if(OI(g),A!==A+0)throw A;TI(1,0)}},z:function(A,I,g){var B=XI();try{CI(A)(I,g)}catch(A){if(OI(B),A!==A+0)throw A;TI(1,0)}},H:function(A,I,g,B){var C=XI();try{CI(A)(I,g,B)}catch(A){if(OI(C),A!==A+0)throw A;TI(1,0)}},k:function(A,I,g,B,C){var Q=XI();try{CI(A)(I,g,B,C)}catch(A){if(OI(Q),A!==A+0)throw A;TI(1,0)}},V:qI,C:function(A,I,g,B){return qI(A,I,g,B)}},mI=(function(){var I={a:bI};function g(I,g){var B,C=I.exports;A.asm=C,b((S=A.asm.W).buffer),m=A.asm.$,B=A.asm.X,x.unshift(B),P()}function C(A){g(A.instance)}function E(A){return function(){if(!r&&(t||R)){if("function"==typeof fetch&&!CA(_))return fetch(_,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at \'"+_+"\'";return A.arrayBuffer()})).catch((function(){return QA(_)}));if(Q)return new Promise((function(A,I){Q(_,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return QA(_)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){e("failed to asynchronously prepare wasm: "+A),z(A)}))}if(v(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return e("Module.instantiateWasm callback failed with error: "+A),!1}(r||"function"!=typeof WebAssembly.instantiateStreaming||BA(_)||CA(_)||F||"function"!=typeof fetch?E(C):fetch(_,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(C,(function(A){return e("wasm streaming compile failed: "+A),e("falling back to ArrayBuffer instantiation"),E(C)}))}))).catch(B)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.X).apply(null,arguments)},A._malloc=function(){return(mI=A._malloc=A.asm.Y).apply(null,arguments)}),ZI=A._free=function(){return(ZI=A._free=A.asm.Z).apply(null,arguments)},xI=A.___errno_location=function(){return(xI=A.___errno_location=A.asm._).apply(null,arguments)},VI=A.___getTypeName=function(){return(VI=A.___getTypeName=A.asm.aa).apply(null,arguments)},TI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.ba).apply(null,arguments)},A._setThrew=function(){return(TI=A._setThrew=A.asm.ca).apply(null,arguments)}),XI=A.stackSave=function(){return(XI=A.stackSave=A.asm.da).apply(null,arguments)},OI=A.stackRestore=function(){return(OI=A.stackRestore=A.asm.ea).apply(null,arguments)},jI=A.___cxa_is_pointer_type=function(){return(jI=A.___cxa_is_pointer_type=A.asm.fa).apply(null,arguments)};function vI(g){function B(){WI||(WI=!0,A.calledRun=!0,n||(A.noFSInit||RA.init.initialized||RA.init(),RA.ignorePermissions=!1,GA.init(),oA(x),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),V.unshift(I);var I;oA(V)}()))}g=g||s,X>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),Z.unshift(I);var I;oA(Z)}(),X>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.ga).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm.ha).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.ia).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.ja).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ka).apply(null,arguments)},A.FS=RA,j=function A(){WI||vI(),WI||(j=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return vI(),A.ready});function s(A,I){return function(){return A.apply(I,arguments)}}const{toString:G}=Object.prototype,{getPrototypeOf:h}=Object,t=(R=Object.create(null),A=>{const I=G.call(A);return R[I]||(R[I]=I.slice(8,-1).toLowerCase())});var R;const F=A=>(A=A.toLowerCase(),I=>t(I)===A),y=A=>I=>typeof I===A,{isArray:r}=Array,M=y("undefined"),e=F("ArrayBuffer"),S=y("string"),N=y("function"),n=y("number"),c=A=>null!==A&&"object"==typeof A,k=A=>{if("object"!==t(A))return!1;const I=h(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},U=F("Date"),J=F("File"),K=F("Blob"),Y=F("FileList"),L=F("URLSearchParams");function d(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),r(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}const l=(q="undefined"!=typeof Uint8Array&&h(Uint8Array),A=>q&&A instanceof q);var q;const H=F("HTMLFormElement"),f=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),u=F("RegExp"),p=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};d(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},W={isArray:r,isArrayBuffer:e,isBuffer:function(A){return null!==A&&!M(A)&&null!==A.constructor&&!M(A.constructor)&&N(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I="[object FormData]";return A&&("function"==typeof FormData&&A instanceof FormData||G.call(A)===I||N(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&e(A.buffer),I},isString:S,isNumber:n,isBoolean:A=>!0===A||!1===A,isObject:c,isPlainObject:k,isUndefined:M,isDate:U,isFile:J,isBlob:K,isRegExp:u,isFunction:N,isStream:A=>c(A)&&N(A.pipe),isURLSearchParams:L,isTypedArray:l,isFileList:Y,forEach:d,merge:function A(){const I={},g=(g,B)=>{k(I[B])&&k(g)?I[B]=A(I[B],g):k(g)?I[B]=A({},g):r(g)?I[B]=g.slice():I[B]=g};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&d(arguments[A],g);return I},extend:(A,I,g,{allOwnKeys:B}={})=>(d(I,((I,B)=>{g&&N(I)?A[B]=s(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&h(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:t,kindOfTest:F,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(r(A))return A;let I=A.length;if(!n(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:H,hasOwnProperty:f,hasOwnProp:f,reduceDescriptors:p,freezeMethods:A=>{p(A,((I,g)=>{const B=A[g];N(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not read-only method \'"+g+"\'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return r(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I)};function b(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}W.inherits(b,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const m=b.prototype,Z={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{Z[A]={value:A}})),Object.defineProperties(b,Z),Object.defineProperty(m,"isAxiosError",{value:!0}),b.from=(A,I,g,B,C,Q)=>{const E=Object.create(m);return W.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),b.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const x=b,V=g(230);function T(A){return W.isPlainObject(A)||W.isArray(A)}function X(A){return W.endsWith(A,"[]")?A.slice(0,-2):A}function O(A,I,g){return A?A.concat(I).map((function(A,I){return A=X(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const j=W.toFlatObject(W,{},null,(function(A){return/^is[A-Z]/.test(A)})),v=function(A,I,g){if(!W.isObject(A))throw new TypeError("target must be an object");I=I||new(V||FormData);const B=(g=W.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!W.isUndefined(I[A])}))).metaTokens,C=g.visitor||a,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&(o=I)&&W.isFunction(o.append)&&"FormData"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!W.isFunction(C))throw new TypeError("visitor must be a function");function D(A){if(null===A)return"";if(W.isDate(A))return A.toISOString();if(!i&&W.isBlob(A))throw new x("Blob is not supported. Use a Buffer instead.");return W.isArrayBuffer(A)||W.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(W.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(W.isArray(A)&&function(A){return W.isArray(A)&&!A.some(T)}(A)||W.isFileList(A)||W.endsWith(g,"[]")&&(i=W.toArray(A)))return g=X(g),i.forEach((function(A,B){!W.isUndefined(A)&&null!==A&&I.append(!0===E?O([g],B,Q):null===E?g:g+"[]",D(A))})),!1;return!!T(A)||(I.append(O(C,g,Q),D(A)),!1)}const w=[],s=Object.assign(j,{defaultVisitor:a,convertValue:D,isVisitable:T});if(!W.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!W.isUndefined(g)){if(-1!==w.indexOf(g))throw Error("Circular reference detected in "+B.join("."));w.push(g),W.forEach(g,(function(g,Q){!0===(!(W.isUndefined(g)||null===g)&&C.call(I,g,W.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),w.pop()}}(A),I};function P(A){const I={"!":"%21","\'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%20|%00/g,(function(A){return I[A]}))}function z(A,I){this._pairs=[],A&&v(A,this,I)}const _=z.prototype;_.append=function(A,I){this._pairs.push([A,I])},_.toString=function(A){const I=A?function(I){return A.call(this,I,P)}:P;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const $=z;function AA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function IA(A,I,g){if(!I)return A;const B=g&&g.encode||AA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):W.isURLSearchParams(I)?I.toString():new $(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const gA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){W.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},BA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},CA="undefined"!=typeof URLSearchParams?URLSearchParams:$,QA=FormData,EA=(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),iA={isBrowser:!0,classes:{URLSearchParams:CA,FormData:QA,Blob},isStandardBrowserEnv:EA,protocols:["http","https","file","blob","url","data"]},oA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&W.isArray(B)?B.length:Q,i?(W.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&W.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&W.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(W.isFormData(A)&&W.isFunction(A.entries)){const g={};return W.forEachEntry(A,((A,B)=>{I(function(A){return W.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},DA=iA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+"="+encodeURIComponent(I)),W.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),W.isString(B)&&E.push("path="+B),W.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function aA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,"")+"/"+I.replace(/^\\/+/,""):A}(A,I):I}const wA=iA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=W.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function sA(A,I,g){x.call(this,null==A?"canceled":A,x.ERR_CANCELED,I,g),this.name="CanceledError"}W.inherits(sA,x,{__CANCEL__:!0});const GA=sA,hA=W.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),tA=Symbol("internals"),RA=Symbol("defaults");function FA(A){return A&&String(A).trim().toLowerCase()}function yA(A){return!1===A||null==A?A:W.isArray(A)?A.map(yA):String(A)}function rA(A,I,g,B){return W.isFunction(B)?B.call(this,I,g):W.isString(I)?W.isString(B)?-1!==I.indexOf(B):W.isRegExp(B)?B.test(I):void 0:void 0}function MA(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}function eA(A,I){A&&this.set(A),this[RA]=I||null}Object.assign(eA.prototype,{set:function(A,I,g){const B=this;function C(A,I,g){const C=FA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=MA(B,C);(!Q||!0===g||!1!==B[Q]&&!1!==g)&&(B[Q||I]=yA(A))}return W.isPlainObject(A)?W.forEach(A,((A,g)=>{C(A,g,I)})):C(I,A,g),this},get:function(A,I){if(!(A=FA(A)))return;const g=MA(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(W.isFunction(I))return I.call(this,A,g);if(W.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}},has:function(A,I){if(A=FA(A)){const g=MA(this,A);return!(!g||I&&!rA(0,this[g],g,I))}return!1},delete:function(A,I){const g=this;let B=!1;function C(A){if(A=FA(A)){const C=MA(g,A);!C||I&&!rA(0,g[C],C,I)||(delete g[C],B=!0)}}return W.isArray(A)?A.forEach(C):C(A),B},clear:function(){return Object.keys(this).forEach(this.delete.bind(this))},normalize:function(A){const I=this,g={};return W.forEach(this,((B,C)=>{const Q=MA(g,C);if(Q)return I[Q]=yA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=yA(B),g[E]=!0})),this},toJSON:function(A){const I=Object.create(null);return W.forEach(Object.assign({},this[RA]||null,this),((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&W.isArray(g)?g.join(", "):g)})),I}}),Object.assign(eA,{from:function(A){return W.isString(A)?new this((A=>{const I={};let g,B,C;return A&&A.split("\\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&hA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A)):A instanceof this?A:new this(A)},accessor:function(A){const I=(this[tA]=this[tA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=FA(A);I[B]||(function(A,I){const g=W.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return W.isArray(A)?A.forEach(B):B(A),this}}),eA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent"]),W.freezeMethods(eA.prototype),W.freezeMethods(eA);const SA=eA;function NA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0};D[I?"download":"upload"]=!0,A(D)}}function nA(A){return new Promise((function(I,g){let B=A.data;const C=SA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}W.isFormData(B)&&iA.isStandardBrowserEnv&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";C.set("Authorization","Basic "+btoa(I+":"+g))}const D=aA(A.baseURL,A.url);function a(){if(!o)return;const B=SA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new x("Request failed with status code "+g.status,[x.ERR_BAD_REQUEST,x.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&"text"!==Q&&"json"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),IA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new x("Request aborted",x.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new x("Network Error",x.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||BA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new x(I,B.clarifyTimeoutError?x.ETIMEDOUT:x.ECONNABORTED,A,o)),o=null},iA.isStandardBrowserEnv){const I=(A.withCredentials||wA(D))&&A.xsrfCookieName&&DA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),"setRequestHeader"in o&&W.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),W.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&"json"!==Q&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",NA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",NA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new GA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===iA.protocols.indexOf(w)?g(new x("Unsupported protocol "+w+":",x.ERR_BAD_REQUEST,A)):o.send(B||null)}))}const cA={http:nA,xhr:nA},kA=A=>{if(W.isString(A)){const I=cA[A];if(!A)throw Error(W.hasOwnProp(A)?`Adapter \'${A}\' is not available in the build`:`Can not resolve adapter \'${A}\'`);return I}if(!W.isFunction(A))throw new TypeError("adapter is not a function");return A},UA={"Content-Type":"application/x-www-form-urlencoded"},JA={transitional:BA,adapter:function(){let A;return"undefined"!=typeof XMLHttpRequest?A=kA("xhr"):"undefined"!=typeof process&&"process"===W.kindOf(process)&&(A=kA("http")),A}(),transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=W.isObject(A);if(C&&W.isHTMLForm(A)&&(A=new FormData(A)),W.isFormData(A))return B&&B?JSON.stringify(oA(A)):A;if(W.isArrayBuffer(A)||W.isBuffer(A)||W.isStream(A)||W.isFile(A)||W.isBlob(A))return A;if(W.isArrayBufferView(A))return A.buffer;if(W.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return v(A,new iA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return iA.isNode&&W.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=W.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return v(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A,I,g){if(W.isString(A))try{return(0,JSON.parse)(A),W.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||JA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&W.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw x.from(A,x.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:iA.classes.FormData,Blob:iA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};W.forEach(["delete","get","head"],(function(A){JA.headers[A]={}})),W.forEach(["post","put","patch"],(function(A){JA.headers[A]=W.merge(UA)}));const KA=JA;function YA(A,I){const g=this||KA,B=I||g,C=SA.from(B.headers);let Q=B.data;return W.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function LA(A){return!(!A||!A.__CANCEL__)}function dA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new GA}function lA(A){return dA(A),A.headers=SA.from(A.headers),A.data=YA.call(A,A.transformRequest),(A.adapter||KA.adapter)(A).then((function(I){return dA(A),I.data=YA.call(A,A.transformResponse,I),I.headers=SA.from(I.headers),I}),(function(I){return LA(I)||(dA(A),I&&I.response&&(I.response.data=YA.call(A,A.transformResponse,I.response),I.response.headers=SA.from(I.response.headers))),Promise.reject(I)}))}function qA(A,I){I=I||{};const g={};function B(A,I){return W.isPlainObject(A)&&W.isPlainObject(I)?W.merge(A,I):W.isPlainObject(I)?W.merge({},I):W.isArray(I)?I.slice():I}function C(g){return W.isUndefined(I[g])?W.isUndefined(A[g])?void 0:B(void 0,A[g]):B(A[g],I[g])}function Q(A){if(!W.isUndefined(I[A]))return B(void 0,I[A])}function E(g){return W.isUndefined(I[g])?W.isUndefined(A[g])?void 0:B(void 0,A[g]):B(void 0,I[g])}function i(g){return g in I?B(A[g],I[g]):g in A?B(void 0,A[g]):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i};return W.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){const I=o[A]||C,B=I(A);W.isUndefined(B)&&I!==i||(g[A]=B)})),g}const HA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{HA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const fA={};HA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.1.3] Transitional option \'"+A+"\'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new x(B(C," has been removed"+(I?" in "+I:"")),x.ERR_DEPRECATED);return I&&!fA[C]&&(fA[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const uA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new x("options must be an object",x.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new x("option "+Q+" must be "+g,x.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new x("Unknown option "+Q,x.ERR_BAD_OPTION)}},validators:HA},pA=uA.validators;class WA{constructor(A){this.defaults=A,this.interceptors={request:new gA,response:new gA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=qA(this.defaults,I);const{transitional:g,paramsSerializer:B}=I;void 0!==g&&uA.assertOptions(g,{silentJSONParsing:pA.transitional(pA.boolean),forcedJSONParsing:pA.transitional(pA.boolean),clarifyTimeoutError:pA.transitional(pA.boolean)},!1),void 0!==B&&uA.assertOptions(B,{encode:pA.function,serialize:pA.function},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase();const C=I.headers&&W.merge(I.headers.common,I.headers[I.method]);C&&W.forEach(["delete","get","head","post","put","patch","common"],(function(A){delete I.headers[A]})),I.headers=new SA(I.headers,C);const Q=[];let E=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(E=E&&A.synchronous,Q.unshift(A.fulfilled,A.rejected))}));const i=[];let o;this.interceptors.response.forEach((function(A){i.push(A.fulfilled,A.rejected)}));let D,a=0;if(!E){const A=[lA.bind(this),void 0];for(A.unshift.apply(A,Q),A.push.apply(A,i),D=A.length,o=Promise.resolve(I);a<D;)o=o.then(A[a++],A[a++]);return o}D=Q.length;let w=I;for(a=0;a<D;){const I=Q[a++],g=Q[a++];try{w=I(w)}catch(A){g.call(this,A);break}}try{o=lA.call(this,w)}catch(A){return Promise.reject(A)}for(a=0,D=i.length;a<D;)o=o.then(i[a++],i[a++]);return o}getUri(A){return IA(aA((A=qA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}W.forEach(["delete","get","head","options"],(function(A){WA.prototype[A]=function(I,g){return this.request(qA(g||{},{method:A,url:I,data:(g||{}).data}))}})),W.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(qA(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}WA.prototype[A]=I(),WA.prototype[A+"Form"]=I(!0)}));const bA=WA;class mA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new GA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new mA((function(I){A=I})),cancel:A}}}const ZA=mA,xA=function A(I){const g=new bA(I),B=s(bA.prototype.request,g);return W.extend(B,bA.prototype,g,{allOwnKeys:!0}),W.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(qA(I,g))},B}(KA);xA.Axios=bA,xA.CanceledError=GA,xA.CancelToken=ZA,xA.isCancel=LA,xA.VERSION="1.1.3",xA.toFormData=v,xA.AxiosError=x,xA.Cancel=xA.CanceledError,xA.all=function(A){return Promise.all(A)},xA.spread=function(A){return function(I){return A.apply(null,I)}},xA.isAxiosError=function(A){return W.isObject(A)&&!0===A.isAxiosError},xA.formToJSON=A=>oA(W.isHTMLForm(A)?new FormData(A):A);const VA=xA,{Axios:TA,AxiosError:XA,CanceledError:OA,isCancel:jA,CancelToken:vA,VERSION:PA,all:zA,Cancel:_A,isAxiosError:$A,spread:AI,toFormData:II}=VA,gI=VA;var BI=function(){function A(){C(this,A)}var g,B;return E(A,null,[{key:"fetchRemoteData",value:(B=I(a().mark((function A(I){var g;return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,gI.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return B.apply(this,arguments)})},{key:"fetchRemoteDataCallback",value:(g=I(a().mark((function A(I,g){var B;return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,gI.get(I,{responseType:"arraybuffer"}).then((function(A){var I=new Uint8Array(A.data);console.log(I),g(A)}));case 3:return B=A.sent,A.abrupt("return",B);case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A,I){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}}]),A}(),CI=function(){function A(){C(this,A),i(this,"instance",void 0),i(this,"markerNFTCount",void 0),i(this,"cameraCount",void 0),i(this,"version",void 0),i(this,"setup",void 0),i(this,"teardown",void 0),i(this,"setupAR2",void 0),i(this,"setDebugMode",void 0),i(this,"getDebugMode",void 0),i(this,"getProcessingImage",void 0),i(this,"detectMarker",void 0),i(this,"detectNFTMarker",void 0),i(this,"getNFTMarker",void 0),i(this,"getNFTData",void 0),i(this,"setLogLevel",void 0),i(this,"getLogLevel",void 0),i(this,"frameMalloc",void 0),i(this,"NFTMarkerInfo",void 0),i(this,"setProjectionNearPlane",void 0),i(this,"getProjectionNearPlane",void 0),i(this,"setProjectionFarPlane",void 0),i(this,"getProjectionFarPlane",void 0),i(this,"setThresholdMode",void 0),i(this,"getThresholdMode",void 0),i(this,"setThreshold",void 0),i(this,"getThreshold",void 0),i(this,"setImageProcMode",void 0),i(this,"getImageProcMode",void 0),this.instance,this.markerNFTCount=0,this.cameraCount=0,this.version="1.1.6",console.info("ARToolkitNFT ",this.version)}var B,Q;return E(A,[{key:"init",value:(Q=I(a().mark((function A(){return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,w();case 2:return this.instance=A.sent,this._decorate(),("undefined"!=typeof window?window:g.g).artoolkitNFT=this,A.abrupt("return",this);case 7:case"end":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","detectMarker","detectNFTMarker","getNFTMarker","getNFTData","frameMalloc","NFTMarkerInfo","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setImageProcMode","getImageProcMode","StringList"].forEach((function(I){A.converter()[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this.converter()[I]=this.instance[I])}},{key:"converter",value:function(){return this}},{key:"loadCamera",value:(B=I(a().mark((function A(I){var g,B;return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,BI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return B.apply(this,arguments)})},{key:"addNFTMarkers",value:function(A,I,g,B){var C=this,Q=[],E=3*I.length,i=function(I){if(0==(E-=1)){for(var B=new C.instance.StringList,i=[],o=0;o<Q.length;o++)B.push_back(Q[o]);for(var D=C.instance._addNFTMarkers(A,B),a=0;a<D.size();a++)i.push(D.get(a));console.log("add nft marker ids: ",i),g&&g(i)}},o=function(A,I){console.log("failed to load: ",A),B(I)},D=[];return I.forEach((function(A,I){var g="/markerNFT_"+C.markerNFTCount;if(Q.push(g),Array.isArray(A))A.forEach((function(A){var I=g+"."+A.split(".").pop();C.ajax(A,I,i.bind(I),o.bind(I))})),C.markerNFTCount+=1;else{var B=g+".fset",E=g+".iset",a=g+".fset3";C.ajax(A+".fset",B,i.bind(B),o.bind(B)),C.ajax(A+".iset",E,i.bind(E),o.bind(E)),C.ajax(A+".fset3",a,i.bind(a),o.bind(a)),C.markerNFTCount+=1}D.push(I)})),D}},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}},{key:"ajax",value:function(A,I,g,B){var C=this,Q=new XMLHttpRequest;Q.open("GET",A,!0),Q.responseType="arraybuffer",Q.onload=function(){if(200==this.status){var A=Q.response,E=new Uint8Array(A);!function(A,I,g){C.instance.FS.writeFile(A,I,{encoding:"binary"}),g(I)}(I,E,g)}else B(this.status)},Q.send()}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"NFT_MARKER",get:function(){return 0}}]),A}(),QI=function(){function A(I,g,B){C(this,A),i(this,"id",void 0),i(this,"width",void 0),i(this,"height",void 0),i(this,"cameraParam",void 0),i(this,"cameraId",void 0),i(this,"cameraLoaded",void 0),i(this,"artoolkitNFT",void 0),i(this,"listeners",void 0),i(this,"nftMarkers",void 0),i(this,"transform_mat",void 0),i(this,"marker_transform_mat",void 0),i(this,"transformGL_RH",void 0),i(this,"videoWidth",void 0),i(this,"videoHeight",void 0),i(this,"videoSize",void 0),i(this,"framepointer",void 0),i(this,"framesize",void 0),i(this,"dataHeap",void 0),i(this,"videoLuma",void 0),i(this,"camera_mat",void 0),i(this,"videoLumaPointer",void 0),i(this,"nftMarkerFound",void 0),i(this,"nftMarkerFoundTime",void 0),i(this,"nftMarkerCount",void 0),i(this,"defaultMarkerWidth",void 0),i(this,"_bwpointer",void 0),this.id=-1,this.width=I,this.height=g,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkitNFT,this.listeners={},this.nftMarkers={},this.transform_mat=new Float64Array(16),this.transformGL_RH=new Float64Array(16),this.marker_transform_mat=null,this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.videoLumaPointer=null,this.nftMarkerFound=!1,this.nftMarkerFoundTime=0,this.nftMarkerCount=0,this._bwpointer=null,this.defaultMarkerWidth=1}var g,B,Q,o,D;return E(A,[{key:"process",value:function(A){var I,g,B=this.detectMarker(A);for(I in 0!=B&&console.error("[ARControllerNFT]","detectMarker error:",B),this.nftMarkers)(g=this.converter().nftMarkers[I]).inPrevious=g.inCurrent,g.inCurrent=!1;var C=this.nftMarkerCount;this.detectNFTMarker();for(var Q=0;Q<C;Q++){var E=this.getNFTMarker(Q),i=CI.NFT_MARKER;if(E.found){this.nftMarkerFound=Q,this.nftMarkerFoundTime=Date.now();var o=this.trackNFTMarkerId(Q);o.matrix.set(E.pose),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else this.nftMarkerFound===Q&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}}},{key:"detectNFTMarker",value:function(){this.artoolkitNFT.detectNFTMarker(this.id)}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.converter().nftMarkers[A];return g||(this.converter().nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkitNFT.detectMarker(this.id):-99}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkitNFT.getNFTMarker(this.id,A))return this.artoolkitNFT.NFTMarkerInfo}},{key:"getNFTData",value:function(A,I){return this.artoolkitNFT.getNFTData(A,I)}},{key:"addEventListener",value:function(A,I){this.converter().listeners[A]||(this.converter().listeners[A]=[]),this.converter().listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.converter().listeners[A]){var g=this.converter().listeners[A].indexOf(I);g>-1&&this.converter().listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.converter().listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"setDebugMode",value:function(A){return this.artoolkitNFT.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkitNFT.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkitNFT.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkitNFT.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkitNFT.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkitNFT.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkitNFT.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkitNFT.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkitNFT.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkitNFT.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkitNFT.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkitNFT.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkitNFT.getThreshold(this.id)}},{key:"loadNFTMarker",value:(D=I(a().mark((function A(I,g,B){var C,Q=this;return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(this.id,[I],(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return D.apply(this,arguments)})},{key:"loadNFTMarkers",value:(o=I(a().mark((function A(I,g,B){var C,Q=this;return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(this.id,I,(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return o.apply(this,arguments)})},{key:"setImageProcMode",value:function(A){return this.artoolkitNFT.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkitNFT.getImageProcMode(this.id)}},{key:"converter",value:function(){return this}},{key:"_initialize",value:(Q=I(a().mark((function A(){var I,g=this;return a().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new CI).init();case 2:return this.artoolkitNFT=A.sent,console.log("[ARControllerNFT]","ARToolkitNFT initialized"),A.next=6,this.artoolkitNFT.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARControllerNFT]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkitNFT.setup(this.width,this.height,this.cameraId),console.log("[ARControllerNFT]","Got ID from setup",this.id),this._initNFT(),I=this.artoolkitNFT.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkitNFT.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkitNFT.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkitNFT.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkitNFT.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkitNFT.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){if(A){var I;if(A.data&&(I=A.data),this.videoLuma)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}console.error("Error: no provided imageData to ARControllerNFT")}}],[{key:"initWithDimensions",value:(B=I(a().mark((function I(g,B,C){var Q;return a().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=new A(g,B,C),I.next=3,Q._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=I(a().mark((function I(g,B){var C,Q,E;return a().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.videoWidth||g.width,Q=g.videoHeight||g.height,E=new A(C,Q,B),I.next=5,E._initialize();case 5:return I.abrupt("return",I.sent);case 6:case"end":return I.stop()}}),I)}))),function(A,I){return g.apply(this,arguments)})}]),A}();const EI={ARToolkitNFT:CI,ARControllerNFT:QI}})(),B.default})(),A.exports=I()}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),(()=>{"use strict";var A=g(801),I=g.n(A);const{ARControllerNFT:B}=I(),C=self;C.onmessage=A=>{const I=A.data;switch(I.type){case"load":return void D(I);case"stop":i=null;break;case"process":Q=I.imagedata,a(Q,I.frame)}};let Q=null,E=0,i=null,o=null;const D=A=>{const I=self.origin;let g,Q=[],E=A.marker.length;console.debug("Base path:",I);const D=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.camera_para);1==D?g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:A.camera_para:0==D&&(g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:I+"/"+A.camera_para),console.debug("Loading camera at:",g),B.initWithDimensions(A.pw,A.ph,g).then((g=>{i=g;const B=i.getCameraMatrix();i.addEventListener("getNFTMarker",(A=>{o={type:"found",matrixGL_RH:JSON.stringify(A.data.matrixGL_RH)}}));const D=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.marker);for(var a=0;a<E;a++){let g;1==D?A.addPath?g=I+"/"+A.addPath+"/"+A.marker[a]:Q=A.marker[a]:0==D&&(g=A.addPath?I+"/"+A.addPath+"/"+A.marker[a]:I+"/"+A.marker[a]),Q.push(g)}console.debug("Loading NFT marker at: ",Q),i.loadNFTMarkers(Q,(A=>{let I=i.getNFTData(i.id,0);C.postMessage({type:"markerInfos",marker:I}),i.trackNFTMarkerId(A),console.log("loadNFTMarker -> ",A),console.log(A),C.postMessage({type:"endLoading",end:!0})})).catch((A=>{console.error("Error in loading marker on Worker",A)})),C.postMessage({type:"loaded",proj:JSON.stringify(B)})})).catch((A=>{console.error(A)}))},a=(A,I)=>{I!==E&&(o=null,i&&i.process&&i.process(A),E=I),null!=o?C.postMessage(o):C.postMessage({type:"not found"}),A=null}})()})();\n',"Worker",void 0,void 0)}class s{worker;markerURL;_processing=!1;vw;vh;target;uuid;name;addPath;ready;constructor(A,I,B,C,Q,E){this.markerURL=A,this.vw=I,this.vh=B,this.target=window||g.g,this.uuid=C,this.name=Q,this.ready=!1,this.addPath=E}async initialize(A,I,g){this.worker=new a;const B=this.worker;return this.target.addEventListener("terminateWorker-"+this.name,(function(){B.postMessage({type:"stop"}),B.terminate()})),await this.load(A,I,g)}process(A,I){this._processing||(this._processing=!0,this.worker.postMessage({type:"process",imagedata:A,frame:I},[A.data.buffer]))}load(A,I,g){let[B,C,Q,i,o,D]=E(this.vw,this.vh);const a=new CustomEvent("getWindowSize",{detail:{sw:B,sh:C}});this.target.dispatchEvent(a),this.worker.postMessage({type:"load",pw:Q,ph:i,camera_para:A,marker:this.markerURL,addPath:this.addPath}),this.worker.onmessage=A=>{var I=A.data;switch(I.type){case"loaded":{var B=JSON.parse(I.proj);const A=Q/o,g=i/D;B[0]*=A,B[4]*=A,B[8]*=A,B[12]*=A,B[1]*=g,B[5]*=g,B[9]*=g,B[13]*=g;const C=new CustomEvent("getProjectionMatrix",{detail:{proj:B}});this.target.dispatchEvent(C);break}case"endLoading":if(1==I.end){const A=document.getElementById("loading");A&&(A.querySelector(".loading-text").innerText="Start the tracking!",setTimeout((function(){null!=A.parentElement&&A&&A.parentElement.removeChild(A)}),2e3))}this.ready=!0,this.target.dispatchEvent(new CustomEvent("nftLoaded-"+this.uuid));break;case"markerInfos":{const A=I.marker,g=new CustomEvent("getNFTData-"+this.uuid+"-"+this.name,{detail:{dpi:A.dpi,width:A.width,height:A.height}});this.target.dispatchEvent(g);break}case"found":this.found(I);break;case"not found":this.found(null)}this._processing=!1,g()},this.worker.onerror=A=>{console.error("Worker error from NFTWorker: ",A)};let s=()=>{I(),window.requestAnimationFrame(s)};return s(),Promise.resolve(!0)}found(A){let I;if(A){I=JSON.parse(A.matrixGL_RH);const g=new CustomEvent("getMatrixGL_RH-"+this.uuid+"-"+this.name,{detail:{matrixGL_RH:I,name:this.name}});this.target.dispatchEvent(g)}else{I=null;const A=new CustomEvent("nftTrackingLost-"+this.uuid+"-"+this.name,{detail:{name:this.name}});this.target.dispatchEvent(A)}}isReady(){return this.ready}getUuid(){return this.uuid}getName(){return this.name}getMarkerUrl(){return this.markerURL}getEventTarget(){return this.target}destroy(){}}const t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let w;const h=new Uint8Array(16);function G(){if(!w&&(w="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!w))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return w(h)}const R=[];for(let A=0;A<256;++A)R.push((A+256).toString(16).slice(1));function r(A,I=0){return(R[A[I+0]]+R[A[I+1]]+R[A[I+2]]+R[A[I+3]]+"-"+R[A[I+4]]+R[A[I+5]]+"-"+R[A[I+6]]+R[A[I+7]]+"-"+R[A[I+8]]+R[A[I+9]]+"-"+R[A[I+10]]+R[A[I+11]]+R[A[I+12]]+R[A[I+13]]+R[A[I+14]]+R[A[I+15]]).toLowerCase()}const e=function(A,I,g){if(t.randomUUID&&!I&&!A)return t.randomUUID();const B=(A=A||{}).random||(A.rng||G)();if(B[6]=15&B[6]|64,B[8]=63&B[8]|128,I){g=g||0;for(let A=0;A<16;++A)I[g+A]=B[A];return I}return r(B)},F=JSON.parse('{"name":"@webarkit/ar-nft","version":"0.14.2","main":"dist/ARnft.js","types":"types/src/index.d.ts","description":"WebAR Javscript library for markerless AR","keywords":["ARToolKit","AR","ARnft","Augmented Reality","WebAR","JavaScript","jsartoolkit","jsartoolkit5","jsartoolkitNFT","NFT","Natural Feature Tracking","image tracking","markerless"],"author":{"name":"Walter Perdan","email":"github@kalwaltart.it","url":"https://www.kalwaltart.com"},"repository":{"type":"git","url":"https://github.com/webarkit/ARnft"},"homepage":"https://github.com/webarkit/ARnft","contributors":["Github Contributors (https://github.com/webarkit/ARnft/graphs/contributors)"],"bugs":{"url":"https://github.com/webarkit/ARnft/issues"},"devDependencies":{"@types/node":"^16.18.3","@types/stats.js":"^0.17.0","@types/uuid":"^8.3.4","prettier":"^2.7.1","rimraf":"^3.0.2","stats.js":"^0.17.0","ts-loader":"^9.4.1","typedoc":"^0.23.21","typescript":"^4.8.4","webpack":"^5.75.0","webpack-cli":"^4.10.0","worker-loader":"^3.0.8"},"scripts":{"build-ts":"rimraf ./build && tsc && webpack --mode production","dev-ts":"rimraf ./build && tsc && webpack --mode development --progress --watch","docs":"typedoc","format-check":"prettier --check .","format":"prettier --write ."},"license":"LGPL-3.0","resolutions":{},"dependencies":{"@webarkit/jsartoolkit-nft":"https://github.com/webarkit/jsartoolkitNFT.git#451a07428f26655852f2c20ea3212852e92c50ad","terser-webpack-plugin":"^5.3.6","uuid":"^9.0.0"}}'),{version:y}=F;class n{cameraView;appData;addPath;width;height;configUrl;markerUrl;camData;autoUpdate=!0;controllers;static entities;target;uuid;version;initialized;_views;constructor(A,I,B){this.width=A,this.height=I,this.configUrl=B,this.target=window||g.g,this.uuid=e(),this.version=y,console.log("ARnft ",this.version)}static async init(A,I,g,B,C,Q){return n.initWithConfig({width:A,height:I,markerUrls:g,names:B,configUrl:C,stats:Q})}static async initWithEntities(A,I,g,B,C){return n.initWithConfig({width:A,height:I,entities:g,configUrl:B,stats:C})}static async initWithConfig(A){const I=new n(A.width,A.height,A.configUrl);null!=A.autoUpdate&&(I.autoUpdate=A.autoUpdate);try{let g,B=[];const C=A,Q=A;if(null!=C.markerUrls&&null!=C.names)null==Q.entities&&(B=C.markerUrls,g=C.names,this.entities=g.map((function(A,I,g){return{name:A[0],markerUrl:B[I][0]}})));else{if(null==Q.entities)throw"markerUrls or entities can't be undefined";this.entities=Q.entities,B=this.entities.map((A=>[A.markerUrl])),g=this.entities.map((A=>[A.name]))}return await I._initialize(B,g,A.stats)}catch(A){if(A.code)return console.error(A),Promise.reject(A)}}async _initialize(I,g,B){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),B&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],this.cameraView=new Q(this._views.video),this.cameraView.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>B?o.update():null,C=()=>B?D.update():null;I.forEach(((I,B)=>{this.controllers.push(new s(I,this.width,this.height,this.uuid,g[B][0],this.addPath)),this.controllers[B].initialize(this.appData.cameraPara,A,C)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame))),requestAnimationFrame(a)};return a(),this}async initializeRaw(I,g,B,Q){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),Q&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],B.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>Q?o.update():null,B=()=>Q?D.update():null;I.forEach(((I,C)=>{this.controllers.push(new s(I,this.width,this.height,this.uuid,g[C],this.addPath)),this.controllers[C].initialize(this.appData.cameraPara,A,B)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(B.getImage(),B.getFrame()))),requestAnimationFrame(a)};return a(),this}update(){this.initialized&&!this.autoUpdate&&null!=this.cameraView&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame)))}static getEntities(){return this.entities}getEventTarget(){return this.target}get views(){return Object.freeze(this._views)}dispose(){this.disposeVideoStream(),this.disposeAllNFTs()}disposeNFT(A){var I=new Event("terminateWorker-"+A);this.target.dispatchEvent(I)}disposeAllNFTs(){n.getEntities().forEach((A=>{this.disposeNFT(A.name)}))}disposeVideoStream(){this.cameraView.destroy();var A=new Event("stopVideoStreaming");this.target.dispatchEvent(A)}}const M={ARnft:n}})(),B=B.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQVJuZnQuanMiLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQzFCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELElBQ1EsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxHQUNlLGlCQUFaQyxRQUNkQSxRQUFlLE1BQUlELElBRW5CRCxFQUFZLE1BQUlDLEdBQ2pCLENBVEQsQ0FTbUIsb0JBQVRLLEtBQXVCQSxLQUFPQyxNQUFNLEksNkJDUitHLElBQWVDLEVBQXRHTCxFQUFPRCxTQUErRk0sRUFBRSxXQUFXLFNBQVNDLEVBQUVDLEdBQXdCLE9BQXJCQyxFQUFFQyxZQUFZRixFQUFFRyxLQUFZSCxDQUFDLENBQUMsU0FBU0ksRUFBRUosR0FBRyxJQUFJLElBQUlLLEVBQUUsRUFBRUEsRUFBRUosRUFBRUssU0FBU0MsT0FBT0YsSUFBSUosRUFBRUssU0FBU0QsR0FBR0csTUFBTUMsUUFBUUosSUFBSUwsRUFBRSxRQUFRLE9BQU9VLEVBQUVWLENBQUMsQ0FBQyxJQUFJVSxFQUFFLEVBQUVULEVBQUVVLFNBQVNDLGNBQWMsT0FBT1gsRUFBRU8sTUFBTUssUUFBUSx1RUFBdUVaLEVBQUVhLGlCQUFpQixTQUFRLFNBQVNkLEdBQUdBLEVBQUVlLGlCQUNwZlgsSUFBSU0sRUFBRVQsRUFBRUssU0FBU0MsT0FBTyxJQUFFLEdBQUksSUFBSVMsR0FBR0MsYUFBYUMsTUFBTUMsTUFBTUMsRUFBRUosRUFBRWhCLEVBQUUsRUFBRXFCLEVBQUV0QixFQUFFLElBQUlELEVBQUV3QixNQUFNLE1BQU0sT0FBTyxTQUFTQyxFQUFFeEIsRUFBRSxJQUFJRCxFQUFFd0IsTUFBTSxLQUFLLE9BQU8sU0FBUyxHQUFHMUIsS0FBS3FCLGFBQWFyQixLQUFLcUIsWUFBWU8sT0FBTyxJQUFJQyxFQUFFMUIsRUFBRSxJQUFJRCxFQUFFd0IsTUFBTSxLQUFLLE9BQU8sU0FBYyxPQUFMbEIsRUFBRSxHQUFTLENBQUNzQixTQUFTLEdBQUd2QixJQUFJRixFQUFFMEIsU0FBUzVCLEVBQUU2QixVQUFVeEIsRUFBRXlCLE1BQU0sV0FBV2IsR0FBR0MsYUFBYUMsTUFBTUMsS0FBSyxFQUFFVyxJQUFJLFdBQVc5QixJQUFJLElBQUlDLEdBQUdnQixhQUFhQyxNQUFNQyxNQUF3QixHQUFsQkksRUFBRVEsT0FBTzlCLEVBQUVlLEVBQUUsS0FBUWYsRUFBRW1CLEVBQUUsTUFBTUMsRUFBRVUsT0FBTyxJQUFJL0IsR0FBR0MsRUFBRW1CLEdBQUcsS0FBS0EsRUFBRW5CLEVBQUVELEVBQUUsRUFBRXlCLEdBQUcsQ0FBQyxJQUFJcEIsRUFBRVksWUFBWU8sT0FBT0MsRUFBRU0sT0FBTzFCLEVBQUUyQixlQUN0ZSxRQUFRM0IsRUFBRTRCLGdCQUFnQixRQUFRLENBQUMsT0FBT2hDLENBQUMsRUFBRThCLE9BQU8sV0FBV2YsRUFBRW5CLEtBQUtpQyxLQUFLLEVBQUVJLFdBQVdqQyxFQUFFa0MsUUFBUS9CLEVBQUUsRUFBRU4sRUFBRXdCLE1BQU0sU0FBU3ZCLEVBQUVELEVBQUVZLEdBQUcsSUFBSVQsRUFBRW1DLElBQVNwQixFQUFFLEVBQUVJLEVBQUVpQixLQUFLQyxNQUFNdEMsRUFBRW9CLEVBQUVtQixPQUFPQyxrQkFBa0IsR0FBR25CLEVBQUUsR0FBR3JCLEVBQUV1QixFQUFFLEdBQUd2QixFQUFFeUIsRUFBRSxFQUFFekIsRUFBRXlDLEVBQUUsRUFBRXpDLEVBQUVLLEVBQUUsRUFBRUwsRUFBRTBDLEVBQUUsR0FBRzFDLEVBQUUyQyxFQUFFLEdBQUczQyxFQUFFNEMsRUFBRSxHQUFHNUMsRUFBRTZDLEVBQUVsQyxTQUFTQyxjQUFjLFVBQVVpQyxFQUFFQyxNQUFNekIsRUFBRXdCLEVBQUVFLE9BQU94QixFQUFFc0IsRUFBRXJDLE1BQU1LLFFBQVEseUJBQXlCLElBQUltQyxFQUFFSCxFQUFFSSxXQUFXLE1BQ2hTLE9BRHNTRCxFQUFFRSxLQUFLLFFBQVEsRUFBRWxELEVBQUUsZ0NBQWdDZ0QsRUFBRUcsYUFBYSxNQUFNSCxFQUFFSSxVQUFVMUMsRUFBRXNDLEVBQUVLLFNBQVMsRUFBRSxFQUFFaEMsRUFBRUUsR0FBR3lCLEVBQUVJLFVBQVV0RCxFQUFFa0QsRUFBRU0sU0FBU3ZELEVBQUUwQixFQUFFZ0IsR0FDcGZPLEVBQUVLLFNBQVNoRCxFQUFFcUMsRUFBRUMsRUFBRUMsR0FBR0ksRUFBRUksVUFBVTFDLEVBQUVzQyxFQUFFTyxZQUFZLEdBQUdQLEVBQUVLLFNBQVNoRCxFQUFFcUMsRUFBRUMsRUFBRUMsR0FBUyxDQUFDekMsSUFBSTBDLEVBQUVkLE9BQU8sU0FBU1IsRUFBRWlDLEdBQUd2RCxFQUFFb0MsS0FBS29CLElBQUl4RCxFQUFFc0IsR0FBR1AsRUFBRXFCLEtBQUtxQixJQUFJMUMsRUFBRU8sR0FBR3lCLEVBQUVJLFVBQVUxQyxFQUFFc0MsRUFBRU8sWUFBWSxFQUFFUCxFQUFFSyxTQUFTLEVBQUUsRUFBRWhDLEVBQUVxQixHQUFHTSxFQUFFSSxVQUFVdEQsRUFBRWtELEVBQUVNLFNBQVNsQyxFQUFFRyxHQUFHLElBQUl4QixFQUFFLEtBQUtxQixFQUFFbkIsR0FBRyxJQUFJbUIsRUFBRUosR0FBRyxJQUFJUyxFQUFFZ0IsR0FBR08sRUFBRVcsVUFBVWQsRUFBRXhDLEVBQUVMLEVBQUUwQyxFQUFFQyxFQUFFM0MsRUFBRTRDLEVBQUV2QyxFQUFFcUMsRUFBRUMsRUFBRTNDLEVBQUU0QyxHQUFHSSxFQUFFSyxTQUFTaEQsRUFBRXNDLEVBQUUzQyxFQUFFMEMsRUFBRTFDLEVBQUU0QyxHQUFHSSxFQUFFSSxVQUFVMUMsRUFBRXNDLEVBQUVPLFlBQVksR0FBR1AsRUFBRUssU0FBU2hELEVBQUVzQyxFQUFFM0MsRUFBRTBDLEVBQUUxQyxFQUFFb0IsR0FBRyxFQUFFRyxFQUFFaUMsR0FBR1osR0FBRyxFQUFFLEVBQVM5QyxFLHVCQ0NwWUwsRUFBT0QsUUFBVSxTQUFVb0UsRUFBU0MsRUFBbUJDLEVBQWVDLEdBQ3BFLElBQUlDLEVBQWNwRSxNQUFRMkMsT0FFMUIsSUFDRSxJQUNFLElBQUkwQixFQUVKLElBRUVBLEVBQU8sSUFBSUQsRUFBWUUsS0FBSyxDQUFDTixHQU8vQixDQU5FLE1BQU83RCxJQUdQa0UsRUFBTyxJQURXRCxFQUFZRyxhQUFlSCxFQUFZSSxtQkFBcUJKLEVBQVlLLGdCQUFrQkwsRUFBWU0sZ0JBRW5IQyxPQUFPWCxHQUNaSyxFQUFPQSxFQUFLTyxTQUNkLENBRUEsSUFBSUMsRUFBTVQsRUFBWVMsS0FBT1QsRUFBWVUsVUFDckNDLEVBQVlGLEVBQUlHLGdCQUFnQlgsR0FDaENZLEVBQVMsSUFBSWIsRUFBWUgsR0FBbUJjLEVBQVdiLEdBRTNELE9BREFXLEVBQUlLLGdCQUFnQkgsR0FDYkUsQ0FHVCxDQUZFLE1BQU85RSxHQUNQLE9BQU8sSUFBSWlFLEVBQVlILEdBQW1CLCtCQUErQmtCLE9BQU9DLG1CQUFtQnBCLElBQVdFLEVBQ2hILENBT0YsQ0FORSxNQUFPL0QsR0FDUCxJQUFLZ0UsRUFDSCxNQUFNa0IsTUFBTSxrQ0FHZCxPQUFPLElBQUlqQixFQUFZSCxHQUFtQkUsRUFBS0QsRUFDakQsQ0FDRixDLEdDckNJb0IsRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhN0YsUUFHckIsSUFBSUMsRUFBU3lGLEVBQXlCRSxHQUFZLENBR2pENUYsUUFBUyxDQUFDLEdBT1gsT0FIQStGLEVBQW9CSCxHQUFVSSxLQUFLL0YsRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBUzJGLEdBR3BFMUYsRUFBT0QsT0FDZixDQ3JCQTJGLEVBQW9CeEMsRUFBS2xELElBQ3hCLElBQUlnRyxFQUFTaEcsR0FBVUEsRUFBT2lHLFdBQzdCLElBQU9qRyxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQTBGLEVBQW9COUUsRUFBRW9GLEVBQVEsQ0FBRXpGLEVBQUd5RixJQUM1QkEsQ0FBTSxFQ0xkTixFQUFvQjlFLEVBQUksQ0FBQ2IsRUFBU21HLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWFIsRUFBb0JVLEVBQUVGLEVBQVlDLEtBQVNULEVBQW9CVSxFQUFFckcsRUFBU29HLElBQzVFRSxPQUFPQyxlQUFldkcsRUFBU29HLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUUxRSxFQ05EVCxFQUFvQi9ELEVBQUksV0FDdkIsR0FBMEIsaUJBQWY4RSxXQUF5QixPQUFPQSxXQUMzQyxJQUNDLE9BQU9yRyxNQUFRLElBQUlzRyxTQUFTLGNBQWIsRUFHaEIsQ0FGRSxNQUFPcEcsR0FDUixHQUFzQixpQkFBWHdDLE9BQXFCLE9BQU9BLE1BQ3hDLENBQ0EsQ0FQdUIsR0NBeEI0QyxFQUFvQlUsRUFBSSxDQUFDTyxFQUFLQyxJQUFVUCxPQUFPUSxVQUFVQyxlQUFlZixLQUFLWSxFQUFLQyxHLHlEQ29DbkUsTUFBTUcsRUFRakJDLHVCQUF1QkMsR0FDbkIsR0FBSUEsRUFBV0MsVUFBVUMsT0FBUSxDQUM3QixNQUFNRCxFQUFZaEcsU0FBU0MsY0FBYyxPQUN6QytGLEVBQVVFLEdBQUssTUFDZixNQUFNQyxFQUFTbkcsU0FBU0MsY0FBYyxVQUN0Q2tHLEVBQU9ELEdBQUssU0FDWixNQUFNRSxFQUFRcEcsU0FBU0MsY0FBYyxTQUNyQ21HLEVBQU1GLEdBQUssUUFDWEUsRUFBTUMsYUFBYSxXQUFZLElBQy9CRCxFQUFNQyxhQUFhLFFBQVMsSUFDNUJELEVBQU1DLGFBQWEsY0FBZSxJQUNsQ0wsRUFBVXpHLFlBQVk2RyxHQUN0QkosRUFBVXpHLFlBQVk0RyxHQUN0QixNQUFNRyxFQUFVdEcsU0FBU3VHLGVBQWUsV0FFeEMsT0FEQXZHLFNBQVN3RyxLQUFLQyxhQUFhVCxFQUFXTSxHQUMvQixDQUFFTixZQUFXRyxTQUFRQyxRLENBSzVCLE1BQU8sQ0FBRUosVUFIeUJoRyxTQUFTdUcsZUFBZVIsRUFBV0MsVUFBVVUsZUFHM0RQLE9BRmNuRyxTQUFTdUcsZUFBZVIsRUFBV0MsVUFBVVcsWUFFbkRQLE1BRElwRyxTQUFTdUcsZUFBZSxTQUdoRSxDQU9BVCxtQkFBbUJHLEVBQWlCRixHQUNoQyxHQUFJRSxHQUFVRixFQUFXYSxNQUFNQyxXQUFZLENBQ3ZDLE1BQU1ELEVBQVE1RyxTQUFTQyxjQUFjLE9BQ3JDMkcsRUFBTVYsR0FBSyxRQUNYVSxFQUFNRSxVQUFZLFdBQ2xCLE1BQU1DLEVBQVMvRyxTQUFTQyxjQUFjLE9BQ3RDOEcsRUFBT2IsR0FBSyxTQUNaYSxFQUFPRCxVQUFZLGFBQ25CLE1BQU1FLEVBQVVoSCxTQUFTQyxjQUFjLEtBQ3ZDK0csRUFBUUYsVUFBWSxtQkFDcEJFLEVBQVFDLFVBQVksT0FDcEJGLEVBQU94SCxZQUFZeUgsR0FDbkJKLEVBQU1ySCxZQUFZd0gsR0FDbEIsTUFBTUcsRUFBU2xILFNBQVNDLGNBQWMsT0FDdENpSCxFQUFPaEIsR0FBSyxTQUNaZ0IsRUFBT0osVUFBWSxhQUNuQixNQUFNSyxFQUFVbkgsU0FBU0MsY0FBYyxLQUN2Q2tILEVBQVFMLFVBQVksbUJBQ3BCSyxFQUFRRixVQUFZLFNBQ3BCQyxFQUFPM0gsWUFBWTRILEdBQ25CUCxFQUFNckgsWUFBWTJILEdBQ2xCLE1BQU1aLEVBQVV0RyxTQUFTdUcsZUFBZSxXQUV4QyxPQURBdkcsU0FBU3dHLEtBQUtDLGFBQWFHLEVBQU9OLEdBQzNCTSxDLENBR2YsQ0FNQWQscUJBQXFCQyxHQUNqQixHQUFJQSxFQUFXTyxRQUFRTCxPQUFRLENBQzNCLE1BQU1tQixFQUFTcEgsU0FBU0MsY0FBYyxPQUN0Q21ILEVBQU9sQixHQUFLLFVBQ1osTUFBTW1CLEVBQU9ySCxTQUFTQyxjQUFjLE9BQ3BDb0gsRUFBS0MsSUFBTXZCLEVBQVdPLFFBQVFlLEtBQUtDLElBQ25DRCxFQUFLRSxJQUFNeEIsRUFBV08sUUFBUWUsS0FBS0UsSUFDbkMsTUFBTUMsRUFBaUJ4SCxTQUFTQyxjQUFjLFFBTTlDLE9BTEF1SCxFQUFlbkIsYUFBYSxRQUFTLGdCQUNyQ21CLEVBQWVQLFVBQVlsQixFQUFXTyxRQUFRa0IsZUFDOUNKLEVBQU83SCxZQUFZOEgsR0FDbkJELEVBQU83SCxZQUFZaUksR0FDbkJ4SCxTQUFTd0csS0FBS0MsYUFBYVcsRUFBUXBILFNBQVN3RyxLQUFLaUIsWUFDMUNMLEMsQ0FHZixFLHNCQ3hFRyxNQUFNTSxFQUNEQyxlQUVBQyxnQkFFREMsT0FFQ0MsUUFFQUMsR0FDQUMsR0FFQW5GLEVBQ0FqQyxFQUVBcUgsR0FDQUMsR0FFQUMsR0FDQUMsR0FFQUMsT0FDQUMsZ0JBQTBCLEdBQzFCQyxlQUNBQyxPQUVBQyxVQUFvQixFQUU1QkMsWUFBWXRDLEdBQ1JsSCxLQUFLeUksZUFBaUIzSCxTQUFTQyxjQUFjLFVBQzdDZixLQUFLMEksZ0JBQWtCMUksS0FBS3lJLGVBQWVyRixXQUFXLEtBQU0sQ0FBRXFHLE9BQU8sSUFDckV6SixLQUFLMkksT0FBU3pCLEVBQ2RsSCxLQUFLbUosT0FBU3pHLFFBQVUsRUFBQW5CLEVBQ3hCdkIsS0FBS3NKLE9BQVMsQ0FDbEIsQ0FHV0ksYUFDUCxPQUFPMUosS0FBSzRJLE9BQ2hCLENBRVcxRixhQUNQLE9BQU9sRCxLQUFLOEksRUFDaEIsQ0FFVzdGLFlBQ1AsT0FBT2pELEtBQUs2SSxFQUNoQixDQUVXM0IsWUFDUCxPQUFPbEgsS0FBSzJJLE1BQ2hCLENBRVdnQixZQUNQLE9BQU8zSixLQUFLc0osTUFDaEIsQ0FFV00sb0JBQ1AsT0FBTzVKLEtBQUt5SSxjQUNoQixDQUVXb0IscUJBQ1AsT0FBTzdKLEtBQUswSSxlQUNoQixDQUVPb0IsV0FDSCxPQUFPOUosS0FBS3NKLE1BQ2hCLENBRU9TLFdBQ0gsTUFBTXpJLEVBQU1ELEtBQUtDLE1BQ2pCLEdBQUlBLEVBQU10QixLQUFLdUosVUFBWSxJQUFPdkosS0FBS29KLGdCQUFpQixDQUNwRHBKLEtBQUswSSxnQkFBZ0I1RSxVQUFVOUQsS0FBS2tILE1BQU8sRUFBRyxFQUFHbEgsS0FBSzZJLEdBQUk3SSxLQUFLOEksR0FBSTlJLEtBQUtpSixHQUFJakosS0FBS2tKLEdBQUlsSixLQUFLMkQsRUFBRzNELEtBQUswQixHQUNsRyxNQUFNc0ksRUFBWWhLLEtBQUswSSxnQkFBZ0J1QixhQUFhLEVBQUcsRUFBR2pLLEtBQUsrSSxHQUFJL0ksS0FBS2dKLElBQzdDLE1BQXZCaEosS0FBS3FKLGVBQ0xySixLQUFLcUosZUFBaUJXLEVBQVVFLEtBRWhDbEssS0FBS3FKLGVBQWVjLElBQUlILEVBQVVFLE1BRXRDbEssS0FBS3VKLFVBQVlqSSxFQUNqQnRCLEtBQUtzSixRLENBRVQsT0FBTyxJQUFJYyxVQUFVcEssS0FBS3FKLGVBQWVnQixRQUFTckssS0FBSytJLEdBQUkvSSxLQUFLZ0osR0FDcEUsQ0FFV3NCLFlBQ1AsTUFBTWhKLEVBQU1ELEtBQUtDLE1BQ2pCLEdBQUlBLEVBQU10QixLQUFLdUosVUFBWSxJQUFPdkosS0FBS29KLGdCQUFpQixDQUNwRHBKLEtBQUswSSxnQkFBZ0I1RSxVQUFVOUQsS0FBS2tILE1BQU8sRUFBRyxFQUFHbEgsS0FBSzZJLEdBQUk3SSxLQUFLOEksR0FBSTlJLEtBQUtpSixHQUFJakosS0FBS2tKLEdBQUlsSixLQUFLMkQsRUFBRzNELEtBQUswQixHQUNsRyxNQUFNc0ksRUFBWWhLLEtBQUswSSxnQkFBZ0J1QixhQUFhLEVBQUcsRUFBR2pLLEtBQUsrSSxHQUFJL0ksS0FBS2dKLElBQzdDLE1BQXZCaEosS0FBS3FKLGVBQ0xySixLQUFLcUosZUFBaUJXLEVBQVVFLEtBRWhDbEssS0FBS3FKLGVBQWVjLElBQUlILEVBQVVFLE1BRXRDbEssS0FBS3VKLFVBQVlqSSxFQUNqQnRCLEtBQUtzSixRLENBRVQsT0FBTyxJQUFJYyxVQUFVcEssS0FBS3FKLGVBQWVnQixRQUFTckssS0FBSytJLEdBQUkvSSxLQUFLZ0osR0FDcEUsQ0FFT3VCLGVBQ0h2SyxLQUFLNkksR0FBSzdJLEtBQUsySSxPQUFPNkIsV0FDdEJ4SyxLQUFLOEksR0FBSzlJLEtBQUsySSxPQUFPOEIsWUFFdEIsSUFBSUMsRUFBUyxJQUFNbEksS0FBS3FCLElBQUk3RCxLQUFLNkksR0FBSzdJLEtBQUs4SSxHQUFLLEVBQUssR0FHckQ5SSxLQUFLMkQsRUFBSW5CLEtBQUttSSxNQUFNM0ssS0FBSzZJLEdBQUs2QixHQUM5QjFLLEtBQUswQixFQUFJYyxLQUFLbUksTUFBTTNLLEtBQUs4SSxHQUFLNEIsR0FDOUIxSyxLQUFLK0ksR0FBS3ZHLEtBQUttSSxNQUFNbkksS0FBS3FCLElBQUk3RCxLQUFLMkQsRUFBSTNELEtBQUswQixFQUFJLEVBQUssSUFDckQxQixLQUFLZ0osR0FBS3hHLEtBQUttSSxNQUFNbkksS0FBS3FCLElBQUk3RCxLQUFLMEIsRUFBSTFCLEtBQUsyRCxFQUFJLEVBQUssSUFDckQzRCxLQUFLaUosR0FBS3pHLEtBQUttSSxPQUFPM0ssS0FBSytJLEdBQUsvSSxLQUFLMkQsR0FBSyxHQUMxQzNELEtBQUtrSixHQUFLMUcsS0FBS21JLE9BQU8zSyxLQUFLZ0osR0FBS2hKLEtBQUswQixHQUFLLEdBRTFDMUIsS0FBS3lJLGVBQWV4RixNQUFRakQsS0FBSytJLEdBQ2pDL0ksS0FBS3lJLGVBQWV2RixPQUFTbEQsS0FBS2dKLEdBRWxDaEosS0FBSzBJLGdCQUFnQm5GLFVBQVksUUFDakN2RCxLQUFLMEksZ0JBQWdCbEYsU0FBUyxFQUFHLEVBQUd4RCxLQUFLK0ksR0FBSS9JLEtBQUtnSixHQUN0RCxDQUVPNEIsaUJBQWlCQyxHQU1wQixHQUxBN0ssS0FBSzRJLFFBQVVpQyxFQUFjQyxZQUFjLGNBQ04sTUFBakNELEVBQWN6QixrQkFDZHBKLEtBQUtvSixnQkFBa0J5QixFQUFjekIsa0JBR3JDMkIsVUFBVUMsZUFBZ0JELFVBQVVDLGFBQWFDLGFBa0NqRCxPQUFPQyxRQUFRQyxPQUFPLHdEQWpDdEIsSUFDSSxNQUFNQyxFQUFZLENBQ2RDLE9BQU8sRUFDUG5FLE1BQU8sQ0FDSDRELFdBQVk5SyxLQUFLNEksUUFDakIzRixNQUFPLENBQUVXLElBQUtpSCxFQUFjNUgsTUFBTVcsSUFBS0MsSUFBS2dILEVBQWM1SCxNQUFNWSxPQUd4RSxHQUFJa0gsVUFBVUMsYUFBYU0saUJBQWtCLENBQ3pDLE1BQU1DLFFBQWdCUixVQUFVQyxhQUFhTSxtQkFDdkNFLEVBQWUsR0FDckIsSUFBSUMsRUFBbUIsRUFDdkJGLEVBQVFHLFNBQVEsU0FBVUMsR0FDSCxjQUFmQSxFQUFPQyxPQUNQSixFQUFhQyxLQUFzQkUsRUFBT0UsU0FFbEQsSUFDSUwsRUFBYTlLLE9BQVMsSUFDdEIwSyxFQUFLbEUsTUFBTTJFLFNBQVcsQ0FBRUMsTUFBT04sRUFBYUEsRUFBYTlLLE9BQVMsSSxDQUcxRSxNQUFNcUwsUUFBZWhCLFVBQVVDLGFBQWFDLGFBQWFHLEdBT3pELE9BTEFwTCxLQUFLMkksT0FBT3FELFVBQVlELEVBQ3hCL0wsS0FBSzJJLGFBQWUsSUFBSXVDLFNBQTJCZSxJQUMvQ2pNLEtBQUsySSxPQUFPdUQsaUJBQW1CLElBQU1ELEVBQVFqTSxLQUFLMkksT0FBTyxJQUU3RDNJLEtBQUt1SyxnQkFDRSxDLENBQ1QsTUFBTzRCLEdBQ0wsT0FBT2pCLFFBQVFDLE9BQU9nQixFLENBS2xDLENBRU9DLFVBQ0gsTUFBTWxGLEVBQVFsSCxLQUFLMkksT0FDbkIzSSxLQUFLbUosT0FBT2xJLGlCQUFpQixzQkFBc0IsV0FDL0MsTUFBTThLLEVBQXNCN0UsRUFBTThFLFVBRWxDLEdBREFLLFFBQVFDLElBQUksa0JBQ1JQLFFBQXlDLENBQzFCQSxFQUFPUSxZQUVmYixTQUFRLFNBQVVjLEdBQ3JCQSxFQUFNQyxNQUNWLElBRUF2RixFQUFNOEUsVUFBWSxLQUVsQixJQUFJVSxFQUFZNUwsU0FBU3VHLGVBQWUsT0FDcENxRixTQUNBQSxFQUFVQyxRLENBR3RCLEdBQ0osRUN4TXdCakssUUFBVSxFQUFBbkIsRUF5Qy9CLFNBQVNxTCxFQUFjL0QsRUFBWUMsR0FDdEMsSUFBSTRCLEVBQVMsSUFBTWxJLEtBQUtxQixJQUFJZ0YsRUFBS0MsRUFBSyxFQUFLLEdBQ3ZDK0QsRUEzQkEsaUVBQWlFQyxLQUFLL0IsVUFBVWdDLFdBMkIxRHJLLE9BQU9zSyxXQUFhbkUsRUFBSyxFQUVuRCxJQUdJbEYsRUFBWWtGLEVBQUs2QixFQUNqQmhKLEVBQVlvSCxFQUFLNEIsRUFHckIsTUFBTyxDQVBFN0IsRUFBS2dFLEVBQ0wvRCxFQUFLK0QsRUFJR3JLLEtBQUtxQixJQUFJRixFQUFJakMsRUFBSSxFQUFLLEdBQ3RCYyxLQUFLcUIsSUFBSW5DLEVBQUlpQyxFQUFJLEVBQUssR0FDZkEsRUFBR2pDLEVBQy9CLENBUU9rSixlQUFlcUMsRUFBVXBHLEdBQzVCLElBQ0ksTUFBTXFHLFFBQWlCQyxNQUFNdEcsR0FDN0IsSUFBS3FHLEVBQVNFLEdBQ1YsTUFBTSxJQUFJaEksTUFBTSx3QkFBMEI4SCxFQUFTRyxRQUV2RCxPQUFPSCxFQUFTSSxNLENBQ2xCLE1BQU9uQixHQUNMLE9BQU9qQixRQUFRQyxPQUFPZ0IsRSxDQUU5QixDLHNCQ3ZHZSxTQUFTb0IsSUFDdEIsT0FBTyxJQUFPLG9zdHVCQUFpMHh1QixjQUFVOUgsT0FBV0EsRUFDdDJ4dUIsQ0NpQ2UsTUFBTStILEVBQ1R4SSxPQUVBeUksVUFFQUMsYUFBdUIsRUFFdkI3RSxHQUNBQyxHQUVBSyxPQUVBd0UsS0FDQUMsS0FDQUMsUUFFRUMsTUFTVnRFLFlBQVlpRSxFQUEwQjlKLEVBQVdqQyxFQUFXaU0sRUFBY0MsRUFBY0MsR0FDcEY3TixLQUFLeU4sVUFBWUEsRUFDakJ6TixLQUFLNkksR0FBS2xGLEVBQ1YzRCxLQUFLOEksR0FBS3BILEVBQ1YxQixLQUFLbUosT0FBU3pHLFFBQVUsRUFBQW5CLEVBQ3hCdkIsS0FBSzJOLEtBQU9BLEVBQ1ozTixLQUFLNE4sS0FBT0EsRUFDWjVOLEtBQUs4TixPQUFRLEVBQ2I5TixLQUFLNk4sUUFBVUEsQ0FDbkIsQ0FXT2pELGlCQUFpQm1ELEVBQW1CQyxFQUEwQkMsR0FDakVqTyxLQUFLZ0YsT0FBUyxJQUFJLEVBQ2xCLE1BQU1BLEVBQVNoRixLQUFLZ0YsT0FNcEIsT0FKQWhGLEtBQUttSixPQUFPbEksaUJBQWlCLG1CQUFxQmpCLEtBQUs0TixNQUFNLFdBQ3pENUksRUFBT2tKLFlBQVksQ0FBRUMsS0FBTSxTQUMzQm5KLEVBQU9vSixXQUNYLFVBQ2FwTyxLQUFLcU8sS0FBS04sRUFBV0MsRUFBY0MsRUFDcEQsQ0FPT0ssUUFBUUMsRUFBc0I1RSxHQUM3QjNKLEtBQUswTixjQUdUMU4sS0FBSzBOLGFBQWMsRUFFbkIxTixLQUFLZ0YsT0FBT2tKLFlBQVksQ0FBRUMsS0FBTSxVQUFXSSxZQUFXNUUsU0FBUyxDQUFDNEUsRUFBVXJFLEtBQUtzRSxTQUNuRixDQVVVSCxLQUFLTixFQUFtQkMsRUFBMEJDLEdBQ3hELElBQUtRLEVBQUlDLEVBQUkzRixFQUFJQyxFQUFJckYsRUFBR2pDLEdBQUtrTCxFQUFjNU0sS0FBSzZJLEdBQUk3SSxLQUFLOEksSUFFekQsTUFBTTZGLEVBQXFCLElBQUlDLFlBQW9CLGdCQUFpQixDQUFFQyxPQUFRLENBQUVKLEdBQUlBLEVBQUlDLEdBQUlBLEtBQzVGMU8sS0FBS21KLE9BQU8yRixjQUFjSCxHQUUxQjNPLEtBQUtnRixPQUFPa0osWUFBWSxDQUNwQkMsS0FBTSxPQUNOcEYsR0FBSUEsRUFDSkMsR0FBSUEsRUFDSitGLFlBQWFoQixFQUNiaUIsT0FBUWhQLEtBQUt5TixVQUNiSSxRQUFTN04sS0FBSzZOLFVBR2xCN04sS0FBS2dGLE9BQU9pSyxVQUFhQyxJQUNyQixJQUFJQyxFQUFNRCxFQUFHaEYsS0FDYixPQUFRaUYsRUFBSWhCLE1BQ1IsSUFBSyxTQUFVLENBQ1gsSUFBSWlCLEVBQU9DLEtBQUtDLE1BQU1ILEVBQUlDLE1BQzFCLE1BQU1HLEVBQVN4RyxFQUFLcEYsRUFDZDZMLEVBQVN4RyxFQUFLdEgsRUFDcEIwTixFQUFLLElBQU1HLEVBQ1hILEVBQUssSUFBTUcsRUFDWEgsRUFBSyxJQUFNRyxFQUNYSCxFQUFLLEtBQU9HLEVBQ1pILEVBQUssSUFBTUksRUFDWEosRUFBSyxJQUFNSSxFQUNYSixFQUFLLElBQU1JLEVBQ1hKLEVBQUssS0FBT0ksRUFDWixNQUFNQyxFQUF3QixJQUFJYixZQUFvQixzQkFBdUIsQ0FDekVDLE9BQVEsQ0FBRU8sS0FBTUEsS0FFcEJwUCxLQUFLbUosT0FBTzJGLGNBQWNXLEdBQzFCLEssQ0FFSixJQUFLLGFBQ0QsR0FBZSxHQUFYTixFQUFJbE4sSUFBYSxDQUVqQixNQUFNaUcsRUFBU3BILFNBQVN1RyxlQUFlLFdBQ25DYSxJQUNBQSxFQUFPd0gsY0FBMkIsaUJBQWlCM0gsVUFBWSxzQkFDL0Q0SCxZQUFXLFdBQ3FCLE1BQXhCekgsRUFBTzBILGVBR1AxSCxHQUNBQSxFQUFPMEgsY0FBY0MsWUFBWTNILEVBRXpDLEdBQUcsSyxDQUdYbEksS0FBSzhOLE9BQVEsRUFDYjlOLEtBQUttSixPQUFPMkYsY0FBYyxJQUFJRixZQUFvQixhQUFlNU8sS0FBSzJOLE9BQ3RFLE1BRUosSUFBSyxjQUFlLENBQ2hCLE1BQU1xQixFQUFTRyxFQUFJSCxPQUNiYyxFQUFXLElBQUlsQixZQUFvQixjQUFnQjVPLEtBQUsyTixLQUFPLElBQU0zTixLQUFLNE4sS0FBTSxDQUNsRmlCLE9BQVEsQ0FBRWtCLElBQUtmLEVBQU9lLElBQUs5TSxNQUFPK0wsRUFBTy9MLE1BQU9DLE9BQVE4TCxFQUFPOUwsVUFFbkVsRCxLQUFLbUosT0FBTzJGLGNBQWNnQixHQUMxQixLLENBRUosSUFBSyxRQUNEOVAsS0FBS2dRLE1BQU1iLEdBQ1gsTUFFSixJQUFLLFlBQ0RuUCxLQUFLZ1EsTUFBTSxNQUluQmhRLEtBQUswTixhQUFjLEVBQ25CTyxHQUFhLEVBRWpCak8sS0FBS2dGLE9BQU9pTCxRQUFXQyxJQUNuQjdELFFBQVFGLE1BQU0sZ0NBQWlDK0QsRUFBSSxFQUV2RCxJQUFJQyxFQUFVLEtBQ1ZuQyxJQUNBdEwsT0FBTzBOLHNCQUFzQkQsRUFBUSxFQUd6QyxPQURBQSxJQUNPakYsUUFBUWUsU0FBUSxFQUMzQixDQU9PK0QsTUFBTWIsR0FDVCxJQUFJa0IsRUFDSixHQUFLbEIsRUFTRSxDQUNIa0IsRUFBUWhCLEtBQUtDLE1BQU1ILEVBQUltQixhQUN2QixNQUFNQyxFQUFrQixJQUFJM0IsWUFBb0Isa0JBQW9CNU8sS0FBSzJOLEtBQU8sSUFBTTNOLEtBQUs0TixLQUFNLENBQzdGaUIsT0FBUSxDQUFFeUIsWUFBYUQsRUFBT3pDLEtBQU01TixLQUFLNE4sUUFFN0M1TixLQUFLbUosT0FBTzJGLGNBQWN5QixFLEtBZHBCLENBR05GLEVBQVEsS0FDUixNQUFNRyxFQUF1QixJQUFJNUIsWUFBb0IsbUJBQXFCNU8sS0FBSzJOLEtBQU8sSUFBTTNOLEtBQUs0TixLQUFNLENBQ25HaUIsT0FBUSxDQUFFakIsS0FBTTVOLEtBQUs0TixRQUV6QjVOLEtBQUttSixPQUFPMkYsY0FBYzBCLEUsQ0FTbEMsQ0FFT0MsVUFDSCxPQUFPelEsS0FBSzhOLEtBQ2hCLENBQ080QyxVQUNILE9BQU8xUSxLQUFLMk4sSUFDaEIsQ0FFT2dELFVBQ0gsT0FBTzNRLEtBQUs0TixJQUNoQixDQUVPZ0QsZUFDSCxPQUFPNVEsS0FBS3lOLFNBQ2hCLENBRU9vRCxpQkFDSCxPQUFPN1EsS0FBS21KLE1BQ2hCLENBRU9pRCxVQUFpQixFQ3ZQNUIsTUFDQSxHQUNFMEUsV0FGbUMsb0JBQVhDLFFBQTBCQSxPQUFPRCxZQUFjQyxPQUFPRCxXQUFXRSxLQUFLRCxTQ0doRyxJQUFJRSxFQUNKLE1BQU1DLEVBQVEsSUFBSUMsV0FBVyxJQUNkLFNBQVNDLElBRXRCLElBQUtILElBRUhBLEVBQW9DLG9CQUFYRixRQUEwQkEsT0FBT0UsaUJBQW1CRixPQUFPRSxnQkFBZ0JELEtBQUtELFNBRXBHRSxHQUNILE1BQU0sSUFBSTdMLE1BQU0sNEdBSXBCLE9BQU82TCxFQUFnQkMsRUFDekIsQ0NYQSxNQUFNRyxFQUFZLEdBRWxCLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJLE1BQU9BLEVBQ3pCRCxFQUFVRSxNQUFNRCxFQUFJLEtBQU9FLFNBQVMsSUFBSW5ILE1BQU0sSUFHekMsU0FBU29ILEVBQWdCQyxFQUFLQyxFQUFTLEdBRzVDLE9BQVFOLEVBQVVLLEVBQUlDLEVBQVMsSUFBTU4sRUFBVUssRUFBSUMsRUFBUyxJQUFNTixFQUFVSyxFQUFJQyxFQUFTLElBQU1OLEVBQVVLLEVBQUlDLEVBQVMsSUFBTSxJQUFNTixFQUFVSyxFQUFJQyxFQUFTLElBQU1OLEVBQVVLLEVBQUlDLEVBQVMsSUFBTSxJQUFNTixFQUFVSyxFQUFJQyxFQUFTLElBQU1OLEVBQVVLLEVBQUlDLEVBQVMsSUFBTSxJQUFNTixFQUFVSyxFQUFJQyxFQUFTLElBQU1OLEVBQVVLLEVBQUlDLEVBQVMsSUFBTSxJQUFNTixFQUFVSyxFQUFJQyxFQUFTLEtBQU9OLEVBQVVLLEVBQUlDLEVBQVMsS0FBT04sRUFBVUssRUFBSUMsRUFBUyxLQUFPTixFQUFVSyxFQUFJQyxFQUFTLEtBQU9OLEVBQVVLLEVBQUlDLEVBQVMsS0FBT04sRUFBVUssRUFBSUMsRUFBUyxNQUFNQyxhQUN2ZixDQ1lBLFFBeEJBLFNBQVlDLEVBQVNDLEVBQUtILEdBQ3hCLEdBQUksZUFBc0JHLElBQVFELEVBQ2hDLE9BQU8sZUFJVCxNQUFNRSxHQURORixFQUFVQSxHQUFXLENBQUMsR0FDREcsU0FBV0gsRUFBUVQsS0FBT0EsS0FLL0MsR0FIQVcsRUFBSyxHQUFlLEdBQVZBLEVBQUssR0FBWSxHQUMzQkEsRUFBSyxHQUFlLEdBQVZBLEVBQUssR0FBWSxJQUV2QkQsRUFBSyxDQUNQSCxFQUFTQSxHQUFVLEVBRW5CLElBQUssSUFBSUwsRUFBSSxFQUFHQSxFQUFJLEtBQU1BLEVBQ3hCUSxFQUFJSCxFQUFTTCxHQUFLUyxFQUFLVCxHQUd6QixPQUFPUSxDQUNULENBRUEsT0FBT0wsRUFBZ0JNLEVBQ3pCLEUsNjhDQ2lCTSxRQUFFRSxHQUFZLEVBaUVMLE1BQU1DLEVBQ1ZDLFdBQ0FDLFFBQ0F2RSxRQUNBNUssTUFDQUMsT0FDQW1QLFVBQ0FDLFVBQ0FDLFFBQ0FDLFlBQXNCLEVBQ3JCQyxZQUNBN0wsZ0JBQ0F1QyxPQUNBd0UsS0FDQXNFLFFBQ0FTLFlBQ0FDLE9BWVJuSixZQUFZdkcsRUFBZUMsRUFBZ0JtUCxHQUN2Q3JTLEtBQUtpRCxNQUFRQSxFQUNiakQsS0FBS2tELE9BQVNBLEVBQ2RsRCxLQUFLcVMsVUFBWUEsRUFDakJyUyxLQUFLbUosT0FBU3pHLFFBQVUsRUFBQW5CLEVBQ3hCdkIsS0FBSzJOLEtBQU8sSUFDWjNOLEtBQUtpUyxRQUFVQSxFQUNmNUYsUUFBUUMsSUFBSSxTQUFVdE0sS0FBS2lTLFFBQy9CLENBY0FyTCxrQkFDSTNELEVBQ0FDLEVBQ0EwUCxFQUNBQyxFQUNBUixFQUNBM0ssR0FFQSxPQUFPd0ssRUFBTVksZUFBZSxDQUFFN1AsUUFBT0MsU0FBUTBQLGFBQVlDLFFBQU9SLFlBQVczSyxTQUMvRSxDQWVBZCw4QkFDSTNELEVBQ0FDLEVBQ0E2UCxFQUNBVixFQUNBM0ssR0FFQSxPQUFPd0ssRUFBTVksZUFBZSxDQUFFN1AsUUFBT0MsU0FBUTZQLFdBQVVWLFlBQVczSyxTQUN0RSxDQUVBZCw0QkFBNEJvTSxHQUN4QixNQUFNQyxFQUFTLElBQUlmLEVBQU1jLEVBQU8vUCxNQUFPK1AsRUFBTzlQLE9BQVE4UCxFQUFPWCxXQUNwQyxNQUFyQlcsRUFBT1IsYUFDUFMsRUFBT1QsV0FBYVEsRUFBT1IsWUFFL0IsSUFDSSxJQUNJSyxFQURBRCxFQUF5QixHQUU3QixNQUFNTSxFQUFhRixFQUNiRyxFQUFlSCxFQUNyQixHQUE2QixNQUF6QkUsRUFBV04sWUFBMEMsTUFBcEJNLEVBQVdMLE1BQ2YsTUFBekJNLEVBQWFKLFdBQ2JILEVBQWFNLEVBQVdOLFdBQ3hCQyxFQUFRSyxFQUFXTCxNQUNuQjdTLEtBQUsrUyxTQUFXRixFQUFNTyxLQUFJLFNBQVV4USxFQUFHekIsRUFBR2hCLEdBQ3RDLE1BQU8sQ0FBRXlOLEtBQU1oTCxFQUFFLEdBQUkwUCxVQUFXTSxFQUFXelIsR0FBRyxHQUNsRCxTQUVELElBQTZCLE1BQXpCZ1MsRUFBYUosU0FLcEIsS0FBTSw0Q0FKTi9TLEtBQUsrUyxTQUFXSSxFQUFhSixTQUM3QkgsRUFBYTVTLEtBQUsrUyxTQUFTSyxLQUFLQyxHQUFNLENBQUNBLEVBQUVmLGFBQ3pDTyxFQUFRN1MsS0FBSytTLFNBQVNLLEtBQUtDLEdBQU0sQ0FBQ0EsRUFBRXpGLE8sQ0FJeEMsYUFBYXFGLEVBQU9LLFlBQVlWLEVBQVlDLEVBQU9HLEVBQU90TCxNLENBQzVELE1BQU95RSxHQUNMLEdBQUtBLEVBQTJCb0gsS0FFNUIsT0FEQWxILFFBQVFGLE1BQU1BLEdBQ1BqQixRQUFRQyxPQUFPZ0IsRSxDQUdsQyxDQVVRdkIsa0JBQ0pnSSxFQUNBQyxFQUNBbkwsR0FFQSxNQUFNOEwsRUFBWSxJQUFJQyxNQUFNLGFBTzVCLElBQUlDLEVBQWdCQyxFQU5wQjNULEtBQUttSixPQUFPMkYsY0FBYzBFLEdBQzFCbkgsUUFBUUMsSUFDSiwwQkFDQSwyRUFJSlcsRUFBVWpOLEtBQUtxUyxXQUNWdUIsTUFBTTFKLElBQ0hsSyxLQUFLb1MsUUFBVWxJLEVBQ2ZsSyxLQUFLNk4sUUFBVTNELEVBQUsyRCxRQUdwQjdOLEtBQUsyUyxPQUFTaE0sRUFBVWtOLGdCQUFnQjdULEtBQUtvUyxTQUM3Q3BTLEtBQUsyUyxPQUFPdkwsUUFBVVQsRUFBVW1OLGNBQWM5VCxLQUFLb1MsU0FDbkRwUyxLQUFLMlMsT0FBT2pMLE1BQVFmLEVBQVVvTixZQUFZL1QsS0FBS29TLFFBQVExSyxNQUFNQyxXQUFZM0gsS0FBS29TLFNBRTFFMUssSUFDQWdNLEVBQVksSUFBSSxLQUNoQkEsRUFBVTNSLFVBQVUsR0FDcEJqQixTQUFTdUcsZUFBZSxVQUFVaEgsWUFBWXFULEVBQVVwVCxLQUN4RHFULEVBQWMsSUFBSSxLQUNsQkEsRUFBWTVSLFVBQVUsR0FDdEJqQixTQUFTdUcsZUFBZSxVQUFVaEgsWUFBWXNULEVBQVlyVCxNQUc5RCxJQUFJMFQsRUFBaUIsSUFBSVAsTUFBTSxrQkFLL0IsT0FKQTNTLFNBQVNnTyxjQUFja0YsR0FFdkJoVSxLQUFLeVMsWUFBYyxHQUNuQnpTLEtBQUttUyxXQUFhLElBQUkzSixFQUFtQnhJLEtBQUsyUyxPQUFPekwsT0FDOUNsSCxLQUFLbVMsV0FBVzhCLFdBQVdqVSxLQUFLb1MsUUFBUXZILGNBQWMsSUFFaEUrSSxNQUFLLEtBQ0YsTUFBTTVGLEVBQWUsSUFBT3RHLEVBQVFnTSxFQUFVeFIsU0FBVyxLQUNuRCtMLEVBQWMsSUFBT3ZHLEVBQVFpTSxFQUFZelIsU0FBVyxLQUMxRDBRLEVBQVdsSCxTQUFRLENBQUM0RyxFQUEwQjRCLEtBQzFDbFUsS0FBS3lTLFlBQVlsQixLQUNiLElBQUkvRCxFQUFVOEUsRUFBV3RTLEtBQUtpRCxNQUFPakQsS0FBS2tELE9BQVFsRCxLQUFLMk4sS0FBTWtGLEVBQU1xQixHQUFPLEdBQUlsVSxLQUFLNk4sVUFFdkY3TixLQUFLeVMsWUFBWXlCLEdBQU9ELFdBQVdqVSxLQUFLb1MsUUFBUStCLFdBQVluRyxFQUFjQyxFQUFZLElBRzFGak8sS0FBSzBTLGFBQWMsQ0FBSSxJQUUxQjBCLE9BQU0sU0FBVWpJLEdBQ2IsT0FBT2pCLFFBQVFDLE9BQU9nQixFQUMxQixJQUVKbk0sS0FBS21KLE9BQU9sSSxpQkFBaUIsYUFBZWpCLEtBQUsyTixNQUFNLEtBS2pCLElBSlAzTixLQUFLeVMsWUFBWTRCLFFBQVFDLElBQ2pCLElBQXhCQSxFQUFVN0QsWUFHRS9QLFFBQ25CVixLQUFLbUosT0FBTzJGLGNBQWMsSUFBSUYsWUFBb0IsZ0IsSUFJMUQsSUFBSTJGLEVBQVUsS0FDTnZVLEtBQUswUyxhQUFlMVMsS0FBS3dTLFlBQ3pCeFMsS0FBS3lTLFlBQVkvRyxTQUFTOEksR0FDdEJBLEVBQVdsRyxRQUFRdE8sS0FBS21TLFdBQVc3SCxNQUFPdEssS0FBS21TLFdBQVd4SSxTQUdsRXlHLHNCQUFzQm1FLEVBQVEsRUFHbEMsT0FEQUEsSUFDT3ZVLElBQ1gsQ0FZTzRLLG9CQUNIZ0ksRUFDQUMsRUFDQVYsRUFDQXpLLEdBRUEsTUFBTThMLEVBQVksSUFBSUMsTUFBTSxhQU81QixJQUFJQyxFQUFnQkMsRUFOcEIzVCxLQUFLbUosT0FBTzJGLGNBQWMwRSxHQUMxQm5ILFFBQVFDLElBQ0osMEJBQ0EsMkVBSUpXLEVBQVVqTixLQUFLcVMsV0FDVnVCLE1BQU0xSixJQUNIbEssS0FBS29TLFFBQVVsSSxFQUNmbEssS0FBSzZOLFFBQVUzRCxFQUFLMkQsUUFHcEI3TixLQUFLMlMsT0FBU2hNLEVBQVVrTixnQkFBZ0I3VCxLQUFLb1MsU0FDN0NwUyxLQUFLMlMsT0FBT3ZMLFFBQVVULEVBQVVtTixjQUFjOVQsS0FBS29TLFNBQ25EcFMsS0FBSzJTLE9BQU9qTCxNQUFRZixFQUFVb04sWUFBWS9ULEtBQUtvUyxRQUFRMUssTUFBTUMsV0FBWTNILEtBQUtvUyxTQUUxRTFLLElBQ0FnTSxFQUFZLElBQUksS0FDaEJBLEVBQVUzUixVQUFVLEdBQ3BCakIsU0FBU3VHLGVBQWUsVUFBVWhILFlBQVlxVCxFQUFVcFQsS0FDeERxVCxFQUFjLElBQUksS0FDbEJBLEVBQVk1UixVQUFVLEdBQ3RCakIsU0FBU3VHLGVBQWUsVUFBVWhILFlBQVlzVCxFQUFZclQsTUFHOUQsSUFBSTBULEVBQWlCLElBQUlQLE1BQU0sa0JBSy9CLE9BSkEzUyxTQUFTZ08sY0FBY2tGLEdBRXZCaFUsS0FBS3lTLFlBQWMsR0FFWk4sRUFBVzhCLFdBQVdqVSxLQUFLb1MsUUFBUXZILGNBQWMsSUFFM0QrSSxNQUFLLEtBQ0YsTUFBTTVGLEVBQWUsSUFBT3RHLEVBQVFnTSxFQUFVeFIsU0FBVyxLQUNuRCtMLEVBQWMsSUFBT3ZHLEVBQVFpTSxFQUFZelIsU0FBVyxLQUMxRDBRLEVBQVdsSCxTQUFRLENBQUM0RyxFQUEwQjRCLEtBQzFDbFUsS0FBS3lTLFlBQVlsQixLQUNiLElBQUkvRCxFQUFVOEUsRUFBV3RTLEtBQUtpRCxNQUFPakQsS0FBS2tELE9BQVFsRCxLQUFLMk4sS0FBTWtGLEVBQU1xQixHQUFRbFUsS0FBSzZOLFVBRXBGN04sS0FBS3lTLFlBQVl5QixHQUFPRCxXQUFXalUsS0FBS29TLFFBQVErQixXQUFZbkcsRUFBY0MsRUFBWSxJQUcxRmpPLEtBQUswUyxhQUFjLENBQUksSUFFMUIwQixPQUFNLFNBQVVqSSxHQUNiLE9BQU9qQixRQUFRQyxPQUFPZ0IsRUFDMUIsSUFFSm5NLEtBQUttSixPQUFPbEksaUJBQWlCLGFBQWVqQixLQUFLMk4sTUFBTSxLQUtqQixJQUpQM04sS0FBS3lTLFlBQVk0QixRQUFRQyxJQUNqQixJQUF4QkEsRUFBVTdELFlBR0UvUCxRQUNuQlYsS0FBS21KLE9BQU8yRixjQUFjLElBQUlGLFlBQW9CLGdCLElBSTFELElBQUkyRixFQUFVLEtBQ052VSxLQUFLMFMsYUFBZTFTLEtBQUt3UyxZQUN6QnhTLEtBQUt5UyxZQUFZL0csU0FBUzhJLEdBQ3RCQSxFQUFXbEcsUUFBUTZELEVBQVdwSSxXQUFZb0ksRUFBV3JJLGNBRzdEc0csc0JBQXNCbUUsRUFBUSxFQUdsQyxPQURBQSxJQUNPdlUsSUFDWCxDQUtPa0MsU0FDRWxDLEtBQUswUyxjQUFlMVMsS0FBS3dTLFlBQ1AsTUFBbkJ4UyxLQUFLbVMsWUFDTG5TLEtBQUt5UyxZQUFZL0csU0FBUzhJLEdBQWVBLEVBQVdsRyxRQUFRdE8sS0FBS21TLFdBQVc3SCxNQUFPdEssS0FBS21TLFdBQVd4SSxRQUUzRyxDQUVPL0MscUJBQ0gsT0FBTzVHLEtBQUsrUyxRQUNoQixDQU1PbEMsaUJBQ0gsT0FBTzdRLEtBQUttSixNQUNoQixDQUVXc0wsWUFDUCxPQUFPeE8sT0FBT3lPLE9BQU8xVSxLQUFLMlMsT0FDOUIsQ0FLT2dDLFVBQ0gzVSxLQUFLNFUscUJBQ0w1VSxLQUFLNlUsZ0JBQ1QsQ0FLT0MsV0FBV2xILEdBRWQsSUFBSW1ILEVBQVEsSUFBSXRCLE1BRE0sbUJBQXFCN0YsR0FFM0M1TixLQUFLbUosT0FBTzJGLGNBQWNpRyxFQUM5QixDQUtPRixpQkFDYzNDLEVBQU04QyxjQUNkdEosU0FBU3VKLElBQ2RqVixLQUFLOFUsV0FBV0csRUFBT3JILEtBQUssR0FFcEMsQ0FLT2dILHFCQUNINVUsS0FBS21TLFdBQVcvRixVQUNoQixJQUFJMkksRUFBUSxJQUFJdEIsTUFBTSxzQkFDdEJ6VCxLQUFLbUosT0FBTzJGLGNBQWNpRyxFQUM5QixFQ3RhSixTQUNJN0MsTUFBSyxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQVJuZnQvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL0FSbmZ0Ly4vbm9kZV9tb2R1bGVzL3N0YXRzLmpzL2J1aWxkL3N0YXRzLm1pbi5qcyIsIndlYnBhY2s6Ly9BUm5mdC8uL25vZGVfbW9kdWxlcy93b3JrZXItbG9hZGVyL2Rpc3QvcnVudGltZS9pbmxpbmUuanMiLCJ3ZWJwYWNrOi8vQVJuZnQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vQVJuZnQvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vQVJuZnQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0FSbmZ0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vQVJuZnQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9BUm5mdC8uL3NyYy91dGlscy9odG1sL0NvbnRhaW5lci50cyIsIndlYnBhY2s6Ly9BUm5mdC8uL3NyYy9yZW5kZXJlcnMvQ2FtZXJhVmlld1JlbmRlcmVyLnRzIiwid2VicGFjazovL0FSbmZ0Ly4vc3JjL3V0aWxzL0FSbmZ0VXRpbHMudHMiLCJ3ZWJwYWNrOi8vQVJuZnQvLi9zcmMvV29ya2VyLnRzIiwid2VicGFjazovL0FSbmZ0Ly4vc3JjL05GVFdvcmtlci50cyIsIndlYnBhY2s6Ly9BUm5mdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzIiwid2VicGFjazovL0FSbmZ0Ly4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanMiLCJ3ZWJwYWNrOi8vQVJuZnQvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly9BUm5mdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanMiLCJ3ZWJwYWNrOi8vQVJuZnQvLi9zcmMvQVJuZnQudHMiLCJ3ZWJwYWNrOi8vQVJuZnQvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiQVJuZnRcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiQVJuZnRcIl0gPSBmYWN0b3J5KCk7XG59KSh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgPyBzZWxmIDogdGhpcywgKCkgPT4ge1xucmV0dXJuICIsIi8vIHN0YXRzLmpzIC0gaHR0cDovL2dpdGh1Yi5jb20vbXJkb29iL3N0YXRzLmpzXG4oZnVuY3Rpb24oZixlKXtcIm9iamVjdFwiPT09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKTpmLlN0YXRzPWUoKX0pKHRoaXMsZnVuY3Rpb24oKXt2YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoYSl7Yy5hcHBlbmRDaGlsZChhLmRvbSk7cmV0dXJuIGF9ZnVuY3Rpb24gdShhKXtmb3IodmFyIGQ9MDtkPGMuY2hpbGRyZW4ubGVuZ3RoO2QrKyljLmNoaWxkcmVuW2RdLnN0eWxlLmRpc3BsYXk9ZD09PWE/XCJibG9ja1wiOlwibm9uZVwiO2w9YX12YXIgbD0wLGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtjLnN0eWxlLmNzc1RleHQ9XCJwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7Y3Vyc29yOnBvaW50ZXI7b3BhY2l0eTowLjk7ei1pbmRleDoxMDAwMFwiO2MuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsZnVuY3Rpb24oYSl7YS5wcmV2ZW50RGVmYXVsdCgpO1xudSgrK2wlYy5jaGlsZHJlbi5sZW5ndGgpfSwhMSk7dmFyIGs9KHBlcmZvcm1hbmNlfHxEYXRlKS5ub3coKSxnPWssYT0wLHI9ZShuZXcgZi5QYW5lbChcIkZQU1wiLFwiIzBmZlwiLFwiIzAwMlwiKSksaD1lKG5ldyBmLlBhbmVsKFwiTVNcIixcIiMwZjBcIixcIiMwMjBcIikpO2lmKHNlbGYucGVyZm9ybWFuY2UmJnNlbGYucGVyZm9ybWFuY2UubWVtb3J5KXZhciB0PWUobmV3IGYuUGFuZWwoXCJNQlwiLFwiI2YwOFwiLFwiIzIwMVwiKSk7dSgwKTtyZXR1cm57UkVWSVNJT046MTYsZG9tOmMsYWRkUGFuZWw6ZSxzaG93UGFuZWw6dSxiZWdpbjpmdW5jdGlvbigpe2s9KHBlcmZvcm1hbmNlfHxEYXRlKS5ub3coKX0sZW5kOmZ1bmN0aW9uKCl7YSsrO3ZhciBjPShwZXJmb3JtYW5jZXx8RGF0ZSkubm93KCk7aC51cGRhdGUoYy1rLDIwMCk7aWYoYz5nKzFFMyYmKHIudXBkYXRlKDFFMyphLyhjLWcpLDEwMCksZz1jLGE9MCx0KSl7dmFyIGQ9cGVyZm9ybWFuY2UubWVtb3J5O3QudXBkYXRlKGQudXNlZEpTSGVhcFNpemUvXG4xMDQ4NTc2LGQuanNIZWFwU2l6ZUxpbWl0LzEwNDg1NzYpfXJldHVybiBjfSx1cGRhdGU6ZnVuY3Rpb24oKXtrPXRoaXMuZW5kKCl9LGRvbUVsZW1lbnQ6YyxzZXRNb2RlOnV9fTtmLlBhbmVsPWZ1bmN0aW9uKGUsZixsKXt2YXIgYz1JbmZpbml0eSxrPTAsZz1NYXRoLnJvdW5kLGE9Zyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb3x8MSkscj04MCphLGg9NDgqYSx0PTMqYSx2PTIqYSxkPTMqYSxtPTE1KmEsbj03NCphLHA9MzAqYSxxPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7cS53aWR0aD1yO3EuaGVpZ2h0PWg7cS5zdHlsZS5jc3NUZXh0PVwid2lkdGg6ODBweDtoZWlnaHQ6NDhweFwiO3ZhciBiPXEuZ2V0Q29udGV4dChcIjJkXCIpO2IuZm9udD1cImJvbGQgXCIrOSphK1wicHggSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWZcIjtiLnRleHRCYXNlbGluZT1cInRvcFwiO2IuZmlsbFN0eWxlPWw7Yi5maWxsUmVjdCgwLDAscixoKTtiLmZpbGxTdHlsZT1mO2IuZmlsbFRleHQoZSx0LHYpO1xuYi5maWxsUmVjdChkLG0sbixwKTtiLmZpbGxTdHlsZT1sO2IuZ2xvYmFsQWxwaGE9Ljk7Yi5maWxsUmVjdChkLG0sbixwKTtyZXR1cm57ZG9tOnEsdXBkYXRlOmZ1bmN0aW9uKGgsdyl7Yz1NYXRoLm1pbihjLGgpO2s9TWF0aC5tYXgoayxoKTtiLmZpbGxTdHlsZT1sO2IuZ2xvYmFsQWxwaGE9MTtiLmZpbGxSZWN0KDAsMCxyLG0pO2IuZmlsbFN0eWxlPWY7Yi5maWxsVGV4dChnKGgpK1wiIFwiK2UrXCIgKFwiK2coYykrXCItXCIrZyhrKStcIilcIix0LHYpO2IuZHJhd0ltYWdlKHEsZCthLG0sbi1hLHAsZCxtLG4tYSxwKTtiLmZpbGxSZWN0KGQrbi1hLG0sYSxwKTtiLmZpbGxTdHlsZT1sO2IuZ2xvYmFsQWxwaGE9Ljk7Yi5maWxsUmVjdChkK24tYSxtLGEsZygoMS1oL3cpKnApKX19fTtyZXR1cm4gZn0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiwgbm8tdXNlLWJlZm9yZS1kZWZpbmUsIG5ldy1jYXAgKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNvbnRlbnQsIHdvcmtlckNvbnN0cnVjdG9yLCB3b3JrZXJPcHRpb25zLCB1cmwpIHtcbiAgdmFyIGdsb2JhbFNjb3BlID0gc2VsZiB8fCB3aW5kb3c7XG5cbiAgdHJ5IHtcbiAgICB0cnkge1xuICAgICAgdmFyIGJsb2I7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIE5ldyBBUElcbiAgICAgICAgYmxvYiA9IG5ldyBnbG9iYWxTY29wZS5CbG9iKFtjb250ZW50XSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEJsb2JCdWlsZGVyID0gRGVwcmVjYXRlZCwgYnV0IHdpZGVseSBpbXBsZW1lbnRlZFxuICAgICAgICB2YXIgQmxvYkJ1aWxkZXIgPSBnbG9iYWxTY29wZS5CbG9iQnVpbGRlciB8fCBnbG9iYWxTY29wZS5XZWJLaXRCbG9iQnVpbGRlciB8fCBnbG9iYWxTY29wZS5Nb3pCbG9iQnVpbGRlciB8fCBnbG9iYWxTY29wZS5NU0Jsb2JCdWlsZGVyO1xuICAgICAgICBibG9iID0gbmV3IEJsb2JCdWlsZGVyKCk7XG4gICAgICAgIGJsb2IuYXBwZW5kKGNvbnRlbnQpO1xuICAgICAgICBibG9iID0gYmxvYi5nZXRCbG9iKCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBVUkwgPSBnbG9iYWxTY29wZS5VUkwgfHwgZ2xvYmFsU2NvcGUud2Via2l0VVJMO1xuICAgICAgdmFyIG9iamVjdFVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG4gICAgICB2YXIgd29ya2VyID0gbmV3IGdsb2JhbFNjb3BlW3dvcmtlckNvbnN0cnVjdG9yXShvYmplY3RVUkwsIHdvcmtlck9wdGlvbnMpO1xuICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChvYmplY3RVUkwpO1xuICAgICAgcmV0dXJuIHdvcmtlcjtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gbmV3IGdsb2JhbFNjb3BlW3dvcmtlckNvbnN0cnVjdG9yXShcImRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdCxcIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnQpKSwgd29ya2VyT3B0aW9ucyk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKCF1cmwpIHtcbiAgICAgIHRocm93IEVycm9yKFwiSW5saW5lIHdvcmtlciBpcyBub3Qgc3VwcG9ydGVkXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgZ2xvYmFsU2NvcGVbd29ya2VyQ29uc3RydWN0b3JdKHVybCwgd29ya2VyT3B0aW9ucyk7XG4gIH1cbn07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLypcbiAqICBDb250YWluZXIudHNcbiAqICBBUm5mdFxuICpcbiAqICBUaGlzIGZpbGUgaXMgcGFydCBvZiBBUm5mdCAtIFdlYkFSS2l0LlxuICpcbiAqICBBUm5mdCBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqICBBUm5mdCBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqICBhbG9uZyB3aXRoIEFSbmZ0LiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqICBBcyBhIHNwZWNpYWwgZXhjZXB0aW9uLCB0aGUgY29weXJpZ2h0IGhvbGRlcnMgb2YgdGhpcyBsaWJyYXJ5IGdpdmUgeW91XG4gKiAgcGVybWlzc2lvbiB0byBsaW5rIHRoaXMgbGlicmFyeSB3aXRoIGluZGVwZW5kZW50IG1vZHVsZXMgdG8gcHJvZHVjZSBhblxuICogIGV4ZWN1dGFibGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIGxpY2Vuc2UgdGVybXMgb2YgdGhlc2UgaW5kZXBlbmRlbnQgbW9kdWxlcywgYW5kIHRvXG4gKiAgY29weSBhbmQgZGlzdHJpYnV0ZSB0aGUgcmVzdWx0aW5nIGV4ZWN1dGFibGUgdW5kZXIgdGVybXMgb2YgeW91ciBjaG9pY2UsXG4gKiAgcHJvdmlkZWQgdGhhdCB5b3UgYWxzbyBtZWV0LCBmb3IgZWFjaCBsaW5rZWQgaW5kZXBlbmRlbnQgbW9kdWxlLCB0aGUgdGVybXMgYW5kXG4gKiAgY29uZGl0aW9ucyBvZiB0aGUgbGljZW5zZSBvZiB0aGF0IG1vZHVsZS4gQW4gaW5kZXBlbmRlbnQgbW9kdWxlIGlzIGEgbW9kdWxlXG4gKiAgd2hpY2ggaXMgbmVpdGhlciBkZXJpdmVkIGZyb20gbm9yIGJhc2VkIG9uIHRoaXMgbGlicmFyeS4gSWYgeW91IG1vZGlmeSB0aGlzXG4gKiAgbGlicmFyeSwgeW91IG1heSBleHRlbmQgdGhpcyBleGNlcHRpb24gdG8geW91ciB2ZXJzaW9uIG9mIHRoZSBsaWJyYXJ5LCBidXQgeW91XG4gKiAgYXJlIG5vdCBvYmxpZ2F0ZWQgdG8gZG8gc28uIElmIHlvdSBkbyBub3Qgd2lzaCB0byBkbyBzbywgZGVsZXRlIHRoaXMgZXhjZXB0aW9uXG4gKiAgc3RhdGVtZW50IGZyb20geW91ciB2ZXJzaW9uLlxuICpcbiAqICBDb3B5cmlnaHQgMjAyMSBXZWJBUktpdC5cbiAqXG4gKiAgQXV0aG9yKHMpOiBXYWx0ZXIgUGVyZGFuIEBrYWx3YWx0IGh0dHBzOi8vZ2l0aHViLmNvbS9rYWx3YWx0XG4gKlxuICovXG5pbXBvcnQgeyBDb25maWdEYXRhIH0gZnJvbSBcIi4uLy4uL2NvbmZpZy9Db25maWdEYXRhXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb250YWluZXIge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIENvbnRhaW5lciBmb3IgdGhlIGFwcC4gQmFzaWNhbGx5IGEgZGl2LCB3aXRoIGluc2lkZSBhIGNhbnZhcyBhbmQgYSB2aWRlby5cbiAgICAgKiBZb3UgY2FuIG9wdGlvbmFsbHkgc2tpcCB0aGUgY3JlYXRpb24sIGp1c3Qgc2V0IHRoZSB2YXJpYWJsZSBgY3JlYXRlYCB0byBmYWxzZSxcbiAgICAgKiBpbiB5b3VyIGNvbmZpZy5qc29uIGZpbGUuXG4gICAgICogQHBhcmFtIGNvbmZpZ0RhdGEgdGhlIGNvbmZpZy5qc29uIGZpbGUgdXJsLlxuICAgICAqIEByZXR1cm5zIHRoZSBjb250YWluZXIgb2JqZWN0LlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVDb250YWluZXIoY29uZmlnRGF0YTogQ29uZmlnRGF0YSkge1xuICAgICAgICBpZiAoY29uZmlnRGF0YS5jb250YWluZXIuY3JlYXRlKSB7XG4gICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgY29udGFpbmVyLmlkID0gXCJhcHBcIjtcbiAgICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgICAgICBjYW52YXMuaWQgPSBcImNhbnZhc1wiO1xuICAgICAgICAgICAgY29uc3QgdmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidmlkZW9cIik7XG4gICAgICAgICAgICB2aWRlby5pZCA9IFwidmlkZW9cIjtcbiAgICAgICAgICAgIHZpZGVvLnNldEF0dHJpYnV0ZShcImF1dG9wbGF5XCIsIFwiXCIpO1xuICAgICAgICAgICAgdmlkZW8uc2V0QXR0cmlidXRlKFwibXV0ZWRcIiwgXCJcIik7XG4gICAgICAgICAgICB2aWRlby5zZXRBdHRyaWJ1dGUoXCJwbGF5c2lubGluZVwiLCBcIlwiKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh2aWRlbyk7XG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoY2FudmFzKTtcbiAgICAgICAgICAgIGNvbnN0IGxvYWRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmdcIik7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEJlZm9yZShjb250YWluZXIsIGxvYWRpbmcpO1xuICAgICAgICAgICAgcmV0dXJuIHsgY29udGFpbmVyLCBjYW52YXMsIHZpZGVvIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSA8SFRNTERpdkVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29uZmlnRGF0YS5jb250YWluZXIuY29udGFpbmVyTmFtZSk7XG4gICAgICAgICAgICBjb25zdCBjYW52YXMgPSA8SFRNTENhbnZhc0VsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29uZmlnRGF0YS5jb250YWluZXIuY2FudmFzTmFtZSk7XG4gICAgICAgICAgICBjb25zdCB2aWRlbyA9IDxIVE1MVmlkZW9FbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9cIik7XG4gICAgICAgICAgICByZXR1cm4geyBjb250YWluZXIsIGNhbnZhcywgdmlkZW8gfTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSAgdGhlIG5lY2Vzc2FyeSBodG1sIGZvciB0aGUgc3RhdHMuXG4gICAgICogQHBhcmFtIGNyZWF0ZSB0cnVlIG9yIGZhbHNlLlxuICAgICAqIEBwYXJhbSBjb25maWdEYXRhIHRoZSBjb25maWcuanNvbiBmaWxlIHVybC5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlU3RhdHMoY3JlYXRlOiBib29sZWFuLCBjb25maWdEYXRhOiBDb25maWdEYXRhKSB7XG4gICAgICAgIGlmIChjcmVhdGUgJiYgY29uZmlnRGF0YS5zdGF0cy5jcmVhdGVIdG1sKSB7XG4gICAgICAgICAgICBjb25zdCBzdGF0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBzdGF0cy5pZCA9IFwic3RhdHNcIjtcbiAgICAgICAgICAgIHN0YXRzLmNsYXNzTmFtZSA9IFwidWkgc3RhdHNcIjtcbiAgICAgICAgICAgIGNvbnN0IHN0YXRzMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBzdGF0czEuaWQgPSBcInN0YXRzMVwiO1xuICAgICAgICAgICAgc3RhdHMxLmNsYXNzTmFtZSA9IFwic3RhdHMtaXRlbVwiO1xuICAgICAgICAgICAgY29uc3Qgc3RhdHMxcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgc3RhdHMxcC5jbGFzc05hbWUgPSBcInN0YXRzLWl0ZW0tdGl0bGVcIjtcbiAgICAgICAgICAgIHN0YXRzMXAuaW5uZXJUZXh0ID0gXCJNYWluXCI7XG4gICAgICAgICAgICBzdGF0czEuYXBwZW5kQ2hpbGQoc3RhdHMxcCk7XG4gICAgICAgICAgICBzdGF0cy5hcHBlbmRDaGlsZChzdGF0czEpO1xuICAgICAgICAgICAgY29uc3Qgc3RhdHMyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIHN0YXRzMi5pZCA9IFwic3RhdHMyXCI7XG4gICAgICAgICAgICBzdGF0czIuY2xhc3NOYW1lID0gXCJzdGF0cy1pdGVtXCI7XG4gICAgICAgICAgICBjb25zdCBzdGF0czJwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICBzdGF0czJwLmNsYXNzTmFtZSA9IFwic3RhdHMtaXRlbS10aXRsZVwiO1xuICAgICAgICAgICAgc3RhdHMycC5pbm5lclRleHQgPSBcIldvcmtlclwiO1xuICAgICAgICAgICAgc3RhdHMyLmFwcGVuZENoaWxkKHN0YXRzMnApO1xuICAgICAgICAgICAgc3RhdHMuYXBwZW5kQ2hpbGQoc3RhdHMyKTtcbiAgICAgICAgICAgIGNvbnN0IGxvYWRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmdcIik7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEJlZm9yZShzdGF0cywgbG9hZGluZyk7XG4gICAgICAgICAgICByZXR1cm4gc3RhdHM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdGhlIGh0bWwgdG8gZGlzcGxheSB0aGUgbG9hZGluZyBtZXNzYWdlLlxuICAgICAqIEBwYXJhbSBjb25maWdEYXRhIHRoZSBjb25maWcuanNvbiBmaWxlIHVybC5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlTG9hZGluZyhjb25maWdEYXRhOiBDb25maWdEYXRhKSB7XG4gICAgICAgIGlmIChjb25maWdEYXRhLmxvYWRpbmcuY3JlYXRlKSB7XG4gICAgICAgICAgICBjb25zdCBsb2FkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgbG9hZGVyLmlkID0gXCJsb2FkaW5nXCI7XG4gICAgICAgICAgICBjb25zdCBsb2dvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgICAgICAgIGxvZ28uc3JjID0gY29uZmlnRGF0YS5sb2FkaW5nLmxvZ28uc3JjO1xuICAgICAgICAgICAgbG9nby5hbHQgPSBjb25maWdEYXRhLmxvYWRpbmcubG9nby5hbHQ7XG4gICAgICAgICAgICBjb25zdCBsb2FkaW5nTWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICAgICAgbG9hZGluZ01lc3NhZ2Uuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJsb2FkaW5nLXRleHRcIik7XG4gICAgICAgICAgICBsb2FkaW5nTWVzc2FnZS5pbm5lclRleHQgPSBjb25maWdEYXRhLmxvYWRpbmcubG9hZGluZ01lc3NhZ2U7XG4gICAgICAgICAgICBsb2FkZXIuYXBwZW5kQ2hpbGQobG9nbyk7XG4gICAgICAgICAgICBsb2FkZXIuYXBwZW5kQ2hpbGQobG9hZGluZ01lc3NhZ2UpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRCZWZvcmUobG9hZGVyLCBkb2N1bWVudC5ib2R5LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgcmV0dXJuIGxvYWRlcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbiIsIi8qXG4gKiAgQ2FtZXJhVmlld1JlbmRlcmVyLnRzXG4gKiAgQVJuZnRcbiAqXG4gKiAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgQVJuZnQgLSBXZWJBUktpdC5cbiAqXG4gKiAgQVJuZnQgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiAgQVJuZnQgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiAgYWxvbmcgd2l0aCBBUm5mdC4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKiAgQXMgYSBzcGVjaWFsIGV4Y2VwdGlvbiwgdGhlIGNvcHlyaWdodCBob2xkZXJzIG9mIHRoaXMgbGlicmFyeSBnaXZlIHlvdVxuICogIHBlcm1pc3Npb24gdG8gbGluayB0aGlzIGxpYnJhcnkgd2l0aCBpbmRlcGVuZGVudCBtb2R1bGVzIHRvIHByb2R1Y2UgYW5cbiAqICBleGVjdXRhYmxlLCByZWdhcmRsZXNzIG9mIHRoZSBsaWNlbnNlIHRlcm1zIG9mIHRoZXNlIGluZGVwZW5kZW50IG1vZHVsZXMsIGFuZCB0b1xuICogIGNvcHkgYW5kIGRpc3RyaWJ1dGUgdGhlIHJlc3VsdGluZyBleGVjdXRhYmxlIHVuZGVyIHRlcm1zIG9mIHlvdXIgY2hvaWNlLFxuICogIHByb3ZpZGVkIHRoYXQgeW91IGFsc28gbWVldCwgZm9yIGVhY2ggbGlua2VkIGluZGVwZW5kZW50IG1vZHVsZSwgdGhlIHRlcm1zIGFuZFxuICogIGNvbmRpdGlvbnMgb2YgdGhlIGxpY2Vuc2Ugb2YgdGhhdCBtb2R1bGUuIEFuIGluZGVwZW5kZW50IG1vZHVsZSBpcyBhIG1vZHVsZVxuICogIHdoaWNoIGlzIG5laXRoZXIgZGVyaXZlZCBmcm9tIG5vciBiYXNlZCBvbiB0aGlzIGxpYnJhcnkuIElmIHlvdSBtb2RpZnkgdGhpc1xuICogIGxpYnJhcnksIHlvdSBtYXkgZXh0ZW5kIHRoaXMgZXhjZXB0aW9uIHRvIHlvdXIgdmVyc2lvbiBvZiB0aGUgbGlicmFyeSwgYnV0IHlvdVxuICogIGFyZSBub3Qgb2JsaWdhdGVkIHRvIGRvIHNvLiBJZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gc28sIGRlbGV0ZSB0aGlzIGV4Y2VwdGlvblxuICogIHN0YXRlbWVudCBmcm9tIHlvdXIgdmVyc2lvbi5cbiAqXG4gKiAgQ29weXJpZ2h0IDIwMjEgV2ViQVJLaXQuXG4gKlxuICogIEF1dGhvcihzKTogV2FsdGVyIFBlcmRhbiBAa2Fsd2FsdCBodHRwczovL2dpdGh1Yi5jb20va2Fsd2FsdFxuICpcbiAqL1xuXG5pbXBvcnQgeyBWaWRlb1NldHRpbmdEYXRhIH0gZnJvbSBcIi4uL2NvbmZpZy9Db25maWdEYXRhXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUNhbWVyYVZpZXdSZW5kZXJlciB7XG4gICAgZmFjaW5nOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgZnJhbWU6IG51bWJlcjtcbiAgICBnZXRGcmFtZTogKCkgPT4gbnVtYmVyO1xuICAgIGhlaWdodDogbnVtYmVyO1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgaW1hZ2U6IEltYWdlRGF0YTtcbiAgICBnZXRJbWFnZTogKCkgPT4gSW1hZ2VEYXRhO1xuICAgIGluaXRpYWxpemU6ICh2aWRlb1NldHRpbmdzOiBWaWRlb1NldHRpbmdEYXRhKSA9PiBQcm9taXNlPGJvb2xlYW4+O1xuICAgIGRlc3Ryb3k6ICgpID0+IHZvaWQ7XG59XG5leHBvcnQgY2xhc3MgQ2FtZXJhVmlld1JlbmRlcmVyIGltcGxlbWVudHMgSUNhbWVyYVZpZXdSZW5kZXJlciB7XG4gICAgcHJpdmF0ZSBjYW52YXNfcHJvY2VzczogSFRNTENhbnZhc0VsZW1lbnQ7XG5cbiAgICBwcml2YXRlIGNvbnRleHRfcHJvY2VzczogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xuXG4gICAgcHVibGljIF92aWRlbzogSFRNTFZpZGVvRWxlbWVudDtcblxuICAgIHByaXZhdGUgX2ZhY2luZzogVmlkZW9TZXR0aW5nRGF0YVtcImZhY2luZ01vZGVcIl07XG5cbiAgICBwcml2YXRlIHZ3OiBudW1iZXI7XG4gICAgcHJpdmF0ZSB2aDogbnVtYmVyO1xuXG4gICAgcHJpdmF0ZSB3OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBoOiBudW1iZXI7XG5cbiAgICBwcml2YXRlIHB3OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBwaDogbnVtYmVyO1xuXG4gICAgcHJpdmF0ZSBveDogbnVtYmVyO1xuICAgIHByaXZhdGUgb3k6IG51bWJlcjtcblxuICAgIHByaXZhdGUgdGFyZ2V0OiBFdmVudFRhcmdldDtcbiAgICBwcml2YXRlIHRhcmdldEZyYW1lUmF0ZTogbnVtYmVyID0gNjA7XG4gICAgcHJpdmF0ZSBpbWFnZURhdGFDYWNoZTogVWludDhDbGFtcGVkQXJyYXk7XG4gICAgcHJpdmF0ZSBfZnJhbWU6IG51bWJlcjtcblxuICAgIHByaXZhdGUgbGFzdENhY2hlOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IodmlkZW86IEhUTUxWaWRlb0VsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5jYW52YXNfcHJvY2VzcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgIHRoaXMuY29udGV4dF9wcm9jZXNzID0gdGhpcy5jYW52YXNfcHJvY2Vzcy5nZXRDb250ZXh0KFwiMmRcIiwgeyBhbHBoYTogZmFsc2UgfSk7XG4gICAgICAgIHRoaXMuX3ZpZGVvID0gdmlkZW87XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gd2luZG93IHx8IGdsb2JhbDtcbiAgICAgICAgdGhpcy5fZnJhbWUgPSAwO1xuICAgIH1cblxuICAgIC8vIEdldHRlcnNcbiAgICBwdWJsaWMgZ2V0IGZhY2luZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmFjaW5nO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaGVpZ2h0KCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLnZoO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgd2lkdGgoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudnc7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCB2aWRlbygpOiBIVE1MVmlkZW9FbGVtZW50IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZpZGVvO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgZnJhbWUoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZyYW1lO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY2FudmFzUHJvY2VzcygpOiBIVE1MQ2FudmFzRWxlbWVudCB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbnZhc19wcm9jZXNzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgY29udGV4dFByb2Nlc3MoKTogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dF9wcm9jZXNzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRGcmFtZSgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5fZnJhbWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEltYWdlKCk6IEltYWdlRGF0YSB7XG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGlmIChub3cgLSB0aGlzLmxhc3RDYWNoZSA+IDEwMDAgLyB0aGlzLnRhcmdldEZyYW1lUmF0ZSkge1xuICAgICAgICAgICAgdGhpcy5jb250ZXh0X3Byb2Nlc3MuZHJhd0ltYWdlKHRoaXMudmlkZW8sIDAsIDAsIHRoaXMudncsIHRoaXMudmgsIHRoaXMub3gsIHRoaXMub3ksIHRoaXMudywgdGhpcy5oKTtcbiAgICAgICAgICAgIGNvbnN0IGltYWdlRGF0YSA9IHRoaXMuY29udGV4dF9wcm9jZXNzLmdldEltYWdlRGF0YSgwLCAwLCB0aGlzLnB3LCB0aGlzLnBoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmltYWdlRGF0YUNhY2hlID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmltYWdlRGF0YUNhY2hlID0gaW1hZ2VEYXRhLmRhdGE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VEYXRhQ2FjaGUuc2V0KGltYWdlRGF0YS5kYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMubGFzdENhY2hlID0gbm93O1xuICAgICAgICAgICAgdGhpcy5fZnJhbWUrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEltYWdlRGF0YSh0aGlzLmltYWdlRGF0YUNhY2hlLnNsaWNlKCksIHRoaXMucHcsIHRoaXMucGgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaW1hZ2UoKTogSW1hZ2VEYXRhIHtcbiAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgaWYgKG5vdyAtIHRoaXMubGFzdENhY2hlID4gMTAwMCAvIHRoaXMudGFyZ2V0RnJhbWVSYXRlKSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRleHRfcHJvY2Vzcy5kcmF3SW1hZ2UodGhpcy52aWRlbywgMCwgMCwgdGhpcy52dywgdGhpcy52aCwgdGhpcy5veCwgdGhpcy5veSwgdGhpcy53LCB0aGlzLmgpO1xuICAgICAgICAgICAgY29uc3QgaW1hZ2VEYXRhID0gdGhpcy5jb250ZXh0X3Byb2Nlc3MuZ2V0SW1hZ2VEYXRhKDAsIDAsIHRoaXMucHcsIHRoaXMucGgpO1xuICAgICAgICAgICAgaWYgKHRoaXMuaW1hZ2VEYXRhQ2FjaGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW1hZ2VEYXRhQ2FjaGUgPSBpbWFnZURhdGEuZGF0YTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbWFnZURhdGFDYWNoZS5zZXQoaW1hZ2VEYXRhLmRhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5sYXN0Q2FjaGUgPSBub3c7XG4gICAgICAgICAgICB0aGlzLl9mcmFtZSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgSW1hZ2VEYXRhKHRoaXMuaW1hZ2VEYXRhQ2FjaGUuc2xpY2UoKSwgdGhpcy5wdywgdGhpcy5waCk7XG4gICAgfVxuXG4gICAgcHVibGljIHByZXBhcmVJbWFnZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy52dyA9IHRoaXMuX3ZpZGVvLnZpZGVvV2lkdGg7XG4gICAgICAgIHRoaXMudmggPSB0aGlzLl92aWRlby52aWRlb0hlaWdodDtcblxuICAgICAgICB2YXIgcHNjYWxlID0gMzIwIC8gTWF0aC5tYXgodGhpcy52dywgKHRoaXMudmggLyAzKSAqIDQpO1xuXG4gICAgICAgIC8vIFZvaWQgZmxvYXQgcG9pbnRcbiAgICAgICAgdGhpcy53ID0gTWF0aC5mbG9vcih0aGlzLnZ3ICogcHNjYWxlKTtcbiAgICAgICAgdGhpcy5oID0gTWF0aC5mbG9vcih0aGlzLnZoICogcHNjYWxlKTtcbiAgICAgICAgdGhpcy5wdyA9IE1hdGguZmxvb3IoTWF0aC5tYXgodGhpcy53LCAodGhpcy5oIC8gMykgKiA0KSk7XG4gICAgICAgIHRoaXMucGggPSBNYXRoLmZsb29yKE1hdGgubWF4KHRoaXMuaCwgKHRoaXMudyAvIDQpICogMykpO1xuICAgICAgICB0aGlzLm94ID0gTWF0aC5mbG9vcigodGhpcy5wdyAtIHRoaXMudykgLyAyKTtcbiAgICAgICAgdGhpcy5veSA9IE1hdGguZmxvb3IoKHRoaXMucGggLSB0aGlzLmgpIC8gMik7XG5cbiAgICAgICAgdGhpcy5jYW52YXNfcHJvY2Vzcy53aWR0aCA9IHRoaXMucHc7XG4gICAgICAgIHRoaXMuY2FudmFzX3Byb2Nlc3MuaGVpZ2h0ID0gdGhpcy5waDtcblxuICAgICAgICB0aGlzLmNvbnRleHRfcHJvY2Vzcy5maWxsU3R5bGUgPSBcImJsYWNrXCI7XG4gICAgICAgIHRoaXMuY29udGV4dF9wcm9jZXNzLmZpbGxSZWN0KDAsIDAsIHRoaXMucHcsIHRoaXMucGgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBpbml0aWFsaXplKHZpZGVvU2V0dGluZ3M6IFZpZGVvU2V0dGluZ0RhdGEpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICAgICAgdGhpcy5fZmFjaW5nID0gdmlkZW9TZXR0aW5ncy5mYWNpbmdNb2RlIHx8IFwiZW52aXJvbm1lbnRcIjtcbiAgICAgICAgaWYgKHZpZGVvU2V0dGluZ3MudGFyZ2V0RnJhbWVSYXRlICE9IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0RnJhbWVSYXRlID0gdmlkZW9TZXR0aW5ncy50YXJnZXRGcmFtZVJhdGU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobmF2aWdhdG9yLm1lZGlhRGV2aWNlcyAmJiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBoaW50OiBhbnkgPSB7XG4gICAgICAgICAgICAgICAgICAgIGF1ZGlvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgdmlkZW86IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhY2luZ01vZGU6IHRoaXMuX2ZhY2luZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiB7IG1pbjogdmlkZW9TZXR0aW5ncy53aWR0aC5taW4sIG1heDogdmlkZW9TZXR0aW5ncy53aWR0aC5tYXggfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmIChuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGV2aWNlcyA9IGF3YWl0IG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2aWRlb0RldmljZXMgPSBbXSBhcyBBcnJheTxzdHJpbmc+O1xuICAgICAgICAgICAgICAgICAgICBsZXQgdmlkZW9EZXZpY2VJbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGRldmljZXMuZm9yRWFjaChmdW5jdGlvbiAoZGV2aWNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGV2aWNlLmtpbmQgPT0gXCJ2aWRlb2lucHV0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0RldmljZXNbdmlkZW9EZXZpY2VJbmRleCsrXSA9IGRldmljZS5kZXZpY2VJZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2aWRlb0RldmljZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGludC52aWRlby5kZXZpY2VJZCA9IHsgZXhhY3Q6IHZpZGVvRGV2aWNlc1t2aWRlb0RldmljZXMubGVuZ3RoIC0gMV0gfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYShoaW50KTtcblxuICAgICAgICAgICAgICAgIHRoaXMuX3ZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTtcbiAgICAgICAgICAgICAgICB0aGlzLl92aWRlbyA9IGF3YWl0IG5ldyBQcm9taXNlPEhUTUxWaWRlb0VsZW1lbnQ+KChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3ZpZGVvLm9ubG9hZGVkbWV0YWRhdGEgPSAoKSA9PiByZXNvbHZlKHRoaXMuX3ZpZGVvKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnByZXBhcmVJbWFnZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFwiU29ycnksIFlvdXIgZGV2aWNlIGRvZXMgbm90IHN1cHBvcnQgdGhpcyBleHBlcmllbmNlLlwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQge1xuICAgICAgICBjb25zdCB2aWRlbyA9IHRoaXMuX3ZpZGVvO1xuICAgICAgICB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwic3RvcFZpZGVvU3RyZWFtaW5nXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0cmVhbSA9IDxNZWRpYVN0cmVhbT52aWRlby5zcmNPYmplY3Q7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInN0b3Agc3RyZWFtaW5nXCIpO1xuICAgICAgICAgICAgaWYgKHN0cmVhbSAhPT0gbnVsbCAmJiBzdHJlYW0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRyYWNrcyA9IHN0cmVhbS5nZXRUcmFja3MoKTtcblxuICAgICAgICAgICAgICAgIHRyYWNrcy5mb3JFYWNoKGZ1bmN0aW9uICh0cmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cmFjay5zdG9wKCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB2aWRlby5zcmNPYmplY3QgPSBudWxsO1xuXG4gICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRBUiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXBwXCIpO1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50QVIgIT09IG51bGwgJiYgY3VycmVudEFSICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEFSLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwiLypcbiAqICBBUlV0aWxzLnRzXG4gKiAgQVJuZnRcbiAqXG4gKiAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgQVJuZnQgLSBXZWJBUktpdC5cbiAqXG4gKiAgQVJuZnQgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiAgQVJuZnQgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiAgYWxvbmcgd2l0aCBBUm5mdC4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKiAgQXMgYSBzcGVjaWFsIGV4Y2VwdGlvbiwgdGhlIGNvcHlyaWdodCBob2xkZXJzIG9mIHRoaXMgbGlicmFyeSBnaXZlIHlvdVxuICogIHBlcm1pc3Npb24gdG8gbGluayB0aGlzIGxpYnJhcnkgd2l0aCBpbmRlcGVuZGVudCBtb2R1bGVzIHRvIHByb2R1Y2UgYW5cbiAqICBleGVjdXRhYmxlLCByZWdhcmRsZXNzIG9mIHRoZSBsaWNlbnNlIHRlcm1zIG9mIHRoZXNlIGluZGVwZW5kZW50IG1vZHVsZXMsIGFuZCB0b1xuICogIGNvcHkgYW5kIGRpc3RyaWJ1dGUgdGhlIHJlc3VsdGluZyBleGVjdXRhYmxlIHVuZGVyIHRlcm1zIG9mIHlvdXIgY2hvaWNlLFxuICogIHByb3ZpZGVkIHRoYXQgeW91IGFsc28gbWVldCwgZm9yIGVhY2ggbGlua2VkIGluZGVwZW5kZW50IG1vZHVsZSwgdGhlIHRlcm1zIGFuZFxuICogIGNvbmRpdGlvbnMgb2YgdGhlIGxpY2Vuc2Ugb2YgdGhhdCBtb2R1bGUuIEFuIGluZGVwZW5kZW50IG1vZHVsZSBpcyBhIG1vZHVsZVxuICogIHdoaWNoIGlzIG5laXRoZXIgZGVyaXZlZCBmcm9tIG5vciBiYXNlZCBvbiB0aGlzIGxpYnJhcnkuIElmIHlvdSBtb2RpZnkgdGhpc1xuICogIGxpYnJhcnksIHlvdSBtYXkgZXh0ZW5kIHRoaXMgZXhjZXB0aW9uIHRvIHlvdXIgdmVyc2lvbiBvZiB0aGUgbGlicmFyeSwgYnV0IHlvdVxuICogIGFyZSBub3Qgb2JsaWdhdGVkIHRvIGRvIHNvLiBJZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gc28sIGRlbGV0ZSB0aGlzIGV4Y2VwdGlvblxuICogIHN0YXRlbWVudCBmcm9tIHlvdXIgdmVyc2lvbi5cbiAqXG4gKiAgQ29weXJpZ2h0IDIwMjEgV2ViQVJLaXQuXG4gKlxuICogIEF1dGhvcihzKTogV2FsdGVyIFBlcmRhbiBAa2Fsd2FsdCBodHRwczovL2dpdGh1Yi5jb20va2Fsd2FsdFxuICpcbiAqL1xuY29uc3QgdGFyZ2V0OiBFdmVudFRhcmdldCA9IHdpbmRvdyB8fCBnbG9iYWw7XG4vKipcbiAqIENvbnZlcnQgZGVncmVlcyB0byByYWRpYW5zLlxuICogQHBhcmFtIGRlZ3JlZXMgZGVncmVlIHZhbHVlIGFzIG51bWJlci5cbiAqIEByZXR1cm5zIHJhZGlhbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZ3JlZXNUb1JhZGlhbnMoZGVncmVlczogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gZGVncmVlcyAqIChNYXRoLlBJIC8gMTgwKTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZGV2aWNlIGlzIGEgTW9iaWxlLlxuICogQHJldHVybnMgdHJ1ZSBvciBmYWxzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTW9iaWxlKCk6IGJvb2xlYW4ge1xuICAgIC8vcmV0dXJuIC9BbmRyb2lkfG1vYmlsZXxpUGFkfGlQaG9uZS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudClcbiAgICBpZiAoL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICAgIC8vIHRydWUgZm9yIG1vYmlsZSBkZXZpY2VcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0aGUgZGV2aWNlIGlzIGEgaU9TIGRldmljZS5cbiAqIEByZXR1cm5zIHRydWUgb3IgZmFsc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0lPUygpOiBib29sZWFuIHtcbiAgICBpZiAoL2lQaG9uZXxpUGFkfGlQb2QvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICAgIC8vIHRydWUgZm9yIG1vYmlsZSBkZXZpY2VcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIFdpbmRvdyBzaXpldmlkZW8gZGltZW5zaW9ucywgdXNlZCBpbnRlcm5hbGx5IGluIHRoZSBORlRXb3JrZXIuXG4gKiBAcGFyYW0gdncgdGhlIHZpZGVvIHdpZHRoXG4gKiBAcGFyYW0gaHYgdGhlIHZpZGVvIGhlaWdodFxuICogQHJldHVybnMgYW4gYXJyYXkgb2YgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0V2luZG93U2l6ZSh2dzogbnVtYmVyLCB2aDogbnVtYmVyKTogQXJyYXk8bnVtYmVyPiB7XG4gICAgdmFyIHBzY2FsZSA9IDMyMCAvIE1hdGgubWF4KHZ3LCAodmggLyAzKSAqIDQpO1xuICAgIHZhciBzc2NhbGUgPSBpc01vYmlsZSgpID8gd2luZG93Lm91dGVyV2lkdGggLyB2dyA6IDE7XG5cbiAgICBsZXQgc3cgPSB2dyAqIHNzY2FsZTtcbiAgICBsZXQgc2ggPSB2aCAqIHNzY2FsZTtcblxuICAgIGxldCB3OiBudW1iZXIgPSB2dyAqIHBzY2FsZTtcbiAgICBsZXQgaDogbnVtYmVyID0gdmggKiBwc2NhbGU7XG4gICAgbGV0IHB3OiBudW1iZXIgPSBNYXRoLm1heCh3LCAoaCAvIDMpICogNCk7XG4gICAgbGV0IHBoOiBudW1iZXIgPSBNYXRoLm1heChoLCAodyAvIDQpICogMyk7XG4gICAgcmV0dXJuIFtzdywgc2gsIHB3LCBwaCwgdywgaF07XG59XG5cbi8qKlxuICogR2V0IHRoZSBjb25maWcgZGF0YSBmcm9tIHRoZSBqc29uIGZpbGUsIGFuZCBkaXNwYXRjaCB0aGUgZGF0YSB3aXRoXG4gKiBhbiBldmVudCBsaXN0ZW5lci5cbiAqIEBwYXJhbSBjb25maWdEYXRhXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q29uZmlnKGNvbmZpZ0RhdGE6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChjb25maWdEYXRhKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSFRUUCBlcnJvciwgc3RhdHVzID0gXCIgKyByZXNwb25zZS5zdGF0dXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG59XG4iLCJcbmltcG9ydCB3b3JrZXIgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL3dvcmtlci1sb2FkZXIvZGlzdC9ydW50aW1lL2lubGluZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBXb3JrZXJfZm4oKSB7XG4gIHJldHVybiB3b3JrZXIoXCIoKCk9Pnt2YXIgQT17ODAxOmZ1bmN0aW9uKEEpe3ZhciBJO1xcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2Ygc2VsZiYmc2VsZixJPSgpPT4oKCk9Pnt2YXIgQT17MjMwOkE9PntBLmV4cG9ydHM9XFxcIm9iamVjdFxcXCI9PXR5cGVvZiBzZWxmP3NlbGYuRm9ybURhdGE6d2luZG93LkZvcm1EYXRhfSw1Njc6KCk9Pnt9LDg4OTooKT0+e30sNDMxOigpPT57fSw2MTooQSxJLGcpPT57dmFyIEI9Zyg2OTgpLmRlZmF1bHQ7ZnVuY3Rpb24gQygpe1xcXCJ1c2Ugc3RyaWN0XFxcIjtBLmV4cG9ydHM9Qz1mdW5jdGlvbigpe3JldHVybiBJfSxBLmV4cG9ydHMuX19lc01vZHVsZT0hMCxBLmV4cG9ydHMuZGVmYXVsdD1BLmV4cG9ydHM7dmFyIEk9e30sZz1PYmplY3QucHJvdG90eXBlLFE9Zy5oYXNPd25Qcm9wZXJ0eSxFPU9iamVjdC5kZWZpbmVQcm9wZXJ0eXx8ZnVuY3Rpb24oQSxJLGcpe0FbSV09Zy52YWx1ZX0saT1cXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgU3ltYm9sP1N5bWJvbDp7fSxvPWkuaXRlcmF0b3J8fFxcXCJAQGl0ZXJhdG9yXFxcIixEPWkuYXN5bmNJdGVyYXRvcnx8XFxcIkBAYXN5bmNJdGVyYXRvclxcXCIsYT1pLnRvU3RyaW5nVGFnfHxcXFwiQEB0b1N0cmluZ1RhZ1xcXCI7ZnVuY3Rpb24gdyhBLEksZyl7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBLEkse3ZhbHVlOmcsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KSxBW0ldfXRyeXt3KHt9LFxcXCJcXFwiKX1jYXRjaChBKXt3PWZ1bmN0aW9uKEEsSSxnKXtyZXR1cm4gQVtJXT1nfX1mdW5jdGlvbiBzKEEsSSxnLEIpe3ZhciBDPUkmJkkucHJvdG90eXBlIGluc3RhbmNlb2YgdD9JOnQsUT1PYmplY3QuY3JlYXRlKEMucHJvdG90eXBlKSxpPW5ldyBKKEJ8fFtdKTtyZXR1cm4gRShRLFxcXCJfaW52b2tlXFxcIix7dmFsdWU6bihBLGcsaSl9KSxRfWZ1bmN0aW9uIEcoQSxJLGcpe3RyeXtyZXR1cm57dHlwZTpcXFwibm9ybWFsXFxcIixhcmc6QS5jYWxsKEksZyl9fWNhdGNoKEEpe3JldHVybnt0eXBlOlxcXCJ0aHJvd1xcXCIsYXJnOkF9fX1JLndyYXA9czt2YXIgaD17fTtmdW5jdGlvbiB0KCl7fWZ1bmN0aW9uIFIoKXt9ZnVuY3Rpb24gRigpe312YXIgeT17fTt3KHksbywoZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pKTt2YXIgcj1PYmplY3QuZ2V0UHJvdG90eXBlT2YsTT1yJiZyKHIoSyhbXSkpKTtNJiZNIT09ZyYmUS5jYWxsKE0sbykmJih5PU0pO3ZhciBlPUYucHJvdG90eXBlPXQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoeSk7ZnVuY3Rpb24gUyhBKXtbXFxcIm5leHRcXFwiLFxcXCJ0aHJvd1xcXCIsXFxcInJldHVyblxcXCJdLmZvckVhY2goKGZ1bmN0aW9uKEkpe3coQSxJLChmdW5jdGlvbihBKXtyZXR1cm4gdGhpcy5faW52b2tlKEksQSl9KSl9KSl9ZnVuY3Rpb24gTihBLEkpe2Z1bmN0aW9uIGcoQyxFLGksbyl7dmFyIEQ9RyhBW0NdLEEsRSk7aWYoXFxcInRocm93XFxcIiE9PUQudHlwZSl7dmFyIGE9RC5hcmcsdz1hLnZhbHVlO3JldHVybiB3JiZcXFwib2JqZWN0XFxcIj09Qih3KSYmUS5jYWxsKHcsXFxcIl9fYXdhaXRcXFwiKT9JLnJlc29sdmUody5fX2F3YWl0KS50aGVuKChmdW5jdGlvbihBKXtnKFxcXCJuZXh0XFxcIixBLGksbyl9KSwoZnVuY3Rpb24oQSl7ZyhcXFwidGhyb3dcXFwiLEEsaSxvKX0pKTpJLnJlc29sdmUodykudGhlbigoZnVuY3Rpb24oQSl7YS52YWx1ZT1BLGkoYSl9KSwoZnVuY3Rpb24oQSl7cmV0dXJuIGcoXFxcInRocm93XFxcIixBLGksbyl9KSl9byhELmFyZyl9dmFyIEM7RSh0aGlzLFxcXCJfaW52b2tlXFxcIix7dmFsdWU6ZnVuY3Rpb24oQSxCKXtmdW5jdGlvbiBRKCl7cmV0dXJuIG5ldyBJKChmdW5jdGlvbihJLEMpe2coQSxCLEksQyl9KSl9cmV0dXJuIEM9Qz9DLnRoZW4oUSxRKTpRKCl9fSl9ZnVuY3Rpb24gbihBLEksZyl7dmFyIEI9XFxcInN1c3BlbmRlZFN0YXJ0XFxcIjtyZXR1cm4gZnVuY3Rpb24oQyxRKXtpZihcXFwiZXhlY3V0aW5nXFxcIj09PUIpdGhyb3cgbmV3IEVycm9yKFxcXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXFxcIik7aWYoXFxcImNvbXBsZXRlZFxcXCI9PT1CKXtpZihcXFwidGhyb3dcXFwiPT09Qyl0aHJvdyBRO3JldHVybnt2YWx1ZTp2b2lkIDAsZG9uZTohMH19Zm9yKGcubWV0aG9kPUMsZy5hcmc9UTs7KXt2YXIgRT1nLmRlbGVnYXRlO2lmKEUpe3ZhciBpPWMoRSxnKTtpZihpKXtpZihpPT09aCljb250aW51ZTtyZXR1cm4gaX19aWYoXFxcIm5leHRcXFwiPT09Zy5tZXRob2QpZy5zZW50PWcuX3NlbnQ9Zy5hcmc7ZWxzZSBpZihcXFwidGhyb3dcXFwiPT09Zy5tZXRob2Qpe2lmKFxcXCJzdXNwZW5kZWRTdGFydFxcXCI9PT1CKXRocm93IEI9XFxcImNvbXBsZXRlZFxcXCIsZy5hcmc7Zy5kaXNwYXRjaEV4Y2VwdGlvbihnLmFyZyl9ZWxzZVxcXCJyZXR1cm5cXFwiPT09Zy5tZXRob2QmJmcuYWJydXB0KFxcXCJyZXR1cm5cXFwiLGcuYXJnKTtCPVxcXCJleGVjdXRpbmdcXFwiO3ZhciBvPUcoQSxJLGcpO2lmKFxcXCJub3JtYWxcXFwiPT09by50eXBlKXtpZihCPWcuZG9uZT9cXFwiY29tcGxldGVkXFxcIjpcXFwic3VzcGVuZGVkWWllbGRcXFwiLG8uYXJnPT09aCljb250aW51ZTtyZXR1cm57dmFsdWU6by5hcmcsZG9uZTpnLmRvbmV9fVxcXCJ0aHJvd1xcXCI9PT1vLnR5cGUmJihCPVxcXCJjb21wbGV0ZWRcXFwiLGcubWV0aG9kPVxcXCJ0aHJvd1xcXCIsZy5hcmc9by5hcmcpfX19ZnVuY3Rpb24gYyhBLEkpe3ZhciBnPUEuaXRlcmF0b3JbSS5tZXRob2RdO2lmKHZvaWQgMD09PWcpe2lmKEkuZGVsZWdhdGU9bnVsbCxcXFwidGhyb3dcXFwiPT09SS5tZXRob2Qpe2lmKEEuaXRlcmF0b3IucmV0dXJuJiYoSS5tZXRob2Q9XFxcInJldHVyblxcXCIsSS5hcmc9dm9pZCAwLGMoQSxJKSxcXFwidGhyb3dcXFwiPT09SS5tZXRob2QpKXJldHVybiBoO0kubWV0aG9kPVxcXCJ0aHJvd1xcXCIsSS5hcmc9bmV3IFR5cGVFcnJvcihcXFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFxcXCIpfXJldHVybiBofXZhciBCPUcoZyxBLml0ZXJhdG9yLEkuYXJnKTtpZihcXFwidGhyb3dcXFwiPT09Qi50eXBlKXJldHVybiBJLm1ldGhvZD1cXFwidGhyb3dcXFwiLEkuYXJnPUIuYXJnLEkuZGVsZWdhdGU9bnVsbCxoO3ZhciBDPUIuYXJnO3JldHVybiBDP0MuZG9uZT8oSVtBLnJlc3VsdE5hbWVdPUMudmFsdWUsSS5uZXh0PUEubmV4dExvYyxcXFwicmV0dXJuXFxcIiE9PUkubWV0aG9kJiYoSS5tZXRob2Q9XFxcIm5leHRcXFwiLEkuYXJnPXZvaWQgMCksSS5kZWxlZ2F0ZT1udWxsLGgpOkM6KEkubWV0aG9kPVxcXCJ0aHJvd1xcXCIsSS5hcmc9bmV3IFR5cGVFcnJvcihcXFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcXFwiKSxJLmRlbGVnYXRlPW51bGwsaCl9ZnVuY3Rpb24gayhBKXt2YXIgST17dHJ5TG9jOkFbMF19OzEgaW4gQSYmKEkuY2F0Y2hMb2M9QVsxXSksMiBpbiBBJiYoSS5maW5hbGx5TG9jPUFbMl0sSS5hZnRlckxvYz1BWzNdKSx0aGlzLnRyeUVudHJpZXMucHVzaChJKX1mdW5jdGlvbiBVKEEpe3ZhciBJPUEuY29tcGxldGlvbnx8e307SS50eXBlPVxcXCJub3JtYWxcXFwiLGRlbGV0ZSBJLmFyZyxBLmNvbXBsZXRpb249SX1mdW5jdGlvbiBKKEEpe3RoaXMudHJ5RW50cmllcz1be3RyeUxvYzpcXFwicm9vdFxcXCJ9XSxBLmZvckVhY2goayx0aGlzKSx0aGlzLnJlc2V0KCEwKX1mdW5jdGlvbiBLKEEpe2lmKEEpe3ZhciBJPUFbb107aWYoSSlyZXR1cm4gSS5jYWxsKEEpO2lmKFxcXCJmdW5jdGlvblxcXCI9PXR5cGVvZiBBLm5leHQpcmV0dXJuIEE7aWYoIWlzTmFOKEEubGVuZ3RoKSl7dmFyIGc9LTEsQj1mdW5jdGlvbiBJKCl7Zm9yKDsrK2c8QS5sZW5ndGg7KWlmKFEuY2FsbChBLGcpKXJldHVybiBJLnZhbHVlPUFbZ10sSS5kb25lPSExLEk7cmV0dXJuIEkudmFsdWU9dm9pZCAwLEkuZG9uZT0hMCxJfTtyZXR1cm4gQi5uZXh0PUJ9fXJldHVybntuZXh0Oll9fWZ1bmN0aW9uIFkoKXtyZXR1cm57dmFsdWU6dm9pZCAwLGRvbmU6ITB9fXJldHVybiBSLnByb3RvdHlwZT1GLEUoZSxcXFwiY29uc3RydWN0b3JcXFwiLHt2YWx1ZTpGLGNvbmZpZ3VyYWJsZTohMH0pLEUoRixcXFwiY29uc3RydWN0b3JcXFwiLHt2YWx1ZTpSLGNvbmZpZ3VyYWJsZTohMH0pLFIuZGlzcGxheU5hbWU9dyhGLGEsXFxcIkdlbmVyYXRvckZ1bmN0aW9uXFxcIiksSS5pc0dlbmVyYXRvckZ1bmN0aW9uPWZ1bmN0aW9uKEEpe3ZhciBJPVxcXCJmdW5jdGlvblxcXCI9PXR5cGVvZiBBJiZBLmNvbnN0cnVjdG9yO3JldHVybiEhSSYmKEk9PT1SfHxcXFwiR2VuZXJhdG9yRnVuY3Rpb25cXFwiPT09KEkuZGlzcGxheU5hbWV8fEkubmFtZSkpfSxJLm1hcms9ZnVuY3Rpb24oQSl7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YoQSxGKTooQS5fX3Byb3RvX189Rix3KEEsYSxcXFwiR2VuZXJhdG9yRnVuY3Rpb25cXFwiKSksQS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlKSxBfSxJLmF3cmFwPWZ1bmN0aW9uKEEpe3JldHVybntfX2F3YWl0OkF9fSxTKE4ucHJvdG90eXBlKSx3KE4ucHJvdG90eXBlLEQsKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSksSS5Bc3luY0l0ZXJhdG9yPU4sSS5hc3luYz1mdW5jdGlvbihBLGcsQixDLFEpe3ZvaWQgMD09PVEmJihRPVByb21pc2UpO3ZhciBFPW5ldyBOKHMoQSxnLEIsQyksUSk7cmV0dXJuIEkuaXNHZW5lcmF0b3JGdW5jdGlvbihnKT9FOkUubmV4dCgpLnRoZW4oKGZ1bmN0aW9uKEEpe3JldHVybiBBLmRvbmU/QS52YWx1ZTpFLm5leHQoKX0pKX0sUyhlKSx3KGUsYSxcXFwiR2VuZXJhdG9yXFxcIiksdyhlLG8sKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSksdyhlLFxcXCJ0b1N0cmluZ1xcXCIsKGZ1bmN0aW9uKCl7cmV0dXJuXFxcIltvYmplY3QgR2VuZXJhdG9yXVxcXCJ9KSksSS5rZXlzPWZ1bmN0aW9uKEEpe3ZhciBJPU9iamVjdChBKSxnPVtdO2Zvcih2YXIgQiBpbiBJKWcucHVzaChCKTtyZXR1cm4gZy5yZXZlcnNlKCksZnVuY3Rpb24gQSgpe2Zvcig7Zy5sZW5ndGg7KXt2YXIgQj1nLnBvcCgpO2lmKEIgaW4gSSlyZXR1cm4gQS52YWx1ZT1CLEEuZG9uZT0hMSxBfXJldHVybiBBLmRvbmU9ITAsQX19LEkudmFsdWVzPUssSi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOkoscmVzZXQ6ZnVuY3Rpb24oQSl7aWYodGhpcy5wcmV2PTAsdGhpcy5uZXh0PTAsdGhpcy5zZW50PXRoaXMuX3NlbnQ9dm9pZCAwLHRoaXMuZG9uZT0hMSx0aGlzLmRlbGVnYXRlPW51bGwsdGhpcy5tZXRob2Q9XFxcIm5leHRcXFwiLHRoaXMuYXJnPXZvaWQgMCx0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChVKSwhQSlmb3IodmFyIEkgaW4gdGhpcylcXFwidFxcXCI9PT1JLmNoYXJBdCgwKSYmUS5jYWxsKHRoaXMsSSkmJiFpc05hTigrSS5zbGljZSgxKSkmJih0aGlzW0ldPXZvaWQgMCl9LHN0b3A6ZnVuY3Rpb24oKXt0aGlzLmRvbmU9ITA7dmFyIEE9dGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247aWYoXFxcInRocm93XFxcIj09PUEudHlwZSl0aHJvdyBBLmFyZztyZXR1cm4gdGhpcy5ydmFsfSxkaXNwYXRjaEV4Y2VwdGlvbjpmdW5jdGlvbihBKXtpZih0aGlzLmRvbmUpdGhyb3cgQTt2YXIgST10aGlzO2Z1bmN0aW9uIGcoZyxCKXtyZXR1cm4gRS50eXBlPVxcXCJ0aHJvd1xcXCIsRS5hcmc9QSxJLm5leHQ9ZyxCJiYoSS5tZXRob2Q9XFxcIm5leHRcXFwiLEkuYXJnPXZvaWQgMCksISFCfWZvcih2YXIgQj10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7Qj49MDstLUIpe3ZhciBDPXRoaXMudHJ5RW50cmllc1tCXSxFPUMuY29tcGxldGlvbjtpZihcXFwicm9vdFxcXCI9PT1DLnRyeUxvYylyZXR1cm4gZyhcXFwiZW5kXFxcIik7aWYoQy50cnlMb2M8PXRoaXMucHJldil7dmFyIGk9US5jYWxsKEMsXFxcImNhdGNoTG9jXFxcIiksbz1RLmNhbGwoQyxcXFwiZmluYWxseUxvY1xcXCIpO2lmKGkmJm8pe2lmKHRoaXMucHJldjxDLmNhdGNoTG9jKXJldHVybiBnKEMuY2F0Y2hMb2MsITApO2lmKHRoaXMucHJldjxDLmZpbmFsbHlMb2MpcmV0dXJuIGcoQy5maW5hbGx5TG9jKX1lbHNlIGlmKGkpe2lmKHRoaXMucHJldjxDLmNhdGNoTG9jKXJldHVybiBnKEMuY2F0Y2hMb2MsITApfWVsc2V7aWYoIW8pdGhyb3cgbmV3IEVycm9yKFxcXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVxcXCIpO2lmKHRoaXMucHJldjxDLmZpbmFsbHlMb2MpcmV0dXJuIGcoQy5maW5hbGx5TG9jKX19fX0sYWJydXB0OmZ1bmN0aW9uKEEsSSl7Zm9yKHZhciBnPXRoaXMudHJ5RW50cmllcy5sZW5ndGgtMTtnPj0wOy0tZyl7dmFyIEI9dGhpcy50cnlFbnRyaWVzW2ddO2lmKEIudHJ5TG9jPD10aGlzLnByZXYmJlEuY2FsbChCLFxcXCJmaW5hbGx5TG9jXFxcIikmJnRoaXMucHJldjxCLmZpbmFsbHlMb2Mpe3ZhciBDPUI7YnJlYWt9fUMmJihcXFwiYnJlYWtcXFwiPT09QXx8XFxcImNvbnRpbnVlXFxcIj09PUEpJiZDLnRyeUxvYzw9SSYmSTw9Qy5maW5hbGx5TG9jJiYoQz1udWxsKTt2YXIgRT1DP0MuY29tcGxldGlvbjp7fTtyZXR1cm4gRS50eXBlPUEsRS5hcmc9SSxDPyh0aGlzLm1ldGhvZD1cXFwibmV4dFxcXCIsdGhpcy5uZXh0PUMuZmluYWxseUxvYyxoKTp0aGlzLmNvbXBsZXRlKEUpfSxjb21wbGV0ZTpmdW5jdGlvbihBLEkpe2lmKFxcXCJ0aHJvd1xcXCI9PT1BLnR5cGUpdGhyb3cgQS5hcmc7cmV0dXJuXFxcImJyZWFrXFxcIj09PUEudHlwZXx8XFxcImNvbnRpbnVlXFxcIj09PUEudHlwZT90aGlzLm5leHQ9QS5hcmc6XFxcInJldHVyblxcXCI9PT1BLnR5cGU/KHRoaXMucnZhbD10aGlzLmFyZz1BLmFyZyx0aGlzLm1ldGhvZD1cXFwicmV0dXJuXFxcIix0aGlzLm5leHQ9XFxcImVuZFxcXCIpOlxcXCJub3JtYWxcXFwiPT09QS50eXBlJiZJJiYodGhpcy5uZXh0PUkpLGh9LGZpbmlzaDpmdW5jdGlvbihBKXtmb3IodmFyIEk9dGhpcy50cnlFbnRyaWVzLmxlbmd0aC0xO0k+PTA7LS1JKXt2YXIgZz10aGlzLnRyeUVudHJpZXNbSV07aWYoZy5maW5hbGx5TG9jPT09QSlyZXR1cm4gdGhpcy5jb21wbGV0ZShnLmNvbXBsZXRpb24sZy5hZnRlckxvYyksVShnKSxofX0sY2F0Y2g6ZnVuY3Rpb24oQSl7Zm9yKHZhciBJPXRoaXMudHJ5RW50cmllcy5sZW5ndGgtMTtJPj0wOy0tSSl7dmFyIGc9dGhpcy50cnlFbnRyaWVzW0ldO2lmKGcudHJ5TG9jPT09QSl7dmFyIEI9Zy5jb21wbGV0aW9uO2lmKFxcXCJ0aHJvd1xcXCI9PT1CLnR5cGUpe3ZhciBDPUIuYXJnO1UoZyl9cmV0dXJuIEN9fXRocm93IG5ldyBFcnJvcihcXFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XFxcIil9LGRlbGVnYXRlWWllbGQ6ZnVuY3Rpb24oQSxJLGcpe3JldHVybiB0aGlzLmRlbGVnYXRlPXtpdGVyYXRvcjpLKEEpLHJlc3VsdE5hbWU6SSxuZXh0TG9jOmd9LFxcXCJuZXh0XFxcIj09PXRoaXMubWV0aG9kJiYodGhpcy5hcmc9dm9pZCAwKSxofX0sSX1BLmV4cG9ydHM9QyxBLmV4cG9ydHMuX19lc01vZHVsZT0hMCxBLmV4cG9ydHMuZGVmYXVsdD1BLmV4cG9ydHN9LDY5ODpBPT57ZnVuY3Rpb24gSShnKXtyZXR1cm4gQS5leHBvcnRzPUk9XFxcImZ1bmN0aW9uXFxcIj09dHlwZW9mIFN5bWJvbCYmXFxcInN5bWJvbFxcXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24oQSl7cmV0dXJuIHR5cGVvZiBBfTpmdW5jdGlvbihBKXtyZXR1cm4gQSYmXFxcImZ1bmN0aW9uXFxcIj09dHlwZW9mIFN5bWJvbCYmQS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmQSE9PVN5bWJvbC5wcm90b3R5cGU/XFxcInN5bWJvbFxcXCI6dHlwZW9mIEF9LEEuZXhwb3J0cy5fX2VzTW9kdWxlPSEwLEEuZXhwb3J0cy5kZWZhdWx0PUEuZXhwb3J0cyxJKGcpfUEuZXhwb3J0cz1JLEEuZXhwb3J0cy5fX2VzTW9kdWxlPSEwLEEuZXhwb3J0cy5kZWZhdWx0PUEuZXhwb3J0c30sNjg3OihBLEksZyk9Pnt2YXIgQj1nKDYxKSgpO0EuZXhwb3J0cz1CO3RyeXtyZWdlbmVyYXRvclJ1bnRpbWU9Qn1jYXRjaChBKXtcXFwib2JqZWN0XFxcIj09dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWU9QjpGdW5jdGlvbihcXFwiclxcXCIsXFxcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcXFwiKShCKX19fSxJPXt9O2Z1bmN0aW9uIGcoQil7dmFyIEM9SVtCXTtpZih2b2lkIDAhPT1DKXJldHVybiBDLmV4cG9ydHM7dmFyIFE9SVtCXT17ZXhwb3J0czp7fX07cmV0dXJuIEFbQl0oUSxRLmV4cG9ydHMsZyksUS5leHBvcnRzfWcubj1BPT57dmFyIEk9QSYmQS5fX2VzTW9kdWxlPygpPT5BLmRlZmF1bHQ6KCk9PkE7cmV0dXJuIGcuZChJLHthOkl9KSxJfSxnLmQ9KEEsSSk9Pntmb3IodmFyIEIgaW4gSSlnLm8oSSxCKSYmIWcubyhBLEIpJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoQSxCLHtlbnVtZXJhYmxlOiEwLGdldDpJW0JdfSl9LGcuZz1mdW5jdGlvbigpe2lmKFxcXCJvYmplY3RcXFwiPT10eXBlb2YgZ2xvYmFsVGhpcylyZXR1cm4gZ2xvYmFsVGhpczt0cnl7cmV0dXJuIHRoaXN8fG5ldyBGdW5jdGlvbihcXFwicmV0dXJuIHRoaXNcXFwiKSgpfWNhdGNoKEEpe2lmKFxcXCJvYmplY3RcXFwiPT10eXBlb2Ygd2luZG93KXJldHVybiB3aW5kb3d9fSgpLGcubz0oQSxJKT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKEEsSSk7dmFyIEI9e307cmV0dXJuKCgpPT57XFxcInVzZSBzdHJpY3RcXFwiO2Z1bmN0aW9uIEEoQSxJLGcsQixDLFEsRSl7dHJ5e3ZhciBpPUFbUV0oRSksbz1pLnZhbHVlfWNhdGNoKEEpe3JldHVybiB2b2lkIGcoQSl9aS5kb25lP0kobyk6UHJvbWlzZS5yZXNvbHZlKG8pLnRoZW4oQixDKX1mdW5jdGlvbiBJKEkpe3JldHVybiBmdW5jdGlvbigpe3ZhciBnPXRoaXMsQj1hcmd1bWVudHM7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbihDLFEpe3ZhciBFPUkuYXBwbHkoZyxCKTtmdW5jdGlvbiBpKEkpe0EoRSxDLFEsaSxvLFxcXCJuZXh0XFxcIixJKX1mdW5jdGlvbiBvKEkpe0EoRSxDLFEsaSxvLFxcXCJ0aHJvd1xcXCIsSSl9aSh2b2lkIDApfSkpfX1mdW5jdGlvbiBDKEEsSSl7aWYoIShBIGluc3RhbmNlb2YgSSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXFxcIil9ZnVuY3Rpb24gUShBLEkpe2Zvcih2YXIgZz0wO2c8SS5sZW5ndGg7ZysrKXt2YXIgQj1JW2ddO0IuZW51bWVyYWJsZT1CLmVudW1lcmFibGV8fCExLEIuY29uZmlndXJhYmxlPSEwLFxcXCJ2YWx1ZVxcXCJpbiBCJiYoQi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KEEsQi5rZXksQil9fWZ1bmN0aW9uIEUoQSxJLGcpe3JldHVybiBJJiZRKEEucHJvdG90eXBlLEkpLGcmJlEoQSxnKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQSxcXFwicHJvdG90eXBlXFxcIix7d3JpdGFibGU6ITF9KSxBfWZ1bmN0aW9uIGkoQSxJLGcpe3JldHVybiBJIGluIEE/T2JqZWN0LmRlZmluZVByb3BlcnR5KEEsSSx7dmFsdWU6ZyxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOkFbSV09ZyxBfWcuZChCLHtkZWZhdWx0OigpPT5FSX0pO3ZhciBvLEQ9Zyg2ODcpLGE9Zy5uKEQpO2NvbnN0IHc9KG89KG89XFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiBkb2N1bWVudCYmZG9jdW1lbnQuY3VycmVudFNjcmlwdD9kb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYzp2b2lkIDApfHxcXFwiL2luZGV4LmpzXFxcIixmdW5jdGlvbihBKXt2YXIgSSxCOyhBPXZvaWQgMCE9PShBPUF8fHt9KT9BOnt9KS5yZWFkeT1uZXcgUHJvbWlzZSgoZnVuY3Rpb24oQSxnKXtJPUEsQj1nfSkpO3ZhciBDLFEsRSxpLEQsYSx3PU9iamVjdC5hc3NpZ24oe30sQSkscz1bXSxHPVxcXCIuL3RoaXMucHJvZ3JhbVxcXCIsaD0oQSxJKT0+e3Rocm93IEl9LHQ9XFxcIm9iamVjdFxcXCI9PXR5cGVvZiB3aW5kb3csUj1cXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgaW1wb3J0U2NyaXB0cyxGPVxcXCJvYmplY3RcXFwiPT10eXBlb2YgcHJvY2VzcyYmXFxcIm9iamVjdFxcXCI9PXR5cGVvZiBwcm9jZXNzLnZlcnNpb25zJiZcXFwic3RyaW5nXFxcIj09dHlwZW9mIHByb2Nlc3MudmVyc2lvbnMubm9kZSx5PVxcXCJcXFwiO0Y/KHk9Uj9nKDQzMSkuZGlybmFtZSh5KStcXFwiL1xcXCI6XFxcIi8vXFxcIixhPSgpPT57RHx8KGk9Zyg4ODkpLEQ9Zyg0MzEpKX0sQz1mdW5jdGlvbihBLEkpe3ZhciBnPXBJKEEpO3JldHVybiBnP0k/ZzpnLnRvU3RyaW5nKCk6KGEoKSxBPUQubm9ybWFsaXplKEEpLGkucmVhZEZpbGVTeW5jKEEsST92b2lkIDA6XFxcInV0ZjhcXFwiKSl9LEU9QT0+e3ZhciBJPUMoQSwhMCk7cmV0dXJuIEkuYnVmZmVyfHwoST1uZXcgVWludDhBcnJheShJKSksSX0sUT0oQSxJLGcpPT57dmFyIEI9cEkoQSk7QiYmSShCKSxhKCksQT1ELm5vcm1hbGl6ZShBKSxpLnJlYWRGaWxlKEEsKGZ1bmN0aW9uKEEsQil7QT9nKEEpOkkoQi5idWZmZXIpfSkpfSxwcm9jZXNzLmFyZ3YubGVuZ3RoPjEmJihHPXByb2Nlc3MuYXJndlsxXS5yZXBsYWNlKC9cXFxcXFxcXC9nLFxcXCIvXFxcIikpLHM9cHJvY2Vzcy5hcmd2LnNsaWNlKDIpLHByb2Nlc3Mub24oXFxcInVuY2F1Z2h0RXhjZXB0aW9uXFxcIiwoZnVuY3Rpb24oQSl7aWYoIShBIGluc3RhbmNlb2YgaUEpKXRocm93IEF9KSkscHJvY2Vzcy5vbihcXFwidW5oYW5kbGVkUmVqZWN0aW9uXFxcIiwoZnVuY3Rpb24oQSl7dGhyb3cgQX0pKSxoPShBLEkpPT57aWYoVCgpKXRocm93IHByb2Nlc3MuZXhpdENvZGU9QSxJO3ZhciBnOyhnPUkpaW5zdGFuY2VvZiBpQXx8ZShcXFwiZXhpdGluZyBkdWUgdG8gZXhjZXB0aW9uOiBcXFwiK2cpLHByb2Nlc3MuZXhpdChBKX0sQS5pbnNwZWN0PWZ1bmN0aW9uKCl7cmV0dXJuXFxcIltFbXNjcmlwdGVuIE1vZHVsZSBvYmplY3RdXFxcIn0pOih0fHxSKSYmKFI/eT1zZWxmLmxvY2F0aW9uLmhyZWY6XFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiBkb2N1bWVudCYmZG9jdW1lbnQuY3VycmVudFNjcmlwdCYmKHk9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmMpLG8mJih5PW8pLHk9MCE9PXkuaW5kZXhPZihcXFwiYmxvYjpcXFwiKT95LnN1YnN0cigwLHkucmVwbGFjZSgvWz8jXS4qLyxcXFwiXFxcIikubGFzdEluZGV4T2YoXFxcIi9cXFwiKSsxKTpcXFwiXFxcIixDPUE9Pnt0cnl7dmFyIEk9bmV3IFhNTEh0dHBSZXF1ZXN0O3JldHVybiBJLm9wZW4oXFxcIkdFVFxcXCIsQSwhMSksSS5zZW5kKG51bGwpLEkucmVzcG9uc2VUZXh0fWNhdGNoKEkpe3ZhciBnPXBJKEEpO2lmKGcpcmV0dXJuIGZ1bmN0aW9uKEEpe2Zvcih2YXIgST1bXSxnPTA7ZzxBLmxlbmd0aDtnKyspe3ZhciBCPUFbZ107Qj4yNTUmJihmSSYmYyghMSxcXFwiQ2hhcmFjdGVyIGNvZGUgXFxcIitCK1xcXCIgKFxcXCIrU3RyaW5nLmZyb21DaGFyQ29kZShCKStcXFwiKSAgYXQgb2Zmc2V0IFxcXCIrZytcXFwiIG5vdCBpbiAweDAwLTB4RkYuXFxcIiksQiY9MjU1KSxJLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShCKSl9cmV0dXJuIEkuam9pbihcXFwiXFxcIil9KGcpO3Rocm93IEl9fSxSJiYoRT1BPT57dHJ5e3ZhciBJPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm4gSS5vcGVuKFxcXCJHRVRcXFwiLEEsITEpLEkucmVzcG9uc2VUeXBlPVxcXCJhcnJheWJ1ZmZlclxcXCIsSS5zZW5kKG51bGwpLG5ldyBVaW50OEFycmF5KEkucmVzcG9uc2UpfWNhdGNoKEkpe3ZhciBnPXBJKEEpO2lmKGcpcmV0dXJuIGc7dGhyb3cgSX19KSxRPShBLEksZyk9Pnt2YXIgQj1uZXcgWE1MSHR0cFJlcXVlc3Q7Qi5vcGVuKFxcXCJHRVRcXFwiLEEsITApLEIucmVzcG9uc2VUeXBlPVxcXCJhcnJheWJ1ZmZlclxcXCIsQi5vbmxvYWQ9KCk9PntpZigyMDA9PUIuc3RhdHVzfHwwPT1CLnN0YXR1cyYmQi5yZXNwb25zZSlJKEIucmVzcG9uc2UpO2Vsc2V7dmFyIEM9cEkoQSk7Qz9JKEMuYnVmZmVyKTpnKCl9fSxCLm9uZXJyb3I9ZyxCLnNlbmQobnVsbCl9KTt2YXIgcixNPUEucHJpbnR8fGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSksZT1BLnByaW50RXJyfHxjb25zb2xlLndhcm4uYmluZChjb25zb2xlKTtPYmplY3QuYXNzaWduKEEsdyksdz1udWxsLEEuYXJndW1lbnRzJiYocz1BLmFyZ3VtZW50cyksQS50aGlzUHJvZ3JhbSYmKEc9QS50aGlzUHJvZ3JhbSksQS5xdWl0JiYoaD1BLnF1aXQpLEEud2FzbUJpbmFyeSYmKHI9QS53YXNtQmluYXJ5KTt2YXIgUyxOPUEubm9FeGl0UnVudGltZXx8ITA7XFxcIm9iamVjdFxcXCIhPXR5cGVvZiBXZWJBc3NlbWJseSYmeihcXFwibm8gbmF0aXZlIHdhc20gc3VwcG9ydCBkZXRlY3RlZFxcXCIpO3ZhciBuPSExO2Z1bmN0aW9uIGMoQSxJKXtBfHx6KEkpfXZhciBrLFUsSixLLFksTCxkLGwscSxIPVxcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2YgVGV4dERlY29kZXI/bmV3IFRleHREZWNvZGVyKFxcXCJ1dGY4XFxcIik6dm9pZCAwO2Z1bmN0aW9uIGYoQSxJLGcpe2Zvcih2YXIgQj1JK2csQz1JO0FbQ10mJiEoQz49Qik7KSsrQztpZihDLUk+MTYmJkEuYnVmZmVyJiZIKXJldHVybiBILmRlY29kZShBLnN1YmFycmF5KEksQykpO2Zvcih2YXIgUT1cXFwiXFxcIjtJPEM7KXt2YXIgRT1BW0krK107aWYoMTI4JkUpe3ZhciBpPTYzJkFbSSsrXTtpZigxOTIhPSgyMjQmRSkpe3ZhciBvPTYzJkFbSSsrXTtpZigoRT0yMjQ9PSgyNDAmRSk/KDE1JkUpPDwxMnxpPDw2fG86KDcmRSk8PDE4fGk8PDEyfG88PDZ8NjMmQVtJKytdKTw2NTUzNilRKz1TdHJpbmcuZnJvbUNoYXJDb2RlKEUpO2Vsc2V7dmFyIEQ9RS02NTUzNjtRKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU1Mjk2fEQ+PjEwLDU2MzIwfDEwMjMmRCl9fWVsc2UgUSs9U3RyaW5nLmZyb21DaGFyQ29kZSgoMzEmRSk8PDZ8aSl9ZWxzZSBRKz1TdHJpbmcuZnJvbUNoYXJDb2RlKEUpfXJldHVybiBRfWZ1bmN0aW9uIHUoQSxJKXtyZXR1cm4gQT9mKEosQSxJKTpcXFwiXFxcIn1mdW5jdGlvbiBwKEEsSSxnLEIpe2lmKCEoQj4wKSlyZXR1cm4gMDtmb3IodmFyIEM9ZyxRPWcrQi0xLEU9MDtFPEEubGVuZ3RoOysrRSl7dmFyIGk9QS5jaGFyQ29kZUF0KEUpO2lmKGk+PTU1Mjk2JiZpPD01NzM0MyYmKGk9NjU1MzYrKCgxMDIzJmkpPDwxMCl8MTAyMyZBLmNoYXJDb2RlQXQoKytFKSksaTw9MTI3KXtpZihnPj1RKWJyZWFrO0lbZysrXT1pfWVsc2UgaWYoaTw9MjA0Nyl7aWYoZysxPj1RKWJyZWFrO0lbZysrXT0xOTJ8aT4+NixJW2crK109MTI4fDYzJml9ZWxzZSBpZihpPD02NTUzNSl7aWYoZysyPj1RKWJyZWFrO0lbZysrXT0yMjR8aT4+MTIsSVtnKytdPTEyOHxpPj42JjYzLElbZysrXT0xMjh8NjMmaX1lbHNle2lmKGcrMz49USlicmVhaztJW2crK109MjQwfGk+PjE4LElbZysrXT0xMjh8aT4+MTImNjMsSVtnKytdPTEyOHxpPj42JjYzLElbZysrXT0xMjh8NjMmaX19cmV0dXJuIElbZ109MCxnLUN9ZnVuY3Rpb24gVyhBKXtmb3IodmFyIEk9MCxnPTA7ZzxBLmxlbmd0aDsrK2cpe3ZhciBCPUEuY2hhckNvZGVBdChnKTtCPD0xMjc/SSsrOkI8PTIwNDc/SSs9MjpCPj01NTI5NiYmQjw9NTczNDM/KEkrPTQsKytnKTpJKz0zfXJldHVybiBJfWZ1bmN0aW9uIGIoSSl7az1JLEEuSEVBUDg9VT1uZXcgSW50OEFycmF5KEkpLEEuSEVBUDE2PUs9bmV3IEludDE2QXJyYXkoSSksQS5IRUFQMzI9TD1uZXcgSW50MzJBcnJheShJKSxBLkhFQVBVOD1KPW5ldyBVaW50OEFycmF5KEkpLEEuSEVBUFUxNj1ZPW5ldyBVaW50MTZBcnJheShJKSxBLkhFQVBVMzI9ZD1uZXcgVWludDMyQXJyYXkoSSksQS5IRUFQRjMyPWw9bmV3IEZsb2F0MzJBcnJheShJKSxBLkhFQVBGNjQ9cT1uZXcgRmxvYXQ2NEFycmF5KEkpfUEuSU5JVElBTF9NRU1PUlk7dmFyIG0sWj1bXSx4PVtdLFY9W107ZnVuY3Rpb24gVCgpe3JldHVybiBOfXZhciBYPTAsTz1udWxsLGo9bnVsbDtmdW5jdGlvbiB2KEkpe1grKyxBLm1vbml0b3JSdW5EZXBlbmRlbmNpZXMmJkEubW9uaXRvclJ1bkRlcGVuZGVuY2llcyhYKX1mdW5jdGlvbiBQKEkpe2lmKFgtLSxBLm1vbml0b3JSdW5EZXBlbmRlbmNpZXMmJkEubW9uaXRvclJ1bkRlcGVuZGVuY2llcyhYKSwwPT1YJiYobnVsbCE9PU8mJihjbGVhckludGVydmFsKE8pLE89bnVsbCksaikpe3ZhciBnPWo7aj1udWxsLGcoKX19ZnVuY3Rpb24geihJKXtBLm9uQWJvcnQmJkEub25BYm9ydChJKSxlKEk9XFxcIkFib3J0ZWQoXFxcIitJK1xcXCIpXFxcIiksbj0hMCxJKz1cXFwiLiBCdWlsZCB3aXRoIC1zQVNTRVJUSU9OUyBmb3IgbW9yZSBpbmZvLlxcXCI7dmFyIGc9bmV3IFdlYkFzc2VtYmx5LlJ1bnRpbWVFcnJvcihJKTt0aHJvdyBCKGcpLGd9dmFyIF8sJCxBQSxJQSxnQT1cXFwiZGF0YTphcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07YmFzZTY0LFxcXCI7ZnVuY3Rpb24gQkEoQSl7cmV0dXJuIEEuc3RhcnRzV2l0aChnQSl9ZnVuY3Rpb24gQ0EoQSl7cmV0dXJuIEEuc3RhcnRzV2l0aChcXFwiZmlsZTovL1xcXCIpfWZ1bmN0aW9uIFFBKEEpe3RyeXtpZihBPT1fJiZyKXJldHVybiBuZXcgVWludDhBcnJheShyKTt2YXIgST1wSShBKTtpZihJKXJldHVybiBJO2lmKEUpcmV0dXJuIEUoQSk7dGhyb3dcXFwiYm90aCBhc3luYyBhbmQgc3luYyBmZXRjaGluZyBvZiB0aGUgd2FzbSBmYWlsZWRcXFwifWNhdGNoKEEpe3ooQSl9fUJBKF89XFxcImRhdGE6YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2Jhc2U2NCxBR0Z6YlFFQUFBQUI5UVZkWUFGL0FYOWdBWDhBWUFKL2Z3QmdBbjkvQVg5Z0EzOS9md0YvWUFOL2YzOEFZQVYvZjM5L2Z3QmdCSDkvZjM4QVlBUi9mMzkvQVg5Z0JuOS9mMzkvZndGL1lBVi9mMzkvZndGL1lBWi9mMzkvZjM4QVlBZC9mMzkvZjM5L0FHQUlmMzkvZjM5L2YzOEJmMkFBQUdBSGYzOS9mMzkvZndGL1lBQUJmMkFCZlFGOVlBVi9mbjUrZmdCZ0EzOStmd0YrWUFKL2ZBQmdBbjE5QVgxZ0JYOS9mMzkrQVg5Z0NIOS9mMzkvZjM5L0FHQURmMzkvQVgxZ0NuOS9mMzkvZjM5L2YzOEJmMkFLZjM5L2YzOS9mMzkvZndCZ0JIOStmbjhBWUFGL0FYeGdCMzkvZjM5L2ZuNEJmMkFHZjM5L2YzNStBWDlnQTM5L2ZBQmdBWDhCZldBRmYzMTlmMzhCZjJBQmZBRjlZQU4vZjMwQVlBSjhmd0Y4WUFaL2YzMTlmMzhCZjJBRmYzOTlmWDhBWUFGOEFYeGdBbjkvQVgxZ0NYOS9mMzkvZjM5L2Z3Ri9ZQUovZndGOFlBTi9mMzhCZm1BTWYzOS9mMzkvZjM5L2YzOS9BWDlnQlg5L2ZuOS9BR0FHZjN4L2YzOS9BWDlnQVg4QmZtQUdmMzkvZjM1L0FYOWdEMzkvZjM5L2YzOS9mMzkvZjM5L2Z3QmdDMzkvZjM5L2YzOS9mMzkvQVg5Z0JIOS9mMzhCZm1BRmYzOS9mM3dCZjJBTmYzOS9mMzkvZjM5L2YzOS9md0JnQUFGOFlBTi9mWDBCZldBRmYzMTlmMzhCZldBRWZYMTlmUUY5WUFKL2ZnQmdCMzkvZjM5OGYzOEJmMkFFZm41K2ZnRi9ZQVIvZjM5OUFHQUNmbjhCZjJBQmZRRi9ZQU44Zkg4QmZHQUNmSHdCZkdBSGYzOS9mMzkvZlFGOVlBZC9mMzkvZjM5L0FYMWdBMzkrZndCZ0EzOS9mUUY5WUF4L2YzOS9mMzkvZjM5L2ZIOEJmMkFDZm40QmZHQUZmMzkvZlgwQVlBWjhmSHg4Zkh3QmZHQURmSHg4QVh4Z0EzMTlmUUY5WUFSL2YzOStBWDVnQm45OWZYMTlmd0YvWUFKK2ZnRjlZQU4rZm40QmYyQURmMzkrQUdBQ2YzOEJmbUFDZjMwQmZXQUNmWDhCZjJBQ2ZIOEJmMkFPZjM5L2YzOS9mMzkvZjN4L2YzOEJmMkFGZjM5OWZYOEJmMkFEZjM5OUFYOWdCbjkvZjM5L2ZRQmdCbjk4Zkg5L2Z3QmdCSDkvZm40QVlBUi9mbjkvQVg5Z0EzOS9md0Y4QXFFQ01BRmhBV0VBRGdGaEFXSUFCUUZoQVdNQUFRRmhBV1FBRndGaEFXVUFDd0ZoQVdZQUJnRmhBV2NBQlFGaEFXZ0FBQUZoQVdrQUJBRmhBV29BQWdGaEFXc0FCZ0ZoQVd3QUJRRmhBVzBBQXdGaEFXNEFDd0ZoQVc4QU5RRmhBWEFBQUFGaEFYRUFDQUZoQVhJQUJBRmhBWE1BTmdGaEFYUUFBZ0ZoQVhVQUJRRmhBWFlBSHdGaEFYY0FBd0ZoQVhnQUNBRmhBWGtBQkFGaEFYb0FCUUZoQVVFQUNnRmhBVUlBREFGaEFVTUFDZ0ZoQVVRQURnRmhBVVVBQUFGaEFVWUFBd0ZoQVVjQUF3RmhBVWdBQndGaEFVa0FDQUZoQVVvQUJBRmhBVXNBQ0FGaEFVd0FBZ0ZoQVUwQUJRRmhBVTRBQWdGaEFVOEFCZ0ZoQVZBQUFnRmhBVkVBQVFGaEFWSUFBUUZoQVZNQUFRRmhBVlFBR2dGaEFWVUFDd0ZoQVZZQUNBTytDcndLQXdFQUF3RUFBQUFFQndNREFBQUVBZ01BQUFBQkFnRTNBd01BQXdJQUFBQURBZ0lBQVRnZ0FBVVFFZ0FEQUFBSUFnVUZBUVFJRUFBQUF3TUJBQkVEQXlFREFRTUREZ01BQVFNRUFnQUFBQU1BQUFNU0JRQUNHd1lDQndJREF3QURBd0FDQXdBQ0NnQUNBQUlBQXhJQUF3QTVBd0FBQWdRWUF3RUVBZ29BQVFJT0FnUUVCUUFBQXdJREFBQUNBZ0E2QUNJaUFnSUFBQUVEQXdVVUNDTUJBQUlDQ2dvSUJBQUFBQUVLQUFJWUlSVUJEUTBIQUFRa0FBQUFBRHNCQlFRRkJRTUFCQU1GQUFJT0FnSUFBQWNKQXdFYlBBQUlBRDBqQVFNREFnQUVBQUFBQUE0QkFnY0RBZ0VDQ1FBQUF3SStBd01GUHhFQkF3SUNBQU1FQkFVQ0RnRURBQU1DQXdRQkNBQUREZ01BQWdVREF3UUNHUUFaQUFBQkFBTURBRUJCQlFRQkNFSkRKUU1WQlJRRUFBRUFBZ01GQUFnRkFnQUNBUU1BRlFJbUFRZ0VDZ0VGQXdBRkFnTUNBQU1BRFFJREFBRUFBd01BQ0FJQUp3SU1BZ0JFQUFBTEF3Y0ZBZzRGQUFRQ0FTZ0ZDUlVDQVFNQ0F3TURBZ0VDQUFFRUFnSUNBZ0pGQXdVRUFBSUFCUUlHRndBRlJnSUFBQUlFQndNUEF3OEhBQUlDQUFFQUFnRXBBQUVBQUFFRFJ4SURCQWdEQmdRRUp3SUNBUUFDQkFNQUFRc1FCd0lDQVFZQkF3ZElBQU1DQXdjRkFRQUFBU29BQWdBQUVBTUNBd0FDQXdBQUFBQkpTZ05MQXdRWEFBSUJBZ2dtQXdFQUFRRUNBZ0lCQWdVSUNBZ0xBUXNGQndNREJRSUNCaXNBQXdRRUFnQUVMQVlFTEFZRERnVk1BQWdBQVFNQUF3TUJBQUFEQXdFQUFRVUZBd0FBRFFBRkFnQUFBd0FCQUFBQUF3RUJBQUFIQVMwRUFBQk5Bd1FBVGdFQ0NBSVNUd0lEQUFSUVVRY1NHeElGQndBUENpUUNBd0VBQlFBSEFBQVJVaEVDTHdVQUFTOVRWQW9SQVE0SEFRRUJBZ2dJQVFFQkFBQUJBd0VCVlFFQUFRZ0JBZ0JXQkFFQ0NBTURKUUlDQVFJRERBQVlBZ0lDQWdrQkRnY0NBQWNCQUFFRkNRQUJBZ0lERVJFQkFRTUtLQUVnQWhrQUFnTUFBZ0ZYQXdJQVdBSUpEd2NOQndFQ0J3Z0RBQUlJQUFJTEFBRUVCQUVDQVFJQUFnRUNBZ01RQXdJQkFnY0NBd1FEQndFQ0FnSUNBZ0lDQXdNQ0FnRURBQUlDQVFJQ0FGa0ZBUUlEQkFBRUFRTUZCQVFDQWdNRUFnRUFBZ0lDQUFJQkFnRVJBZ0VEQVFBREZSRVJBZ01CQVFFQUFnRUFBZ0FEQXdVRUNBZ3dDVEFKQXdJSFdnQURCUWNHRndVRkF3RXJCUUVDQWdNQUFRQUJBZ2dBQUFvTkRRb05EUUFLRFFBQkFnRUZBQUVDQUFReEdqRWFBd0FBQWpJQ0F3QUFCUUl5QWdJQ0N3WUxDd01HQ3d0YkJBd0JEQVFNREFrRUIxd1lNd2dKQ0FBekNBRVBBZ1FIQ2dRSENnTUVBZ01BQUFJREJBSURBQUFDQVFRQUJBRUNCQUFFQVFNRUJBSXVBQk1EQUFBRUJCTVFEZ0FIQVFjSEFnRUhCd2NIQndJQkJBa0pBUW9LQVFZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lCQWdFQ0FRY0hCd2NIQVF3TURBd0NEQWNNQndFQkFRY0hCd0lEQXdBREFRRURBd01EQXdNQkFRTURBd01EQVFFR0JnWUdCZ1lHQmdZQUFRQUFBQU1BQVFFQkFBSUNCQUFBQXdFRkF3Z0hCUWdIQlFnSEJRVXFId0FDQlFNUUJBUURCQU1JQkFVRkFRQUVCUUVBQkFVRkFnRUFCQUFBQWdBQUF3QUNBQUljRkJ3VUJRQUFFQUVGQUFBREFRRUJBd0VEQVFNREFRRUFBUUVCQUFBWktROE1DZ0VRQUFBQUFBc0xDd1lHQmdRSEJ3Y0VCQUVBQVFBQkFBRUFBUUFCQUFFQUFRQUJBQUVBQVFBQkFBRUFBUUFDQWdJQ0FnSUFBQUVCQUFvQUNnME5BUW9LQkFnRUF3UURBUW9FQ0FRREJBTUlDQWdFQVFFQkN3c0pIUWtkRHc4UER3OFBEUWtKQ1FrSkRRa0pDUWtKQ2g0MEZnb1dDZ29LSGpRV0NoWUtDZ0FKQ1FrSkNRa0pDUWtKQ1FrSkNRa0pDUWtFQndGd0FmY0U5d1FGQndFQmdDQ0FnQUlHRGdKL0FVR3d1OFFDQzM4QlFRQUxCMTBSQVZjQ0FBRllBTVlFQVZrQU53RmFBREVCWHdDQkNBRWtBUUFDWVdFQWd3Z0NZbUVBZ2dnQ1kyRUEvUVFDWkdFQTNBa0NaV0VBMndrQ1ptRUE0QWtDWjJFQTJna0NhR0VBMlFrQ2FXRUEyQWtDYW1FQTF3a0NhMkVBMWdrSnlRa0JBRUVCQy9ZRXpBbXlCY2NKaEFrNWhRbi9DSU1KZ1FtQ0NZQUorUWJvQWVnR3VRYlBDWkFFMGdtUkJOTUowUW5RQ2VnQlZNNEp6UW1CQkZUTENjb0pnUVJVeVFuSUNZRUV4Z25GQ2RZRnJRbStDY0lKdkFtOUNhNEp3d25FQ2NFSnN3bXhDYklKd0FtL0Nic0p1Z201Q2JnSnRRbTBDYmNKdGdtd0NhOEpyQW1yQ2U0RHFnbXBDVk9vQ2FjSnBnbWxDZTREcUFMOUEwS2tDYU1Kb2dtaENlNEQyQVdnQ2JVQm53bWVDWjBKbkFtYkNab0ptUW1ZQ1pjSlZKWUpsUW1VQ1pNSmtnbVJDWkFKNndPUENZNEo2Z1BwQTQwSjZ3T01DWXNKNmdQcEE0b0o2d09KQ1lnSjZnUHBBNGNKaGduWkFmZ0kvZ2o5Q1B3SSt3aTNCZm9JK1FqM0NQWUk5UWowQ1BNSTJRSHlDUEVJOEFqdkNPNEk3UWpzQ09zSTZnanBDTEFJc1FpeUNMTUl0QWkxQ0xZSXJnaXRDS3dJcXdpcUNLa0lxQWluQ0tZSXBRaWtDS01Jb2dpaENLQUlud2llQ0owSW5BaWJDSm9JbVFpWUNLOEl0d2k0Q0xrSTJRSG9DT2NJNWdqbENPUUk0d2ppQ09FSTRBamZDTjRJM1FqY0NOc0kyZ2paQ05nSTF3aldDSVVCMVFqVUNOTUkwZ2pSQ05BSXp3ak9DTTBJekFqTENNb0l5UWpJQ01jSXhnakZDTVFJd3dqQ0NNRUl3QWkvQ0w0SXZRaThDTHNJdWdpWENPVURsZ2lWQ0pRSWt3aVNDSzRGclFXUkNORUNrQWpaQVk4SWpnaU5DSXdJaXdpS0NJa0lpQWlIQ0lZSTJRR0ZDSVFJcHdXQUNQOEgvZ2Y5QjRVQitnZjRCL2NIOWdmMUI5Y0Q4d2VIQS9JRThRVHZCSVVCaFFIeUIrNEU4UWVEQS9BSGd3T0NBOVVEN1FUckJJQUQwZ1BuQk9ZRTBBUHVCNGNEOGdUeEJPOEVoUUdGQWUwSDdnVHNCNE1ENndlREE0SUQxUVB0Qk9zRWdBUFNBK2NFNWdUMEJOZ0Q5QVRZQThnQzJBUFpBZW9IMWdUcEIrZ0g1d2ZtQjlZRTVRZlNCT1FINHdmUkJPSUg0UWZnQjk4SDBRVGVCOUlFM1FmY0J6SFpBYThLbXdlSENvVUtnd3FCQ3Y4Si9RbjdDZmtKOXduMUNmTUo4UW52Q2UwSm53ZXdDcTRLbWdlaUNxRUtvQXFmQ3A0S29RYWRDcHdLbXdxaUI1a0ttQXFYQ3BZS2xRcUZBWlFLa3dxUUI1SUtrQXFQQ280S2pBcUtDbzhIa1FyVUNka0tqUXFMQ29rSzZBRlVWSzBLckFxckNxb0txUXFvQ3FjS3BncWhCcVVLcEFxakNsU1pCNWtIOFFLaEJLRUVtZ3FoQkZTV0I1VUg4UUtGQVlVQmxBZVlBMVNXQjVVSDhRS0ZBWVVCbEFlWUExU1RCNUlIOFFLRkFZVUJrUWVZQTFTVEI1SUg4UUtGQVlVQmtRZVlBK2dCVk5zSDJnZlpCK2dCVk5nSDF3ZldCMVRyQ3VvSzZRcm9DczRIemdmbkN1WUs1UXJrQ3VNS1ZPSUs0UXJnQ3Q4S3h3ZkhCOTRLM1FyY0N0c0syZ3BVMkFyWEN0WUsxUXJVQ3RNSzBnclJDbFRRQ3M4S3pnck5Dc3dLeXdyS0Nza0s2QUZVemdYSUNzY0t4Z3JGQ3NRS3d3cUlDb1FLZ0FyMENmQUovQW40Q2VnQlZNNEZ3Z3JCQ3NBS3Z3cStDcjBLaGdxQ0N2NEo4Z251Q2ZvSjlnbTVCSW9IdkFxNUJJb0h1d3BVd2dQQ0E3Z0J1QUc0QWJVSGhRSDZBZm9CVk1JRHdnTzRBYmdCdUFHMUI0VUIrZ0g2QVZUQkE4RUR1QUc0QWJnQnRBZUZBZm9CK2dGVXdRUEJBN2dCdUFHNEFiUUhoUUg2QWZvQlZMb0t1UXBVdUFxM0NsUzJDclVLVkxRS3N3cFVvd2V5Q29jRFZLTUhzUXFIQTRJSGRZSUgrd2ZvQVZUWkFka0I3QWxVNnduaENlUUo2Z2xVNGdubENla0pWT01KNWdub0NWVG5DVlRlQ1ZUZENWVGZDYTRFMVFtdUJLNEVDcnVnR2J3S3BRRUJCMzhnQVJDZUFTRURJd0JCSUdzaUFpUUFBa0FnQWtFWWFpQUFFUDhDSWdVdEFBQkZEUUFnQWtFSWFpQUFFTVVFSVFZZ0FDQUFLQUlBUVF4cktBSUFhaUlFS0FJRUlRY2dCQkRRQnlFSUlBSWdCaWdDQUNBQklBRWdBMm9pQXlBQklBZEJzQUZ4UVNCR0d5QURJQVFnQ0JEK0FUWUNFQ0FDUVJCcUVQVUNSUTBBSUFBZ0FDZ0NBRUVNYXlnQ0FHcEJCUkREQWdzZ0JSREpBaUFDUVNCcUpBQWdBQXZLREFFSGZ3SkFJQUJGRFFBZ0FFRUlheUlDSUFCQkJHc29BZ0FpQVVGNGNTSUFhaUVGQWtBZ0FVRUJjUTBBSUFGQkEzRkZEUUVnQWlBQ0tBSUFJZ0ZySWdKQjRKWUVLQUlBU1EwQklBQWdBV29oQUVIa2xnUW9BZ0FnQWtjRVFDQUJRZjhCVFFSQUlBSW9BZ2dpQkNBQlFRTjJJZ0ZCQTNSQitKWUVha1lhSUFRZ0FpZ0NEQ0lEUmdSQVFkQ1dCRUhRbGdRb0FnQkJmaUFCZDNFMkFnQU1Bd3NnQkNBRE5nSU1JQU1nQkRZQ0NBd0NDeUFDS0FJWUlRWUNRQ0FDSUFJb0Fnd2lBVWNFUUNBQ0tBSUlJZ01nQVRZQ0RDQUJJQU0yQWdnTUFRc0NRQ0FDUVJScUlnUW9BZ0FpQXcwQUlBSkJFR29pQkNnQ0FDSUREUUJCQUNFQkRBRUxBMEFnQkNFSElBTWlBVUVVYWlJRUtBSUFJZ01OQUNBQlFSQnFJUVFnQVNnQ0VDSUREUUFMSUFkQkFEWUNBQXNnQmtVTkFRSkFJQUlvQWh3aUJFRUNkRUdBbVFScUlnTW9BZ0FnQWtZRVFDQURJQUUyQWdBZ0FRMEJRZFNXQkVIVWxnUW9BZ0JCZmlBRWQzRTJBZ0FNQXdzZ0JrRVFRUlFnQmlnQ0VDQUNSaHRxSUFFMkFnQWdBVVVOQWdzZ0FTQUdOZ0lZSUFJb0FoQWlBd1JBSUFFZ0F6WUNFQ0FESUFFMkFoZ0xJQUlvQWhRaUEwVU5BU0FCSUFNMkFoUWdBeUFCTmdJWURBRUxJQVVvQWdRaUFVRURjVUVEUncwQVFkaVdCQ0FBTmdJQUlBVWdBVUYrY1RZQ0JDQUNJQUJCQVhJMkFnUWdBQ0FDYWlBQU5nSUFEd3NnQWlBRlR3MEFJQVVvQWdRaUFVRUJjVVVOQUFKQUlBRkJBbkZGQkVCQjZKWUVLQUlBSUFWR0JFQkI2SllFSUFJMkFnQkIzSllFUWR5V0JDZ0NBQ0FBYWlJQU5nSUFJQUlnQUVFQmNqWUNCQ0FDUWVTV0JDZ0NBRWNOQTBIWWxnUkJBRFlDQUVIa2xnUkJBRFlDQUE4TFFlU1dCQ2dDQUNBRlJnUkFRZVNXQkNBQ05nSUFRZGlXQkVIWWxnUW9BZ0FnQUdvaUFEWUNBQ0FDSUFCQkFYSTJBZ1FnQUNBQ2FpQUFOZ0lBRHdzZ0FVRjRjU0FBYWlFQUFrQWdBVUgvQVUwRVFDQUZLQUlJSWdRZ0FVRURkaUlCUVFOMFFmaVdCR3BHR2lBRUlBVW9BZ3dpQTBZRVFFSFFsZ1JCMEpZRUtBSUFRWDRnQVhkeE5nSUFEQUlMSUFRZ0F6WUNEQ0FESUFRMkFnZ01BUXNnQlNnQ0dDRUdBa0FnQlNBRktBSU1JZ0ZIQkVBZ0JTZ0NDQ0lEUWVDV0JDZ0NBRWthSUFNZ0FUWUNEQ0FCSUFNMkFnZ01BUXNDUUNBRlFSUnFJZ1FvQWdBaUF3MEFJQVZCRUdvaUJDZ0NBQ0lERFFCQkFDRUJEQUVMQTBBZ0JDRUhJQU1pQVVFVWFpSUVLQUlBSWdNTkFDQUJRUkJxSVFRZ0FTZ0NFQ0lERFFBTElBZEJBRFlDQUFzZ0JrVU5BQUpBSUFVb0Fod2lCRUVDZEVHQW1RUnFJZ01vQWdBZ0JVWUVRQ0FESUFFMkFnQWdBUTBCUWRTV0JFSFVsZ1FvQWdCQmZpQUVkM0UyQWdBTUFnc2dCa0VRUVJRZ0JpZ0NFQ0FGUmh0cUlBRTJBZ0FnQVVVTkFRc2dBU0FHTmdJWUlBVW9BaEFpQXdSQUlBRWdBellDRUNBRElBRTJBaGdMSUFVb0FoUWlBMFVOQUNBQklBTTJBaFFnQXlBQk5nSVlDeUFDSUFCQkFYSTJBZ1FnQUNBQ2FpQUFOZ0lBSUFKQjVKWUVLQUlBUncwQlFkaVdCQ0FBTmdJQUR3c2dCU0FCUVg1eE5nSUVJQUlnQUVFQmNqWUNCQ0FBSUFKcUlBQTJBZ0FMSUFCQi93Rk5CRUFnQUVGNGNVSDRsZ1JxSVFFQ2YwSFFsZ1FvQWdBaUEwRUJJQUJCQTNaMElnQnhSUVJBUWRDV0JDQUFJQU55TmdJQUlBRU1BUXNnQVNnQ0NBc2hBQ0FCSUFJMkFnZ2dBQ0FDTmdJTUlBSWdBVFlDRENBQ0lBQTJBZ2dQQzBFZklRUWdBRUgvLy84SFRRUkFJQUJCQ0hZaUFTQUJRWUQrUDJwQkVIWkJDSEVpQkhRaUFTQUJRWURnSDJwQkVIWkJCSEVpQTNRaUFTQUJRWUNBRDJwQkVIWkJBbkVpQVhSQkQzWWdBeUFFY2lBQmNtc2lBVUVCZENBQUlBRkJGV3AyUVFGeGNrRWNhaUVFQ3lBQ0lBUTJBaHdnQWtJQU53SVFJQVJCQW5SQmdKa0VhaUVIQWtBQ1FBSkFRZFNXQkNnQ0FDSURRUUVnQkhRaUFYRkZCRUJCMUpZRUlBRWdBM0kyQWdBZ0J5QUNOZ0lBSUFJZ0J6WUNHQXdCQ3lBQVFRQkJHU0FFUVFGMmF5QUVRUjlHRzNRaEJDQUhLQUlBSVFFRFFDQUJJZ01vQWdSQmVIRWdBRVlOQWlBRVFSMTJJUUVnQkVFQmRDRUVJQU1nQVVFRWNXb2lCMEVRYWlnQ0FDSUJEUUFMSUFjZ0FqWUNFQ0FDSUFNMkFoZ0xJQUlnQWpZQ0RDQUNJQUkyQWdnTUFRc2dBeWdDQ0NJQUlBSTJBZ3dnQXlBQ05nSUlJQUpCQURZQ0dDQUNJQU0yQWd3Z0FpQUFOZ0lJQzBId2xnUkI4SllFS0FJQVFRRnJJZ0JCZnlBQUd6WUNBQXNMQndBZ0FFRUlhZ3U5QVFFR2Z5TUFRU0JySWdJa0FDQUNRUmhxSWdNZ0FCRC9BaG9DUUNBRExRQUFSUTBBSUFBZ0FDZ0NBRUVNYXlnQ0FHb2lCQ2dDQkJvZ0FrRVFhaUlESUFRUVRDQURRY2lyQkJESkFTRUVJQU1RUmlBQ1FRaHFJQUFReFFRaEJTQUFJQUFvQWdCQkRHc29BZ0JxSWdZUTBBY2hCeUFDSUFRZ0JTZ0NBQ0FHSUFjZ0FTQUVLQUlBS0FJUUVRb0FOZ0lRSUFNUTlRSkZEUUFnQUNBQUtBSUFRUXhyS0FJQWFrRUZFTU1DQ3lBQ1FSaHFFTWtDSUFKQklHb2tBQ0FBQ3dnQUlBQVE2QVlhQ3hVQUlBQVFrUUVFUUNBQUtBSUVEd3NnQUMwQUN3c2ZBUUYvSUFBUWtRRUVRQ0FBS0FJQUlRRWdBQkRrQVJvZ0FSQXhDeUFBQy9FdEFRdC9Jd0JCRUdzaUN5UUFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBQVFmUUJUUVJBUWRDV0JDZ0NBQ0lGUVJBZ0FFRUxha0Y0Y1NBQVFRdEpHeUlHUVFOMklnQjJJZ0ZCQTNFRVFBSkFJQUZCZjNOQkFYRWdBR29pQWtFRGRDSUJRZmlXQkdvaUFDQUJRWUNYQkdvb0FnQWlBU2dDQ0NJRFJnUkFRZENXQkNBRlFYNGdBbmR4TmdJQURBRUxJQU1nQURZQ0RDQUFJQU0yQWdnTElBRkJDR29oQUNBQklBSkJBM1FpQWtFRGNqWUNCQ0FCSUFKcUlnRWdBU2dDQkVFQmNqWUNCQXdNQ3lBR1FkaVdCQ2dDQUNJSFRRMEJJQUVFUUFKQVFRSWdBSFFpQWtFQUlBSnJjaUFCSUFCMGNTSUFRUUFnQUd0eFFRRnJJZ0FnQUVFTWRrRVFjU0lBZGlJQlFRVjJRUWh4SWdJZ0FISWdBU0FDZGlJQVFRSjJRUVJ4SWdGeUlBQWdBWFlpQUVFQmRrRUNjU0lCY2lBQUlBRjJJZ0JCQVhaQkFYRWlBWElnQUNBQmRtb2lBVUVEZENJQVFmaVdCR29pQWlBQVFZQ1hCR29vQWdBaUFDZ0NDQ0lEUmdSQVFkQ1dCQ0FGUVg0Z0FYZHhJZ1UyQWdBTUFRc2dBeUFDTmdJTUlBSWdBellDQ0FzZ0FDQUdRUU55TmdJRUlBQWdCbW9pQ0NBQlFRTjBJZ0VnQm1zaUEwRUJjallDQkNBQUlBRnFJQU0yQWdBZ0J3UkFJQWRCZUhGQitKWUVhaUVCUWVTV0JDZ0NBQ0VDQW44Z0JVRUJJQWRCQTNaMElnUnhSUVJBUWRDV0JDQUVJQVZ5TmdJQUlBRU1BUXNnQVNnQ0NBc2hCQ0FCSUFJMkFnZ2dCQ0FDTmdJTUlBSWdBVFlDRENBQ0lBUTJBZ2dMSUFCQkNHb2hBRUhrbGdRZ0NEWUNBRUhZbGdRZ0F6WUNBQXdNQzBIVWxnUW9BZ0FpQ2tVTkFTQUtRUUFnQ210eFFRRnJJZ0FnQUVFTWRrRVFjU0lBZGlJQlFRVjJRUWh4SWdJZ0FISWdBU0FDZGlJQVFRSjJRUVJ4SWdGeUlBQWdBWFlpQUVFQmRrRUNjU0lCY2lBQUlBRjJJZ0JCQVhaQkFYRWlBWElnQUNBQmRtcEJBblJCZ0prRWFpZ0NBQ0lDS0FJRVFYaHhJQVpySVFRZ0FpRUJBMEFDUUNBQktBSVFJZ0JGQkVBZ0FTZ0NGQ0lBUlEwQkN5QUFLQUlFUVhoeElBWnJJZ0VnQkNBQklBUkpJZ0ViSVFRZ0FDQUNJQUViSVFJZ0FDRUJEQUVMQ3lBQ0tBSVlJUWtnQWlBQ0tBSU1JZ05IQkVBZ0FpZ0NDQ0lBUWVDV0JDZ0NBRWthSUFBZ0F6WUNEQ0FESUFBMkFnZ01Dd3NnQWtFVWFpSUJLQUlBSWdCRkJFQWdBaWdDRUNJQVJRMERJQUpCRUdvaEFRc0RRQ0FCSVFnZ0FDSURRUlJxSWdFb0FnQWlBQTBBSUFOQkVHb2hBU0FES0FJUUlnQU5BQXNnQ0VFQU5nSUFEQW9MUVg4aEJpQUFRYjkvU3cwQUlBQkJDMm9pQUVGNGNTRUdRZFNXQkNnQ0FDSUlSUTBBUVFBZ0Jtc2hCQUpBQWtBQ1FBSi9RUUFnQmtHQUFra05BQnBCSHlBR1FmLy8vd2RMRFFBYUlBQkJDSFlpQUNBQVFZRCtQMnBCRUhaQkNIRWlBSFFpQVNBQlFZRGdIMnBCRUhaQkJIRWlBWFFpQWlBQ1FZQ0FEMnBCRUhaQkFuRWlBblJCRDNZZ0FDQUJjaUFDY21zaUFFRUJkQ0FHSUFCQkZXcDJRUUZ4Y2tFY2Fnc2lCMEVDZEVHQW1RUnFLQUlBSWdGRkJFQkJBQ0VBREFFTFFRQWhBQ0FHUVFCQkdTQUhRUUYyYXlBSFFSOUdHM1FoQWdOQUFrQWdBU2dDQkVGNGNTQUdheUlGSUFSUERRQWdBU0VESUFVaUJBMEFRUUFoQkNBQklRQU1Bd3NnQUNBQktBSVVJZ1VnQlNBQklBSkJIWFpCQkhGcUtBSVFJZ0ZHR3lBQUlBVWJJUUFnQWtFQmRDRUNJQUVOQUFzTElBQWdBM0pGQkVCQkFDRURRUUlnQjNRaUFFRUFJQUJyY2lBSWNTSUFSUTBESUFCQkFDQUFhM0ZCQVdzaUFDQUFRUXgyUVJCeElnQjJJZ0ZCQlhaQkNIRWlBaUFBY2lBQklBSjJJZ0JCQW5aQkJIRWlBWElnQUNBQmRpSUFRUUYyUVFKeElnRnlJQUFnQVhZaUFFRUJka0VCY1NJQmNpQUFJQUYyYWtFQ2RFR0FtUVJxS0FJQUlRQUxJQUJGRFFFTEEwQWdBQ2dDQkVGNGNTQUdheUlDSUFSSklRRWdBaUFFSUFFYklRUWdBQ0FESUFFYklRTWdBQ2dDRUNJQkJIOGdBUVVnQUNnQ0ZBc2lBQTBBQ3dzZ0EwVU5BQ0FFUWRpV0JDZ0NBQ0FHYTA4TkFDQURLQUlZSVFjZ0F5QURLQUlNSWdKSEJFQWdBeWdDQ0NJQVFlQ1dCQ2dDQUVrYUlBQWdBallDRENBQ0lBQTJBZ2dNQ1FzZ0EwRVVhaUlCS0FJQUlnQkZCRUFnQXlnQ0VDSUFSUTBESUFOQkVHb2hBUXNEUUNBQklRVWdBQ0lDUVJScUlnRW9BZ0FpQUEwQUlBSkJFR29oQVNBQ0tBSVFJZ0FOQUFzZ0JVRUFOZ0lBREFnTElBWkIySllFS0FJQUlnRk5CRUJCNUpZRUtBSUFJUUFDUUNBQklBWnJJZ0pCRUU4RVFFSFlsZ1FnQWpZQ0FFSGtsZ1FnQUNBR2FpSUROZ0lBSUFNZ0FrRUJjallDQkNBQUlBRnFJQUkyQWdBZ0FDQUdRUU55TmdJRURBRUxRZVNXQkVFQU5nSUFRZGlXQkVFQU5nSUFJQUFnQVVFRGNqWUNCQ0FBSUFGcUlnRWdBU2dDQkVFQmNqWUNCQXNnQUVFSWFpRUFEQW9MSUFaQjNKWUVLQUlBSWdKSkJFQkIzSllFSUFJZ0Jtc2lBVFlDQUVIb2xnUkI2SllFS0FJQUlnQWdCbW9pQWpZQ0FDQUNJQUZCQVhJMkFnUWdBQ0FHUVFOeU5nSUVJQUJCQ0dvaEFBd0tDMEVBSVFBZ0JrRXZhaUlFQW45QnFKb0VLQUlBQkVCQnNKb0VLQUlBREFFTFFiU2FCRUovTndJQVFheWFCRUtBb0lDQWdJQUVOd0lBUWFpYUJDQUxRUXhxUVhCeFFkaXExYW9GY3pZQ0FFRzhtZ1JCQURZQ0FFR01tZ1JCQURZQ0FFR0FJQXNpQVdvaUJVRUFJQUZySWdoeElnRWdCazBOQ1VHSW1nUW9BZ0FpQXdSQVFZQ2FCQ2dDQUNJSElBRnFJZ2tnQjAwZ0F5QUpTWElOQ2d0QmpKb0VMUUFBUVFSeERRUUNRQUpBUWVpV0JDZ0NBQ0lEQkVCQmtKb0VJUUFEUUNBRElBQW9BZ0FpQjA4RVFDQUhJQUFvQWdScUlBTkxEUU1MSUFBb0FnZ2lBQTBBQ3d0QkFCQ0RBaUlDUVg5R0RRVWdBU0VGUWF5YUJDZ0NBQ0lBUVFGcklnTWdBbkVFUUNBQklBSnJJQUlnQTJwQkFDQUFhM0ZxSVFVTElBVWdCazBnQlVIKy8vLy9CMHR5RFFWQmlKb0VLQUlBSWdBRVFFR0FtZ1FvQWdBaUF5QUZhaUlJSUFOTklBQWdDRWx5RFFZTElBVVFnd0lpQUNBQ1J3MEJEQWNMSUFVZ0Ftc2dDSEVpQlVIKy8vLy9CMHNOQkNBRkVJTUNJZ0lnQUNnQ0FDQUFLQUlFYWtZTkF5QUNJUUFMSUFCQmYwWWdCa0V3YWlBRlRYSkZCRUJCc0pvRUtBSUFJZ0lnQkNBRmEycEJBQ0FDYTNFaUFrSCsvLy8vQjBzRVFDQUFJUUlNQndzZ0FoQ0RBa0YvUndSQUlBSWdCV29oQlNBQUlRSU1Cd3RCQUNBRmF4Q0RBaG9NQkFzZ0FDSUNRWDlIRFFVTUF3dEJBQ0VEREFjTFFRQWhBZ3dGQ3lBQ1FYOUhEUUlMUVl5YUJFR01tZ1FvQWdCQkJISTJBZ0FMSUFGQi92Ly8vd2RMRFFFZ0FSQ0RBaUlDUVg5R1FRQVFnd0lpQUVGL1JuSWdBQ0FDVFhJTkFTQUFJQUpySWdVZ0JrRW9hazBOQVF0QmdKb0VRWUNhQkNnQ0FDQUZhaUlBTmdJQVFZU2FCQ2dDQUNBQVNRUkFRWVNhQkNBQU5nSUFDd0pBQWtBQ1FFSG9sZ1FvQWdBaUJBUkFRWkNhQkNFQUEwQWdBaUFBS0FJQUlnRWdBQ2dDQkNJRGFrWU5BaUFBS0FJSUlnQU5BQXNNQWd0QjRKWUVLQUlBSWdCQkFDQUFJQUpORzBVRVFFSGdsZ1FnQWpZQ0FBdEJBQ0VBUVpTYUJDQUZOZ0lBUVpDYUJDQUNOZ0lBUWZDV0JFRi9OZ0lBUWZTV0JFR29tZ1FvQWdBMkFnQkJuSm9FUVFBMkFnQURRQ0FBUVFOMElnRkJnSmNFYWlBQlFmaVdCR29pQXpZQ0FDQUJRWVNYQkdvZ0F6WUNBQ0FBUVFGcUlnQkJJRWNOQUF0QjNKWUVJQVZCS0dzaUFFRjRJQUpyUVFkeFFRQWdBa0VJYWtFSGNSc2lBV3NpQXpZQ0FFSG9sZ1FnQVNBQ2FpSUJOZ0lBSUFFZ0EwRUJjallDQkNBQUlBSnFRU2cyQWdSQjdKWUVRYmlhQkNnQ0FEWUNBQXdDQ3lBQUxRQU1RUWh4SUFFZ0JFdHlJQUlnQkUxeURRQWdBQ0FESUFWcU5nSUVRZWlXQkNBRVFYZ2dCR3RCQjNGQkFDQUVRUWhxUVFkeEd5SUFhaUlCTmdJQVFkeVdCRUhjbGdRb0FnQWdCV29pQWlBQWF5SUFOZ0lBSUFFZ0FFRUJjallDQkNBQ0lBUnFRU2cyQWdSQjdKWUVRYmlhQkNnQ0FEWUNBQXdCQzBIZ2xnUW9BZ0FnQWtzRVFFSGdsZ1FnQWpZQ0FBc2dBaUFGYWlFQlFaQ2FCQ0VBQWtBQ1FBSkFBa0FDUUFKQUEwQWdBU0FBS0FJQVJ3UkFJQUFvQWdnaUFBMEJEQUlMQ3lBQUxRQU1RUWh4UlEwQkMwR1FtZ1FoQUFOQUlBUWdBQ2dDQUNJQlR3UkFJQUVnQUNnQ0JHb2lBeUFFU3cwREN5QUFLQUlJSVFBTUFBc0FDeUFBSUFJMkFnQWdBQ0FBS0FJRUlBVnFOZ0lFSUFKQmVDQUNhMEVIY1VFQUlBSkJDR3BCQjNFYmFpSUhJQVpCQTNJMkFnUWdBVUY0SUFGclFRZHhRUUFnQVVFSWFrRUhjUnRxSWdVZ0JpQUhhaUlHYXlFQUlBUWdCVVlFUUVIb2xnUWdCallDQUVIY2xnUkIzSllFS0FJQUlBQnFJZ0EyQWdBZ0JpQUFRUUZ5TmdJRURBTUxRZVNXQkNnQ0FDQUZSZ1JBUWVTV0JDQUdOZ0lBUWRpV0JFSFlsZ1FvQWdBZ0FHb2lBRFlDQUNBR0lBQkJBWEkyQWdRZ0FDQUdhaUFBTmdJQURBTUxJQVVvQWdRaUJFRURjVUVCUmdSQUlBUkJlSEVoQ1FKQUlBUkIvd0ZOQkVBZ0JTZ0NDQ0lCSUFSQkEzWWlBMEVEZEVINGxnUnFSaG9nQVNBRktBSU1JZ0pHQkVCQjBKWUVRZENXQkNnQ0FFRitJQU4zY1RZQ0FBd0NDeUFCSUFJMkFnd2dBaUFCTmdJSURBRUxJQVVvQWhnaENBSkFJQVVnQlNnQ0RDSUNSd1JBSUFVb0FnZ2lBU0FDTmdJTUlBSWdBVFlDQ0F3QkN3SkFJQVZCRkdvaUJDZ0NBQ0lCRFFBZ0JVRVFhaUlFS0FJQUlnRU5BRUVBSVFJTUFRc0RRQ0FFSVFNZ0FTSUNRUlJxSWdRb0FnQWlBUTBBSUFKQkVHb2hCQ0FDS0FJUUlnRU5BQXNnQTBFQU5nSUFDeUFJUlEwQUFrQWdCU2dDSENJQlFRSjBRWUNaQkdvaUF5Z0NBQ0FGUmdSQUlBTWdBallDQUNBQ0RRRkIxSllFUWRTV0JDZ0NBRUYrSUFGM2NUWUNBQXdDQ3lBSVFSQkJGQ0FJS0FJUUlBVkdHMm9nQWpZQ0FDQUNSUTBCQ3lBQ0lBZzJBaGdnQlNnQ0VDSUJCRUFnQWlBQk5nSVFJQUVnQWpZQ0dBc2dCU2dDRkNJQlJRMEFJQUlnQVRZQ0ZDQUJJQUkyQWhnTElBVWdDV29pQlNnQ0JDRUVJQUFnQ1dvaEFBc2dCU0FFUVg1eE5nSUVJQVlnQUVFQmNqWUNCQ0FBSUFacUlBQTJBZ0FnQUVIL0FVMEVRQ0FBUVhoeFFmaVdCR29oQVFKL1FkQ1dCQ2dDQUNJQ1FRRWdBRUVEZG5RaUFIRkZCRUJCMEpZRUlBQWdBbkkyQWdBZ0FRd0JDeUFCS0FJSUN5RUFJQUVnQmpZQ0NDQUFJQVkyQWd3Z0JpQUJOZ0lNSUFZZ0FEWUNDQXdEQzBFZklRUWdBRUgvLy84SFRRUkFJQUJCQ0hZaUFTQUJRWUQrUDJwQkVIWkJDSEVpQVhRaUFpQUNRWURnSDJwQkVIWkJCSEVpQW5RaUF5QURRWUNBRDJwQkVIWkJBbkVpQTNSQkQzWWdBU0FDY2lBRGNtc2lBVUVCZENBQUlBRkJGV3AyUVFGeGNrRWNhaUVFQ3lBR0lBUTJBaHdnQmtJQU53SVFJQVJCQW5SQmdKa0VhaUVCQWtCQjFKWUVLQUlBSWdKQkFTQUVkQ0lEY1VVRVFFSFVsZ1FnQWlBRGNqWUNBQ0FCSUFZMkFnQU1BUXNnQUVFQVFSa2dCRUVCZG1zZ0JFRWZSaHQwSVFRZ0FTZ0NBQ0VDQTBBZ0FpSUJLQUlFUVhoeElBQkdEUU1nQkVFZGRpRUNJQVJCQVhRaEJDQUJJQUpCQkhGcUlnTW9BaEFpQWcwQUN5QURJQVkyQWhBTElBWWdBVFlDR0NBR0lBWTJBZ3dnQmlBR05nSUlEQUlMUWR5V0JDQUZRU2hySWdCQmVDQUNhMEVIY1VFQUlBSkJDR3BCQjNFYklnRnJJZ2cyQWdCQjZKWUVJQUVnQW1vaUFUWUNBQ0FCSUFoQkFYSTJBZ1FnQUNBQ2FrRW9OZ0lFUWV5V0JFRzRtZ1FvQWdBMkFnQWdCQ0FEUVNjZ0EydEJCM0ZCQUNBRFFTZHJRUWR4RzJwQkwyc2lBQ0FBSUFSQkVHcEpHeUlCUVJzMkFnUWdBVUdZbWdRcEFnQTNBaEFnQVVHUW1nUXBBZ0EzQWdoQm1Kb0VJQUZCQ0dvMkFnQkJsSm9FSUFVMkFnQkJrSm9FSUFJMkFnQkJuSm9FUVFBMkFnQWdBVUVZYWlFQUEwQWdBRUVITmdJRUlBQkJDR29oQWlBQVFRUnFJUUFnQWlBRFNRMEFDeUFCSUFSR0RRTWdBU0FCS0FJRVFYNXhOZ0lFSUFRZ0FTQUVheUlDUVFGeU5nSUVJQUVnQWpZQ0FDQUNRZjhCVFFSQUlBSkJlSEZCK0pZRWFpRUFBbjlCMEpZRUtBSUFJZ0ZCQVNBQ1FRTjJkQ0lDY1VVRVFFSFFsZ1FnQVNBQ2NqWUNBQ0FBREFFTElBQW9BZ2dMSVFFZ0FDQUVOZ0lJSUFFZ0JEWUNEQ0FFSUFBMkFnd2dCQ0FCTmdJSURBUUxRUjhoQUNBQ1FmLy8vd2ROQkVBZ0FrRUlkaUlBSUFCQmdQNC9ha0VRZGtFSWNTSUFkQ0lCSUFGQmdPQWZha0VRZGtFRWNTSUJkQ0lESUFOQmdJQVBha0VRZGtFQ2NTSURkRUVQZGlBQUlBRnlJQU55YXlJQVFRRjBJQUlnQUVFVmFuWkJBWEZ5UVJ4cUlRQUxJQVFnQURZQ0hDQUVRZ0EzQWhBZ0FFRUNkRUdBbVFScUlRRUNRRUhVbGdRb0FnQWlBMEVCSUFCMElnVnhSUVJBUWRTV0JDQURJQVZ5TmdJQUlBRWdCRFlDQUF3QkN5QUNRUUJCR1NBQVFRRjJheUFBUVI5R0czUWhBQ0FCS0FJQUlRTURRQ0FESWdFb0FnUkJlSEVnQWtZTkJDQUFRUjEySVFNZ0FFRUJkQ0VBSUFFZ0EwRUVjV29pQlNnQ0VDSUREUUFMSUFVZ0JEWUNFQXNnQkNBQk5nSVlJQVFnQkRZQ0RDQUVJQVEyQWdnTUF3c2dBU2dDQ0NJQUlBWTJBZ3dnQVNBR05nSUlJQVpCQURZQ0dDQUdJQUUyQWd3Z0JpQUFOZ0lJQ3lBSFFRaHFJUUFNQlFzZ0FTZ0NDQ0lBSUFRMkFnd2dBU0FFTmdJSUlBUkJBRFlDR0NBRUlBRTJBZ3dnQkNBQU5nSUlDMEhjbGdRb0FnQWlBQ0FHVFEwQVFkeVdCQ0FBSUFacklnRTJBZ0JCNkpZRVFlaVdCQ2dDQUNJQUlBWnFJZ0kyQWdBZ0FpQUJRUUZ5TmdJRUlBQWdCa0VEY2pZQ0JDQUFRUWhxSVFBTUF3dEJ0SXdFUVRBMkFnQkJBQ0VBREFJTEFrQWdCMFVOQUFKQUlBTW9BaHdpQUVFQ2RFR0FtUVJxSWdFb0FnQWdBMFlFUUNBQklBSTJBZ0FnQWcwQlFkU1dCQ0FJUVg0Z0FIZHhJZ2cyQWdBTUFnc2dCMEVRUVJRZ0J5Z0NFQ0FEUmh0cUlBSTJBZ0FnQWtVTkFRc2dBaUFITmdJWUlBTW9BaEFpQUFSQUlBSWdBRFlDRUNBQUlBSTJBaGdMSUFNb0FoUWlBRVVOQUNBQ0lBQTJBaFFnQUNBQ05nSVlDd0pBSUFSQkQwMEVRQ0FESUFRZ0Jtb2lBRUVEY2pZQ0JDQUFJQU5xSWdBZ0FDZ0NCRUVCY2pZQ0JBd0JDeUFESUFaQkEzSTJBZ1FnQXlBR2FpSUNJQVJCQVhJMkFnUWdBaUFFYWlBRU5nSUFJQVJCL3dGTkJFQWdCRUY0Y1VINGxnUnFJUUFDZjBIUWxnUW9BZ0FpQVVFQklBUkJBM1owSWdSeFJRUkFRZENXQkNBQklBUnlOZ0lBSUFBTUFRc2dBQ2dDQ0FzaEFTQUFJQUkyQWdnZ0FTQUNOZ0lNSUFJZ0FEWUNEQ0FDSUFFMkFnZ01BUXRCSHlFQUlBUkIvLy8vQjAwRVFDQUVRUWgySWdBZ0FFR0EvajlxUVJCMlFRaHhJZ0IwSWdFZ0FVR0E0QjlxUVJCMlFRUnhJZ0YwSWdVZ0JVR0FnQTlxUVJCMlFRSnhJZ1YwUVE5MklBQWdBWElnQlhKcklnQkJBWFFnQkNBQVFSVnFka0VCY1hKQkhHb2hBQXNnQWlBQU5nSWNJQUpDQURjQ0VDQUFRUUowUVlDWkJHb2hBUUpBQWtBZ0NFRUJJQUIwSWdWeFJRUkFRZFNXQkNBRklBaHlOZ0lBSUFFZ0FqWUNBQXdCQ3lBRVFRQkJHU0FBUVFGMmF5QUFRUjlHRzNRaEFDQUJLQUlBSVFZRFFDQUdJZ0VvQWdSQmVIRWdCRVlOQWlBQVFSMTJJUVVnQUVFQmRDRUFJQUVnQlVFRWNXb2lCU2dDRUNJR0RRQUxJQVVnQWpZQ0VBc2dBaUFCTmdJWUlBSWdBallDRENBQ0lBSTJBZ2dNQVFzZ0FTZ0NDQ0lBSUFJMkFnd2dBU0FDTmdJSUlBSkJBRFlDR0NBQ0lBRTJBZ3dnQWlBQU5nSUlDeUFEUVFocUlRQU1BUXNDUUNBSlJRMEFBa0FnQWlnQ0hDSUFRUUowUVlDWkJHb2lBU2dDQUNBQ1JnUkFJQUVnQXpZQ0FDQUREUUZCMUpZRUlBcEJmaUFBZDNFMkFnQU1BZ3NnQ1VFUVFSUWdDU2dDRUNBQ1JodHFJQU0yQWdBZ0EwVU5BUXNnQXlBSk5nSVlJQUlvQWhBaUFBUkFJQU1nQURZQ0VDQUFJQU0yQWhnTElBSW9BaFFpQUVVTkFDQURJQUEyQWhRZ0FDQUROZ0lZQ3dKQUlBUkJEMDBFUUNBQ0lBUWdCbW9pQUVFRGNqWUNCQ0FBSUFKcUlnQWdBQ2dDQkVFQmNqWUNCQXdCQ3lBQ0lBWkJBM0kyQWdRZ0FpQUdhaUlESUFSQkFYSTJBZ1FnQXlBRWFpQUVOZ0lBSUFjRVFDQUhRWGh4UWZpV0JHb2hBRUhrbGdRb0FnQWhBUUovUVFFZ0IwRURkblFpQmlBRmNVVUVRRUhRbGdRZ0JTQUdjallDQUNBQURBRUxJQUFvQWdnTElRVWdBQ0FCTmdJSUlBVWdBVFlDRENBQklBQTJBZ3dnQVNBRk5nSUlDMEhrbGdRZ0F6WUNBRUhZbGdRZ0JEWUNBQXNnQWtFSWFpRUFDeUFMUVJCcUpBQWdBQXNwQVFGL0lBSUVRQ0FBSVFNRFFDQURJQUU2QUFBZ0EwRUJhaUVESUFKQkFXc2lBZzBBQ3dzZ0FBdlNBd0VGZnlNQVFSQnJJZ0FrQUFKQUlBSkZEUUJCME9JREtBSUFJQUZLRFFBZ0FpMEFBRVVOQUNBQUlBTTJBZ3dqQUVFUWF5SUZKQUFnQlNBRE5nSU1Ba0FnQWtVTkFFSFE0Z01vQWdBZ0FVb05BQ0FDTFFBQVJRMEFJQVVnQlNnQ0RDSUROZ0lJUVFCQkFDQUNJQU1RaEFJaUJrVU5BQ0FCUVFOTkJFQWdBVUVDZEVIZ253RnFLQUlBRUo0QlFRTnFJUVFMSUFRZ0Jtb2lCMEVCYWlJSUVEY2hBeUFFQkVBZ0JTQUJRUUowUWVDZkFXb29BZ0EyQWdBZ0F5QUVRUUZxUWI4aUlBVVEzZ01hQ3lBRElBUnFJQVpCQVdvZ0FpQUZLQUlNRUlRQ0dnSkFBa0JCNElvRUtBSUFJZ0VFUUVIa2lnUW9BZ0JGRFFGQjZJb0VLQUlBUWJpTkJFY0VRRUhzaWdRb0FnQWlCRVVOQTBIMGlnUW9BZ0FpQVVHQUlFRUFRZkNLQkMwQUFCc2lBazhOQXlBQklBUnFJUVFnQWlBQmEwRUVheUFIVHdSQUlBUWdBeUFJRU4wREdrSDBpZ1FnQVNBSGFqWUNBQXdFQ3lBRVFhN2N1QUUyQUFCQjlJb0VJQUkyQWdBTUF3dEI5SW9FS0FJQVJRMEJRZXlLQkNnQ0FDQUJFUUVBUWZTS0JFRUFOZ0lBUWVDS0JDZ0NBQ0VCREFFTFFlRGhBaWdDQUNFQklBTkJBU0FERUo0QklBRVF6QUVhREFFTElBTWdBUkVCQUFzZ0F4QXhDeUFGUVJCcUpBQUxJQUJCRUdva0FBc05BQ0FBS0FJQUlBRkJBblJxQzhrRUFRZC9Ba0FnQUNnQzFBTWlCQ2dDRUNJQ1FZQ0FBazRFUUNBRUtBSVVJUU1NQVFzZ0JDZ0NGQ0VEQTBBZ0JDQURRUUZySWdJMkFoUUNRQ0FEUVFCS0JFQWdBaUVEREFFTFFRQWhCU0FBS0FLNEEwVUVRQUpBSUFBb0FoZ2lBaWdDQkEwQUlBQWdBaWdDREJFQUFBMEFJQUFvQWdBaUEwRVpOZ0lVSUFBZ0F5Z0NBQkVCQUFzZ0FpQUNLQUlFUVFGck5nSUVJQUlnQWlnQ0FDSUNRUUZxTmdJQUFrQWdBaTBBQUNJRlFmOEJSdzBBQTBBQ1FDQUFLQUlZSWdJb0FnUU5BQ0FBSUFJb0Fnd1JBQUFOQUNBQUtBSUFJZ05CR1RZQ0ZDQUFJQU1vQWdBUkFRQUxJQUlnQWlnQ0JFRUJhellDQkNBQ0lBSW9BZ0FpQWtFQmFqWUNBRUgvQVNFRklBSXRBQUFpQWtIL0FVWU5BQXNnQWtVTkFDQUFJQUkyQXJnRFFRQWhCUXNnQkNnQ0ZDRUNDeUFFSUFKQkNHb2lBellDRkNBRUlBUW9BZ3hCQ0hRZ0JYSTJBZ3dnQWtGM1NnMEFJQVFnQWtFSmFpSUROZ0lVSUFNTkFDQUVRWUNBQWpZQ0VFRUFJUU1MSUFRZ0JDZ0NFRUVCZENJQ05nSVFJQUpCZ0lBQ1NBMEFDd3NnQkNBQ0lBRXRBQUFpQUVIL0FIRkJBblJCb0o4Q2FpZ0NBQ0lGUVJCMUlnWnJJZ0kyQWhBZ0JVRUlkU0VIQWtBZ0JDZ0NEQ0lJSUFJZ0EzUWlBMDRFUUNBRUlBWTJBaEFnQkNBSUlBTnJOZ0lNSUFCQmdBRnhJUU1nQWlBR1NBUkFJQUVnQXlBSGN6b0FBQXdDQ3lBQklBTWdCWE02QUFBZ0FFR0FBWE1oQUF3QkN5QUNRZi8vQVVzTkFDQUFRWUFCY1NFRElBSWdCa2dFUUNBQklBTWdCWE02QUFBZ0FFR0FBWE1oQUF3QkN5QUJJQU1nQjNNNkFBQUxJQUJCQjNZTEJ3QWdBRUVNYWdzU0FDQUFFSkVCQkVBZ0FDZ0NBQThMSUFBTE13RUJmeUFDQkVBZ0FDRURBMEFnQXlBQkxRQUFPZ0FBSUFOQkFXb2hBeUFCUVFGcUlRRWdBa0VCYXlJQ0RRQUxDeUFBQzVFQkFRUi9Ba0FnQVNBQUVEVWlBa3NFUUNNQVFSQnJJZ1FrQUNBQklBSnJJZ0lFUUNBQUVFOGhBeUFBRURVaUFTQUNhaUVGSUFJZ0F5QUJhMHNFUUNBQUlBTWdCU0FEYXlBQklBRVF0d1FMSUFFZ0FCQTlJZ05xSUFKQkFCQ0FCeUFBSUFVUWx3SWdCRUVBT2dBUElBTWdCV29nQkVFUGFoQ0xBUXNnQkVFUWFpUUFEQUVMSUFBZ0FCQTlJQUVRaEFjTEN3a0FJQUFRUFNBQmFnc1FBQ0FBS0FJRUlBQW9BZ0JyUVFOMUN4QUFJQUFvQWdRZ0FDZ0NBR3RCQW5VTEd3RUJmeU1BUVJCcklnRWtBQ0FBRU5NSElBRkJFR29rQUNBQUN4SUFJQUFFUUNBQUtBSUFFREVnQUJBeEN3c2NBUUYvSUFBb0FnQWhBaUFBSUFFb0FnQTJBZ0FnQVNBQ05nSUFDd3NBSUFBb0FnQVEzQUlhQzY0SEFnWi9CSDBDZlNBQUtBSVlJUWdnQUNnQ0JDRUZJQUFvQWdnaEJDQUFLQUlNSVFjQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBbjhnQVl0REFBQUFUMTBFUUNBQnFBd0JDMEdBZ0lDQWVBc0NmeUFCamlJSmkwTUFBQUJQWFFSQUlBbW9EQUVMUVlDQWdJQjRDeUlBUmdSQUFuOGdBb3REQUFBQVQxMEVRQ0FDcUF3QkMwR0FnSUNBZUFzaEJpQUdBbjhnQW80aUNZdERBQUFBVDEwRVFDQUpxQXdCQzBHQWdJQ0FlQXNpQTBjTkFTQURRUUJJSUFNZ0JFOXlEUUlnQkNBRFFRRnFJZ1pORFFNZ0FFRUFTQ0FBSUFWUGNnMEVJQVVnQUVFQmFpSUVUUTBGSUFTeUlBR1RJZ29nQnJJZ0FwTWlDNVFpQ1VNQUFBQUFZRVVnQ2J0RWNheUwyMmdBOEQ5bFJYSU5CaUFCSUFDeWt5SU1JQXVVSWdGREFBQUFBR0JGSUFHN1JIR3NpOXRvQVBBL1pVVnlEUWNnQ2lBQ0lBT3lreUlLbENJQ1F3QUFBQUJnUlNBQ3UwUnhySXZiYUFEd1AyVkZjZzBJSUF3Z0NwUWlDa01BQUFBQVlFVWdDcnRFY2F5TDIyZ0E4RDlsUlhJTkNTQUtJQUlnQ1NBQmtwS1N1MFJ4ckl2YmFBRHdQMlZGRFFvZ0NpQUlJQU1nQjJ4cUlnTWdCMm9pQlNBRVFRSjBJZ1JxS2dJQWxDQUNJQVVnQUVFQ2RDSUFhaW9DQUpRZ0NTQUFJQU5xS2dJQWxDQUJJQU1nQkdvcUFnQ1VrcEtTREF3TFFiQ2xCRUc4d2dFUU1FSHd3Z0VRTUVHeEdSQXdRY1VBRUROQjJoMFFNRUgzd3dFUU1CQTBEQW9MUWJDbEJFR1Z4QUVRTUVId3dnRVFNRUd4R1JBd1FjWUFFRE5CMmgwUU1FSDN3d0VRTUJBMERBa0xRYkNsQkVISnhBRVFNRUh3d2dFUU1FR3hHUkF3UWM4QUVETkIyaDBRTUVIM3hBRVFNQkEwREFnTFFiQ2xCRUdJeFFFUU1FSHd3Z0VRTUVHeEdSQXdRZEFBRUROQjJoMFFNRUhFeFFFUU1CQTBEQWNMUWJDbEJFSGN4UUVRTUVId3dnRVFNRUd4R1JBd1FkRUFFRE5CMmgwUU1FR0p4Z0VRTUJBMERBWUxRYkNsQkVHYXhnRVFNRUh3d2dFUU1FR3hHUkF3UWRJQUVETkIyaDBRTUVIVnhnRVFNQkEwREFVTFFiQ2xCRUh0eGdFUU1FSHd3Z0VRTUVHeEdSQXdRZDRBRUROQjJoMFFNRUdjeHdFUU1CQTBEQVFMUWJDbEJFR3B4d0VRTUVId3dnRVFNRUd4R1JBd1FkOEFFRE5CMmgwUU1FR2N4d0VRTUJBMERBTUxRYkNsQkVIWXh3RVFNRUh3d2dFUU1FR3hHUkF3UWVBQUVETkIyaDBRTUVHY3h3RVFNQkEwREFJTFFiQ2xCRUdIeUFFUU1FSHd3Z0VRTUVHeEdSQXdRZUVBRUROQjJoMFFNRUdjeHdFUU1CQTBEQUVMUWJDbEJFRzJ5QUVRTUVId3dnRVFNRUd4R1JBd1FlSUFFRE5CMmgwUU1FR2N4d0VRTUJBMEN4QUFBQXNMSWdFQmZ5TUFRUkJySWdJa0FDQUFJQUVnQVJDZUFSRC9CaUFDUVJCcUpBQWdBQXNOQUNBQUtBSUFJQUZCQlhScUN5d0JBWDhqQUVFUWF5SUJKQUFnQUVJQU53SUFJQUZCQURZQ0RDQUFRUWhxRUtVQ0lBRkJFR29rQUNBQUMwVUFJQUVnQUNnQ0NFOEVRRUd3cFFSQis4QUJFREJCb01FQkVEQkJzUmtRTUVIOEFCQXpRZG9kRURCQitzRUJFREFRTkJBQUFBc2dBQ2dDR0NBQUtBSU1JQUZzYWdzTUFDQUFJQUZCSEdvUXZRUUwwd0VDQTM4Q2ZnSkFJQUFwQTNBaUJGQkZJQVFnQUNrRGVDQUFLQUlFSWdFZ0FDZ0NMQ0lDYTZ4OElnVlhjVVVFUUNBQUVJOERJZ05CQUU0TkFTQUFLQUlzSVFJZ0FDZ0NCQ0VCQ3lBQVFuODNBM0FnQUNBQk5nSm9JQUFnQlNBQ0lBRnJySHczQTNoQmZ3OExJQVZDQVh3aEJTQUFLQUlFSVFFZ0FDZ0NDQ0VDQWtBZ0FDa0RjQ0lFVUEwQUlBUWdCWDBpQkNBQ0lBRnJyRmtOQUNBQklBU25haUVDQ3lBQUlBSTJBbWdnQUNBRklBQW9BaXdpQUNBQmE2eDhOd040SUFBZ0FVOEVRQ0FCUVFGcklBTTZBQUFMSUFNTEJ3QWdBRUVFYWdzYkFRRi9RUW9oQVNBQUVKRUJCSDhnQUJEa0FVRUJhd1ZCQ2dzTERRQWdBQ2dDQUNBQlFRTjBhZ3ZsQVFFRmZ3SkFJQUVReXdRaEF5QURJQUFpQkJDK0JDSUFUUVJBSUFRUVBTSUZJUUlnQXlJQUJIOENRQ0FCSUFKR0RRQWdBaUFCYXlBQVFRSjBUd1JBSUFCRkRRRURRQ0FDSUFFb0FnQTJBZ0FnQWtFRWFpRUNJQUZCQkdvaEFTQUFRUUZySWdBTkFBc01BUXNnQUVVTkFBTkFJQUlnQUVFQmF5SUFRUUowSWdacUlBRWdCbW9vQWdBMkFnQWdBQTBBQ3d0QkFBVWdBZ3NhSXdCQkVHc2lBQ1FBSUFRZ0F4Q1hBaUFBUVFBMkFnd2dCU0FEUVFKMGFpQUFRUXhxRUtzQklBQkJFR29rQUF3QkN5QUVJQUFnQXlBQWF5QUVFRFVpQUVFQUlBQWdBeUFCRVA0R0N3dFRBUUovQWtBZ0FSQ2VBU0VDSUFJZ0FCQlBJZ05OQkVBZ0FCQTlJUU1nQWdSQUlBTWdBU0FDRU5BQ0N5QUFJQU1nQWhDRUJ3d0JDeUFBSUFNZ0FpQURheUFBRURVaUFFRUFJQUFnQWlBQkVMd0RDd3NRQUNBQUtBSUVJQUFvQWdCclFReHRDd1lBSUFBUU1RdGdBUUYvSXdCQkVHc2lCU1FBSUFBZ0F5QUVFUE1CSVFBZ0JVRU1haUFGUVFocUlBRWdBaUFERUo0RUlBVXFBZ2doQVNBQUlBVXFBZ3dnQUNnQ0JFRUNhN01RNndJZ0FTQUFLQUlJUVFKcnN4RHJBaEJISVFFZ0JVRVFhaVFBSUFFTENRQWdBQ0FBRU9zRkN6TUJBWDhnQUVFQklBQWJJUUFDUUFOQUlBQVFOeUlCRFFGQnFMc0VLQUlBSWdFRVFDQUJFUTRBREFFTEN4QUFBQXNnQVF0R0FDQUFJQUVxQWdnZ0FTb0NBQ0FDS2dJQWxDQUJLZ0lFSUFJcUFnU1VrcEk0QWdBZ0FDQUJLZ0lVSUFFcUFnd2dBaW9DQUpRZ0FTb0NFQ0FDS2dJRWxKS1NPQUlFQy9FQ0FRUi9RY3lzQkMwQUFBUkFRY2lzQkNnQ0FBOExJd0JCSUdzaUFpUUFBa0FDUUFOQUlBSkJDR29nQUVFQ2RHb0NmMEVCSUFCMFFmLy8vLzhIY1NJRFFRRnlSUVJBSUFCQkFuUW9BZ0FNQVFzZ0FFSExpZ0pCejVVQ0lBTWJFTThFQ3lJRE5nSUFJQU5CZjBZTkFTQUFRUUZxSWdCQkJrY05BQXRCQUJET0JFVUVRRUhJaVFNaEFTQUNRUWhxUWNpSkF4RDRBa1VOQWtIZ2lRTWhBU0FDUVFocVFlQ0pBeEQ0QWtVTkFrRUFJUUJCb0tzRUxRQUFSUVJBQTBBZ0FFRUNkRUh3cWdScUlBQkJ6NVVDRU04RU5nSUFJQUJCQVdvaUFFRUdSdzBBQzBHZ3F3UkJBVG9BQUVHSXF3UkI4S29FS0FJQU5nSUFDMEh3cWdRaEFTQUNRUWhxUWZDcUJCRDRBa1VOQWtHSXF3UWhBU0FDUVFocVFZaXJCQkQ0QWtVTkFrRVlFRGNpQVVVTkFRc2dBU0FDS1FNSU53SUFJQUVnQWlrREdEY0NFQ0FCSUFJcEF4QTNBZ2dNQVF0QkFDRUJDeUFDUVNCcUpBQWdBU0VBUWN5c0JFRUJPZ0FBUWNpc0JDQUFOZ0lBSUFBTHlRb0NCWDhQZmlNQVFlQUFheUlGSkFBZ0JFTC8vLy8vLy84L2d5RU1JQUlnQklWQ2dJQ0FnSUNBZ0lDQWY0TWhDaUFDUXYvLy8vLy8veitESWcxQ0lJZ2hEaUFFUWpDSXAwSC8vd0Z4SVFjQ1FBSkFJQUpDTUlpblFmLy9BWEVpQ1VILy93RnJRWUtBZms4RVFDQUhRZi8vQVd0QmdZQitTdzBCQ3lBQlVDQUNRdi8vLy8vLy8vLy8vd0NESWd0Q2dJQ0FnSUNBd1AvL0FGUWdDMEtBZ0lDQWdJREEvLzhBVVJ0RkJFQWdBa0tBZ0lDQWdJQWdoQ0VLREFJTElBTlFJQVJDLy8vLy8vLy8vLy8vQUlNaUFrS0FnSUNBZ0lEQS8vOEFWQ0FDUW9DQWdJQ0FnTUQvL3dCUkcwVUVRQ0FFUW9DQWdJQ0FnQ0NFSVFvZ0F5RUJEQUlMSUFFZ0MwS0FnSUNBZ0lEQS8vOEFoWVJRQkVBZ0FpQURoRkFFUUVLQWdJQ0FnSURnLy84QUlRcENBQ0VCREFNTElBcENnSUNBZ0lDQXdQLy9BSVFoQ2tJQUlRRU1BZ3NnQXlBQ1FvQ0FnSUNBZ01ELy93Q0ZoRkFFUUNBQklBdUVJUUpDQUNFQklBSlFCRUJDZ0lDQWdJQ0E0UC8vQUNFS0RBTUxJQXBDZ0lDQWdJQ0F3UC8vQUlRaENnd0NDeUFCSUF1RVVBUkFRZ0FoQVF3Q0N5QUNJQU9FVUFSQVFnQWhBUXdDQ3lBTFF2Ly8vLy8vL3o5WUJFQWdCVUhRQUdvZ0FTQU5JQUVnRFNBTlVDSUdHM2tnQmtFR2RLMThweUlHUVE5ckVJY0JRUkFnQm1zaEJpQUZLUU5ZSWcxQ0lJZ2hEaUFGS1FOUUlRRUxJQUpDLy8vLy8vLy9QMVlOQUNBRlFVQnJJQU1nRENBRElBd2dERkFpQ0J0NUlBaEJCblN0ZktjaUNFRVBheENIQVNBR0lBaHJRUkJxSVFZZ0JTa0RTQ0VNSUFVcEEwQWhBd3NnQTBJUGhpSUxRb0NBL3Y4UGd5SUNJQUZDSUlnaUJINGlFQ0FMUWlDSUloTWdBVUwvLy8vL0Q0TWlBWDU4SWc5Q0lJWWlFU0FCSUFKK2ZDSUxJQkZVclNBQ0lBMUMvLy8vL3crRElnMStJaFVnQkNBVGZud2lFU0FNUWcrR0loSWdBMEl4aUlSQy8vLy8vdytESWdNZ0FYNThJaFFnRHlBUVZLMUNJSVlnRDBJZ2lJUjhJZzhnQWlBT1FvQ0FCSVFpREg0aUZpQU5JQk4rZkNJT0lCSkNJSWhDZ0lDQWdBaUVJZ0lnQVg1OEloQWdBeUFFZm53aUVrSWdobndpRjN3aEFTQUhJQWxxSUFacVFmLy9BR3NoQmdKQUlBSWdCSDRpR0NBTUlCTitmQ0lFSUJoVXJTQUVJQVFnQXlBTmZud2lCRmF0ZkNBQ0lBeCtmQ0FFSUFRZ0VTQVZWSzBnRVNBVVZxMThmQ0lFVnExOElBTWdESDRpQXlBQ0lBMStmQ0lDSUFOVXJVSWdoaUFDUWlDSWhId2dCQ0FDUWlDR2ZDSUNJQVJVclh3Z0FpQUNJQkFnRWxhdElBNGdGbFN0SUE0Z0VGYXRmSHhDSUlZZ0VrSWdpSVI4SWdKV3JYd2dBaUFDSUE4Z0ZGU3RJQThnRjFhdGZId2lBbGF0ZkNJRVFvQ0FnSUNBZ01BQWcxQkZCRUFnQmtFQmFpRUdEQUVMSUF0Q1A0Z2hBeUFFUWdHR0lBSkNQNGlFSVFRZ0FrSUJoaUFCUWorSWhDRUNJQXRDQVlZaEN5QURJQUZDQVlhRUlRRUxJQVpCLy84QlRnUkFJQXBDZ0lDQWdJQ0F3UC8vQUlRaENrSUFJUUVNQVFzQ2ZpQUdRUUJNQkVCQkFTQUdheUlIUVlBQlR3UkFRZ0FoQVF3REN5QUZRVEJxSUFzZ0FTQUdRZjhBYWlJR0VJY0JJQVZCSUdvZ0FpQUVJQVlRaHdFZ0JVRVFhaUFMSUFFZ0J4Q0JBaUFGSUFJZ0JDQUhFSUVDSUFVcEF6QWdCU2tET0lSQ0FGS3RJQVVwQXlBZ0JTa0RFSVNFSVFzZ0JTa0RLQ0FGS1FNWWhDRUJJQVVwQXdBaEFpQUZLUU1JREFFTElBUkMvLy8vLy8vL1A0TWdCcTFDTUlhRUN5QUtoQ0VLSUF0UUlBRkNBRmtnQVVLQWdJQ0FnSUNBZ0lCL1VSdEZCRUFnQ2lBQ1FnRjhJZ0VnQWxTdGZDRUtEQUVMSUFzZ0FVS0FnSUNBZ0lDQWdJQi9oWVJRUlFSQUlBSWhBUXdCQ3lBS0lBSWdBa0lCZzN3aUFTQUNWSzE4SVFvTElBQWdBVGNEQUNBQUlBbzNBd2dnQlVIZ0FHb2tBQXNIQUNBQVFSQnFDeWdCQVg4Z0FTQUJRUUZySWdKeFJRUkFJQUFnQW5FUEN5QUFJQUZQQkg4Z0FDQUJjQVVnQUFzTG93RUJBMzhqQUVFZ2F5SUJKQUFnQVVFQU5nSU1JQUZCMUFJMkFnZ2dBU0FCS1FNSU53TUFJQUZCRUdvaUFpQUJLUUlBTndJRUlBSWdBRFlDQUNNQVFSQnJJZ01rQUNBQUtBSUFRWDlIQkVBZ0F5QURRUWhxSUFJUW1RWVFlU0VDQTBBZ0FDZ0NBRUVCUmcwQUN5QUFLQUlBUlFSQUlBQkJBVFlDQUNBQ0VKc0hJQUJCZnpZQ0FBc0xJQU5CRUdva0FDQUFLQUlFSVFBZ0FVRWdhaVFBSUFCQkFXc0xFZ0FnQUJDVUJpSUFRYUN3QXpZQ0FDQUFDNjhCQVFOL0lBTW9Ba3dhSUFFZ0Ftd2hCU0FESUFNb0FrZ2lCRUVCYXlBRWNqWUNTQ0FES0FJRUlnWWdBeWdDQ0NJRVJnUi9JQVVGSUFBZ0JpQUVJQVpySWdRZ0JTQUVJQVZKR3lJRUVENGFJQU1nQXlnQ0JDQUVhallDQkNBQUlBUnFJUUFnQlNBRWF3c2lCQVJBQTBBQ1FDQURFSkFEUlFSQUlBTWdBQ0FFSUFNb0FpQVJCQUFpQmcwQkN5QUZJQVJySUFGdUR3c2dBQ0FHYWlFQUlBUWdCbXNpQkEwQUN3c2dBa0VBSUFFYkN4QUFJQUJCc04wRElBRW9BZ0MzRUJVTHdnVUJDWDhqQUVFUWF5SUpKQUFnQVJDaEF5TUFRUkJySWdNa0FDQURJQUUyQWd3Z0NVRUlhaUFEUVF4cUVKOEJJUWNnQTBFUWFpUUFJQUJCQ0dvaUFCQkNJQUpOQkVBQ1FDQUFFRUlpQXlBQ1FRRnFJZ0ZKQkVBakFFRWdheUlLSkFBQ1FDQUJJQU5ySWdnZ0FCQXlLQUlBSUFBb0FnUnJRUUoxVFFSQUlBQWdDQkNoQnd3QkN5QUFFRnNoQ3lBS1FRaHFJUUVDZnlBQUVFSWdDR29oQlNNQVFSQnJJZ1FrQUNBRUlBVTJBZ3dnQlNBQUVJa0hJZ05OQkVBZ0FCREdBU0lGSUFOQkFYWkpCRUFnQkNBRlFRRjBOZ0lJSUFSQkNHb2dCRUVNYWhCdUtBSUFJUU1MSUFSQkVHb2tBQ0FEREFFTEVKWURBQXNoQXlBQUVFSWhCU01BUVJCcklnUWtBQ0FFUVFBMkFnd2dBVUVNYWlBTEVOQUJJQU1FUUNBQktBSVFJQU1RaUFjaEJnc2dBU0FHTmdJQUlBRWdCaUFGUVFKMGFpSUZOZ0lJSUFFZ0JUWUNCQ0FCRUR3Z0JpQURRUUowYWpZQ0FDQUVRUkJxSkFBakFFRVFheUlHSkFBZ0JpQUJRUWhxSUFnUXJBTWlCQ2dDQUNFREEwQWdCQ2dDQkNBRFJ3UkFJQUVvQWhBZ0JDZ0NBQkNIQnlBRUlBUW9BZ0JCQkdvaUF6WUNBQXdCQ3dzZ0JCQ3BBU0FHUVJCcUpBQWdBQkR1QWlBQUVGc2dBQ2dDQUNBQUtBSUVJQUZCQkdvaUF4Q1ZBaUFBSUFNUVJTQUFRUVJxSUFGQkNHb1FSU0FBRURJZ0FSQThFRVVnQVNBQktBSUVOZ0lBSUFBZ0FCQkNFTFFDSUFFb0FnUWhBd05BSUFNZ0FTZ0NDRWNFUUNBQktBSVFHaUFCSUFFb0FnaEJCR3MyQWdnTUFRc0xJQUVvQWdBRVFDQUJLQUlRSUFFb0FnQWdBUkROQmhDZUJ3c0xJQXBCSUdva0FBd0JDeUFCSUFOSkJFQWdBQ2dDQUNBQlFRSjBhaUVCSUFBUVFpRURJQUFnQVJDR0J5QUFJQU1RclFNTEN3c2dBQ0FDRURvb0FnQUVRQ0FBSUFJUU9pZ0NBQkRjQWhvTElBY1F0Z0VoQVNBQUlBSVFPaUFCTmdJQUlBY29BZ0FoQUNBSFFRQTJBZ0FnQUFSQUlBQVEzQUlhQ3lBSlFSQnFKQUFMdUFFQkFYMGdBaUFCRU9zRklRTWdBQ0FBS2dJQUlBTWdBU29DQUpTVE9BSUFJQUFnQUNvQ0JDQURJQUVxQWdTVWt6Z0NCQ0FBSUFBcUFnZ2dBeUFCS2dJSWxKTTRBZ2dnQUNBQUtnSU1JQU1nQVNvQ0RKU1RPQUlNSUFBZ0FDb0NFQ0FESUFFcUFoQ1VremdDRUNBQUlBQXFBaFFnQXlBQktnSVVsSk00QWhRZ0FDQUFLZ0lZSUFNZ0FTb0NHSlNUT0FJWUlBQWdBQ29DSENBRElBRXFBaHlVa3pnQ0hDQUFJQUFxQWlBZ0F5QUJLZ0lnbEpNNEFpQUxDQUFnQUVFQUVIc0xNZ0VCZnlNQVFSQnJJZ01rQUNBRElBRTJBZ3dnQUNBRFFReHFFSjhCSWdCQkJHb2dBaENmQVJvZ0EwRVFhaVFBSUFBTCtnSUJCbjhnQUNnQ0JDRUhJQUFvQWdBaEJnSkFBa0FnQUNnQ0VDSUZLQUs0QXdSQUlBWWhCQXdCQ3lBQ1FSaEtCRUFnQWlFSUlBWWhCQXdDQ3dOQUlBZEZCRUFnQlNBRktBSVlLQUlNRVFBQVJRUkFRUUFQQ3lBRktBSVlJZ1FvQWdRaEJ5QUVLQUlBSVFZTElBWkJBV29oQkNBSFFRRnJJUWNDUUNBR0xRQUFJZ2hCL3dGR0JFQURRQ0FIUlFSQUlBVWdCU2dDR0NnQ0RCRUFBRVVFUUVFQUR3c2dCU2dDR0NJRUtBSUVJUWNnQkNnQ0FDRUVDeUFIUVFGcklRY2dCQzBBQUNFR1FmOEJJUWdnQkVFQmFpRUVJQVpCL3dGR0RRQUxJQVlOQVFzZ0NDQUJRUWgwY2lFQklBSkJFVWdoQ1NBRUlRWWdBa0VJYWlJSUlRSWdDUTBCREFNTEN5QUZJQVkyQXJnREN5QUNJQU5PQkVBZ0FpRUlEQUVMSUFVb0F0UURLQUlvUlFSQUlBVW9BZ0FpQTBINEFEWUNGQ0FGUVg4Z0F5Z0NCQkVDQUNBRktBTFVBMEVCTmdJb0MwRVpJUWdnQVVFWklBSnJkQ0VCQ3lBQUlBZzJBZ3dnQUNBQk5nSUlJQUFnQnpZQ0JDQUFJQVEyQWdCQkFRc2xBUUovSXdCQkVHc2lBQ1FBSUFCQkNHb1Fod1FRZVNnQ0FDRUJJQUJCRUdva0FDQUJDd29BSUFBb0FnQVE0d1FMRUFBZ0FDZ0NBQkRwQkVFWWRFRVlkUXNOQUNBQUlBRnFRUUZySUFGdEN3MEFJQUFvQWdBZ0FVRVViR29MRHdBZ0FDZ0NBQ0FBS0FJRU5nSUVDd29BSUFBb0FnQkJDR29MQndBZ0FDQUFsQXNrQVFKL0l3QkJFR3NpQWlRQUlBQWdBUkQwQVNFRElBSkJFR29rQUNBQklBQWdBeHNMUkFBZ0FDQUJjeUlBSUFCQkFYWkIxYXJWcWdWeGF5SUFRUUoyUWJQbXpKa0RjU0FBUWJQbXpKa0RjV29pQUVFRWRpQUFha0dQbnJ6NEFIRkJnWUtFQ0d4QkdIWUxzZ0VCQlg4Q2Z5QUNRd0FBQUQrU0lnS0xRd0FBQUU5ZEJFQWdBcWdNQVF0QmdJQ0FnSGdMSVFVZ0FDZ0NGQ0VJUVg4aEJnSkFBbjhnQVVNQUFBQS9raUlCaTBNQUFBQlBYUVJBSUFHb0RBRUxRWUNBZ0lCNEN5QUFLQUlRYWlJSFFRQklEUUFnQnlBQUtBSUlJZ2xPRFFBZ0JTQUlhaUlGUVFCSURRQWdCU0FBS0FJTVRnMEFJQU1nQUNnQ0FDQUZJQWxzSUFkcVFRTjBhaUlBS2dJQU9BSUFJQVFnQUNvQ0JEZ0NBRUVBSVFZTElBWUxLUUVCZnlNQVFSQnJJZ0lrQUNBQ1FRaHFJQUFnQVJDYkJoQjVLQUlBSVFBZ0FrRVFhaVFBSUFBTExBRUJmeUFBRU80Q0lBQW9BZ0FFUUNBQUVPUUdJQUFRTWhvZ0FDZ0NBQ0VCSUFBUXhnRWFJQUVRTVFzTENRQWdBQ0FCRU9RRUN3a0FJQUFnQVJEcUJBc0ZBQkFBQUFzSkFDQUFJQUVRcUFFTHR3WUNDbjhCZlNNQVFTQnJJZ1FrQUNBRUlBQVEzZ0kyQWhBZ0JFRVlhaUVJSXdCQklHc2lBU1FBUVl5TEJCQThHaUFBS0FJQUlRVkJqSXNFRUpjQklRTWdBVUVBT2dBZkFrQUNRQ0FEUlEwQVFZeUxCQ0FGSUFNUVhDSUdFRG9vQWdBaUFrVU5BQU5BSUFJb0FnQWlBa1VOQVNBRklBSW9BZ1JIQkVBZ0FpZ0NCQ0FERUZ3Z0JrY05BZ3RCaklzRUVGc2dBa0VJYWlBQUVJMENSUTBBQ3d3QkN5TUFRUkJySWdra0FFR01pd1FRTWlFQUlBRkJFR3BCdUFRUVZ5QUpRUWhxSUFCQkFCQ3NBaENyQWlJQ0tBSUFRUWhxSVFBZ0JDZ0NFQ0VLSXdCQkVHc2lCeVFBSUFjZ0NqWUNDQ0FBSUFjb0FnZ29BZ0EyQWdBZ0FFRUlha0VBUWFnRUVEZ2lBRUlBTndMTUFTQUFRZ0EzQThBQklBQkMvdi8vL3c4M0E0QUNJQUJDZ0lDQWdJQ0FnSy9BQURjRCtBRWdBRUtBZ0lDQWdJQ0FwOEFBTndQd0FTQUFRZ0EzQXRRQklBQkIyQUpxRUk0Q0dpQUFRZndDYWhCS0dpQUFRUUkyQXFBRUlBQkJBRFlDbUFNZ0FFS0FnSUNBZ0lEUXg4QUFOd09RQXlBQVFxMkc4ZGl1M0kyTlB6Y0RpQU1nQjBFUWFpUUFJQUlRVGtFQk9nQUVJQUlvQWdBZ0JUWUNCQ0FDS0FJQVFRQTJBZ0FnQ1VFUWFpUUFRWXlMQkJBOEtBSUFJUUJCaklzRUVGc2hBZ0pBSUFNRVFDQUFRUUZxc3lBQ0tnSUFJQU96bEY1RkRRRUxJQUVnQXhDTUFrRUJjeUFEUVFGMGNqWUNEQ0FCQW45QmpJc0VFRHdvQWdCQkFXcXpRWXlMQkJCYktnSUFsWTBpQzBNQUFJQlBYU0FMUXdBQUFBQmdjUVJBSUF1cERBRUxRUUFMTmdJSVFZeUxCQ0FCUVF4cUlBRkJDR29RYmlnQ0FCQ3VBaUFGUVl5TEJCQ1hBU0lERUZ3aEJnc0NRRUdNaXdRZ0JoQTZLQUlBSWdCRkJFQWdBU2dDRUVHVWl3UW9BZ0EyQWdCQmxJc0VJQUVvQWhBMkFnQkJqSXNFSUFZUU9rR1Vpd1EyQWdBZ0FTZ0NFQ2dDQUVVTkFTQUJLQUlRSVFCQmpJc0VJQUVvQWhBb0FnQW9BZ1FnQXhCY0VEb2dBRFlDQUF3QkN5QUJLQUlRSUFBb0FnQTJBZ0FnQUNBQktBSVFOZ0lBQ3lBQlFSQnFJZ0FRdGdFaEFrR01pd1FRUENJRElBTW9BZ0JCQVdvMkFnQWdBVUVCT2dBZklBQVF2UVVMSUFnZ0FVRVFhaUFDRUhrZ0FVRWZhaEN0QWlBQlFTQnFKQUFnQ0JCc0lRQWdCRUVnYWlRQUlBQkJDR29MNWdJQ0JuOENmQ01BUVRCcklnRWtBQ01BUVJCcklnSWtBQ0FBS3dNQVJBQUFBQUFBQUFBQVprVUVRRUd3cFFSQml3b1FNRUhXRHhBd1FiRVpFREJCd3dBUU0wSGFIUkF3UWZrZ0VEQVFOQkFBQUFzZ0FoQ2dCU0FBSUFJb0FnaTNSSTN0dGFEM3hyQStvaUFDS1FNQXVhQTVBd2dnQWtFUWFpUUFFSm9HSVFNZ0FVRWdhaUlDRU9FRklBSVFQU0VFSUFCQkVHb2lCUkE5SVFZZ0FRSjhBa0FnQUNzREFDSUhSQUFBQUFBQUFBQUFaZ1JBSUFBckF3Z2lDRVFBQUFBQUFBQUFBR1pGRFFFZ0NDQUhvUXdDQzBHd3BRUkJpd29RTUVIV0R4QXdRYkVaRURCQjBBQVFNMEhhSFJBd1Fma2dFREFRTkJBQUFBdEJzS1VFUWVvb0VEQkIxZzhRTUVHeEdSQXdRZEVBRUROQjJoMFFNRUhNTEJBd0VEUVFBQUFMUkFBQUFBQUFRSTlBb2prREVDQUJJQVkyQWd3Z0FVSEYwd0UyQWdnZ0FTQUVOZ0lFSUFGQnpUczJBZ0FnQTBIQU1pQUJFTjRGSUFJUU5ob2dCUkEyR2lBQlFUQnFKQUFMQ3dBZ0FDQUJOZ0lBSUFBTExRQWdBa1VFUUNBQUtBSUVJQUVvQWdSR0R3c2dBQ0FCUmdSQVFRRVBDeUFBS0FJRUlBRW9BZ1FRb0FKRkN5TUJBWDhnQUNnQ0FDRUNJQUFnQVRZQ0FDQUNCRUFnQWlBQUVFNG9BZ0FSQVFBTEN3MEFJQUFvQWdBUTRnUWFJQUFMRFFBZ0FDZ0NBQkRvQkJvZ0FBc1FBQ0FBS0FJRUlBQW9BZ0JyUVJSdEN3d0FJQUFnQVJDb0FVRUJjd3NKQUNBQVFSQnFFSDRMRUFBZ0FDZ0NCQ0FBS0FJQWEwRWtiUXNSQUNBQUlBRWdBQ2dDQUNnQ0hCRURBQXQxQVFGK0lBQWdBU0FFZmlBQ0lBTitmQ0FEUWlDSUlnSWdBVUlnaUNJRWZud2dBMEwvLy8vL0Q0TWlBeUFCUXYvLy8vOFBneUlCZmlJRlFpQ0lJQU1nQkg1OElnTkNJSWg4SUFFZ0FuNGdBMEwvLy8vL0Q0TjhJZ0ZDSUloOE53TUlJQUFnQlVMLy8vLy9ENE1nQVVJZ2hvUTNBd0FMR0FBZ0FDMEFBRUVnY1VVRVFDQUJJQUlnQUJEaUF4b0xDd1FBUVFBTFdRRUNmeU1BUVJCcklnSWtBQ0FBRUpFQkJFQWdBQ2dDQUNFRElBQVE1QUVhSUFNUU1Rc2dBQ0FCS0FJSU5nSUlJQUFnQVNrQ0FEY0NBQ0FCUVFBUWtnRWdBa0VBT2dBUElBRWdBa0VQYWhDTEFTQUNRUkJxSkFBTFVBRUJmZ0pBSUFOQndBQnhCRUFnQVNBRFFVQnFyWVloQWtJQUlRRU1BUXNnQTBVTkFDQUNJQU90SWdTR0lBRkJ3QUFnQTJ1dGlJUWhBaUFCSUFTR0lRRUxJQUFnQVRjREFDQUFJQUkzQXdnTGJ3RUJmeU1BUVlBQ2F5SUZKQUFnQkVHQXdBUnhJQUlnQTB4eVJRUkFJQVVnQVVIL0FYRWdBaUFEYXlJRFFZQUNJQU5CZ0FKSklnRWJFRGdhSUFGRkJFQURRQ0FBSUFWQmdBSVFoQUVnQTBHQUFtc2lBMEgvQVVzTkFBc0xJQUFnQlNBREVJUUJDeUFGUVlBQ2FpUUFDd2tBSUFBZ0FUWUNCQXVoQVFFQ2Z3SkFJQUFRTlVVZ0FpQUJhMEVGU0hJTkFDQUJJQUlRd3dNZ0FrRUVheUVFSUFBUVBTSUNJQUFRTldvaEJRSkFBMEFDUUNBQ0xBQUFJUUFnQVNBRVR3MEFJQUJCQUV3Z0FFSC9BRTV5UlFSQUlBRW9BZ0FnQWl3QUFFY05Bd3NnQVVFRWFpRUJJQUlnQlNBQ2EwRUJTbW9oQWd3QkN3c2dBRUVBVENBQVFmOEFUbklOQVNBQ0xBQUFJQVFvQWdCQkFXdExEUUVMSUFOQkJEWUNBQXNMREFBZ0FDQUJMUUFBT2dBQUN3d0FJQUFnQVJEa0JFRUJjd3NNQUNBQUlBRVE2Z1JCQVhNTERRQWdBQ2dDQkNBQUtBSUFhd3RmQUNBQVFvQ0FnSUNBZ0lENHYzODNBd2dnQUVLQWdJQ0FnSUNBK0w5L053TUFJQUJCRUdvZ0FSQklHaU1BUVJCcklnRWtBQ0FCRUtBRklBQWdBU2dDQ0xkRWplMjFvUGZHc0Q2aUlBRXBBd0M1b0RrREFDQUJRUkJxSkFBZ0FBc3dBUUo5QW45QkFTQUJLZ0lBSWdJZ0FDb0NBQ0lEWFEwQUdrRUFJQUlnQTE0TkFCb2dBU2dDQkNBQUtBSUVTUXNMQ2dBZ0FDMEFDMEVIZGdzSkFDQUFJQUU2QUFzTERRQWdBQ2dDQUNBQlFReHNhZ3NMQUNBQVFleXNCQkRKQVF2SEJnSUtmd0Y5SXdCQklHc2lCQ1FBSUFSQkFUWUNHQ0FFSUFFMkFod2dBVUVBVGdSQUlBUWdBVFlDQ0NBRUlBQkIzQUJxSWdFZ0JFRUlhaUlBRUhFMkFoQWdCQkJtTmdJSUFrQWdCRUVRYWlBQUVIWUVRQ0FFUVFocUlnVWdCQ2dDSERZQ0FDQUZJQVFvQWhnMkFnUWpBRUVRYXlJR0pBQWdCa0VJYWlFS0l3QkJJR3NpQUNRQUlBRVFQQm9nQlNnQ0FDRUhJQUVRbHdFaEF5QUFRUUE2QUI4Q1FBSkFJQU5GRFFBZ0FTQUhJQU1RWENJSUVEb29BZ0FpQWtVTkFBTkFJQUlvQWdBaUFrVU5BU0FISUFJb0FnUkhCRUFnQWlnQ0JDQURFRndnQ0VjTkFnc2dBUkJiSUFKQkNHb2dCUkNOQWtVTkFBc01BUXNqQUVFUWF5SUpKQUFnQUVFUWFpQUJFRElpQWtFQkVPUUZJQWxCQ0dvZ0FrRUFFS3dDRUtzQ0lnSW9BZ0FpQzBFSWFpQUZLQUlBTmdJQUlBc2dCU2dDQkRZQ0RDQUNFRTVCQVRvQUJDQUNLQUlBSUFjMkFnUWdBaWdDQUVFQU5nSUFJQWxCRUdva0FDQUJFRHdvQWdBaEFpQUJFRnNoQlFKQUlBTUVRQ0FDUVFGcXN5QUZLZ0lBSUFPemxGNUZEUUVMSUFBZ0F4Q01Ba0VCY3lBRFFRRjBjallDRENBQUFuOGdBUkE4S0FJQVFRRnFzeUFCRUZzcUFnQ1ZqU0lNUXdBQWdFOWRJQXhEQUFBQUFHQnhCRUFnREtrTUFRdEJBQXMyQWdnZ0FTQUFRUXhxSUFCQkNHb1FiaWdDQUJDdUFpQUhJQUVRbHdFaUF4QmNJUWdMQWtBZ0FTQUlFRG9vQWdBaUFrVUVRQ0FBS0FJUUlBRkJDR29pQWlnQ0FEWUNBQ0FCSUFBb0FoQTJBZ2dnQVNBSUVEb2dBallDQUNBQUtBSVFLQUlBUlEwQklBQW9BaEFoQWlBQklBQW9BaEFvQWdBb0FnUWdBeEJjRURvZ0FqWUNBQXdCQ3lBQUtBSVFJQUlvQWdBMkFnQWdBaUFBS0FJUU5nSUFDeUFBUVJCcUlnTVF0Z0VoQWlBQkVEd2lBU0FCS0FJQVFRRnFOZ0lBSUFCQkFUb0FIeUFES0FJQUlRRWdBMEVBTmdJQUlBRUVRQ0FERUU0aUF5MEFCQVJBSUFNb0FnQWFDeUFCQkVBZ0F5Z0NBQm9nQVJBeEN3c0xJQW9nQUVFUWFpQUNFSGtnQUVFZmFoQ3RBaUFBUVNCcUpBQWdCQ0FHS0FJSUVIa2dCaTBBRERvQUJDQUdRUkJxSkFBTUFRc2dCRUVRYWhCc0lnQWdBQ2dDQkVFQmFqWUNCQXNnQkVFZ2FpUUFEd3RCc0tVRVFiTDhBQkF3UVlQNUFCQXdRYkVaRURCQm9nSVFNMEhhSFJBd1FaWCtBQkF3RURRUUFBQUxrUVFCQTM4Q1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FVRUFUZ1JBSUFBb0FqUWlCU0FCVEEwQklBSkJBRWdOQWlBQUtBSTRJZ1lnQWt3TkF5QURRUUJJRFFRZ0FDZ0NQQ0lISUFOTURRVWdCRUVBU0EwR0lBQW9Ba0FnQkV3TkJ5QUNJQVZzSUFGcUlnRWdBQ2dDVkNBRGJHb2dBQ2dDV0NBRWJHb2lBQ0FFSUFkc0lBTnFJQVVnQm14c0lBRnFTZzBJSUFBUEMwR3dwUVJCeFlBQkVEQkJnL2tBRURCQnNSa1FNRUdsQVJBelFkb2RFREJCaklJQkVEQVFOQXdJQzBHd3BRUkIrNE1CRURCQmcva0FFREJCc1JrUU1FR21BUkF6UWRvZEVEQkJqSUlCRURBUU5Bd0hDMEd3cFFSQnJvWUJFREJCZy9rQUVEQkJzUmtRTUVHbkFSQXpRZG9kRURCQjRvWUJFREFRTkF3R0MwR3dwUVJCOVlrQkVEQkJnL2tBRURCQnNSa1FNRUdvQVJBelFkb2RFREJCNG9ZQkVEQVFOQXdGQzBHd3BRUkI1NHNCRURCQmcva0FFREJCc1JrUU1FR3BBUkF6UWRvZEVEQkIvbzBCRURBUU5Bd0VDMEd3cFFSQjZZOEJFREJCZy9rQUVEQkJzUmtRTUVHcUFSQXpRZG9kRURCQi9vMEJFREFRTkF3REMwR3dwUVJCbFpJQkVEQkJnL2tBRURCQnNSa1FNRUdyQVJBelFkb2RFREJCbnBNQkVEQVFOQXdDQzBHd3BRUkI0cFFCRURCQmcva0FFREJCc1JrUU1FR3NBUkF6UWRvZEVEQkJucE1CRURBUU5Bd0JDMEd3cFFSQmxaZ0JFREJCZy9rQUVEQkJzUmtRTUVHd0FSQXpRZG9kRURCQmxmNEFFREFRTkFzUUFBQUxDUUFnQUJCT0tBSUFDd2tBSUFBZ0FUWUNBQXNMQUNBQVFmU3NCQkRKQVFzUkFDQUFJQUVnQVNnQ0FDZ0NGQkVDQUFzUEFDQUFJQUFvQWdBb0FoQVJBQUFMRVFBZ0FDQUJJQUFvQWdBb0Fpd1JBd0FMekFrQ0JINEVmeU1BUWZBQWF5SUtKQUFnQkVMLy8vLy8vLy8vLy84QWd5RUZBa0FDUUNBQlVDSUpJQUpDLy8vLy8vLy8vLy8vQUlNaUJrS0FnSUNBZ0lEQS8vOEFmVUtBZ0lDQWdJREFnSUIvVkNBR1VCdEZCRUFnQTBJQVVpQUZRb0NBZ0lDQWdNRC8vd0I5SWdoQ2dJQ0FnSUNBd0lDQWYxWWdDRUtBZ0lDQWdJREFnSUIvVVJzTkFRc2dDU0FHUW9DQWdJQ0FnTUQvL3dCVUlBWkNnSUNBZ0lDQXdQLy9BRkViUlFSQUlBSkNnSUNBZ0lDQUlJUWhCQ0FCSVFNTUFnc2dBMUFnQlVLQWdJQ0FnSURBLy84QVZDQUZRb0NBZ0lDQWdNRC8vd0JSRzBVRVFDQUVRb0NBZ0lDQWdDQ0VJUVFNQWdzZ0FTQUdRb0NBZ0lDQWdNRC8vd0NGaEZBRVFFS0FnSUNBZ0lEZy8vOEFJQUlnQVNBRGhTQUNJQVNGUW9DQWdJQ0FnSUNBZ0grRmhGQWlDUnNoQkVJQUlBRWdDUnNoQXd3Q0N5QURJQVZDZ0lDQWdJQ0F3UC8vQUlXRVVBMEJJQUVnQm9SUUJFQWdBeUFGaEVJQVVnMENJQUVnQTRNaEF5QUNJQVNESVFRTUFnc2dBeUFGaEZCRkRRQWdBU0VESUFJaEJBd0JDeUFESUFFZ0FTQURWQ0FGSUFaV0lBVWdCbEViSWd3YklRVWdCQ0FDSUF3YklnaEMvLy8vLy8vL1A0TWhCaUFDSUFRZ0RCc2lCMEl3aUtkQi8vOEJjU0VMSUFoQ01JaW5RZi8vQVhFaUNVVUVRQ0FLUWVBQWFpQUZJQVlnQlNBR0lBWlFJZ2tiZVNBSlFRWjByWHluSWdsQkQyc1Fod0VnQ2lrRGFDRUdJQW9wQTJBaEJVRVFJQWxySVFrTElBRWdBeUFNR3lFRElBZEMvLy8vLy8vL1A0TWhCQ0FMUlFSQUlBcEIwQUJxSUFNZ0JDQURJQVFnQkZBaUN4dDVJQXRCQm5TdGZLY2lDMEVQYXhDSEFVRVFJQXRySVFzZ0Npa0RXQ0VFSUFvcEExQWhBd3NnQkVJRGhpQURRajJJaEVLQWdJQ0FnSUNBQklRaEFpQUdRZ09HSUFWQ1BZaUVJUVFnQTBJRGhpRUJJQWNnQ0lVaEF3SkFJQWtnQzBZTkFDQUpJQXRySWd0Qi93QkxCRUJDQUNFQ1FnRWhBUXdCQ3lBS1FVQnJJQUVnQWtHQUFTQUxheENIQVNBS1FUQnFJQUVnQWlBTEVJRUNJQW9wQXpBZ0Npa0RRQ0FLS1FOSWhFSUFVcTJFSVFFZ0Npa0RPQ0VDQ3lBRVFvQ0FnSUNBZ0lBRWhDRUhJQVZDQTRZaEJnSkFJQU5DQUZNRVFFSUFJUU5DQUNFRUlBRWdCb1VnQWlBSGhZUlFEUUlnQmlBQmZTRUZJQWNnQW4wZ0FTQUdWcTE5SWdSQy8vLy8vLy8vL3dOV0RRRWdDa0VnYWlBRklBUWdCU0FFSUFSUUlnc2JlU0FMUVFaMHJYeW5RUXhySWdzUWh3RWdDU0FMYXlFSklBb3BBeWdoQkNBS0tRTWdJUVVNQVFzZ0FTQUdmQ0lGSUFGVXJTQUNJQWQ4ZkNJRVFvQ0FnSUNBZ0lBSWcxQU5BQ0FGUWdHRElBUkNQNFlnQlVJQmlJU0VJUVVnQ1VFQmFpRUpJQVJDQVlnaEJBc2dDRUtBZ0lDQWdJQ0FnSUIvZ3lFQklBbEIvLzhCVGdSQUlBRkNnSUNBZ0lDQXdQLy9BSVFoQkVJQUlRTU1BUXRCQUNFTEFrQWdDVUVBU2dSQUlBa2hDd3dCQ3lBS1FSQnFJQVVnQkNBSlFmOEFhaENIQVNBS0lBVWdCRUVCSUFsckVJRUNJQW9wQXdBZ0Npa0RFQ0FLS1FNWWhFSUFVcTJFSVFVZ0Npa0RDQ0VFQ3lBRVFqMkdJQVZDQTRpRUlnSWdCYWRCQjNFaUNVRUVTNjE4SWdNZ0FsU3RJQVJDQTRoQy8vLy8vLy8vUDRNZ0M2MUNNSWFFSUFHRWZDRUVBa0FnQ1VFRVJnUkFJQVFnQTBJQmd5SUJJQU44SWdNZ0FWU3RmQ0VFREFFTElBbEZEUUVMQ3lBQUlBTTNBd0FnQUNBRU53TUlJQXBCOEFCcUpBQUxhUUVEZndKQUlBQWlBVUVEY1FSQUEwQWdBUzBBQUVVTkFpQUJRUUZxSWdGQkEzRU5BQXNMQTBBZ0FTSUNRUVJxSVFFZ0FpZ0NBQ0lEUVg5eklBTkJnWUtFQ0d0eFFZQ0Jnb1I0Y1VVTkFBc0RRQ0FDSWdGQkFXb2hBaUFCTFFBQURRQUxDeUFCSUFCckN3NEFJQUFnQVNnQ0FEWUNBQ0FBQ3hFQUlBQWdBQ2dDQUVFSWFqWUNBQ0FBQ3cwQUlBQWdBNVFnQVNBQ2xKTUxEUUFnQUNnQ0FDQUJRU1JzYWdzUUFDQUFLQUlFSUFBb0FnQnJRUVYxQ3hJQUlBQVFNaWdDQUNBQUtBSUFhMEVNYlF0L0FnSi9BWDRqQUVFUWF5SURKQUFnQUFKK0lBRkZCRUJDQUF3QkN5QURJQUVnQVVFZmRTSUNjeUFDYXlJQ3JVSUFJQUpuSWdKQjBRQnFFSWNCSUFNcEF3aENnSUNBZ0lDQXdBQ0ZRWjZBQVNBQ2E2MUNNSVo4SUFGQmdJQ0FnSGh4clVJZ2hvUWhCQ0FES1FNQUN6Y0RBQ0FBSUFRM0F3Z2dBMEVRYWlRQUMwRUJBbjhDUUNBQ1JRMEFBMEFnQVNBRFFRTjBhaWdDQUNJRVJRMEJJQUFnQkVZRVFDQUJJQU5CQTNScUtBSUVEd3NnQTBFQmFpSURJQUpIRFFBTEMwRUFDekVCQW4wZ0FTb0NBQ0FBS2dJQUlnT1RJQUlxQWdRZ0FDb0NCQ0lFazVRZ0Fpb0NBQ0FEa3lBQktnSUVJQVNUbEpNTERRQWdBQ2dDQUNBQktBSUFSZ3NQQUNBQUtBSUlJQUFvQWdBMkFnQUx1QUlCQTM4akFFRkFhaUlESkFBZ0FDZ0NBQ0lGUVFScktBSUFJUVFnQlVFSWF5Z0NBQ0VGSUFOQ0FEY0RJQ0FEUWdBM0F5Z2dBMElBTndNd0lBTkNBRGNBTnlBRFFnQTNBeGdnQTBFQU5nSVVJQU1nQVRZQ0VDQURJQUEyQWd3Z0F5QUNOZ0lJSUFBZ0JXb2hBRUVBSVFFQ1FDQUVJQUpCQUJCNkJFQWdBMEVCTmdJNElBUWdBMEVJYWlBQUlBQkJBVUVBSUFRb0FnQW9BaFFSQ3dBZ0FFRUFJQU1vQWlCQkFVWWJJUUVNQVFzZ0JDQURRUWhxSUFCQkFVRUFJQVFvQWdBb0FoZ1JCZ0FDUUFKQUlBTW9BaXdPQWdBQkFnc2dBeWdDSEVFQUlBTW9BaWhCQVVZYlFRQWdBeWdDSkVFQlJodEJBQ0FES0FJd1FRRkdHeUVCREFFTElBTW9BaUJCQVVjRVFDQURLQUl3RFFFZ0F5Z0NKRUVCUncwQklBTW9BaWhCQVVjTkFRc2dBeWdDR0NFQkN5QURRVUJySkFBZ0FRc01BQ0FBSUFFb0FnQTJBZ0FMUlFFQmZ5TUFRUkJySWdVa0FDQUZJQUkyQWd3Z0JTQUVOZ0lJSUFVZ0JVRU1haERJQVNFQ0lBQWdBU0FESUFVb0FnZ1FoQUloQUNBQ0VNY0JJQVZCRUdva0FDQUFDeVlCQVg4akFFRVFheUlCSkFBZ0FVRUlhaUFBRUQwUWVTZ0NBQ0VBSUFGQkVHb2tBQ0FBQzIwQkFuOGdBQ2dDVEJvZ0FCRE5BaG9nQUNBQUtBSU1FUUFBR2lBQUxRQUFRUUZ4UlFSQUlBQW9BalFpQVFSQUlBRWdBQ2dDT0RZQ09Bc2dBQ2dDT0NJQ0JFQWdBaUFCTmdJMEN5QUFRYlNOQkNnQ0FFWUVRRUcwalFRZ0FqWUNBQXNnQUNnQ1lCQXhJQUFRTVFzTDNBRUJBWDBnQUNvQ0FDRUNJQUFnQVNvQ0FEZ0NBQ0FCSUFJNEFnQWdBQ29DQkNFQ0lBQWdBU29DQkRnQ0JDQUJJQUk0QWdRZ0FDb0NDQ0VDSUFBZ0FTb0NDRGdDQ0NBQklBSTRBZ2dnQUNvQ0RDRUNJQUFnQVNvQ0REZ0NEQ0FCSUFJNEFnd2dBQ29DRUNFQ0lBQWdBU29DRURnQ0VDQUJJQUk0QWhBZ0FDb0NGQ0VDSUFBZ0FTb0NGRGdDRkNBQklBSTRBaFFnQUNvQ0dDRUNJQUFnQVNvQ0dEZ0NHQ0FCSUFJNEFoZ2dBQ29DSENFQ0lBQWdBU29DSERnQ0hDQUJJQUk0QWh3Z0FDb0NJQ0VDSUFBZ0FTb0NJRGdDSUNBQklBSTRBaUFMQ2dCQmgrMEJFSmdDQUFzUUFDQUFJQUZCZ0lDQWdIaHlOZ0lJQ3hNQUlBQWdBU0FDSUFBb0FnQW9BZ3dSQkFBTEp3RUJmeUFDUVFCT0JIOGdBQ2dDQ0NBQ1FmOEJjVUVDZEdvb0FnQWdBWEZCQUVjRlFRQUxDeEFBSUFJRVFDQUFJQUVnQWhBK0dnc0xFQUFnQUNnQ0JDQUFLQUlBYTBFRWRRc1VBUUYvSUFBb0FnQWhBU0FBUVFBMkFnQWdBUXNMQUNBQUlBRkJBeER1QmdzSEFDQUFFRU1hQ3djQUlBQWdBVVlMRHdBZ0FDQUFLQUlBS0FJTUVRQUFDd2NBSUFBUU5VVUxFUUFnQUNBQklBRW9BZ0FvQWh3UkFnQUxFUUFnQUNBQklBRW9BZ0FvQWhnUkFnQUxDQUFnQUVIL0FYRUxRUUVCZnlBQUlBRTNBM0FnQUNBQUtBSXNJQUFvQWdRaUFtdXNOd040SUFBZ0FWQWdBQ2dDQ0NJQUlBSnJyQ0FCVjNJRWZ5QUFCU0FDSUFHbmFnczJBbWdMQ2dBZ0FFRXdhMEVLU1F0TEFRSjhJQUFnQUtJaUFTQUFvaUlDSUFFZ0FhS2lJQUZFcDBZN2pJZk54ajZpUkhUbnl1TDVBQ3Evb0tJZ0FpQUJSTEw3Ym9rUUVZRS9va1Izck10VVZWWEZ2NkNpSUFDZ29MWUxUd0VCZkNBQUlBQ2lJZ0FnQUNBQW9pSUJvaUFBUkdsUTd1QkNrL2srb2tRbkhnL29oOEJXdjZDaUlBRkVRam9GNFZOVnBUK2lJQUJFZ1Y0TS9mLy8zNytpUkFBQUFBQUFBUEEvb0tDZ3Rnc1pBQ0FBSUFGQjh0TUJRWVB0QTBIWTRnTkIxT0lERUswRUN4VUFJQUFnQVJDOUJpQUFRUVJxSUFGQkJHb1FSUXNTQUNBQUVESW9BZ0FnQUNnQ0FHdEJBM1VMRWdBZ0FCQXlLQUlBSUFBb0FnQnJRUUoxQ3hJQUlBQW9BZ0FpQUFSQUlBQVF5UVFhQ3dzUkFDQUFJQUVvQWdBUXlRUTJBZ0FnQUF0Q0FRRi9JQUFvQWdBaEFpQUJFRjBoQUNBQ1FRaHFJZ0VRUWlBQVN3Ui9JQUVnQUJBNktBSUFRUUJIQlVFQUMwVUVRQkIxQUFzZ0FrRUlhaUFBRURvb0FnQUxOZ0FnQWdSL0lBSUVRQU5BSUFBZ0FTZ0NBRFlDQUNBQVFRUnFJUUFnQVVFRWFpRUJJQUpCQVdzaUFnMEFDd3RCQUFVZ0FBc2FDL29CQWdOK0FuOGpBRUVRYXlJRkpBQUNmaUFCdlNJRFF2Ly8vLy8vLy8vLy93Q0RJZ0pDZ0lDQWdJQ0FnQWg5UXYvLy8vLy8vLy92L3dCWUJFQWdBa0k4aGlFRUlBSkNCSWhDZ0lDQWdJQ0FnSUE4ZkF3QkN5QUNRb0NBZ0lDQWdJRDQvd0JhQkVBZ0EwSThoaUVFSUFOQ0JJaENnSUNBZ0lDQXdQLy9BSVFNQVFzZ0FsQUVRRUlBREFFTElBVWdBa0lBSUFPblowRWdhaUFDUWlDSXAyY2dBa0tBZ0lDQUVGUWJJZ1pCTVdvUWh3RWdCU2tEQUNFRUlBVXBBd2hDZ0lDQWdJQ0F3QUNGUVl6NEFDQUdhNjFDTUlhRUN5RUNJQUFnQkRjREFDQUFJQUlnQTBLQWdJQ0FnSUNBZ0lCL2c0UTNBd2dnQlVFUWFpUUFDMElCQVg4Z0FTQUNiQ0VFSUFRQ2Z5QURLQUpNUVFCSUJFQWdBQ0FFSUFNUTRnTU1BUXNnQUNBRUlBTVE0Z01MSWdCR0JFQWdBa0VBSUFFYkR3c2dBQ0FCYmd0M0FDQUFJQUVxQWdBZ0FwUTRBZ0FnQUNBQktnSUVJQUtVT0FJRUlBQWdBU29DQ0NBQ2xEZ0NDQ0FBSUFFcUFnd2dBcFE0QWd3Z0FDQUJLZ0lRSUFLVU9BSVFJQUFnQVNvQ0ZDQUNsRGdDRkNBQUlBRXFBaGdnQXBRNEFoZ2dBQ0FCS2dJY0lBS1VPQUljSUFBZ0FTb0NJQ0FDbERnQ0lBczlBUUYvSUFBb0FnUWlBQVJBSUFBUTNBSUVRQUpBSUFCQkNHb2lBU2dDQUFSQUlBRVFnQVJCZjBjTkFRc2dBQ0FBS0FJQUtBSVFFUUVBQ3dzTEN4RUFJQUFnQUNnQ0FFRUlhellDQUNBQUN3OEFJQUFRNlFGQkJHb2dBUkI1R2d0WkFRSi9Jd0JCRUdzaUFpUUFJQUFRa1FFRVFDQUFLQUlBSVFNZ0FCRGtBUm9nQXhBeEN5QUFJQUVvQWdnMkFnZ2dBQ0FCS1FJQU53SUFJQUZCQUJDU0FTQUNRUUEyQWd3Z0FTQUNRUXhxRUtzQklBSkJFR29rQUF1L0FRRURmeU1BUVJCcklnVWtBQ0FGSUFFMkFnaEJBQ0VCUVFZaEJnSkFBa0FnQUNBRlFRaHFFSE1OQUVFRUlRWWdBMEhBQUNBQUVHY2lCeEN5QVVVTkFDQURJQWNRd0FJaEFRTkFBa0FnQUJCOEdpQUJRVEJySVFFZ0FDQUZRUWhxRUl3QlJTQUVRUUpJY2cwQUlBTkJ3QUFnQUJCbklnWVFzZ0ZGRFFNZ0JFRUJheUVFSUFNZ0JoREFBaUFCUVFwc2FpRUJEQUVMQzBFQ0lRWWdBQ0FGUVFocUVITkZEUUVMSUFJZ0FpZ0NBQ0FHY2pZQ0FBc2dCVUVRYWlRQUlBRUx2d0VCQTM4akFFRVFheUlGSkFBZ0JTQUJOZ0lJUVFBaEFVRUdJUVlDUUFKQUlBQWdCVUVJYWhCMERRQkJCQ0VHSUFOQndBQWdBQkJvSWdjUXN3RkZEUUFnQXlBSEVNRUNJUUVEUUFKQUlBQVFmUm9nQVVFd2F5RUJJQUFnQlVFSWFoQ05BVVVnQkVFQ1NISU5BQ0FEUWNBQUlBQVFhQ0lHRUxNQlJRMERJQVJCQVdzaEJDQURJQVlRd1FJZ0FVRUtiR29oQVF3QkN3dEJBaUVHSUFBZ0JVRUlhaEIwUlEwQkN5QUNJQUlvQWdBZ0JuSTJBZ0FMSUFWQkVHb2tBQ0FCQzV3QkFRTi9Jd0JCRUdzaUJDUUFJQVFnQVRZQ0RDQUVJQU0yQWdnZ0JDQUVRUXhxRU1nQklRWWdCQ2dDQ0NFREl3QkJFR3NpQVNRQUlBRWdBellDRENBQklBTTJBZ2hCZnlFRkFrQkJBRUVBSUFJZ0F4Q0VBaUlEUVFCSURRQWdBQ0FEUVFGcUlnTVFOeUlBTmdJQUlBQkZEUUFnQUNBRElBSWdBU2dDREJDRUFpRUZDeUFCUVJCcUpBQWdCU0VBSUFZUXh3RWdCRUVRYWlRQUlBQUxZd0FnQWlnQ0JFR3dBWEVpQWtFZ1JnUkFJQUVQQ3dKQUlBSkJFRWNOQUFKQUFrQWdBQzBBQUNJQ1FTdHJEZ01BQVFBQkN5QUFRUUZxRHdzZ0FrRXdSeUFCSUFCclFRSkljZzBBSUFBdEFBRkJJSEpCK0FCSERRQWdBRUVDYWlFQUN5QUFDeTRBQWtBZ0FDZ0NCRUhLQUhFaUFBUkFJQUJCd0FCR0JFQkJDQThMSUFCQkNFY05BVUVRRHd0QkFBOExRUW9MRWdBZ0FCQXlLQUlBSUFBb0FnQnJRUlJ0Q3c4QUlBQVFNaWdDQUNBQUtBSUFhd3NEQUFFTDlBRUJBbjhnQWlBRVNBUkFJQUFnQVNBQ0lBUVFaVVVFUUVGL0R3c2dBQ2dDRENFQ0lBQW9BZ2doQVFzZ0JFRUNkQ0lHUWJDc0Ftb29BZ0FnQVNBQ0lBUnJJZ0oxY1NJRklBTWdCbW9vQWdCS0JFQURRQ0FDUVFCTUJFQWdBQ0FCSUFKQkFSQmxSUVJBUVg4UEN5QUFLQUlNSVFJZ0FDZ0NDQ0VCQ3lBQklBSkJBV3NpQW5aQkFYRWdCVUVCZEhJaUJTQURJQVJCQVdvaUJFRUNkR29vQWdCS0RRQUxDeUFBSUFJMkFnd2dBQ0FCTmdJSUlBUkJFVTRFUUNBQUtBSVFJZ0FvQWdBaUFVSDVBRFlDRkNBQVFYOGdBU2dDQkJFQ0FFRUFEd3NnQXlnQ2pBRWdBeUFFUVFKMGFpZ0NTQ0FGYW1vdEFCRUxGQUVCZjBFSUVGY2lBU0FBS1FJQU53TUFJQUVMSndFQmZ5TUFRUkJySWdJa0FDQUFRUUpCb0o0Q1FhQ1pBa0hZQUNBQkVBUWdBa0VRYWlRQUM4OEJBZ0YvQW4wZ0FDQUJJQUVnQWtFQ2RDSURhaUlDS2dJQWpCRE5BU0FBSUFOcUlnTWdBeW9DQUVNQUFJQS9ramdDQUNBQUlBRkJKR29nQWlvQ0pJd1Fod0lnQUNBQlFjZ0FhaUFDS2dKSWpCQ0hBaUFBSUFGQjdBQnFJQUlxQW15TUVJY0NJQUFnQVVHUUFXb2dBaW9Da0FHTUVJY0NJQUFnQVVHMEFXb2dBaW9DdEFHTUVJY0NJQUFnQVVIWUFXb2dBaW9DMkFHTUVJY0NJQUFnQVVIOEFXb2dBaW9DL0FHTUVJY0NJQUFRVmlJRVF3QUFBQUJjQkVBZ0FDQUFRd0FBZ0Q4Z0JKRWlCWlVRelFFTElBVUxzZ0VCQlg4Q2Z5QUNRd0FBQUQrU0lnS0xRd0FBQUU5ZEJFQWdBcWdNQVF0QmdJQ0FnSGdMSVFVZ0FDZ0NGQ0VJUVg4aEJnSkFBbjhnQVVNQUFBQS9raUlCaTBNQUFBQlBYUVJBSUFHb0RBRUxRWUNBZ0lCNEN5QUFLQUlRYWlJSFFRQklEUUFnQnlBQUtBSUlJZ2xPRFFBZ0JTQUlhaUlGUVFCSURRQWdCU0FBS0FJTVRnMEFJQU1nQUNnQ0JDQUZJQWxzSUFkcVFRTjBhaUlBS2dJQU9BSUFJQVFnQUNvQ0JEZ0NBRUVBSVFZTElBWUwzZ0lCQkg4Q2ZTQUFJQUdTSUFDOFFmLy8vLzhIY1VHQmdJRDhCMGtnQWJ4Qi8vLy8vd2R4UVlDQWdQd0hUWEZGRFFBYUlBRzhJZ0pCZ0lDQS9BTkdCRUFnQUJDbEJRd0JDeUFDUVI1MlFRSnhJZ1VnQUx3aUEwRWZkbkloQkFKQUFrQWdBMEgvLy8vL0IzRWlBMFVFUUFKQUFrQWdCRUVDYXc0Q0FBRURDMFBiRDBsQURBUUxROXNQU2NBTUF3c2dBa0gvLy8vL0IzRWlBa0dBZ0lEOEIwY0VRRVBiRDhrL0lBQ1lJQUpGRFFNYVE5c1B5VDhnQUpnZ0EwR0FnSUQ4QjBjZ0FrR0FnSURvQUdvZ0EwOXhSUTBER2dKOUlBVUVRRU1BQUFBQUlBTkJnSUNBNkFCcUlBSkpEUUVhQ3lBQUlBR1ZpeENsQlFzaEFBSkFBa0FDUUNBRURnTUVBQUVDQ3lBQWpBd0ZDMFBiRDBsQUlBQkRMcjI3TTVLVERBUUxJQUJETHIyN001SkQydzlKd0pJTUF3c2dBMEdBZ0lEOEIwWU5BU0FFUVFKMFFlRERBbW9xQWdBaEFBc2dBQXdCQ3lBRVFRSjBRZEREQW1vcUFnQUxDeXdCQVg4Z0FCRG9BaUFBS0FJQUJFQWdBQkRhQmlBQUVESWFJQUFvQWdBaEFTQUFFTVVCR2lBQkVERUxDOFVEQVFOL0l3QkJJR3NpQ0NRQUlBZ2dBallDRUNBSUlBRTJBaGdnQ0VFSWFpSUJJQU1RVENBQkVKUUJJUWtnQVJCR0lBUkJBRFlDQUVFQUlRRUNRQU5BSUFZZ0IwWWdBWElOQVFKQUlBaEJHR29nQ0VFUWFoQnpEUUFDUUNBSklBWW9BZ0FRd0FKQkpVWUVRQ0FHUVFScUlnRWdCMFlOQWtFQUlRb0NmeUFKSUFFb0FnQVF3QUlpQWtIRkFFWWdBa0gvQVhGQk1FWnlSUVJBSUFZaEFTQUNEQUVMSUFaQkNHb2dCMFlOQXlBQ0lRb2dDU0FHS0FJSUVNQUNDeUVDSUFnZ0FDQUlLQUlZSUFnb0FoQWdBeUFFSUFVZ0FpQUtJQUFvQWdBb0FpUVJEUUEyQWhnZ0FVRUlhaUVHREFFTElBbEJBU0FHS0FJQUVMSUJCRUFEUUFKQUlBY2dCa0VFYWlJR1JnUkFJQWNoQmd3QkN5QUpRUUVnQmlnQ0FCQ3lBUTBCQ3dzRFFDQUlRUmhxSUFoQkVHb1FqQUZGRFFJZ0NVRUJJQWhCR0dvUVp4Q3lBVVVOQWlBSVFSaHFFSHdhREFBTEFBc2dDU0FJUVJocUVHY1FnZ0VnQ1NBR0tBSUFFSUlCUmdSQUlBWkJCR29oQmlBSVFSaHFFSHdhREFFTElBUkJCRFlDQUFzZ0JDZ0NBQ0VCREFFTEN5QUVRUVEyQWdBTElBaEJHR29nQ0VFUWFoQnpCRUFnQkNBRUtBSUFRUUp5TmdJQUN5QUlLQUlZSVFBZ0NFRWdhaVFBSUFBTHhRTUJBMzhqQUVFZ2F5SUlKQUFnQ0NBQ05nSVFJQWdnQVRZQ0dDQUlRUWhxSWdFZ0F4Qk1JQUVRbVFFaENTQUJFRVlnQkVFQU5nSUFRUUFoQVFKQUEwQWdCaUFIUmlBQmNnMEJBa0FnQ0VFWWFpQUlRUkJxRUhRTkFBSkFJQWtnQml3QUFCREJBa0VsUmdSQUlBWkJBV29pQVNBSFJnMENRUUFoQ2dKL0lBa2dBU3dBQUJEQkFpSUNRY1VBUmlBQ1FmOEJjVUV3Um5KRkJFQWdCaUVCSUFJTUFRc2dCa0VDYWlBSFJnMERJQUloQ2lBSklBWXNBQUlRd1FJTElRSWdDQ0FBSUFnb0FoZ2dDQ2dDRUNBRElBUWdCU0FDSUFvZ0FDZ0NBQ2dDSkJFTkFEWUNHQ0FCUVFKcUlRWU1BUXNnQ1VFQklBWXNBQUFRc3dFRVFBTkFBa0FnQnlBR1FRRnFJZ1pHQkVBZ0J5RUdEQUVMSUFsQkFTQUdMQUFBRUxNQkRRRUxDd05BSUFoQkdHb2dDRUVRYWhDTkFVVU5BaUFKUVFFZ0NFRVlhaEJvRUxNQlJRMENJQWhCR0dvUWZSb01BQXNBQ3lBSklBaEJHR29RYUJESUF5QUpJQVlzQUFBUXlBTkdCRUFnQmtFQmFpRUdJQWhCR0dvUWZSb01BUXNnQkVFRU5nSUFDeUFFS0FJQUlRRU1BUXNMSUFSQkJEWUNBQXNnQ0VFWWFpQUlRUkJxRUhRRVFDQUVJQVFvQWdCQkFuSTJBZ0FMSUFnb0FoZ2hBQ0FJUVNCcUpBQWdBQXNXQUNBQUlBRWdBaUFESUFBb0FnQW9BakFSQ0FBYUN3NEFJQUFvQWdoQi8vLy8vd2R4Q3lnQkFYOGpBRUVRYXlJREpBQWdBeUFDTmdJTUlBQWdBU0FDRUlNRklRQWdBMEVRYWlRQUlBQUxxQUVBQWtBZ0FVR0FDRTRFUUNBQVJBQUFBQUFBQU9CL29pRUFJQUZCL3c5SkJFQWdBVUgvQjJzaEFRd0NDeUFBUkFBQUFBQUFBT0Ivb2lFQUlBRkIvUmNnQVVIOUYwZ2JRZjRQYXlFQkRBRUxJQUZCZ1hoS0RRQWdBRVFBQUFBQUFBQmdBNkloQUNBQlFiaHdTd1JBSUFGQnlRZHFJUUVNQVFzZ0FFUUFBQUFBQUFCZ0E2SWhBQ0FCUWZCb0lBRkI4R2hLRzBHU0Qyb2hBUXNnQUNBQlFmOEhhcTFDTklhL29nc1FBQ0FBUVNCR0lBQkJDV3RCQlVseUN3UUFJQUFMQ3dBZ0FFRUFOZ0lBSUFBTEZBRUJmMEVFRUZjaUFTQUFLQUlBTmdJQUlBRUxuQUlDQkg4RmZDQUFJQU5CQW5RaUIyb29BZ0FpQ0NBQklBSkJBblFpQ1dvb0FnQWlDbXdnQUNBSmFpZ0NBQ0lKSUFFZ0Iyb29BZ0FpQjJ4cnR5RVBJQWtnQ0d1M0lRd2dCeUFLYTdjaERTQUNRUUZxSWdjaENBTkFJQU1nQjB4RkJFQWdEU0FBSUFkQkFuUWlDV29vQWdDM29pQU1JQUVnQ1dvb0FnQzNvcUFnRDZBaURpQU9vaUlPSUFzZ0N5QU9ZeUlKR3lFTElBY2dDQ0FKR3lFSUlBZEJBV29oQnd3QkN3c0NRQ0FFSUFzZ0RTQU5vaUFNSUF5aW9LTmpCRUJCZnlFSElBQWdBU0FDSUFnZ0JDQUZJQVlRNndGQkFFZ05BU0FHS0FJQUlnSkJCVW9OQVNBRklBSkJBblJxSUFnMkFnQWdCaUFHS0FJQVFRRnFOZ0lBSUFBZ0FTQUlJQU1nQkNBRklBWVE2d0ZCQUVnTkFRdEJBQ0VIQ3lBSEN4TUFJQUJCa3U0RFFlRGlBMEhjNGdNUTl3WUxhUUVDZlNBQUlBRXFBZ2dnQVNvQ0FDQUNLZ0lBSWdPVUlBSXFBZ1FpQkNBQktnSUVsSktTSUFFcUFpQWdBU29DR0NBRGxDQUJLZ0ljSUFTVWtwSWlBNVU0QWdBZ0FDQUJLZ0lVSUFFcUFnd2dBaW9DQUpRZ0FTb0NFQ0FDS2dJRWxKS1NJQU9WT0FJRUN4SUFJQUFnQWpZQ0JDQUFJQUUyQWdBZ0FBc01BQ0FCSUFJb0FnQTJBZ0FMRGdBZ0FDQUJJQUpCQW5RUVBob0xOd0VCZnlNQVFSQnJJZ0lrQUNBQ0lBQW9BZ0EyQWdnZ0FpQUNLQUlJSUFGQkEzUnFOZ0lJSUFJb0FnZ2hBQ0FDUVJCcUpBQWdBQXNTQUNBQUVESW9BZ0FnQUNnQ0FHdEJKRzBMZ2dFQkFYOENRQ0FCSUFBb0FoQkpCRUFnQUNnQ0ZDSURJQUpORFFFZ0FFRUVhaUFCSUFOc0lBSnFFRWtQQzBHd3BRUkJocVlCRURCQnNxWUJFREJCc1JrUU1FSGFBUkF6UWRvZEVEQkJvYWNCRURBUU5CQUFBQXRCc0tVRVFkMm5BUkF3UWJLbUFSQXdRYkVaRURCQjJ3RVFNMEhhSFJBd1FaQ29BUkF3RURRUUFBQUxEUUFnQUNnQ0FDQUJLQUlBU1FzckFRRi9JQUFvQWdRaEF3TkFJQUVnQTBjRVFDQUFFRElhSUFNZ0Ftc2hBd3dCQ3dzZ0FDQUJOZ0lFQ3c4QUlBQWdBQ2dDQUNnQ0pCRUFBQXNSQUNBQUlBRWdBU2dDQUNnQ0lCRUNBQXNvQVFGL1FRUVFCeENQQkNJQVFaRGdBellDQUNBQVFhVGdBellDQUNBQVFaVGhBMEVORUFZQUN4RUFJQUFnQVNBQktBSUFLQUlzRVFJQUN3d0FJQUJCZ29hQUlEWUFBQXN1QVFGL0l3QkJFR3NpQVNRQUlBRkJDR29nQUJBOUlBQVFOVUVDZEdvUWVTZ0NBQ0VBSUFGQkVHb2tBQ0FBQ3lzQkFYOGpBRUVRYXlJQkpBQWdBVUVJYWlBQUVEMGdBQkExYWhCNUtBSUFJUUFnQVVFUWFpUUFJQUFMRmdBZ0FDQUJJQUlnQXlBQUtBSUFLQUlnRVFnQUdndWdBUUVFZnlNQVFSQnJJZ2NrQUFKQUlBQkZEUUFnQkNnQ0RDRUdJQUlnQVdzaUNFRUFTZ1JBSUFBZ0FTQUlFTUlDSUFoSERRRUxJQVlnQXlBQmF5SUJhMEVBSUFFZ0JrZ2JJZ0ZCQUVvRVFDQUFJQWNnQVNBRkVNUUhJZ1VRUFNBQkVNSUNJUVlnQlJBMkdpQUJJQVpIRFFFTElBTWdBbXNpQVVFQVNnUkFJQUFnQWlBQkVNSUNJQUZIRFFFTElBUVF3Z2NnQUNFSkN5QUhRUkJxSkFBZ0NRc3BBQ0FBUVFoMFFZQ0EvQWR4SUFCQkdIUnlJQUJCQ0haQmdQNERjU0FBUVJoMmNuSWdBQ0FCR3dzMEFDQUFLQUlBR2lBQUtBSUFJQUFRcEFGQkRHeHFHaUFBS0FJQUlBQVFVMEVNYkdvYUlBQW9BZ0FnQUJDa0FVRU1iR29hQzFBQkFYNENRQ0FEUWNBQWNRUkFJQUlnQTBGQWFxMklJUUZDQUNFQ0RBRUxJQU5GRFFBZ0FrSEFBQ0FEYTYyR0lBRWdBNjBpQklpRUlRRWdBaUFFaUNFQ0N5QUFJQUUzQXdBZ0FDQUNOd01JQzlzQkFnRi9BbjVCQVNFRUFrQWdBRUlBVWlBQlF2Ly8vLy8vLy8vLy93Q0RJZ1ZDZ0lDQWdJQ0F3UC8vQUZZZ0JVS0FnSUNBZ0lEQS8vOEFVUnNOQUNBQ1FnQlNJQU5DLy8vLy8vLy8vLy8vQUlNaUJrS0FnSUNBZ0lEQS8vOEFWaUFHUW9DQWdJQ0FnTUQvL3dCUkd3MEFJQUFnQW9RZ0JTQUdoSVJRQkVCQkFBOExJQUVnQTROQ0FGa0VRRUYvSVFRZ0FDQUNWQ0FCSUFOVElBRWdBMUViRFFFZ0FDQUNoU0FCSUFPRmhFSUFVZzhMUVg4aEJDQUFJQUpXSUFFZ0ExVWdBU0FEVVJzTkFDQUFJQUtGSUFFZ0E0V0VRZ0JTSVFRTElBUUxVZ0VDZjBHYzVRTW9BZ0FpQVNBQVFRZHFRWGh4SWdKcUlRQUNRQ0FDUVFBZ0FDQUJUUnNOQUNBQVB3QkJFSFJMQkVBZ0FCQWVSUTBCQzBHYzVRTWdBRFlDQUNBQkR3dEJ0SXdFUVRBMkFnQkJmd3VpQVFFQ2Z5TUFRYUFCYXlJRUpBQkJmeUVGSUFRZ0FVRUJhMEVBSUFFYk5nS1VBU0FFSUFBZ0JFR2VBV29nQVJzaUFEWUNrQUVnQkVFQVFaQUJFRGdpQkVGL05nSk1JQVJCaUFJMkFpUWdCRUYvTmdKUUlBUWdCRUdmQVdvMkFpd2dCQ0FFUVpBQmFqWUNWQUpBSUFGQkFFZ0VRRUcwakFSQlBUWUNBQXdCQ3lBQVFRQTZBQUFnQkNBQ0lBTkJoZ0pCaHdJUWpnVWhCUXNnQkVHZ0FXb2tBQ0FGQ3hJQUlBQVFNaWdDQUNBQUtBSUFhMEVFZFF1bUF3SUNmd0Y5SUFFQ2Z5QURFTjhHamlJR2kwTUFBQUJQWFFSQUlBYW9EQUVMUVlDQWdJQjRDeUlFTmdJQUlBSUNmeUFEUVFFZ0JIU3lsUkNrQWlBQUtnSWNsQkRlQmlJRGkwTUFBQUJQWFFSQUlBT29EQUVMUVlDQWdJQjRDeUlFTmdJQUlBUWdBQ2dDRkVFQmEwWUVRQ0FCSUFFb0FnQkJBV28yQWdBZ0FrRUFOZ0lBUVFBaEJBc0NRQ0FDQW44Z0FTZ0NBQ0lDUVFCSUJFQWdBVUVBTmdJQVFRQU1BUXNnQWlBQUtBSVFJZ1ZJRFFFZ0FTQUZRUUZyTmdJQUlBQW9BaFJCQVdzTElnUTJBZ0FMQWtBQ1FBSkFJQUVvQWdBaUFVRUFUZ1JBSUFFZ0FDZ0NFRTROQVNBRVFRQklEUUlnQkNBQUtBSVVUZzBERHd0QnNLVUVRZHJKQUJBd1Fabk5BQkF3UWJ3ZEVEQkJqQUlRTTBIRkloQXdRWXZTQUJBd0VEUVFBQUFMUWJDbEJFSHExZ0FRTUVHWnpRQVFNRUc4SFJBd1FZMENFRE5CeFNJUU1FSEE1Z0FRTUJBMEVBQUFDMEd3cFFSQnFPd0FFREJCbWMwQUVEQkJ2QjBRTUVHT0FoQXpRY1VpRURCQjZPMEFFREFRTkJBQUFBdEJzS1VFUWQveUFCQXdRWm5OQUJBd1Fid2RFREJCandJUU0wSEZJaEF3UWZIekFCQXdFRFFRQUFBTHJRRUFJQUFnQVNvQ0FDQUNsQ0FBS2dJQWtqZ0NBQ0FBSUFFcUFnUWdBcFFnQUNvQ0JKSTRBZ1FnQUNBQktnSUlJQUtVSUFBcUFnaVNPQUlJSUFBZ0FTb0NEQ0FDbENBQUtnSU1ramdDRENBQUlBRXFBaEFnQXBRZ0FDb0NFSkk0QWhBZ0FDQUJLZ0lVSUFLVUlBQXFBaFNTT0FJVUlBQWdBU29DR0NBQ2xDQUFLZ0lZa2pnQ0dDQUFJQUVxQWh3Z0FwUWdBQ29DSEpJNEFod2dBQ0FCS2dJZ0lBS1VJQUFxQWlDU09BSWdDdzhBSUFBZ0FDZ0NBRUVFYWpZQ0FBc0xBQ0FBUVJCcUlBRVFhZ3NTQUNBQVFRUnFJQUFvQWdBZ0FXd1F0UVVMa3dFQkFuOGdBU0FBRUVJaUFrc0VRQ01BUVNCcklnTWtBQUpBSUFFZ0Ftc2lBU0FBRURJb0FnQWdBQ2dDQkd0QkFuVk5CRUFnQUNBQkVLNEREQUVMSUFBUU1pRUNJQU5CQ0dvZ0FDQUFFRUlnQVdvUXBBTWdBQkJDSUFJUXVBSWlBaUFCRU00R0lBQWdBaERuQWlBQ0VMY0NDeUFEUVNCcUpBQVBDeUFCSUFKSkJFQWdBQ0FBS0FJQUlBRkJBblJxRUtRRUN3c1JBQ0FBSUFCQkFXdHhSU0FBUVFKTGNRc0pBQ0FCSUFJUXFBRUxod0VCQkg4akFFRVFheUlCSkFBakFFRVFheUlESkFBZ0FCRHBBU0lBUVFScUlRUWpBRUVRYXlJQ0pBQWdBa0VBTmdJTUlBUWdBa0VNYWhDZkFSb2dBa0VRYWlRQUlBTkJFR29rQUNBQVFRaHFFT2tCR2lBQlFRQTJBZ3dnQUVFTWFpQUJRUXhxRUo4QkdpQUJRWUNBZ1B3RE5nSUVJQUFnQVNvQ0JEZ0NFQ0FCUVJCcUpBQWdBQXNRQUNBQUtBSUVJQUFvQWdCclFRRjFDeElBSUFBUU1pZ0NBQ0FBS0FJQWEwRUJkUXNTQUNBQUVESW9BZ0FnQUNnQ0FHdEJCWFVMQ2dCQmpjQUJFSmdDQUFzV0FRRi9JQUFRUVNFQklBQVEyZ1lnQUNBQkVKb0VDK29CQVFWL0lBRWdBQkJDSWdKTEJFQWpBRUVnYXlJRkpBQUNRQ0FCSUFKcklnSWdBQkF5S0FJQUlBQW9BZ1JyUVFKMVRRUkFJQUFnQWhDdUF3d0JDeUFBRURJaEJpQUZRUWhxQW44Z0FCQkNJQUpxSVFNakFFRVFheUlCSkFBZ0FTQUROZ0lNSUFNZ0FCRG1BaUlFVFFSQUlBQVF4Z0VpQXlBRVFRRjJTUVJBSUFFZ0EwRUJkRFlDQ0NBQlFRaHFJQUZCREdvUWJpZ0NBQ0VFQ3lBQlFSQnFKQUFnQkF3QkN4Q1NBZ0FMSUFBUVFpQUdFTGdDSWdFZ0FoRE9CaUFBSUFFUTV3SWdBUkMzQWdzZ0JVRWdhaVFBRHdzZ0FTQUNTUVJBSUFBZ0FDZ0NBQ0FCUVFKMGFoQ2tCQXNMSndBZ0F5QURLQUlBSUFJZ0FXc2lBR3NpQWpZQ0FDQUFRUUJLQkVBZ0FpQUJJQUFRUGhvTEN5UUJBbjhqQUVFUWF5SUNKQUFnQVNBQUVQUUJJUU1nQWtFUWFpUUFJQUVnQUNBREd3c1pBQ0FBRUpFQkJFQWdBQ0FCRUlrQkR3c2dBQ0FCRUpJQkN4OEFRUWdRQnlBQUVJRUhJZ0JCMk9FRE5nSUFJQUJCK09FRFFRd1FCZ0FMTEFBQ1FDQUFJQUZHRFFBRFFDQUFJQUZCQVdzaUFVOE5BU0FBSUFFUXRnY2dBRUVCYWlFQURBQUxBQXNMclFFQkJIOGpBRUVRYXlJSUpBQUNRQ0FBUlEwQUlBUW9BZ3doQmlBQ0lBRnJJZ2RCQUVvRVFDQUFJQUVnQjBFQ2RpSUhFTUlDSUFkSERRRUxJQVlnQXlBQmEwRUNkU0lCYTBFQUlBRWdCa2diSWdGQkFFb0VRQ0FBSUFnZ0FTQUZFTUFISWdVUVBTQUJFTUlDSVFZZ0JSQTJHaUFCSUFaSERRRUxJQU1nQW1zaUFVRUFTZ1JBSUFBZ0FpQUJRUUoySWdFUXdnSWdBVWNOQVFzZ0JCRENCeUFBSVFrTElBaEJFR29rQUNBSkN5UUFJQUJCQzA4RWZ5QUFRUkJxUVhCeElnQWdBRUVCYXlJQUlBQkJDMFliQlVFS0N3c1BBQ0FBSUFBb0FnQW9BaHdSQUFBTEpBRUNmeU1BUVJCcklnSWtBQ0FCSUFBUTJ3UWhBeUFDUVJCcUpBQWdBU0FBSUFNYkMyUUNBWDhCZmlNQVFSQnJJZ0lrQUNBQUFuNGdBVVVFUUVJQURBRUxJQUlnQWExQ0FDQUJaeUlCUWRFQWFoQ0hBU0FDS1FNSVFvQ0FnSUNBZ01BQWhVR2VnQUVnQVd1dFFqQ0dmQ0VESUFJcEF3QUxOd01BSUFBZ0F6Y0RDQ0FDUVJCcUpBQUxnd0VDQTM4QmZnSkFJQUJDZ0lDQWdCQlVCRUFnQUNFRkRBRUxBMEFnQVVFQmF5SUJJQUFnQUVJS2dDSUZRZ3ArZmFkQk1ISTZBQUFnQUVMLy8vLy9ud0ZXSVFJZ0JTRUFJQUlOQUFzTElBV25JZ0lFUUFOQUlBRkJBV3NpQVNBQ0lBSkJDbTRpQTBFS2JHdEJNSEk2QUFBZ0FrRUpTeUVFSUFNaEFpQUVEUUFMQ3lBQkMwb0JBbjhDUUNBQUxRQUFJZ0pGSUFJZ0FTMEFBQ0lEUjNJTkFBTkFJQUV0QUFFaEF5QUFMUUFCSWdKRkRRRWdBVUVCYWlFQklBQkJBV29oQUNBQ0lBTkdEUUFMQ3lBQ0lBTnJDeG9BSUFBZ0FSQ1JCU0lBUVFBZ0FDMEFBQ0FCUWY4QmNVWWJDNkFCQVFSL0l3QkJFR3NpQlNRQUlBVWdBallDRENNQVFhQUJheUlESkFBZ0EwRUlhaUlHUWFEMkFrR1FBUkErR2lBRElBQTJBalFnQXlBQU5nSWNJQU5CLy8vLy93ZEJmaUFBYXlJRUlBUkIvLy8vL3dkTEd5SUVOZ0k0SUFNZ0FDQUVhaUlBTmdJa0lBTWdBRFlDR0NBR0lBRWdBaENLQlNBRUJFQWdBeWdDSENJQUlBQWdBeWdDR0VaclFRQTZBQUFMSUFOQm9BRnFKQUFnQlVFUWFpUUFDNklCQWdGOUFuOGdBTHdpQWtFWGRrSC9BWEVpQTBHVkFVMEVRQ0FEUWYwQVRRUjlJQUJEQUFBQUFKUUZBbjBnQUNBQWpDQUNRUUJPR3lJQVF3QUFBRXVTUXdBQUFNdVNJQUNUSWdGREFBQUFQMTRFUUNBQUlBR1NRd0FBZ0wrU0RBRUxJQUFnQVpJaUFDQUJRd0FBQUw5ZlJRMEFHaUFBUXdBQWdEK1NDeUlBSUFDTUlBSkJBRTRiQ3lFQUN5QUFpME1BQUFCUFhRUkFJQUNvRHd0QmdJQ0FnSGdMaHdJQ0FuOENmQ0FBdkNJQlFZQ0FnUHdEUmdSQVF3QUFBQUFQQ3dKQUlBRkJnSUNBL0FkclFmLy8vNGQ0VFFSQUlBRkJBWFFpQWtVRVFDTUFRUkJySWdGREFBQ0F2emdDRENBQktnSU1Rd0FBQUFDVkR3c2dBVUdBZ0lEOEIwWU5BU0FDUVlDQWdIaEpJQUZCQUU1eFJRUkFJQUFRbXdVUEN5QUFRd0FBQUV1VXZFR0FnSURjQUdzaEFRdEJ1TndDS3dNQUlBRWdBVUdBZ016NUEyc2lBVUdBZ0lCOGNXdSt1eUFCUVE5MlFmQUJjU0lDUWJEYUFtb3JBd0NpUkFBQUFBQUFBUEMvb0NJRElBT2lJZ1NpUWNEY0Fpc0RBQ0FEb2tISTNBSXJBd0Nnb0NBRW9pQUJRUmQxdDBHdzNBSXJBd0NpSUFKQnVOb0NhaXNEQUtBZ0E2Q2d0aUVBQ3lBQUN3Z0FJQUFRNlFFYUN3MEFJQUFvQWdRZ0FTZ0NCRXNMSVFBZ0FDZ0NCQ0FBRURJb0FnQkpCRUFnQUNBQkVMQUREd3NnQUNBQkVQUUZDNklCQVFKL0lBQW9BZ1FnQUJBeUtBSUFSd1JBSXdCQkVHc2lBeVFBSUFNZ0FFRUJFTFlDSVFJZ0FCQXlJQUlvQWdRZ0FSRHZBU0FDSUFJb0FnUkJCR28yQWdRZ0FoQnJJQU5CRUdva0FBOExJd0JCSUdzaUF5UUFJQUFRTWlJQ0lBTkJDR29nQUNBQUVFSkJBV29RcEFNZ0FCQkNJQUlRdUFJaUFpZ0NDQ0FCRU84QklBSWdBaWdDQ0VFRWFqWUNDQ0FBSUFJUTV3SWdBaEMzQWlBRFFTQnFKQUFMQ0FBZ0FFSDBBR29MQ1FBZ0FDQUJFSjhCQ3pFQkFYOGpBRUVRYXlJREpBQWdBeUFCTmdJTUlBQWdBMEVNYWhDZkFTSUFJQUlwQWdBM0FnUWdBMEVRYWlRQUlBQUxFZ0FnQUNBQ09nQUVJQUFnQVRZQ0FDQUFDeFlBSUFBZ0FTZ0NBRFlDQUNBQUlBSXRBQUE2QUFRTDRnRUNBMzhCZlNNQVFSQnJJZ0lrQUNBQ0lBRTJBZ3dDUUNBQ0lBRkJBVVlFZjBFQ0JTQUJJQUZCQVd0eFJRMEJJQUVRK0FRTElnRTJBZ3dMQWtBZ0FCQ1hBU0lESUFGSkJFQWdBQ0FCRUpnR0RBRUxJQUVnQTA4TkFDQURFSXdDSVFRQ2Z5QUFFRHdvQWdDeklBQVFXeW9DQUpXTklnVkRBQUNBVDEwZ0JVTUFBQUFBWUhFRVFDQUZxUXdCQzBFQUN5RUJJQUlnQkFSL1FRRkJJQ0FCUVFGcloydDBJQUVnQVVFQ1R4c0ZJQUVRK0FRTE5nSUlJQUlnQWtFTWFpQUNRUWhxRUc0b0FnQWlBVFlDRENBQklBTlBEUUFnQUNBQkVKZ0dDeUFDUVJCcUpBQUxDUUJCa1FnUW1BSUFDeUFCQVg4Z0FDZ0NBQ0VCSUFCQkFEWUNBQ0FCQkVBZ0FCQk9JQUVRcUFZTEN5a0JBWDhqQUVFUWF5SUNKQUFnQWlBQk5nSUlJQUFnQWtFSWFoQ2ZBU0VBSUFKQkVHb2tBQ0FBQ3dzQUlBQkNBRGNDQUNBQUN3d0FJQUFnQVNBQUlBRktHd3NzQUNBQUtBSUFHaUFBS0FJQUlBQVF4Z0ZCQW5ScUdpQUFLQUlBSUFBUXhnRkJBblJxR2lBQUtBSUFHZ3NaQUNBQlFmLy8vLzhEU3dSQUVQZ0JBQXNnQVVFQ2RCQlhDdzBBSUFBZ0FTQUNRUUlRcXdRTFRRRUJmeUFBS0FJRUlRRURRQ0FCSUFBb0FnaEhCRUFnQUNnQ0VCb2dBQ0FBS0FJSVFRUnJOZ0lJREFFTEN5QUFLQUlBQkVBZ0FDZ0NFQm9nQUNnQ0FDRUJJQUFRelFZYUlBRVFNUXNMWkFFQ2Z5TUFRUkJySWdVa0FDQUZRUUEyQWd3Z0FFRU1haUFERU5BQklBRUVRQ0FBS0FJUUlBRVF0UUloQkFzZ0FDQUVOZ0lBSUFBZ0JDQUNRUUowYWlJQ05nSUlJQUFnQWpZQ0JDQUFFRHdnQkNBQlFRSjBhallDQUNBRlFSQnFKQUFnQUFzS0FDQUFLQUlBRUprRUN6OEJBWDhqQUVFUWF5SUNKQUFnQUJBeUdpQUNJQUUyQWd3Z0FrSC8vLy8vQnpZQ0NDQUNRUXhxSUFKQkNHb1FsZ0lvQWdBaEFDQUNRUkJxSkFBZ0FBc0tBRUdLOFFBUW1BSUFDd2tBSUFBZ0FSQzFBZ3NrQUNBQVFRSlBCSDhnQUVFRWFrRjhjU0lBSUFCQkFXc2lBQ0FBUVFKR0d3VkJBUXNMbkFFQkJYOGpBRUVRYXlJRkpBQWdBUkRMQkNFQ0l3QkJFR3NpQXlRQUFrQWdBa0h2Ly8vL0EwMEVRQUpBSUFJUXZRTUVRQ0FBSUFJUWtnRWdBQ0VFREFFTElBQWdBQ0FDRUwwQ1FRRnFJZ1lRdkFJaUJCQ1lBU0FBSUFZUXNRRWdBQ0FDRUlrQkN5QUVJQUVnQWhES0FTQURRUUEyQWd3Z0JDQUNRUUowYWlBRFFReHFFS3NCSUFOQkVHb2tBQXdCQ3hDd0FRQUxJQVZCRUdva0FBdkdBUUVHZnlNQVFSQnJJZ1FrQUNBQUVFNG9BZ0FoQlFKL0lBSW9BZ0FnQUNnQ0FHc2lBMEgvLy8vL0Iwa0VRQ0FEUVFGMERBRUxRWDhMSWdOQkJDQURHeUVESUFFb0FnQWhCaUFBS0FJQUlRY2dCVUhUQWtZRWYwRUFCU0FBS0FJQUN5QURFTXNDSWdnRVFDQUZRZE1DUndSQUlBQVF0Z0VhQ3lBRVFkSUNOZ0lFSUFBZ0JFRUlhaUFJSUFSQkJHb1FaQ0lGRUswSElBVVFZeUFCSUFBb0FnQWdCaUFIYTJvMkFnQWdBaUFBS0FJQUlBTkJmSEZxTmdJQUlBUkJFR29rQUE4TEVIVUFDeE1BSUFBZ0FVRUFJQUFvQWdBb0FqUVJCQUFMRXdBZ0FDQUJRUUFnQUNnQ0FDZ0NKQkVFQUFzVEFDQUFJQUVnQWlBQUtBSUFLQUl3RVFRQUN5WUFJQUFnQUNnQ0dFVWdBQ2dDRUNBQmNuSWlBVFlDRUNBQUtBSVVJQUZ4QkVBUWRRQUxDL0lDQVFKL0l3QkJFR3NpQ2lRQUlBb2dBRFlDREFKQUFrQUNRQ0FES0FJQUlBSkhEUUJCS3lFTElBQWdDU2dDWUVjRVFFRXRJUXNnQ1NnQ1pDQUFSdzBCQ3lBRElBSkJBV28yQWdBZ0FpQUxPZ0FBREFFTElBWVFOVVVnQUNBRlIzSkZCRUJCQUNFQUlBZ29BZ0FpQVNBSGEwR2ZBVW9OQWlBRUtBSUFJUUFnQ0NBQlFRUnFOZ0lBSUFFZ0FEWUNBQXdCQzBGL0lRQWdDU0FKUWVnQWFpQUtRUXhxRUw4RUlBbHJJZ1pCM0FCS0RRRWdCa0VDZFNFRkFrQUNRQUpBSUFGQkNHc09Bd0FDQUFFTElBRWdCVW9OQVF3REN5QUJRUkJISUFaQjJBQkljZzBBSUFNb0FnQWlBU0FDUmlBQklBSnJRUUpLY2cwQ0lBRkJBV3N0QUFCQk1FY05Ba0VBSVFBZ0JFRUFOZ0lBSUFNZ0FVRUJhallDQUNBQklBVkI0S0lEYWkwQUFEb0FBQXdDQ3lBRElBTW9BZ0FpQUVFQmFqWUNBQ0FBSUFWQjRLSURhaTBBQURvQUFDQUVJQVFvQWdCQkFXbzJBZ0JCQUNFQURBRUxRUUFoQUNBRVFRQTJBZ0FMSUFwQkVHb2tBQ0FBQ3dzQUlBQkJ0SzBFRU1rQkMrNENBUU4vSXdCQkVHc2lDaVFBSUFvZ0FEb0FEd0pBQWtBQ1FDQURLQUlBSUFKSERRQkJLeUVMSUFCQi93RnhJZ3dnQ1MwQUdFY0VRRUV0SVFzZ0NTMEFHU0FNUncwQkN5QURJQUpCQVdvMkFnQWdBaUFMT2dBQURBRUxJQVlRTlVVZ0FDQUZSM0pGQkVCQkFDRUFJQWdvQWdBaUFTQUhhMEdmQVVvTkFpQUVLQUlBSVFBZ0NDQUJRUVJxTmdJQUlBRWdBRFlDQUF3QkMwRi9JUUFnQ1NBSlFScHFJQXBCRDJvUXdnUWdDV3NpQlVFWFNnMEJBa0FDUUFKQUlBRkJDR3NPQXdBQ0FBRUxJQUVnQlVvTkFRd0RDeUFCUVJCSElBVkJGa2h5RFFBZ0F5Z0NBQ0lCSUFKR0lBRWdBbXRCQWtweURRSWdBVUVCYXkwQUFFRXdSdzBDUVFBaEFDQUVRUUEyQWdBZ0F5QUJRUUZxTmdJQUlBRWdCVUhnb2dOcUxRQUFPZ0FBREFJTElBTWdBeWdDQUNJQVFRRnFOZ0lBSUFBZ0JVSGdvZ05xTFFBQU9nQUFJQVFnQkNnQ0FFRUJhallDQUVFQUlRQU1BUXRCQUNFQUlBUkJBRFlDQUFzZ0NrRVFhaVFBSUFBTEN3QWdBRUdzclFRUXlRRUxhZ0VDZnlBQVFkQ0ZBellDQUNBQUtBSW9JUUVEUUNBQkJFQkJBQ0FBSUFGQkFXc2lBVUVDZENJQ0lBQW9BaVJxS0FJQUlBQW9BaUFnQW1vb0FnQVJCUUFNQVFzTElBQkJIR29RUmlBQUtBSWdFREVnQUNnQ0pCQXhJQUFvQWpBUU1TQUFLQUk4RURFZ0FBdU5BUUVCZndKQUlBQW9BZ1FpQVNBQktBSUFRUXhyS0FJQWFpZ0NHRVVOQUNBQUtBSUVJZ0VnQVNnQ0FFRU1heWdDQUdvUTFBTkZEUUFnQUNnQ0JDSUJJQUVvQWdCQkRHc29BZ0JxS0FJRVFZREFBSEZGRFFBZ0FDZ0NCQ0lCSUFFb0FnQkJER3NvQWdCcUtBSVlFTW9DUVg5SERRQWdBQ2dDQkNJQUlBQW9BZ0JCREdzb0FnQnFRUUVRd3dJTEN3OEFJQUFnQUNnQ0FDZ0NHQkVBQUF1Y0NBRUxmeUFBUlFSQUlBRVFOdzhMSUFGQlFFOEVRRUcwakFSQk1EWUNBRUVBRHdzQ2YwRVFJQUZCQzJwQmVIRWdBVUVMU1JzaEJpQUFRUWhySWdVb0FnUWlDVUY0Y1NFRUFrQWdDVUVEY1VVRVFFRUFJQVpCZ0FKSkRRSWFJQVpCQkdvZ0JFMEVRQ0FGSVFJZ0JDQUdhMEd3bWdRb0FnQkJBWFJORFFJTFFRQU1BZ3NnQkNBRmFpRUhBa0FnQkNBR1R3UkFJQVFnQm1zaUEwRVFTUTBCSUFVZ0NVRUJjU0FHY2tFQ2NqWUNCQ0FGSUFacUlnSWdBMEVEY2pZQ0JDQUhJQWNvQWdSQkFYSTJBZ1FnQWlBREVJQUZEQUVMUWVpV0JDZ0NBQ0FIUmdSQVFkeVdCQ2dDQUNBRWFpSUVJQVpORFFJZ0JTQUpRUUZ4SUFaeVFRSnlOZ0lFSUFVZ0Jtb2lBeUFFSUFacklnSkJBWEkyQWdSQjNKWUVJQUkyQWdCQjZKWUVJQU0yQWdBTUFRdEI1SllFS0FJQUlBZEdCRUJCMkpZRUtBSUFJQVJxSWdNZ0Jra05BZ0pBSUFNZ0Jtc2lBa0VRVHdSQUlBVWdDVUVCY1NBR2NrRUNjallDQkNBRklBWnFJZ1FnQWtFQmNqWUNCQ0FESUFWcUlnTWdBallDQUNBRElBTW9BZ1JCZm5FMkFnUU1BUXNnQlNBSlFRRnhJQU55UVFKeU5nSUVJQU1nQldvaUFpQUNLQUlFUVFGeU5nSUVRUUFoQWtFQUlRUUxRZVNXQkNBRU5nSUFRZGlXQkNBQ05nSUFEQUVMSUFjb0FnUWlBMEVDY1EwQklBTkJlSEVnQkdvaUNpQUdTUTBCSUFvZ0Jtc2hEQUpBSUFOQi93Rk5CRUFnQnlnQ0NDSUVJQU5CQTNZaUFrRURkRUg0bGdScVJob2dCQ0FIS0FJTUlnTkdCRUJCMEpZRVFkQ1dCQ2dDQUVGK0lBSjNjVFlDQUF3Q0N5QUVJQU0yQWd3Z0F5QUVOZ0lJREFFTElBY29BaGdoQ3dKQUlBY2dCeWdDRENJSVJ3UkFJQWNvQWdnaUFrSGdsZ1FvQWdCSkdpQUNJQWcyQWd3Z0NDQUNOZ0lJREFFTEFrQWdCMEVVYWlJRUtBSUFJZ0lOQUNBSFFSQnFJZ1FvQWdBaUFnMEFRUUFoQ0F3QkN3TkFJQVFoQXlBQ0lnaEJGR29pQkNnQ0FDSUNEUUFnQ0VFUWFpRUVJQWdvQWhBaUFnMEFDeUFEUVFBMkFnQUxJQXRGRFFBQ1FDQUhLQUljSWdOQkFuUkJnSmtFYWlJQ0tBSUFJQWRHQkVBZ0FpQUlOZ0lBSUFnTkFVSFVsZ1JCMUpZRUtBSUFRWDRnQTNkeE5nSUFEQUlMSUF0QkVFRVVJQXNvQWhBZ0IwWWJhaUFJTmdJQUlBaEZEUUVMSUFnZ0N6WUNHQ0FIS0FJUUlnSUVRQ0FJSUFJMkFoQWdBaUFJTmdJWUN5QUhLQUlVSWdKRkRRQWdDQ0FDTmdJVUlBSWdDRFlDR0FzZ0RFRVBUUVJBSUFVZ0NVRUJjU0FLY2tFQ2NqWUNCQ0FGSUFwcUlnSWdBaWdDQkVFQmNqWUNCQXdCQ3lBRklBbEJBWEVnQm5KQkFuSTJBZ1FnQlNBR2FpSURJQXhCQTNJMkFnUWdCU0FLYWlJQ0lBSW9BZ1JCQVhJMkFnUWdBeUFNRUlBRkN5QUZJUUlMSUFJTElnSUVRQ0FDUVFocUR3c2dBUkEzSWdWRkJFQkJBQThMSUFVZ0FFRjhRWGdnQUVFRWF5Z0NBQ0lDUVFOeEd5QUNRWGh4YWlJQ0lBRWdBU0FDU3hzUVBob2dBQkF4SUFVTDBRUUJCSDhqQUVFUWF5SUVKQUFDUUFKQVFibUFBaUFCTEFBQUVLRUNSUVJBUWJTTUJFRWNOZ0lBREFFTFFRSWhBaUFCUVNzUW9RSkZCRUFnQVMwQUFFSHlBRWNoQWdzZ0FrR0FBWElnQWlBQlFmZ0FFS0VDR3lJQ1FZQ0FJSElnQWlBQlFlVUFFS0VDR3lJQ0lBSkJ3QUJ5SUFFdEFBQWlBa0h5QUVZYklnVkJnQVJ5SUFVZ0FrSDNBRVliSWdWQmdBaHlJQVVnQWtIaEFFWWJJUUlnQkVLMkF6Y0RBRUdjZnlBQUlBSkJnSUFDY2lBRUVDUWlBRUdCWUU4RVFFRzBqQVJCQUNBQWF6WUNBRUYvSVFBTElBQkJBRWdOQVNNQVFTQnJJZ01rQUFKL0FrQUNRRUc1Z0FJZ0FTd0FBQkNoQWtVRVFFRzBqQVJCSERZQ0FBd0JDMEdZQ1JBM0lnSU5BUXRCQUF3QkN5QUNRUUJCa0FFUU9Cb2dBVUVyRUtFQ1JRUkFJQUpCQ0VFRUlBRXRBQUJCOGdCR0d6WUNBQXNDUUNBQkxRQUFRZUVBUndSQUlBSW9BZ0FoQVF3QkN5QUFRUU5CQUJBUklnRkJnQWh4UlFSQUlBTWdBVUdBQ0hLc053TVFJQUJCQkNBRFFSQnFFQkVhQ3lBQ0lBSW9BZ0JCZ0FGeUlnRTJBZ0FMSUFKQmZ6WUNVQ0FDUVlBSU5nSXdJQUlnQURZQ1BDQUNJQUpCbUFGcU5nSXNBa0FnQVVFSWNRMEFJQU1nQTBFWWFxMDNBd0FnQUVHVHFBRWdBeEFqRFFBZ0FrRUtOZ0pRQ3lBQ1FZQUNOZ0lvSUFKQmdRSTJBaVFnQWtHQ0FqWUNJQ0FDUVlNQ05nSU1RYzJNQkMwQUFFVUVRQ0FDUVg4MkFrd0xJQUpCdEkwRUtBSUFOZ0k0UWJTTkJDZ0NBQ0lCQkVBZ0FTQUNOZ0kwQzBHMGpRUWdBallDQUNBQ0N5RUJJQU5CSUdva0FDQUJJZ01OQVNBQUVBOGFDMEVBSVFNTElBUkJFR29rQUNBREMvQUJBUU4vSUFCRkJFQkJtT1VES0FJQUJFQkJtT1VES0FJQUVNMENJUUVMUVlEa0F5Z0NBQVJBUVlEa0F5Z0NBQkROQWlBQmNpRUJDMEcwalFRb0FnQWlBQVJBQTBBZ0FDZ0NUQm9nQUNnQ0ZDQUFLQUljUndSQUlBQVF6UUlnQVhJaEFRc2dBQ2dDT0NJQURRQUxDeUFCRHdzZ0FDZ0NURUVBVGlFQ0FrQUNRQ0FBS0FJVUlBQW9BaHhHRFFBZ0FFRUFRUUFnQUNnQ0pCRUVBQm9nQUNnQ0ZBMEFRWDhoQVF3QkN5QUFLQUlFSWdFZ0FDZ0NDQ0lEUndSQUlBQWdBU0FEYTZ4QkFTQUFLQUlvRVJNQUdndEJBQ0VCSUFCQkFEWUNIQ0FBUWdBM0F4QWdBRUlBTndJRUlBSkZEUUFMSUFFTG1RRUJBM3dnQUNBQW9pSURJQU1nQTZLaUlBTkVmTlhQV2pyWjVUMmlST3VjSzRybTVWcStvS0lnQXlBRFJIMytzVmZqSGNjK29rVFZZY0Vab0FFcXY2Q2lSS2I0RUJFUkVZRS9vS0FoQlNBRElBQ2lJUVFnQWtVRVFDQUVJQU1nQmFKRVNWVlZWVlZWeGIrZ29pQUFvQThMSUFBZ0F5QUJSQUFBQUFBQUFPQS9vaUFGSUFTaW9hSWdBYUVnQkVSSlZWVlZWVlhGUDZLZ29RdVNBUUVEZkVRQUFBQUFBQUR3UHlBQUlBQ2lJZ0pFQUFBQUFBQUE0RCtpSWdPaElnUkVBQUFBQUFBQThEOGdCS0VnQTZFZ0FpQUNJQUlnQWtTUUZjc1pvQUg2UHFKRWQxSEJGbXpCVnIrZ29rUk1WVlZWVlZXbFA2Q2lJQUlnQXFJaUF5QURvaUFDSUFKRTFEaUl2dW42cUwyaVJNU3h0TDJlN2lFK29LSkVyVktjZ0U5K2tyNmdvcUNpSUFBZ0FhS2hvS0FMUndBZ0FDQUJTUVJBSUFBZ0FTQUNFRDRhRHdzZ0FnUkFJQUFnQW1vaEFDQUJJQUpxSVFFRFFDQUFRUUZySWdBZ0FVRUJheUlCTFFBQU9nQUFJQUpCQVdzaUFnMEFDd3NML2dJQkJuOGdBQ2dDQkNFR0lBSkI4WlByM0FOUEJFQWdBQ2dDQUVLNGdJQ0FFRGNDRkNBQUlBQW9BZ0FvQWdBUkFRQUxRUWdnQWtFSGNTSURhMEVBSUFNYklRTWdBVUVDVHdSQUlBQW9BZ0FpQlNBQk5nSVlJQVZCRHpZQ0ZDQUFJQUFvQWdBb0FnQVJBUUFMSUFJZ0Eyb2hBd0pBQWtBZ0JpQUJRUUowYWlJSUtBSTBJZ0pGRFFBRFFDQURJQUlpQkNnQ0NFc0VRQ0FFS0FJQUlnSU5BUXdDQ3dzZ0JDRUJEQUVMSUFGQkFuUkJtTEVDUVpDeEFpQUVHMm9vQWdBaUFVSHdrK3ZjQXlBRGF5SUNJQUVnQWtrYklnSWdBMm9pQlVFUWFpSUhFRGNpQVVVRVFBTkFJQUpCNHdCTkJFQWdBQ2dDQUVLNGdJQ0FJRGNDRkNBQUlBQW9BZ0FvQWdBUkFRQUxJQUpCQVhZaUFTRUNJQUVnQTJvaUJVRVFhaUlIRURjaUFVVU5BQXNMSUFZZ0JpZ0NUQ0FIYWpZQ1RDQUJJQVUyQWdnZ0FVSUFOd01BSUFSRkJFQWdDQ0FCTmdJMERBRUxJQVFnQVRZQ0FBc2dBU0FCS0FJRUlnQWdBMm8yQWdRZ0FTQUJLQUlJSUFOck5nSUlJQUFnQVdwQkVHb0xwd0lCQlg4Z0FDZ0MxQU1oQWlBQUlBQW9BdEFES0FJSUVRQUFSUVJBSUFBb0FnQWlBVUVaTmdJVUlBQWdBU2dDQUJFQkFBc2dBQ2dDMUFKQkFFb0VRQU5BSUFBZ0EwRUNkQ0lGYWlnQzJBSWhCQUpBQWtBZ0FDZ0M0QUVFUUNBQUtBS2NBdzBCSUFBb0FxUUREUUlMSUFJZ0JDZ0NGRUVDZEdvb0Fqd2lBVUlBTndBQUlBRkNBRGNBT0NBQlFnQTNBREFnQVVJQU53QW9JQUZDQURjQUlDQUJRZ0EzQUJnZ0FVSUFOd0FRSUFGQ0FEY0FDQ0FDSUFWcUlnRkJBRFlDS0NBQlFRQTJBaGdnQUNnQzRBRkZCRUFnQUNnQ3RBTU5BUXdDQ3lBQUtBS2NBMFVOQVFzZ0FpQUVLQUlZUVFKMGFpZ0NmRUVBUVlBQ0VEZ2FDeUFEUVFGcUlnTWdBQ2dDMUFKSURRQUxDeUFDUVhBMkFoUWdBa0lBTndJTUlBSWdBQ2dDbUFJMkFqZ0x5UW9CREg4Z0FDZ0NHQ0lHS0FJRUlRUWdCaWdDQUNFRklBQWdBellDNUFFZ0FDQUNOZ0xnQVNBQUlBRTJBdHdCQWtBZ0JFVUVRQ0FBSUFZb0Fnd1JBQUJGRFFFZ0JpZ0NBQ0VGSUFZb0FnUWhCQXNnQlMwQUFDRUNJQVJCQVdzaUF3Ui9JQVZCQVdvRklBQWdCaWdDREJFQUFFVU5BU0FHS0FJRUlRTWdCaWdDQUFzaUJDMEFBQ0VISUFBZ0EwRUJheUlGQkg4Z0JFRUJhZ1VnQUNBR0tBSU1FUUFBUlEwQklBWW9BZ1FoQlNBR0tBSUFDeUlFTFFBQU5nTFVBU0FBSUFWQkFXc2lCUVIvSUFSQkFXb0ZJQUFnQmlnQ0RCRUFBRVVOQVNBR0tBSUVJUVVnQmlnQ0FBc2lCQzBBQUVFSWRDSUROZ0lnSUFBZ0JVRUJheUlGQkg4Z0JFRUJhZ1VnQUNBR0tBSU1FUUFBUlEwQklBQW9BaUFoQXlBR0tBSUVJUVVnQmlnQ0FBc2lCQzBBQUNBRGFqWUNJQ0FBSUFWQkFXc2lCUVIvSUFSQkFXb0ZJQUFnQmlnQ0RCRUFBRVVOQVNBR0tBSUVJUVVnQmlnQ0FBc2lCQzBBQUVFSWRDSUROZ0ljSUFBZ0JVRUJheUlGQkg4Z0JFRUJhZ1VnQUNBR0tBSU1FUUFBUlEwQklBQW9BaHdoQXlBR0tBSUVJUVVnQmlnQ0FBc2lCQzBBQUNBRGFqWUNIQ0FBSUFWQkFXc2lBd1IvSUFSQkFXb0ZJQUFnQmlnQ0RCRUFBRVVOQVNBR0tBSUVJUU1nQmlnQ0FBc2lCUzBBQURZQ0pDQUFLQUlBSWdFZ0FDZ0N1QU0yQWhnZ0FTQUFLQUljTmdJY0lBRWdBQ2dDSURZQ0lDQUFLQUlrSVFRZ0FVSG1BRFlDRkNBQklBUTJBaVFnQUVFQklBRW9BZ1FSQWdBZ0FDZ0MwQU1vQWhBRVFDQUFLQUlBSWdGQlBUWUNGQ0FBSUFFb0FnQVJBUUFMSUFKQkNIUWdCM0pCQ0dzaEFRSkFBa0FnQUNnQ0lFVU5BQ0FBS0FJY1JRMEFJQUFvQWlRaUJFRUFTZzBCQ3lBQUtBSUFJZ0pCSVRZQ0ZDQUFJQUlvQWdBUkFRQWdBQ2dDSkNFRUN5QUVRUU5zSUFGSEJFQWdBQ2dDQUNJQlFRdzJBaFFnQUNBQktBSUFFUUVBQ3lBQUtBTFlBVVVFUUNBQUlBQkJBU0FBS0FJa1FkZ0FiQ0FBS0FJRUtBSUFFUVFBTmdMWUFRc2dCVUVCYWlFSUlBTkJBV3NoQkNBQUtBSWtRUUJLQkVCQkFDRURBMEFnQkFSL0lBUUZJQUFnQmlnQ0RCRUFBRVVOQXlBR0tBSUFJUWdnQmlnQ0JBdEJBV3NoQ3lBQUtBTFlBU0VCSUFndEFBQWhBZ0pBSUFORkJFQWdBU0VFREFFTElBTkJBbXNoRENBRFFRRnJJUWtnQVNBS2FpRUhRUUFoQlNBQklRUURRQ0FDSUFRb0FnQkdCRUFnQVVIWUFHb2hCQ0FCS0FJQUlRVWdBMEVDVHdSQUlBeEJBMDhFUUNBSlFYeHhJUUZCQUNFQ0EwQWdCQ2dDaUFJaURDQUVLQUt3QVNJTklBUW9BbGdpRGlBRUtBSUFJZzhnQlNBRklBOUlHeUlGSUFVZ0RrZ2JJZ1VnQlNBTlNCc2lCU0FGSUF4SUd5RUZJQVJCNEFKcUlRUWdBa0VFYWlJQ0lBRkhEUUFMQzBFQUlRSWdDVUVEY1NJQkJFQURRQ0FFS0FJQUlna2dCU0FGSUFsSUd5RUZJQVJCMkFCcUlRUWdBa0VCYWlJQ0lBRkhEUUFMQ3lBSElRUUxJQVZCQVdvaEFnd0NDeUFFUWRnQWFpRUVJQVZCQVdvaUJTQURSdzBBQ3lBSElRUUxJQVFnQXpZQ0JDQUVJQUkyQWdBZ0JDQUxCSDhnQ0VFQmFnVWdBQ0FHS0FJTUVRQUFSUTBESUFZb0FnUWhDeUFHS0FJQUN5SUZMUUFBSWdGQkQzRTJBZ3dnQkNBQlFRUjJOZ0lJSUFRZ0MwRUJheUlCQkg4Z0JVRUJhZ1VnQUNBR0tBSU1FUUFBUlEwRElBWW9BZ1FoQVNBR0tBSUFDeUlDTFFBQU5nSVFJQUFvQWdBaUJ5QUVLQUlBTmdJWUlBY2dCQ2dDQ0RZQ0hDQUhJQVFvQWd3MkFpQWdCQ2dDRUNFRUlBZEI1d0EyQWhRZ0J5QUVOZ0lrSUFCQkFTQUhLQUlFRVFJQUlBcEIyQUJxSVFvZ0FrRUJhaUVJSUFGQkFXc2hCQ0FEUVFGcUlnTWdBQ2dDSkVnTkFBc0xJQUFvQXRBRFFRRTJBaEFnQmlBRU5nSUVJQVlnQ0RZQ0FFRUJEd3RCQUF2UkVnSU9mUWwvSUFWRkJFQWpBRUVnYXlJRkpBQkRJTHkrVENFR0FrQWdBMEVFU0EwQUlBQXFBaXhEQUFBQUFGc05BQ0FEUVFaMEVEY2lGMFVFUUVFQVFRTkJzNVFDUVFBUU9VTUFBSUMvSVFZTUFRc2dBMEVEZEJBM0loZ0VRQU5BUVFBaEZpQVZRUU5HQkVBZ0EwRUJkQ0VaSUFPeUlSRUNRQU5BSUFRcUFpUWhFaUFFS2dJZ0lROURBQUFBQUNFS1FRQWhGUU5BSUFNZ0ZVY0VRQ0FQSUFJZ0ZVRU1iR29pQUNvQ0FDSUlsQ0FBS2dJRUlna2dFcFNTUXdBQWdEK1NJZ1pEQUFBQUFGc05BeUFCSUJWQkEzUWlBR29pR2lvQ0FDRUxJQVFxQWd3aERpQUVLZ0lBSVJBZ0JDb0NCQ0VUSUFBZ0dHb2lBQ0FhS2dJRUlBUXFBaHdnQkNvQ0VDQUlsQ0FKSUFRcUFoU1VrcElpRENBR2xaTWlEVGdDQkNBQUlBc2dEaUFRSUFpVUlBa2dFNVNTa2lJTElBYVZreUlPT0FJQUlCY2dGVUVHZEdvaUFDQUpJQWFWSWhBNEFnUWdBQ0FJSUFhVkloTTRBZ0FnQUVNQUFJQS9JQWFWSWhRNEFnZ2dBRUlBTndJTUlBQkJBRFlDRkNBQUlBc2dDSXdpQ0pRZ0JpQUdsQ0lHbFRnQ0dDQUFJQXNnQ1l3aUNaUWdCcFU0QWh3Z0FFSUFOd0lnSUFCQkFEWUNLQ0FBSUJNNEFpd2dBQ0FRT0FJd0lBQWdGRGdDTkNBQUlBd2dDSlFnQnBVNEFqZ2dBQ0FNSUFtVUlBYVZPQUk4SUFvZ0RpQU9sQ0FOSUEyVWtwSWhDaUFWUVFGcUlSVU1BUXNMQWtBZ0NpQVJsU0lHUTgzTXpEMWREUUFDUUNBV1JTQUdRd0FBZ0VCZFJYSkZCRUFnQmlBSGxVT2tjSDAvWGcwQ0lCWkJDa2NOQVF3Q0N5QVdRUXBHRFFFTElBVWdHQ0FYSUJrUXZBVkJBRWdOQWlBRUlBVXFBZ0FnQkNvQ0FKSTRBZ0FnQkNBRktnSUVJQVFxQWdTU09BSUVJQVFnQlNvQ0NDQUVLZ0lNa2pnQ0RDQUVJQVVxQWd3Z0JDb0NFSkk0QWhBZ0JDQUZLZ0lRSUFRcUFoU1NPQUlVSUFRZ0JTb0NGQ0FFS2dJY2tqZ0NIQ0FFSUFVcUFoZ2dCQ29DSUpJNEFpQWdCQ0FGS2dJY0lBUXFBaVNTT0FJa0lCWkJBV29oRmlBR0lRY01BUXNMSUJjUU1TQVlFREVNQkFzZ0Z4QXhJQmdRTVVNZ3ZMNU1JUVlNQXdVRFFDQVdRUVJIQkVBZ0ZrRUNkQ0laSUFRZ0ZVRUVkQ0lhYW1vZ0FDQWFhaUFaYWlvQ0FDQUFLZ0lzbFRnQ0FDQVdRUUZxSVJZTUFRc0xJQlZCQVdvaEZRd0JDd0FMQUF0QkFFRURRYk9VQWtFQUVEa2dGeEF4UXdBQWdMOGhCZ3NnQlVFZ2FpUUFJQVlQQ3lBR0lRZ2pBRUVnYXlJV0pBQkRJTHkrVENFR0FrQWdBMEVFU0EwQUlBQXFBaXhEQUFBQUFGc05BQUovSUFPeUlnNGdDSlFpQm90REFBQUFUMTBFUUNBR3FBd0JDMEdBZ0lDQWVBc2hCU0FEUVFaMEVEY2lGVVVFUUVFQVFRTkJzNVFDUVFBUU9VTUFBSUMvSVFZTUFRc2dBMEVEZEJBM0loaEZCRUJCQUVFRFFiT1VBa0VBRURrZ0ZSQXhRd0FBZ0w4aEJnd0JDeUFEUVFKMEloY1FOeUlhUlFSQVFRQkJBMEd6bEFKQkFCQTVJQlVRTVNBWUVERkRBQUNBdnlFR0RBRUxJQmNRTnlJWkJFQWdCVUVGSUFWQkJVb2JRUUZySVJ0QkFDRVhBMEJCQUNFRklCZEJBMFlFUUNBWklCdEJBblJxSVIxQkFDRVhBa0FEUUNBRUtnSWtJUkVnQkNvQ0lDRVNRUUFoQlFOQUlBTWdCVWNFUUNBU0lBSWdCVUVNYkdvaUFDb0NBQ0lJbENBQUtnSUVJZ2tnRVpTU1F3QUFnRCtTSWdaREFBQUFBRnNOQXlBQklBVkJBM1FpQUdvaUd5b0NBQ0VOSUFRcUFnd2hDeUFFS2dJQUlROGdCQ29DQkNFUUlBQWdHR29pQUNBYktnSUVJQVFxQWh3Z0JDb0NFQ0FJbENBSklBUXFBaFNVa3BJaUNpQUdsWk1pRERnQ0JDQUFJQTBnQ3lBUElBaVVJQWtnRUpTU2tpSU5JQWFWa3lJTE9BSUFJQmtnQlVFQ2RDSUFhaUFMSUF1VUlBd2dESlNTSWd3NEFnQWdBQ0FhYWlBTU9BSUFJQlVnQlVFR2RHb2lBQ0FKSUFhVklndzRBZ1FnQUNBSUlBYVZJZ3M0QWdBZ0FFTUFBSUEvSUFhVklnODRBZ2dnQUVJQU53SU1JQUJCQURZQ0ZDQUFJQTBnQ0l3aUNKUWdCaUFHbENJR2xUZ0NHQ0FBSUEwZ0NZd2lDWlFnQnBVNEFod2dBRUlBTndJZ0lBQkJBRFlDS0NBQUlBczRBaXdnQUNBTU9BSXdJQUFnRHpnQ05DQUFJQW9nQ0pRZ0JwVTRBamdnQUNBS0lBbVVJQWFWT0FJOElBVkJBV29oQlF3QkN3c2dHU0FEUVFSQitBQVFsZ1VnSFNvQ0FFTUFBSUJBbEVNQUFJQkJseUlJUXdBQXdFQ1ZJUWxCQUNFRlF3QUFBQUFoQmdOQUlBTWdCVWNFUUNBSUlCa2dCVUVDZEdvcUFnQWlDbDBFZlNBSklBYVNCU0FKUXdBQWdEOURBQUNBUHlBS0lBaVZreUlLSUFxVUlBcVVrNVFnQnBJTElRWWdCVUVCYWlFRkRBRUxDd0pBSUFZZ0RwVWlCa1BOek13OVhRMEFBa0FnRjBVZ0JrTUFBSUJBWFVWeVJRUkFJQVlnQjVWRHBIQjlQMTROQWlBWFFRcEhEUUVNQWdzZ0YwRUtSZzBCQzBFQUlSdEJBQ0VjQTBBZ0F5QWJSd1JBSUFnZ0dpQWJRUUowYWlvQ0FDSUhZQVJBSUJVZ0hFRUZkR29pQUVNQUFJQS9JQWNnQ0pXVElnY2dCNVFpQnlBVklCdEJCblJxSWdVcUFnQ1VPQUlBSUFBZ0J5QUZLZ0lFbERnQ0JDQUFJQWNnQlNvQ0NKUTRBZ2dnQUNBSElBVXFBZ3lVT0FJTUlBQWdCeUFGS2dJUWxEZ0NFQ0FBSUFjZ0JTb0NGSlE0QWhRZ0FDQUhJQVVxQWhpVU9BSVlJQUFnQnlBRktnSWNsRGdDSENBQUlBY2dCU29DSUpRNEFpQWdBQ0FISUFVcUFpU1VPQUlrSUFBZ0J5QUZLZ0lvbERnQ0tDQUFJQWNnQlNvQ0xKUTRBaXdnQUNBSElBVXFBakNVT0FJd0lBQWdCeUFGS2dJMGxEZ0NOQ0FBSUFjZ0JTb0NPSlE0QWpnZ0FDQUhJQVVxQWp5VU9BSThJQmdnSEVFQ2RHb2lBQ0FISUJnZ0cwRURkR29pQlNvQ0FKUTRBZ0FnQUNBSElBVXFBZ1NVT0FJRUlCeEJBbW9oSEFzZ0cwRUJhaUViREFFTEN5QWNRUVZNQkVBZ0ZSQXhJQmdRTVNBYUVERWdHUkF4UXdBQWdMOGhCZ3dIQ3lBV0lCZ2dGU0FjRUx3RlFRQklEUUlnQkNBV0tnSUFJQVFxQWdDU09BSUFJQVFnRmlvQ0JDQUVLZ0lFa2pnQ0JDQUVJQllxQWdnZ0JDb0NESkk0QWd3Z0JDQVdLZ0lNSUFRcUFoQ1NPQUlRSUFRZ0Zpb0NFQ0FFS2dJVWtqZ0NGQ0FFSUJZcUFoUWdCQ29DSEpJNEFod2dCQ0FXS2dJWUlBUXFBaUNTT0FJZ0lBUWdGaW9DSENBRUtnSWtramdDSkNBWFFRRnFJUmNnQmlFSERBRUxDeUFWRURFZ0dCQXhJQm9RTVNBWkVERU1CQXNnRlJBeElCZ1FNU0FhRURFZ0dSQXhReUM4dmt3aEJnd0RCUU5BSUFWQkJFY0VRQ0FGUVFKMElod2dCQ0FYUVFSMEloMXFhaUFBSUIxcUlCeHFLZ0lBSUFBcUFpeVZPQUlBSUFWQkFXb2hCUXdCQ3dzZ0YwRUJhaUVYREFFTEFBc0FDMEVBUVFOQnM1UUNRUUFRT1NBVkVERWdHQkF4SUJvUU1VTUFBSUMvSVFZTElCWkJJR29rQUNBR0M5WVBBd2gvQlh3RWZTTUFRZUFCYXlJSEpBQWdCeUFFUVFSMEVEY2lDVFlDMEFFZ0NRUkFBa0FnQnlBRVFSaHNFRGNpQ3pZQzFBRWdDMFVOQUNBRVFRQWdCRUVBU2hzaERRTkFJQWdnRFVjRVFDQVVJQU1nQ0VFTWJHb2lDaW9DQ0pJaEZDQVZJQW9xQWdTU0lSVWdGaUFLS2dJQWtpRVdJQWhCQVdvaENBd0JDd3NnRkNBRXNpSVhsU0VVSUJVZ0Y1VWhGU0FXSUJlVklSWkJBQ0VJQTBBZ0NDQU5Sd1JBSUFrZ0NFRUVkR29pQ2lBQ0lBaEJBM1JxSWd3cUFnQzdPUU1BSUFvZ0RDb0NCTHM1QXdnZ0N5QUlRUmhzYWlJS0lBTWdDRUVNYkdvaURDb0NBQ0FXazdzNUF3QWdDaUFNS2dJRUlCV1R1emtEQ0NBS0lBd3FBZ2dnRkpPN09RTVFJQWhCQVdvaENBd0JDd3NnQnlBRU5nTFlBVUVBSVFJRFFFRUFJUWdnQWtFRFJ3UkFBMEFnQ0VFRFJ3UkFJQWRCOEFCcUlBSkJCWFJxSUFoQkEzUnFJQUVnQWtFRWRHb2dDRUVDZEdvcUFnQzdPUU1BSUFoQkFXb2hDQXdCQ3dzZ0FrRUJhaUVDREFFTEN5QUhJQUVxQWd3Z0FTb0NDQ0FVbENBQktnSUFJQmFVSUJVZ0FTb0NCSlNTa3BLN09RT0lBU0FISUFFcUFod2dBU29DR0NBVWxDQUJLZ0lRSUJhVUlCVWdBU29DRkpTU2twSzdPUU9vQVNBSElBRXFBaXdnQVNvQ0tDQVVsQ0FCS2dJZ0lCYVVJQlVnQVNvQ0pKU1NrcEs3T1FQSUFRSkFJQVpGQkVBZ0FDQUhRZEFCYWlBSFFmQUFhaUFIUVJCcUlBZEJDR29RNmdWQkFFNE5BU0FIUW9DQWdJREE4UFhMd1FBM0F3Z01BUXNnQjBId0FHb2hDeUFIUVJCcUlRb2pBRUdnQVdzaUF5UUFRWDhoQVFKQUlBY29BdGdCSWdKQkJFZ05BQUovSUFBckE0QUJJQUszb2lJUW1VUUFBQUFBQUFEZ1FXTUVRQ0FRcWd3QkMwR0FnSUNBZUFzaENTQUNRZUFBYkJBM0lnUkZCRUJCQUVFRFFaNExRUUFRT1F3QkN5QUNRUVIwRURjaUJrVUVRRUVBUVFOQm5ndEJBQkE1SUFRUU1Rd0JDeUFDUVFOMElnRVFOeUlOUlFSQVFRQkJBMEdlQzBFQUVEa2dCQkF4SUFZUU1VRi9JUUVNQVFzZ0FSQTNJZ2dFUUNBSlFRUWdDVUVFU2h0QkFXc2hDVUVBSVFJRFFFRUFJUUVnQWtFRFJnUkFJQWdnQ1VFRGRHb2hEa0VBSVF3Q1FBTkFJQUFnQ2lBRFFUQnFFUHNHUVFBaEFRTkFJQWNvQXRnQklnSWdBVW9FUUNBRFFaQUJhaUFEUVRCcUlBY29BdFFCSUFGQkdHeHFFSThHUVFCSURRTWdBVUVFZENJQ0lBY29BdEFCYWlJSkt3TUFJUkVnQXlzRGtBRWhFaUFDSUFacUlnSWdDU3NEQ0NBREt3T1lBYUVpRURrRENDQUNJQkVnRXFFaUVUa0RBQ0FJSUFGQkEzUWlBbW9nRVNBUm9pQVFJQkNpb0NJUU9RTUFJQUlnRFdvZ0VEa0RBQ0FCUVFGcUlRRU1BUXNMSUFnZ0FrRUlRUUVRbGdWQkFDRUJJQWNvQXRnQklnSkJBQ0FDUVFCS0d5RUpJQTRyQXdCRUFBQUFBQUFBRUVDaVJBQUFBQUFBQURCQXBTSVJSQUFBQUFBQUFCaEFveUVTUkFBQUFBQUFBQUFBSVJBRFFDQUJJQWxIQkVBZ0VTQUlJQUZCQTNScUt3TUFJaE5qQkh3Z0VpQVFvQVVnRWtRQUFBQUFBQUR3UDBRQUFBQUFBQUR3UHlBVElCR2pvU0lUSUJPaUlCT2lvYUlnRUtBTElSQWdBVUVCYWlFQkRBRUxDd0pBSUJBZ0FyZWpJaEFnQUNzRGFHTU5BQUpBSUF4RkRRQWdFQ0FBS3dONFkwVU5BQ0FBS3dOd0lCQWdENk5qRFFFTFFRQWhDVUVBSVFzZ0RDQUFLQUpnUmcwQUEwQWdBaUFKU2dSQUlCRWdEU0FKUVFOMGFpc0RBQ0lQWmdSQUlBUWdDMEV3YkNJQ2FpSUJJQUFnQ2lBSEtBTFVBU0FKUVJoc2FoQ0lCa0VBU0EwRklBRkVBQUFBQUFBQThEOGdEeUFSbzZFaUR5QVBvaUlQSUFFckF3Q2lPUU1BSUFRZ0FrRUljbW9pQWlBUElBSXJBd0NpT1FNQUlBRWdEeUFCS3dNUW9qa0RFQ0FCSUE4Z0FTc0RHS0k1QXhnZ0FTQVBJQUVyQXlDaU9RTWdJQUVnRHlBQkt3TW9vamtES0NBQklBOGdBU3NETUtJNUF6QWdBU0FQSUFFckF6aWlPUU00SUFGQlFHc2lBaUFQSUFJckF3Q2lPUU1BSUFFZ0R5QUJLd05Jb2prRFNDQUJJQThnQVNzRFVLSTVBMUFnQVNBUElBRXJBMWlpT1FOWUlBWWdDMEVEZEdvaUFTQVBJQVlnQ1VFRWRHb2lBaXNEQUtJNUF3QWdBU0FQSUFJckF3aWlPUU1JSUF0QkFtb2hDeUFIS0FMWUFTRUNDeUFKUVFGcUlRa01BUXNMSUF0QkJVd05BaUFESUFZZ0JDQUxFSVFHUVFCSURRSWdDaUFERVBzRklBeEJBV29oRENBUUlROE1BUXNMSUFjZ0VEa0RDQ0FFRURFZ0JoQXhJQTBRTVNBSUVERkJBQ0VCREFRTElBUVFNU0FHRURFZ0RSQXhJQWdRTVVGL0lRRU1Bd1VEUUNBQlFRUkhCRUFnQVVFRGRDSU1JQW9nQWtFRmRDSU9hbW9nQ3lBT2FpQU1haXNEQURrREFDQUJRUUZxSVFFTUFRc0xJQUpCQVdvaEFnd0JDd0FMQUF0QkFFRURRWjRMUVFBUU9TQUVFREVnQmhBeElBMFFNVUYvSVFFTElBTkJvQUZxSkFBZ0FVRUFUZzBBSUFkQ2dJQ0FnTUR3OWN2QkFEY0RDQXNnQnlnQzBBRVFNU0FIS0FMVUFSQXhRUUFoQWdOQVFRQWhDQ0FDUVFOSEJFQURRQ0FJUVFOSEJFQWdCU0FDUVFSMGFpQUlRUUowYWlBSFFSQnFJQUpCQlhScUlBaEJBM1JxS3dNQXRqZ0NBQ0FJUVFGcUlRZ01BUXNMSUFKQkFXb2hBZ3dCQ3dzZ0JTQUhLd01vSUFjckF4QWdGcnNpRUtLaElBY3JBeGdnRmJzaUQ2S2hJQWNyQXlBZ0ZMc2lFYUtodGpnQ0RDQUZJQWNyQTBnZ0J5c0RNQ0FRb3FFZ0J5c0RPQ0FQb3FFZ0IwRkFheXNEQUNBUm9xRzJPQUljSUFVZ0J5c0RhQ0FIS3dOUUlCQ2lvU0FIS3dOWUlBK2lvU0FIS3dOZ0lCR2lvYlk0QWl3Z0J5c0RDQ0VRSUFkQjRBRnFKQUFnRUxZUEN3dEJBRUVEUWIrVkFrRUFFRGxCQVJBQ0FBdnRBUUlCZndSOUl3QkJNR3NpQmlRQUFuOGdBQVJBSUFCQkNHb2dBU0FHRUxrRElBQkJ1QUZxSUFZcUFnd2dCaW9DQUNBQ2xDQUdLZ0lFSUFPVWtwSWdCaW9DTENBR0tnSWdJQUtVSUFZcUFpUWdBNVNTa2lJSGxTQUdLZ0ljSUFZcUFoQWdBcFFnQmlvQ0ZDQURsSktTSUFlVklBUWdCUkJ3UVI5MURBRUxJQUVxQWh3aEJ5QUJLZ0lVSVFnZ0FTb0NFQ0VKSUFRZ0FTb0NEQ0FCS2dJQUlBS1VJQUVxQWdRZ0E1U1NraUFCS2dJc0lBRXFBaUFnQXBRZ0FTb0NKQ0FEbEpLU0lncVZPQUlBSUFVZ0J5QUpJQUtVSUFnZ0E1U1NraUFLbFRnQ0FFRUFDeUVCSUFaQk1Hb2tBQ0FCQzdVQ0FRVi9BMEJCQUNFQ0lBRW9Ba3dhUWY4QklRVWdBQ0VEQWtBRFFBSkFBa0FDUUNBQktBSUVJZ0lnQVNnQ0NDSUVSZzBBQW44Z0FrRUtJQVFnQW1zUTRRTWlCZ1JBSUFZZ0FTZ0NCQ0lDYTBFQmFnd0JDeUFCS0FJSUlBRW9BZ1FpQW1zTElRUWdBeUFDSUFRZ0JTQUVJQVZKR3lJQ0VENGFJQUVnQVNnQ0JDQUNhaUlFTmdJRUlBSWdBMm9oQXlBR0RRSWdCU0FDYXlJRlJRMENJQVFnQVNnQ0NFWU5BQ0FCSUFSQkFXbzJBZ1FnQkMwQUFDRUNEQUVMSUFFUWp3TWlBa0VBVGcwQVFRQWhBaUFBSUFOR0RRTWdBUzBBQUVFUWNRMEJEQU1MSUFNZ0Fqb0FBQ0FEUVFGcUlRTWdBa0gvQVhGQkNrWU5BQ0FGUVFGcklnVU5BUXNMSUFCRkJFQkJBQ0VDREFFTElBTkJBRG9BQUNBQUlRSUxJQUlFUUNBQUxRQUFJZ05CQ2tZZ0EwRWpSbklOQVFzTElBSUxGUUFnQUVNQUFJQS9JQUVnQVVNQUFBQUFXeHVWQ3lJQUlBQWdBU29DQUNBQ0tnSUFremdDQUNBQUlBRXFBZ1FnQWlvQ0JKTTRBZ1FMRVFBZ0FFVUVRQThMSUFBZ0FUa0RnQUVMRVFBZ0FCRHdCU0FCRVBBRklBSVFvZ1lMSmdFQmZ5QUFRUVJxRUlBRUlnRkJmMFlFUUNBQUlBQW9BZ0FvQWdnUkFRQUxJQUZCZjBZTERRQWdBQ2dDQUJBeElBQVFNUXNsQVFGL0l3QkJFR3NpQVNRQUlBRkJDR29nQUJDWkJpZ0NBQ0VBSUFGQkVHb2tBQ0FBQzVnQkFRUi9Jd0JCRUdzaUF5UUFBa0FnQVJDUkFVVUVRQ0FBSUFFb0FnZzJBZ2dnQUNBQktRSUFOd0lBREFFTElBRW9BZ0FoQkFKQUFrQUNRQ0FCS0FJRUlnSVEvQUlFUUNBQUlnRWdBaENTQVF3QkN5QUNRVzlMRFFFZ0FDQUNFSnNDUVFGcUlnVVFWeUlCRUpnQklBQWdCUkN4QVNBQUlBSVFpUUVMSUFFZ0JDQUNRUUZxRUxRQkRBRUxFTEFCQUFzTElBTkJFR29rQUFzY0FDQUFFSThFSWdCQjNNa0JOZ0lBSUFCQkJHb2dBUkRmQWlBQUMrc1VBZzEvQVgwakFFRVFheUlOSkFBZ0FTZ0NBRUVDUmdSQUFrQUNRQUpBQWtBQ1FDQUNLQUlBRGdNQkF3QUNDeUFCS0FJWUlRc2dBRUVzYWtFQUVEb2hBQ0FDS0FJWUlRZ2dBaWdDQ0NFS0FrQWdBaWdDQkNJSFFRUkxCRUFnQ2tFRVN3UkFJQWRCQW1zaEJpQUhRUUZyUVFKMElRa2dCMEVEYTBFQ2RDRU1JQWRCQkd0QkFuUWhEaUFBSVFFRFFBSkFJQU1nQ2tZRVFFRUFJUVVnQ3lFQ0lBZEJBblFpQkNBQUlnWnFJZ0VoQXlBQklBUnFJZ1FoQ0F3QkMwRUNJUVVnQVNBSUlBTWdCMnhCQW5ScUlnSXFBZ2dnQWlvQ0FDSVFJQkJEQUFEQVFKUWdFQ0FDS2dJRWtrTUFBSUJBbEpLU2tqZ0NBQ0FCSUFJcUFnd2dBaW9DQUNJUUlBSXFBZ1JEQUFEQVFKUWdFQ0FDS2dJSWtrTUFBSUJBbEpLU2tqZ0NCQ0FCUVFocUlRUURRQ0FGSUFaR0JFQWdCQ0FDSUFscUlnRXFBZ0FpRUNBQ0lBNXFLZ0lBSUFJZ0JrRUNkR29pQlNvQ0FFTUFBTUJBbENBUUlBSWdER29pQWlvQ0FKSkRBQUNBUUpTU2twSTRBZ0FnQkNBQktnSUFJaEFnQWlvQ0FDQVFRd0FBd0VDVUlCQWdCU29DQUpKREFBQ0FRSlNTa3BJNEFnUWdBMEVCYWlFRElBUkJDR29oQVF3REJTQUVJQUlnQlVFQ2RHb2lBU29DQ0NBQlFRaHJLZ0lBSUFFcUFnQkRBQURBUUpRZ0FVRUVheW9DQUNBQ0lBVkJBV29pQlVFQ2RHb3FBZ0NTUXdBQWdFQ1VrcEtTT0FJQUlBUkJCR29oQkF3QkN3QUxBQXNMQTBBZ0JTQUhSd1JBSUFJZ0NDb0NBQ0FHS2dJQUloQWdFRU1BQU1CQWxDQVFJQU1xQWdDU1F3QUFnRUNVa3BLU1F3QUFnRHVVT0FJQUlBaEJCR29oQ0NBRFFRUnFJUU1nQmtFRWFpRUdJQUpCQkdvaEFpQUZRUUZxSVFVTUFRc0xJQXNnQjBFQ2RDSURhaUVDSUFNZ0JHb2hCa0VBSVFVZ0FDRURBMEFnQlNBSFJnUkFBa0FnQ2tFQ2F5RU1RUUloQ1FOQUFrQWdDU0FNUmdSQUlBQWdDa0VFYXlBSGJFRUNkR29pQVNBSFFRSjBJZ05xSWdRZ0Eyb2lBaUFEYWlFR0lBc2dCeUFNYkVFQ2RHb2hBMEVBSVFVTUFRc2dBQ0FKUVFKcklBZHNRUUowYWlJQklBZEJBblFpQTJvaUJDQURhaUlDSUFOcUlnWWdBMm9oQXlBTElBY2dDV3hCQW5ScUlRaEJBQ0VGQTBBZ0JTQUhSZ1JBSUFsQkFXb2hDUXdEQlNBSUlBTXFBZ0FnQVNvQ0FDQUNLZ0lBUXdBQXdFQ1VJQVFxQWdBZ0Jpb0NBSkpEQUFDQVFKU1NrcEpEQUFDQU81UTRBZ0FnQTBFRWFpRURJQVpCQkdvaEJpQUNRUVJxSVFJZ0JFRUVhaUVFSUFGQkJHb2hBU0FJUVFScUlRZ2dCVUVCYWlFRkRBRUxBQXNBQ3dzRFFDQUZJQWRIQkVBZ0F5QUdLZ0lBSWhBZ0FTb0NBQ0FDS2dJQVF3QUF3RUNVSUJBZ0JDb0NBSkpEQUFDQVFKU1NrcEpEQUFDQU81UTRBZ0FnQmtFRWFpRUdJQUpCQkdvaEFpQUVRUVJxSVFRZ0FVRUVhaUVCSUFOQkJHb2hBeUFGUVFGcUlRVU1BUXNMSUFBZ0NrRURheUFIYkVFQ2RHb2lBU0FIUVFKMElnQnFJZ1FnQUdvaEFpQUxJQXBCQVdzZ0IyeEJBblJxSVFaQkFDRUZBMEFnQlNBSFJnMEJJQVlnQWlvQ0FDSVFJQUVxQWdBZ0VFTUFBTUJBbENBUUlBUXFBZ0NTUXdBQWdFQ1VrcEtTUXdBQWdEdVVPQUlBSUFKQkJHb2hBaUFFUVFScUlRUWdBVUVFYWlFQklBWkJCR29oQmlBRlFRRnFJUVVNQUFzQUN3VWdBaUFHS2dJQUlBTXFBZ0FpRUNBQktnSUFRd0FBd0VDVUlCQWdCQ29DQUpKREFBQ0FRSlNTa3BKREFBQ0FPNVE0QWdBZ0JrRUVhaUVHSUFSQkJHb2hCQ0FCUVFScUlRRWdBMEVFYWlFRElBSkJCR29oQWlBRlFRRnFJUVVNQVFzTERBSUxRYkNsQkVHNkp4QXdRZTBTRURCQnNSa1FNRUdwQVJBelFkb2RFREJCMXlBUU1CQTBFQUFBQzBHd3BRUkIrd2dRTUVIdEVoQXdRYkVaRURCQnFBRVFNMEhhSFJBd1FkY2dFREFRTkJBQUFBc01Bd3RCRUJBSElBMUIvKzBBRUVnUTRBSkJuTWtCUVE4UUJnQUxRUkFRQnlBTlFhL3lBQkJJRU9BQ1FaekpBVUVQRUFZQUN5QUJLQUlZSVFzZ0FDZ0NJQ0VBSUFJb0FoZ2hDQ0FDS0FJSUlRb0NRQ0FDS0FJRUlnZEJCRXNFUUNBS1FRUkxCRUFnQjBFRWF5RUpJQWRCQTJzaERDQUhRUUpySVFZZ0IwRUJheUVPSUFBaEFRTkFBa0FnQXlBS1JnUkFRUUFoQlNBTElRSWdCMEVCZENJRUlBQWlCbW9pQVNFRElBRWdCR29pQkNFSURBRUxRUUloQlNBQklBZ2dBeUFIYkdvaUFpMEFBQ0lFUVFkc0lBSXRBQUpxSUFJdEFBRWdCR3BCQW5ScU93RUFJQUVnQWkwQUF5QUNMUUFBSWdRZ0FpMEFBVUVHYkdwcUlBSXRBQUlnQkdwQkFuUnFPd0VDSUFGQkJHb2hCQU5BSUFVZ0JrWUVRQ0FFSUFJZ0NXb3RBQUFnQWlBT2FpSUJMUUFBSWdVZ0FpQUdhaUlQTFFBQVFRWnNhbW9nQlNBQ0lBeHFJZ0l0QUFCcVFRSjBhanNCQUNBRUlBSXRBQUFnQVMwQUFDSUJRUWRzYWlBUExRQUFJQUZxUVFKMGFqc0JBaUFEUVFGcUlRTWdCRUVFYWlFQkRBTUZJQVFnQWlBRmFpSUJMUUFBUVFac0lBRkJBbXN0QUFCcUlBSWdCVUVCYWlJRmFpMEFBQ0FCUVFGckxRQUFha0VDZEdvZ0FTMEFBbW83QVFBZ0JFRUNhaUVFREFFTEFBc0FDd3NEUUNBRklBZEhCRUFnQWlBSUx3RUFJQVl2QVFBaUNVRUhiQ0FETHdFQUlBbHFRUUowYW1xeVF3QUFnRHVVT0FJQUlBaEJBbW9oQ0NBRFFRSnFJUU1nQmtFQ2FpRUdJQUpCQkdvaEFpQUZRUUZxSVFVTUFRc0xJQXNnQjBFQ2RHb2hBaUFFSUFkQkFYUnFJUVpCQUNFRklBQWhBd05BSUFVZ0IwWUVRQUpBSUFwQkFtc2hERUVDSVFrRFFBSkFJQWtnREVZRVFDQUFJQXBCQkdzZ0IyeEJBWFJxSWdFZ0IwRUJkQ0lEYWlJRUlBTnFJZ0lnQTJvaEJpQUxJQWNnREd4QkFuUnFJUU5CQUNFRkRBRUxJQUFnQ1VFQ2F5QUhiRUVCZEdvaUFTQUhRUUYwSWdOcUlnUWdBMm9pQWlBRGFpSUdJQU5xSVFNZ0N5QUhJQWxzUVFKMGFpRUlRUUFoQlFOQUlBVWdCMFlFUUNBSlFRRnFJUWtNQXdVZ0NDQURMd0VBSUFFdkFRQWdBaThCQUVFR2JHb2dCaThCQUNBRUx3RUFha0VDZEdwcXNrTUFBSUE3bERnQ0FDQURRUUpxSVFNZ0JrRUNhaUVHSUFKQkFtb2hBaUFFUVFKcUlRUWdBVUVDYWlFQklBaEJCR29oQ0NBRlFRRnFJUVVNQVFzQUN3QUxDd05BSUFVZ0IwY0VRQ0FESUFFdkFRQWdBaThCQUVFR2JHb2dCaThCQUNJSUlBUXZBUUJxUVFKMGFpQUlhckpEQUFDQU81UTRBZ0FnQmtFQ2FpRUdJQUpCQW1vaEFpQUVRUUpxSVFRZ0FVRUNhaUVCSUFOQkJHb2hBeUFGUVFGcUlRVU1BUXNMSUFBZ0NrRURheUFIYkVFQmRHb2lBU0FIUVFGMElnQnFJZ1FnQUdvaEFpQUxJQXBCQVdzZ0IyeEJBblJxSVFaQkFDRUZBMEFnQlNBSFJnMEJJQVlnQVM4QkFDQUNMd0VBSWdCQkJteHFJQUFnQkM4QkFHcEJBblJxSUFCcXNrTUFBSUE3bERnQ0FDQUNRUUpxSVFJZ0JFRUNhaUVFSUFGQkFtb2hBU0FHUVFScUlRWWdCVUVCYWlFRkRBQUxBQXNGSUFJZ0JpOEJBQ0FETHdFQUlnZ2dBUzhCQUVFR2JHb2dCQzhCQUNBSWFrRUNkR3Bxc2tNQUFJQTdsRGdDQUNBR1FRSnFJUVlnQkVFQ2FpRUVJQUZCQW1vaEFTQURRUUpxSVFNZ0FrRUVhaUVDSUFWQkFXb2hCUXdCQ3dzTUFndEJzS1VFUWJvbkVEQkI3UklRTUVHeEdSQXdRVGdRTTBIYUhSQXdRZGNnRURBUU5CQUFBQXRCc0tVRVFmc0lFREJCN1JJUU1FR3hHUkF3UVRjUU0wSGFIUkF3UWRjZ0VEQVFOQkFBQUFzTElBMUJFR29rQUE4TFFiQ2xCRUdrNXdBUU1FSHRFaEF3UWJFWkVEQkI1UUlRTTBIYUhSQXdRZC9xQUJBd0VEUVFBQUFMRFFBZ0FFSC8vLy8vQVJDNkFndGtBUUovSXdCQkVHc2lCU1FBSUFWQkFEWUNEQ0FBUVF4cUlBTVEwQUVnQVFSQUlBQW9BaEFnQVJDVUJDRUVDeUFBSUFRMkFnQWdBQ0FFSUFKQkEzUnFJZ0kyQWdnZ0FDQUNOZ0lFSUFBUVBDQUVJQUZCQTNScU5nSUFJQVZCRUdva0FDQUFDd3dBSUFFZ0Fpa0NBRGNDQUFzckFDQUFLQUlBR2lBQUtBSUFJQUFRcEFGQkRHeHFHaUFBS0FJQUdpQUFLQUlBSUFBUVUwRU1iR29hQ3cwQUlBQkIvLy8vL3dNUXVnSUxVQUVCZnlBQUVPNENJQUFRTWlBQUtBSUFJQUFvQWdRZ0FVRUVhaUlDRUpVQ0lBQWdBaEJGSUFCQkJHb2dBVUVJYWhCRklBQVFNaUFCRUR3UVJTQUJJQUVvQWdRMkFnQWdBQ0FBRUVJUXRBSUxOQUFnQUNnQ0FCb2dBQ2dDQUNBQUVNVUJRUU4wYWhvZ0FDZ0NBQ0FBRUVGQkEzUnFHaUFBS0FJQUlBQVF4UUZCQTNScUdnc3VBUUYvSUFBb0FnUWdBU2dDQ0JDM0FTSUNCRUFnQWlBQUlBRVFsd1JCQUU0RVFDQUNEd3NnQWhCRUMwRUFDd29BSUFBb0FnUVFtUVFMSVFFQmZRSkFJQUJEQUFBQUFGME5BQ0FCSUFBaUFsMUZEUUFnQVNFQ0N5QUNDNlFCQVFKL0lBQW9BZ1FnQUJBeUtBSUFSd1JBSXdCQkVHc2lBeVFBSUFNZ0FFRUJFTVVHSVFJZ0FCQXlJQUlvQWdRZ0FSREVCaUFDSUFJb0FnUkJKR28yQWdRZ0FoQnJJQU5CRUdva0FBOExJd0JCSUdzaUF5UUFJQUFRTWlJQ0lBTkJDR29nQUNBQUVJRUJRUUZxRU1NR0lBQVFnUUVnQWhDZEJDSUNLQUlJSUFFUXhBWWdBaUFDS0FJSVFTUnFOZ0lJSUFBZ0FoQ2NCQ0FDRUpzRUlBTkJJR29rQUF1eENRUUhmQUYrQVg4QmZTQUFJQUpCQVNBRWRMSWlBcFFDZkFKQUFrQUNRQ0FFUVFGcnR5SUh2U0lNUWlDSXB5SUVRZi8vLy84SGNTSUFJQXluSWcxeUJId2dCMFFBQUFBQUFBQUFRS0FnRFVVZ0FFR0FnTUQvQjBkeUlBQkJnSURBL3dkTmNVVU5CQm9DUUNBTkRRQWdCMFFBQUFBQUFBQUFBQ0FNUWdCWkd5QUFRWUNBd1A4SFJnMEZHaUFBUVlDQXdQOERSZ1JBUkFBQUFBQUFBQUJBSUF4Q0FGa05CaHBFQUFBQUFBQUE0RDhNQmd0RUFBQUFBQUFBRUVBZ0JFR0FnSUNBQkVZTkJSb2dCRUdBZ0lEL0EwY05BRVROTzM5bW5xRDJQd3dGQ3lBQVFZR0FnSThFVHcwRFFiRERBaXNEQUVRQUFBQUFBQUR3UDBHZ3d3SXJBd0FpQ0tFaUNVUUFBQUFBQUFEd1B5QUlSQUFBQUFBQUFQQS9vS01pQ3FJaUJyMUNnSUNBZ0hDRHZ5SUZJQVVnQmFJaUMwUUFBQUFBQUFBSVFLQWdDaUFKSUFVZ0JhQ2hJQVZFQUFBQUFBQUE4RDlFQUFBQUFBQUFBRUFnQ0tHaG9xR2lJZ2dnQmlBRm9LSWdCaUFHb2lJRklBV2lJQVVnQlNBRklBVWdCVVR2VGtWS0tIN0tQNkpFWmR2SmswcUd6VCtnb2tRQlFSMnBZSFRSUDZDaVJFMG1qMUZWVmRVL29LSkUvNnR2MjdadDJ6K2dva1FETXpNek16UGpQNkNpb0NJSm9MMUNnSUNBZ0hDRHZ5SUZvaUlLSUFnZ0JhSWdCaUFKSUFWRUFBQUFBQUFBQ01DZ0lBdWhvYUtnSWdhZ3ZVS0FnSUNBY0lPL0lnVkU5UUZiRk9BdlByNmlJQVlnQlNBS29hRkUvUU02M0FuSDdqK2lvS0FpQmtIQXd3SXJBd0FpQ0NBR0lBVkVBQUFBNEFuSDdqK2lJZ2Fnb0VRQUFBQUFBQUR3UDZDOVFvQ0FnSUJ3Zzc4aUJVUUFBQUFBQUFEd1A2RWdDS0VnQnFHaElRWWdCeUFNUW9DQWdJQndnNzhpQ0tFZ0JhSWdCaUFIb3FBaUJ5QUZJQWlpSWdXZ0lnYTlJZ3luSVFRQ1FDQU1RaUNJcHlJQVFZQ0F3SVFFVGdSQUlBQkJnSURBaEFScklBUnlEUU1nQjBUK2dpdGxSeFdYUEtBZ0JpQUZvV1JGRFFFTUF3c2dBRUdBK1AvL0IzRkJnSmpEaEFSSkRRQWdBRUdBNkx6N0Eyb2dCSElOQXlBSElBWWdCYUZsUlEwQURBTUxRUUFoQkFKOElBQkIvLy8vL3dkeElnMUJnWUNBL3dOUEJINUJBRUdBZ01BQUlBMUJGSFpCL2dkcmRpQUFhaUlBUWYvL1AzRkJnSURBQUhKQmt3Z2dBRUVVZGtIL0QzRWlEV3QySWdScklBUWdERUlBVXhzaEJDQUhJQVZCZ0lCQUlBMUIvd2RyZFNBQWNhMUNJSWEvb1NJRm9MMEZJQXdMUW9DQWdJQndnNzhpQmtRQUFBQUFReTdtUDZJaUNDQUhJQVlnQmFHaFJPODUrdjVDTHVZL29pQUdSRGxzcUF4aFhDQytvcUFpQnFBaUJTQUZJQVVnQlNBRm9pSUhJQWNnQnlBSElBZEUwS1MrY21rM1pqNmlSUEZyMHNWQnZidStvS0pFTE40bHIycFdFVCtnb2tTVHZiNFdiTUZtdjZDaVJENVZWVlZWVmNVL29LS2hJZ2VpSUFkRUFBQUFBQUFBQU1DZ295QUZJQVlnQlNBSW9hRWlCYUlnQmFDaG9VUUFBQUFBQUFEd1A2QWlCYjBpREVJZ2lLY2dCRUVVZEdvaUFFSC8vejlNQkVBZ0JTQUVFT1lCREFFTElBeEMvLy8vL3crRElBQ3RRaUNHaEw4TFJBQUFBQUFBQVBBL29nVkVBQUFBQUFBQThEOExEQU1MUkFBQUFBQUFBUEIvREFJTFJBQUFBQUFBQUFBQURBRUxSQUFBQUFBQUFQQi9SQUFBQUFBQUFBQUFJQVJCQUVvYkMwUUFBQUFBQUFEZ3Y2QzJJZzZTT0FJQUlBRWdBeUFDbENBT2tqZ0NBQXMwQUNBQUtBSUFHaUFBS0FJQUlBQVF4Z0ZCQW5ScUdpQUFLQUlBSUFBUVFrRUNkR29hSUFBb0FnQWdBQkRHQVVFQ2RHb2FDMlFCQW44akFFRVFheUlGSkFBZ0JVRUFOZ0lNSUFCQkRHb2dBeERRQVNBQkJFQWdBQ2dDRUNBQkVPc0dJUVFMSUFBZ0JEWUNBQ0FBSUFRZ0FrRU1iR29pQWpZQ0NDQUFJQUkyQWdRZ0FCQThJQVFnQVVFTWJHbzJBZ0FnQlVFUWFpUUFJQUFMRFFBZ0FDQUJJQUpCREJDc0JBc0xBQ0FFSUFJMkFnQkJBd3NQQUNBQUlBQW9BZ0JCQVdvMkFnQUxPUUVDZnlNQVFSQnJJZ01rQUNBRFFRaHFJZ1FnQVJCTUlBSWdCQkRGQWlJQkVKc0JOZ0lBSUFBZ0FSQ2FBU0FFRUVZZ0EwRVFhaVFBQ3pjQkFuOGpBRUVRYXlJQ0pBQWdBa0VJYWlJRElBQVFUQ0FERUpRQlFlQ2lBMEg2b2dNZ0FSRGpBU0FERUVZZ0FrRVFhaVFBSUFFTENBQWdBQ2dDQUVVTE9RRUNmeU1BUVJCcklnTWtBQ0FEUVFocUlnUWdBUkJNSUFJZ0JCREhBaUlCRUpzQk9nQUFJQUFnQVJDYUFTQUVFRVlnQTBFUWFpUUFDMDBBSUFCQkFEWUNGQ0FBSUFFMkFoZ2dBRUVBTmdJTUlBQkNncUNBZ09BQU53SUVJQUFnQVVVMkFoQWdBRUVnYWtFQVFTZ1FPQm9nQUVFY2FoQ2RCeUFBUVFBMkFrZ2dBRUYvTmdKTUMwSUJCSDlCR0NFQ0FrQURRQ0FBTFFBQUlnTWdBUzBBQUNJRVJnUkFJQUZCQVdvaEFTQUFRUUZxSVFBZ0FrRUJheUlDRFFFTUFnc0xJQU1nQkdzaEJRc2dCUXNQQUNBQUtBSklHaUFBSUFFMkFrZ0xxUUVCQW44Q1FDQUFLQUpNSWdGQkFFNEVRQ0FCUlEwQlFjaU5CQ2dDQUNBQlFmLy8vLzk3Y1VjTkFRc2dBQ2dDQkNJQklBQW9BZ2hIQkVBZ0FDQUJRUUZxTmdJRUlBRXRBQUFQQ3lBQUVJOEREd3NnQUNBQUtBSk1JZ0ZCLy8vLy93TWdBUnMyQWt3Z0FFSE1BR29oQVFKL0lBQW9BZ1FpQWlBQUtBSUlSd1JBSUFBZ0FrRUJhallDQkNBQ0xRQUFEQUVMSUFBUWp3TUxJUUFnQVNnQ0FCb2dBVUVBTmdJQUlBQUxmQUVEZjBGL0lRTUNRQ0FBUVg5R0RRQWdBU2dDVEVFQVRpRUVBa0FDUUNBQktBSUVJZ0pGQkVBZ0FSQ1FBeG9nQVNnQ0JDSUNSUTBCQ3lBQ0lBRW9BaXhCQ0d0TERRRUxJQVJGRFFGQmZ3OExJQUVnQWtFQmF5SUNOZ0lFSUFJZ0FEb0FBQ0FCSUFFb0FnQkJiM0UyQWdBZ0FFSC9BWEVoQXdzZ0F3c0hBQ0FBUVF0SkN4MEFJQUFnQVNBQ0lBTWdCQ0FGSUFZZ0J5QUFLQUlBS0FJTUVRMEFDd3dBSUFBZ0FVRUVhaEM5QkF0VkFDQUFJQUUyQWdRZ0FFRUFPZ0FBSUFFZ0FTZ0NBRUVNYXlnQ0FHb1ExQU1FUUNBQklBRW9BZ0JCREdzb0FnQnFLQUpJQkVBZ0FTQUJLQUlBUVF4cktBSUFhaWdDU0JDQkF3c2dBRUVCT2dBQUN5QUFDdzBBSUFCQkJHb1F5QUlhSUFBTGNnRUJmeU1BUVJCcklnRWtBQ0FBSUFBb0FnQkJER3NvQWdCcUtBSVlCRUFnQVVFSWFpQUFFUDhDR2dKQUlBRXRBQWhGRFFBZ0FDQUFLQUlBUVF4cktBSUFhaWdDR0JES0FrRi9SdzBBSUFBZ0FDZ0NBRUVNYXlnQ0FHcEJBUkREQWdzZ0FVRUlhaERKQWdzZ0FVRVFhaVFBQ3cwQUlBQkJDR29ReUFJYUlBQUxCQUJCZnd0YUFnRi9BWDRDUUFKL1FRQWdBRVVOQUJvZ0FLMGdBYTErSWdPbklnSWdBQ0FCY2tHQWdBUkpEUUFhUVg4Z0FpQURRaUNJcHhzTElnSVFOeUlBUlEwQUlBQkJCR3N0QUFCQkEzRkZEUUFnQUVFQUlBSVFPQm9MSUFBTEZnQWdBRVVFUUVFQUR3dEJ0SXdFSUFBMkFnQkJmd3ZsQWdFR2Z5TUFRUkJySWdja0FDQURRY3lXQkNBREd5SUZLQUlBSVFNQ1FBSkFBa0FnQVVVRVFDQUREUUVNQXd0QmZpRUVJQUpGRFFJZ0FDQUhRUXhxSUFBYklRWUNRQ0FEQkVBZ0FpRUFEQUVMSUFFdEFBQWlBRUVZZEVFWWRTSURRUUJPQkVBZ0JpQUFOZ0lBSUFOQkFFY2hCQXdFQ3lBQkxBQUFJUUJCa0k0RUtBSUFLQUlBUlFSQUlBWWdBRUgvdndOeE5nSUFRUUVoQkF3RUN5QUFRZjhCY1VIQ0FXc2lBRUV5U3cwQklBQkJBblJCa1BvQ2FpZ0NBQ0VESUFKQkFXc2lBRVVOQWlBQlFRRnFJUUVMSUFFdEFBQWlDRUVEZGlJSlFSQnJJQU5CR25VZ0NXcHlRUWRMRFFBRFFDQUFRUUZySVFBZ0NFR0FBV3NnQTBFR2RISWlBMEVBVGdSQUlBVkJBRFlDQUNBR0lBTTJBZ0FnQWlBQWF5RUVEQVFMSUFCRkRRSWdBVUVCYWlJQkxRQUFJZ2hCd0FGeFFZQUJSZzBBQ3dzZ0JVRUFOZ0lBUWJTTUJFRVpOZ0lBUVg4aEJBd0JDeUFGSUFNMkFnQUxJQWRCRUdva0FDQUVDd01BQVF1QkF3RU5mMEVBSUFBZ0FFR1ZBVXNiUVFGMFFaRHdBbW92QVFCQjZPRUNhaUVIUVpDT0JDZ0NBQ2dDRkNJQUJIOGdBQ2dDQkNFRklBQW9BZ0FpQUNnQ0NDQUFLQUlBUWFMYTc5Y0dhaUlDRVA4QklRTWdBQ2dDRENBQ0VQOEJJUVFnQUNnQ0VDQUNFUDhCSVFFQ1FDQURJQVZCQW5aUERRQWdBU0FFY2tFRGNTQUVJQVVnQTBFQ2RHc2lCazhnQVNBR1QzSnlEUUFnQVVFQ2RpRUtJQVJCQW5ZaEMwRUFJUVFEUUNBQUlBUWdBMEVCZGlJR2FpSU1RUUYwSWcwZ0MycEJBblJxSWdFb0FnQWdBaEQvQVNFSklBVWdBU2dDQkNBQ0VQOEJJZ0ZOSUFrZ0JTQUJhMDl5RFFFZ0FDQUJJQWxxYWkwQUFBMEJJQWNnQUNBQmFoQ2dBaUlCUlFSQUlBQWdDaUFOYWtFQ2RHb2lCQ2dDQUNBQ0VQOEJJUU1nQlNBRUtBSUVJQUlRL3dFaUFrMGdBeUFGSUFKclQzSU5Ba0VBSUFBZ0Ftb2dBQ0FDSUFOcWFpMEFBQnNoQ0F3Q0N5QURRUUZHRFFFZ0JpQURJQVpySUFGQkFFZ2lBUnNoQXlBRUlBd2dBUnNoQkF3QUN3QUxJQWdGUVFBTElnQWdCeUFBR3d2TEFRRUNmeU1BUVJCcklnRWtBQUpBSUFDOVFpQ0lwMEgvLy8vL0IzRWlBa0g3dzZUL0EwMEVRQ0FDUVlDQXdQSURTUTBCSUFCRUFBQUFBQUFBQUFCQkFCRE9BaUVBREFFTElBSkJnSURBL3dkUEJFQWdBQ0FBb1NFQURBRUxBa0FDUUFKQUFrQWdBQ0FCRUtNRlFRTnhEZ01BQVFJREN5QUJLd01BSUFFckF3aEJBUkRPQWlFQURBTUxJQUVyQXdBZ0FTc0RDQkRQQWlFQURBSUxJQUVyQXdBZ0FTc0RDRUVCRU00Q21pRUFEQUVMSUFFckF3QWdBU3NEQ0JEUEFwb2hBQXNnQVVFUWFpUUFJQUFMU0FFQ2Z3Si9JQUZCSDAwRVFDQUFLQUlBSVFJZ0FFRUVhZ3dCQ3lBQlFTQnJJUUVnQUFzb0FnQWhBeUFBSUFJZ0FYUTJBZ0FnQUNBRElBRjBJQUpCSUNBQmEzWnlOZ0lFQzdJQ0FRVi9Jd0JCOEFGcklnY2tBQ0FISUFNb0FnQWlDRFlDNkFFZ0F5Z0NCQ0VESUFjZ0FEWUNBQ0FISUFNMkF1d0JRUUVoQ1FKQUFrQUNRQ0FJUVFGSElBTnlSUVJBSUFBaEF3d0JDMEVBSUFGcklRc2dBQ0VJQTBBZ0NDQUdJQVJCQW5ScUlnb29BZ0JySWdNZ0FDQUNFUU1BUVFCTUJFQWdDQ0VEREFJTEFrQWdCU0FFUVFKSWNrVUVRQ0FLUVFocktBSUFJUVVnQ0NBTGFpSUtJQU1nQWhFREFFRUFUZzBCSUFvZ0JXc2dBeUFDRVFNQVFRQk9EUUVMSUFjZ0NVRUNkR29nQXpZQ0FDQUhRZWdCYWlJRklBVVFsUVVpQlJDTUF5QUpRUUZxSVFrZ0JDQUZhaUVFUVFBaEJTQURJUWdnQnlnQzZBRkJBVWNOQVNBSEtBTHNBUTBCREFNTEN5QUlJUU1NQVFzZ0JRMEJDeUFCSUFjZ0NSQ1VCU0FESUFFZ0FpQUVJQVlRNEFNTElBZEI4QUZxSkFBTFNBRUNmd0ovSUFGQkgwMEVRQ0FBS0FJRUlRSWdBQXdCQ3lBQlFTQnJJUUVnQUVFRWFnc29BZ0FoQXlBQUlBSWdBWFkyQWdRZ0FDQUNRU0FnQVd0MElBTWdBWFp5TmdJQUMrUUJBUWwvSUFBZ0FFRTlFSkVGSWdGR0JFQkJBQThMQWtBZ0FDQUJJQUJySWdWcUxRQUFEUUJCeUl3RUtBSUFJZ05GRFFBZ0F5Z0NBQ0lDUlEwQUEwQUNRQUovSUFBaEFVRUFJUVpCQUNBRklnZEZEUUFhQWtBZ0FTMEFBQ0lFUlEwQUEwQUNRQ0FDTFFBQUlnaEZEUUFnQjBFQmF5SUhSU0FFSUFoSGNnMEFJQUpCQVdvaEFpQUJMUUFCSVFRZ0FVRUJhaUVCSUFRTkFRd0NDd3NnQkNFR0N5QUdRZjhCY1NBQ0xRQUFhd3RGQkVBZ0F5Z0NBQ0FGYWlJQkxRQUFRVDFHRFFFTElBTW9BZ1FoQWlBRFFRUnFJUU1nQWcwQkRBSUxDeUFCUVFGcUlRa0xJQWtMZ3dFQkFYOENRQ0FDUVFGSERRQWdBQ2dDQ0NJRFJRMEFJQUVnQXlBQUtBSUVhNng5SVFFTEFrQWdBQ2dDRkNBQUtBSWNSd1JBSUFCQkFFRUFJQUFvQWlRUkJBQWFJQUFvQWhSRkRRRUxJQUJCQURZQ0hDQUFRZ0EzQXhBZ0FDQUJJQUlnQUNnQ0tCRVRBRUlBVXcwQUlBQkNBRGNDQkNBQUlBQW9BZ0JCYjNFMkFnQUxDMEVCQW44akFFRVFheUlCSkFCQmZ5RUNBa0FnQUJDUUF3MEFJQUFnQVVFUGFrRUJJQUFvQWlBUkJBQkJBVWNOQUNBQkxRQVBJUUlMSUFGQkVHb2tBQ0FDQzN3QkFuOGdBQ0FBS0FKSUlnRkJBV3NnQVhJMkFrZ2dBQ2dDRkNBQUtBSWNSd1JBSUFCQkFFRUFJQUFvQWlRUkJBQWFDeUFBUVFBMkFod2dBRUlBTndNUUlBQW9BZ0FpQVVFRWNRUkFJQUFnQVVFZ2NqWUNBRUYvRHdzZ0FDQUFLQUlzSUFBb0FqQnFJZ0kyQWdnZ0FDQUNOZ0lFSUFGQkczUkJIM1VMMHdFQkFYOENRQ0FFUVFCTURRQWdCRUVCYXlFR0lBQWdBVUVDZEdvaEFTQUNJQU5CQW5ScUlRTWdCRUVEY1NJQUJFQkJBQ0VDQTBBZ0F5Z0NBQ0FCS0FJQUlBVVFQaG9nQkVFQmF5RUVJQU5CQkdvaEF5QUJRUVJxSVFFZ0FrRUJhaUlDSUFCSERRQUxDeUFHUVFOSkRRQURRQ0FES0FJQUlBRW9BZ0FnQlJBK0dpQURLQUlFSUFFb0FnUWdCUkErR2lBREtBSUlJQUVvQWdnZ0JSQStHaUFES0FJTUlBRW9BZ3dnQlJBK0dpQURRUkJxSVFNZ0FVRVFhaUVCSUFSQkJXc2hBQ0FFUVFScklRUWdBRUYrU1EwQUN3c0xFZ0FnQUNBQmFrRUJheUlBSUFBZ0FXOXJDL1VHQVF4L0l3QkJvQXBySWdja0FDQUNRUVJQQkVBZ0FDZ0NBQ0lGSUFJMkFoZ2dCVUUwTmdJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQUVHMEFVSEVBU0FCRzJvZ0FrRUNkR29vQWdBaUNFVUVRQ0FBS0FJQUlnVWdBallDR0NBRlFUUTJBaFFnQUNBQUtBSUFLQUlBRVFFQUN5QURLQUlBSWdsRkJFQWdBeUFBUVFGQmtBc2dBQ2dDQkNnQ0FCRUVBQ0lKTmdJQUN5QUpJQWcyQW93QlFRQWhCVUVCSVFJRFFDQUZJQUlnQ0dvdEFBQWlCR29pQTBHQkFrNEVRQ0FBS0FJQUlnWkJDVFlDRkNBQUlBWW9BZ0FSQVFBTElBUUVRQ0FIUVpBSWFpQUZhaUFDSUFRUU9Cb2dBeUVGQ3lBQ1FRRnFJZ0pCRVVjTkFBdEJBQ0VESUFkQmtBaHFJQVZxUVFBNkFBQWdCeTBBa0FnaUJnUkFJQVpCR0hSQkdIVWhCRUVBSVFJRFFDQUdRUmgwUVJoMUlBUkdCRUFEUUNBSElBTkJBblJxSUFJMkFnQWdBa0VCYWlFQ0lBUWdBMEVCYWlJRElBZEJrQWhxYWl3QUFDSUdSZzBBQ3d0QkFTQUVkQ0FDVEFSQUlBQW9BZ0FpQ2tFSk5nSVVJQUFnQ2lnQ0FCRUJBQXNnQkVFQmFpRUVJQUpCQVhRaEFpQUdRZjhCY1EwQUN3dEJBQ0VEUVFFaEFnTkFJQWtnQWtFQ2RHb2dBaUFJYWlJRUxRQUFCSDhnQ1NBQ1FRSjBhaUFESUFjZ0EwRUNkR29vQWdCck5nSklJQU1nQkMwQUFHb2lBMEVDZENBSGFrRUVheWdDQUFWQmZ3czJBZ0FnQWtFQmFpSUNRUkZIRFFBTElBbEIvLzgvTmdKRVFRQWhDaUFKUVpBQmFrRUFRWUFJRURnYVFRRWhCZ05BSUFZZ0NHb2lEQzBBQUFSQVFRRWhDMEVCUVFnZ0Jtc2lEWFFoQkFOQUlBZ2dDbW9oRGlBSElBcEJBblJxS0FJQUlBMTBJUUlnQkNFREEwQWdDU0FDUVFKMGFpQUdOZ0tRQVNBQ0lBbHFRWkFKYWlBT0xRQVJPZ0FBSUFKQkFXb2hBaUFEUVFGS0lROGdBMEVCYXlFRElBOE5BQXNnQ2tFQmFpRUtJQXNnREMwQUFFa2hBaUFMUVFGcUlRc2dBZzBBQ3dzZ0JrRUJhaUlHUVFsSERRQUxBa0FnQVVVZ0JVRUFUSElOQUVFQUlRSWdCVUVCUndSQUlBVkJmbkVoQVVFQUlRTURRQ0FDSUFocUxRQVJRUkJQQkVBZ0FDZ0NBQ0lFUVFrMkFoUWdBQ0FFS0FJQUVRRUFDeUFJSUFKQkFYSnFMUUFSUVJCUEJFQWdBQ2dDQUNJRVFRazJBaFFnQUNBRUtBSUFFUUVBQ3lBQ1FRSnFJUUlnQTBFQ2FpSURJQUZIRFFBTEN5QUZRUUZ4UlEwQUlBSWdDR290QUJGQkVFa05BQ0FBS0FJQUlnRkJDVFlDRkNBQUlBRW9BZ0FSQVFBTElBZEJvQXBxSkFBTEZnQWdBU0FDS1FJQU53SUFJQUVnQWlrQ0NEY0NDQXNuQVFKL0lBRW9BZ0FoQWlNQVFSQnJJZ01rQUNBQUlBRkJCR29nQWhEL0JpQURRUkJxSkFBTENnQkJzK1lCRUpnQ0FBc0pBQ0FCSUFJUTN3SUxCQUJCQkF0TEFRRi9Jd0JCRUdzaUF5UUFJQU1nQWpZQ0RFSEluUUlnQVVHdzNRTkJvSmtDUWQ4QUlBTkJER29RNmdGQnNOMERRZmlZQWtIZ0FDQURRUXhxRU9vQkVDMGdBMEVRYWlRQUlBQUxHUUFnQUNBQlFlM1RBVUhSNndOQjJPSURRZFRpQXhDdEJBc0tBQ0FBUVJocUVNNEJDeUFBSUFBcUFnQWdBU29DQkpRZ0FTb0NBQ0FBS2dJRWxKT0xRd0FBQUQrVUM3SUJBUUY5SUFBZ0FTb0NBSXc0QWdBZ0FTb0NCQ0VESUFCQmdJQ0EvSHMyQWdnZ0FDQURqRGdDQkNBQVFReHFFT3dGSUFBZ0Fpb0NBQ0FCS2dJQWxEZ0NHQ0FBSUFJcUFnQWdBU29DQkpRNEFod2dBQ0FDS2dJQU9BSWdJQUJCSkdvUTdBVWdBQ0FCS2dJQWpEZ0NNQ0FCS2dJRUlRTWdBRUdBZ0lEOGV6WUNPQ0FBSUFPTU9BSTBJQUFnQWlvQ0JDQUJLZ0lBbERnQ1BDQUFJQUlxQWdRZ0FTb0NCSlE0QWtBZ0FDQUNLZ0lFT0FKRUN5SUFJQUFnQVNBQ0VLY0JRd0FBQUFCZUlBTWdCQ0FGRUtjQlF3QUFBQUJlYzBVTERBQWdBQ0FCSUFBZ0FWMGJDMU1CQW44akFFRWdheUlDSkFBQ1FDQUFFTVVCSUFGSkJFQWdBQkRpQWlBQlNRMEJJQUFRTWlFRElBQWdBa0VJYWlBQklBQVFRU0FERU9NQ0lnQVFxUU1nQUJDb0F3c2dBa0VnYWlRQUR3c1Fyd0lBQ3c4QUlBQWdBQ2dDQkVFQmFqWUNCQXNKQUNBQUlBRVFoUVlMQ1FBZ0FDQUJPZ0JrQzFvQkFuOGpBRUVRYXlJQ0pBQWdBaUFCTmdJTUlBRWdBQkRtQWlJRFRRUkFJQUFReGdFaUFDQURRUUYyU1FSQUlBSWdBRUVCZERZQ0NDQUNRUWhxSUFKQkRHb1FiaWdDQUNFREN5QUNRUkJxSkFBZ0F3OExFSzhDQUFzTUFDQUFJQUVnQUNBQlNCc0xFQUFnQUNnQ0FDQUJLQUlBYTBFRGRRc3NBQ0FBS0FJQUdpQUFLQUlBSUFBUXhRRkJBM1JxR2lBQUtBSUFJQUFReFFGQkEzUnFHaUFBS0FJQUdndE5BUUYvSUFBb0FnUWhBUU5BSUFFZ0FDZ0NDRWNFUUNBQUtBSVFHaUFBSUFBb0FnaEJDR3MyQWdnTUFRc0xJQUFvQWdBRVFDQUFLQUlRR2lBQUtBSUFJUUVnQUJEQUJob2dBUkF4Q3d0UUFRRi9JQUFRNkFJZ0FCQXlJQUFvQWdBZ0FDZ0NCQ0FCUVFScUlnSVFsUUlnQUNBQ0VFVWdBRUVFYWlBQlFRaHFFRVVnQUJBeUlBRVFQQkJGSUFFZ0FTZ0NCRFlDQUNBQUlBQVFRUkNuQXd1T0JnSUpmd0o4SUFBb0FnQWhCU0FBS0FJRUlRTkJBQ0VBSXdCQjBBOXJJZ1lrQUFKQUlBTkI5QU5LRFFBQ1FBSkFBa0FnQXc0Q0F3QUJDeUFGUkFBQUFBQUFBUEEvSUFVckF3Q2pPUU1BREFFTElBTkJBQ0FEUVFCS0d5RUpBMEFnQUNBSlJnUkFBMEFnQkNBSlJnUkFRUUFoQkFOQUlBa2dCQ0lCUmcwRkEwQUNRQ0FCSUFOR0JFQWdBeUVCREFFTElBWWdBVUVDZEdvb0FnQWdCRVlOQUNBQlFRRnFJUUVNQVFzTElBWWdBVUVDZEdvZ0JpQUVRUUowYWlnQ0FEWUNBQ0FGSUFSQkEzUnFJUUFnQlNBQlFRTjBhaUVCUVFBaEFnTkFJQUlnQ1VjRVFDQUJLd01BSVFvZ0FTQUFLd01BT1FNQUlBQWdDamtEQUNBQ1FRRnFJUUlnQUNBRFFRTjBJZ2hxSVFBZ0FTQUlhaUVCREFFTEN5QUVRUUZxSVFRTUFBc0FDMFFBQUFBQUFBQUFBQ0VLUVg4aEFpQUZJQVFpQUNBRGJFRURkR29pQ0NFQkEwQWdBQ0FEUndSQUlBRXJBd0NaSWdzZ0NpQUtJQXRqSWdjYklRb2dBQ0FDSUFjYklRSWdBRUVCYWlFQUlBRWdBMEVEZEdvaEFRd0JDd3RCQUNFQUlBSkJmMFlnQ2tTN3ZkZlozM3piUFdWeURRUWdCaUFDUVFKMGFpSUFLQUlBSVFFZ0FDQUdJQVJCQW5ScUlnQW9BZ0EyQWdBZ0FDQUJOZ0lBSUFVZ0FpQURiRUVEZEdvaEFFRUFJUUlnQ0NFQkEwQWdBaUFEUndSQUlBQXJBd0FoQ2lBQUlBRXJBd0E1QXdBZ0FTQUtPUU1BSUFKQkFXb2hBaUFCUVFocUlRRWdBRUVJYWlFQURBRUxDeUFJS3dNQUlRcEJBU0VCSUFnaEFBTkFJQUVnQTBjRVFDQUFJQUFyQXdnZ0NxTTVBd0FnQVVFQmFpRUJJQUJCQ0dvaEFBd0JDd3NnQUVRQUFBQUFBQUR3UHlBS296a0RBRUVBSVFjRFFDQURJQWRIQkVBZ0JDQUhSd1JBSUFVZ0F5QUhiRUVEZEdvaUFDc0RBSm9oQ2tFQklRRWdDQ0VDQTBBZ0FTQURSd1JBSUFBZ0NpQUNLd01Bb2lBQUt3TUlvRGtEQUNBQ1FRaHFJUUlnQVVFQmFpRUJJQUJCQ0dvaEFBd0JDd3NnQUNBQ0t3TUFJQXFpT1FNQUN5QUhRUUZxSVFjTUFRc0xJQVJCQVdvaEJBd0FDd0FGSUFZZ0FFRUNkR29nQURZQ0FDQUFRUUZxSVFBTUFRc0FDd0FMSUFVaEFBc2dCa0hRRDJva0FFRUFRWDhnQUJzTEJ3QWdBQkJLR2dzckFRRi9JQUFnQVNnQ0FEWUNBQ0FCS0FJQUlRTWdBQ0FCTmdJSUlBQWdBeUFDUVFKMGFqWUNCQ0FBQ3lzQUlBQW9BZ0FhSUFBb0FnQWdBQkRHQVVFQ2RHb2FJQUFvQWdBYUlBQW9BZ0FnQUJCQ1FRSjBhaG9MVXdFRGZ5TUFRUkJySWdNa0FDQURJQUFnQVJDMkFpSUNLQUlFSVFFZ0FpZ0NDQ0VFQTBBZ0FTQUVSZ1JBSUFJUWF5QURRUkJxSkFBRklBQVFNaG9nQVJETUJpQUNJQUZCQkdvaUFUWUNCQXdCQ3dzTEN3QWdBQ0FCUVFnUTlRRUxQZ0VDZnlNQVFSQnJJZ01rQUNBRElBQkJBUkRCQmlFQ0lBQVFNaUFDS0FJRUlBRVE1QUlnQWlBQ0tBSUVRUWhxTmdJRUlBSVFheUFEUVJCcUpBQUxLQUFnQUNBQkVFVWdBRUVFYWlBQlFRUnFFRVVnQUJBeUlBRVFNaEJGSUFBUU1ob2dBUkF5R2d1Q0FRQUNRQ0FDUXdBQUFBQmdCRUFnQUNnQ0ZMSWdBbDVGRFFFZ0FDb0NHQ0FDRU4wR1FRRWdBWFN5bEE4TFFiQ2xCRUdmcXdFUU1FR3lwZ0VRTUVHeEdSQXdRZWdCRUROQjJoMFFNRUhCcXdFUU1CQTBFQUFBQzBHd3BRUkIzYWNCRURCQnNxWUJFREJCc1JrUU1FSHBBUkF6UWRvZEVEQkJ0cXdCRURBUU5CQUFBQXRhQVFKL0l3QkJFR3NpQWlRQUlBSWdBVFlDRENBQklBQVE2Z1lpQTAwRVFDQUFFTmdCSWdBZ0EwRUJka2tFUUNBQ0lBQkJBWFEyQWdnZ0FrRUlhaUFDUVF4cUVHNG9BZ0FoQXdzZ0FrRVFhaVFBSUFNUEN4QzdBZ0FMREFBZ0FTQUNMUUFBT2dBQUN5RUFJQUFnQVRZQ0FDQUFJQUVvQWdRaUFUWUNCQ0FBSUFFZ0FtbzJBZ2dnQUFzU0FDQUFFRHdvQWdBZ0FDZ0NBR3RCREcwTExBQWdBQ2dDQUJvZ0FDZ0NBQ0FBRUtRQlFReHNhaG9nQUNnQ0FDQUFFS1FCUVF4c2Fob2dBQ2dDQUJvTERRQWdBRUhWcXRXcUFSQzZBZ3VkQVFJRWZ3TjlBMEFnQkVFRFJ3UkFJQUFnQkVFRmRHb2lCaXNERUxZaEJ5QUdLd01JdGlFSUlBWXJBd0MySVFsQkFDRURBMEFnQTBFRVJ3UkFJQU5CQW5RaUJTQUNJQVJCQkhScWFpQUhJQUVnQldvaUJTb0NJSlFnQ1NBRktnSUFsQ0FGS2dJUUlBaVVrcEk0QWdBZ0EwRUJhaUVEREFFTEN5QUNJQVJCQkhScUlnTWdBeW9DRENBR0t3TVl0cEk0QWd3Z0JFRUJhaUVFREFFTEN3dFZBUUYvSUFBb0FnUWhBZ05BSUFJZ0FDZ0NDRWNFUUNBQUtBSVFHaUFBSUFBb0FnZ2dBV3MyQWdnTUFRc0xJQUFvQWdBRVFDQUFLQUlRR2lBQUtBSUFJUUlnQUJBOEtBSUFJQUFvQWdCckdpQUNFREVMQzBrQkFuOGdBQ2dDQkNJR1FRaDFJUVVnQmtFQmNRUkFJQUlvQWdBZ0JSQ3pCQ0VGQ3lBQUtBSUFJZ0FnQVNBQ0lBVnFJQU5CQWlBR1FRSnhHeUFFSUFBb0FnQW9BaGdSQmdBTDlBRUJCSDhqQUVFUWF5SUlKQUFnQWlBQlFYOXpRUkZyVFFSQUlBQVFQU0VKQW44Z0FVSG4vLy8vQjBrRVFDQUlJQUZCQVhRMkFnZ2dDQ0FCSUFKcU5nSU1JQWhCREdvZ0NFRUlhaEJ1S0FJQUVKc0NEQUVMUVc0TFFRRnFJZ29RVnlFQ0lBUUVRQ0FDSUFrZ0JCQzBBUXNnQmdSQUlBSWdCR29nQnlBR0VMUUJDeUFESUFRZ0JXb2lDMnNoQnlBRElBdEhCRUFnQWlBRWFpQUdhaUFFSUFscUlBVnFJQWNRdEFFTElBRkJDa2NFUUNBSkVERUxJQUFnQWhDWUFTQUFJQW9Rc1FFZ0FDQUVJQVpxSUFkcUlnQVFpUUVnQ0VFQU9nQUhJQUFnQW1vZ0NFRUhhaENMQVNBSVFSQnFKQUFQQ3hDd0FRQUxCd0FnQUVFQ1NRc2dBQ0FCSUFJcEFnQTNBZ0FnQVNBQ0tBSVFOZ0lRSUFFZ0Fpa0NDRGNDQ0F1ZWFnTU5md1I5Q1h3akFFSGdBV3NpRENRQUlBeENnSUNBZ0lDQTRLM0FBRGNEMkFFZ0RFS0FnSUNBZ0lEZ3JjQUFOd1BJQVNBTVFvQ0FnSUNBZ01Dc3dBQTNBN2dCSUF4Q2dJQ0FnSUNBd0t6QUFEY0QwQUVnREVLQWdJQ0FnSURncmNBQU53UEFBU0FNUW9DQWdJQ0FnT0N0d0FBM0E3QUJJQXhDZ0lDQWdJQ0F3S3pBQURjRHFBRWdERUtBZ0lDQWdJREFyTUFBTndPZ0FRTkFJQTFCQkVjRVFDQU5RUVIwSWc0Z0RFSGdBR3BxSWhFZ0NTQU9haUlPS3dNQU9RTUFJQkVnRGlzRENEa0RDQ0FOUVFGcUlRME1BUXNMSUF4Qm9BRnFJUlVnREVIZ0FHb2hGaUFNUVJCcUlSSkJBQ0VOUVFoQkNCQzNBU0VUUVFoQkFSQzNBU0VQUVFoQkFSQzNBU0VRSUE4b0FnQWhGeUFUS0FJQUlSZ0RRQ0FOUVFSSEJFQWdHQ0FOUVFkMGFpSUpJQlVnRFVFRWRDSVVhaUlPS3dNQU9RTUFJQTRyQXdnaEhTQUpRZ0EzQXlnZ0NVSUFOd01nSUFsQ0FEY0RHQ0FKUW9DQWdJQ0FnSUQ0UHpjREVDQUpJQjA1QXdnZ0NTQVVJQlpxSWhFckF3QWdEaXNEQUpxaU9RTXdJQkVyQXdBaEhTQU9Ld01JSVI0Z0NVSUFOd05RSUFsQ0FEY0RTQ0FKUVVCclFnQTNBd0FnQ1NBZElCNmFvamtET0NBSklBNHJBd0E1QTFnZ0Rpc0RDQ0VkSUFsQ2dJQ0FnSUNBZ1BnL053Tm9JQWtnSFRrRFlDQUpJQkVyQXdnZ0Rpc0RBSnFpT1FOd0lBa2dFU3NEQ0NBT0t3TUltcUk1QTNnZ0ZDQVhhaUlKSUJFckF3QTVBd0FnQ1NBUkt3TUlPUU1JSUExQkFXb2hEUXdCQ3dzZ0V4Q3FBeG9nRUNBVElBOFFsd1FhSUJBb0FnQWhEa0VBSVFrRFFDQUpRUUpIQkVBZ0VpQUpRUmhzSWhGcUlnMGdEaUFSYWlJUkt3TUFPUU1BSUEwZ0VTc0RDRGtEQ0NBTklCRXJBeEE1QXhBZ0NVRUJhaUVKREFFTEN5QVNJQTRyQXpBNUF6QWdEaXNET0NFZElCSkJRR3RDZ0lDQWdJQ0FnUGcvTndNQUlCSWdIVGtET0NBVEVFUWdEeEJFSUJBUVJBSi9JQXdyQTNBaUhTQU1Ld09BQVNJZW9TSWZJQitpSUF3ckEzZ2lIeUFNS3dPSUFTSWdvU0loSUNHaW9DSWhtVVFBQUFBQUFBRGdRV01FUUNBaHFnd0JDMEdBZ0lDQWVBc2hDUUovQW44Z0RDc0RrQUVpSVNBTUt3TmdJaUtoSWlRZ0pLSWdEQ3NEbUFFaUpDQU1Ld05vSWlXaElpTWdJNktnSWlPWlJBQUFBQUFBQU9CQll3UkFJQ09xREFFTFFZQ0FnSUI0Q3lJT0lBa2dDU0FPU0J1M0lBcWlJQXFpSWlPWlJBQUFBQUFBQU9CQll3UkFJQ09xREFFTFFZQ0FnSUI0Q3lFUkFuOGdJaUFkb1NJZElCMmlJQ1VnSDZFaUhTQWRvcUFpSFpsRUFBQUFBQUFBNEVGakJFQWdIYW9NQVF0QmdJQ0FnSGdMSVFrQ2Z3Si9JQjRnSWFFaUhTQWRvaUFnSUNTaEloMGdIYUtnSWgyWlJBQUFBQUFBQU9CQll3UkFJQjJxREFFTFFZQ0FnSUI0Q3lJT0lBa2dDU0FPU0J1M0lBcWlJQXFpSWgyWlJBQUFBQUFBQU9CQll3UkFJQjJxREFFTFFZQ0FnSUI0Q3lFT0FrQWdBRVVFUUNBQ0lRa0RRQ0FESUFraURVb0VRQ0FOUVFGMElRa2dEU0FOYkNBT1NBMEJDd3NnQWlFT0EwQWdEaUlKSUFOT0RRSWdDVUVCZENFT0lBa2dDV3dnRVVnTkFBc01BUXNnQWlFSkEwQWdEaUFKSUFraURXeEJBblJLQkVBZ0RVRUJkQ0VKSUFNZ0RVb05BUXNMSUFJaERnTkFJQTRpQ1NBSmJFRUNkQ0FSVGcwQklBbEJBWFFoRGlBRElBbEtEUUFMQ3lBS1JBQUFBQUFBQUNSQW9pRWRSQUFBQUFBQUFQQS9JQXFoUkFBQUFBQUFBT0Evb2tRQUFBQUFBQUFrUUtJaENpQUpJQU1nQXlBSlNoc2lDU0FDYlNFUklBMGdBeUFESUExS0d5SURJQUp0SVJJZ0FpQUNiQ0VUQWtBQ1FBSkFBa0FnQVVVRVFDQVRRUU5zSWhOQkJCQ0VBeUlPUlEwRUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0J3NFBBQUVDQXdRRkJnY0lDUW9MQlFVRkRnc2dDVUVBSUFsQkFFb2JJUThnQTBFQUlBTkJBRW9iSVJBZ0NrUUFBQUFBQUFCWlFLQWhIaUFEdHlFaElBbTNJU0pCQUNFQkEwQWdBU0FQUmcwTUlCNGdIU0FCdDBRQUFBQUFBQURnUDZDaUlDS2pvQ0VLUVFBaERRTkFJQTBnRUVjRVFDQU1Ld05RSUF3ckEwQWdIaUFkSUEyM1JBQUFBQUFBQU9BL29LSWdJYU9nSWgraUlBb2dEQ3NEU0tLZ29DSWdSQUFBQUFBQUFBQUFZUTBSSUF3Z0RDc0RJQ0FNS3dNUUlCK2lJQW9nRENzREdLS2dvQ0FnbzdZaUdUZ0NEQ0FNSUF3ckF6Z2dEQ3NES0NBZm9pQUtJQXdyQXpDaW9LQWdJS08ySWhvNEFnZ2dDQ0FaSUJvZ0RFRU1haUFNUVFocUVIQWFJQXdxQWd3aEdRSi9JQUJCQVVZRVFBSi9JQXdxQWdoREFBQ0FQNUlpR290REFBQUFUMTBFUUNBYXFBd0JDMEdBZ0lDQWVBdEJBbTFCQVhRaEF3Si9JQmxEQUFDQVA1SWlHWXREQUFBQVQxMEVRQ0FacUF3QkMwR0FnSUNBZUF0QkFtMUJBWFFNQVFzQ2Z5QU1LZ0lJUXdBQUFEK1NJaHFMUXdBQUFFOWRCRUFnR3FnTUFRdEJnSUNBZ0hnTElRTWdHVU1BQUFBL2tpSVppME1BQUFCUFhRUkFJQm1vREFFTFFZQ0FnSUI0Q3lJSlFRQklJQVVnQ1V4eUlBTkJBRWdnQXlBR1RuSnlSUVJBSUE0Z0FTQVJiU0FDYkNBTklCSnRha0VNYkdvaUJ5QUhLQUlBSUFRZ0F5QUZiQ0FKYWtFRGJHb2lBeTBBQW1vMkFnQWdCeUFIS0FJRUlBTXRBQUZxTmdJRUlBY2dCeWdDQ0NBRExRQUFhallDQ0FzZ0RVRUJhaUVOREFFTEN5QUJRUUZxSVFFTUFBc0FDeUFKUVFBZ0NVRUFTaHNoRHlBRFFRQWdBMEVBU2hzaEVDQUtSQUFBQUFBQUFGbEFvQ0VlSUFPM0lTRWdDYmNoSWtFQUlRRURRQ0FCSUE5R0RRc2dIaUFkSUFHM1JBQUFBQUFBQU9BL29LSWdJcU9nSVFwQkFDRU5BMEFnRFNBUVJ3UkFJQXdyQTFBZ0RDc0RRQ0FlSUIwZ0RiZEVBQUFBQUFBQTREK2dvaUFobzZBaUg2SWdDaUFNS3dOSW9xQ2dJaUJFQUFBQUFBQUFBQUJoRFJBZ0RDQU1Ld01nSUF3ckF4QWdINklnQ2lBTUt3TVlvcUNnSUNDanRpSVpPQUlNSUF3Z0RDc0RPQ0FNS3dNb0lCK2lJQW9nRENzRE1LS2dvQ0FnbzdZaUdqZ0NDQ0FJSUJrZ0dpQU1RUXhxSUF4QkNHb1FjQm9nRENvQ0RDRVpBbjhnQUVFQlJnUkFBbjhnRENvQ0NFTUFBSUEva2lJYWkwTUFBQUJQWFFSQUlCcW9EQUVMUVlDQWdJQjRDMEVDYlVFQmRDRURBbjhnR1VNQUFJQS9raUlaaTBNQUFBQlBYUVJBSUJtb0RBRUxRWUNBZ0lCNEMwRUNiVUVCZEF3QkN3Si9JQXdxQWdoREFBQUFQNUlpR290REFBQUFUMTBFUUNBYXFBd0JDMEdBZ0lDQWVBc2hBeUFaUXdBQUFEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTElnbEJBRWdnQlNBSlRISWdBMEVBU0NBRElBWk9jbkpGQkVBZ0RpQUJJQkZ0SUFKc0lBMGdFbTFxUVF4c2FpSUhJQWNvQWdBZ0JDQURJQVZzSUFscVFRTnNhaUlETFFBQWFqWUNBQ0FISUFjb0FnUWdBeTBBQVdvMkFnUWdCeUFIS0FJSUlBTXRBQUpxTmdJSUN5QU5RUUZxSVEwTUFRc0xJQUZCQVdvaEFRd0FDd0FMSUFsQkFDQUpRUUJLR3lFUElBTkJBQ0FEUVFCS0d5RVFJQXBFQUFBQUFBQUFXVUNnSVI0Z0E3Y2hJU0FKdHlFaVFRQWhBUU5BSUFFZ0QwWU5DaUFlSUIwZ0FiZEVBQUFBQUFBQTREK2dvaUFpbzZBaENrRUFJUTBEUUNBTklCQkhCRUFnRENzRFVDQU1Ld05BSUI0Z0hTQU50MFFBQUFBQUFBRGdQNkNpSUNHam9DSWZvaUFLSUF3ckEwaWlvS0FpSUVRQUFBQUFBQUFBQUdFTkR5QU1JQXdyQXlBZ0RDc0RFQ0Fmb2lBS0lBd3JBeGlpb0tBZ0lLTzJJaGs0QWd3Z0RDQU1Ld000SUF3ckF5Z2dINklnQ2lBTUt3TXdvcUNnSUNDanRpSWFPQUlJSUFnZ0dTQWFJQXhCREdvZ0RFRUlhaEJ3R2lBTUtnSU1JUmtDZnlBQVFRRkdCRUFDZnlBTUtnSUlRd0FBZ0QrU0locUxRd0FBQUU5ZEJFQWdHcWdNQVF0QmdJQ0FnSGdMUVFKdFFRRjBJUU1DZnlBWlF3QUFnRCtTSWhtTFF3QUFBRTlkQkVBZ0dhZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMERBRUxBbjhnRENvQ0NFTUFBQUEva2lJYWkwTUFBQUJQWFFSQUlCcW9EQUVMUVlDQWdJQjRDeUVESUJsREFBQUFQNUlpR1l0REFBQUFUMTBFUUNBWnFBd0JDMEdBZ0lDQWVBc2lDVUVBU0NBRklBbE1jaUFEUVFCSUlBTWdCazV5Y2tVRVFDQU9JQUVnRVcwZ0Ftd2dEU0FTYldwQkRHeHFJZ2NnQnlnQ0FDQUVJQU1nQld3Z0NXcEJBblJxSWdNdEFBSnFOZ0lBSUFjZ0J5Z0NCQ0FETFFBQmFqWUNCQ0FISUFjb0FnZ2dBeTBBQUdvMkFnZ0xJQTFCQVdvaERRd0JDd3NnQVVFQmFpRUJEQUFMQUFzZ0NVRUFJQWxCQUVvYklROGdBMEVBSUFOQkFFb2JJUkFnQ2tRQUFBQUFBQUJaUUtBaEhpQUR0eUVoSUFtM0lTSkJBQ0VCQTBBZ0FTQVBSZzBKSUI0Z0hTQUJ0MFFBQUFBQUFBRGdQNkNpSUNLam9DRUtRUUFoRFFOQUlBMGdFRWNFUUNBTUt3TlFJQXdyQTBBZ0hpQWRJQTIzUkFBQUFBQUFBT0Evb0tJZ0lhT2dJaCtpSUFvZ0RDc0RTS0tnb0NJZ1JBQUFBQUFBQUFBQVlRME9JQXdnRENzRElDQU1Ld01RSUIraUlBb2dEQ3NER0tLZ29DQWdvN1lpR1RnQ0RDQU1JQXdyQXpnZ0RDc0RLQ0Fmb2lBS0lBd3JBekNpb0tBZ0lLTzJJaG80QWdnZ0NDQVpJQm9nREVFTWFpQU1RUWhxRUhBYUlBd3FBZ3doR1FKL0lBQkJBVVlFUUFKL0lBd3FBZ2hEQUFDQVA1SWlHb3REQUFBQVQxMEVRQ0FhcUF3QkMwR0FnSUNBZUF0QkFtMUJBWFFoQXdKL0lCbERBQUNBUDVJaUdZdERBQUFBVDEwRVFDQVpxQXdCQzBHQWdJQ0FlQXRCQW0xQkFYUU1BUXNDZnlBTUtnSUlRd0FBQUQrU0locUxRd0FBQUU5ZEJFQWdHcWdNQVF0QmdJQ0FnSGdMSVFNZ0dVTUFBQUEva2lJWmkwTUFBQUJQWFFSQUlCbW9EQUVMUVlDQWdJQjRDeUlKUVFCSUlBVWdDVXh5SUFOQkFFZ2dBeUFHVG5KeVJRUkFJQTRnQVNBUmJTQUNiQ0FOSUJKdGFrRU1iR29pQnlBSEtBSUFJQVFnQXlBRmJDQUpha0VDZEdvaUF5MEFBR28yQWdBZ0J5QUhLQUlFSUFNdEFBRnFOZ0lFSUFjZ0J5Z0NDQ0FETFFBQ2FqWUNDQXNnRFVFQmFpRU5EQUVMQ3lBQlFRRnFJUUVNQUFzQUN5QUpRUUFnQ1VFQVNoc2hEeUFEUVFBZ0EwRUFTaHNoRUNBS1JBQUFBQUFBQUZsQW9DRWVJQU8zSVNFZ0NiY2hJa0VBSVFFRFFDQUJJQTlHRFFnZ0hpQWRJQUczUkFBQUFBQUFBT0Evb0tJZ0lxT2dJUXBCQUNFTkEwQWdEU0FRUndSQUlBd3JBMUFnRENzRFFDQWVJQjBnRGJkRUFBQUFBQUFBNEQrZ29pQWhvNkFpSDZJZ0NpQU1Ld05Jb3FDZ0lpQkVBQUFBQUFBQUFBQmhEUTBnRENBTUt3TWdJQXdyQXhBZ0g2SWdDaUFNS3dNWW9xQ2dJQ0NqdGlJWk9BSU1JQXdnRENzRE9DQU1Ld01vSUIraUlBb2dEQ3NETUtLZ29DQWdvN1lpR2pnQ0NDQUlJQmtnR2lBTVFReHFJQXhCQ0dvUWNCb2dEQ29DRENFWkFuOGdBRUVCUmdSQUFuOGdEQ29DQ0VNQUFJQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEMwRUNiVUVCZENFREFuOGdHVU1BQUlBL2tpSVppME1BQUFCUFhRUkFJQm1vREFFTFFZQ0FnSUI0QzBFQ2JVRUJkQXdCQ3dKL0lBd3FBZ2hEQUFBQVA1SWlHb3REQUFBQVQxMEVRQ0FhcUF3QkMwR0FnSUNBZUFzaEF5QVpRd0FBQUQrU0lobUxRd0FBQUU5ZEJFQWdHYWdNQVF0QmdJQ0FnSGdMSWdsQkFFZ2dCU0FKVEhJZ0EwRUFTQ0FESUFaT2NuSkZCRUFnRGlBQklCRnRJQUpzSUEwZ0VtMXFRUXhzYWlJSElBY29BZ0FnQkNBRElBVnNJQWxxUVFKMGFpSURMUUFCYWpZQ0FDQUhJQWNvQWdRZ0F5MEFBbW8yQWdRZ0J5QUhLQUlJSUFNdEFBTnFOZ0lJQ3lBTlFRRnFJUTBNQVFzTElBRkJBV29oQVF3QUN3QUxJQWxCQUNBSlFRQktHeUVQSUFOQkFDQURRUUJLR3lFUUlBcEVBQUFBQUFBQVdVQ2dJUjRnQTdjaElTQUp0eUVpUVFBaEFRTkFJQUVnRDBZTkJ5QWVJQjBnQWJkRUFBQUFBQUFBNEQrZ29pQWlvNkFoQ2tFQUlRMERRQ0FOSUJCSEJFQWdEQ3NEVUNBTUt3TkFJQjRnSFNBTnQwUUFBQUFBQUFEZ1A2Q2lJQ0dqb0NJZm9pQUtJQXdyQTBpaW9LQWlJRVFBQUFBQUFBQUFBR0VORENBTUlBd3JBeUFnRENzREVDQWZvaUFLSUF3ckF4aWlvS0FnSUtPMkloazRBZ3dnRENBTUt3TTRJQXdyQXlnZ0g2SWdDaUFNS3dNd29xQ2dJQ0NqdGlJYU9BSUlJQWdnR1NBYUlBeEJER29nREVFSWFoQndHaUFNS2dJTUlSa0NmeUFBUVFGR0JFQUNmeUFNS2dJSVF3QUFnRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMElRTUNmeUFaUXdBQWdEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTFFRSnRRUUYwREFFTEFuOGdEQ29DQ0VNQUFBQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEN5RURJQmxEQUFBQVA1SWlHWXREQUFBQVQxMEVRQ0FacUF3QkMwR0FnSUNBZUFzaUNVRUFTQ0FGSUFsTWNpQURRUUJJSUFNZ0JrNXlja1VFUUNBT0lBRWdFVzBnQW13Z0RTQVNiV3BCREd4cUlnY2dCQ0FESUFWc0lBbHFhaTBBQUNJRElBY29BZ0JxTmdJQUlBY2dBeUFIS0FJRWFqWUNCQ0FISUFNZ0J5Z0NDR28yQWdnTElBMUJBV29oRFF3QkN3c2dBVUVCYWlFQkRBQUxBQXNnQ1VFQUlBbEJBRW9iSVE4Z0EwRUFJQU5CQUVvYklSQWdDa1FBQUFBQUFBQlpRS0FoSGlBRHR5RWhJQW0zSVNKQkFDRUJBMEFnQVNBUFJnMEdJQjRnSFNBQnQwUUFBQUFBQUFEZ1A2Q2lJQ0tqb0NFS1FRQWhEUU5BSUEwZ0VFY0VRQ0FNS3dOUUlBd3JBMEFnSGlBZElBMjNSQUFBQUFBQUFPQS9vS0lnSWFPZ0loK2lJQW9nRENzRFNLS2dvQ0lnUkFBQUFBQUFBQUFBWVEwTElBd2dEQ3NESUNBTUt3TVFJQitpSUFvZ0RDc0RHS0tnb0NBZ283WWlHVGdDRENBTUlBd3JBemdnRENzREtDQWZvaUFLSUF3ckF6Q2lvS0FnSUtPMklobzRBZ2dnQ0NBWklCb2dERUVNYWlBTVFRaHFFSEFhSUF3cUFnd2hHUUovSUFCQkFVWUVRQUovSUF3cUFnaERBQUNBUDVJaUdvdERBQUFBVDEwRVFDQWFxQXdCQzBHQWdJQ0FlQXRCQW0xQkFYUWhBd0ovSUJsREFBQ0FQNUlpR1l0REFBQUFUMTBFUUNBWnFBd0JDMEdBZ0lDQWVBdEJBbTFCQVhRTUFRc0NmeUFNS2dJSVF3QUFBRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xJUU1nR1VNQUFBQS9raUlaaTBNQUFBQlBYUVJBSUJtb0RBRUxRWUNBZ0lCNEN5SUpRUUJJSUFVZ0NVeHlJQU5CQUVnZ0F5QUdUbkp5UlFSQUlBNGdBU0FSYlNBQ2JDQU5JQkp0YWtFTWJHb2lCeUFIS0FJQUlBUWdBeUFGYkNBSmFrRUNkR29pQXkwQUEybzJBZ0FnQnlBSEtBSUVJQU10QUFKcU5nSUVJQWNnQnlnQ0NDQURMUUFCYWpZQ0NBc2dEVUVCYWlFTkRBRUxDeUFCUVFGcUlRRU1BQXNBQ3lBSlFRQWdDVUVBU2hzaER5QURRUUFnQTBFQVNoc2hFQ0FLUkFBQUFBQUFBRmxBb0NFZUlBTzNJU0VnQ2JjaElrRUFJUUVEUUNBQklBOUdEUVVnSGlBZElBRzNSQUFBQUFBQUFPQS9vS0lnSXFPZ0lRcEJBQ0VOQTBBZ0RTQVFSd1JBSUF3ckExQWdEQ3NEUUNBZUlCMGdEYmRFQUFBQUFBQUE0RCtnb2lBaG82QWlINklnQ2lBTUt3TklvcUNnSWlCRUFBQUFBQUFBQUFCaERRb2dEQ0FNS3dNZ0lBd3JBeEFnSDZJZ0NpQU1Ld01Zb3FDZ0lDQ2p0aUlaT0FJTUlBd2dEQ3NET0NBTUt3TW9JQitpSUFvZ0RDc0RNS0tnb0NBZ283WWlHamdDQ0NBSUlCa2dHaUFNUVF4cUlBeEJDR29RY0JvZ0RDb0NEQ0VaQW44Z0FFRUJSZ1JBQW44Z0RDb0NDRU1BQUlBL2tpSWFpME1BQUFCUFhRUkFJQnFvREFFTFFZQ0FnSUI0QzBFQ2JVRUJkQ0VEQW44Z0dVTUFBSUEva2lJWmkwTUFBQUJQWFFSQUlCbW9EQUVMUVlDQWdJQjRDMEVDYlVFQmRBd0JDd0ovSUF3cUFnaERBQUFBUDVJaUdvdERBQUFBVDEwRVFDQWFxQXdCQzBHQWdJQ0FlQXNoQXlBWlF3QUFBRCtTSWhtTFF3QUFBRTlkQkVBZ0dhZ01BUXRCZ0lDQWdIZ0xJZ2RCQUVnZ0JTQUhUSElnQTBFQVNDQURJQVpPY25KRkJFQUNmeUFFSUFNZ0JXd2lBeUFIYWtFQmRHb3RBQUZCRUd1eVEzOEtsVU9VSWhrZ0JDQUhRZjcvQTNFZ0EycEJBWFJxSWdNdEFBQkJnQUZyc2lJYVEwNGFBVVNVa2lJYmkwTUFBQUJQWFFSQUlCdW9EQUVMUVlDQWdJQjRDeUVISUFNdEFBSWhDU0FPSUFFZ0VXMGdBbXdnRFNBU2JXcEJER3hxSWdNZ0F5Z0NBQ0FIUVFoMUlnZEJBQ0FIUVFCS0d5SUhRZjhCSUFkQi93RkpHMm8yQWdBZ0F5QURLQUlJQW44Z0dTQUpRWUFCYTdJaUcwT2dTc3hEbEpJaUhJdERBQUFBVDEwRVFDQWNxQXdCQzBHQWdJQ0FlQXRCQ0hVaUIwRUFJQWRCQUVvYklnZEIvd0VnQjBIL0FVa2JhallDQ0NBRElBTW9BZ1FDZnlBYlE3Z2VVTU9VSUJrZ0drUCtsTWpDbEpLU0lobUxRd0FBQUU5ZEJFQWdHYWdNQVF0QmdJQ0FnSGdMUVFoMUlnTkJBQ0FEUVFCS0d5SURRZjhCSUFOQi93RkpHMm8yQWdRTElBMUJBV29oRFF3QkN3c2dBVUVCYWlFQkRBQUxBQXNnQ1VFQUlBbEJBRW9iSVE4Z0EwRUFJQU5CQUVvYklSQWdDa1FBQUFBQUFBQlpRS0FoSGlBRHR5RWhJQW0zSVNKQkFDRUJBMEFnQVNBUFJnMEVJQjRnSFNBQnQwUUFBQUFBQUFEZ1A2Q2lJQ0tqb0NFS1FRQWhEUU5BSUEwZ0VFY0VRQ0FNS3dOUUlBd3JBMEFnSGlBZElBMjNSQUFBQUFBQUFPQS9vS0lnSWFPZ0loK2lJQW9nRENzRFNLS2dvQ0lnUkFBQUFBQUFBQUFBWVEwSklBd2dEQ3NESUNBTUt3TVFJQitpSUFvZ0RDc0RHS0tnb0NBZ283WWlHVGdDRENBTUlBd3JBemdnRENzREtDQWZvaUFLSUF3ckF6Q2lvS0FnSUtPMklobzRBZ2dnQ0NBWklCb2dERUVNYWlBTVFRaHFFSEFhSUF3cUFnd2hHUUovSUFCQkFVWUVRQUovSUF3cUFnaERBQUNBUDVJaUdvdERBQUFBVDEwRVFDQWFxQXdCQzBHQWdJQ0FlQXRCQW0xQkFYUWhBd0ovSUJsREFBQ0FQNUlpR1l0REFBQUFUMTBFUUNBWnFBd0JDMEdBZ0lDQWVBdEJBbTFCQVhRTUFRc0NmeUFNS2dJSVF3QUFBRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xJUU1nR1VNQUFBQS9raUlaaTBNQUFBQlBYUVJBSUJtb0RBRUxRWUNBZ0lCNEN5SUhRUUJJSUFVZ0IweHlJQU5CQUVnZ0F5QUdUbkp5UlFSQUFuOGdCQ0FESUFWc0lnTWdCMnBCQVhScUxRQUFRUkJyc2tOL0NwVkRsQ0laSUFkQi92OERjU0FEYWtFQmRDQUVhaUlETFFBQlFZQUJhN0lpR2tOT0dnRkVsSklpRzR0REFBQUFUMTBFUUNBYnFBd0JDMEdBZ0lDQWVBc2hCeUFETFFBRElRa2dEaUFCSUJGdElBSnNJQTBnRW0xcVFReHNhaUlESUFNb0FnQWdCMEVJZFNJSFFRQWdCMEVBU2hzaUIwSC9BU0FIUWY4QlNSdHFOZ0lBSUFNZ0F5Z0NDQUovSUJrZ0NVR0FBV3V5SWh0RG9Fck1RNVNTSWh5TFF3QUFBRTlkQkVBZ0hLZ01BUXRCZ0lDQWdIZ0xRUWgxSWdkQkFDQUhRUUJLR3lJSFFmOEJJQWRCL3dGSkcybzJBZ2dnQXlBREtBSUVBbjhnRzBPNEhsRERsQ0FaSUJwRC9wVEl3cFNTa2lJWmkwTUFBQUJQWFFSQUlCbW9EQUVMUVlDQWdJQjRDMEVJZFNJRFFRQWdBMEVBU2hzaUEwSC9BU0FEUWY4QlNSdHFOZ0lFQ3lBTlFRRnFJUTBNQVFzTElBRkJBV29oQVF3QUN3QUxJQWxCQUNBSlFRQktHeUVQSUFOQkFDQURRUUJLR3lFUUlBcEVBQUFBQUFBQVdVQ2dJUjRnQTdjaElTQUp0eUVpUVFBaEFRTkFJQUVnRDBZTkF5QWVJQjBnQWJkRUFBQUFBQUFBNEQrZ29pQWlvNkFoQ2tFQUlRMERRQ0FOSUJCSEJFQWdEQ3NEVUNBTUt3TkFJQjRnSFNBTnQwUUFBQUFBQUFEZ1A2Q2lJQ0dqb0NJZm9pQUtJQXdyQTBpaW9LQWlJRVFBQUFBQUFBQUFBR0VOQ0NBTUlBd3JBeUFnRENzREVDQWZvaUFLSUF3ckF4aWlvS0FnSUtPMkloazRBZ3dnRENBTUt3TTRJQXdyQXlnZ0g2SWdDaUFNS3dNd29xQ2dJQ0NqdGlJYU9BSUlJQWdnR1NBYUlBeEJER29nREVFSWFoQndHaUFNS2dJTUlSa0NmeUFBUVFGR0JFQUNmeUFNS2dJSVF3QUFnRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMElRTUNmeUFaUXdBQWdEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTFFRSnRRUUYwREFFTEFuOGdEQ29DQ0VNQUFBQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEN5RURJQmxEQUFBQVA1SWlHWXREQUFBQVQxMEVRQ0FacUF3QkMwR0FnSUNBZUFzaUNVRUFTQ0FGSUFsTWNpQURRUUJJSUFNZ0JrNXlja1VFUUNBT0lBRWdFVzBnQW13Z0RTQVNiV3BCREd4cUlnY2dCeWdDQUNBRUlBTWdCV3dnQ1dwQkFYUnFJZ010QUFFaUNVRURkRUVFY2tIOEFYRnFOZ0lBSUFjZ0J5Z0NDQ0FETFFBQUlnTkJCSEpCL0FGeGFqWUNDQ0FISUFjb0FnUWdBMEVGZENBSlFRTjJja0VDY2tIK0FYRnFOZ0lFQ3lBTlFRRnFJUTBNQVFzTElBRkJBV29oQVF3QUN3QUxJQWxCQUNBSlFRQktHeUVQSUFOQkFDQURRUUJLR3lFUUlBcEVBQUFBQUFBQVdVQ2dJUjRnQTdjaElTQUp0eUVpUVFBaEFRTkFJQUVnRDBZTkFpQWVJQjBnQWJkRUFBQUFBQUFBNEQrZ29pQWlvNkFoQ2tFQUlRMERRQ0FOSUJCSEJFQWdEQ3NEVUNBTUt3TkFJQjRnSFNBTnQwUUFBQUFBQUFEZ1A2Q2lJQ0dqb0NJZm9pQUtJQXdyQTBpaW9LQWlJRVFBQUFBQUFBQUFBR0VOQnlBTUlBd3JBeUFnRENzREVDQWZvaUFLSUF3ckF4aWlvS0FnSUtPMkloazRBZ3dnRENBTUt3TTRJQXdyQXlnZ0g2SWdDaUFNS3dNd29xQ2dJQ0NqdGlJYU9BSUlJQWdnR1NBYUlBeEJER29nREVFSWFoQndHaUFNS2dJTUlSa0NmeUFBUVFGR0JFQUNmeUFNS2dJSVF3QUFnRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMElRTUNmeUFaUXdBQWdEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTFFRSnRRUUYwREFFTEFuOGdEQ29DQ0VNQUFBQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEN5RURJQmxEQUFBQVA1SWlHWXREQUFBQVQxMEVRQ0FacUF3QkMwR0FnSUNBZUFzaUNVRUFTQ0FGSUFsTWNpQURRUUJJSUFNZ0JrNXlja1VFUUNBT0lBRWdFVzBnQW13Z0RTQVNiV3BCREd4cUlnY2dCeWdDQUNBRUlBTWdCV3dnQ1dwQkFYUnFJZ010QUFFaUNVRUNkRUVFY2tIOEFYRnFOZ0lBSUFjZ0J5Z0NDQ0FETFFBQUlnTkJCSEpCL0FGeGFqWUNDQ0FISUFjb0FnUWdBMEVGZENBSlFRTjJja0VFY2tIOEFYRnFOZ0lFQ3lBTlFRRnFJUTBNQVFzTElBRkJBV29oQVF3QUN3QUxJQWxCQUNBSlFRQktHeUVQSUFOQkFDQURRUUJLR3lFUUlBcEVBQUFBQUFBQVdVQ2dJUjRnQTdjaElTQUp0eUVpUVFBaEFRTkFJQUVnRDBZTkFTQWVJQjBnQWJkRUFBQUFBQUFBNEQrZ29pQWlvNkFoQ2tFQUlRMERRQ0FOSUJCSEJFQWdEQ3NEVUNBTUt3TkFJQjRnSFNBTnQwUUFBQUFBQUFEZ1A2Q2lJQ0dqb0NJZm9pQUtJQXdyQTBpaW9LQWlJRVFBQUFBQUFBQUFBR0VOQmlBTUlBd3JBeUFnRENzREVDQWZvaUFLSUF3ckF4aWlvS0FnSUtPMkloazRBZ3dnRENBTUt3TTRJQXdyQXlnZ0g2SWdDaUFNS3dNd29xQ2dJQ0NqdGlJYU9BSUlJQWdnR1NBYUlBeEJER29nREVFSWFoQndHaUFNS2dJTUlSa0NmeUFBUVFGR0JFQUNmeUFNS2dJSVF3QUFnRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMElRTUNmeUFaUXdBQWdEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTFFRSnRRUUYwREFFTEFuOGdEQ29DQ0VNQUFBQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEN5RURJQmxEQUFBQVA1SWlHWXREQUFBQVQxMEVRQ0FacUF3QkMwR0FnSUNBZUFzaUNVRUFTQ0FGSUFsTWNpQURRUUJJSUFNZ0JrNXlja1VFUUNBT0lBRWdFVzBnQW13Z0RTQVNiV3BCREd4cUlnY2dCeWdDQUNBRUlBTWdCV3dnQ1dwQkFYUnFJZ010QUFGQjhBRnhha0VJYWpZQ0FDQUhJQWNvQWdnZ0F5MEFBQ0lEUVFoeVFmZ0JjV28yQWdnZ0J5QUhLQUlFSUFOQkJIUkJDSEpCK0FGeGFqWUNCQXNnRFVFQmFpRU5EQUVMQ3lBQlFRRnFJUUVNQUFzQUN5QVJJQkpzSVFCQkFDRUpRUUFoRFFOQUlBMGdFMFlOQkNBTElBMXFJQTRnRFVFQ2RHb29BZ0FnQUc0NkFBQWdEVUVCYWlFTkRBQUxBQXNnRTBFRUVJUURJZzVGRFFNQ1FDQUhRUUZOQkVBZ0NVRUFJQWxCQUVvYklROGdBMEVBSUFOQkFFb2JJUkFnQ2tRQUFBQUFBQUJaUUtBaEhpQUR0eUVoSUFtM0lTSkJBQ0VCQTBBZ0FTQVBSZzBDSUI0Z0hTQUJ0MFFBQUFBQUFBRGdQNkNpSUNLam9DRUtRUUFoRFFOQUlBMGdFRWNFUUNBTUt3TlFJQXdyQTBBZ0hpQWRJQTIzUkFBQUFBQUFBT0Evb0tJZ0lhT2dJaCtpSUFvZ0RDc0RTS0tnb0NJZ1JBQUFBQUFBQUFBQVlRMEdJQXdnRENzRElDQU1Ld01RSUIraUlBb2dEQ3NER0tLZ29DQWdvN1lpR1RnQ0RDQU1JQXdyQXpnZ0RDc0RLQ0Fmb2lBS0lBd3JBekNpb0tBZ0lLTzJJaG80QWdnZ0NDQVpJQm9nREVFTWFpQU1RUWhxRUhBYUlBd3FBZ3doR1FKL0lBQkJBVVlFUUFKL0lBd3FBZ2hEQUFDQVA1SWlHb3REQUFBQVQxMEVRQ0FhcUF3QkMwR0FnSUNBZUF0QkFtMUJBWFFoQXdKL0lCbERBQUNBUDVJaUdZdERBQUFBVDEwRVFDQVpxQXdCQzBHQWdJQ0FlQXRCQW0xQkFYUU1BUXNDZnlBTUtnSUlRd0FBQUQrU0locUxRd0FBQUU5ZEJFQWdHcWdNQVF0QmdJQ0FnSGdMSVFNZ0dVTUFBQUEva2lJWmkwTUFBQUJQWFFSQUlCbW9EQUVMUVlDQWdJQjRDeUlIUVFCSUlBVWdCMHh5SUFOQkFFZ2dBeUFHVG5KeVJRUkFJQTRnQVNBUmJTQUNiQ0FOSUJKdGFrRUNkR29pQ1NBSktBSUFJQVFnQXlBRmJDQUhha0VEYkdvaUF5MEFBU0FETFFBQWFpQURMUUFDYWtFRGJtbzJBZ0FMSUExQkFXb2hEUXdCQ3dzZ0FVRUJhaUVCREFBTEFBc2dCMEYrY1VFQ1JnUkFJQWxCQUNBSlFRQktHeUVQSUFOQkFDQURRUUJLR3lFUUlBcEVBQUFBQUFBQVdVQ2dJUjRnQTdjaElTQUp0eUVpUVFBaEFRTkFJQUVnRDBZTkFpQWVJQjBnQWJkRUFBQUFBQUFBNEQrZ29pQWlvNkFoQ2tFQUlRMERRQ0FOSUJCSEJFQWdEQ3NEVUNBTUt3TkFJQjRnSFNBTnQwUUFBQUFBQUFEZ1A2Q2lJQ0dqb0NJZm9pQUtJQXdyQTBpaW9LQWlJRVFBQUFBQUFBQUFBR0VOQmlBTUlBd3JBeUFnRENzREVDQWZvaUFLSUF3ckF4aWlvS0FnSUtPMkloazRBZ3dnRENBTUt3TTRJQXdyQXlnZ0g2SWdDaUFNS3dNd29xQ2dJQ0NqdGlJYU9BSUlJQWdnR1NBYUlBeEJER29nREVFSWFoQndHaUFNS2dJTUlSa0NmeUFBUVFGR0JFQUNmeUFNS2dJSVF3QUFnRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMElRTUNmeUFaUXdBQWdEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTFFRSnRRUUYwREFFTEFuOGdEQ29DQ0VNQUFBQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEN5RURJQmxEQUFBQVA1SWlHWXREQUFBQVQxMEVRQ0FacUF3QkMwR0FnSUNBZUFzaUIwRUFTQ0FGSUFkTWNpQURRUUJJSUFNZ0JrNXlja1VFUUNBT0lBRWdFVzBnQW13Z0RTQVNiV3BCQW5ScUlna2dDU2dDQUNBRUlBTWdCV3dnQjJwQkFuUnFJZ010QUFFZ0F5MEFBR29nQXkwQUFtcEJBMjVxTmdJQUN5QU5RUUZxSVEwTUFRc0xJQUZCQVdvaEFRd0FDd0FMSUFkQmZYRkJCRVlFUUNBSlFRQWdDVUVBU2hzaER5QURRUUFnQTBFQVNoc2hFQ0FLUkFBQUFBQUFBRmxBb0NFZUlBTzNJU0VnQ2JjaElrRUFJUUVEUUNBQklBOUdEUUlnSGlBZElBRzNSQUFBQUFBQUFPQS9vS0lnSXFPZ0lRcEJBQ0VOQTBBZ0RTQVFSd1JBSUF3ckExQWdEQ3NEUUNBZUlCMGdEYmRFQUFBQUFBQUE0RCtnb2lBaG82QWlINklnQ2lBTUt3TklvcUNnSWlCRUFBQUFBQUFBQUFCaERRWWdEQ0FNS3dNZ0lBd3JBeEFnSDZJZ0NpQU1Ld01Zb3FDZ0lDQ2p0aUlaT0FJTUlBd2dEQ3NET0NBTUt3TW9JQitpSUFvZ0RDc0RNS0tnb0NBZ283WWlHamdDQ0NBSUlCa2dHaUFNUVF4cUlBeEJDR29RY0JvZ0RDb0NEQ0VaQW44Z0FFRUJSZ1JBQW44Z0RDb0NDRU1BQUlBL2tpSWFpME1BQUFCUFhRUkFJQnFvREFFTFFZQ0FnSUI0QzBFQ2JVRUJkQ0VEQW44Z0dVTUFBSUEva2lJWmkwTUFBQUJQWFFSQUlCbW9EQUVMUVlDQWdJQjRDMEVDYlVFQmRBd0JDd0ovSUF3cUFnaERBQUFBUDVJaUdvdERBQUFBVDEwRVFDQWFxQXdCQzBHQWdJQ0FlQXNoQXlBWlF3QUFBRCtTSWhtTFF3QUFBRTlkQkVBZ0dhZ01BUXRCZ0lDQWdIZ0xJZ2RCQUVnZ0JTQUhUSElnQTBFQVNDQURJQVpPY25KRkJFQWdEaUFCSUJGdElBSnNJQTBnRW0xcVFRSjBhaUlKSUFrb0FnQWdCQ0FESUFWc0lBZHFRUUowYWlJRExRQUNJQU10QUFGcUlBTXRBQU5xUVFOdWFqWUNBQXNnRFVFQmFpRU5EQUVMQ3lBQlFRRnFJUUVNQUFzQUN3SkFBa0FDUUFKQUFrQUNRQ0FIUVFWckRnb0FCd0VDQXdRRkFBQUFCd3NnQ1VFQUlBbEJBRW9iSVE4Z0EwRUFJQU5CQUVvYklSQWdDa1FBQUFBQUFBQlpRS0FoSGlBRHR5RWhJQW0zSVNKQkFDRUJBMEFnQVNBUFJnMEdJQjRnSFNBQnQwUUFBQUFBQUFEZ1A2Q2lJQ0tqb0NFS1FRQWhEUU5BSUEwZ0VFY0VRQ0FNS3dOUUlBd3JBMEFnSGlBZElBMjNSQUFBQUFBQUFPQS9vS0lnSWFPZ0loK2lJQW9nRENzRFNLS2dvQ0lnUkFBQUFBQUFBQUFBWVEwS0lBd2dEQ3NESUNBTUt3TVFJQitpSUFvZ0RDc0RHS0tnb0NBZ283WWlHVGdDRENBTUlBd3JBemdnRENzREtDQWZvaUFLSUF3ckF6Q2lvS0FnSUtPMklobzRBZ2dnQ0NBWklCb2dERUVNYWlBTVFRaHFFSEFhSUF3cUFnd2hHUUovSUFCQkFVWUVRQUovSUF3cUFnaERBQUNBUDVJaUdvdERBQUFBVDEwRVFDQWFxQXdCQzBHQWdJQ0FlQXRCQW0xQkFYUWhBd0ovSUJsREFBQ0FQNUlpR1l0REFBQUFUMTBFUUNBWnFBd0JDMEdBZ0lDQWVBdEJBbTFCQVhRTUFRc0NmeUFNS2dJSVF3QUFBRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xJUU1nR1VNQUFBQS9raUlaaTBNQUFBQlBYUVJBSUJtb0RBRUxRWUNBZ0lCNEN5SUhRUUJJSUFVZ0IweHlJQU5CQUVnZ0F5QUdUbkp5UlFSQUlBNGdBU0FSYlNBQ2JDQU5JQkp0YWtFQ2RHb2lDU0FKS0FJQUlBUWdBeUFGYkNBSGFtb3RBQUJxTmdJQUN5QU5RUUZxSVEwTUFRc0xJQUZCQVdvaEFRd0FDd0FMSUFsQkFDQUpRUUJLR3lFUElBTkJBQ0FEUVFCS0d5RVFJQXBFQUFBQUFBQUFXVUNnSVI0Z0E3Y2hJU0FKdHlFaVFRQWhBUU5BSUFFZ0QwWU5CU0FlSUIwZ0FiZEVBQUFBQUFBQTREK2dvaUFpbzZBaENrRUFJUTBEUUNBTklCQkhCRUFnRENzRFVDQU1Ld05BSUI0Z0hTQU50MFFBQUFBQUFBRGdQNkNpSUNHam9DSWZvaUFLSUF3ckEwaWlvS0FpSUVRQUFBQUFBQUFBQUdFTkNTQU1JQXdyQXlBZ0RDc0RFQ0Fmb2lBS0lBd3JBeGlpb0tBZ0lLTzJJaGs0QWd3Z0RDQU1Ld000SUF3ckF5Z2dINklnQ2lBTUt3TXdvcUNnSUNDanRpSWFPQUlJSUFnZ0dTQWFJQXhCREdvZ0RFRUlhaEJ3R2lBTUtnSU1JUmtDZnlBQVFRRkdCRUFDZnlBTUtnSUlRd0FBZ0QrU0locUxRd0FBQUU5ZEJFQWdHcWdNQVF0QmdJQ0FnSGdMUVFKdFFRRjBJUU1DZnlBWlF3QUFnRCtTSWhtTFF3QUFBRTlkQkVBZ0dhZ01BUXRCZ0lDQWdIZ0xRUUp0UVFGMERBRUxBbjhnRENvQ0NFTUFBQUEva2lJYWkwTUFBQUJQWFFSQUlCcW9EQUVMUVlDQWdJQjRDeUVESUJsREFBQUFQNUlpR1l0REFBQUFUMTBFUUNBWnFBd0JDMEdBZ0lDQWVBc2lCMEVBU0NBRklBZE1jaUFEUVFCSUlBTWdCazV5Y2tVRVFDQU9JQUVnRVcwZ0Ftd2dEU0FTYldwQkFuUnFJZ2tnQ1NnQ0FDQUVJQU1nQld3Z0IycEJBWFJxTFFBQmFqWUNBQXNnRFVFQmFpRU5EQUVMQ3lBQlFRRnFJUUVNQUFzQUN5QUpRUUFnQ1VFQVNoc2hEeUFEUVFBZ0EwRUFTaHNoRUNBS1JBQUFBQUFBQUZsQW9DRWVJQU8zSVNFZ0NiY2hJa0VBSVFFRFFDQUJJQTlHRFFRZ0hpQWRJQUczUkFBQUFBQUFBT0Evb0tJZ0lxT2dJUXBCQUNFTkEwQWdEU0FRUndSQUlBd3JBMUFnRENzRFFDQWVJQjBnRGJkRUFBQUFBQUFBNEQrZ29pQWhvNkFpSDZJZ0NpQU1Ld05Jb3FDZ0lpQkVBQUFBQUFBQUFBQmhEUWdnRENBTUt3TWdJQXdyQXhBZ0g2SWdDaUFNS3dNWW9xQ2dJQ0NqdGlJWk9BSU1JQXdnRENzRE9DQU1Ld01vSUIraUlBb2dEQ3NETUtLZ29DQWdvN1lpR2pnQ0NDQUlJQmtnR2lBTVFReHFJQXhCQ0dvUWNCb2dEQ29DRENFWkFuOGdBRUVCUmdSQUFuOGdEQ29DQ0VNQUFJQS9raUlhaTBNQUFBQlBYUVJBSUJxb0RBRUxRWUNBZ0lCNEMwRUNiVUVCZENFREFuOGdHVU1BQUlBL2tpSVppME1BQUFCUFhRUkFJQm1vREFFTFFZQ0FnSUI0QzBFQ2JVRUJkQXdCQ3dKL0lBd3FBZ2hEQUFBQVA1SWlHb3REQUFBQVQxMEVRQ0FhcUF3QkMwR0FnSUNBZUFzaEF5QVpRd0FBQUQrU0lobUxRd0FBQUU5ZEJFQWdHYWdNQVF0QmdJQ0FnSGdMSWdkQkFFZ2dCU0FIVEhJZ0EwRUFTQ0FESUFaT2NuSkZCRUFnRGlBQklCRnRJQUpzSUEwZ0VtMXFRUUowYWlJSklBa29BZ0FnQkNBRElBVnNJQWRxUVFGMGFpMEFBR28yQWdBTElBMUJBV29oRFF3QkN3c2dBVUVCYWlFQkRBQUxBQXNnQ1VFQUlBbEJBRW9iSVE4Z0EwRUFJQU5CQUVvYklSQWdDa1FBQUFBQUFBQlpRS0FoSGlBRHR5RWhJQW0zSVNKQkFDRUJBMEFnQVNBUFJnMERJQjRnSFNBQnQwUUFBQUFBQUFEZ1A2Q2lJQ0tqb0NFS1FRQWhEUU5BSUEwZ0VFY0VRQ0FNS3dOUUlBd3JBMEFnSGlBZElBMjNSQUFBQUFBQUFPQS9vS0lnSWFPZ0loK2lJQW9nRENzRFNLS2dvQ0lnUkFBQUFBQUFBQUFBWVEwSElBd2dEQ3NESUNBTUt3TVFJQitpSUFvZ0RDc0RHS0tnb0NBZ283WWlHVGdDRENBTUlBd3JBemdnRENzREtDQWZvaUFLSUF3ckF6Q2lvS0FnSUtPMklobzRBZ2dnQ0NBWklCb2dERUVNYWlBTVFRaHFFSEFhSUF3cUFnd2hHUUovSUFCQkFVWUVRQUovSUF3cUFnaERBQUNBUDVJaUdvdERBQUFBVDEwRVFDQWFxQXdCQzBHQWdJQ0FlQXRCQW0xQkFYUWhBd0ovSUJsREFBQ0FQNUlpR1l0REFBQUFUMTBFUUNBWnFBd0JDMEdBZ0lDQWVBdEJBbTFCQVhRTUFRc0NmeUFNS2dJSVF3QUFBRCtTSWhxTFF3QUFBRTlkQkVBZ0dxZ01BUXRCZ0lDQWdIZ0xJUU1nR1VNQUFBQS9raUlaaTBNQUFBQlBYUVJBSUJtb0RBRUxRWUNBZ0lCNEN5SUhRUUJJSUFVZ0IweHlJQU5CQUVnZ0F5QUdUbkp5UlFSQUlBNGdBU0FSYlNBQ2JDQU5JQkp0YWtFQ2RHb2lDU0FKS0FJQUlBUWdBeUFGYkNBSGFrRUJkR29pQXkwQUFDSUhRZmdCY1NBRExRQUJJZ05CQTNSQitBRnhhaUFIUVFWMElBTkJBM1p5UWZ3QmNXcEJDbXBCQTI1cU5nSUFDeUFOUVFGcUlRME1BUXNMSUFGQkFXb2hBUXdBQ3dBTElBbEJBQ0FKUVFCS0d5RVBJQU5CQUNBRFFRQktHeUVRSUFwRUFBQUFBQUFBV1VDZ0lSNGdBN2NoSVNBSnR5RWlRUUFoQVFOQUlBRWdEMFlOQWlBZUlCMGdBYmRFQUFBQUFBQUE0RCtnb2lBaW82QWhDa0VBSVEwRFFDQU5JQkJIQkVBZ0RDc0RVQ0FNS3dOQUlCNGdIU0FOdDBRQUFBQUFBQURnUDZDaUlDR2pvQ0lmb2lBS0lBd3JBMGlpb0tBaUlFUUFBQUFBQUFBQUFHRU5CaUFNSUF3ckF5QWdEQ3NERUNBZm9pQUtJQXdyQXhpaW9LQWdJS08ySWhrNEFnd2dEQ0FNS3dNNElBd3JBeWdnSDZJZ0NpQU1Ld013b3FDZ0lDQ2p0aUlhT0FJSUlBZ2dHU0FhSUF4QkRHb2dERUVJYWhCd0dpQU1LZ0lNSVJrQ2Z5QUFRUUZHQkVBQ2Z5QU1LZ0lJUXdBQWdEK1NJaHFMUXdBQUFFOWRCRUFnR3FnTUFRdEJnSUNBZ0hnTFFRSnRRUUYwSVFNQ2Z5QVpRd0FBZ0QrU0lobUxRd0FBQUU5ZEJFQWdHYWdNQVF0QmdJQ0FnSGdMUVFKdFFRRjBEQUVMQW44Z0RDb0NDRU1BQUFBL2tpSWFpME1BQUFCUFhRUkFJQnFvREFFTFFZQ0FnSUI0Q3lFRElCbERBQUFBUDVJaUdZdERBQUFBVDEwRVFDQVpxQXdCQzBHQWdJQ0FlQXNpQjBFQVNDQUZJQWRNY2lBRFFRQklJQU1nQms1eWNrVUVRQ0FPSUFFZ0VXMGdBbXdnRFNBU2JXcEJBblJxSWdrZ0NTZ0NBQ0FFSUFNZ0JXd2dCMnBCQVhScUlnTXRBQUFpQjBINEFYRWdBeTBBQVNJRFFRSjBRZmdCY1dvZ0IwRUZkQ0FEUVFOMmNrSDRBWEZxUVF4cVFRTnVhallDQUFzZ0RVRUJhaUVOREFFTEN5QUJRUUZxSVFFTUFBc0FDeUFKUVFBZ0NVRUFTaHNoRHlBRFFRQWdBMEVBU2hzaEVDQUtSQUFBQUFBQUFGbEFvQ0VlSUFPM0lTRWdDYmNoSWtFQUlRRURRQ0FCSUE5R0RRRWdIaUFkSUFHM1JBQUFBQUFBQU9BL29LSWdJcU9nSVFwQkFDRU5BMEFnRFNBUVJ3UkFJQXdyQTFBZ0RDc0RRQ0FlSUIwZ0RiZEVBQUFBQUFBQTREK2dvaUFobzZBaUg2SWdDaUFNS3dOSW9xQ2dJaUJFQUFBQUFBQUFBQUJoRFFVZ0RDQU1Ld01nSUF3ckF4QWdINklnQ2lBTUt3TVlvcUNnSUNDanRpSVpPQUlNSUF3Z0RDc0RPQ0FNS3dNb0lCK2lJQW9nRENzRE1LS2dvQ0FnbzdZaUdqZ0NDQ0FJSUJrZ0dpQU1RUXhxSUF4QkNHb1FjQm9nRENvQ0RDRVpBbjhnQUVFQlJnUkFBbjhnRENvQ0NFTUFBSUEva2lJYWkwTUFBQUJQWFFSQUlCcW9EQUVMUVlDQWdJQjRDMEVDYlVFQmRDRURBbjhnR1VNQUFJQS9raUlaaTBNQUFBQlBYUVJBSUJtb0RBRUxRWUNBZ0lCNEMwRUNiVUVCZEF3QkN3Si9JQXdxQWdoREFBQUFQNUlpR290REFBQUFUMTBFUUNBYXFBd0JDMEdBZ0lDQWVBc2hBeUFaUXdBQUFEK1NJaG1MUXdBQUFFOWRCRUFnR2FnTUFRdEJnSUNBZ0hnTElnZEJBRWdnQlNBSFRISWdBMEVBU0NBRElBWk9jbkpGQkVBZ0RpQUJJQkZ0SUFKc0lBMGdFbTFxUVFKMGFpSUpJQWtvQWdBZ0JDQURJQVZzSUFkcVFRRjBhaUlETFFBQUlnZEI4QUZ4SUFkQkJIUkI4QUZ4YWlBRExRQUJRUWh5UWZnQmNXcEJFR3BCQTI1cU5nSUFDeUFOUVFGcUlRME1BUXNMSUFGQkFXb2hBUXdBQ3dBTElCRWdFbXdoQUVFQUlRbEJBQ0VOQTBBZ0RTQVRSZzBESUFzZ0RXb2dEaUFOUVFKMGFpZ0NBQ0FBYmpvQUFDQU5RUUZxSVEwTUFBc0FDMEVBUVFOQnl4VkJBQkE1QzBGL0lRa0xJQTRRTVNBTVFlQUJhaVFBSUFrUEMwRUFRUU5CNXcxQkFCQTVRUUVRQWdBTEVRQWdBQ0FCSUFFb0FnQW9BaWdSQWdBTENBQkIvLy8vL3djTEJRQkIvd0FMS3dBQ1FDQUFJQUZHRFFBRFFDQUFJQUZCQkdzaUFVOE5BU0FBSUFFUVJTQUFRUVJxSVFBTUFBc0FDd3ZRQVFFQ2Z5QUNRWUFRY1FSQUlBQkJLem9BQUNBQVFRRnFJUUFMSUFKQmdBaHhCRUFnQUVFak9nQUFJQUJCQVdvaEFBc2dBa0dFQW5FaUEwR0VBa2NFUUNBQVFhN1VBRHNBQUNBQVFRSnFJUUFMSUFKQmdJQUJjU0VDQTBBZ0FTMEFBQ0lFQkVBZ0FDQUVPZ0FBSUFCQkFXb2hBQ0FCUVFGcUlRRU1BUXNMSUFBQ2Z3SkFJQU5CZ0FKSEJFQWdBMEVFUncwQlFjWUFRZVlBSUFJYkRBSUxRY1VBUWVVQUlBSWJEQUVMUWNFQVFlRUFJQUliSUFOQmhBSkdEUUFhUWNjQVFlY0FJQUliQ3pvQUFDQURRWVFDUnd1cUFRRUJmd0pBSUFOQmdCQnhSUTBBSUFKRklBTkJ5Z0J4SWdSQkNFWWdCRUhBQUVaeWNnMEFJQUJCS3pvQUFDQUFRUUZxSVFBTElBTkJnQVJ4QkVBZ0FFRWpPZ0FBSUFCQkFXb2hBQXNEUUNBQkxRQUFJZ1FFUUNBQUlBUTZBQUFnQUVFQmFpRUFJQUZCQVdvaEFRd0JDd3NnQUFKL1FlOEFJQU5CeWdCeElnRkJ3QUJHRFFBYVFkZ0FRZmdBSUFOQmdJQUJjUnNnQVVFSVJnMEFHa0hrQUVIMUFDQUNHd3M2QUFBTERBQWdBQkE5SUFGQkFuUnFDNjhFQVF0L0l3QkJnQUZySWdva0FDQUtJQUUyQW5nZ0FpQURFUHNESVFnZ0NrSFNBallDRUNBS1FRaHFRUUFnQ2tFUWFpSUpFR1FoRHdKQUlBaEI1UUJQQkVBZ0NCQTNJZ2xGRFFFZ0R5QUpFSHNMSUFraEJ5QUNJUUVEUUNBQklBTkdCRUFEUUFKQUlBQWdDa0g0QUdvUWpBRkJBQ0FJRzBVRVFDQUFJQXBCK0FCcUVITUVRQ0FGSUFVb0FnQkJBbkkyQWdBTERBRUxJQUFRWnlFTklBWkZCRUFnQkNBTkVJSUJJUTBMSUF4QkFXb2hFRUVBSVE0Z0NTRUhJQUloQVFOQUlBRWdBMFlFUUNBUUlRd2dEa1VOQXlBQUVId2FJQWtoQnlBQ0lRRWdDQ0FMYWtFQ1NRMERBMEFnQVNBRFJnUkFEQVVGQWtBZ0J5MEFBRUVDUncwQUlBRVFOU0FNUmcwQUlBZEJBRG9BQUNBTFFRRnJJUXNMSUFkQkFXb2hCeUFCUVF4cUlRRU1BUXNBQ3dBRkFrQWdCeTBBQUVFQlJ3MEFJQUVnREJER0F5Z0NBQ0VSQWtBZ0JnUi9JQkVGSUFRZ0VSQ0NBUXNnRFVZRVFFRUJJUTRnQVJBMUlCQkhEUUlnQjBFQ09nQUFJQXRCQVdvaEN3d0JDeUFIUVFBNkFBQUxJQWhCQVdzaENBc2dCMEVCYWlFSElBRkJER29oQVF3QkN3QUxBQXNMQWtBQ1FBTkFJQUlnQTBZTkFTQUpMUUFBUVFKSEJFQWdDVUVCYWlFSklBSkJER29oQWd3QkN3c2dBaUVEREFFTElBVWdCU2dDQUVFRWNqWUNBQXNnRHhCaklBcEJnQUZxSkFBZ0F3OEZBa0FnQVJDN0FVVUVRQ0FIUVFFNkFBQU1BUXNnQjBFQ09nQUFJQXRCQVdvaEN5QUlRUUZySVFnTElBZEJBV29oQnlBQlFReHFJUUVNQVFzQUN3QUxFSFVBQ3hFQUlBQWdBU0FBS0FJQUtBSU1FUU1BQzdZRUFRdC9Jd0JCZ0FGcklnb2tBQ0FLSUFFMkFuZ2dBaUFERVBzRElRZ2dDa0hTQWpZQ0VDQUtRUWhxUVFBZ0NrRVFhaUlKRUdRaER3SkFJQWhCNVFCUEJFQWdDQkEzSWdsRkRRRWdEeUFKRUhzTElBa2hCeUFDSVFFRFFDQUJJQU5HQkVBRFFBSkFJQUFnQ2tINEFHb1FqUUZCQUNBSUcwVUVRQ0FBSUFwQitBQnFFSFFFUUNBRklBVW9BZ0JCQW5JMkFnQUxEQUVMSUFBUWFDRU5JQVpGQkVBZ0JDQU5FTWdESVEwTElBeEJBV29oRUVFQUlRNGdDU0VISUFJaEFRTkFJQUVnQTBZRVFDQVFJUXdnRGtVTkF5QUFFSDBhSUFraEJ5QUNJUUVnQ0NBTGFrRUNTUTBEQTBBZ0FTQURSZ1JBREFVRkFrQWdCeTBBQUVFQ1J3MEFJQUVRTlNBTVJnMEFJQWRCQURvQUFDQUxRUUZySVFzTElBZEJBV29oQnlBQlFReHFJUUVNQVFzQUN3QUZBa0FnQnkwQUFFRUJSdzBBSUFFZ0RCQkFMQUFBSVJFQ1FDQU5RZjhCY1NBR0JIOGdFUVVnQkNBUkVNZ0RDMEgvQVhGR0JFQkJBU0VPSUFFUU5TQVFSdzBDSUFkQkFqb0FBQ0FMUVFGcUlRc01BUXNnQjBFQU9nQUFDeUFJUVFGcklRZ0xJQWRCQVdvaEJ5QUJRUXhxSVFFTUFRc0FDd0FMQ3dKQUFrQURRQ0FDSUFOR0RRRWdDUzBBQUVFQ1J3UkFJQWxCQVdvaENTQUNRUXhxSVFJTUFRc0xJQUloQXd3QkN5QUZJQVVvQWdCQkJISTJBZ0FMSUE4UVl5QUtRWUFCYWlRQUlBTVBCUUpBSUFFUXV3RkZCRUFnQjBFQk9nQUFEQUVMSUFkQkFqb0FBQ0FMUVFGcUlRc2dDRUVCYXlFSUN5QUhRUUZxSVFjZ0FVRU1haUVCREFFTEFBc0FDeEIxQUF0L0FnSi9BbjRqQUVHZ0FXc2lCQ1FBSUFRZ0FUWUNQQ0FFSUFFMkFoUWdCRUYvTmdJWUlBUkJFR29pQlVJQUVMOEJJQVFnQlNBRFFRRVFoZ1VnQkNrRENDRUdJQVFwQXdBaEJ5QUNCRUFnQWlBQklBUW9BaFFnQkNnQ2lBRnFJQVFvQWp4cmFqWUNBQXNnQUNBR053TUlJQUFnQnpjREFDQUVRYUFCYWlRQUN3c0FJQUJCaEswRUVNa0JDeWNCQVg4Z0FFRUVhaERYQkNFQ0lBQkIvSUFETmdJQUlBSkJrSUVETmdJQUlBSWdBUkQzQWdzbkFRRi9JQUJCQkdvUWdnVWhBaUFBUWR6L0FqWUNBQ0FDUWZEL0FqWUNBQ0FDSUFFUTl3SUxDd0FnQUVIOHJBUVF5UUVMdUFFQkFYOGpBRUVRYXlJQkpBQWdBQ0FBS0FJQVFReHJLQUlBYWlnQ0dBUkFJQUVnQURZQ0RDQUJRUUE2QUFnZ0FDQUFLQUlBUVF4cktBSUFhaERVQXdSQUlBQWdBQ2dDQUVFTWF5Z0NBR29vQWtnRVFDQUFJQUFvQWdCQkRHc29BZ0JxS0FKSUVNOERDeUFCUVFFNkFBZ0xBa0FnQVMwQUNFVU5BQ0FBSUFBb0FnQkJER3NvQWdCcUtBSVlFTW9DUVg5SERRQWdBQ0FBS0FJQVFReHJLQUlBYWtFQkVNTUNDeUFCUVFocUVNa0NDeUFCUVJCcUpBQUxGQUFnQUVHSWdBTTJBZ0FnQUVFRWFoQkdJQUFMWFFFQ2Z3SkFJQUFvQWdBaUFrVU5BQUovSUFJb0FoZ2lBeUFDS0FJY1JnUkFJQUlnQVJDK0FTQUNLQUlBS0FJMEVRTUFEQUVMSUFJZ0EwRUJhallDR0NBRElBRTZBQUFnQVJDK0FRdEJmeEM1QVVVTkFDQUFRUUEyQWdBTEN3a0FJQUFRZ0FNUU1Rdk55d0VDRG44QmZDQURSUVJBSUFSQkFVWUVRQ0FJQkVBQ2Z5QUFJUVJCQUNFRElBRWlCa0VBSUFGQkFFb2JJUUFnQnlnQ0FDSUJJQUlpQlVFQmF5SUxJQVpzUVFGMGFpRUpJQUVoQWdOQUlBQWdBMGNFUUNBSlFRQTdBUUFnQWtFQU93RUFJQU5CQVdvaEF5QUNRUUpxSVFJZ0NVRUNhaUVKREFFTEN5QUZRUUFnQlVFQVNoc2hEQ0FCSUFaQkFXc2lDa0VCZEdvaENVRUFJUU1nQVNFQ0EwQWdBeUFNUndSQUlBbEJBRHNCQUNBQ1FRQTdBUUFnQTBFQmFpRURJQWtnQmtFQmRDSUFhaUVKSUFBZ0Ftb2hBZ3dCQ3dzZ0MwRUJJQXRCQVVvYklSSWdCMEdRZ05BQWFpRU5JQWRCa0lESUFHb2hBQ0FJSUFaQkFXb2lBbW9oQ0NBQ0lBUnFJUTRnQ2tFQklBcEJBVW9iSWhSQkFXc2hFQ0FCSUFKQkFYUnFJUUpCQUNBR2EwRUJkQ0VWUVFBaERFRUJJUThDUUFOQUlBOGdFa2NFUUNBT0lCQnFJUllnQ0NBUWFpRVJRUUVoQ1FOQUFrQUNRQUpBSUFrZ0ZFY0VRQ0FPTFFBQUlBZ3RBQUJOQkVBZ0FpQVZhaUlFTHdFQUlnTkJFSFJCRUhVaUFVRUFTZ1JBSUFJZ0FUc0JBQ0FEUVJ4c0lBMXFJZ05CQkdzZ0R6WUNBQ0FEUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FEUVJocklnRWdBU2dDQUNBSmFqWUNBQ0FEUVJScklnRWdBU2dDQUNBUGFqWUNBQXdGQ3lBRVFRSnJMd0VBSWdOQkVIUkJFSFVoQVNBRUxnRUNJZ1JCQUVvRVFDQUJRUUJLQkVBZ0JFRUNkQ0FBYWtFRWF5Z0NBQ0lCSUFOQkFuUWdBR3BCQkdzb0FnQWlCRW9FUUNBQ0lBUTdBUUJCQUNFS0lBeEJBQ0FNUVFCS0d5RUxJQUFoQXdOQUlBb2dDMFlFUUNBRUlRRU1DQXNnQVNBREtBSUFSZ1JBSUFNZ0JEWUNBQXNnQ2tFQmFpRUtJQU5CQkdvaEF3d0FDd0FMSUFJZ0FUc0JBQ0FCSUFST0RRVkJBQ0VLSUF4QkFDQU1RUUJLR3lFTElBQWhBd05BSUFvZ0MwWU5CaUFFSUFNb0FnQkdCRUFnQXlBQk5nSUFDeUFLUVFGcUlRb2dBMEVFYWlFRERBQUxBQXNnQWtFQ2F5NEJBQ0lEUVFCS0JFQWdCRUVDZENBQWFrRUVheWdDQUNJQklBTkIvLzhEY1VFQ2RDQUFha0VFYXlnQ0FDSUVTZ1JBSUFJZ0JEc0JBRUVBSVFvZ0RFRUFJQXhCQUVvYklRc2dBQ0VEQTBBZ0NpQUxSZ1JBSUFRaEFRd0hDeUFCSUFNb0FnQkdCRUFnQXlBRU5nSUFDeUFLUVFGcUlRb2dBMEVFYWlFRERBQUxBQXNnQWlBQk93RUFJQUVnQkU0TkJFRUFJUW9nREVFQUlBeEJBRW9iSVFzZ0FDRURBMEFnQ2lBTFJnMEZJQVFnQXlnQ0FFWUVRQ0FESUFFMkFnQUxJQXBCQVdvaENpQURRUVJxSVFNTUFBc0FDeUFDSUFRN0FRQWdCRUVjYkNBTmFpSURRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQURRUmhySWdFZ0FTZ0NBQ0FKYWpZQ0FDQURRUlJySWdFZ0FTZ0NBQ0FQYWpZQ0FDQUpJQU5CRUdzaUFTZ0NBRWdFUUNBQklBazJBZ0FMSUFOQkJHc2dEellDQUF3RkN5QUJRUUJLQkVBZ0FpQUJPd0VBSUFOQkhHd2dEV29pQTBFY2F5SUJJQUVvQWdCQkFXbzJBZ0FnQTBFWWF5SUJJQUVvQWdBZ0NXbzJBZ0FnQTBFVWF5SUJJQUVvQWdBZ0QybzJBZ0FnQ1NBRFFReHJJZ0VvQWdCS0JFQWdBU0FKTmdJQUN5QURRUVJySUE4MkFnQU1CUXNnQWtFQ2F5OEJBQ0lEUVJCMFFSQjFJZ0ZCQUVvRVFDQUNJQUU3QVFBZ0EwRWNiQ0FOYWlJRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUphallDQUNBRFFSUnJJZ0VnQVNnQ0FDQVBhallDQUNBRFFReHJJZ0VvQWdBZ0NVNE5CU0FCSUFrMkFnQU1CUXNnREVHQWdBSk9CRUJCQUVFRFFmMExRUUFRT1VGL0lRb01DUXNnQWlBTVFRRnFJZ0U3QVFBZ0FDQU1RUUowYWlBQlFSQjBRUkIxTmdJQUlBMGdERUVjYkdvaUF5QVBOZ0lZSUFNZ0R6WUNGQ0FESUFrMkFoQWdBeUFKTmdJTUlBTWdEellDQ0NBRElBazJBZ1FnQTBFQk5nSUFJQUVoREF3RUN5QUNRUUE3QVFBTUF3c2dBa0VFYWlFQ0lCRkJBbW9oQ0NBV1FRSnFJUTRnRDBFQmFpRVBEQVVMSUFGQkVIUkJFSFZCSEd3Z0RXb2lBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQ1dvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRDJvMkFnQU1BUXNnQVVFUWRFRVFkVUVjYkNBTmFpSURRUVJySUE4MkFnQWdBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQ1dvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRDJvMkFnQUxJQUpCQW1vaEFpQUlRUUZxSVFnZ0RrRUJhaUVPSUFsQkFXb2hDUXdBQ3dBTEN5QU1RUUFnREVFQVNodEJBV29oQWtFQklRTkJBU0VJSUFBaENRTkFJQUlnQTBjRVFBSkFJQU1nQ1NnQ0FDSUJSZ1JBSUFnaUNrRUJhaUVJREFFTElBRkJBblFnQUdwQkJHc29BZ0FoQ2dzZ0NTQUtOZ0lBSUFsQkJHb2hDU0FEUVFGcUlRTU1BUXNMSUFjZ0NFRUJheUlKTmdJSVFRQWdDVVVOQVJvZ0IwR01nQWhxSVFvZ0IwRU1ha0VBSUFsQkFuUVFPQ0VMSUFkQmtJQW9ha0VBSUFsQkJIUVFPQ0VJUVFBaEF3TkFJQU1nQ1U0RVFFRUFJUWtnREVFQUlBeEJBRW9iSVFRRFFDQUVJQWxHQkVCQkFDRUtJQWNvQWdnaUFFRUFJQUJCQUVvYklRQkJBQ0VEQTBBZ0FDQURSZzBGSUFnZ0EwRUVkR29pQVNBQkt3TUFJQXNnQTBFQ2RHb29BZ0MzSWhlak9RTUFJQUVnQVNzRENDQVhvemtEQ0NBRFFRRnFJUU1NQUFzQUN5QUxJQUFnQ1VFQ2RHb29BZ0JCQVdzaUFrRUNkQ0lEYWlJQklBRW9BZ0FnRFNBSlFSeHNhaUlGS0FJQWFqWUNBQ0FJSUFKQkJIUWlBV29pQWlBQ0t3TUFJQVVvQWdTM29Ea0RBQ0FDSUFJckF3Z2dCU2dDQ0xlZ09RTUlJQVVvQWd3aUFpQUJJQXBxSWdFb0FnQklCRUFnQVNBQ05nSUFDeUFGS0FJUUlnSWdDaUFEUVFKMElnTkJCSEpxSWdFb0FnQktCRUFnQVNBQ05nSUFDeUFGS0FJVUlnSWdDaUFEUVFoeWFpSUJLQUlBU0FSQUlBRWdBallDQUFzZ0JTZ0NHQ0lDSUFvZ0EwRU1jbW9pQVNnQ0FFb0VRQ0FCSUFJMkFnQUxJQWxCQVdvaENRd0FDd0FGSUFvZ0EwRUVkR29pQVNBR05nSUFJQUZCQURZQ0JDQUJJQVUyQWdnZ0FVRUFOZ0lNSUFOQkFXb2hBeUFIS0FJSUlRa01BUXNBQ3dBTElBb0xEd3NnQmtVRVFBSi9JQUFoQkVFQUlRTWdBU0lJUVFBZ0FVRUFTaHNoQUNBSEtBSUFJZ0VnQWlJR1FRRnJJZ2tnQ0d4QkFYUnFJUXNnQVNFQ0EwQWdBQ0FEUndSQUlBdEJBRHNCQUNBQ1FRQTdBUUFnQTBFQmFpRURJQUpCQW1vaEFpQUxRUUpxSVFzTUFRc0xJQVpCQUNBR1FRQktHeUVNSUFFZ0NFRUJheUlLUVFGMGFpRUxRUUFoQXlBQklRSURRQ0FESUF4SEJFQWdDMEVBT3dFQUlBSkJBRHNCQUNBRFFRRnFJUU1nQ3lBSVFRRjBJZ0JxSVFzZ0FDQUNhaUVDREFFTEN5QUpRUUVnQ1VFQlNoc2hFQ0FIUVpDQTBBQnFJUTRnQjBHUWdNZ0FhaUVBSUFRZ0NFRUJhaUlDYWlFTUlBcEJBU0FLUVFGS0d5SVNRUUZySVJRZ0FTQUNRUUYwYWlFQ1FRQWdDR3RCQVhRaEZVRUFJUXBCQVNFTkFrQURRQ0FOSUJCSEJFQWdEQ0FVYWlFV1FRRWhDd05BQWtBQ1FBSkFJQXNnRWtjRVFDQUZJQXd0QUFCT0JFQWdBaUFWYWlJRUx3RUFJZ05CRUhSQkVIVWlBVUVBU2dSQUlBSWdBVHNCQUNBRFFSeHNJQTVxSWdOQkJHc2dEVFlDQUNBRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUxhallDQUNBRFFSUnJJZ0VnQVNnQ0FDQU5hallDQUF3RkN5QUVRUUpyTHdFQUlnTkJFSFJCRUhVaEFTQUVMZ0VDSWdSQkFFb0VRQ0FCUVFCS0JFQWdCRUVDZENBQWFrRUVheWdDQUNJQklBTkJBblFnQUdwQkJHc29BZ0FpQkVvRVFDQUNJQVE3QVFCQkFDRUpJQXBCQUNBS1FRQktHeUVSSUFBaEF3TkFJQWtnRVVZRVFDQUVJUUVNQ0FzZ0FTQURLQUlBUmdSQUlBTWdCRFlDQUFzZ0NVRUJhaUVKSUFOQkJHb2hBd3dBQ3dBTElBSWdBVHNCQUNBQklBUk9EUVZCQUNFSklBcEJBQ0FLUVFCS0d5RVJJQUFoQXdOQUlBa2dFVVlOQmlBRUlBTW9BZ0JHQkVBZ0F5QUJOZ0lBQ3lBSlFRRnFJUWtnQTBFRWFpRUREQUFMQUFzZ0FrRUNheTRCQUNJRFFRQktCRUFnQkVFQ2RDQUFha0VFYXlnQ0FDSUJJQU5CLy84RGNVRUNkQ0FBYWtFRWF5Z0NBQ0lFU2dSQUlBSWdCRHNCQUVFQUlRa2dDa0VBSUFwQkFFb2JJUkVnQUNFREEwQWdDU0FSUmdSQUlBUWhBUXdIQ3lBQklBTW9BZ0JHQkVBZ0F5QUVOZ0lBQ3lBSlFRRnFJUWtnQTBFRWFpRUREQUFMQUFzZ0FpQUJPd0VBSUFFZ0JFNE5CRUVBSVFrZ0NrRUFJQXBCQUVvYklSRWdBQ0VEQTBBZ0NTQVJSZzBGSUFRZ0F5Z0NBRVlFUUNBRElBRTJBZ0FMSUFsQkFXb2hDU0FEUVFScUlRTU1BQXNBQ3lBQ0lBUTdBUUFnQkVFY2JDQU9haUlEUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FEUVJocklnRWdBU2dDQUNBTGFqWUNBQ0FEUVJScklnRWdBU2dDQUNBTmFqWUNBQ0FMSUFOQkVHc2lBU2dDQUVnRVFDQUJJQXMyQWdBTElBTkJCR3NnRFRZQ0FBd0ZDeUFCUVFCS0JFQWdBaUFCT3dFQUlBTkJIR3dnRG1vaUEwRWNheUlCSUFFb0FnQkJBV28yQWdBZ0EwRVlheUlCSUFFb0FnQWdDMm8yQWdBZ0EwRVVheUlCSUFFb0FnQWdEV28yQWdBZ0N5QURRUXhySWdFb0FnQktCRUFnQVNBTE5nSUFDeUFEUVFScklBMDJBZ0FNQlFzZ0FrRUNheThCQUNJRFFSQjBRUkIxSWdGQkFFb0VRQ0FDSUFFN0FRQWdBMEVjYkNBT2FpSURRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQURRUmhySWdFZ0FTZ0NBQ0FMYWpZQ0FDQURRUlJySWdFZ0FTZ0NBQ0FOYWpZQ0FDQURRUXhySWdFb0FnQWdDMDROQlNBQklBczJBZ0FNQlFzZ0NrR0FnQUpPQkVCQkFFRURRZjBMUVFBUU9VRi9JUWtNQ1FzZ0FpQUtRUUZxSWdFN0FRQWdBQ0FLUVFKMGFpQUJRUkIwUVJCMU5nSUFJQTRnQ2tFY2JHb2lBeUFOTmdJWUlBTWdEVFlDRkNBRElBczJBaEFnQXlBTE5nSU1JQU1nRFRZQ0NDQURJQXMyQWdRZ0EwRUJOZ0lBSUFFaENnd0VDeUFDUVFBN0FRQU1Bd3NnQWtFRWFpRUNJQlpCQW1vaERDQU5RUUZxSVEwTUJRc2dBVUVRZEVFUWRVRWNiQ0FPYWlJRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUxhallDQUNBRFFSUnJJZ0VnQVNnQ0FDQU5hallDQUF3QkN5QUJRUkIwUVJCMVFSeHNJQTVxSWdOQkJHc2dEVFlDQUNBRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUxhallDQUNBRFFSUnJJZ0VnQVNnQ0FDQU5hallDQUFzZ0FrRUNhaUVDSUF4QkFXb2hEQ0FMUVFGcUlRc01BQXNBQ3dzZ0NrRUFJQXBCQUVvYlFRRnFJUUpCQVNFRFFRRWhEQ0FBSVFzRFFDQUNJQU5IQkVBQ1FDQURJQXNvQWdBaUFVWUVRQ0FNSWdsQkFXb2hEQXdCQ3lBQlFRSjBJQUJxUVFScktBSUFJUWtMSUFzZ0NUWUNBQ0FMUVFScUlRc2dBMEVCYWlFRERBRUxDeUFISUF4QkFXc2lDellDQ0VFQUlBdEZEUUVhSUFkQmpJQUlhaUVKSUFkQkRHcEJBQ0FMUVFKMEVEZ2hEQ0FIUVpDQUtHcEJBQ0FMUVFSMEVEZ2hCVUVBSVFNRFFDQURJQXRPQkVCQkFDRUxJQXBCQUNBS1FRQktHeUVFQTBBZ0JDQUxSZ1JBUVFBaENTQUhLQUlJSWdCQkFDQUFRUUJLR3lFQVFRQWhBd05BSUFBZ0EwWU5CU0FGSUFOQkJIUnFJZ0VnQVNzREFDQU1JQU5CQW5ScUtBSUF0eUlYb3prREFDQUJJQUVyQXdnZ0Y2TTVBd2dnQTBFQmFpRUREQUFMQUFzZ0RDQUFJQXRCQW5ScUtBSUFRUUZySWdKQkFuUWlBMm9pQVNBQktBSUFJQTRnQzBFY2JHb2lCaWdDQUdvMkFnQWdCU0FDUVFSMElnRnFJZ0lnQWlzREFDQUdLQUlFdDZBNUF3QWdBaUFDS3dNSUlBWW9BZ2kzb0RrRENDQUdLQUlNSWdJZ0FTQUphaUlCS0FJQVNBUkFJQUVnQWpZQ0FBc2dCaWdDRUNJQ0lBa2dBMEVDZENJRFFRUnlhaUlCS0FJQVNnUkFJQUVnQWpZQ0FBc2dCaWdDRkNJQ0lBa2dBMEVJY21vaUFTZ0NBRWdFUUNBQklBSTJBZ0FMSUFZb0FoZ2lBaUFKSUFOQkRISnFJZ0VvQWdCS0JFQWdBU0FDTmdJQUN5QUxRUUZxSVFzTUFBc0FCU0FKSUFOQkJIUnFJZ0VnQ0RZQ0FDQUJRUUEyQWdRZ0FTQUdOZ0lJSUFGQkFEWUNEQ0FEUVFGcUlRTWdCeWdDQ0NFTERBRUxBQXNBQ3lBSkN3OExBbjhnQUNFR0lBRWlDRUVDYlNJU1FRQWdFa0VBU2hzaEFDQUhLQUlBSWdNZ0FrRUNiU0lVUVFGcklnb2dFbXhCQVhScUlRbEJBQ0VCSUFNaEJBTkFJQUFnQVVjRVFDQUpRUUE3QVFBZ0JFRUFPd0VBSUFGQkFXb2hBU0FFUVFKcUlRUWdDVUVDYWlFSkRBRUxDeUFVUVFBZ0ZFRUFTaHNoQWlBRElCSkJBV3NpREVFQmRHb2hDVUVBSVFFZ0F5RUVBMEFnQVNBQ1J3UkFJQWxCQURzQkFDQUVRUUE3QVFBZ0FVRUJhaUVCSUFrZ0VrRUJkQ0lBYWlFSklBQWdCR29oQkF3QkN3c2dDa0VCSUFwQkFVb2JJUlVnREVFQklBeEJBVW9iSVJZZ0IwR1FnTkFBYWlFUUlBZEJrSURJQUdvaEFDQUlRUUYwSUFacVFRSnFJUVlnRWtFQmRDQURha0VDYWlFRVFRQWdFbXRCQVhRaEVVRUFJUXhCQVNFT0FrQURRQ0FPSUJWSEJFQkJBU0VKQTBBQ1FBSkFBa0FnQ1NBV1J3UkFJQVVnQmkwQUFFNEVRQ0FFSUJGcUlnTXZBUUFpQWtFUWRFRVFkU0lCUVFCS0JFQWdCQ0FCT3dFQUlBSkJIR3dnRUdvaUFrRUVheUFPTmdJQUlBSkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBSkJHR3NpQVNBQktBSUFJQWxxTmdJQUlBSkJGR3NpQVNBQktBSUFJQTVxTmdJQURBVUxJQU5CQW1zdkFRQWlBVUVRZEVFUWRTRUNJQU11QVFJaUEwRUFTZ1JBSUFKQkFFb0VRQ0FEUVFKMElBQnFRUVJyS0FJQUlnSWdBVUVDZENBQWFrRUVheWdDQUNJRFNnUkFJQVFnQXpzQkFFRUFJUW9nREVFQUlBeEJBRW9iSVFzZ0FDRUJBMEFnQ2lBTFJnUkFJQU1oQWd3SUN5QUNJQUVvQWdCR0JFQWdBU0FETmdJQUN5QUtRUUZxSVFvZ0FVRUVhaUVCREFBTEFBc2dCQ0FDT3dFQUlBSWdBMDROQlVFQUlRb2dERUVBSUF4QkFFb2JJUXNnQUNFQkEwQWdDaUFMUmcwR0lBTWdBU2dDQUVZRVFDQUJJQUkyQWdBTElBcEJBV29oQ2lBQlFRUnFJUUVNQUFzQUN5QUVRUUpyTGdFQUlnRkJBRW9FUUNBRFFRSjBJQUJxUVFScktBSUFJZ0lnQVVILy93TnhRUUowSUFCcVFRUnJLQUlBSWdOS0JFQWdCQ0FET3dFQVFRQWhDaUFNUVFBZ0RFRUFTaHNoQ3lBQUlRRURRQ0FLSUF0R0JFQWdBeUVDREFjTElBSWdBU2dDQUVZRVFDQUJJQU0yQWdBTElBcEJBV29oQ2lBQlFRUnFJUUVNQUFzQUN5QUVJQUk3QVFBZ0FpQURUZzBFUVFBaENpQU1RUUFnREVFQVNoc2hDeUFBSVFFRFFDQUtJQXRHRFFVZ0F5QUJLQUlBUmdSQUlBRWdBallDQUFzZ0NrRUJhaUVLSUFGQkJHb2hBUXdBQ3dBTElBUWdBenNCQUNBRFFSeHNJQkJxSWdKQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFKQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFKQkZHc2lBU0FCS0FJQUlBNXFOZ0lBSUFrZ0FrRVFheUlCS0FJQVNBUkFJQUVnQ1RZQ0FBc2dBa0VFYXlBT05nSUFEQVVMSUFKQkFFb0VRQ0FFSUFJN0FRQWdBVUVjYkNBUWFpSUNRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQUNRUmhySWdFZ0FTZ0NBQ0FKYWpZQ0FDQUNRUlJySWdFZ0FTZ0NBQ0FPYWpZQ0FDQUpJQUpCREdzaUFTZ0NBRW9FUUNBQklBazJBZ0FMSUFKQkJHc2dEallDQUF3RkN5QUVRUUpyTHdFQUlnSkJFSFJCRUhVaUFVRUFTZ1JBSUFRZ0FUc0JBQ0FDUVJ4c0lCQnFJZ0pCSEdzaUFTQUJLQUlBUVFGcU5nSUFJQUpCR0dzaUFTQUJLQUlBSUFscU5nSUFJQUpCRkdzaUFTQUJLQUlBSUE1cU5nSUFJQUpCREdzaUFTZ0NBQ0FKVGcwRklBRWdDVFlDQUF3RkN5QU1RWUNBQWs0RVFFRUFRUU5CL1F0QkFCQTVRWDhoQ2d3SkN5QUVJQXhCQVdvaUFUc0JBQ0FBSUF4QkFuUnFJQUZCRUhSQkVIVTJBZ0FnRUNBTVFSeHNhaUlDSUE0MkFoZ2dBaUFPTmdJVUlBSWdDVFlDRUNBQ0lBazJBZ3dnQWlBT05nSUlJQUlnQ1RZQ0JDQUNRUUUyQWdBZ0FTRU1EQVFMSUFSQkFEc0JBQXdEQ3lBRVFRUnFJUVFnRGtFQmFpRU9JQVlnQ0dwQkJHb2hCZ3dGQ3lBQ1FSQjBRUkIxUVJ4c0lCQnFJZ0pCSEdzaUFTQUJLQUlBUVFGcU5nSUFJQUpCR0dzaUFTQUJLQUlBSUFscU5nSUFJQUpCRkdzaUFTQUJLQUlBSUE1cU5nSUFEQUVMSUFKQkVIUkJFSFZCSEd3Z0VHb2lBa0VFYXlBT05nSUFJQUpCSEdzaUFTQUJLQUlBUVFGcU5nSUFJQUpCR0dzaUFTQUJLQUlBSUFscU5nSUFJQUpCRkdzaUFTQUJLQUlBSUE1cU5nSUFDeUFFUVFKcUlRUWdCa0VDYWlFR0lBbEJBV29oQ1F3QUN3QUxDeUFNUVFBZ0RFRUFTaHRCQVdvaEEwRUJJUUZCQVNFR0lBQWhDUU5BSUFFZ0EwY0VRQUpBSUFFZ0NTZ0NBQ0lDUmdSQUlBWWlDa0VCYWlFR0RBRUxJQUpCQW5RZ0FHcEJCR3NvQWdBaENnc2dDU0FLTmdJQUlBbEJCR29oQ1NBQlFRRnFJUUVNQVFzTElBY2dCa0VCYXlJSk5nSUlRUUFnQ1VVTkFSb2dCMEdNZ0FocUlRZ2dCMEVNYWtFQUlBbEJBblFRT0NFR0lBZEJrSUFvYWtFQUlBbEJCSFFRT0NFRlFRQWhBUU5BSUFFZ0NVNEVRRUVBSVFrZ0RFRUFJQXhCQUVvYklRUURRQ0FFSUFsR0JFQkJBQ0VLSUFjb0FnZ2lBRUVBSUFCQkFFb2JJUUJCQUNFQkEwQWdBQ0FCUmcwRklBVWdBVUVFZEdvaUFpQUNLd01BSUFZZ0FVRUNkR29vQWdDM0loZWpPUU1BSUFJZ0Fpc0RDQ0FYb3prRENDQUJRUUZxSVFFTUFBc0FDeUFHSUFBZ0NVRUNkR29vQWdCQkFXc2lBa0VDZENJRGFpSUJJQUVvQWdBZ0VDQUpRUnhzYWlJTUtBSUFhallDQUNBRklBSkJCSFFpQVdvaUFpQUNLd01BSUF3b0FnUzNvRGtEQUNBQ0lBSXJBd2dnRENnQ0NMZWdPUU1JSUF3b0Fnd2lBaUFCSUFocUlnRW9BZ0JJQkVBZ0FTQUNOZ0lBQ3lBTUtBSVFJZ0lnQ0NBRFFRSjBJZ05CQkhKcUlnRW9BZ0JLQkVBZ0FTQUNOZ0lBQ3lBTUtBSVVJZ0lnQ0NBRFFRaHlhaUlCS0FJQVNBUkFJQUVnQWpZQ0FBc2dEQ2dDR0NJQ0lBZ2dBMEVNY21vaUFTZ0NBRW9FUUNBQklBSTJBZ0FMSUFsQkFXb2hDUXdBQ3dBRklBZ2dBVUVFZEdvaUFpQVNOZ0lBSUFKQkFEWUNCQ0FDSUJRMkFnZ2dBa0VBTmdJTUlBRkJBV29oQVNBSEtBSUlJUWtNQVFzQUN3QUxJQW9MRHdzZ0NBUkFBbjhnQUNFRVFRQWhBeUFCSWdaQkFDQUJRUUJLR3lFQUlBY29BZ0FpQVNBQ0lnVkJBV3NpQ3lBR2JFRUJkR29oQ1NBQklRSURRQ0FBSUFOSEJFQWdDVUVBT3dFQUlBSkJBRHNCQUNBRFFRRnFJUU1nQWtFQ2FpRUNJQWxCQW1vaENRd0JDd3NnQlVFQUlBVkJBRW9iSVF3Z0FTQUdRUUZySWdwQkFYUnFJUWxCQUNFRElBRWhBZ05BSUFNZ0RFY0VRQ0FKUVFBN0FRQWdBa0VBT3dFQUlBTkJBV29oQXlBSklBWkJBWFFpQUdvaENTQUFJQUpxSVFJTUFRc0xJQXRCQVNBTFFRRktHeUVTSUFkQmtJRFFBR29oRFNBSFFaQ0F5QUJxSVFBZ0NDQUdRUUZxSWdKcUlRZ2dBaUFFYWlFT0lBcEJBU0FLUVFGS0d5SVVRUUZySVJBZ0FTQUNRUUYwYWlFQ1FRQWdCbXRCQVhRaEZVRUFJUXhCQVNFUEFrQURRQ0FQSUJKSEJFQWdEaUFRYWlFV0lBZ2dFR29oRVVFQklRa0RRQUpBQWtBQ1FDQUpJQlJIQkVBZ0RpMEFBQ0FJTFFBQVN3UkFJQUlnRldvaUJDOEJBQ0lEUVJCMFFSQjFJZ0ZCQUVvRVFDQUNJQUU3QVFBZ0EwRWNiQ0FOYWlJRFFRUnJJQTgyQWdBZ0EwRWNheUlCSUFFb0FnQkJBV28yQWdBZ0EwRVlheUlCSUFFb0FnQWdDV28yQWdBZ0EwRVVheUlCSUFFb0FnQWdEMm8yQWdBTUJRc2dCRUVDYXk4QkFDSURRUkIwUVJCMUlRRWdCQzRCQWlJRVFRQktCRUFnQVVFQVNnUkFJQVJCQW5RZ0FHcEJCR3NvQWdBaUFTQURRUUowSUFCcVFRUnJLQUlBSWdSS0JFQWdBaUFFT3dFQVFRQWhDaUFNUVFBZ0RFRUFTaHNoQ3lBQUlRTURRQ0FLSUF0R0JFQWdCQ0VCREFnTElBRWdBeWdDQUVZRVFDQURJQVEyQWdBTElBcEJBV29oQ2lBRFFRUnFJUU1NQUFzQUN5QUNJQUU3QVFBZ0FTQUVUZzBGUVFBaENpQU1RUUFnREVFQVNoc2hDeUFBSVFNRFFDQUtJQXRHRFFZZ0JDQURLQUlBUmdSQUlBTWdBVFlDQUFzZ0NrRUJhaUVLSUFOQkJHb2hBd3dBQ3dBTElBSkJBbXN1QVFBaUEwRUFTZ1JBSUFSQkFuUWdBR3BCQkdzb0FnQWlBU0FEUWYvL0EzRkJBblFnQUdwQkJHc29BZ0FpQkVvRVFDQUNJQVE3QVFCQkFDRUtJQXhCQUNBTVFRQktHeUVMSUFBaEF3TkFJQW9nQzBZRVFDQUVJUUVNQndzZ0FTQURLQUlBUmdSQUlBTWdCRFlDQUFzZ0NrRUJhaUVLSUFOQkJHb2hBd3dBQ3dBTElBSWdBVHNCQUNBQklBUk9EUVJCQUNFS0lBeEJBQ0FNUVFCS0d5RUxJQUFoQXdOQUlBb2dDMFlOQlNBRUlBTW9BZ0JHQkVBZ0F5QUJOZ0lBQ3lBS1FRRnFJUW9nQTBFRWFpRUREQUFMQUFzZ0FpQUVPd0VBSUFSQkhHd2dEV29pQTBFY2F5SUJJQUVvQWdCQkFXbzJBZ0FnQTBFWWF5SUJJQUVvQWdBZ0NXbzJBZ0FnQTBFVWF5SUJJQUVvQWdBZ0QybzJBZ0FnQ1NBRFFSQnJJZ0VvQWdCSUJFQWdBU0FKTmdJQUN5QURRUVJySUE4MkFnQU1CUXNnQVVFQVNnUkFJQUlnQVRzQkFDQURRUnhzSUExcUlnTkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBTkJHR3NpQVNBQktBSUFJQWxxTmdJQUlBTkJGR3NpQVNBQktBSUFJQTlxTmdJQUlBa2dBMEVNYXlJQktBSUFTZ1JBSUFFZ0NUWUNBQXNnQTBFRWF5QVBOZ0lBREFVTElBSkJBbXN2QVFBaUEwRVFkRUVRZFNJQlFRQktCRUFnQWlBQk93RUFJQU5CSEd3Z0RXb2lBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQ1dvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRDJvMkFnQWdBMEVNYXlJQktBSUFJQWxPRFFVZ0FTQUpOZ0lBREFVTElBeEJnSUFDVGdSQVFRQkJBMEg5QzBFQUVEbEJmeUVLREFrTElBSWdERUVCYWlJQk93RUFJQUFnREVFQ2RHb2dBVUVRZEVFUWRUWUNBQ0FOSUF4QkhHeHFJZ01nRHpZQ0dDQURJQTgyQWhRZ0F5QUpOZ0lRSUFNZ0NUWUNEQ0FESUE4MkFnZ2dBeUFKTmdJRUlBTkJBVFlDQUNBQklRd01CQXNnQWtFQU93RUFEQU1MSUFKQkJHb2hBaUFSUVFKcUlRZ2dGa0VDYWlFT0lBOUJBV29oRHd3RkN5QUJRUkIwUVJCMVFSeHNJQTFxSWdOQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFOQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFOQkZHc2lBU0FCS0FJQUlBOXFOZ0lBREFFTElBRkJFSFJCRUhWQkhHd2dEV29pQTBFRWF5QVBOZ0lBSUFOQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFOQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFOQkZHc2lBU0FCS0FJQUlBOXFOZ0lBQ3lBQ1FRSnFJUUlnQ0VFQmFpRUlJQTVCQVdvaERpQUpRUUZxSVFrTUFBc0FDd3NnREVFQUlBeEJBRW9iUVFGcUlRSkJBU0VEUVFFaENDQUFJUWtEUUNBQ0lBTkhCRUFDUUNBRElBa29BZ0FpQVVZRVFDQUlJZ3BCQVdvaENBd0JDeUFCUVFKMElBQnFRUVJyS0FJQUlRb0xJQWtnQ2pZQ0FDQUpRUVJxSVFrZ0EwRUJhaUVEREFFTEN5QUhJQWhCQVdzaUNUWUNDRUVBSUFsRkRRRWFJQWRCaklBSWFpRUtJQWRCREdwQkFDQUpRUUowRURnaEN5QUhRWkNBS0dwQkFDQUpRUVIwRURnaENFRUFJUU1EUUNBRElBbE9CRUJCQUNFSklBeEJBQ0FNUVFCS0d5RUVBMEFnQkNBSlJnUkFRUUFoQ2lBSEtBSUlJZ0JCQUNBQVFRQktHeUVBUVFBaEF3TkFJQUFnQTBZTkJTQUlJQU5CQkhScUlnRWdBU3NEQUNBTElBTkJBblJxS0FJQXR5SVhvemtEQUNBQklBRXJBd2dnRjZNNUF3Z2dBMEVCYWlFRERBQUxBQXNnQ3lBQUlBbEJBblJxS0FJQVFRRnJJZ0pCQW5RaUEyb2lBU0FCS0FJQUlBMGdDVUVjYkdvaUJTZ0NBR28yQWdBZ0NDQUNRUVIwSWdGcUlnSWdBaXNEQUNBRktBSUV0NkE1QXdBZ0FpQUNLd01JSUFVb0FnaTNvRGtEQ0NBRktBSU1JZ0lnQVNBS2FpSUJLQUlBU0FSQUlBRWdBallDQUFzZ0JTZ0NFQ0lDSUFvZ0EwRUNkQ0lEUVFSeWFpSUJLQUlBU2dSQUlBRWdBallDQUFzZ0JTZ0NGQ0lDSUFvZ0EwRUljbW9pQVNnQ0FFZ0VRQ0FCSUFJMkFnQUxJQVVvQWhnaUFpQUtJQU5CREhKcUlnRW9BZ0JLQkVBZ0FTQUNOZ0lBQ3lBSlFRRnFJUWtNQUFzQUJTQUtJQU5CQkhScUlnRWdCallDQUNBQlFRQTJBZ1FnQVNBRk5nSUlJQUZCQURZQ0RDQURRUUZxSVFNZ0J5Z0NDQ0VKREFFTEFBc0FDeUFLQ3c4TElBWkZCRUFDZnlBQUlRUkJBQ0VESUFFaUNFRUFJQUZCQUVvYklRQWdCeWdDQUNJQklBSWlCa0VCYXlJSklBaHNRUUYwYWlFTElBRWhBZ05BSUFBZ0EwY0VRQ0FMUVFBN0FRQWdBa0VBT3dFQUlBTkJBV29oQXlBQ1FRSnFJUUlnQzBFQ2FpRUxEQUVMQ3lBR1FRQWdCa0VBU2hzaERDQUJJQWhCQVdzaUNrRUJkR29oQzBFQUlRTWdBU0VDQTBBZ0F5QU1Sd1JBSUF0QkFEc0JBQ0FDUVFBN0FRQWdBMEVCYWlFRElBc2dDRUVCZENJQWFpRUxJQUFnQW1vaEFnd0JDd3NnQ1VFQklBbEJBVW9iSVJBZ0IwR1FnTkFBYWlFT0lBZEJrSURJQUdvaEFDQUVJQWhCQVdvaUFtb2hEQ0FLUVFFZ0NrRUJTaHNpRWtFQmF5RVVJQUVnQWtFQmRHb2hBa0VBSUFoclFRRjBJUlZCQUNFS1FRRWhEUUpBQTBBZ0RTQVFSd1JBSUF3Z0ZHb2hGa0VCSVFzRFFBSkFBa0FDUUNBTElCSkhCRUFnQlNBTUxRQUFTQVJBSUFJZ0ZXb2lCQzhCQUNJRFFSQjBRUkIxSWdGQkFFb0VRQ0FDSUFFN0FRQWdBMEVjYkNBT2FpSURRUVJySUEwMkFnQWdBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQzJvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRFdvMkFnQU1CUXNnQkVFQ2F5OEJBQ0lEUVJCMFFSQjFJUUVnQkM0QkFpSUVRUUJLQkVBZ0FVRUFTZ1JBSUFSQkFuUWdBR3BCQkdzb0FnQWlBU0FEUVFKMElBQnFRUVJyS0FJQUlnUktCRUFnQWlBRU93RUFRUUFoQ1NBS1FRQWdDa0VBU2hzaEVTQUFJUU1EUUNBSklCRkdCRUFnQkNFQkRBZ0xJQUVnQXlnQ0FFWUVRQ0FESUFRMkFnQUxJQWxCQVdvaENTQURRUVJxSVFNTUFBc0FDeUFDSUFFN0FRQWdBU0FFVGcwRlFRQWhDU0FLUVFBZ0NrRUFTaHNoRVNBQUlRTURRQ0FKSUJGR0RRWWdCQ0FES0FJQVJnUkFJQU1nQVRZQ0FBc2dDVUVCYWlFSklBTkJCR29oQXd3QUN3QUxJQUpCQW1zdUFRQWlBMEVBU2dSQUlBUkJBblFnQUdwQkJHc29BZ0FpQVNBRFFmLy9BM0ZCQW5RZ0FHcEJCR3NvQWdBaUJFb0VRQ0FDSUFRN0FRQkJBQ0VKSUFwQkFDQUtRUUJLR3lFUklBQWhBd05BSUFrZ0VVWUVRQ0FFSVFFTUJ3c2dBU0FES0FJQVJnUkFJQU1nQkRZQ0FBc2dDVUVCYWlFSklBTkJCR29oQXd3QUN3QUxJQUlnQVRzQkFDQUJJQVJPRFFSQkFDRUpJQXBCQUNBS1FRQktHeUVSSUFBaEF3TkFJQWtnRVVZTkJTQUVJQU1vQWdCR0JFQWdBeUFCTmdJQUN5QUpRUUZxSVFrZ0EwRUVhaUVEREFBTEFBc2dBaUFFT3dFQUlBUkJIR3dnRG1vaUEwRWNheUlCSUFFb0FnQkJBV28yQWdBZ0EwRVlheUlCSUFFb0FnQWdDMm8yQWdBZ0EwRVVheUlCSUFFb0FnQWdEV28yQWdBZ0N5QURRUkJySWdFb0FnQklCRUFnQVNBTE5nSUFDeUFEUVFScklBMDJBZ0FNQlFzZ0FVRUFTZ1JBSUFJZ0FUc0JBQ0FEUVJ4c0lBNXFJZ05CSEdzaUFTQUJLQUlBUVFGcU5nSUFJQU5CR0dzaUFTQUJLQUlBSUF0cU5nSUFJQU5CRkdzaUFTQUJLQUlBSUExcU5nSUFJQXNnQTBFTWF5SUJLQUlBU2dSQUlBRWdDellDQUFzZ0EwRUVheUFOTmdJQURBVUxJQUpCQW1zdkFRQWlBMEVRZEVFUWRTSUJRUUJLQkVBZ0FpQUJPd0VBSUFOQkhHd2dEbW9pQTBFY2F5SUJJQUVvQWdCQkFXbzJBZ0FnQTBFWWF5SUJJQUVvQWdBZ0MybzJBZ0FnQTBFVWF5SUJJQUVvQWdBZ0RXbzJBZ0FnQTBFTWF5SUJLQUlBSUF0T0RRVWdBU0FMTmdJQURBVUxJQXBCZ0lBQ1RnUkFRUUJCQTBIOUMwRUFFRGxCZnlFSkRBa0xJQUlnQ2tFQmFpSUJPd0VBSUFBZ0NrRUNkR29nQVVFUWRFRVFkVFlDQUNBT0lBcEJIR3hxSWdNZ0RUWUNHQ0FESUEwMkFoUWdBeUFMTmdJUUlBTWdDellDRENBRElBMDJBZ2dnQXlBTE5nSUVJQU5CQVRZQ0FDQUJJUW9NQkFzZ0FrRUFPd0VBREFNTElBSkJCR29oQWlBV1FRSnFJUXdnRFVFQmFpRU5EQVVMSUFGQkVIUkJFSFZCSEd3Z0Rtb2lBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQzJvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRFdvMkFnQU1BUXNnQVVFUWRFRVFkVUVjYkNBT2FpSURRUVJySUEwMkFnQWdBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQzJvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRFdvMkFnQUxJQUpCQW1vaEFpQU1RUUZxSVF3Z0MwRUJhaUVMREFBTEFBc0xJQXBCQUNBS1FRQktHMEVCYWlFQ1FRRWhBMEVCSVF3Z0FDRUxBMEFnQWlBRFJ3UkFBa0FnQXlBTEtBSUFJZ0ZHQkVBZ0RDSUpRUUZxSVF3TUFRc2dBVUVDZENBQWFrRUVheWdDQUNFSkN5QUxJQWsyQWdBZ0MwRUVhaUVMSUFOQkFXb2hBd3dCQ3dzZ0J5QU1RUUZySWdzMkFnaEJBQ0FMUlEwQkdpQUhRWXlBQ0dvaENTQUhRUXhxUVFBZ0MwRUNkQkE0SVF3Z0IwR1FnQ2hxUVFBZ0MwRUVkQkE0SVFWQkFDRURBMEFnQXlBTFRnUkFRUUFoQ3lBS1FRQWdDa0VBU2hzaEJBTkFJQVFnQzBZRVFFRUFJUWtnQnlnQ0NDSUFRUUFnQUVFQVNoc2hBRUVBSVFNRFFDQUFJQU5HRFFVZ0JTQURRUVIwYWlJQklBRXJBd0FnRENBRFFRSjBhaWdDQUxjaUY2TTVBd0FnQVNBQkt3TUlJQmVqT1FNSUlBTkJBV29oQXd3QUN3QUxJQXdnQUNBTFFRSjBhaWdDQUVFQmF5SUNRUUowSWdOcUlnRWdBU2dDQUNBT0lBdEJIR3hxSWdZb0FnQnFOZ0lBSUFVZ0FrRUVkQ0lCYWlJQ0lBSXJBd0FnQmlnQ0JMZWdPUU1BSUFJZ0Fpc0RDQ0FHS0FJSXQ2QTVBd2dnQmlnQ0RDSUNJQUVnQ1dvaUFTZ0NBRWdFUUNBQklBSTJBZ0FMSUFZb0FoQWlBaUFKSUFOQkFuUWlBMEVFY21vaUFTZ0NBRW9FUUNBQklBSTJBZ0FMSUFZb0FoUWlBaUFKSUFOQkNISnFJZ0VvQWdCSUJFQWdBU0FDTmdJQUN5QUdLQUlZSWdJZ0NTQURRUXh5YWlJQktBSUFTZ1JBSUFFZ0FqWUNBQXNnQzBFQmFpRUxEQUFMQUFVZ0NTQURRUVIwYWlJQklBZzJBZ0FnQVVFQU5nSUVJQUVnQmpZQ0NDQUJRUUEyQWd3Z0EwRUJhaUVESUFjb0FnZ2hDd3dCQ3dBTEFBc2dDUXNQQ3dKL0lBQWhCaUFCSWdoQkFtMGlFa0VBSUJKQkFFb2JJUUFnQnlnQ0FDSURJQUpCQW0waUZFRUJheUlLSUJKc1FRRjBhaUVKUVFBaEFTQURJUVFEUUNBQUlBRkhCRUFnQ1VFQU93RUFJQVJCQURzQkFDQUJRUUZxSVFFZ0JFRUNhaUVFSUFsQkFtb2hDUXdCQ3dzZ0ZFRUFJQlJCQUVvYklRSWdBeUFTUVFGcklneEJBWFJxSVFsQkFDRUJJQU1oQkFOQUlBRWdBa2NFUUNBSlFRQTdBUUFnQkVFQU93RUFJQUZCQVdvaEFTQUpJQkpCQVhRaUFHb2hDU0FBSUFScUlRUU1BUXNMSUFwQkFTQUtRUUZLR3lFVklBeEJBU0FNUVFGS0d5RVdJQWRCa0lEUUFHb2hFQ0FIUVpDQXlBQnFJUUFnQ0VFQmRDQUdha0VDYWlFR0lCSkJBWFFnQTJwQkFtb2hCRUVBSUJKclFRRjBJUkZCQUNFTVFRRWhEZ0pBQTBBZ0RpQVZSd1JBUVFFaENRTkFBa0FDUUFKQUlBa2dGa2NFUUNBRklBWXRBQUJJQkVBZ0JDQVJhaUlETHdFQUlnSkJFSFJCRUhVaUFVRUFTZ1JBSUFRZ0FUc0JBQ0FDUVJ4c0lCQnFJZ0pCQkdzZ0RqWUNBQ0FDUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FDUVJocklnRWdBU2dDQUNBSmFqWUNBQ0FDUVJScklnRWdBU2dDQUNBT2FqWUNBQXdGQ3lBRFFRSnJMd0VBSWdGQkVIUkJFSFVoQWlBRExnRUNJZ05CQUVvRVFDQUNRUUJLQkVBZ0EwRUNkQ0FBYWtFRWF5Z0NBQ0lDSUFGQkFuUWdBR3BCQkdzb0FnQWlBMG9FUUNBRUlBTTdBUUJCQUNFS0lBeEJBQ0FNUVFCS0d5RUxJQUFoQVFOQUlBb2dDMFlFUUNBRElRSU1DQXNnQWlBQktBSUFSZ1JBSUFFZ0F6WUNBQXNnQ2tFQmFpRUtJQUZCQkdvaEFRd0FDd0FMSUFRZ0Fqc0JBQ0FDSUFOT0RRVkJBQ0VLSUF4QkFDQU1RUUJLR3lFTElBQWhBUU5BSUFvZ0MwWU5CaUFESUFFb0FnQkdCRUFnQVNBQ05nSUFDeUFLUVFGcUlRb2dBVUVFYWlFQkRBQUxBQXNnQkVFQ2F5NEJBQ0lCUVFCS0JFQWdBMEVDZENBQWFrRUVheWdDQUNJQ0lBRkIvLzhEY1VFQ2RDQUFha0VFYXlnQ0FDSURTZ1JBSUFRZ0F6c0JBRUVBSVFvZ0RFRUFJQXhCQUVvYklRc2dBQ0VCQTBBZ0NpQUxSZ1JBSUFNaEFnd0hDeUFDSUFFb0FnQkdCRUFnQVNBRE5nSUFDeUFLUVFGcUlRb2dBVUVFYWlFQkRBQUxBQXNnQkNBQ093RUFJQUlnQTA0TkJFRUFJUW9nREVFQUlBeEJBRW9iSVFzZ0FDRUJBMEFnQ2lBTFJnMEZJQU1nQVNnQ0FFWUVRQ0FCSUFJMkFnQUxJQXBCQVdvaENpQUJRUVJxSVFFTUFBc0FDeUFFSUFNN0FRQWdBMEVjYkNBUWFpSUNRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQUNRUmhySWdFZ0FTZ0NBQ0FKYWpZQ0FDQUNRUlJySWdFZ0FTZ0NBQ0FPYWpZQ0FDQUpJQUpCRUdzaUFTZ0NBRWdFUUNBQklBazJBZ0FMSUFKQkJHc2dEallDQUF3RkN5QUNRUUJLQkVBZ0JDQUNPd0VBSUFGQkhHd2dFR29pQWtFY2F5SUJJQUVvQWdCQkFXbzJBZ0FnQWtFWWF5SUJJQUVvQWdBZ0NXbzJBZ0FnQWtFVWF5SUJJQUVvQWdBZ0RtbzJBZ0FnQ1NBQ1FReHJJZ0VvQWdCS0JFQWdBU0FKTmdJQUN5QUNRUVJySUE0MkFnQU1CUXNnQkVFQ2F5OEJBQ0lDUVJCMFFSQjFJZ0ZCQUVvRVFDQUVJQUU3QVFBZ0FrRWNiQ0FRYWlJQ1FSeHJJZ0VnQVNnQ0FFRUJhallDQUNBQ1FSaHJJZ0VnQVNnQ0FDQUphallDQUNBQ1FSUnJJZ0VnQVNnQ0FDQU9hallDQUNBQ1FReHJJZ0VvQWdBZ0NVNE5CU0FCSUFrMkFnQU1CUXNnREVHQWdBSk9CRUJCQUVFRFFmMExRUUFRT1VGL0lRb01DUXNnQkNBTVFRRnFJZ0U3QVFBZ0FDQU1RUUowYWlBQlFSQjBRUkIxTmdJQUlCQWdERUVjYkdvaUFpQU9OZ0lZSUFJZ0RqWUNGQ0FDSUFrMkFoQWdBaUFKTmdJTUlBSWdEallDQ0NBQ0lBazJBZ1FnQWtFQk5nSUFJQUVoREF3RUN5QUVRUUE3QVFBTUF3c2dCRUVFYWlFRUlBNUJBV29oRGlBR0lBaHFRUVJxSVFZTUJRc2dBa0VRZEVFUWRVRWNiQ0FRYWlJQ1FSeHJJZ0VnQVNnQ0FFRUJhallDQUNBQ1FSaHJJZ0VnQVNnQ0FDQUphallDQUNBQ1FSUnJJZ0VnQVNnQ0FDQU9hallDQUF3QkN5QUNRUkIwUVJCMVFSeHNJQkJxSWdKQkJHc2dEallDQUNBQ1FSeHJJZ0VnQVNnQ0FFRUJhallDQUNBQ1FSaHJJZ0VnQVNnQ0FDQUphallDQUNBQ1FSUnJJZ0VnQVNnQ0FDQU9hallDQUFzZ0JFRUNhaUVFSUFaQkFtb2hCaUFKUVFGcUlRa01BQXNBQ3dzZ0RFRUFJQXhCQUVvYlFRRnFJUU5CQVNFQlFRRWhCaUFBSVFrRFFDQUJJQU5IQkVBQ1FDQUJJQWtvQWdBaUFrWUVRQ0FHSWdwQkFXb2hCZ3dCQ3lBQ1FRSjBJQUJxUVFScktBSUFJUW9MSUFrZ0NqWUNBQ0FKUVFScUlRa2dBVUVCYWlFQkRBRUxDeUFISUFaQkFXc2lDVFlDQ0VFQUlBbEZEUUVhSUFkQmpJQUlhaUVJSUFkQkRHcEJBQ0FKUVFKMEVEZ2hCaUFIUVpDQUtHcEJBQ0FKUVFSMEVEZ2hCVUVBSVFFRFFDQUJJQWxPQkVCQkFDRUpJQXhCQUNBTVFRQktHeUVFQTBBZ0JDQUpSZ1JBUVFBaENpQUhLQUlJSWdCQkFDQUFRUUJLR3lFQVFRQWhBUU5BSUFBZ0FVWU5CU0FGSUFGQkJIUnFJZ0lnQWlzREFDQUdJQUZCQW5ScUtBSUF0eUlYb3prREFDQUNJQUlyQXdnZ0Y2TTVBd2dnQVVFQmFpRUJEQUFMQUFzZ0JpQUFJQWxCQW5ScUtBSUFRUUZySWdKQkFuUWlBMm9pQVNBQktBSUFJQkFnQ1VFY2JHb2lEQ2dDQUdvMkFnQWdCU0FDUVFSMElnRnFJZ0lnQWlzREFDQU1LQUlFdDZBNUF3QWdBaUFDS3dNSUlBd29BZ2kzb0RrRENDQU1LQUlNSWdJZ0FTQUlhaUlCS0FJQVNBUkFJQUVnQWpZQ0FBc2dEQ2dDRUNJQ0lBZ2dBMEVDZENJRFFRUnlhaUlCS0FJQVNnUkFJQUVnQWpZQ0FBc2dEQ2dDRkNJQ0lBZ2dBMEVJY21vaUFTZ0NBRWdFUUNBQklBSTJBZ0FMSUF3b0FoZ2lBaUFJSUFOQkRISnFJZ0VvQWdCS0JFQWdBU0FDTmdJQUN5QUpRUUZxSVFrTUFBc0FCU0FJSUFGQkJIUnFJZ0lnRWpZQ0FDQUNRUUEyQWdRZ0FpQVVOZ0lJSUFKQkFEWUNEQ0FCUVFGcUlRRWdCeWdDQ0NFSkRBRUxBQXNBQ3lBS0N3OExJQVJCQVVZRVFDQUlCRUFDZnlBQUlRUkJBQ0VESUFFaUJrRUFJQUZCQUVvYklRQWdCeUlNS0FJQUlnRWdBaUlGUVFGcklnc2dCbXhCQVhScUlRa2dBU0VDQTBBZ0FDQURSd1JBSUFsQkFEc0JBQ0FDUVFBN0FRQWdBMEVCYWlFRElBSkJBbW9oQWlBSlFRSnFJUWtNQVFzTElBVkJBQ0FGUVFCS0d5RUhJQUVnQmtFQmF5SUtRUUYwYWlFSlFRQWhBeUFCSVFJRFFDQURJQWRIQkVBZ0NVRUFPd0VBSUFKQkFEc0JBQ0FEUVFGcUlRTWdDU0FHUVFGMElnQnFJUWtnQUNBQ2FpRUNEQUVMQ3lBTFFRRWdDMEVCU2hzaEVpQU1RWkNBMEFCcUlROGdERUdRZ01nQWFpRUFJQWdnQmtFQmFpSUNhaUVISUFJZ0JHb2hEaUFNS0FJRUlBSnFJUTBnQ2tFQklBcEJBVW9iSWhSQkFXc2hFQ0FCSUFKQkFYUnFJUUpCQUNBR2EwRUJkQ0VWUVFBaENFRUJJUk1DUUFOQUlCSWdFMGNFUUNBT0lCQnFJUllnQnlBUWFpRVJRUUVoQ1FOQUFrQUNRQUpBSUFrZ0ZFY0VRQ0FPTFFBQUlBY3RBQUJOQkVBZ0RVSC9BVG9BQUNBQ0lCVnFJZ1F2QVFBaUEwRVFkRUVRZFNJQlFRQktCRUFnQWlBQk93RUFJQU5CSEd3Z0Qyb2lBMEVFYXlBVE5nSUFJQU5CSEdzaUFTQUJLQUlBUVFGcU5nSUFJQU5CR0dzaUFTQUJLQUlBSUFscU5nSUFJQU5CRkdzaUFTQUJLQUlBSUJOcU5nSUFEQVVMSUFSQkFtc3ZBUUFpQTBFUWRFRVFkU0VCSUFRdUFRSWlCRUVBU2dSQUlBRkJBRW9FUUNBRVFRSjBJQUJxUVFScktBSUFJZ0VnQTBFQ2RDQUFha0VFYXlnQ0FDSUVTZ1JBSUFJZ0JEc0JBRUVBSVFvZ0NFRUFJQWhCQUVvYklRc2dBQ0VEQTBBZ0NpQUxSZ1JBSUFRaEFRd0lDeUFCSUFNb0FnQkdCRUFnQXlBRU5nSUFDeUFLUVFGcUlRb2dBMEVFYWlFRERBQUxBQXNnQWlBQk93RUFJQUVnQkU0TkJVRUFJUW9nQ0VFQUlBaEJBRW9iSVFzZ0FDRURBMEFnQ2lBTFJnMEdJQVFnQXlnQ0FFWUVRQ0FESUFFMkFnQUxJQXBCQVdvaENpQURRUVJxSVFNTUFBc0FDeUFDUVFKckxnRUFJZ05CQUVvRVFDQUVRUUowSUFCcVFRUnJLQUlBSWdFZ0EwSC8vd054UVFKMElBQnFRUVJyS0FJQUlnUktCRUFnQWlBRU93RUFRUUFoQ2lBSVFRQWdDRUVBU2hzaEN5QUFJUU1EUUNBS0lBdEdCRUFnQkNFQkRBY0xJQUVnQXlnQ0FFWUVRQ0FESUFRMkFnQUxJQXBCQVdvaENpQURRUVJxSVFNTUFBc0FDeUFDSUFFN0FRQWdBU0FFVGcwRVFRQWhDaUFJUVFBZ0NFRUFTaHNoQ3lBQUlRTURRQ0FLSUF0R0RRVWdCQ0FES0FJQVJnUkFJQU1nQVRZQ0FBc2dDa0VCYWlFS0lBTkJCR29oQXd3QUN3QUxJQUlnQkRzQkFDQUVRUnhzSUE5cUlnTkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBTkJHR3NpQVNBQktBSUFJQWxxTmdJQUlBTkJGR3NpQVNBQktBSUFJQk5xTmdJQUlBa2dBMEVRYXlJQktBSUFTQVJBSUFFZ0NUWUNBQXNnQTBFRWF5QVROZ0lBREFVTElBRkJBRW9FUUNBQ0lBRTdBUUFnQTBFY2JDQVBhaUlEUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FEUVJocklnRWdBU2dDQUNBSmFqWUNBQ0FEUVJScklnRWdBU2dDQUNBVGFqWUNBQ0FKSUFOQkRHc2lBU2dDQUVvRVFDQUJJQWsyQWdBTElBTkJCR3NnRXpZQ0FBd0ZDeUFDUVFKckx3RUFJZ05CRUhSQkVIVWlBVUVBU2dSQUlBSWdBVHNCQUNBRFFSeHNJQTlxSWdOQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFOQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFOQkZHc2lBU0FCS0FJQUlCTnFOZ0lBSUFOQkRHc2lBU2dDQUNBSlRnMEZJQUVnQ1RZQ0FBd0ZDeUFJUVlDQUFrNEVRRUVBUVFOQi9RdEJBQkE1UVg4aENnd0pDeUFDSUFoQkFXb2lBVHNCQUNBQUlBaEJBblJxSUFGQkVIUkJFSFUyQWdBZ0R5QUlRUnhzYWlJRElCTTJBaGdnQXlBVE5nSVVJQU1nQ1RZQ0VDQURJQWsyQWd3Z0F5QVROZ0lJSUFNZ0NUWUNCQ0FEUVFFMkFnQWdBU0VJREFRTElBSkJBRHNCQUNBTlFRQTZBQUFNQXdzZ0RVRUNhaUVOSUFKQkJHb2hBaUFSUVFKcUlRY2dGa0VDYWlFT0lCTkJBV29oRXd3RkN5QUJRUkIwUVJCMVFSeHNJQTlxSWdOQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFOQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFOQkZHc2lBU0FCS0FJQUlCTnFOZ0lBREFFTElBRkJFSFJCRUhWQkhHd2dEMm9pQTBFRWF5QVROZ0lBSUFOQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFOQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFOQkZHc2lBU0FCS0FJQUlCTnFOZ0lBQ3lBTlFRRnFJUTBnQWtFQ2FpRUNJQWRCQVdvaEJ5QU9RUUZxSVE0Z0NVRUJhaUVKREFBTEFBc0xJQWhCQUNBSVFRQktHMEVCYWlFQ1FRRWhBMEVCSVFjZ0FDRUpBMEFnQWlBRFJ3UkFBa0FnQXlBSktBSUFJZ0ZHQkVBZ0J5SUtRUUZxSVFjTUFRc2dBVUVDZENBQWFrRUVheWdDQUNFS0N5QUpJQW8yQWdBZ0NVRUVhaUVKSUFOQkFXb2hBd3dCQ3dzZ0RDQUhRUUZySWdrMkFnaEJBQ0FKUlEwQkdpQU1RWXlBQ0dvaENpQU1RUXhxUVFBZ0NVRUNkQkE0SVFzZ0RFR1FnQ2hxUVFBZ0NVRUVkQkE0SVFkQkFDRURBMEFnQXlBSlRnUkFRUUFoQ1NBSVFRQWdDRUVBU2hzaEJBTkFJQVFnQ1VZRVFFRUFJUW9nRENnQ0NDSUFRUUFnQUVFQVNoc2hBRUVBSVFNRFFDQUFJQU5HRFFVZ0J5QURRUVIwYWlJQklBRXJBd0FnQ3lBRFFRSjBhaWdDQUxjaUY2TTVBd0FnQVNBQkt3TUlJQmVqT1FNSUlBTkJBV29oQXd3QUN3QUxJQXNnQUNBSlFRSjBhaWdDQUVFQmF5SUNRUUowSWdOcUlnRWdBU2dDQUNBUElBbEJIR3hxSWdVb0FnQnFOZ0lBSUFjZ0FrRUVkQ0lCYWlJQ0lBSXJBd0FnQlNnQ0JMZWdPUU1BSUFJZ0Fpc0RDQ0FGS0FJSXQ2QTVBd2dnQlNnQ0RDSUNJQUVnQ21vaUFTZ0NBRWdFUUNBQklBSTJBZ0FMSUFVb0FoQWlBaUFLSUFOQkFuUWlBMEVFY21vaUFTZ0NBRW9FUUNBQklBSTJBZ0FMSUFVb0FoUWlBaUFLSUFOQkNISnFJZ0VvQWdCSUJFQWdBU0FDTmdJQUN5QUZLQUlZSWdJZ0NpQURRUXh5YWlJQktBSUFTZ1JBSUFFZ0FqWUNBQXNnQ1VFQmFpRUpEQUFMQUFVZ0NpQURRUVIwYWlJQklBWTJBZ0FnQVVFQU5nSUVJQUVnQlRZQ0NDQUJRUUEyQWd3Z0EwRUJhaUVESUF3b0FnZ2hDUXdCQ3dBTEFBc2dDZ3NQQ3lBR1JRUkFBbjhnQUNFRVFRQWhBeUFCSWdoQkFDQUJRUUJLR3lFQUlBY2lEQ2dDQUNJQklBSWlCa0VCYXlJSklBaHNRUUYwYWlFTElBRWhBZ05BSUFBZ0EwY0VRQ0FMUVFBN0FRQWdBa0VBT3dFQUlBTkJBV29oQXlBQ1FRSnFJUUlnQzBFQ2FpRUxEQUVMQ3lBR1FRQWdCa0VBU2hzaEJ5QUJJQWhCQVdzaUNrRUJkR29oQzBFQUlRTWdBU0VDQTBBZ0F5QUhSd1JBSUF0QkFEc0JBQ0FDUVFBN0FRQWdBMEVCYWlFRElBc2dDRUVCZENJQWFpRUxJQUFnQW1vaEFnd0JDd3NnQ1VFQklBbEJBVW9iSVJBZ0RFR1FnTkFBYWlFTklBeEJrSURJQUdvaEFDQUVJQWhCQVdvaUFtb2hCeUFNS0FJRUlBSnFJUTRnQ2tFQklBcEJBVW9iSWhKQkFXc2hGQ0FCSUFKQkFYUnFJUUpCQUNBSWEwRUJkQ0VWUVFBaENrRUJJUThDUUFOQUlBOGdFRWNFUUNBSElCUnFJUlpCQVNFTEEwQUNRQUpBQWtBZ0N5QVNSd1JBSUFVZ0J5MEFBRTRFUUNBT1FmOEJPZ0FBSUFJZ0ZXb2lCQzhCQUNJRFFSQjBRUkIxSWdGQkFFb0VRQ0FDSUFFN0FRQWdBMEVjYkNBTmFpSURRUVJySUE4MkFnQWdBMEVjYXlJQklBRW9BZ0JCQVdvMkFnQWdBMEVZYXlJQklBRW9BZ0FnQzJvMkFnQWdBMEVVYXlJQklBRW9BZ0FnRDJvMkFnQU1CUXNnQkVFQ2F5OEJBQ0lEUVJCMFFSQjFJUUVnQkM0QkFpSUVRUUJLQkVBZ0FVRUFTZ1JBSUFSQkFuUWdBR3BCQkdzb0FnQWlBU0FEUVFKMElBQnFRUVJyS0FJQUlnUktCRUFnQWlBRU93RUFRUUFoQ1NBS1FRQWdDa0VBU2hzaEVTQUFJUU1EUUNBSklCRkdCRUFnQkNFQkRBZ0xJQUVnQXlnQ0FFWUVRQ0FESUFRMkFnQUxJQWxCQVdvaENTQURRUVJxSVFNTUFBc0FDeUFDSUFFN0FRQWdBU0FFVGcwRlFRQWhDU0FLUVFBZ0NrRUFTaHNoRVNBQUlRTURRQ0FKSUJGR0RRWWdCQ0FES0FJQVJnUkFJQU1nQVRZQ0FBc2dDVUVCYWlFSklBTkJCR29oQXd3QUN3QUxJQUpCQW1zdUFRQWlBMEVBU2dSQUlBUkJBblFnQUdwQkJHc29BZ0FpQVNBRFFmLy9BM0ZCQW5RZ0FHcEJCR3NvQWdBaUJFb0VRQ0FDSUFRN0FRQkJBQ0VKSUFwQkFDQUtRUUJLR3lFUklBQWhBd05BSUFrZ0VVWUVRQ0FFSVFFTUJ3c2dBU0FES0FJQVJnUkFJQU1nQkRZQ0FBc2dDVUVCYWlFSklBTkJCR29oQXd3QUN3QUxJQUlnQVRzQkFDQUJJQVJPRFFSQkFDRUpJQXBCQUNBS1FRQktHeUVSSUFBaEF3TkFJQWtnRVVZTkJTQUVJQU1vQWdCR0JFQWdBeUFCTmdJQUN5QUpRUUZxSVFrZ0EwRUVhaUVEREFBTEFBc2dBaUFFT3dFQUlBUkJIR3dnRFdvaUEwRWNheUlCSUFFb0FnQkJBV28yQWdBZ0EwRVlheUlCSUFFb0FnQWdDMm8yQWdBZ0EwRVVheUlCSUFFb0FnQWdEMm8yQWdBZ0N5QURRUkJySWdFb0FnQklCRUFnQVNBTE5nSUFDeUFEUVFScklBODJBZ0FNQlFzZ0FVRUFTZ1JBSUFJZ0FUc0JBQ0FEUVJ4c0lBMXFJZ05CSEdzaUFTQUJLQUlBUVFGcU5nSUFJQU5CR0dzaUFTQUJLQUlBSUF0cU5nSUFJQU5CRkdzaUFTQUJLQUlBSUE5cU5nSUFJQXNnQTBFTWF5SUJLQUlBU2dSQUlBRWdDellDQUFzZ0EwRUVheUFQTmdJQURBVUxJQUpCQW1zdkFRQWlBMEVRZEVFUWRTSUJRUUJLQkVBZ0FpQUJPd0VBSUFOQkhHd2dEV29pQTBFY2F5SUJJQUVvQWdCQkFXbzJBZ0FnQTBFWWF5SUJJQUVvQWdBZ0MybzJBZ0FnQTBFVWF5SUJJQUVvQWdBZ0QybzJBZ0FnQTBFTWF5SUJLQUlBSUF0T0RRVWdBU0FMTmdJQURBVUxJQXBCZ0lBQ1RnUkFRUUJCQTBIOUMwRUFFRGxCZnlFSkRBa0xJQUlnQ2tFQmFpSUJPd0VBSUFBZ0NrRUNkR29nQVVFUWRFRVFkVFlDQUNBTklBcEJIR3hxSWdNZ0R6WUNHQ0FESUE4MkFoUWdBeUFMTmdJUUlBTWdDellDRENBRElBODJBZ2dnQXlBTE5nSUVJQU5CQVRZQ0FDQUJJUW9NQkFzZ0FrRUFPd0VBSUE1QkFEb0FBQXdEQ3lBT1FRSnFJUTRnQWtFRWFpRUNJQlpCQW1vaEJ5QVBRUUZxSVE4TUJRc2dBVUVRZEVFUWRVRWNiQ0FOYWlJRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUxhallDQUNBRFFSUnJJZ0VnQVNnQ0FDQVBhallDQUF3QkN5QUJRUkIwUVJCMVFSeHNJQTFxSWdOQkJHc2dEellDQUNBRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUxhallDQUNBRFFSUnJJZ0VnQVNnQ0FDQVBhallDQUFzZ0RrRUJhaUVPSUFKQkFtb2hBaUFIUVFGcUlRY2dDMEVCYWlFTERBQUxBQXNMSUFwQkFDQUtRUUJLRzBFQmFpRUNRUUVoQTBFQklRY2dBQ0VMQTBBZ0FpQURSd1JBQWtBZ0F5QUxLQUlBSWdGR0JFQWdCeUlKUVFGcUlRY01BUXNnQVVFQ2RDQUFha0VFYXlnQ0FDRUpDeUFMSUFrMkFnQWdDMEVFYWlFTElBTkJBV29oQXd3QkN3c2dEQ0FIUVFGcklnczJBZ2hCQUNBTFJRMEJHaUFNUVl5QUNHb2hDU0FNUVF4cVFRQWdDMEVDZEJBNElRY2dERUdRZ0NocVFRQWdDMEVFZEJBNElRVkJBQ0VEQTBBZ0F5QUxUZ1JBUVFBaEN5QUtRUUFnQ2tFQVNoc2hCQU5BSUFRZ0MwWUVRRUVBSVFrZ0RDZ0NDQ0lBUVFBZ0FFRUFTaHNoQUVFQUlRTURRQ0FBSUFOR0RRVWdCU0FEUVFSMGFpSUJJQUVyQXdBZ0J5QURRUUowYWlnQ0FMY2lGNk01QXdBZ0FTQUJLd01JSUJlak9RTUlJQU5CQVdvaEF3d0FDd0FMSUFjZ0FDQUxRUUowYWlnQ0FFRUJheUlDUVFKMElnTnFJZ0VnQVNnQ0FDQU5JQXRCSEd4cUlnWW9BZ0JxTmdJQUlBVWdBa0VFZENJQmFpSUNJQUlyQXdBZ0JpZ0NCTGVnT1FNQUlBSWdBaXNEQ0NBR0tBSUl0NkE1QXdnZ0JpZ0NEQ0lDSUFFZ0NXb2lBU2dDQUVnRVFDQUJJQUkyQWdBTElBWW9BaEFpQWlBSklBTkJBblFpQTBFRWNtb2lBU2dDQUVvRVFDQUJJQUkyQWdBTElBWW9BaFFpQWlBSklBTkJDSEpxSWdFb0FnQklCRUFnQVNBQ05nSUFDeUFHS0FJWUlnSWdDU0FEUVF4eWFpSUJLQUlBU2dSQUlBRWdBallDQUFzZ0MwRUJhaUVMREFBTEFBVWdDU0FEUVFSMGFpSUJJQWcyQWdBZ0FVRUFOZ0lFSUFFZ0JqWUNDQ0FCUVFBMkFnd2dBMEVCYWlFRElBd29BZ2doQ3d3QkN3QUxBQXNnQ1FzUEN3Si9JQUFoQmlBQklnaEJBbTBpRUVFQUlCQkJBRW9iSVFBZ0J5Z0NBQ0lESUFKQkFtMGlGRUVCYXlJS0lCQnNRUUYwYWlFSlFRQWhBU0FESVFRRFFDQUFJQUZIQkVBZ0NVRUFPd0VBSUFSQkFEc0JBQ0FCUVFGcUlRRWdCRUVDYWlFRUlBbEJBbW9oQ1F3QkN3c2dGRUVBSUJSQkFFb2JJUUlnQXlBUVFRRnJJZ3hCQVhScUlRbEJBQ0VCSUFNaEJBTkFJQUVnQWtjRVFDQUpRUUE3QVFBZ0JFRUFPd0VBSUFGQkFXb2hBU0FKSUJCQkFYUWlBR29oQ1NBQUlBUnFJUVFNQVFzTElBcEJBU0FLUVFGS0d5RVZJQXhCQVNBTVFRRktHeUVXSUFkQmtJRFFBR29oRGlBSFFaQ0F5QUJxSVFBZ0VFRUJhaUlCSUFjb0FnUnFJUXdnQ0VFQmRDQUdha0VDYWlFU0lBTWdBVUVCZEdvaEJFRUFJQkJyUVFGMElSRkJBQ0VHUVFFaERRSkFBMEFnRFNBVlJ3UkFRUUVoQ1FOQUFrQUNRQUpBSUFrZ0ZrY0VRQ0FGSUJJdEFBQk9CRUFnREVIL0FUb0FBQ0FFSUJGcUlnTXZBUUFpQWtFUWRFRVFkU0lCUVFCS0JFQWdCQ0FCT3dFQUlBSkJIR3dnRG1vaUFrRUVheUFOTmdJQUlBSkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBSkJHR3NpQVNBQktBSUFJQWxxTmdJQUlBSkJGR3NpQVNBQktBSUFJQTFxTmdJQURBVUxJQU5CQW1zdkFRQWlBVUVRZEVFUWRTRUNJQU11QVFJaUEwRUFTZ1JBSUFKQkFFb0VRQ0FEUVFKMElBQnFRUVJyS0FJQUlnSWdBVUVDZENBQWFrRUVheWdDQUNJRFNnUkFJQVFnQXpzQkFFRUFJUW9nQmtFQUlBWkJBRW9iSVFzZ0FDRUJBMEFnQ2lBTFJnUkFJQU1oQWd3SUN5QUNJQUVvQWdCR0JFQWdBU0FETmdJQUN5QUtRUUZxSVFvZ0FVRUVhaUVCREFBTEFBc2dCQ0FDT3dFQUlBSWdBMDROQlVFQUlRb2dCa0VBSUFaQkFFb2JJUXNnQUNFQkEwQWdDaUFMUmcwR0lBTWdBU2dDQUVZRVFDQUJJQUkyQWdBTElBcEJBV29oQ2lBQlFRUnFJUUVNQUFzQUN5QUVRUUpyTGdFQUlnRkJBRW9FUUNBRFFRSjBJQUJxUVFScktBSUFJZ0lnQVVILy93TnhRUUowSUFCcVFRUnJLQUlBSWdOS0JFQWdCQ0FET3dFQVFRQWhDaUFHUVFBZ0JrRUFTaHNoQ3lBQUlRRURRQ0FLSUF0R0JFQWdBeUVDREFjTElBSWdBU2dDQUVZRVFDQUJJQU0yQWdBTElBcEJBV29oQ2lBQlFRUnFJUUVNQUFzQUN5QUVJQUk3QVFBZ0FpQURUZzBFUVFBaENpQUdRUUFnQmtFQVNoc2hDeUFBSVFFRFFDQUtJQXRHRFFVZ0F5QUJLQUlBUmdSQUlBRWdBallDQUFzZ0NrRUJhaUVLSUFGQkJHb2hBUXdBQ3dBTElBUWdBenNCQUNBRFFSeHNJQTVxSWdKQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFKQkdHc2lBU0FCS0FJQUlBbHFOZ0lBSUFKQkZHc2lBU0FCS0FJQUlBMXFOZ0lBSUFrZ0FrRVFheUlCS0FJQVNBUkFJQUVnQ1RZQ0FBc2dBa0VFYXlBTk5nSUFEQVVMSUFKQkFFb0VRQ0FFSUFJN0FRQWdBVUVjYkNBT2FpSUNRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQUNRUmhySWdFZ0FTZ0NBQ0FKYWpZQ0FDQUNRUlJySWdFZ0FTZ0NBQ0FOYWpZQ0FDQUpJQUpCREdzaUFTZ0NBRW9FUUNBQklBazJBZ0FMSUFKQkJHc2dEVFlDQUF3RkN5QUVRUUpyTHdFQUlnSkJFSFJCRUhVaUFVRUFTZ1JBSUFRZ0FUc0JBQ0FDUVJ4c0lBNXFJZ0pCSEdzaUFTQUJLQUlBUVFGcU5nSUFJQUpCR0dzaUFTQUJLQUlBSUFscU5nSUFJQUpCRkdzaUFTQUJLQUlBSUExcU5nSUFJQUpCREdzaUFTZ0NBQ0FKVGcwRklBRWdDVFlDQUF3RkN5QUdRWUNBQWs0RVFFRUFRUU5CL1F0QkFCQTVRWDhoQ2d3SkN5QUVJQVpCQVdvaUFUc0JBQ0FBSUFaQkFuUnFJQUZCRUhSQkVIVTJBZ0FnRGlBR1FSeHNhaUlDSUEwMkFoZ2dBaUFOTmdJVUlBSWdDVFlDRUNBQ0lBazJBZ3dnQWlBTk5nSUlJQUlnQ1RZQ0JDQUNRUUUyQWdBZ0FTRUdEQVFMSUFSQkFEc0JBQ0FNUVFBNkFBQU1Bd3NnREVFQ2FpRU1JQVJCQkdvaEJDQU5RUUZxSVEwZ0NDQVNha0VFYWlFU0RBVUxJQUpCRUhSQkVIVkJIR3dnRG1vaUFrRWNheUlCSUFFb0FnQkJBV28yQWdBZ0FrRVlheUlCSUFFb0FnQWdDV28yQWdBZ0FrRVVheUlCSUFFb0FnQWdEV28yQWdBTUFRc2dBa0VRZEVFUWRVRWNiQ0FPYWlJQ1FRUnJJQTAyQWdBZ0FrRWNheUlCSUFFb0FnQkJBV28yQWdBZ0FrRVlheUlCSUFFb0FnQWdDV28yQWdBZ0FrRVVheUlCSUFFb0FnQWdEV28yQWdBTElBeEJBV29oRENBRVFRSnFJUVFnRWtFQ2FpRVNJQWxCQVdvaENRd0FDd0FMQ3lBR1FRQWdCa0VBU2h0QkFXb2hBMEVCSVFGQkFTRU1JQUFoQ1FOQUlBRWdBMGNFUUFKQUlBRWdDU2dDQUNJQ1JnUkFJQXdpQ2tFQmFpRU1EQUVMSUFKQkFuUWdBR3BCQkdzb0FnQWhDZ3NnQ1NBS05nSUFJQWxCQkdvaENTQUJRUUZxSVFFTUFRc0xJQWNnREVFQmF5SUpOZ0lJUVFBZ0NVVU5BUm9nQjBHTWdBaHFJUXdnQjBFTWFrRUFJQWxCQW5RUU9DRUlJQWRCa0lBb2FrRUFJQWxCQkhRUU9DRUZRUUFoQVFOQUlBRWdDVTRFUUVFQUlRa2dCa0VBSUFaQkFFb2JJUVFEUUNBRUlBbEdCRUJCQUNFS0lBY29BZ2dpQUVFQUlBQkJBRW9iSVFCQkFDRUJBMEFnQUNBQlJnMEZJQVVnQVVFRWRHb2lBaUFDS3dNQUlBZ2dBVUVDZEdvb0FnQzNJaGVqT1FNQUlBSWdBaXNEQ0NBWG96a0RDQ0FCUVFGcUlRRU1BQXNBQ3lBSUlBQWdDVUVDZEdvb0FnQkJBV3NpQWtFQ2RDSURhaUlCSUFFb0FnQWdEaUFKUVJ4c2FpSUdLQUlBYWpZQ0FDQUZJQUpCQkhRaUFXb2lBaUFDS3dNQUlBWW9BZ1Mzb0RrREFDQUNJQUlyQXdnZ0JpZ0NDTGVnT1FNSUlBWW9BZ3dpQWlBQklBeHFJZ0VvQWdCSUJFQWdBU0FDTmdJQUN5QUdLQUlRSWdJZ0RDQURRUUowSWdOQkJISnFJZ0VvQWdCS0JFQWdBU0FDTmdJQUN5QUdLQUlVSWdJZ0RDQURRUWh5YWlJQktBSUFTQVJBSUFFZ0FqWUNBQXNnQmlnQ0dDSUNJQXdnQTBFTWNtb2lBU2dDQUVvRVFDQUJJQUkyQWdBTElBbEJBV29oQ1F3QUN3QUZJQXdnQVVFRWRHb2lBaUFRTmdJQUlBSkJBRFlDQkNBQ0lCUTJBZ2dnQWtFQU5nSU1JQUZCQVdvaEFTQUhLQUlJSVFrTUFRc0FDd0FMSUFvTER3c2dDQVJBQW44Z0FDRUVRUUFoQXlBQklnWkJBQ0FCUVFCS0d5RUFJQWNpRENnQ0FDSUJJQUlpQlVFQmF5SUxJQVpzUVFGMGFpRUpJQUVoQWdOQUlBQWdBMGNFUUNBSlFRQTdBUUFnQWtFQU93RUFJQU5CQVdvaEF5QUNRUUpxSVFJZ0NVRUNhaUVKREFFTEN5QUZRUUFnQlVFQVNoc2hCeUFCSUFaQkFXc2lDa0VCZEdvaENVRUFJUU1nQVNFQ0EwQWdBeUFIUndSQUlBbEJBRHNCQUNBQ1FRQTdBUUFnQTBFQmFpRURJQWtnQmtFQmRDSUFhaUVKSUFBZ0Ftb2hBZ3dCQ3dzZ0MwRUJJQXRCQVVvYklSSWdERUdRZ05BQWFpRVBJQXhCa0lESUFHb2hBQ0FJSUFaQkFXb2lBbW9oQnlBQ0lBUnFJUTRnRENnQ0JDQUNhaUVOSUFwQkFTQUtRUUZLR3lJVVFRRnJJUkFnQVNBQ1FRRjBhaUVDUVFBZ0JtdEJBWFFoRlVFQUlRaEJBU0VUQWtBRFFDQVNJQk5IQkVBZ0RpQVFhaUVXSUFjZ0VHb2hFVUVCSVFrRFFBSkFBa0FDUUNBSklCUkhCRUFnRGkwQUFDQUhMUUFBU3dSQUlBMUIvd0U2QUFBZ0FpQVZhaUlFTHdFQUlnTkJFSFJCRUhVaUFVRUFTZ1JBSUFJZ0FUc0JBQ0FEUVJ4c0lBOXFJZ05CQkdzZ0V6WUNBQ0FEUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FEUVJocklnRWdBU2dDQUNBSmFqWUNBQ0FEUVJScklnRWdBU2dDQUNBVGFqWUNBQXdGQ3lBRVFRSnJMd0VBSWdOQkVIUkJFSFVoQVNBRUxnRUNJZ1JCQUVvRVFDQUJRUUJLQkVBZ0JFRUNkQ0FBYWtFRWF5Z0NBQ0lCSUFOQkFuUWdBR3BCQkdzb0FnQWlCRW9FUUNBQ0lBUTdBUUJCQUNFS0lBaEJBQ0FJUVFCS0d5RUxJQUFoQXdOQUlBb2dDMFlFUUNBRUlRRU1DQXNnQVNBREtBSUFSZ1JBSUFNZ0JEWUNBQXNnQ2tFQmFpRUtJQU5CQkdvaEF3d0FDd0FMSUFJZ0FUc0JBQ0FCSUFST0RRVkJBQ0VLSUFoQkFDQUlRUUJLR3lFTElBQWhBd05BSUFvZ0MwWU5CaUFFSUFNb0FnQkdCRUFnQXlBQk5nSUFDeUFLUVFGcUlRb2dBMEVFYWlFRERBQUxBQXNnQWtFQ2F5NEJBQ0lEUVFCS0JFQWdCRUVDZENBQWFrRUVheWdDQUNJQklBTkIvLzhEY1VFQ2RDQUFha0VFYXlnQ0FDSUVTZ1JBSUFJZ0JEc0JBRUVBSVFvZ0NFRUFJQWhCQUVvYklRc2dBQ0VEQTBBZ0NpQUxSZ1JBSUFRaEFRd0hDeUFCSUFNb0FnQkdCRUFnQXlBRU5nSUFDeUFLUVFGcUlRb2dBMEVFYWlFRERBQUxBQXNnQWlBQk93RUFJQUVnQkU0TkJFRUFJUW9nQ0VFQUlBaEJBRW9iSVFzZ0FDRURBMEFnQ2lBTFJnMEZJQVFnQXlnQ0FFWUVRQ0FESUFFMkFnQUxJQXBCQVdvaENpQURRUVJxSVFNTUFBc0FDeUFDSUFRN0FRQWdCRUVjYkNBUGFpSURRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQURRUmhySWdFZ0FTZ0NBQ0FKYWpZQ0FDQURRUlJySWdFZ0FTZ0NBQ0FUYWpZQ0FDQUpJQU5CRUdzaUFTZ0NBRWdFUUNBQklBazJBZ0FMSUFOQkJHc2dFellDQUF3RkN5QUJRUUJLQkVBZ0FpQUJPd0VBSUFOQkhHd2dEMm9pQTBFY2F5SUJJQUVvQWdCQkFXbzJBZ0FnQTBFWWF5SUJJQUVvQWdBZ0NXbzJBZ0FnQTBFVWF5SUJJQUVvQWdBZ0UybzJBZ0FnQ1NBRFFReHJJZ0VvQWdCS0JFQWdBU0FKTmdJQUN5QURRUVJySUJNMkFnQU1CUXNnQWtFQ2F5OEJBQ0lEUVJCMFFSQjFJZ0ZCQUVvRVFDQUNJQUU3QVFBZ0EwRWNiQ0FQYWlJRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUphallDQUNBRFFSUnJJZ0VnQVNnQ0FDQVRhallDQUNBRFFReHJJZ0VvQWdBZ0NVNE5CU0FCSUFrMkFnQU1CUXNnQ0VHQWdBSk9CRUJCQUVFRFFmMExRUUFRT1VGL0lRb01DUXNnQWlBSVFRRnFJZ0U3QVFBZ0FDQUlRUUowYWlBQlFSQjBRUkIxTmdJQUlBOGdDRUVjYkdvaUF5QVROZ0lZSUFNZ0V6WUNGQ0FESUFrMkFoQWdBeUFKTmdJTUlBTWdFellDQ0NBRElBazJBZ1FnQTBFQk5nSUFJQUVoQ0F3RUN5QUNRUUE3QVFBZ0RVRUFPZ0FBREFNTElBMUJBbW9oRFNBQ1FRUnFJUUlnRVVFQ2FpRUhJQlpCQW1vaERpQVRRUUZxSVJNTUJRc2dBVUVRZEVFUWRVRWNiQ0FQYWlJRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUphallDQUNBRFFSUnJJZ0VnQVNnQ0FDQVRhallDQUF3QkN5QUJRUkIwUVJCMVFSeHNJQTlxSWdOQkJHc2dFellDQUNBRFFSeHJJZ0VnQVNnQ0FFRUJhallDQUNBRFFSaHJJZ0VnQVNnQ0FDQUphallDQUNBRFFSUnJJZ0VnQVNnQ0FDQVRhallDQUFzZ0RVRUJhaUVOSUFKQkFtb2hBaUFIUVFGcUlRY2dEa0VCYWlFT0lBbEJBV29oQ1F3QUN3QUxDeUFJUVFBZ0NFRUFTaHRCQVdvaEFrRUJJUU5CQVNFSElBQWhDUU5BSUFJZ0EwY0VRQUpBSUFNZ0NTZ0NBQ0lCUmdSQUlBY2lDa0VCYWlFSERBRUxJQUZCQW5RZ0FHcEJCR3NvQWdBaENnc2dDU0FLTmdJQUlBbEJCR29oQ1NBRFFRRnFJUU1NQVFzTElBd2dCMEVCYXlJSk5nSUlRUUFnQ1VVTkFSb2dERUdNZ0FocUlRb2dERUVNYWtFQUlBbEJBblFRT0NFTElBeEJrSUFvYWtFQUlBbEJCSFFRT0NFSFFRQWhBd05BSUFNZ0NVNEVRRUVBSVFrZ0NFRUFJQWhCQUVvYklRUURRQ0FFSUFsR0JFQkJBQ0VLSUF3b0FnZ2lBRUVBSUFCQkFFb2JJUUJCQUNFREEwQWdBQ0FEUmcwRklBY2dBMEVFZEdvaUFTQUJLd01BSUFzZ0EwRUNkR29vQWdDM0loZWpPUU1BSUFFZ0FTc0RDQ0FYb3prRENDQURRUUZxSVFNTUFBc0FDeUFMSUFBZ0NVRUNkR29vQWdCQkFXc2lBa0VDZENJRGFpSUJJQUVvQWdBZ0R5QUpRUnhzYWlJRktBSUFhallDQUNBSElBSkJCSFFpQVdvaUFpQUNLd01BSUFVb0FnUzNvRGtEQUNBQ0lBSXJBd2dnQlNnQ0NMZWdPUU1JSUFVb0Fnd2lBaUFCSUFwcUlnRW9BZ0JJQkVBZ0FTQUNOZ0lBQ3lBRktBSVFJZ0lnQ2lBRFFRSjBJZ05CQkhKcUlnRW9BZ0JLQkVBZ0FTQUNOZ0lBQ3lBRktBSVVJZ0lnQ2lBRFFRaHlhaUlCS0FJQVNBUkFJQUVnQWpZQ0FBc2dCU2dDR0NJQ0lBb2dBMEVNY21vaUFTZ0NBRW9FUUNBQklBSTJBZ0FMSUFsQkFXb2hDUXdBQ3dBRklBb2dBMEVFZEdvaUFTQUdOZ0lBSUFGQkFEWUNCQ0FCSUFVMkFnZ2dBVUVBTmdJTUlBTkJBV29oQXlBTUtBSUlJUWtNQVFzQUN3QUxJQW9MRHdzZ0JrVUVRQUovSUFBaEJFRUFJUU1nQVNJSVFRQWdBVUVBU2hzaEFDQUhJZ3dvQWdBaUFTQUNJZ1pCQVdzaUNTQUliRUVCZEdvaEN5QUJJUUlEUUNBQUlBTkhCRUFnQzBFQU93RUFJQUpCQURzQkFDQURRUUZxSVFNZ0FrRUNhaUVDSUF0QkFtb2hDd3dCQ3dzZ0JrRUFJQVpCQUVvYklRY2dBU0FJUVFGcklncEJBWFJxSVF0QkFDRURJQUVoQWdOQUlBTWdCMGNFUUNBTFFRQTdBUUFnQWtFQU93RUFJQU5CQVdvaEF5QUxJQWhCQVhRaUFHb2hDeUFBSUFKcUlRSU1BUXNMSUFsQkFTQUpRUUZLR3lFUUlBeEJrSURRQUdvaERTQU1RWkNBeUFCcUlRQWdCQ0FJUVFGcUlnSnFJUWNnRENnQ0JDQUNhaUVPSUFwQkFTQUtRUUZLR3lJU1FRRnJJUlFnQVNBQ1FRRjBhaUVDUVFBZ0NHdEJBWFFoRlVFQUlRcEJBU0VQQWtBRFFDQVBJQkJIQkVBZ0J5QVVhaUVXUVFFaEN3TkFBa0FDUUFKQUlBc2dFa2NFUUNBRklBY3RBQUJJQkVBZ0RrSC9BVG9BQUNBQ0lCVnFJZ1F2QVFBaUEwRVFkRUVRZFNJQlFRQktCRUFnQWlBQk93RUFJQU5CSEd3Z0RXb2lBMEVFYXlBUE5nSUFJQU5CSEdzaUFTQUJLQUlBUVFGcU5nSUFJQU5CR0dzaUFTQUJLQUlBSUF0cU5nSUFJQU5CRkdzaUFTQUJLQUlBSUE5cU5nSUFEQVVMSUFSQkFtc3ZBUUFpQTBFUWRFRVFkU0VCSUFRdUFRSWlCRUVBU2dSQUlBRkJBRW9FUUNBRVFRSjBJQUJxUVFScktBSUFJZ0VnQTBFQ2RDQUFha0VFYXlnQ0FDSUVTZ1JBSUFJZ0JEc0JBRUVBSVFrZ0NrRUFJQXBCQUVvYklSRWdBQ0VEQTBBZ0NTQVJSZ1JBSUFRaEFRd0lDeUFCSUFNb0FnQkdCRUFnQXlBRU5nSUFDeUFKUVFGcUlRa2dBMEVFYWlFRERBQUxBQXNnQWlBQk93RUFJQUVnQkU0TkJVRUFJUWtnQ2tFQUlBcEJBRW9iSVJFZ0FDRURBMEFnQ1NBUlJnMEdJQVFnQXlnQ0FFWUVRQ0FESUFFMkFnQUxJQWxCQVdvaENTQURRUVJxSVFNTUFBc0FDeUFDUVFKckxnRUFJZ05CQUVvRVFDQUVRUUowSUFCcVFRUnJLQUlBSWdFZ0EwSC8vd054UVFKMElBQnFRUVJyS0FJQUlnUktCRUFnQWlBRU93RUFRUUFoQ1NBS1FRQWdDa0VBU2hzaEVTQUFJUU1EUUNBSklCRkdCRUFnQkNFQkRBY0xJQUVnQXlnQ0FFWUVRQ0FESUFRMkFnQUxJQWxCQVdvaENTQURRUVJxSVFNTUFBc0FDeUFDSUFFN0FRQWdBU0FFVGcwRVFRQWhDU0FLUVFBZ0NrRUFTaHNoRVNBQUlRTURRQ0FKSUJGR0RRVWdCQ0FES0FJQVJnUkFJQU1nQVRZQ0FBc2dDVUVCYWlFSklBTkJCR29oQXd3QUN3QUxJQUlnQkRzQkFDQUVRUnhzSUExcUlnTkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBTkJHR3NpQVNBQktBSUFJQXRxTmdJQUlBTkJGR3NpQVNBQktBSUFJQTlxTmdJQUlBc2dBMEVRYXlJQktBSUFTQVJBSUFFZ0N6WUNBQXNnQTBFRWF5QVBOZ0lBREFVTElBRkJBRW9FUUNBQ0lBRTdBUUFnQTBFY2JDQU5haUlEUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FEUVJocklnRWdBU2dDQUNBTGFqWUNBQ0FEUVJScklnRWdBU2dDQUNBUGFqWUNBQ0FMSUFOQkRHc2lBU2dDQUVvRVFDQUJJQXMyQWdBTElBTkJCR3NnRHpZQ0FBd0ZDeUFDUVFKckx3RUFJZ05CRUhSQkVIVWlBVUVBU2dSQUlBSWdBVHNCQUNBRFFSeHNJQTFxSWdOQkhHc2lBU0FCS0FJQVFRRnFOZ0lBSUFOQkdHc2lBU0FCS0FJQUlBdHFOZ0lBSUFOQkZHc2lBU0FCS0FJQUlBOXFOZ0lBSUFOQkRHc2lBU2dDQUNBTFRnMEZJQUVnQ3pZQ0FBd0ZDeUFLUVlDQUFrNEVRRUVBUVFOQi9RdEJBQkE1UVg4aENRd0pDeUFDSUFwQkFXb2lBVHNCQUNBQUlBcEJBblJxSUFGQkVIUkJFSFUyQWdBZ0RTQUtRUnhzYWlJRElBODJBaGdnQXlBUE5nSVVJQU1nQ3pZQ0VDQURJQXMyQWd3Z0F5QVBOZ0lJSUFNZ0N6WUNCQ0FEUVFFMkFnQWdBU0VLREFRTElBSkJBRHNCQUNBT1FRQTZBQUFNQXdzZ0RrRUNhaUVPSUFKQkJHb2hBaUFXUVFKcUlRY2dEMEVCYWlFUERBVUxJQUZCRUhSQkVIVkJIR3dnRFdvaUEwRWNheUlCSUFFb0FnQkJBV28yQWdBZ0EwRVlheUlCSUFFb0FnQWdDMm8yQWdBZ0EwRVVheUlCSUFFb0FnQWdEMm8yQWdBTUFRc2dBVUVRZEVFUWRVRWNiQ0FOYWlJRFFRUnJJQTgyQWdBZ0EwRWNheUlCSUFFb0FnQkJBV28yQWdBZ0EwRVlheUlCSUFFb0FnQWdDMm8yQWdBZ0EwRVVheUlCSUFFb0FnQWdEMm8yQWdBTElBNUJBV29oRGlBQ1FRSnFJUUlnQjBFQmFpRUhJQXRCQVdvaEN3d0FDd0FMQ3lBS1FRQWdDa0VBU2h0QkFXb2hBa0VCSVFOQkFTRUhJQUFoQ3dOQUlBSWdBMGNFUUFKQUlBTWdDeWdDQUNJQlJnUkFJQWNpQ1VFQmFpRUhEQUVMSUFGQkFuUWdBR3BCQkdzb0FnQWhDUXNnQ3lBSk5nSUFJQXRCQkdvaEN5QURRUUZxSVFNTUFRc0xJQXdnQjBFQmF5SUxOZ0lJUVFBZ0MwVU5BUm9nREVHTWdBaHFJUWtnREVFTWFrRUFJQXRCQW5RUU9DRUhJQXhCa0lBb2FrRUFJQXRCQkhRUU9DRUZRUUFoQXdOQUlBTWdDMDRFUUVFQUlRc2dDa0VBSUFwQkFFb2JJUVFEUUNBRUlBdEdCRUJCQUNFSklBd29BZ2dpQUVFQUlBQkJBRW9iSVFCQkFDRURBMEFnQUNBRFJnMEZJQVVnQTBFRWRHb2lBU0FCS3dNQUlBY2dBMEVDZEdvb0FnQzNJaGVqT1FNQUlBRWdBU3NEQ0NBWG96a0RDQ0FEUVFGcUlRTU1BQXNBQ3lBSElBQWdDMEVDZEdvb0FnQkJBV3NpQWtFQ2RDSURhaUlCSUFFb0FnQWdEU0FMUVJ4c2FpSUdLQUlBYWpZQ0FDQUZJQUpCQkhRaUFXb2lBaUFDS3dNQUlBWW9BZ1Mzb0RrREFDQUNJQUlyQXdnZ0JpZ0NDTGVnT1FNSUlBWW9BZ3dpQWlBQklBbHFJZ0VvQWdCSUJFQWdBU0FDTmdJQUN5QUdLQUlRSWdJZ0NTQURRUUowSWdOQkJISnFJZ0VvQWdCS0JFQWdBU0FDTmdJQUN5QUdLQUlVSWdJZ0NTQURRUWh5YWlJQktBSUFTQVJBSUFFZ0FqWUNBQXNnQmlnQ0dDSUNJQWtnQTBFTWNtb2lBU2dDQUVvRVFDQUJJQUkyQWdBTElBdEJBV29oQ3d3QUN3QUZJQWtnQTBFRWRHb2lBU0FJTmdJQUlBRkJBRFlDQkNBQklBWTJBZ2dnQVVFQU5nSU1JQU5CQVdvaEF5QU1LQUlJSVFzTUFRc0FDd0FMSUFrTER3c0NmeUFBSVFZZ0FTSUlRUUp0SWhCQkFDQVFRUUJLR3lFQUlBY29BZ0FpQXlBQ1FRSnRJaFJCQVdzaUNpQVFiRUVCZEdvaENVRUFJUUVnQXlFRUEwQWdBQ0FCUndSQUlBbEJBRHNCQUNBRVFRQTdBUUFnQVVFQmFpRUJJQVJCQW1vaEJDQUpRUUpxSVFrTUFRc0xJQlJCQUNBVVFRQktHeUVDSUFNZ0VFRUJheUlNUVFGMGFpRUpRUUFoQVNBRElRUURRQ0FCSUFKSEJFQWdDVUVBT3dFQUlBUkJBRHNCQUNBQlFRRnFJUUVnQ1NBUVFRRjBJZ0JxSVFrZ0FDQUVhaUVFREFFTEN5QUtRUUVnQ2tFQlNoc2hGU0FNUVFFZ0RFRUJTaHNoRmlBSFFaQ0EwQUJxSVE0Z0IwR1FnTWdBYWlFQUlCQkJBV29pQVNBSEtBSUVhaUVNSUFoQkFYUWdCbXBCQW1vaEVpQURJQUZCQVhScUlRUkJBQ0FRYTBFQmRDRVJRUUFoQmtFQklRMENRQU5BSUEwZ0ZVY0VRRUVCSVFrRFFBSkFBa0FDUUNBSklCWkhCRUFnQlNBU0xRQUFTQVJBSUF4Qi93RTZBQUFnQkNBUmFpSURMd0VBSWdKQkVIUkJFSFVpQVVFQVNnUkFJQVFnQVRzQkFDQUNRUnhzSUE1cUlnSkJCR3NnRFRZQ0FDQUNRUnhySWdFZ0FTZ0NBRUVCYWpZQ0FDQUNRUmhySWdFZ0FTZ0NBQ0FKYWpZQ0FDQUNRUlJySWdFZ0FTZ0NBQ0FOYWpZQ0FBd0ZDeUFEUVFKckx3RUFJZ0ZCRUhSQkVIVWhBaUFETGdFQ0lnTkJBRW9FUUNBQ1FRQktCRUFnQTBFQ2RDQUFha0VFYXlnQ0FDSUNJQUZCQW5RZ0FHcEJCR3NvQWdBaUEwb0VRQ0FFSUFNN0FRQkJBQ0VLSUFaQkFDQUdRUUJLR3lFTElBQWhBUU5BSUFvZ0MwWUVRQ0FESVFJTUNBc2dBaUFCS0FJQVJnUkFJQUVnQXpZQ0FBc2dDa0VCYWlFS0lBRkJCR29oQVF3QUN3QUxJQVFnQWpzQkFDQUNJQU5PRFFWQkFDRUtJQVpCQUNBR1FRQktHeUVMSUFBaEFRTkFJQW9nQzBZTkJpQURJQUVvQWdCR0JFQWdBU0FDTmdJQUN5QUtRUUZxSVFvZ0FVRUVhaUVCREFBTEFBc2dCRUVDYXk0QkFDSUJRUUJLQkVBZ0EwRUNkQ0FBYWtFRWF5Z0NBQ0lDSUFGQi8vOERjVUVDZENBQWFrRUVheWdDQUNJRFNnUkFJQVFnQXpzQkFFRUFJUW9nQmtFQUlBWkJBRW9iSVFzZ0FDRUJBMEFnQ2lBTFJnUkFJQU1oQWd3SEN5QUNJQUVvQWdCR0JFQWdBU0FETmdJQUN5QUtRUUZxSVFvZ0FVRUVhaUVCREFBTEFBc2dCQ0FDT3dFQUlBSWdBMDROQkVFQUlRb2dCa0VBSUFaQkFFb2JJUXNnQUNFQkEwQWdDaUFMUmcwRklBTWdBU2dDQUVZRVFDQUJJQUkyQWdBTElBcEJBV29oQ2lBQlFRUnFJUUVNQUFzQUN5QUVJQU03QVFBZ0EwRWNiQ0FPYWlJQ1FSeHJJZ0VnQVNnQ0FFRUJhallDQUNBQ1FSaHJJZ0VnQVNnQ0FDQUphallDQUNBQ1FSUnJJZ0VnQVNnQ0FDQU5hallDQUNBSklBSkJFR3NpQVNnQ0FFZ0VRQ0FCSUFrMkFnQUxJQUpCQkdzZ0RUWUNBQXdGQ3lBQ1FRQktCRUFnQkNBQ093RUFJQUZCSEd3Z0Rtb2lBa0VjYXlJQklBRW9BZ0JCQVdvMkFnQWdBa0VZYXlJQklBRW9BZ0FnQ1dvMkFnQWdBa0VVYXlJQklBRW9BZ0FnRFdvMkFnQWdDU0FDUVF4cklnRW9BZ0JLQkVBZ0FTQUpOZ0lBQ3lBQ1FRUnJJQTAyQWdBTUJRc2dCRUVDYXk4QkFDSUNRUkIwUVJCMUlnRkJBRW9FUUNBRUlBRTdBUUFnQWtFY2JDQU9haUlDUVJ4cklnRWdBU2dDQUVFQmFqWUNBQ0FDUVJocklnRWdBU2dDQUNBSmFqWUNBQ0FDUVJScklnRWdBU2dDQUNBTmFqWUNBQ0FDUVF4cklnRW9BZ0FnQ1U0TkJTQUJJQWsyQWdBTUJRc2dCa0dBZ0FKT0JFQkJBRUVEUWYwTFFRQVFPVUYvSVFvTUNRc2dCQ0FHUVFGcUlnRTdBUUFnQUNBR1FRSjBhaUFCUVJCMFFSQjFOZ0lBSUE0Z0JrRWNiR29pQWlBTk5nSVlJQUlnRFRZQ0ZDQUNJQWsyQWhBZ0FpQUpOZ0lNSUFJZ0RUWUNDQ0FDSUFrMkFnUWdBa0VCTmdJQUlBRWhCZ3dFQ3lBRVFRQTdBUUFnREVFQU9nQUFEQU1MSUF4QkFtb2hEQ0FFUVFScUlRUWdEVUVCYWlFTklBZ2dFbXBCQkdvaEVnd0ZDeUFDUVJCMFFSQjFRUnhzSUE1cUlnSkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBSkJHR3NpQVNBQktBSUFJQWxxTmdJQUlBSkJGR3NpQVNBQktBSUFJQTFxTmdJQURBRUxJQUpCRUhSQkVIVkJIR3dnRG1vaUFrRUVheUFOTmdJQUlBSkJIR3NpQVNBQktBSUFRUUZxTmdJQUlBSkJHR3NpQVNBQktBSUFJQWxxTmdJQUlBSkJGR3NpQVNBQktBSUFJQTFxTmdJQUN5QU1RUUZxSVF3Z0JFRUNhaUVFSUJKQkFtb2hFaUFKUVFGcUlRa01BQXNBQ3dzZ0JrRUFJQVpCQUVvYlFRRnFJUU5CQVNFQlFRRWhEQ0FBSVFrRFFDQUJJQU5IQkVBQ1FDQUJJQWtvQWdBaUFrWUVRQ0FNSWdwQkFXb2hEQXdCQ3lBQ1FRSjBJQUJxUVFScktBSUFJUW9MSUFrZ0NqWUNBQ0FKUVFScUlRa2dBVUVCYWlFQkRBRUxDeUFISUF4QkFXc2lDVFlDQ0VFQUlBbEZEUUVhSUFkQmpJQUlhaUVNSUFkQkRHcEJBQ0FKUVFKMEVEZ2hDQ0FIUVpDQUtHcEJBQ0FKUVFSMEVEZ2hCVUVBSVFFRFFDQUJJQWxPQkVCQkFDRUpJQVpCQUNBR1FRQktHeUVFQTBBZ0JDQUpSZ1JBUVFBaENpQUhLQUlJSWdCQkFDQUFRUUJLR3lFQVFRQWhBUU5BSUFBZ0FVWU5CU0FGSUFGQkJIUnFJZ0lnQWlzREFDQUlJQUZCQW5ScUtBSUF0eUlYb3prREFDQUNJQUlyQXdnZ0Y2TTVBd2dnQVVFQmFpRUJEQUFMQUFzZ0NDQUFJQWxCQW5ScUtBSUFRUUZySWdKQkFuUWlBMm9pQVNBQktBSUFJQTRnQ1VFY2JHb2lCaWdDQUdvMkFnQWdCU0FDUVFSMElnRnFJZ0lnQWlzREFDQUdLQUlFdDZBNUF3QWdBaUFDS3dNSUlBWW9BZ2kzb0RrRENDQUdLQUlNSWdJZ0FTQU1haUlCS0FJQVNBUkFJQUVnQWpZQ0FBc2dCaWdDRUNJQ0lBd2dBMEVDZENJRFFRUnlhaUlCS0FJQVNnUkFJQUVnQWpZQ0FBc2dCaWdDRkNJQ0lBd2dBMEVJY21vaUFTZ0NBRWdFUUNBQklBSTJBZ0FMSUFZb0FoZ2lBaUFNSUFOQkRISnFJZ0VvQWdCS0JFQWdBU0FDTmdJQUN5QUpRUUZxSVFrTUFBc0FCU0FNSUFGQkJIUnFJZ0lnRURZQ0FDQUNRUUEyQWdRZ0FpQVVOZ0lJSUFKQkFEWUNEQ0FCUVFGcUlRRWdCeWdDQ0NFSkRBRUxBQXNBQ3lBS0N3c0lBQ0FBS0FJUVJRc0pBQ0FBRUlJREVERUxDZ0FnQUVFWWRFRVlkUXNVQUNBQVFlaitBallDQUNBQVFRUnFFRVlnQUFzTUFDQUFFTWdDR2lBQUVERUxDUUFnQUNBQkVQWUVDOU1EQWdKK0FuOGpBRUVnYXlJRUpBQUNRQ0FCUXYvLy8vLy8vLy8vL3dDRElnTkNnSUNBZ0lDQXdJQThmU0FEUW9DQWdJQ0FnTUQvd3dCOVZBUkFJQUZDQklZZ0FFSThpSVFoQXlBQVF2Ly8vLy8vLy8vL0Q0TWlBRUtCZ0lDQWdJQ0FnQWhhQkVBZ0EwS0JnSUNBZ0lDQWdNQUFmQ0VDREFJTElBTkNnSUNBZ0lDQWdJQkFmU0VDSUFCQ2dJQ0FnSUNBZ0lBSVVnMEJJQUlnQTBJQmczd2hBZ3dCQ3lBQVVDQURRb0NBZ0lDQWdNRC8vd0JVSUFOQ2dJQ0FnSUNBd1AvL0FGRWJSUVJBSUFGQ0JJWWdBRUk4aUlSQy8vLy8vLy8vL3dPRFFvQ0FnSUNBZ0lEOC93Q0VJUUlNQVF0Q2dJQ0FnSUNBZ1BqL0FDRUNJQU5DLy8vLy8vLy92Ly9EQUZZTkFFSUFJUUlnQTBJd2lLY2lCVUdSOXdCSkRRQWdCRUVRYWlBQUlBRkMvLy8vLy8vL1A0TkNnSUNBZ0lDQXdBQ0VJZ0lnQlVHQjl3QnJFSWNCSUFRZ0FDQUNRWUg0QUNBRmF4Q0JBaUFFS1FNSVFnU0dJQVFwQXdBaUFFSThpSVFoQWlBRUtRTVFJQVFwQXhpRVFnQlNyU0FBUXYvLy8vLy8vLy8vRDRPRUlnQkNnWUNBZ0lDQWdJQUlXZ1JBSUFKQ0FYd2hBZ3dCQ3lBQVFvQ0FnSUNBZ0lDQUNGSU5BQ0FDUWdHRElBSjhJUUlMSUFSQklHb2tBQ0FDSUFGQ2dJQ0FnSUNBZ0lDQWY0T0V2d3RGQVFGL0l3QkJFR3NpQlNRQUlBVWdBU0FDSUFNZ0JFS0FnSUNBZ0lDQWdJQi9oUkNkQVNBRktRTUFJUUVnQUNBRktRTUlOd01JSUFBZ0FUY0RBQ0FGUVJCcUpBQUxpUUlBQWtBZ0FBUi9JQUZCL3dCTkRRRUNRRUdRamdRb0FnQW9BZ0JGQkVBZ0FVR0FmM0ZCZ0w4RFJnMEREQUVMSUFGQi93OU5CRUFnQUNBQlFUOXhRWUFCY2pvQUFTQUFJQUZCQm5aQndBRnlPZ0FBUVFJUEN5QUJRWUJBY1VHQXdBTkhJQUZCZ0xBRFQzRkZCRUFnQUNBQlFUOXhRWUFCY2pvQUFpQUFJQUZCREhaQjRBRnlPZ0FBSUFBZ0FVRUdka0UvY1VHQUFYSTZBQUZCQXc4TElBRkJnSUFFYTBILy96OU5CRUFnQUNBQlFUOXhRWUFCY2pvQUF5QUFJQUZCRW5aQjhBRnlPZ0FBSUFBZ0FVRUdka0UvY1VHQUFYSTZBQUlnQUNBQlFReDJRVDl4UVlBQmNqb0FBVUVFRHdzTFFiU01CRUVaTmdJQVFYOEZRUUVMRHdzZ0FDQUJPZ0FBUVFFTC9RRUJBbjhDUUFKQUFrQUNRQ0FCSUFBaUEzTkJBM0VOQUNBQ1FRQkhJUVFDUUNBQlFRTnhSU0FDUlhJTkFBTkFJQU1nQVMwQUFDSUVPZ0FBSUFSRkRRVWdBMEVCYWlFRElBSkJBV3NpQWtFQVJ5RUVJQUZCQVdvaUFVRURjVVVOQVNBQ0RRQUxDeUFFUlEwQ0lBRXRBQUJGRFFNZ0FrRUVTUTBBQTBBZ0FTZ0NBQ0lFUVg5eklBUkJnWUtFQ0d0eFFZQ0Jnb1I0Y1EwQ0lBTWdCRFlDQUNBRFFRUnFJUU1nQVVFRWFpRUJJQUpCQkdzaUFrRURTdzBBQ3dzZ0FrVU5BUXNEUUNBRElBRXRBQUFpQkRvQUFDQUVSUTBDSUFOQkFXb2hBeUFCUVFGcUlRRWdBa0VCYXlJQ0RRQUxDMEVBSVFJTElBTkJBQ0FDRURnYUlBQUxLZ0VCZnlNQVFSQnJJZ1FrQUNBRUlBTTJBZ3dnQUNBQklBSWdBeENFQWlFQUlBUkJFR29rQUNBQUMyWUJBMzlCZnlFQ0FrQWdBRVVnQVVWeURRQkJBQ0VDSUFCQkRHcEJBRUdBQ0JBNEdpQUJJQUFvQWdnZ0FDZ0NCR3hxSVFNRFFDQUJJQU5QRFFFZ0FDQUJMUUFBUVFKMGFpSUVRUXhxSUFRb0FneEJBV28yQWdBZ0FVRUJhaUVCREFBTEFBc2dBZ3V2QVFFR2Z5TUFRZkFCYXlJSEpBQWdCeUFBTmdJQVFRRWhCZ0pBSUFOQkFrZ05BRUVBSUFGcklRa2dBQ0VGQTBBZ0FDQUZJQWxxSWdVZ0JDQURRUUpySWdwQkFuUnFLQUlBYXlJSUlBSVJBd0JCQUU0RVFDQUFJQVVnQWhFREFFRUFUZzBDQ3lBSElBWkJBblJxSUFnZ0JTQUlJQVVnQWhFREFFRUFUaUlJR3lJRk5nSUFJQVpCQVdvaEJpQURRUUZySUFvZ0NCc2lBMEVCU2cwQUN3c2dBU0FISUFZUWxBVWdCMEh3QVdva0FBdmpBUUVDZnlBQ1FRQkhJUU1DUUFKQUFrQWdBRUVEY1VVZ0FrVnlEUUFnQVVIL0FYRWhCQU5BSUFBdEFBQWdCRVlOQWlBQ1FRRnJJZ0pCQUVjaEF5QUFRUUZxSWdCQkEzRkZEUUVnQWcwQUN3c2dBMFVOQVFzQ1FDQUFMUUFBSUFGQi93RnhSaUFDUVFSSmNrVUVRQ0FCUWY4QmNVR0Jnb1FJYkNFREEwQWdBQ2dDQUNBRGN5SUVRWDl6SUFSQmdZS0VDR3R4UVlDQmdvUjRjUTBDSUFCQkJHb2hBQ0FDUVFScklnSkJBMHNOQUFzTElBSkZEUUVMSUFGQi93RnhJUUVEUUNBQklBQXRBQUJHQkVBZ0FBOExJQUJCQVdvaEFDQUNRUUZySWdJTkFBc0xRUUFMd1FFQkEzOENRQ0FCSUFJb0FoQWlBd1IvSUFNRklBSVFud1VOQVNBQ0tBSVFDeUFDS0FJVUlnVnJTd1JBSUFJZ0FDQUJJQUlvQWlRUkJBQVBDd0pBSUFJb0FsQkJBRWdFUUVFQUlRTU1BUXNnQVNFRUEwQWdCQ0lEUlFSQVFRQWhBd3dDQ3lBQUlBTkJBV3NpQkdvdEFBQkJDa2NOQUFzZ0FpQUFJQU1nQWlnQ0pCRUVBQ0lFSUFOSkRRRWdBQ0FEYWlFQUlBRWdBMnNoQVNBQ0tBSVVJUVVMSUFVZ0FDQUJFRDRhSUFJZ0FpZ0NGQ0FCYWpZQ0ZDQUJJQU5xSVFRTElBUUxqUUVBSUFBZ0FDQUFJQUFnQUVRSjkvME40VDBDUDZKRWlMSUJkZUR2U1QrZ29rUTdqMmkxS0lLa3Y2Q2lSRlZFaUE1Vndjay9vS0pFZlcvckF4TFcxTCtnb2tSVlZWVlZWVlhGUDZBZ0FLSWdBQ0FBSUFBZ0FFU0NraTZ4eGJpelA2SkVXUUdORzJ3RzVyK2dva1RJaWxtYzVTb0FRS0NpUkVzdGlod25PZ1BBb0tKRUFBQUFBQUFBOEQrZ293dU9DZ0VPZnlBQktBSVVJUWtnQVNnQ0VDRURJQUVvQWd3aEN5QUJLQUlJSVFVZ0FDZ0M1QU1vQWhnaERRSkFJQUVvQWdRaUJ5QUJLQUlBSWdaS0JFQWdCaUVLQTBBZ0JTQUxUQVJBSUEwZ0NrRUNkR29vQWdBaERDQUZJUUlEUUNBRElBbE1CRUFnRENBQ1FRWjBhaUFEUVFGMGFpRUFJQU1oQkFOQUlBQXZBUUFFUUNBQklBbzJBZ0FNQndzZ0FFRUNhaUVBSUFRZ0NVY2hDQ0FFUVFGcUlRUWdDQTBBQ3dzZ0FpQUxSeUVBSUFKQkFXb2hBaUFBRFFBTEN5QUhJQXBISVFBZ0NrRUJhaUVLSUFBTkFBc0xJQVloQ2dzQ1FDQUhJQXBLQkVBZ0J5RUlBMEFnQlNBTFRBUkFJQTBnQ0VFQ2RHb29BZ0FoRENBRklRSURRQ0FESUFsTUJFQWdEQ0FDUVFaMGFpQURRUUYwYWlFQUlBTWhCQU5BSUFBdkFRQUVRQ0FCSUFnMkFnUU1Cd3NnQUVFQ2FpRUFJQVFnQ1VjaEJpQUVRUUZxSVFRZ0JnMEFDd3NnQWlBTFJ5RUFJQUpCQVdvaEFpQUFEUUFMQ3lBSUlBcEtJUUFnQ0VFQmF5RUlJQUFOQUFzTElBY2hDQXNDUUNBRklBdElCRUFnQlNFR0EwQWdDQ0FLSWdKT0JFQURRQ0FESUFsTUJFQWdEU0FDUVFKMGFpZ0NBQ0FHUVFaMGFpQURRUUYwYWlFQUlBTWhCQU5BSUFBdkFRQUVRQ0FCSUFZMkFnZ01Cd3NnQUVFQ2FpRUFJQVFnQ1VjaEJ5QUVRUUZxSVFRZ0J3MEFDd3NnQWlBSVJ5RUFJQUpCQVdvaEFpQUFEUUFMQ3lBR0lBdEhJUUFnQmtFQmFpRUdJQUFOQUFzTElBVWhCZ3NDUUNBR0lBdElCRUFnQ3lFSEEwQWdDQ0FLSWdKT0JFQURRQ0FESUFsTUJFQWdEU0FDUVFKMGFpZ0NBQ0FIUVFaMGFpQURRUUYwYWlFQUlBTWhCQU5BSUFBdkFRQUVRQ0FCSUFjMkFnd01Cd3NnQUVFQ2FpRUFJQVFnQ1VjaEJTQUVRUUZxSVFRZ0JRMEFDd3NnQWlBSVJ5RUFJQUpCQVdvaEFpQUFEUUFMQ3lBR0lBZElJUUFnQjBFQmF5RUhJQUFOQUFzTElBc2hCd3NDUUNBRElBbElCRUFnQmtFR2RDRU1JQU1oQlFOQUlBZ2dDaUlDVGdSQUEwQWdCaUFIVEFSQUlBMGdBa0VDZEdvb0FnQWdER29nQlVFQmRHb2hBQ0FHSVFRRFFDQUFMd0VBQkVBZ0FTQUZOZ0lRREFjTElBQkJRR3NoQUNBRUlBZEhJUXNnQkVFQmFpRUVJQXNOQUFzTElBSWdDRWNoQUNBQ1FRRnFJUUlnQUEwQUN3c2dCU0FKUnlFQUlBVkJBV29oQlNBQURRQUxDeUFESVFVTEFrQWdCU0FKU0FSQUlBWkJCblFoRENBSklRSURRQ0FJSUFvaUEwNEVRQU5BSUFZZ0Iwd0VRQ0FOSUFOQkFuUnFLQUlBSUF4cUlBSkJBWFJxSVFBZ0JpRUVBMEFnQUM4QkFBUkFJQUVnQWpZQ0ZBd0hDeUFBUVVCcklRQWdCQ0FIUnlFTElBUkJBV29oQkNBTERRQUxDeUFESUFoSElRQWdBMEVCYWlFRElBQU5BQXNMSUFJZ0JVb2hBQ0FDUVFGcklRSWdBQTBBQ3dzZ0NTRUNDeUFCSUFjZ0JtdEJER3dpQUNBQWJDQUlJQXByUVFSMElnQWdBR3hxSUFJZ0JXc2lEa0VEZENJQUlBQnNhallDR0VFQUlRUWdDQ0FLVGdSQUlBNUJBV3BCQTNFaER3TkFJQVlnQjB3RVFDQU5JQXBCQW5ScUtBSUFJUXdnQmlFREEwQWdBeUVMQWtBZ0FpQUZTQTBBSUF3Z0MwRUdkR29nQlVFQmRHb2hBMEVBSVFrZ0JTRUFJQThFUUFOQUlBQkJBV29oQUNBRUlBTXZBUUJCQUVkcUlRUWdBMEVDYWlFRElBbEJBV29pQ1NBUFJ3MEFDd3NnRGtFRFNRMEFBMEFnQkNBREx3RUFRUUJIYWlBREx3RUNRUUJIYWlBREx3RUVRUUJIYWlBREx3RUdRUUJIYWlFRUlBTkJDR29oQXlBQVFRTnFJUWtnQUVFRWFpRUFJQUlnQ1VjTkFBc0xJQXRCQVdvaEF5QUhJQXRIRFFBTEN5QUlJQXBISVFBZ0NrRUJhaUVLSUFBTkFBc0xJQUVnQkRZQ0hBdkhBZ0VEZnlBQUtBSUVJUU1DUUNBQlFRSlBCRUFnQUNnQ0FDSUNJQUUyQWhnZ0FrRVBOZ0lVSUFBZ0FDZ0NBQ2dDQUJFQkFBd0JDeUFCUVFGSERRQWdBeWdDUkNJQ0JFQURRQ0FDS0FJb0JFQWdBa0VBTmdJb0lBQWdBa0V3YWlBQ0tBSTRFUUlBQ3lBQ0tBSXNJZ0lOQUFzTElBTkJBRFlDUkNBREtBSklJZ0lFUUFOQUlBSW9BaWdFUUNBQ1FRQTJBaWdnQUNBQ1FUQnFJQUlvQWpnUkFnQUxJQUlvQWl3aUFnMEFDd3NnQTBFQU5nSklDeUFESUFGQkFuUnFJZ0VpQUNnQ1BDRUNJQUJCQURZQ1BDQUNCRUFEUUNBQ0tBSUFJUUFnQWlnQ0JDQUNLQUlJYWtFUWFpRUVJQUlRTVNBRElBTW9Ba3dnQkdzMkFrd2dBQ0lDRFFBTEN5QUJLQUkwSVFJZ0FVRUFOZ0kwSUFJRVFBTkFJQUlvQWdBaEFDQUNLQUlFSUFJb0FnaHFRUkJxSVFFZ0FoQXhJQU1nQXlnQ1RDQUJhellDVENBQUlnSU5BQXNMQ3l3QkFYOGdBQkN2QlNBQUtBSUFCRUFnQUJDcUJTQUFFRElhSUFBb0FnQWhBU0FBRU5jQkdpQUJFREVMQzRrREFRWi9JQUFvQWhnaUFTZ0NCQ0VDSUFFb0FnQWhCQU5BSUFKRkJFQWdBQ0FCS0FJTUVRQUFSUVJBUVFBUEN5QUJLQUlBSVFRZ0FTZ0NCQ0VDQ3lBRVFRRnFJUU1nQWtFQmF5RUNJQVF0QUFCQi93RkhCRUFEUUNBQUtBTFFBeUlFSUFRb0FoaEJBV28yQWhnZ0FTQUNOZ0lFSUFFZ0F6WUNBQ0FDQkg4Z0FnVWdBQ0FCS0FJTUVRQUFSUVJBUVFBUEN5QUJLQUlBSVFNZ0FTZ0NCQXRCQVdzaEFpQURMUUFBSVFRZ0EwRUJhaUVESUFSQi93RkhEUUFMQ3dOQUlBSUVmeUFDQlNBQUlBRW9BZ3dSQUFCRkJFQkJBQThMSUFFb0FnQWhBeUFCS0FJRUMwRUJheUVDSUFNdEFBQWhCU0FEUVFGcUlnUWhBeUFGUWY4QlJnMEFDeUFGUlFSQUlBQW9BdEFESWdNZ0F5Z0NHRUVDYWpZQ0dDQUJJQUkyQWdRZ0FTQUVOZ0lBREFFTEN5QUFLQUxRQXlnQ0dDSURCRUFnQUNnQ0FDSUdJQU0yQWhnZ0JrSDNBRFlDRkNBQUtBSUFJQVUyQWh3Z0FFRi9JQUFvQWdBb0FnUVJBZ0FnQUNnQzBBTkJBRFlDR0FzZ0FDQUZOZ0s0QXlBQklBSTJBZ1FnQVNBRU5nSUFRUUVMR1FBZ0FDZ0NBQ0FCTmdJQUlBQWdBQ2dDQUVFSWFqWUNBQXMrQVFKL0l3QkJFR3NpQkNRQUlBUkJDR29pQXlBQklBSWdBQ2dDQUJFRkFDQURLQUlBRUNzZ0F5Z0NBQ0VBSUFNb0FnQVFLaUFFUVJCcUpBQWdBQXRSQVFKL0l3QkJFR3NpQWlRQUlBQW9BZ0FoQXlBQ0lBQW9BZ1FpQUVFQmRTQUJhaUlCSUFCQkFYRUVmeUFCS0FJQUlBTnFLQUlBQlNBREN4RUFBRFlDRENBQ0tBSU1JUUFnQWtFUWFpUUFJQUFMQndBZ0FCRVFBQXNKQUNBQVFRRVFlUm9MdlFNQ0FYOERmU01BUVNCcklnWWtBQ0FGQW44Q1FBSkFBa0FnQVVVTkFDQUFJQUVnQkNvQ0NDSUlJQVFxQWd3aUNTQUdRUnhxSUFaQkVHb1ExZ0pCQUVnTkFDQUZBbjhnQmlvQ0hDSUhpME1BQUFCUFhRUkFJQWVvREFFTFFZQ0FnSUI0Q3pZQ0FDQUZBbjhnQmlvQ0VDSUhpME1BQUFCUFhRUkFJQWVvREFFTFFZQ0FnSUI0Q3pZQ0JDQUNSUTBCSUFBZ0FpQUlJQWtnQmtFWWFpQUdRUXhxRU5ZQ1FRQklEUUVnQlFKL0lBWXFBaHdpQnlBSGtpQUdLZ0lZa3lJSGkwTUFBQUJQWFFSQUlBZW9EQUVMUVlDQWdJQjRDellDQ0NBRkFuOGdCaW9DRUNJSElBZVNJQVlxQWd5VElnZUxRd0FBQUU5ZEJFQWdCNmdNQVF0QmdJQ0FnSGdMTmdJTUlBTkZEUUlnQUNBRElBZ2dDU0FHUVJScUlBWkJDR29RMWdKQkFFZ05BaUFGQW44Z0Jpb0NGQ0FHS2dJY1F3QUFRRUNVSUFZcUFoaERBQUJBd0pTU2tpSUlpME1BQUFCUFhRUkFJQWlvREFFTFFZQ0FnSUI0Q3pZQ0VDQUdLZ0lJSUFZcUFoQkRBQUJBUUpRZ0Jpb0NERU1BQUVEQWxKS1NJZ2lMUXdBQUFFOWRCRUFnQ0tnTUJBdEJnSUNBZ0hnTUF3c2dCVUovTndJQUN5QUZRbjgzQWdnTElBVkJmellDRUVGL0N6WUNGQ0FHUVNCcUpBQUxDQUJCREJCWEVFb0xUZ0VDZlNBQktnSUFJQUFxQWdDVElnUWdCSlFnQVNvQ0JDQUFLZ0lFa3lJRUlBU1VrcEVpQlVNQUFBQUFYQVJBSUFJZ0JDQUZsVGdDQUNBRElBRXFBZ0FnQUNvQ0FKTWdCWlU0QWdBTEN5Y0JBWDhqQUVFUWF5SUNKQUFnQUVFRFFZaWZBa0g0bUFKQjVRQWdBUkFFSUFKQkVHb2tBQXNaQUNBQUlBRkI3ZE1CUWNQekEwSGc0Z05CM09JREVLMEVDeE1BSUFCQnNPWURRZGppQTBIVTRnTVE5d1lML0FNQkNYOGpBRUVRYXlJTEpBQUNRQUpBQWtBQ1FDQUNCRUFnQTBVTkFTQUVSUTBDSUFBZ0FSRGdCU0FDSUFSc2JDSUZOZ0lNSUFNZ0JXd2lEQ0FBS0FJVVJ3UkFJQXdRVnlFRkl3QkJFR3NpRFNRQUl3QkJJR3NpQmlRQUlBMUJDR29pQ1NBRk5nSUFJQVpCR0dvZ0JSQ3RCaUVLUVJBUVZ5RUhJd0JCSUdzaUNDUUFJQWdnQlRZQ0RDQUhFSU1FSWdkQmhOSUJOZ0lBSUFkQkRHb2dDRUVJYWlBSVFReHFFS29DRUtvQ0dpQUlRU0JxSkFBZ0NTQUhOZ0lFSUFvUXRnRWFJQVlnQlRZQ0JDQUdJQVUyQWdBZ0NpZ0NBQ0VGSUFwQkFEWUNBQ0FGQkVBZ0JSQXhDeUFHUVNCcUpBQWdDU0FBUVJocUVJUUVJQWtRemdFZ0RVRVFhaVFBSUFBb0FoaEZEUVFnQUNnQ0dFVU5CUXNnQUNBTU5nSVVJQUFnQkRZQ0VDQUFJQU0yQWdnZ0FDQUNOZ0lFSUFBZ0FUWUNBQ0FMUVJCcUpBQVBDMEd3cFFSQnZ3a1FNRUdrRWhBd1FiRVpFREJCL3dBUU0wSGFIUkF3UWFnZ0VEQVFOQkFBQUF0QnNLVUVRWUFvRURCQnBCSVFNRUd4R1JBd1FZQUJFRE5CMmgwUU1FSHVLeEF3RURRUUFBQUxRYkNsQkVIa1B4QXdRYVFTRURCQnNSa1FNRUdDQVJBelFkb2RFREJCZzhNQUVEQVFOQkFBQUF0QnNLVUVRYzdLQUJBd1FhUVNFREJCc1JrUU1FR1ZBUkF6UWRvZEVEQkJ1czRBRURBUU5CQUFBQXRCRUJBSElBdEIxdElBRUVnUTRBSkJuTWtCUVE4UUJnQUxHd0VCZnlBQUtBSUFJZ0ZGQkVBUEN5QUJFREVnQUVFQU5nSUFDeEFBSUFBb0FnQWdBU2dDQUd0QkFuVUwyZzRCREg4akFFRWdheUlQSkFBQ1FDQUNMUUJrQkVBZ0R5QUFRY2dBYWlJQkVPb0NOZ0lJSUE5QkdHb2dEMEVJYWhDZkFTRUFJQUlRcVFJUXVRSWhEQ0FDRUtrQ0VPb0NJUTRnQUNnQ0FDRUFJd0JCSUdzaUJ5UUFJQWNnQURZQ0dDQUJLQUlBSVFBZ0J5QUJFTGtDTmdJQUlBQWdCMEVZYWlBSEVQVURRUUowYWlFRUFrQWdEQ0FPRVBJRklnVkJBRXdOQUNBQkVESW9BZ0FnQVNnQ0JDSUdhMEVDZFNBRlRnUkFJQWNnRGpZQ0FDQUdJQVJySWdOQkFuVWlBaUFGU0FSQUlBY2dERFlDQUNBSElBSVE4UVVnQnlnQ0FDRUFJd0JCRUdzaUNDUUFJQWdnQVNBRklBSnJFTFlDSVFrZ0FSQXlJUUlqQUVFUWF5SUxKQUFnQ3lBT05nSUFJQXNnQURZQ0NBTkFJQXRCQ0dvZ0N4Qi9CRUFnQWlBSktBSUVJQXRCQ0dvaUFDZ0NBQkR2QVNBQUVJZ0NJQWtnQ1NnQ0JFRUVhallDQkF3QkN3c2dDMEVRYWlRQUlBa1FheUFJUVJCcUpBQWdBMEVBVEEwQ0N5TUFRUkJySWdra0FDQUpJQUVnQmlBRUlBRW9BZ1FpQXlBRUlBVkJBblJxYTJvaUFtdEJBblVRdGdJaUNDZ0NCQ0VOSUFJaEFBTkFJQUFnQms4RVFDQUlFR3NnQWlBRVJ3UkFJQU1nQWlBRWF5SUFheUFFSUFBUTBBSUxJQWxCRUdva0FBVWdBUkF5SUEwZ0FCRHZBU0FJSUExQkJHb2lEVFlDQkNBQVFRUnFJUUFNQVFzTElBd2dCeWdDQUNBRUVOc0NHZ3dCQ3lBQkVESWhBQ0FISUFFZ0FSQkNJQVZxRUtRRElBUWdBU2dDQUd0QkFuVWdBQkM0QWlFR0l3QkJJR3NpQWlRQUlBSWdERFlDR0NBQ1FRaHFJQVpCQ0dvZ0RDQU9FUElGRUt3RElRTURRQ0FES0FJQUlBTW9BZ1JIQkVBZ0JpZ0NFQ0FES0FJQUlBSkJHR29pQUNnQ0FCRHZBU0FESUFNb0FnQkJCR28yQWdBZ0FCQ0lBZ3dCQ3dzZ0F4Q3BBU0FDUVNCcUpBQWdBUkR1QWlBR0tBSUVJUUFnQVJBeUlBRW9BZ0FnQkNBR1FRUnFJZ2dRbFFJZ0FSQXlJUU1nQVNnQ0JDRUNJQVpCQ0dvaENRTkFJQUlnQkVjRVFDQURJQWtvQWdBZ0JCRHZBU0FKSUFrb0FnQkJCR28yQWdBZ0JFRUVhaUVFREFFTEN5QUJJQWdRUlNBQlFRUnFJQWtRUlNBQkVESWdCaEE4RUVVZ0JpQUdLQUlFTmdJQUlBRWdBUkJDRUxRQ0lBQWhCQ0FHRUxjQ0N5QUVFSmtFR2lBSFFTQnFKQUFNQVFzZ0QwRUlhaEJLSVFzakFFRWdheUlPSkFCQmZ5RUpRWDhoRFNBQ1FlZ0FhaUlNRUVJaEJpTUFRUkJySWdna0FDQU9RUkJxSWdkQ0FEY0NBQ0FJUVFBMkFnd2dCMEVJYWhDbEFpQUdCRUFnQnhEaUFpQUdTUVJBRUs4Q0FBc2dCeUFIRURJZ0JoQ1VCQ0lDTmdJQUlBY2dBallDQkNBSEVESWdBaUFHUVFOMGFqWUNBQ0FIUVFBUXB3TWdCeUFHRUlrRUN5QUlRUkJxSkFBQ1FBTkFJQWNRUVNBRVRRUkFJQTFCZjBjRVFDQUxJQXdnRFJBNkVLZ0NRUUFoQkFOQUlBY1FRU0FFVFEwRUFrQWdCQ0FOUmcwQUlBY2dCQkJRS0FJRUlBY2dEUkJRS0FJRVJnUkFJQXNnRENBRUVEb1FxQUlNQVFzZ0J5QUVFRkFoQ0FKQUlBRW9BZ1FnQVJBeUtBSUFSd1JBSUFFZ0NCQ3dBd3dCQ3lNQVFTQnJJZ2trQUNBQkVESWlBaUFKUVFocUlBRWdBUkJCUVFGcUVJZ0VJQUVRUVNBQ0VPTUNJZ29vQWdnZ0NCRGtBaUFLSUFvb0FnaEJDR28yQWdnZ0FSRG9BaUFCRURJaENDQUJLQUlBSVFJZ0FTZ0NCQ0VHSUFwQkJHb2hCUU5BSUFJZ0JrY0VRQ0FJSUFVb0FnQkJDR3NnQmtFSWF5SUdFT1FDSUFVZ0JTZ0NBRUVJYXpZQ0FBd0JDd3NnQVNBRkVFVWdBVUVFYWlBS1FRaHFFRVVnQVJBeUlBb1FQQkJGSUFvZ0NpZ0NCRFlDQUNBQklBRVFRUkNuQXlBS0tBSUVJUUlEUUNBQ0lBb29BZ2hIQkVBZ0NpZ0NFQm9nQ2lBS0tBSUlRUWhyTmdJSURBRUxDeUFLS0FJQUJFQWdDaWdDRUJvZ0NpZ0NBQ0VDSUFvUXdBWWFJQUlRTVFzZ0NVRWdhaVFBQ3lBQkVMa0NJUWtnQVJEcUFpRUlJd0JCSUdzaUJpUUFJQVlnQ0RZQ0VDQUdJQWsyQWhnZ0JrRVFhaUFHUVJocUVLWURJUUlqQUVFZ2F5SUZKQUFnQlNBSU5nSVFJQVVnQ1RZQ0dBSkFJQUpCQWtnTkFDQUZJQVZCR0dvZ0FrRUNhMEVCZGlJQ0VQRUJOZ0lJSUFVb0FnZ2dCVUVRYWhEUEFTZ0NBQkNtQWtVTkFDQUZJQVVvQWhBcEFnQTNBd0FEUUFKQUlBVW9BaEFnQlNnQ0NDa0NBRGNDQUNBRklBVW9BZ2cyQWhBZ0FrVU5BQ0FGSUFWQkdHb2dBa0VCYTBFQ2JTSUNFUEVCTmdJSUlBVW9BZ2dnQlJDbUFnMEJDd3NnQlNnQ0VDQUZLUU1BTndJQUN5QUZRU0JxSkFBZ0JrRWdhaVFBQ3lBRVFRRnFJUVFNQUFzQUN3VWdEQ0FFRURvb0FnQkJCR29nQXhDaUF5RUlJQTVCQ0dvZ0RDQUVFRG9vQWdBZ0NCRHVBU0VDSUFjZ0JCQlFJQUlwQXdBM0FnQWdDQ0FKSUFnZ0NVa2lBaHNoQ1NBRUlBMGdBaHNoRFNBRVFRRnFJUVFNQVFzTFFiQ2xCRUdIcmdFUU1FSGIrUUFRTUVINnhBQVFNRUdiQVJBelFmSEtBQkF3UVlxdkFSQXdFRFFRQUFBTElBY1FrZ1lnRGtFZ2FpUUFRUUFoQWdOQUlBc1FRaUFDVFFSQUFrQWdBQ2dDWkNBQUtBSm9UZzBBSUFFUTh3VU5BQ0FCS0FJQUtBSUFJUUlnQVJEMUJTQUFJQUFvQW1SQkFXbzJBbVFnQUNBQklBSWdBeEQyQXdzZ0N4QnlCU0FBSUFFZ0N5QUNFRG9vQWdBZ0F4RDJBeUFDUVFGcUlRSU1BUXNMQ3lBUFFTQnFKQUFMV1FFQmZTQUFJQUlxQWdnZ0Fpb0NBQ0FEbENBQ0tnSUVJQVNVa3BJZ0Fpb0NJQ0FDS2dJWUlBT1VJQUlxQWh3Z0JKU1NraUlGbFRnQ0FDQUJJQUlxQWhRZ0Fpb0NEQ0FEbENBQ0tnSVFJQVNVa3BJZ0JaVTRBZ0FMb3dFQkJYOUJpQUVRTnlJQkJFQURRRUVBSVFNZ0FrRURSa1VFUUFOQUlBTkJCRVpGQkVBZ0EwRURkQ0lFSUFFZ0FrRUZkQ0lGYW1vZ0FDQUZhaUFFYWlzREFEa0RBQ0FEUVFGcUlRTU1BUXNMSUFKQkFXb2hBZ3dCQ3dzZ0FVS0FnSUNBZ0lDQThEODNBNEFCSUFGQ2dJQ0FnSUNBZ0lqQUFEY0RlQ0FCUW9DQWdJREl3dXYzUHpjRGNDQUJRb0NBZ0lDYXMrYmNQemNEYUNBQlFRbzJBbUFMSUFFTGRBRUNmeU1BUVJCcklnSWtBQ0FBUWdBM0FnQWdBa0VBTmdJTUlBQkJDR29RcFFJZ0FRUkFJQUFRNWdJZ0FVa0VRQkNTQWdBTElBQWdBQkF5SUFFUXRRSWlBellDQUNBQUlBTTJBZ1FnQUJBeUlBTWdBVUVDZEdvMkFnQWdBRUVBRUxRQ0lBQWdBUkN1QXdzZ0FrRVFhaVFBSUFBTEN3QWdBQ0FCUVNRUVBob0xDZ0FnQVNBQWEwRU1iUXRZQVFKL0lBSkJBQ0FDUVFCS0d5RUNBMEFnQWlBRVJ3UkFJQU1nQXlnQ0FFSDlodzFzUWNPOW1nRnFJZ1UyQWdBZ0FDQUVRUUowYWlBQUlBVkJFSFpCLy84QmNTQUJiMEVDZEdvUVJTQUVRUUZxSVFRTUFRc0xDNjBDQVFSL0lBRWdBQkJDSWdOTEJFQWpBRUVnYXlJR0pBQUNRQ0FCSUFOcklnRWdBQkF5S0FJQUlBQW9BZ1JyUVFKMVRRUkFJd0JCRUdzaUJDUUFJQVFnQUNBQkVMWUNJZ01vQWdRaEFTQURLQUlJSVFVRFFDQUJJQVZHQkVBZ0F4QnJJQVJCRUdva0FBVWdBQkF5SUFFZ0FoRHZBU0FESUFGQkJHb2lBVFlDQkF3QkN3c01BUXNnQUJBeUlRTWdCa0VJYWlBQUlBQVFRaUFCYWhDa0F5QUFFRUlnQXhDNEFpRURJd0JCRUdzaUJDUUFJQVFnQTBFSWFpQUJFS3dESWdFb0FnQWhCUU5BSUFFb0FnUWdCVWNFUUNBREtBSVFJQUVvQWdBZ0FoRHZBU0FCSUFFb0FnQkJCR29pQlRZQ0FBd0JDd3NnQVJDcEFTQUVRUkJxSkFBZ0FDQURFT2NDSUFNUXR3SUxJQVpCSUdva0FBOExJQUVnQTBrRVFDQUFJQUFvQWdBZ0FVRUNkR29RcEFRTEN3MEFJQUFvQWdBYUlBQVFnUVlMU0FFQ2Z5TUFRUkJySWdFa0FDTUFRUkJySWdJa0FDQUNRUWhxSUFCQkNHb29BZ0FRZVNnQ0FDRUFJQUpCRUdva0FDQUJRUWhxSUFBUWVTZ0NBQ0VBSUFGQkVHb2tBQ0FBQ3hNQUlBQWdBQ2dDQUVFQmF5SUFOZ0lBSUFBTEdBRUJmeU1BUVJCcklnRWtBQ0FBRURFZ0FVRVFhaVFBQzJBQ0EzOEJmQ0FBS0FJRUlnSWdBU2dDQkVZRVFDQUNRUUFnQWtFQVNoc2hBZ05BSUFJZ0EwWkZCRUFnQTBFRGRDSUVJQUFvQWdCcUt3TUFJQUVvQWdBZ0JHb3JBd0NpSUFXZ0lRVWdBMEVCYWlFRERBRUxDeUFGRHd0QkFCQUNBQXNaQUNBQUVKUUdJZ0JCQURZQ0NDQUFRWURaQXpZQ0FDQUFDeFFBSUFBZ0FSQkZJQUJCQkdvZ0FVRUVhaEJGQ3djQUlBQkJQR29MTkFFQ2YwRUlFRGNpQVFSL0lBRWdBRUVEZEJBM0lnSTJBZ0FnQWtVRVFDQUJFREZCQUE4TElBRWdBRFlDQkNBQkJVRUFDd3NrQVFKL0l3QkJFR3NpQUNRQUlBQkJDR3BCQUJCNUtBSUFJUUVnQUVFUWFpUUFJQUVMV2dFQ2Z5TUFRUkJySWdJa0FDQUNJQUUyQWd3Z0FTQUFFT0lDSWdOTkJFQWdBQkRGQVNJQUlBTkJBWFpKQkVBZ0FpQUFRUUYwTmdJSUlBSkJDR29nQWtFTWFoQnVLQUlBSVFNTElBSkJFR29rQUNBRER3c1Fyd0lBQzFNQkEzOGpBRUVRYXlJREpBQWdBeUFBSUFFUXdRWWlBaWdDQkNFQklBSW9BZ2doQkFOQUlBRWdCRVlFUUNBQ0VHc2dBMEVRYWlRQUJTQUFFRElhSUFFUW5RWWdBaUFCUVFocUlnRTJBZ1FNQVFzTEN3a0FJQUFnQVJDakJnczhBUUovSXdCQkVHc2lBU1FBSUFGQkNHb2lBaUFBS0FJQUtBSUFRVUJyRUkwRUdpQUNLQUlBRURJUVd5RUFJQUlRemdFZ0FVRVFhaVFBSUFBTEdRRUJmeUFBRUk0QklRSWdBQ0FCRUpBRklBQWdBaENnQmdza0FDQUFJQUVvQWdBMkFnQWdBQ0FCS0FJRUlnRTJBZ1FnQVFSQUlBRVFvUU1MSUFBTEhRRUJmeU1BUVJCcklnRWtBQ0FBRU9rQklRQWdBVUVRYWlRQUlBQUxEUUFnQUVHNDRBTTJBZ0FnQUFzVkFDQUFRZkRJQVRZQ0FDQUFRUVJxRUtJRUlBQUxVZ0VDZnlBQVFZREpBVFlDQUNBQVFUaHFFSElnQUVFc2FoQnlJQUJCSUdvaUFSQzhCaUFCS0FJQUJFQWdBU0FCS0FJQUVMZ0dJQUVRTWhvZ0FTZ0NBQ0VDSUFFUWtBSWFJQUlRTVFzZ0FCQ1FCQXNUQUNBQ0lBV2lJQUFnQTZJZ0FTQUVvcUNnQ3hRQUlBSWdBcUlnQUNBQW9pQUJJQUdpb0tDZkN4a0FJQUZCLy8vLy93RkxCRUFRK0FFQUN5QUJRUU4wRUZjTERRQWdBQ0FDbENBQklBR1Vrd3RvQVFKL0l3QkJFR3NpQWlRQUlBQkNBRGNDQUNBQ1FRQTJBZ3dnQVJBeUdpQUFRUWhxRU9rQkdpQUFJQUVvQWdBMkFnQWdBQ0FCS0FJRU5nSUVJQUVRTWlnQ0FDRURJQUFRTWlBRE5nSUFJQUVRTWtFQU5nSUFJQUZDQURjQ0FDQUNRUkJxSkFBZ0FBdVJBZ0lNZndGOFFYOGhDZ0pBSUFFb0FnZ2lCaUFDS0FJRVJ3MEFJQUFvQWdRaUF5QUJLQUlFUncwQUlBQW9BZ2dpQnlBQ0tBSUlSdzBBUVFBaENpQURRUUFnQTBFQVNoc2hDeUFIUVFBZ0IwRUFTaHNoRENBR1FRQWdCa0VBU2hzaERTQUFLQUlBSVFNRFFDQUVJQXRHRFFFZ0JDQUdiQ0VPUVFBaEJRTkFJQVVnREVaRkJFQWdBMElBTndNQUlBSW9BZ0FnQlVFRGRHb2hDQ0FCS0FJQUlBNUJBM1JxSVFsQkFDRUFSQUFBQUFBQUFBQUFJUThEUUNBQUlBMUdSUVJBSUFNZ0NTc0RBQ0FJS3dNQW9pQVBvQ0lQT1FNQUlBQkJBV29oQUNBSlFRaHFJUWtnQ0NBSFFRTjBhaUVJREFFTEN5QUZRUUZxSVFVZ0EwRUlhaUVEREFFTEN5QUVRUUZxSVFRTUFBc0FDeUFLQzhrQ0FnSi9BWDBDUUFKQUlBWkJBRXdOQUNBRktBSUVJQVpCQVdwTkRRQWdCMEVBVEEwQklBZEJBV29pQ0NBRktBSUlUdzBCSUFVZ0IwRUJheEJMSVFrZ0JTQUhFRXNoQnlBRklBZ1FTeUVJSUFBZ0J5QUdRUUowSWdWcUlnQXFBZ1FnQUVFRWF5SUdLZ0lBazBNQUFBQS9sRGdDQUNBQklBVWdDR29pQVNvQ0FDQUZJQWxxSWdVcUFnQ1RRd0FBQUQrVU9BSUFJQUlnQmlvQ0FDQUFLZ0lBSWdvZ0NwS1RJQUFxQWdTU09BSUFJQU1nQlNvQ0FDQUFLZ0lBSWdvZ0NwS1RJQUVxQWdDU09BSUFJQVFnQlVFRWF5b0NBQ0FCS2dJRWtpQUZLZ0lFSUFGQkJHc3FBZ0NTazBNQUFJQStsRGdDQUE4TFFiQ2xCRUgwdGdFUU1FSDZxQUVRTUVHeEdSQXdRWndDRUROQjJoMFFNRUhQc1FFUU1CQTBFQUFBQzBHd3BRUkIwYmNCRURCQitxZ0JFREJCc1JrUU1FR2RBaEF6UWRvZEVEQkJoTE1CRURBUU5CQUFBQXNrQVFGL0l3QkJFR3NpQVNRQUlBRkJDR29nQUJCNUtBSUFJUUFnQVVFUWFpUUFJQUFMS3dBZ0FDZ0NBQm9nQUNnQ0FDQUFFTVVCUVFOMGFob2dBQ2dDQUJvZ0FDZ0NBQ0FBRUVGQkEzUnFHZ3NKQUNBQVFTUVF1Z01MbmdFQkJIOGdBQkRqQmlBQUVESWFJQUZCQkdvaUF5SUNJQUlvQWdBZ0FDZ0NCQ0FBS0FJQUlnUnJJZ0pCWEcxQkpHeHFJZ1UyQWdBZ0FrRUFTZ1JBSUFVZ0JDQUNFRDRhQ3lBQUlBTVFSU0FBUVFScUlBRkJDR29RUlNBQUVESWdBUkE4RUVVZ0FTQUJLQUlFTmdJQUlBQVFnUUVhSUFBb0FnQWFJQUFvQWdBZ0FCRHlBVUVrYkdvYUlBQW9BZ0FnQUJEeUFVRWtiR29hSUFBb0FnQWFDM1lCQW44akFFRVFheUlGSkFBZ0JVRUFOZ0lNSUFCQkRHb2dBeERRQVNBQkJFQWdBQ2dDRUJvZ0FVSEg0L0U0U3dSQUVQZ0JBQXNnQVVFa2JCQlhJUVFMSUFBZ0JEWUNBQ0FBSUFRZ0FrRWtiR29pQWpZQ0NDQUFJQUkyQWdRZ0FCQThJQVFnQVVFa2JHbzJBZ0FnQlVFUWFpUUFJQUFMT0FFQmZTQUFJQUpEQUFDQVAwRUJJQVIwc3BVaUFwUWdBa01BQUFBL2xFTUFBQUMva2lJRmtqZ0NBQ0FCSUFNZ0FwUWdCWkk0QWdBTENBQWdBQ0FCRUVrTEZ3RUJmeUFBRUlFQklRRWdBQkRpQmlBQUlBRVE0QVlMQkFCQkFRc3hBUUYvSUFBUTJBWWdBQ2dDQUFSQUlBQWdBQ2dDQUJEWEJpQUFFRElhSUFBb0FnQWhBU0FBRUpFQ0dpQUJFREVMQ3l3QkFYOGdBQkRqQmlBQUtBSUFCRUFnQUJEaUJpQUFFRElhSUFBb0FnQWhBU0FBRVBJQkdpQUJFREVMQ3hnQkFYOGdBQkJDSVFJZ0FDQUJFTThHSUFBZ0FoQ3RBd3RVQVFKL0l3QkJJR3NpQWlRQUFrQWdBQkR5QVNBQlNRUkFJQUFRMndZZ0FVa05BU0FBRURJaEF5QUFJQUpCQ0dvZ0FTQUFFSUVCSUFNUW5RUWlBQkNjQkNBQUVKc0VDeUFDUVNCcUpBQVBDeENTQWdBTDVBY0JCMzhnQVNBQUVLTUJJZ0pMQkVBakFFRWdheUlJSkFBQ1FDQUJJQUpySWdVZ0FCQXlLQUlBSUFBb0FnUnJRUVYxVFFSQUl3QkJFR3NpQXlRQUlBTWdBRFlDQUNBRElBQW9BZ1FpQVRZQ0JDQURJQUVnQlVFRmRHbzJBZ2dnQXlnQ0JDRUNJQU1vQWdnaEFRTkFJQUVnQWtZRVFDQURFR3NnQTBFUWFpUUFCU0FBRURJYUlBSVExUVlnQXlBQ1FTQnFJZ0kyQWdRTUFRc0xEQUVMSUFBUU1pRUhJQWhCQ0dvaEFnSi9JQUFRb3dFZ0JXb2hBeU1BUVJCcklnWWtBQ0FHSUFNMkFnd2pBRUVRYXlJRUpBQWdBQkF5R2lBRVFmLy8vejgyQWd3Z0JFSC8vLy8vQnpZQ0NDQUVRUXhxSUFSQkNHb1FsZ0lvQWdBaEFTQUVRUkJxSkFBZ0FTQURUd1JBSUFBUWtRSWlBeUFCUVFGMlNRUkFJQVlnQTBFQmREWUNDQ0FHUVFocUlBWkJER29RYmlnQ0FDRUJDeUFHUVJCcUpBQWdBUXdCQ3hDU0FnQUxJUVlnQUJDakFTRURRUUFoQVNNQVFSQnJJZ1FrQUNBRVFRQTJBZ3dnQWtFTWFpQUhFTkFCSUFZRVFDQUNLQUlRR2lBR1FmLy8vejlMQkVBUStBRUFDeUFHUVFWMEVGY2hBUXNnQWlBQk5nSUFJQUlnQVNBRFFRVjBhaUlETmdJSUlBSWdBellDQkNBQ0VEd2dBU0FHUVFWMGFqWUNBQ0FFUVJCcUpBQWpBRUVRYXlJREpBQWdBeUFDS0FJSU5nSUFJQUlvQWdnaEFTQURJQUpCQ0dvMkFnZ2dBeUFCSUFWQkJYUnFOZ0lFSUFNb0FnQWhCUU5BSUFNb0FnUWdCVWNFUUNBQ0tBSVFHaUFES0FJQUVOVUdJQU1nQXlnQ0FFRWdhaUlGTmdJQURBRUxDeUFERUtrQklBTkJFR29rQUNBQUVOZ0dJQUFRTWhvZ0FDZ0NBQ0VESUFBb0FnUWhCU0FDUVFScUlRY0RRQ0FESUFWSEJFQWdCeWdDQUVFZ2F5SUVRZ0EzQWdBZ0JFSUFOd0lRSUFSQ0FEY0NDQ0FFUVJocUlnRVFzZ0lhSUFRZ0JVRWdheUlGS0FJQU5nSUFJQVFnQlNnQ0JEWUNCQ0FFSUFVb0FnZzJBZ2dnQkNBRktBSU1OZ0lNSUFRZ0JTZ0NFRFlDRUNBRUlBVW9BaFEyQWhRZ0FTQUZRUmhxRUtvR0lBY2dCeWdDQUVFZ2F6WUNBQXdCQ3dzZ0FDQUhFRVVnQUVFRWFpQUNRUWhxRUVVZ0FCQXlJQUlRUEJCRklBSWdBaWdDQkRZQ0FDQUFFS01CR2lBQUtBSUFHaUFBS0FJQUlBQVFrUUpCQlhScUdpQUFLQUlBSUFBUWtRSkJCWFJxR2lBQUtBSUFHaUFDS0FJRUlRRURRQ0FCSUFJb0FnaEhCRUFnQWlnQ0VCb2dBaUFDS0FJSVFTQnJJZ0EyQWdnZ0FCQ2JBd3dCQ3dzZ0FpZ0NBQVJBSUFJb0FoQWFJQUlvQWdBaEFDQUNFRHdvQWdBZ0FpZ0NBR3NhSUFBUU1Rc0xJQWhCSUdva0FBOExJQUVnQWtrRVFDQUFLQUlBSUFGQkJYUnFJUUVnQUJDakFSb2dBQ0FCRU5jR0lBQW9BZ0FhSUFBb0FnQWdBQkNSQWtFRmRHb2FJQUFvQWdBYUlBQW9BZ0FnQUJDakFVRUZkR29hQ3dzSkFDQUFRUUVRdWdNTFVRRUJmeUFBRUxFRklBQVFNaUFBS0FJQUlBQW9BZ1FnQVVFRWFpSUNFSlVDSUFBZ0FoQkZJQUJCQkdvZ0FVRUlhaEJGSUFBUU1pQUJFRHdRUlNBQklBRW9BZ1EyQWdBZ0FDQUFFSTRCRU9rR0M0a0JBUVYvQTBBZ0JrRURSd1JBSUFBZ0JrRUVkQ0lIYWlFRVFRQWhBd05BSUFOQkJFY0VRQ0FEUVFKMElnVWdBaUFIYW1vZ0JDb0NDQ0FCSUFWcUlnVXFBaUNVSUFRcUFnQWdCU29DQUpRZ0JDb0NCQ0FGS2dJUWxKS1NPQUlBSUFOQkFXb2hBd3dCQ3dzZ0FpQUhhaUlESUFRcUFnd2dBeW9DREpJNEFnd2dCa0VCYWlFR0RBRUxDd3RlQVFKL0l3QkJFR3NpQlNRQUlBVkJBRFlDRENBQVFReHFJQU1RMEFFZ0FRUkFJQUFvQWhBYUlBRVFWeUVFQ3lBQUlBUTJBZ0FnQUNBQ0lBUnFJZ0kyQWdnZ0FDQUNOZ0lFSUFBUVBDQUJJQVJxTmdJQUlBVkJFR29rQUNBQUN5UUFJQUFnQVRZQ0FDQUFJQUVvQWdRaUFUWUNCQ0FBSUFFZ0FpQURkR28yQWdnZ0FBc2tBQ0FBSUFFMkFnQWdBQ0FCS0FJRUlnRTJBZ1FnQUNBQklBSWdBMnhxTmdJSUlBQUxRUUVCZnlNQVFSQnJJZ1lrQUNBR0lBQVFQVFlDQUNBR0lBRTJBZ3dnQmlBRktBSUFOZ0lFSUFZZ0JDZ0NBRFlDQ0NBRElBSWdCaEFJR2lBR1FSQnFKQUFMREFBZ0FCRDVCaG9nQUJBeEMwc0JBbjhnQUNnQ0JDSUhRUWgxSVFZZ0IwRUJjUVJBSUFNb0FnQWdCaEN6QkNFR0N5QUFLQUlBSWdBZ0FTQUNJQU1nQm1vZ0JFRUNJQWRCQW5FYklBVWdBQ2dDQUNnQ0ZCRUxBQXNnQUFKQUlBQW9BZ1FnQVVjTkFDQUFLQUljUVFGR0RRQWdBQ0FDTmdJY0N3dWFBUUFnQUVFQk9nQTFBa0FnQUNnQ0JDQUNSdzBBSUFCQkFUb0FOQUpBSUFBb0FoQWlBa1VFUUNBQVFRRTJBaVFnQUNBRE5nSVlJQUFnQVRZQ0VDQURRUUZIRFFJZ0FDZ0NNRUVCUmcwQkRBSUxJQUVnQWtZRVFDQUFLQUlZSWdKQkFrWUVRQ0FBSUFNMkFoZ2dBeUVDQ3lBQUtBSXdRUUZIRFFJZ0FrRUJSZzBCREFJTElBQWdBQ2dDSkVFQmFqWUNKQXNnQUVFQk9nQTJDd3NaQUNBQlFjeVpzK1lBU3dSQUVQZ0JBQXNnQVVFVWJCQlhDd29BSUFBZ0FXb29BZ0FMWFFFQmZ5QUFLQUlRSWdORkJFQWdBRUVCTmdJa0lBQWdBallDR0NBQUlBRTJBaEFQQ3dKQUlBRWdBMFlFUUNBQUtBSVlRUUpIRFFFZ0FDQUNOZ0lZRHdzZ0FFRUJPZ0EySUFCQkFqWUNHQ0FBSUFBb0FpUkJBV28yQWlRTEM2c0JBUUovSXdCQkVHc2lBeVFBSUFNZ0FUWUNEQUpBQWtBQ1FDQUFFSkVCUlFSQVFRRWhBaUFBTFFBTElnRkJBVVlOQVNBQUlnSWdBVUVCYWhDU0FRd0RDeUFBRU9RQklRSWdBQ2dDQkNJQklBSkJBV3NpQWtjTkFRc2dBQ0FDUVFFZ0FpQUNFUDBHSUFJaEFRc2dBQ2dDQUNFQ0lBQWdBVUVCYWhDSkFRc2dBaUFCUVFKMGFpSUFJQU5CREdvUXF3RWdBMEVBTmdJSUlBQkJCR29nQTBFSWFoQ3JBU0FEUVJCcUpBQUxxQUVCQW44akFFRVFheUlESkFBZ0F5QUJPZ0FQQWtBQ1FBSkFJQUFRa1FGRkJFQkJDaUVDSUFBdEFBc2lBVUVLUmcwQklBQWlBaUFCUVFGcUVKSUJEQU1MSUFBUTVBRWhBaUFBS0FJRUlnRWdBa0VCYXlJQ1J3MEJDeUFBSUFKQkFTQUNJQUlRdHdRZ0FpRUJDeUFBS0FJQUlRSWdBQ0FCUVFGcUVJa0JDeUFCSUFKcUlnQWdBMEVQYWhDTEFTQURRUUE2QUE0Z0FFRUJhaUFEUVE1cUVJc0JJQU5CRUdva0FBdXVBUUVEZnlNQVFSQnJJZ1VrQUNBQ1FXOGdBV3ROQkVBZ0FCQTlJUVlDZnlBQlFlZi8vLzhIU1FSQUlBVWdBVUVCZERZQ0NDQUZJQUVnQW1vMkFnd2dCVUVNYWlBRlFRaHFFRzRvQWdBUW13SU1BUXRCYmd0QkFXb2lCeEJYSVFJZ0JBUkFJQUlnQmlBRUVMUUJDeUFESUFSSEJFQWdBaUFFYWlBRUlBWnFJQU1nQkdzUXRBRUxJQUZCQ2tjRVFDQUdFREVMSUFBZ0FoQ1lBU0FBSUFjUXNRRWdCVUVRYWlRQUR3c1FzQUVBQ3cwQUlBQWdBU0FDUW44UXlBUUxGd0FnQUNnQ0NCQlpSd1JBSUFBb0FnZ1F6QVFMSUFBTFdnRUNmeU1BUVJCcklnSWtBQ0FDSUFFMkFnd2dBU0FBRUlzSElnTk5CRUFnQUJEWEFTSUFJQU5CQVhaSkJFQWdBaUFBUVFGME5nSUlJQUpCQ0dvZ0FrRU1haEJ1S0FJQUlRTUxJQUpCRUdva0FDQUREd3NRdXdJQUN6b0JBWDhqQUVFUWF5SURKQUFnQXlBQ05nSU1JQU5CQ0dvZ0EwRU1haERJQVNFQ0lBQWdBUkRjQXlFQUlBSVF4d0VnQTBFUWFpUUFJQUFMRFFBZ0FDQUJJQUpCRkJDc0JBc1RBQ0FBSUFFb0FnQWlBRFlDQUNBQUVLRURDeHNCQVg5QkFTRUJJQUFRa1FFRWZ5QUFFT1FCUVFGckJVRUJDd3N4QUNBQ0tBSUFJUUlEUUFKQUlBQWdBVWNFZnlBQUtBSUFJQUpIRFFFZ0FBVWdBUXNQQ3lBQVFRUnFJUUFNQUFzQUMva0RBUUYvSXdCQkVHc2lEQ1FBSUF3Z0FEWUNEQUpBQWtBZ0FDQUZSZ1JBSUFFdEFBQkZEUUZCQUNFQUlBRkJBRG9BQUNBRUlBUW9BZ0FpQVVFQmFqWUNBQ0FCUVM0NkFBQWdCeEExUlEwQ0lBa29BZ0FpQVNBSWEwR2ZBVW9OQWlBS0tBSUFJUUlnQ1NBQlFRUnFOZ0lBSUFFZ0FqWUNBQXdDQ3dKQUlBQWdCa2NOQUNBSEVEVkZEUUFnQVMwQUFFVU5BVUVBSVFBZ0NTZ0NBQ0lCSUFoclFaOEJTZzBDSUFvb0FnQWhBQ0FKSUFGQkJHbzJBZ0FnQVNBQU5nSUFRUUFoQUNBS1FRQTJBZ0FNQWd0QmZ5RUFJQXNnQzBHQUFXb2dERUVNYWhDL0JDQUxheUlGUWZ3QVNnMEJJQVZCQW5WQjRLSURhaTBBQUNFR0FrQUNRQ0FGUVh0eElnQkIyQUJIQkVBZ0FFSGdBRWNOQVNBRElBUW9BZ0FpQVVjRVFFRi9JUUFnQVVFQmF5MEFBRUhmQUhFZ0FpMEFBRUgvQUhGSERRVUxJQVFnQVVFQmFqWUNBQ0FCSUFZNkFBQkJBQ0VBREFRTElBSkIwQUE2QUFBTUFRc2dCa0hmQUhFaUFDQUNMUUFBUncwQUlBSWdBRUdBQVhJNkFBQWdBUzBBQUVVTkFDQUJRUUE2QUFBZ0J4QTFSUTBBSUFrb0FnQWlBQ0FJYTBHZkFVb05BQ0FLS0FJQUlRRWdDU0FBUVFScU5nSUFJQUFnQVRZQ0FBc2dCQ0FFS0FJQUlnQkJBV28yQWdBZ0FDQUdPZ0FBUVFBaEFDQUZRZFFBU2cwQklBb2dDaWdDQUVFQmFqWUNBQXdCQzBGL0lRQUxJQXhCRUdva0FDQUFDMVVCQW44akFFRVFheUlHSkFBZ0JrRUlhaUlGSUFFUVRDQUZFSlFCUWVDaUEwR0Fvd01nQWhEakFTQURJQVVReFFJaUFSQzZBVFlDQUNBRUlBRVFtd0UyQWdBZ0FDQUJFSm9CSUFVUVJpQUdRUkJxSkFBTE1RQWdBaTBBQUNFQ0EwQUNRQ0FBSUFGSEJIOGdBQzBBQUNBQ1J3MEJJQUFGSUFFTER3c2dBRUVCYWlFQURBQUxBQXZ0QXdFQmZ5TUFRUkJySWd3a0FDQU1JQUE2QUE4Q1FBSkFJQUFnQlVZRVFDQUJMUUFBUlEwQlFRQWhBQ0FCUVFBNkFBQWdCQ0FFS0FJQUlnRkJBV28yQWdBZ0FVRXVPZ0FBSUFjUU5VVU5BaUFKS0FJQUlnRWdDR3RCbndGS0RRSWdDaWdDQUNFQ0lBa2dBVUVFYWpZQ0FDQUJJQUkyQWdBTUFnc0NRQ0FBSUFaSERRQWdCeEExUlEwQUlBRXRBQUJGRFFGQkFDRUFJQWtvQWdBaUFTQUlhMEdmQVVvTkFpQUtLQUlBSVFBZ0NTQUJRUVJxTmdJQUlBRWdBRFlDQUVFQUlRQWdDa0VBTmdJQURBSUxRWDhoQUNBTElBdEJJR29nREVFUGFoRENCQ0FMYXlJRlFSOUtEUUVnQlVIZ29nTnFMUUFBSVFZQ1FBSkFBa0FDUUNBRlFYNXhRUlpyRGdNQkFnQUNDeUFESUFRb0FnQWlBVWNFUUNBQlFRRnJMUUFBUWQ4QWNTQUNMUUFBUWY4QWNVY05CUXNnQkNBQlFRRnFOZ0lBSUFFZ0Jqb0FBRUVBSVFBTUJBc2dBa0hRQURvQUFBd0JDeUFHUWQ4QWNTSUFJQUl0QUFCSERRQWdBaUFBUVlBQmNqb0FBQ0FCTFFBQVJRMEFJQUZCQURvQUFDQUhFRFZGRFFBZ0NTZ0NBQ0lBSUFoclFaOEJTZzBBSUFvb0FnQWhBU0FKSUFCQkJHbzJBZ0FnQUNBQk5nSUFDeUFFSUFRb0FnQWlBRUVCYWpZQ0FDQUFJQVk2QUFCQkFDRUFJQVZCRlVvTkFTQUtJQW9vQWdCQkFXbzJBZ0FNQVF0QmZ5RUFDeUFNUVJCcUpBQWdBQXRWQVFKL0l3QkJFR3NpQmlRQUlBWkJDR29pQlNBQkVFd2dCUkNaQVVIZ29nTkJnS01ESUFJUS9RRWdBeUFGRU1jQ0lnRVF1Z0U2QUFBZ0JDQUJFSnNCT2dBQUlBQWdBUkNhQVNBRkVFWWdCa0VRYWlRQUN4b0FJQUFnQVNBQktBSUFRUXhyS0FJQWFpZ0NHRFlDQUNBQUMrUUdBUVYvSXdCQkVHc2lBU1FBQWtBZ0FVRU1haUFCUVFocUVDQU5BRUhJakFRZ0FTZ0NERUVDZEVFRWFoQTNJZ0EyQWdBZ0FFVU5BQ0FCS0FJSUVEY2lBQVJBUWNpTUJDZ0NBQ0FCS0FJTVFRSjBha0VBTmdJQVFjaU1CQ2dDQUNBQUVCOUZEUUVMUWNpTUJFRUFOZ0lBQ3lBQlFSQnFKQUJCNWFvRUxRQUFSUVJBUWZTRkF5Z0NBQ0lESVFBakFFRVFheUlCSkFCQmhLZ0VFUE1FSWdKQnZLZ0VOZ0lvSUFJZ0FEWUNJQ0FDUVlDR0F6WUNBQ0FDUVFBNkFEUWdBa0YvTmdJd0lBRkJDR29pQUNBQ0VQNENJQUlnQUNBQ0tBSUFLQUlJRVFJQUlBQVFSaUFCUVJCcUpBQkI0S0lFRUlJRklRQkIyS0lFUWF6L0FqWUNBQ0FBUWNEL0FqWUNBRUhjb2dSQkFEWUNBQ0FBUVlTb0JCRDNBa0hFcUFSQjVPRUNLQUlBSWdGQjlLZ0VFTm9FUVlpa0JFSEVxQVFRelFOQi9LZ0VRZURoQWlnQ0FDSUFRYXlwQkJEYUJFR3dwUVJCL0tnRUVNMERRZGltQkVHd3BRUW9BZ0JCREdzb0FnQkJzS1VFYWlnQ0dCRE5BMEhZb2dRb0FnQkJER3NvQWdCQjJLSUVha0dJcEFRUStRSkJzS1VFS0FJQVFReHJLQUlBUWJDbEJHb1EyQVJCc0tVRUtBSUFRUXhyS0FJQVFiQ2xCR3BCaUtRRUVQa0NJd0JCRUdzaUFpUUFRYlNwQkJEbEJDSUVRZXlwQkRZQ0tDQUVJQU0yQWlBZ0JFSE1od00yQWdBZ0JFRUFPZ0EwSUFSQmZ6WUNNQ0FDUVFocUlnTWdCQkQrQWlBRUlBTWdCQ2dDQUNnQ0NCRUNBQ0FERUVZZ0FrRVFhaVFBUWJpakJCRFhCQ0VEUWJDakJFSE1nQU0yQWdBZ0EwSGdnQU0yQWdCQnRLTUVRUUEyQWdBZ0EwRzBxUVFROXdKQjlLa0VJQUZCcEtvRUVOa0VRZHlrQkVIMHFRUVF6QU5CcktvRUlBQkIzS29FRU5rRVFZU21CRUdzcWdRUXpBTkJyS2NFUVlTbUJDZ0NBRUVNYXlnQ0FFR0VwZ1JxS0FJWUVNd0RRYkNqQkNnQ0FFRU1heWdDQUVHd293UnFRZHlrQkJENUFrR0VwZ1FvQWdCQkRHc29BZ0JCaEtZRWFoRFlCRUdFcGdRb0FnQkJER3NvQWdCQmhLWUVha0hjcEFRUStRSkI1YW9FUVFFNkFBQUxRWXlMQkJDT0FocEJvSXNFRUk0Q0drR2tqQVJCQURZQ0FFR2dqQVJCSmpZQ0FCRFdCVUdrakFSQnFJd0VLQUlBTmdJQVFhaU1CRUdnakFRMkFnQkJySXdFUWY4Qk5nSUFRYkNNQkVFQU5nSUFFS2NGUWJDTUJFR29qQVFvQWdBMkFnQkJxSXdFUWF5TUJEWUNBRUdRamdSQjdJd0VOZ0lBUWNpTkJFRXFOZ0lBQzVzQkFRUi9Jd0JCRUdzaUJTUUFJQUVnQWhEWkF5SUVRZS8vLy84RFRRUkFBa0FnQkJDOUF3UkFJQUFnQkJDU0FTQUFJUU1NQVFzZ0FDQUFJQVFRdlFKQkFXb2lCaEM4QWlJREVKZ0JJQUFnQmhDeEFTQUFJQVFRaVFFTEEwQWdBU0FDUndSQUlBTWdBUkNyQVNBRFFRUnFJUU1nQVVFRWFpRUJEQUVMQ3lBRlFRQTJBZ3dnQXlBRlFReHFFS3NCSUFWQkVHb2tBQThMRUxBQkFBdVhCQUlIZndSK0l3QkJFR3NpQ0NRQUFrQUNRQUpBSUFKQkpFd0VRQ0FBTFFBQUlnVU5BU0FBSVFRTUFndEJ0SXdFUVJ3MkFnQkNBQ0VEREFJTElBQWhCQUpBQTBBZ0JVRVlkRUVZZFJEbkFVVU5BU0FFTFFBQklRVWdCRUVCYWlFRUlBVU5BQXNNQVFzQ1FDQUVMUUFBSWdWQksyc09Bd0FCQUFFTFFYOUJBQ0FGUVMxR0d5RUhJQVJCQVdvaEJBc0Nmd0pBSUFKQkVISkJFRWNOQUNBRUxRQUFRVEJIRFFCQkFTRUpJQVF0QUFGQjN3RnhRZGdBUmdSQUlBUkJBbW9oQkVFUURBSUxJQVJCQVdvaEJDQUNRUWdnQWhzTUFRc2dBa0VLSUFJYkN5SUtyU0VNUVFBaEFnTkFBa0JCVUNFRkFrQWdCQ3dBQUNJR1FUQnJRZjhCY1VFS1NRMEFRYWwvSVFVZ0JrSGhBR3RCL3dGeFFScEpEUUJCU1NFRklBWkJ3UUJyUWY4QmNVRVpTdzBCQ3lBRklBWnFJZ1lnQ2s0TkFDQUlJQXhDQUNBTFFnQVFnd0ZCQVNFRkFrQWdDQ2tEQ0VJQVVnMEFJQXNnREg0aURTQUdyU0lPUW4rRlZnMEFJQTBnRG53aEMwRUJJUWtnQWlFRkN5QUVRUUZxSVFRZ0JTRUNEQUVMQ3lBQkJFQWdBU0FFSUFBZ0NSczJBZ0FMQWtBQ1FDQUNCRUJCdEl3RVFjUUFOZ0lBSUFkQkFDQURRZ0dESWd4UUd5RUhJQU1oQ3d3QkN5QURJQXRXRFFFZ0EwSUJneUVNQ3lBTXB5QUhja1VFUUVHMGpBUkJ4QUEyQWdBZ0EwSUJmU0VEREFJTElBTWdDMW9OQUVHMGpBUkJ4QUEyQWdBTUFRc2dDeUFIckNJRGhTQURmU0VEQ3lBSVFSQnFKQUFnQXdzeEFRRi9RWkNPQkNnQ0FDRUJJQUFFUUVHUWpnUkI3SXdFSUFBZ0FFRi9SaHMyQWdBTFFYOGdBU0FCUWV5TUJFWWJDNjhJQVFWL0lBRW9BZ0FoQkFKQUFrQUNRQUpBQWtBQ1FBSkFBbjhDUUFKQUFrQUNRQ0FEUlEwQUlBTW9BZ0FpQmtVTkFDQUFSUVJBSUFJaEF3d0RDeUFEUVFBMkFnQWdBaUVEREFFTEFrQkJrSTRFS0FJQUtBSUFSUVJBSUFCRkRRRWdBa1VORENBQ0lRWURRQ0FFTEFBQUlnTUVRQ0FBSUFOQi83OERjVFlDQUNBQVFRUnFJUUFnQkVFQmFpRUVJQVpCQVdzaUJnMEJEQTRMQ3lBQVFRQTJBZ0FnQVVFQU5nSUFJQUlnQm1zUEN5QUNJUU1nQUVVTkF3d0ZDeUFFRUo0QkR3dEJBU0VGREFNTFFRQU1BUXRCQVFzaEJRTkFJQVZGQkVBZ0JDMEFBRUVEZGlJRlFSQnJJQVpCR25VZ0JXcHlRUWRMRFFNQ2Z5QUVRUUZxSWdVZ0JrR0FnSUFRY1VVTkFCb2dCUzBBQUVIQUFYRkJnQUZIQkVBZ0JFRUJheUVFREFjTElBUkJBbW9pQlNBR1FZQ0FJSEZGRFFBYUlBVXRBQUJCd0FGeFFZQUJSd1JBSUFSQkFXc2hCQXdIQ3lBRVFRTnFDeUVFSUFOQkFXc2hBMEVCSVFVTUFRc0RRQUpBSUFSQkEzRWdCQzBBQUNJR1FRRnJRZjRBUzNJTkFDQUVLQUlBSWdaQmdZS0VDR3NnQm5KQmdJR0NoSGh4RFFBRFFDQURRUVJySVFNZ0JDZ0NCQ0VHSUFSQkJHb2hCQ0FHSUFaQmdZS0VDR3R5UVlDQmdvUjRjVVVOQUFzTElBWkIvd0Z4SWdWQkFXdEIvZ0JOQkVBZ0EwRUJheUVESUFSQkFXb2hCQXdCQ3dzZ0JVSENBV3NpQlVFeVN3MERJQVJCQVdvaEJDQUZRUUowUVpENkFtb29BZ0FoQmtFQUlRVU1BQXNBQ3dOQUlBVkZCRUFnQTBVTkJ3TkFBa0FDUUFKQUlBUXRBQUFpQlVFQmF5SUhRZjRBU3dSQUlBVWhCZ3dCQ3lBRVFRTnhJQU5CQlVseURRRUNRQU5BSUFRb0FnQWlCa0dCZ29RSWF5QUdja0dBZ1lLRWVIRU5BU0FBSUFaQi93RnhOZ0lBSUFBZ0JDMEFBVFlDQkNBQUlBUXRBQUkyQWdnZ0FDQUVMUUFETmdJTUlBQkJFR29oQUNBRVFRUnFJUVFnQTBFRWF5SURRUVJMRFFBTElBUXRBQUFoQmdzZ0JrSC9BWEVpQlVFQmF5RUhDeUFIUWY0QVN3MEJDeUFBSUFVMkFnQWdBRUVFYWlFQUlBUkJBV29oQkNBRFFRRnJJZ01OQVF3SkN3c2dCVUhDQVdzaUJVRXlTdzBESUFSQkFXb2hCQ0FGUVFKMFFaRDZBbW9vQWdBaEJrRUJJUVVNQVFzZ0JDMEFBQ0lGUVFOMklnZEJFR3NnQnlBR1FScDFhbkpCQjBzTkFRSkFBa0FDZnlBRVFRRnFJZ2NnQlVHQUFXc2dCa0VHZEhJaUJVRUFUZzBBR2lBSExRQUFRWUFCYXlJSFFUOUxEUUVnQkVFQ2FpSUlJQWNnQlVFR2RISWlCVUVBVGcwQUdpQUlMUUFBUVlBQmF5SUhRVDlMRFFFZ0J5QUZRUVowY2lFRklBUkJBMm9MSVFRZ0FDQUZOZ0lBSUFOQkFXc2hBeUFBUVFScUlRQU1BUXRCdEl3RVFSazJBZ0FnQkVFQmF5RUVEQVVMUVFBaEJRd0FDd0FMSUFSQkFXc2hCQ0FHRFFFZ0JDMEFBQ0VHQ3lBR1FmOEJjUTBBSUFBRVFDQUFRUUEyQWdBZ0FVRUFOZ0lBQ3lBQ0lBTnJEd3RCdEl3RVFSazJBZ0FnQUVVTkFRc2dBU0FFTmdJQUMwRi9Ed3NnQVNBRU5nSUFJQUlMSXdFQ2Z5QUFJUUVEUUNBQklnSkJCR29oQVNBQ0tBSUFEUUFMSUFJZ0FHdEJBblVMRGdBZ0FCRE9CQVJBSUFBUU1Rc0xGd0FnQUJEQUFVRUFSeUFBUVNCeVFlRUFhMEVHU1hJTEp3QWdBRUVBUnlBQVFjaUpBMGR4SUFCQjRJa0RSM0VnQUVId3FnUkhjU0FBUVlpckJFZHhDK29DQVFOL0FrQWdBUzBBQUEwQVFkYUVBaENOQXlJQkJFQWdBUzBBQUEwQkN5QUFRUXhzUVlDS0Eyb1FqUU1pQVFSQUlBRXRBQUFOQVF0Qm40WUNFSTBESWdFRVFDQUJMUUFBRFFFTFFhMlFBaUVCQ3dKQUEwQWdBU0FDYWkwQUFDSUVSU0FFUVM5R2NrVUVRRUVYSVFRZ0FrRUJhaUlDUVJkSERRRU1BZ3NMSUFJaEJBdEJyWkFDSVFNQ1FBSkFBa0FDUUFKQUlBRXRBQUFpQWtFdVJnMEFJQUVnQkdvdEFBQU5BQ0FCSVFNZ0FrSERBRWNOQVFzZ0F5MEFBVVVOQVFzZ0EwR3RrQUlRb0FKRkRRQWdBMEdRZ1FJUW9BSU5BUXNnQUVVRVFFR2tpUU1oQWlBRExRQUJRUzVHRFFJTFFRQVBDMEhzcWdRb0FnQWlBZ1JBQTBBZ0F5QUNRUWhxRUtBQ1JRMENJQUlvQWlBaUFnMEFDd3RCSkJBM0lnSUVRQ0FDUWFTSkF5a0NBRGNDQUNBQ1FRaHFJZ0VnQXlBRUVENGFJQUVnQkdwQkFEb0FBQ0FDUWV5cUJDZ0NBRFlDSUVIc3FnUWdBallDQUFzZ0FrR2tpUU1nQUNBQ2Noc2hBZ3NnQWd2K0FnSUZmd0YrSXdCQklHc2lBaVFBQWtBZ0FDMEFOQVJBSUFBb0FqQWhBeUFCUlEwQklBQkJBRG9BTkNBQVFYODJBakFNQVFzZ0FrRUJOZ0lZSUFKQkdHb2dBRUVzYWhEVUJDZ0NBQ0lFUVFBZ0JFRUFTaHNoQlFKQUEwQWdBeUFGUndSQUlBQW9BaUFRK2dJaUJrRi9SZzBDSUFKQkdHb2dBMm9nQmpvQUFDQURRUUZxSVFNTUFRc0xBa0FnQUMwQU5RUkFJQUlnQWl3QUdEWUNGQXdCQ3lBQ1FSaHFJUU1EUUFKQUlBQW9BaWdpQlNrQ0FDRUhBa0FnQUNnQ0pDQUZJQUpCR0dvaUJTQUVJQVZxSWdVZ0FrRVFhaUFDUVJScUlBTWdBa0VNYWhEZUJFRUJhdzREQUFRQkF3c2dBQ2dDS0NBSE53SUFJQVJCQ0VZTkF5QUFLQUlnRVBvQ0lnWkJmMFlOQXlBRklBWTZBQUFnQkVFQmFpRUVEQUVMQ3lBQ0lBSXNBQmcyQWhRTEFrQWdBVVVFUUFOQUlBUkJBRXdOQWlBRVFRRnJJZ1FnQWtFWWFtb3NBQUFnQUNnQ0lCRDdBa0YvUncwQURBTUxBQXNnQUNBQ0tBSVVOZ0l3Q3lBQ0tBSVVJUU1NQVF0QmZ5RURDeUFDUVNCcUpBQWdBd3NKQUNBQUVOQURFREVMaFFFQkJYOGpBRUVRYXlJQkpBQWdBVUVRYWlFRUFrQURRQ0FBS0FJa0lnSWdBQ2dDS0NBQlFRaHFJZ01nQkNBQlFRUnFJQUlvQWdBb0FoUVJDZ0FoQlVGL0lRSWdBMEVCSUFFb0FnUWdBMnNpQXlBQUtBSWdFTXdCSUFOSERRRUNRQ0FGUVFGckRnSUJBZ0FMQzBGL1FRQWdBQ2dDSUJETkFoc2hBZ3NnQVVFUWFpUUFJQUlMRFFBZ0FFSFFoUU0yQWdBZ0FBc2tBUUovSXdCQkVHc2lBaVFBSUFBZ0FSRGJCQ0VESUFKQkVHb2tBQ0FCSUFBZ0F4c0xod01DQlg4QmZpTUFRU0JySWdJa0FBSkFJQUF0QURRRVFDQUFLQUl3SVFNZ0FVVU5BU0FBUVFBNkFEUWdBRUYvTmdJd0RBRUxJQUpCQVRZQ0dDQUNRUmhxSUFCQkxHb1ExQVFvQWdBaUJFRUFJQVJCQUVvYklRVUNRQU5BSUFNZ0JVY0VRQ0FBS0FJZ0VQb0NJZ1pCZjBZTkFpQUNRUmhxSUFOcUlBWTZBQUFnQTBFQmFpRUREQUVMQ3dKQUlBQXRBRFVFUUNBQ0lBSXRBQmc2QUJjTUFRc2dBa0VZYWlFREEwQUNRQ0FBS0FJb0lnVXBBZ0FoQndKQUlBQW9BaVFnQlNBQ1FSaHFJZ1VnQkNBRmFpSUZJQUpCRUdvZ0FrRVhhaUFESUFKQkRHb1EzZ1JCQVdzT0F3QUVBUU1MSUFBb0FpZ2dCemNDQUNBRVFRaEdEUU1nQUNnQ0lCRDZBaUlHUVg5R0RRTWdCU0FHT2dBQUlBUkJBV29oQkF3QkN3c2dBaUFDTFFBWU9nQVhDd0pBSUFGRkJFQURRQ0FFUVFCTURRSWdCRUVCYXlJRUlBSkJHR3BxTEFBQUVMNEJJQUFvQWlBUSt3SkJmMGNOQUF3REN3QUxJQUFnQWl3QUZ4QytBVFlDTUFzZ0Fpd0FGeEMrQVNFRERBRUxRWDhoQXdzZ0FrRWdhaVFBSUFNTENRQWdBQkRYQXhBeEN4SUFJQUFRMHdRaUFFRzhnd00yQWdBZ0FBc1JBQ0FBSUFBb0FnUkJnTUFBY2pZQ0JBdFlBUUovSXdCQkVHc2lBeVFBSUFBUTVRUWlBQ0FCTmdJZ0lBQkJzSWdETmdJQUlBTkJDR29pQVNBQUVQNENJQUVReXdNaEJDQUJFRVlnQUNBQ05nSW9JQUFnQkRZQ0pDQUFJQVFRbkFJNkFDd2dBMEVRYWlRQUMxZ0JBbjhqQUVFUWF5SURKQUFnQUJEekJDSUFJQUUyQWlBZ0FFSGtoZ00yQWdBZ0EwRUlhaUlCSUFBUS9nSWdBUkRPQXlFRUlBRVFSaUFBSUFJMkFpZ2dBQ0FFTmdJa0lBQWdCQkNjQWpvQUxDQURRUkJxSkFBTERRQWdBQ2dDQUNBQktBSUFTQXNzQVFGL0lBQW9BZ0FpQVFSQUlBRVE0d1JCZnhDNUFVVUVRQ0FBS0FJQVJROExJQUJCQURZQ0FBdEJBUXNzQVFGL0lBQW9BZ0FpQVFSQUlBRVE2UVJCZnhDNUFVVUVRQ0FBS0FJQVJROExJQUJCQURZQ0FBdEJBUXNkQUNBQUlBRWdBaUFESUFRZ0JTQUdJQWNnQUNnQ0FDZ0NFQkVOQUFzT0FFRUFJQUFnQUVGL0VMa0JHd3VVQVFFRWZ5TUFRUkJySWdVa0FDQUJJQUlRaWdRaUJFRnZUUVJBQWtBZ0JCRDhBZ1JBSUFBZ0JCQ1NBU0FBSVFNTUFRc2dBQ0FFRUpzQ1FRRnFJZ1lRVnlJREVKZ0JJQUFnQmhDeEFTQUFJQVFRaVFFTEEwQWdBU0FDUndSQUlBTWdBUkNMQVNBRFFRRnFJUU1nQVVFQmFpRUJEQUVMQ3lBRlFRQTZBQThnQXlBRlFROXFFSXNCSUFWQkVHb2tBQThMRUxBQkFBdFhBUUovQWtBZ0FDZ0NBQ0lDUlEwQUFuOGdBaWdDR0NJRElBSW9BaHhHQkVBZ0FpQUJJQUlvQWdBb0FqUVJBd0FNQVFzZ0FpQURRUVJxTmdJWUlBTWdBVFlDQUNBQkMwRi9FTGtCUlEwQUlBQkJBRFlDQUFzTE1RRUJmeUFBS0FJTUlnRWdBQ2dDRUVZRVFDQUFJQUFvQWdBb0FpZ1JBQUFQQ3lBQUlBRkJCR28yQWd3Z0FTZ0NBQXNuQVFGL0lBQW9BZ3dpQVNBQUtBSVFSZ1JBSUFBZ0FDZ0NBQ2dDSkJFQUFBOExJQUVvQWdBTEVBQWdBQkRjQkNBQkVOd0VjMEVCY3dzTEFDQUFRWWlBQXhEMUJnc1RBQ0FBSUFBb0FnQkJER3NvQWdCcUVOSURDeE1BSUFBZ0FDZ0NBRUVNYXlnQ0FHb1FnQU1MTkFFQmZ5QUFLQUlNSWdFZ0FDZ0NFRVlFUUNBQUlBQW9BZ0FvQWlnUkFBQVBDeUFBSUFGQkFXbzJBZ3dnQVN3QUFCQytBUXNxQVFGL0lBQW9BZ3dpQVNBQUtBSVFSZ1JBSUFBZ0FDZ0NBQ2dDSkJFQUFBOExJQUVzQUFBUXZnRUxFQUFnQUJEZEJDQUJFTjBFYzBFQmN3c1RBQ0FBSUFBb0FnQkJER3NvQWdCcUVOVURDd3dBSUFBZ0FDZ0NBQkNjQndzVEFDQUFJQUFvQWdCQkRHc29BZ0JxRUlJREN3UUFRWDhMQndBZ0FCRHdCQXNRQUNBQVFuODNBd2dnQUVJQU53TUFDd2NBSUFBUThBUUxCQUFnQUFzTEFDQUFRZWorQWhEMUJnc0hBQ0FBRU1nQ0N5Y0FJQUFnQlRvQUVDQUFJQVE0QWd3Z0FDQURPQUlJSUFBZ0FqZ0NCQ0FBSUFFNEFnQWdBQXNLQUNBQklBQnJRUUoxQzMwQkEzOGpBRUVRYXlJRkpBQWpBRUVRYXlJREpBQWdBQ0FCRU5rRElRRURRQ0FCQkVBZ0F5QUFOZ0lNSUFNZ0F5Z0NEQ0FCUVFGMklnUkJBblJxTmdJTUlBRWdCRUYvYzJvZ0JDQURLQUlNSUFJUTlBRWlCQnNoQVNBREtBSU1RUVJxSUFBZ0JCc2hBQXdCQ3dzZ0EwRVFhaVFBSUFWQkVHb2tBQ0FBQzdZTUFRWi9Jd0JCRUdzaUJDUUFJQVFnQURZQ0RBSkFJQUJCMHdGTkJFQkI0UHNDUWFEOUFpQUVRUXhxRVBjRUtBSUFJUUlNQVFzZ0FFRjhUd1JBRUhVQUN5QUVJQUFnQUVIU0FXNGlCa0hTQVd3aUFtczJBZ2hCb1AwQ1FlRCtBaUFFUVFocUVQY0VRYUQ5QW10QkFuVWhCUU5BSUFWQkFuUkJvUDBDYWlnQ0FDQUNhaUVDUVFVaEFBSkFBMEFDUUNBQVFTOUdCRUJCMHdFaEFBTkFJQUlnQUc0aUFTQUFTUTBFSUFJZ0FDQUJiRVlOQWlBQ0lBQkJDbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJER29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJFR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJFbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJGbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJIR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJIbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJKR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJLR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJLbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJMbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJOR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJPbW9pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJQR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJ3Z0JxSWdGdUlnTWdBVWtOQkNBQ0lBRWdBMnhHRFFJZ0FpQUFRY1lBYWlJQmJpSURJQUZKRFFRZ0FpQUJJQU5zUmcwQ0lBSWdBRUhJQUdvaUFXNGlBeUFCU1EwRUlBSWdBU0FEYkVZTkFpQUNJQUJCemdCcUlnRnVJZ01nQVVrTkJDQUNJQUVnQTJ4R0RRSWdBaUFBUWRJQWFpSUJiaUlESUFGSkRRUWdBaUFCSUFOc1JnMENJQUlnQUVIWUFHb2lBVzRpQXlBQlNRMEVJQUlnQVNBRGJFWU5BaUFDSUFCQjRBQnFJZ0Z1SWdNZ0FVa05CQ0FDSUFFZ0EyeEdEUUlnQWlBQVFlUUFhaUlCYmlJRElBRkpEUVFnQWlBQklBTnNSZzBDSUFJZ0FFSG1BR29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkI2Z0JxSWdGdUlnTWdBVWtOQkNBQ0lBRWdBMnhHRFFJZ0FpQUFRZXdBYWlJQmJpSURJQUZKRFFRZ0FpQUJJQU5zUmcwQ0lBSWdBRUh3QUdvaUFXNGlBeUFCU1EwRUlBSWdBU0FEYkVZTkFpQUNJQUJCK0FCcUlnRnVJZ01nQVVrTkJDQUNJQUVnQTJ4R0RRSWdBaUFBUWY0QWFpSUJiaUlESUFGSkRRUWdBaUFCSUFOc1JnMENJQUlnQUVHQ0FXb2lBVzRpQXlBQlNRMEVJQUlnQVNBRGJFWU5BaUFDSUFCQmlBRnFJZ0Z1SWdNZ0FVa05CQ0FDSUFFZ0EyeEdEUUlnQWlBQVFZb0JhaUlCYmlJRElBRkpEUVFnQWlBQklBTnNSZzBDSUFJZ0FFR09BV29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJsQUZxSWdGdUlnTWdBVWtOQkNBQ0lBRWdBMnhHRFFJZ0FpQUFRWllCYWlJQmJpSURJQUZKRFFRZ0FpQUJJQU5zUmcwQ0lBSWdBRUdjQVdvaUFXNGlBeUFCU1EwRUlBSWdBU0FEYkVZTkFpQUNJQUJCb2dGcUlnRnVJZ01nQVVrTkJDQUNJQUVnQTJ4R0RRSWdBaUFBUWFZQmFpSUJiaUlESUFGSkRRUWdBaUFCSUFOc1JnMENJQUlnQUVHb0FXb2lBVzRpQXlBQlNRMEVJQUlnQVNBRGJFWU5BaUFDSUFCQnJBRnFJZ0Z1SWdNZ0FVa05CQ0FDSUFFZ0EyeEdEUUlnQWlBQVFiSUJhaUlCYmlJRElBRkpEUVFnQWlBQklBTnNSZzBDSUFJZ0FFRzBBV29pQVc0aUF5QUJTUTBFSUFJZ0FTQURiRVlOQWlBQ0lBQkJ1Z0ZxSWdGdUlnTWdBVWtOQkNBQ0lBRWdBMnhHRFFJZ0FpQUFRYjRCYWlJQmJpSURJQUZKRFFRZ0FpQUJJQU5zUmcwQ0lBSWdBRUhBQVdvaUFXNGlBeUFCU1EwRUlBSWdBU0FEYkVZTkFpQUNJQUJCeEFGcUlnRnVJZ01nQVVrTkJDQUNJQUVnQTJ4R0RRSWdBaUFBUWNZQmFpSUJiaUlESUFGSkRRUWdBaUFCSUFOc1JnMENJQUlnQUVIUUFXb2lBVzRpQXlBQlNRMEVJQUJCMGdGcUlRQWdBaUFCSUFOc1J3MEFDd3dCQ3lBQ0lBQkJBblJCNFBzQ2FpZ0NBQ0lCYmlJRElBRkpEUUlnQUVFQmFpRUFJQUlnQVNBRGJFY05BUXNMUVFBZ0JVRUJhaUlBSUFCQk1FWWlBQnNoQlNBQUlBWnFJZ1pCMGdGc0lRSU1BUXNMSUFRZ0FqWUNEQXNnQkVFUWFpUUFJQUlMdGdNQ0EzOEJmaU1BUVNCcklnTWtBQUpBSUFGQy8vLy8vLy8vLy8vL0FJTWlCVUtBZ0lDQWdJREF3RDk5SUFWQ2dJQ0FnSUNBd0wvQUFIMVVCRUFnQVVJWmlLY2hCQ0FBVUNBQlF2Ly8vdytESWdWQ2dJQ0FDRlFnQlVLQWdJQUlVUnRGQkVBZ0JFR0JnSUNBQkdvaEFnd0NDeUFFUVlDQWdJQUVhaUVDSUFBZ0JVS0FnSUFJaFlSQ0FGSU5BU0FDSUFSQkFYRnFJUUlNQVFzZ0FGQWdCVUtBZ0lDQWdJREEvLzhBVkNBRlFvQ0FnSUNBZ01ELy93QlJHMFVFUUNBQlFobUlwMEgvLy84QmNVR0FnSUQrQjNJaEFnd0JDMEdBZ0lEOEJ5RUNJQVZDLy8vLy8vLy92Ny9BQUZZTkFFRUFJUUlnQlVJd2lLY2lCRUdSL2dCSkRRQWdBMEVRYWlBQUlBRkMvLy8vLy8vL1A0TkNnSUNBZ0lDQXdBQ0VJZ1VnQkVHQi9nQnJFSWNCSUFNZ0FDQUZRWUgvQUNBRWF4Q0JBaUFES1FNSUlnQkNHWWluSVFJZ0F5a0RBQ0FES1FNUUlBTXBBeGlFUWdCU3JZUWlCVkFnQUVMLy8vOFBneUlBUW9DQWdBaFVJQUJDZ0lDQUNGRWJSUVJBSUFKQkFXb2hBZ3dCQ3lBRklBQkNnSUNBQ0lXRVFnQlNEUUFnQWtFQmNTQUNhaUVDQ3lBRFFTQnFKQUFnQWlBQlFpQ0lwMEdBZ0lDQWVIRnl2Z3NzQVFGL0lBQVFnQUlnQUNnQ0FBUkFJQUFRN0FRZ0FCQXlHaUFBS0FJQUlRRWdBQkNrQVJvZ0FSQXhDd3NMQUNBQUlBRVEvUVFRSFF1S0FRRURmMEhJbWdSQnlKb0VLQUlBUVFGcUlnVTJBZ0FnQUNBRk5nSUFJQU1FUUFOQUlBSWdCRUVEZEdvaUJpZ0NBRVVFUUNBR0lBVTJBZ0FnQWlBRVFRTjBhaUlBSUFFMkFnUWdBRUVBTmdJSUlBTWtBU0FDRHdzZ0JFRUJhaUlFSUFOSERRQUxDeUFBSUFFZ0FpQURRUVIwUVFoeUVNc0NJQU5CQVhRaUFCRDhCQ0VCSUFBa0FTQUJDeDhBUWNDYUJDZ0NBRVVFUUVIQW1nUWdBRFlDQUVIRW1nUWdBVFlDQUFzTHZnOENCWDhQZmlNQVFkQUNheUlGSkFBZ0JFTC8vLy8vLy84L2d5RUxJQUpDLy8vLy8vLy9QNE1oQ2lBQ0lBU0ZRb0NBZ0lDQWdJQ0FnSCtESVEwZ0JFSXdpS2RCLy84QmNTRUlBa0FDUUNBQ1FqQ0lwMEgvL3dGeElnbEIvLzhCYTBHQ2dINVBCRUFnQ0VILy93RnJRWUdBZmtzTkFRc2dBVkFnQWtMLy8vLy8vLy8vLy84QWd5SU1Rb0NBZ0lDQWdNRC8vd0JVSUF4Q2dJQ0FnSUNBd1AvL0FGRWJSUVJBSUFKQ2dJQ0FnSUNBSUlRaERRd0NDeUFEVUNBRVF2Ly8vLy8vLy8vLy93Q0RJZ0pDZ0lDQWdJQ0F3UC8vQUZRZ0FrS0FnSUNBZ0lEQS8vOEFVUnRGQkVBZ0JFS0FnSUNBZ0lBZ2hDRU5JQU1oQVF3Q0N5QUJJQXhDZ0lDQWdJQ0F3UC8vQUlXRVVBUkFJQU1nQWtLQWdJQ0FnSURBLy84QWhZUlFCRUJDQUNFQlFvQ0FnSUNBZ09ELy93QWhEUXdEQ3lBTlFvQ0FnSUNBZ01ELy93Q0VJUTFDQUNFQkRBSUxJQU1nQWtLQWdJQ0FnSURBLy84QWhZUlFCRUJDQUNFQkRBSUxJQUVnRElSUUJFQkNnSUNBZ0lDQTRQLy9BQ0FOSUFJZ0E0UlFHeUVOUWdBaEFRd0NDeUFDSUFPRVVBUkFJQTFDZ0lDQWdJQ0F3UC8vQUlRaERVSUFJUUVNQWdzZ0RFTC8vLy8vLy84L1dBUkFJQVZCd0FKcUlBRWdDaUFCSUFvZ0NsQWlCaHQ1SUFaQkJuU3RmS2NpQmtFUGF4Q0hBVUVRSUFacklRWWdCU2tEeUFJaENpQUZLUVBBQWlFQkN5QUNRdi8vLy8vLy96OVdEUUFnQlVHd0Ftb2dBeUFMSUFNZ0N5QUxVQ0lIRzNrZ0IwRUdkSzE4cHlJSFFROXJFSWNCSUFZZ0IycEJFR3NoQmlBRktRTzRBaUVMSUFVcEE3QUNJUU1MSUFWQm9BSnFJQXRDZ0lDQWdJQ0F3QUNFSWhKQ0Q0WWdBMEl4aUlRaUFrSUFRb0NBZ0lDdzVyeUM5UUFnQW4waUJFSUFFSU1CSUFWQmtBSnFRZ0FnQlNrRHFBSjlRZ0FnQkVJQUVJTUJJQVZCZ0FKcUlBVXBBNWdDUWdHR0lBVXBBNUFDUWorSWhDSUVRZ0FnQWtJQUVJTUJJQVZCOEFGcUlBUkNBRUlBSUFVcEE0Z0NmVUlBRUlNQklBVkI0QUZxSUFVcEEvZ0JRZ0dHSUFVcEEvQUJRaitJaENJRVFnQWdBa0lBRUlNQklBVkIwQUZxSUFSQ0FFSUFJQVVwQStnQmZVSUFFSU1CSUFWQndBRnFJQVVwQTlnQlFnR0dJQVVwQTlBQlFqK0loQ0lFUWdBZ0FrSUFFSU1CSUFWQnNBRnFJQVJDQUVJQUlBVXBBOGdCZlVJQUVJTUJJQVZCb0FGcUlBSkNBQ0FGS1FPNEFVSUJoaUFGS1FPd0FVSS9pSVJDQVgwaUFrSUFFSU1CSUFWQmtBRnFJQU5DRDRaQ0FDQUNRZ0FRZ3dFZ0JVSHdBR29nQWtJQVFnQWdCU2tEcUFFZ0JTa0RvQUVpRENBRktRT1lBWHdpQkNBTVZLMThJQVJDQVZhdGZIMUNBQkNEQVNBRlFZQUJha0lCSUFSOVFnQWdBa0lBRUlNQklBWWdDU0FJYTJvaEJnSi9JQVVwQTNBaUUwSUJoaUlPSUFVcEE0Z0JJZzlDQVlZZ0JTa0RnQUZDUDRpRWZDSVFRdWZzQUgwaUZFSWdpQ0lDSUFwQ2dJQ0FnSUNBd0FDRUloVkNBWVlpRmtJZ2lDSUVmaUlSSUFGQ0FZWWlERUlnaUNJTElCQWdGRmF0SUE0Z0VGYXRJQVVwQTNoQ0FZWWdFMEkvaUlRZ0QwSS9pSHg4ZkVJQmZTSVRRaUNJSWhCK2ZDSU9JQkZVclNBT0lBNGdFMEwvLy8vL0Q0TWlFeUFCUWorSUloY2dDa0lCaG9SQy8vLy8vdytESWdwK2ZDSU9WcTE4SUFRZ0VINThJQVFnRTM0aUVTQUtJQkIrZkNJUElCRlVyVUlnaGlBUFFpQ0loSHdnRGlBT0lBOUNJSVo4SWc1V3JYd2dEaUFPSUJSQy8vLy8vdytESWhRZ0NuNGlFU0FDSUF0K2ZDSVBJQkZVclNBUElBOGdFeUFNUXY3Ly8vOFBneUlSZm53aUQxYXRmSHdpRGxhdGZDQU9JQVFnRkg0aUdDQVFJQkYrZkNJRUlBSWdDbjU4SWdvZ0N5QVRmbndpRUVJZ2lDQUtJQkJXclNBRUlCaFVyU0FFSUFwV3JYeDhRaUNHaEh3aUJDQU9WSzE4SUFRZ0R5QUNJQkYrSWdJZ0N5QVVmbndpQzBJZ2lDQUNJQXRXclVJZ2hvUjhJZ0lnRDFTdElBSWdFRUlnaG53Z0FsU3RmSHdpQWlBRVZLMThJZ1JDLy8vLy8vLy8vd0JZQkVBZ0ZpQVhoQ0VWSUFWQjBBQnFJQUlnQkNBRElCSVFnd0VnQVVJeGhpQUZLUU5ZZlNBRktRTlFJZ0ZDQUZLdGZTRUtRZ0FnQVgwaEN5QUdRZjcvQUdvTUFRc2dCVUhnQUdvZ0JFSS9oaUFDUWdHSWhDSUNJQVJDQVlnaUJDQURJQklRZ3dFZ0FVSXdoaUFGS1FOb2ZTQUZLUU5nSWd4Q0FGS3RmU0VLUWdBZ0RIMGhDeUFCSVF3Z0JrSC8vd0JxQ3lJR1FmLy9BVTRFUUNBTlFvQ0FnSUNBZ01ELy93Q0VJUTFDQUNFQkRBRUxBbjRnQmtFQVNnUkFJQXBDQVlZZ0MwSS9pSVFoQ2lBRVF2Ly8vLy8vL3orRElBYXRRakNHaENFTUlBdENBWVlNQVFzZ0JrR1BmMHdFUUVJQUlRRU1BZ3NnQlVGQWF5QUNJQVJCQVNBR2F4Q0JBaUFGUVRCcUlBd2dGU0FHUWZBQWFoQ0hBU0FGUVNCcUlBTWdFaUFGS1FOQUlnSWdCU2tEU0NJTUVJTUJJQVVwQXpnZ0JTa0RLRUlCaGlBRktRTWdJZ0ZDUDRpRWZTQUZLUU13SWdRZ0FVSUJoaUlCVksxOUlRb2dCQ0FCZlFzaEJDQUZRUkJxSUFNZ0VrSURRZ0FRZ3dFZ0JTQURJQkpDQlVJQUVJTUJJQXdnQWlBQ0lBTWdBa0lCZ3lJQklBUjhJZ05VSUFvZ0FTQURWcTE4SWdFZ0VsWWdBU0FTVVJ1dGZDSUNWcTE4SWdRZ0FpQUNJQVJDZ0lDQWdJQ0F3UC8vQUZRZ0F5QUZLUU1RVmlBQklBVXBBeGdpQkZZZ0FTQUVVUnR4clh3aUFsYXRmQ0lFSUFJZ0JFS0FnSUNBZ0lEQS8vOEFWQ0FESUFVcEF3QldJQUVnQlNrRENDSURWaUFCSUFOUkczR3RmQ0lCSUFKVXJYd2dEWVFoRFFzZ0FDQUJOd01BSUFBZ0RUY0RDQ0FGUWRBQ2FpUUFDOFFCQWdGL0FuNUJmeUVEQWtBZ0FFSUFVaUFCUXYvLy8vLy8vLy8vL3dDRElnUkNnSUNBZ0lDQXdQLy9BRllnQkVLQWdJQ0FnSURBLy84QVVSc05BRUVBSUFKQy8vLy8vLy8vLy8vL0FJTWlCVUtBZ0lDQWdJREEvLzhBVmlBRlFvQ0FnSUNBZ01ELy93QlJHdzBBSUFBZ0JDQUZoSVJRQkVCQkFBOExJQUVnQW9OQ0FGa0VRRUVBSUFFZ0FsTWdBU0FDVVJzTkFTQUFJQUVnQW9XRVFnQlNEd3NnQUVJQVVpQUJJQUpWSUFFZ0FsRWJEUUFnQUNBQklBS0ZoRUlBVWlFREN5QURDNGtNQVFaL0lBQWdBV29oQlFKQUFrQWdBQ2dDQkNJQ1FRRnhEUUFnQWtFRGNVVU5BU0FBS0FJQUlnSWdBV29oQVFKQUlBQWdBbXNpQUVIa2xnUW9BZ0JIQkVBZ0FrSC9BVTBFUUNBQUtBSUlJZ1FnQWtFRGRpSUNRUU4wUWZpV0JHcEdHaUFBS0FJTUlnTWdCRWNOQWtIUWxnUkIwSllFS0FJQVFYNGdBbmR4TmdJQURBTUxJQUFvQWhnaEJnSkFJQUFnQUNnQ0RDSUNSd1JBSUFBb0FnZ2lBMEhnbGdRb0FnQkpHaUFESUFJMkFnd2dBaUFETmdJSURBRUxBa0FnQUVFVWFpSUVLQUlBSWdNTkFDQUFRUkJxSWdRb0FnQWlBdzBBUVFBaEFnd0JDd05BSUFRaEJ5QURJZ0pCRkdvaUJDZ0NBQ0lERFFBZ0FrRVFhaUVFSUFJb0FoQWlBdzBBQ3lBSFFRQTJBZ0FMSUFaRkRRSUNRQ0FBS0FJY0lnUkJBblJCZ0prRWFpSURLQUlBSUFCR0JFQWdBeUFDTmdJQUlBSU5BVUhVbGdSQjFKWUVLQUlBUVg0Z0JIZHhOZ0lBREFRTElBWkJFRUVVSUFZb0FoQWdBRVliYWlBQ05nSUFJQUpGRFFNTElBSWdCallDR0NBQUtBSVFJZ01FUUNBQ0lBTTJBaEFnQXlBQ05nSVlDeUFBS0FJVUlnTkZEUUlnQWlBRE5nSVVJQU1nQWpZQ0dBd0NDeUFGS0FJRUlnSkJBM0ZCQTBjTkFVSFlsZ1FnQVRZQ0FDQUZJQUpCZm5FMkFnUWdBQ0FCUVFGeU5nSUVJQVVnQVRZQ0FBOExJQVFnQXpZQ0RDQURJQVEyQWdnTEFrQWdCU2dDQkNJQ1FRSnhSUVJBUWVpV0JDZ0NBQ0FGUmdSQVFlaVdCQ0FBTmdJQVFkeVdCRUhjbGdRb0FnQWdBV29pQVRZQ0FDQUFJQUZCQVhJMkFnUWdBRUhrbGdRb0FnQkhEUU5CMkpZRVFRQTJBZ0JCNUpZRVFRQTJBZ0FQQzBIa2xnUW9BZ0FnQlVZRVFFSGtsZ1FnQURZQ0FFSFlsZ1JCMkpZRUtBSUFJQUZxSWdFMkFnQWdBQ0FCUVFGeU5nSUVJQUFnQVdvZ0FUWUNBQThMSUFKQmVIRWdBV29oQVFKQUlBSkIvd0ZOQkVBZ0JTZ0NDQ0lFSUFKQkEzWWlBa0VEZEVINGxnUnFSaG9nQkNBRktBSU1JZ05HQkVCQjBKWUVRZENXQkNnQ0FFRitJQUozY1RZQ0FBd0NDeUFFSUFNMkFnd2dBeUFFTmdJSURBRUxJQVVvQWhnaEJnSkFJQVVnQlNnQ0RDSUNSd1JBSUFVb0FnZ2lBMEhnbGdRb0FnQkpHaUFESUFJMkFnd2dBaUFETmdJSURBRUxBa0FnQlVFVWFpSURLQUlBSWdRTkFDQUZRUkJxSWdNb0FnQWlCQTBBUVFBaEFnd0JDd05BSUFNaEJ5QUVJZ0pCRkdvaUF5Z0NBQ0lFRFFBZ0FrRVFhaUVESUFJb0FoQWlCQTBBQ3lBSFFRQTJBZ0FMSUFaRkRRQUNRQ0FGS0FJY0lnUkJBblJCZ0prRWFpSURLQUlBSUFWR0JFQWdBeUFDTmdJQUlBSU5BVUhVbGdSQjFKWUVLQUlBUVg0Z0JIZHhOZ0lBREFJTElBWkJFRUVVSUFZb0FoQWdCVVliYWlBQ05nSUFJQUpGRFFFTElBSWdCallDR0NBRktBSVFJZ01FUUNBQ0lBTTJBaEFnQXlBQ05nSVlDeUFGS0FJVUlnTkZEUUFnQWlBRE5nSVVJQU1nQWpZQ0dBc2dBQ0FCUVFGeU5nSUVJQUFnQVdvZ0FUWUNBQ0FBUWVTV0JDZ0NBRWNOQVVIWWxnUWdBVFlDQUE4TElBVWdBa0YrY1RZQ0JDQUFJQUZCQVhJMkFnUWdBQ0FCYWlBQk5nSUFDeUFCUWY4QlRRUkFJQUZCZUhGQitKWUVhaUVDQW45QjBKWUVLQUlBSWdOQkFTQUJRUU4yZENJQmNVVUVRRUhRbGdRZ0FTQURjallDQUNBQ0RBRUxJQUlvQWdnTElRRWdBaUFBTmdJSUlBRWdBRFlDRENBQUlBSTJBZ3dnQUNBQk5nSUlEd3RCSHlFRUlBRkIvLy8vQjAwRVFDQUJRUWgySWdJZ0FrR0EvajlxUVJCMlFRaHhJZ1IwSWdJZ0FrR0E0QjlxUVJCMlFRUnhJZ04wSWdJZ0FrR0FnQTlxUVJCMlFRSnhJZ0owUVE5MklBTWdCSElnQW5KcklnSkJBWFFnQVNBQ1FSVnFka0VCY1hKQkhHb2hCQXNnQUNBRU5nSWNJQUJDQURjQ0VDQUVRUUowUVlDWkJHb2hCd0pBQWtCQjFKWUVLQUlBSWdOQkFTQUVkQ0lDY1VVRVFFSFVsZ1FnQWlBRGNqWUNBQ0FISUFBMkFnQWdBQ0FITmdJWURBRUxJQUZCQUVFWklBUkJBWFpySUFSQkgwWWJkQ0VFSUFjb0FnQWhBZ05BSUFJaUF5Z0NCRUY0Y1NBQlJnMENJQVJCSFhZaEFpQUVRUUYwSVFRZ0F5QUNRUVJ4YWlJSFFSQnFLQUlBSWdJTkFBc2dCeUFBTmdJUUlBQWdBellDR0FzZ0FDQUFOZ0lNSUFBZ0FEWUNDQThMSUFNb0FnZ2lBU0FBTmdJTUlBTWdBRFlDQ0NBQVFRQTJBaGdnQUNBRE5nSU1JQUFnQVRZQ0NBc0xFZ0FnQUVVRVFFRUFEd3NnQUNBQkVOd0RDeElBSUFBUTB3UWlBRUdvZ1FNMkFnQWdBQXZsSGdJUGZ3VitJd0JCa0FGcklnUWtBQ0FFUVFCQmtBRVFPQ0lEUVg4MkFrd2dBeUFBTmdJc0lBTkJpUUkyQWlBZ0F5QUFOZ0pVSUFFaEJDQUNJUTVCQUNFQUl3QkJzQUpySWdZa0FDQURLQUpNR2dKQUFrQUNRQUpBSUFNb0FnUU5BQ0FERUpBREdpQURLQUlFRFFBTUFRc2dCQzBBQUNJQlJRMENBa0FDUUFKQUFrQURRQUpBQWtBZ0FVSC9BWEVRNXdFRVFBTkFJQVFpQVVFQmFpRUVJQUV0QUFFUTV3RU5BQXNnQTBJQUVMOEJBMEFDZnlBREtBSUVJZ0lnQXlnQ2FFY0VRQ0FESUFKQkFXbzJBZ1FnQWkwQUFBd0JDeUFERUUwTEVPY0JEUUFMSUFNb0FnUWhCQ0FES1FOd1FnQlpCRUFnQXlBRVFRRnJJZ1EyQWdRTElBUWdBeWdDTEd1c0lBTXBBM2dnRkh4OElSUU1BUXNDZndKQUFrQWdCQzBBQUVFbFJnUkFJQVF0QUFFaUFVRXFSZzBCSUFGQkpVY05BZ3NnQTBJQUVMOEJBa0FnQkMwQUFFRWxSZ1JBQTBBQ2Z5QURLQUlFSWdFZ0F5Z0NhRWNFUUNBRElBRkJBV28yQWdRZ0FTMEFBQXdCQ3lBREVFMExJZ0VRNXdFTkFBc2dCRUVCYWlFRURBRUxJQU1vQWdRaUFTQURLQUpvUndSQUlBTWdBVUVCYWpZQ0JDQUJMUUFBSVFFTUFRc2dBeEJOSVFFTElBUXRBQUFnQVVjRVFDQURLUU53UWdCWkJFQWdBeUFES0FJRVFRRnJOZ0lFQ3lBQlFRQk9EUTFCQUNFSElBME5EUXdMQ3lBREtBSUVJQU1vQWl4cnJDQURLUU40SUJSOGZDRVVJQVFoQVF3REMwRUFJUWdnQkVFQ2Fnd0JDd0pBSUFFUXdBRkZEUUFnQkMwQUFrRWtSdzBBSUFRdEFBRkJNR3NoQVNNQVFSQnJJZ0lnRGpZQ0RDQUNJQTRnQVVFQ2RFRUVhMEVBSUFGQkFVc2JhaUlCUVFScU5nSUlJQUVvQWdBaENDQUVRUU5xREFFTElBNG9BZ0FoQ0NBT1FRUnFJUTRnQkVFQmFnc2hBVUVBSVF4QkFDRUVJQUV0QUFBUXdBRUVRQU5BSUFFdEFBQWdCRUVLYkdwQk1Hc2hCQ0FCTFFBQklRSWdBVUVCYWlFQklBSVF3QUVOQUFzTElBRXRBQUFpQ2tIdEFFY0VmeUFCQlVFQUlRa2dDRUVBUnlFTUlBRXRBQUVoQ2tFQUlRQWdBVUVCYWdzaUFrRUJhaUVCUVFNaEJTQU1JUWNDUUFKQUFrQUNRQUpBQWtBZ0NrSEJBR3NPT2dRTUJBd0VCQVFNREF3TUF3d01EQXdNREFRTURBd01CQXdNQkF3TURBd01CQXdFQkFRRUJBQUVCUXdCREFRRUJBd01CQUlFREF3RURBSU1DeUFDUVFKcUlBRWdBaTBBQVVIb0FFWWlBaHNoQVVGK1FYOGdBaHNoQlF3RUN5QUNRUUpxSUFFZ0FpMEFBVUhzQUVZaUFoc2hBVUVEUVFFZ0Foc2hCUXdEQzBFQklRVU1BZ3RCQWlFRkRBRUxRUUFoQlNBQ0lRRUxRUUVnQlNBQkxRQUFJZ0pCTDNGQkEwWWlCUnNoRHdKQUlBSkJJSElnQWlBRkd5SUxRZHNBUmcwQUFrQWdDMEh1QUVjRVFDQUxRZU1BUncwQklBUkJBU0FFUVFGS0d5RUVEQUlMSUFnZ0R5QVVFSVFGREFJTElBTkNBQkMvQVFOQUFuOGdBeWdDQkNJQ0lBTW9BbWhIQkVBZ0F5QUNRUUZxTmdJRUlBSXRBQUFNQVFzZ0F4Qk5DeERuQVEwQUN5QURLQUlFSVFJZ0F5a0RjRUlBV1FSQUlBTWdBa0VCYXlJQ05nSUVDeUFDSUFNb0FpeHJyQ0FES1FONElCUjhmQ0VVQ3lBRElBU3NJaElRdndFQ1FDQURLQUlFSWdJZ0F5Z0NhRWNFUUNBRElBSkJBV28yQWdRTUFRc2dBeEJOUVFCSURRWUxJQU1wQTNCQ0FGa0VRQ0FESUFNb0FnUkJBV3MyQWdRTFFSQWhBZ0pBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUF0QjJBQnJEaUVHQ1FrQ0NRa0pDUWtCQ1FJRUFRRUJDUVVKQ1FrSkNRTUdDUWtDQ1FRSkNRWUFDeUFMUWNFQWF5SUNRUVpMUVFFZ0FuUkI4UUJ4UlhJTkNBc2dCa0VJYWlBRElBOUJBQkNHQlNBREtRTjRRZ0FnQXlnQ0JDQURLQUlzYTZ4OVVnMEZEQXdMSUF0QkVISkI4d0JHQkVBZ0JrRWdha0YvUVlFQ0VEZ2FJQVpCQURvQUlDQUxRZk1BUncwR0lBWkJBRG9BUVNBR1FRQTZBQzRnQmtFQU5nRXFEQVlMSUFaQklHb2dBUzBBQVNJQ1FkNEFSaUlGUVlFQ0VEZ2FJQVpCQURvQUlDQUJRUUpxSUFGQkFXb2dCUnNoQndKL0FrQUNRQ0FCUVFKQkFTQUZHMm90QUFBaUFVRXRSd1JBSUFGQjNRQkdEUUVnQWtIZUFFY2hCU0FIREFNTElBWWdBa0hlQUVjaUJUb0FUZ3dCQ3lBR0lBSkIzZ0JISWdVNkFINExJQWRCQVdvTElRRURRQUpBSUFFdEFBQWlBa0V0UndSQUlBSkZEUThnQWtIZEFFWU5DQXdCQzBFdElRSWdBUzBBQVNJSFJTQUhRZDBBUm5JTkFDQUJRUUZxSVFvQ1FDQUhJQUZCQVdzdEFBQWlBVTBFUUNBSElRSU1BUXNEUUNBQlFRRnFJZ0VnQmtFZ2Ftb2dCVG9BQUNBQklBb3RBQUFpQWtrTkFBc0xJQW9oQVFzZ0FpQUdhaUFGT2dBaElBRkJBV29oQVF3QUN3QUxRUWdoQWd3Q0MwRUtJUUlNQVF0QkFDRUNDMElBSVJKQkFDRUZRUUFoQjBFQUlRb2pBRUVRYXlJUUpBQUNRQ0FDUVFGSElBSkJKRTF4UlFSQVFiU01CRUVjTmdJQURBRUxBMEFDZnlBREtBSUVJZ1FnQXlnQ2FFY0VRQ0FESUFSQkFXbzJBZ1FnQkMwQUFBd0JDeUFERUUwTElnUVE1d0VOQUFzQ1FBSkFJQVJCSzJzT0F3QUJBQUVMUVg5QkFDQUVRUzFHR3lFS0lBTW9BZ1FpQkNBREtBSm9Sd1JBSUFNZ0JFRUJhallDQkNBRUxRQUFJUVFNQVFzZ0F4Qk5JUVFMQWtBQ1FBSkFBa0FnQWtFQVJ5QUNRUkJIY1NBRVFUQkhja1VFUUFKL0lBTW9BZ1FpQkNBREtBSm9Sd1JBSUFNZ0JFRUJhallDQkNBRUxRQUFEQUVMSUFNUVRRc2lCRUZmY1VIWUFFWUVRRUVRSVFJQ2Z5QURLQUlFSWdRZ0F5Z0NhRWNFUUNBRElBUkJBV28yQWdRZ0JDMEFBQXdCQ3lBREVFMExJZ1JCZ2ZnQ2FpMEFBRUVRU1EwRElBTXBBM0JDQUZrRVFDQURJQU1vQWdSQkFXczJBZ1FMSUFOQ0FCQy9BUXdHQ3lBQ0RRRkJDQ0VDREFJTElBSkJDaUFDR3lJQ0lBUkJnZmdDYWkwQUFFc05BQ0FES1FOd1FnQlpCRUFnQXlBREtBSUVRUUZyTmdJRUN5QURRZ0FRdndGQnRJd0VRUncyQWdBTUJBc2dBa0VLUncwQUlBUkJNR3NpQlVFSlRRUkFRUUFoQWdOQUlBSkJDbXdnQldvaUFrR1pzK2JNQVVrQ2Z5QURLQUlFSWdRZ0F5Z0NhRWNFUUNBRElBUkJBV28yQWdRZ0JDMEFBQXdCQ3lBREVFMExJZ1JCTUdzaUJVRUpUWEVOQUFzZ0FxMGhFZ3NDUUNBRlFRbExEUUFnRWtJS2ZpRVRJQVd0SVJVRFFBSi9JQU1vQWdRaUFpQURLQUpvUndSQUlBTWdBa0VCYWpZQ0JDQUNMUUFBREFFTElBTVFUUXNpQkVFd2F5SUZRUWxMSUJNZ0ZYd2lFa0thcytiTW1iUG16QmxhY2cwQklCSkNDbjRpRXlBRnJTSVZRbitGV0EwQUMwRUtJUUlNQWd0QkNpRUNJQVZCQ1UwTkFRd0NDeUFDSUFKQkFXdHhCRUFnQkVHQitBSnFMUUFBSWdjZ0Fra0VRQU5BSUFJZ0JXd2dCMm9pQlVISDQvRTRTUUovSUFNb0FnUWlCQ0FES0FKb1J3UkFJQU1nQkVFQmFqWUNCQ0FFTFFBQURBRUxJQU1RVFFzaUJFR0IrQUpxTFFBQUlnY2dBa2x4RFFBTElBV3RJUklMSUFJZ0IwME5BU0FDclNFVEEwQWdFaUFUZmlJVklBZXRRdjhCZ3lJV1FuK0ZWZzBDSUJVZ0Zud2hFaUFDQW44Z0F5Z0NCQ0lFSUFNb0FtaEhCRUFnQXlBRVFRRnFOZ0lFSUFRdEFBQU1BUXNnQXhCTkN5SUVRWUg0QW1vdEFBQWlCMDBOQWlBUUlCTkNBQ0FTUWdBUWd3RWdFQ2tEQ0ZBTkFBc01BUXNnQWtFWGJFRUZka0VIY1VHQitnSnFMQUFBSVJFZ0JFR0IrQUpxTFFBQUlnVWdBa2tFUUFOQUlBY2dFWFFnQlhJaUIwR0FnSURBQUVrQ2Z5QURLQUlFSWdRZ0F5Z0NhRWNFUUNBRElBUkJBV28yQWdRZ0JDMEFBQXdCQ3lBREVFMExJZ1JCZ2ZnQ2FpMEFBQ0lGSUFKSmNRMEFDeUFIclNFU0N5QUNJQVZORFFCQ2Z5QVJyU0lUaUNJVklCSlVEUUFEUUNBRnJVTC9BWU1nRWlBVGhvUWhFaUFDQW44Z0F5Z0NCQ0lFSUFNb0FtaEhCRUFnQXlBRVFRRnFOZ0lFSUFRdEFBQU1BUXNnQXhCTkN5SUVRWUg0QW1vdEFBQWlCVTBOQVNBU0lCVllEUUFMQ3lBQ0lBUkJnZmdDYWkwQUFFME5BQU5BSUFJQ2Z5QURLQUlFSWdRZ0F5Z0NhRWNFUUNBRElBUkJBV28yQWdRZ0JDMEFBQXdCQ3lBREVFMExRWUg0QW1vdEFBQkxEUUFMUWJTTUJFSEVBRFlDQUVFQUlRcENmeUVTQ3lBREtRTndRZ0JaQkVBZ0F5QURLQUlFUVFGck5nSUVDMEVBSUJKQ2YxRWdDa0VCY2hzRVFFRzBqQVJCeEFBMkFnQkNmaUVTREFFTElCSWdDcXdpRTRVZ0UzMGhFZ3NnRUVFUWFpUUFJQU1wQTNoQ0FDQURLQUlFSUFNb0FpeHJySDFSRFFjZ0NFVWdDMEh3QUVkeVJRUkFJQWdnRWo0Q0FBd0RDeUFJSUE4Z0VoQ0VCUXdDQ3lBSVJRMEJJQVlwQXhBaEVpQUdLUU1JSVJNQ1FBSkFBa0FnRHc0REFBRUNCQXNnQ0NBVElCSVErUVE0QWdBTUF3c2dDQ0FUSUJJUTJnTTVBd0FNQWdzZ0NDQVROd01BSUFnZ0VqY0RDQXdCQ3lBRVFRRnFRUjhnQzBIakFFWWlDaHNoQlFKQUlBOUJBVVlFUUNBSUlRSWdEQVJBSUFWQkFuUVFOeUlDUlEwSEN5QUdRZ0EzQTZnQ1FRQWhCQU5BSUFJaEFBSkFBMEFDZnlBREtBSUVJZ0lnQXlnQ2FFY0VRQ0FESUFKQkFXbzJBZ1FnQWkwQUFBd0JDeUFERUUwTElnSWdCbW90QUNGRkRRRWdCaUFDT2dBYklBWkJIR29nQmtFYmFrRUJJQVpCcUFKcUVJWURJZ0pCZmtZTkFFRUFJUWtnQWtGL1JnMExJQUFFUUNBQUlBUkJBblJxSUFZb0FodzJBZ0FnQkVFQmFpRUVDeUFNSUFRZ0JVWnhSUTBBQzBFQklRY2dBQ0FGUVFGMFFRRnlJZ1ZCQW5RUXl3SWlBZzBCREFzTEMwRUFJUWtnQUNFRklBWkJxQUpxQkg4Z0JpZ0NxQUlGUVFBTERRZ01BUXNnREFSQVFRQWhCQ0FGRURjaUFrVU5CZ05BSUFJaEFBTkFBbjhnQXlnQ0JDSUNJQU1vQW1oSEJFQWdBeUFDUVFGcU5nSUVJQUl0QUFBTUFRc2dBeEJOQ3lJQ0lBWnFMUUFoUlFSQVFRQWhCU0FBSVFrTUJBc2dBQ0FFYWlBQ09nQUFJQVJCQVdvaUJDQUZSdzBBQzBFQklRY2dBQ0FGUVFGMFFRRnlJZ1VReXdJaUFnMEFDeUFBSVFsQkFDRUFEQWtMUVFBaEJDQUlCRUFEUUFKL0lBTW9BZ1FpQUNBREtBSm9Sd1JBSUFNZ0FFRUJhallDQkNBQUxRQUFEQUVMSUFNUVRRc2lBQ0FHYWkwQUlRUkFJQVFnQ0dvZ0FEb0FBQ0FFUVFGcUlRUU1BUVZCQUNFRklBZ2lBQ0VKREFNTEFBc0FDd05BQW44Z0F5Z0NCQ0lBSUFNb0FtaEhCRUFnQXlBQVFRRnFOZ0lFSUFBdEFBQU1BUXNnQXhCTkN5QUdhaTBBSVEwQUMwRUFJUUJCQUNFSlFRQWhCUXNnQXlnQ0JDRUNJQU1wQTNCQ0FGa0VRQ0FESUFKQkFXc2lBallDQkFzZ0F5a0RlQ0FDSUFNb0FpeHJySHdpRTFBZ0MwSGpBRVlnRWlBVFVuRnlEUUlnREFSQUlBZ2dBRFlDQUFzQ1FDQUtEUUFnQlFSQUlBVWdCRUVDZEdwQkFEWUNBQXNnQ1VVRVFFRUFJUWtNQVFzZ0JDQUpha0VBT2dBQUN5QUZJUUFMSUFNb0FnUWdBeWdDTEd1c0lBTXBBM2dnRkh4OElSUWdEU0FJUVFCSGFpRU5DeUFCUVFGcUlRUWdBUzBBQVNJQkRRRU1DQXNMSUFVaEFBd0JDMEVCSVFkQkFDRUpRUUFoQUF3Q0N5QU1JUWNNQXdzZ0RDRUhDeUFORFFFTFFYOGhEUXNnQjBVTkFDQUpFREVnQUJBeEN5QUdRYkFDYWlRQUlBMGhBQ0FEUVpBQmFpUUFJQUFMUXdBQ1FDQUFSUTBBQWtBQ1FBSkFBa0FnQVVFQ2FnNEdBQUVDQWdRREJBc2dBQ0FDUEFBQUR3c2dBQ0FDUFFFQUR3c2dBQ0FDUGdJQUR3c2dBQ0FDTndNQUN3dVFCQUlEZndGK0FrQUNRQUovQWtBQ1FBSi9JQUFvQWdRaUFpQUFLQUpvUndSQUlBQWdBa0VCYWpZQ0JDQUNMUUFBREFFTElBQVFUUXNpQWtFcmF3NERBQUVBQVFzZ0FrRXRSaUFCUlFKL0lBQW9BZ1FpQXlBQUtBSm9Sd1JBSUFBZ0EwRUJhallDQkNBRExRQUFEQUVMSUFBUVRRc2lBMEU2YXlJQlFYVkxjZzBCR2lBQUtRTndRZ0JURFFJZ0FDQUFLQUlFUVFGck5nSUVEQUlMSUFKQk9tc2hBU0FDSVFOQkFBc2hCQ0FCUVhaSkRRQWdBMEV3YXlJQlFRcEpCRUJCQUNFQ0EwQWdBeUFDUVFwc2FpRUJBbjhnQUNnQ0JDSUNJQUFvQW1oSEJFQWdBQ0FDUVFGcU5nSUVJQUl0QUFBTUFRc2dBQkJOQ3lFRElBRkJNR3NoQWlBQ1FjeVpzK1lBU0NBRFFUQnJJZ0ZCQ1UxeERRQUxJQUtzSVFVTEFrQWdBVUVLVHcwQUEwQWdBNjBnQlVJS2ZueENNSDBoQlFKL0lBQW9BZ1FpQVNBQUtBSm9Sd1JBSUFBZ0FVRUJhallDQkNBQkxRQUFEQUVMSUFBUVRRc2lBMEV3YXlJQlFRbExEUUVnQlVLdWo0WFh4OExyb3dGVERRQUxDeUFCUVFwSkJFQURRQUovSUFBb0FnUWlBU0FBS0FKb1J3UkFJQUFnQVVFQmFqWUNCQ0FCTFFBQURBRUxJQUFRVFF0Qk1HdEJDa2tOQUFzTElBQXBBM0JDQUZrRVFDQUFJQUFvQWdSQkFXczJBZ1FMUWdBZ0JYMGdCU0FFR3lFRkRBRUxRb0NBZ0lDQWdJQ0FnSDhoQlNBQUtRTndRZ0JURFFBZ0FDQUFLQUlFUVFGck5nSUVRb0NBZ0lDQWdJQ0FnSDhQQ3lBRkM5RXlBeEIvQjM0QmZDTUFRVEJySWd3a0FBSkFJQUpCQWswRVFDQUNRUUowSWdKQjdQY0NhaWdDQUNFUElBSkI0UGNDYWlnQ0FDRU9BMEFDZnlBQktBSUVJZ0lnQVNnQ2FFY0VRQ0FCSUFKQkFXbzJBZ1FnQWkwQUFBd0JDeUFCRUUwTElnSVE1d0VOQUF0QkFTRUdBa0FDUUNBQ1FTdHJEZ01BQVFBQkMwRi9RUUVnQWtFdFJoc2hCaUFCS0FJRUlnSWdBU2dDYUVjRVFDQUJJQUpCQVdvMkFnUWdBaTBBQUNFQ0RBRUxJQUVRVFNFQ0N3SkFBa0FEUUNBRlFmZlRBV29zQUFBZ0FrRWdja1lFUUFKQUlBVkJCa3NOQUNBQktBSUVJZ0lnQVNnQ2FFY0VRQ0FCSUFKQkFXbzJBZ1FnQWkwQUFDRUNEQUVMSUFFUVRTRUNDeUFGUVFGcUlnVkJDRWNOQVF3Q0N3c2dCVUVEUndSQUlBVkJDRVlOQVNBRFJTQUZRUVJKY2cwQ0lBVkJDRVlOQVFzZ0FTa0RjQ0lVUWdCWkJFQWdBU0FCS0FJRVFRRnJOZ0lFQ3lBRFJTQUZRUVJKY2cwQUlCUkNBRk1oQWdOQUlBSkZCRUFnQVNBQktBSUVRUUZyTmdJRUN5QUZRUUZySWdWQkEwc05BQXNMUWdBaEZDTUFRUkJySWdJa0FBSitJQWF5UXdBQWdIK1V2Q0lEUWYvLy8vOEhjU0lCUVlDQWdBUnJRZi8vLy9jSFRRUkFJQUd0UWhtR1FvQ0FnSUNBZ0lEQVAzd01BUXNnQTYxQ0dZWkNnSUNBZ0lDQXdQLy9BSVFnQVVHQWdJRDhCMDhOQUJwQ0FDQUJSUTBBR2lBQ0lBR3RRZ0FnQVdjaUFVSFJBR29RaHdFZ0Fpa0RBQ0VVSUFJcEF3aENnSUNBZ0lDQXdBQ0ZRWW4vQUNBQmE2MUNNSWFFQ3lFVklBd2dGRGNEQUNBTUlCVWdBMEdBZ0lDQWVIR3RRaUNHaERjRENDQUNRUkJxSkFBZ0RDa0RDQ0VVSUF3cEF3QWhGUXdDQ3dKQUFrQUNRQ0FGRFFCQkFDRUZBMEFnQlVIMTZRRnFMQUFBSUFKQklISkhEUUVDUUNBRlFRRkxEUUFnQVNnQ0JDSUNJQUVvQW1oSEJFQWdBU0FDUVFGcU5nSUVJQUl0QUFBaEFnd0JDeUFCRUUwaEFnc2dCVUVCYWlJRlFRTkhEUUFMREFFTEFrQUNRQ0FGRGdRQUFRRUNBUXNDUUNBQ1FUQkhEUUFDZnlBQktBSUVJZ1VnQVNnQ2FFY0VRQ0FCSUFWQkFXbzJBZ1FnQlMwQUFBd0JDeUFCRUUwTFFWOXhRZGdBUmdSQUl3QkJzQU5ySWdJa0FBSi9JQUVvQWdRaUJTQUJLQUpvUndSQUlBRWdCVUVCYWpZQ0JDQUZMUUFBREFFTElBRVFUUXNoQlFKQUFuOERRQ0FGUVRCSEJFQUNRQ0FGUVM1SERRUWdBU2dDQkNJRklBRW9BbWhHRFFBZ0FTQUZRUUZxTmdJRUlBVXRBQUFNQXdzRklBRW9BZ1FpQlNBQktBSm9Sd1IvUVFFaENpQUJJQVZCQVdvMkFnUWdCUzBBQUFWQkFTRUtJQUVRVFFzaEJRd0JDd3NnQVJCTkN5RUZRUUVoQkNBRlFUQkhEUUFEUUNBWFFnRjlJUmNDZnlBQktBSUVJZ1VnQVNnQ2FFY0VRQ0FCSUFWQkFXbzJBZ1FnQlMwQUFBd0JDeUFCRUUwTElnVkJNRVlOQUF0QkFTRUtDMEtBZ0lDQWdJREEvejhoRlFOQUFrQWdCVUVnY2lFTEFrQUNRQ0FGUVRCcklnaEJDa2tOQUNBRlFTNUhJQXRCNFFCclFRWlBjUTBDSUFWQkxrY05BQ0FFRFFKQkFTRUVJQlFoRnd3QkN5QUxRZGNBYXlBSUlBVkJPVW9iSVFVQ1FDQVVRZ2RYQkVBZ0JTQUpRUVIwYWlFSkRBRUxJQlJDSEZnRVFDQUNRVEJxSUFVUXBRRWdBa0VnYWlBWklCVkNBRUtBZ0lDQWdJREEvVDhRV2lBQ1FSQnFJQUlwQXpBZ0Fpa0RPQ0FDS1FNZ0loa2dBaWtES0NJVkVGb2dBaUFDS1FNUUlBSXBBeGdnRmlBWUVKMEJJQUlwQXdnaEdDQUNLUU1BSVJZTUFRc2dCVVVnQjNJTkFDQUNRZEFBYWlBWklCVkNBRUtBZ0lDQWdJQ0EvejhRV2lBQ1FVQnJJQUlwQTFBZ0Fpa0RXQ0FXSUJnUW5RRWdBaWtEU0NFWVFRRWhCeUFDS1FOQUlSWUxJQlJDQVh3aEZFRUJJUW9MSUFFb0FnUWlCU0FCS0FKb1J3Ui9JQUVnQlVFQmFqWUNCQ0FGTFFBQUJTQUJFRTBMSVFVTUFRc0xBbjRnQ2tVRVFBSkFBa0FnQVNrRGNFSUFXUVJBSUFFZ0FTZ0NCQ0lGUVFGck5nSUVJQU5GRFFFZ0FTQUZRUUpyTmdJRUlBUkZEUUlnQVNBRlFRTnJOZ0lFREFJTElBTU5BUXNnQVVJQUVMOEJDeUFDUWVBQWFpQUd0MFFBQUFBQUFBQUFBS0lReXdFZ0Fpa0RZQ0VXSUFJcEEyZ01BUXNnRkVJSFZ3UkFJQlFoRlFOQUlBbEJCSFFoQ1NBVlFnRjhJaFZDQ0ZJTkFBc0xBa0FDUUFKQUlBVkJYM0ZCMEFCR0JFQWdBU0FERUlVRkloVkNnSUNBZ0lDQWdJQ0FmMUlOQXlBREJFQWdBU2tEY0VJQVdRMENEQU1MUWdBaEZpQUJRZ0FRdndGQ0FBd0VDMElBSVJVZ0FTa0RjRUlBVXcwQ0N5QUJJQUVvQWdSQkFXczJBZ1FMUWdBaEZRc2dDVVVFUUNBQ1FmQUFhaUFHdDBRQUFBQUFBQUFBQUtJUXl3RWdBaWtEY0NFV0lBSXBBM2dNQVFzZ0Z5QVVJQVFiUWdLR0lCVjhRaUI5SWhSQkFDQVBhNjFWQkVCQnRJd0VRY1FBTmdJQUlBSkJvQUZxSUFZUXBRRWdBa0dRQVdvZ0Fpa0RvQUVnQWlrRHFBRkNmMEwvLy8vLy8vKy8vLzhBRUZvZ0FrR0FBV29nQWlrRGtBRWdBaWtEbUFGQ2YwTC8vLy8vLy8rLy8vOEFFRm9nQWlrRGdBRWhGaUFDS1FPSUFRd0JDeUFQUWVJQmE2d2dGRmNFUUNBSlFRQk9CRUFEUUNBQ1FhQURhaUFXSUJoQ0FFS0FnSUNBZ0lEQS83OS9FSjBCSUJZZ0dFS0FnSUNBZ0lDQS96OFEvd1FoQVNBQ1FaQURhaUFXSUJnZ0ZpQUNLUU9nQXlBQlFRQklJZ01iSUJnZ0Fpa0RxQU1nQXhzUW5RRWdGRUlCZlNFVUlBSXBBNWdESVJnZ0Fpa0RrQU1oRmlBSlFRRjBJQUZCQUU1eUlnbEJBRTROQUFzTEFuNGdGQ0FQckgxQ0lId2lGYWNpQVVFQUlBRkJBRW9iSUE0Z0ZTQU9yVk1iSWdGQjhRQk9CRUFnQWtHQUEyb2dCaENsQVNBQ0tRT0lBeUVYSUFJcEE0QURJUmxDQUF3QkN5QUNRZUFDYWtRQUFBQUFBQUR3UDBHUUFTQUJheERtQVJETEFTQUNRZEFDYWlBR0VLVUJJQUpCOEFKcUlBSXBBK0FDSUFJcEErZ0NJQUlwQTlBQ0loa2dBaWtEMkFJaUZ4Q0pCU0FDS1FQNEFpRWFJQUlwQS9BQ0N5RVZJQUpCd0FKcUlBa2dDVUVCY1VVZ0ZpQVlRZ0JDQUJDQ0FrRUFSeUFCUVNCSWNYRWlBV29RbmdJZ0FrR3dBbW9nR1NBWElBSXBBOEFDSUFJcEE4Z0NFRm9nQWtHUUFtb2dBaWtEc0FJZ0Fpa0R1QUlnRlNBYUVKMEJJQUpCb0FKcUlCa2dGMElBSUJZZ0FSdENBQ0FZSUFFYkVGb2dBa0dBQW1vZ0Fpa0RvQUlnQWlrRHFBSWdBaWtEa0FJZ0Fpa0RtQUlRblFFZ0FrSHdBV29nQWlrRGdBSWdBaWtEaUFJZ0ZTQWFFTnNESUFJcEEvQUJJaFVnQWlrRCtBRWlGMElBUWdBUWdnSkZCRUJCdEl3RVFjUUFOZ0lBQ3lBQ1FlQUJhaUFWSUJjZ0ZLY1FpQVVnQWlrRDRBRWhGaUFDS1FQb0FRd0JDMEcwakFSQnhBQTJBZ0FnQWtIUUFXb2dCaENsQVNBQ1FjQUJhaUFDS1FQUUFTQUNLUVBZQVVJQVFvQ0FnSUNBZ01BQUVGb2dBa0d3QVdvZ0Fpa0R3QUVnQWlrRHlBRkNBRUtBZ0lDQWdJREFBQkJhSUFJcEE3QUJJUllnQWlrRHVBRUxJUlFnRENBV053TVFJQXdnRkRjREdDQUNRYkFEYWlRQUlBd3BBeGdoRkNBTUtRTVFJUlVNQmdzZ0FTa0RjRUlBVXcwQUlBRWdBU2dDQkVFQmF6WUNCQXNnQVNFRklBWWhDU0FESVFwQkFDRURRUUFoQmlNQVFaREdBR3NpQkNRQVFRQWdEaUFQYWlJU2F5RVRBa0FDZndOQUlBSkJNRWNFUUFKQUlBSkJMa2NOQkNBRktBSUVJZ0VnQlNnQ2FFWU5BQ0FGSUFGQkFXbzJBZ1FnQVMwQUFBd0RDd1VnQlNnQ0JDSUJJQVVvQW1oSEJIOUJBU0VESUFVZ0FVRUJhallDQkNBQkxRQUFCVUVCSVFNZ0JSQk5DeUVDREFFTEN5QUZFRTBMSVFKQkFTRUhJQUpCTUVjTkFBTkFJQlJDQVgwaEZBSi9JQVVvQWdRaUFTQUZLQUpvUndSQUlBVWdBVUVCYWpZQ0JDQUJMUUFBREFFTElBVVFUUXNpQWtFd1JnMEFDMEVCSVFNTElBUkJBRFlDa0FZZ0RBSitBa0FDUUFKQUFrQUNRQ0FDUVM1R0lnRWdBa0V3YXlJSVFRbE5jZ1JBQTBBQ1FDQUJRUUZ4QkVBZ0IwVUVRQ0FWSVJSQkFTRUhEQUlMSUFORklRRU1CQXNnRlVJQmZDRVZJQVpCL0E5TUJFQWdEU0FWcHlBQ1FUQkdHeUVOSUFSQmtBWnFJQVpCQW5ScUlnRWdDd1IvSUFJZ0FTZ0NBRUVLYkdwQk1Hc0ZJQWdMTmdJQVFRRWhBMEVBSUF0QkFXb2lBU0FCUVFsR0lnRWJJUXNnQVNBR2FpRUdEQUVMSUFKQk1FWU5BQ0FFSUFRb0FvQkdRUUZ5TmdLQVJrSGNqd0VoRFFzQ2Z5QUZLQUlFSWdFZ0JTZ0NhRWNFUUNBRklBRkJBV28yQWdRZ0FTMEFBQXdCQ3lBRkVFMExJZ0pCTGtZaUFTQUNRVEJySWdoQkNrbHlEUUFMQ3lBVUlCVWdCeHNoRkNBRFJTQUNRVjl4UWNVQVIzSkZCRUFDUUNBRklBb1FoUVVpRmtLQWdJQ0FnSUNBZ0lCL1VnMEFJQXBGRFFWQ0FDRVdJQVVwQTNCQ0FGTU5BQ0FGSUFVb0FnUkJBV3MyQWdRTElBTkZEUU1nRkNBV2ZDRVVEQVVMSUFORklRRWdBa0VBU0EwQkN5QUZLUU53UWdCVERRQWdCU0FGS0FJRVFRRnJOZ0lFQ3lBQlJRMENDMEcwakFSQkhEWUNBQXRDQUNFVklBVkNBQkMvQVVJQURBRUxJQVFvQXBBR0lnRkZCRUFnQkNBSnQwUUFBQUFBQUFBQUFLSVF5d0VnQkNrREFDRVZJQVFwQXdnTUFRc2dGQ0FWVWlBVlFnbFZjaUFPUVI1TVFRQWdBU0FPZGh0eVJRUkFJQVJCTUdvZ0NSQ2xBU0FFUVNCcUlBRVFuZ0lnQkVFUWFpQUVLUU13SUFRcEF6Z2dCQ2tESUNBRUtRTW9FRm9nQkNrREVDRVZJQVFwQXhnTUFRc2dEMEYrYmEwZ0ZGTUVRRUcwakFSQnhBQTJBZ0FnQkVIZ0FHb2dDUkNsQVNBRVFkQUFhaUFFS1FOZ0lBUXBBMmhDZjBMLy8vLy8vLysvLy84QUVGb2dCRUZBYXlBRUtRTlFJQVFwQTFoQ2YwTC8vLy8vLy8rLy8vOEFFRm9nQkNrRFFDRVZJQVFwQTBnTUFRc2dEMEhpQVd1c0lCUlZCRUJCdEl3RVFjUUFOZ0lBSUFSQmtBRnFJQWtRcFFFZ0JFR0FBV29nQkNrRGtBRWdCQ2tEbUFGQ0FFS0FnSUNBZ0lEQUFCQmFJQVJCOEFCcUlBUXBBNEFCSUFRcEE0Z0JRZ0JDZ0lDQWdJQ0F3QUFRV2lBRUtRTndJUlVnQkNrRGVBd0JDeUFMQkVBZ0MwRUlUQVJBSUFSQmtBWnFJQVpCQW5ScUlnRW9BZ0FoQlFOQUlBVkJDbXdoQlNBTFFRRnFJZ3RCQ1VjTkFBc2dBU0FGTmdJQUN5QUdRUUZxSVFZTEFrQWdEU0FVcHlJSFNpQU5RUWxPY2lBSFFSRktjZzBBSUFkQkNVWUVRQ0FFUWNBQmFpQUpFS1VCSUFSQnNBRnFJQVFvQXBBR0VKNENJQVJCb0FGcUlBUXBBOEFCSUFRcEE4Z0JJQVFwQTdBQklBUXBBN2dCRUZvZ0JDa0RvQUVoRlNBRUtRT29BUXdDQ3lBSFFRaE1CRUFnQkVHUUFtb2dDUkNsQVNBRVFZQUNhaUFFS0FLUUJoQ2VBaUFFUWZBQmFpQUVLUU9RQWlBRUtRT1lBaUFFS1FPQUFpQUVLUU9JQWhCYUlBUkI0QUZxUVFBZ0IydEJBblJCNFBjQ2FpZ0NBQkNsQVNBRVFkQUJhaUFFS1FQd0FTQUVLUVA0QVNBRUtRUGdBU0FFS1FQb0FSRCtCQ0FFS1FQUUFTRVZJQVFwQTlnQkRBSUxJQTRnQjBGOWJHcEJHMm9pQVVFZVRFRUFJQVFvQXBBR0lnSWdBWFliRFFBZ0JFSGdBbW9nQ1JDbEFTQUVRZEFDYWlBQ0VKNENJQVJCd0FKcUlBUXBBK0FDSUFRcEErZ0NJQVFwQTlBQ0lBUXBBOWdDRUZvZ0JFR3dBbW9nQjBFQ2RFR1k5d0pxS0FJQUVLVUJJQVJCb0FKcUlBUXBBOEFDSUFRcEE4Z0NJQVFwQTdBQ0lBUXBBN2dDRUZvZ0JDa0RvQUloRlNBRUtRT29BZ3dCQ3dOQUlBUkJrQVpxSUFZaUFrRUJheUlHUVFKMGFpZ0NBRVVOQUF0QkFDRUxBa0FnQjBFSmJ5SURSUVJBUVFBaEFRd0JDMEVBSVFFZ0EwRUphaUFESUFkQkFFZ2JJUU1DUUNBQ1JRUkFRUUFoQWd3QkMwR0FsT3ZjQTBFQUlBTnJRUUowUWVEM0Ftb29BZ0FpQm0waENrRUFJUWhCQUNFRkEwQWdCRUdRQm1vZ0JVRUNkR29pRFNBSUlBMG9BZ0FpRFNBR2JpSVFhaUlJTmdJQUlBRkJBV3BCL3c5eElBRWdDRVVnQVNBRlJuRWlDQnNoQVNBSFFRbHJJQWNnQ0JzaEJ5QUtJQTBnQmlBUWJHdHNJUWdnQlVFQmFpSUZJQUpIRFFBTElBaEZEUUFnQkVHUUJtb2dBa0VDZEdvZ0NEWUNBQ0FDUVFGcUlRSUxJQWNnQTJ0QkNXb2hCd3NEUUNBRVFaQUdhaUFCUVFKMGFpRUZBa0FEUUNBSFFTUk9CRUFnQjBFa1J3MENJQVVvQWdCQjBlbjVCRThOQWdzZ0FrSC9EMm9oQTBFQUlRZ0RRQ0FJclNBRVFaQUdhaUFEUWY4UGNTSUdRUUowYWlJRE5RSUFRaDJHZkNJVVFvR1U2OXdEVkFSL1FRQUZJQlFnRkVLQWxPdmNBNEFpRlVLQWxPdmNBMzU5SVJRZ0ZhY0xJUWdnQXlBVXB5SUROZ0lBSUFJZ0FpQUNJQVlnQXhzZ0FTQUdSaHNnQmlBQ1FRRnJRZjhQY1VjYklRSWdCa0VCYXlFRElBRWdCa2NOQUFzZ0MwRWRheUVMSUFoRkRRQUxJQUlnQVVFQmEwSC9EM0VpQVVZRVFDQUVRWkFHYWlJRElBSkIvZzlxUWY4UGNVRUNkR29pQmlBR0tBSUFJQUpCQVd0Qi93OXhJZ0pCQW5RZ0Eyb29BZ0J5TmdJQUN5QUhRUWxxSVFjZ0JFR1FCbW9nQVVFQ2RHb2dDRFlDQUF3QkN3c0NRQU5BSUFKQkFXcEIvdzl4SVFZZ0JFR1FCbW9nQWtFQmEwSC9EM0ZCQW5ScUlRZ0RRRUVKUVFFZ0IwRXRTaHNoQ2dKQUEwQWdBU0VEUVFBaEJRSkFBMEFDUUNBRElBVnFRZjhQY1NJQklBSkdEUUFnQkVHUUJtb2dBVUVDZEdvb0FnQWlBU0FGUVFKMFFiRDNBbW9vQWdBaURVa05BQ0FCSUExTERRSWdCVUVCYWlJRlFRUkhEUUVMQ3lBSFFTUkhEUUJDQUNFVVFRQWhCVUlBSVJVRFFDQUNJQU1nQldwQi93OXhJZ0ZHQkVBZ0FrRUJha0gvRDNFaUFrRUNkQ0FFYWtFQU5nS01CZ3NnQkVHQUJtb2dCRUdRQm1vZ0FVRUNkR29vQWdBUW5nSWdCRUh3QldvZ0ZDQVZRZ0JDZ0lDQWdPV2F0NDdBQUJCYUlBUkI0QVZxSUFRcEEvQUZJQVFwQS9nRklBUXBBNEFHSUFRcEE0Z0dFSjBCSUFRcEErZ0ZJUlVnQkNrRDRBVWhGQ0FGUVFGcUlnVkJCRWNOQUFzZ0JFSFFCV29nQ1JDbEFTQUVRY0FGYWlBVUlCVWdCQ2tEMEFVZ0JDa0QyQVVRV2lBRUtRUElCU0VWUWdBaEZDQUVLUVBBQlNFV0lBdEI4UUJxSWdjZ0Qyc2lCa0VBSUFaQkFFb2JJQTRnQmlBT1NDSUZHeUlCUWZBQVRBMENEQVVMSUFvZ0Myb2hDeUFESUFJaUFVWU5BQXRCZ0pUcjNBTWdDblloRFVGL0lBcDBRWDl6SVJCQkFDRUZJQU1oQVFOQUlBUkJrQVpxSUFOQkFuUnFJaEVnQlNBUktBSUFJaEVnQ25acUlnVTJBZ0FnQVVFQmFrSC9EM0VnQVNBRlJTQUJJQU5HY1NJRkd5RUJJQWRCQ1dzZ0J5QUZHeUVISUJBZ0VYRWdEV3doQlNBRFFRRnFRZjhQY1NJRElBSkhEUUFMSUFWRkRRRWdBU0FHUndSQUlBUkJrQVpxSUFKQkFuUnFJQVUyQWdBZ0JpRUNEQU1MSUFnZ0NDZ0NBRUVCY2pZQ0FBd0JDd3NMSUFSQmtBVnFSQUFBQUFBQUFQQS9RZUVCSUFGckVPWUJFTXNCSUFSQnNBVnFJQVFwQTVBRklBUXBBNWdGSUJZZ0ZSQ0pCU0FFS1FPNEJTRVpJQVFwQTdBRklSZ2dCRUdBQldwRUFBQUFBQUFBOEQ5QjhRQWdBV3NRNWdFUXl3RWdCRUdnQldvZ0ZpQVZJQVFwQTRBRklBUXBBNGdGRUljRklBUkI4QVJxSUJZZ0ZTQUVLUU9nQlNJVUlBUXBBNmdGSWhjUTJ3TWdCRUhnQkdvZ0dDQVpJQVFwQS9BRUlBUXBBL2dFRUowQklBUXBBK2dFSVJVZ0JDa0Q0QVFoRmdzQ1FDQURRUVJxUWY4UGNTSUtJQUpHRFFBQ1FDQUVRWkFHYWlBS1FRSjBhaWdDQUNJS1FmL0p0ZTRCVFFSQUlBcEZJQU5CQldwQi93OXhJQUpHY1EwQklBUkI4QU5xSUFtM1JBQUFBQUFBQU5BL29oRExBU0FFUWVBRGFpQVVJQmNnQkNrRDhBTWdCQ2tEK0FNUW5RRWdCQ2tENkFNaEZ5QUVLUVBnQXlFVURBRUxJQXBCZ01xMTdnRkhCRUFnQkVIUUJHb2dDYmRFQUFBQUFBQUE2RCtpRU1zQklBUkJ3QVJxSUJRZ0Z5QUVLUVBRQkNBRUtRUFlCQkNkQVNBRUtRUElCQ0VYSUFRcEE4QUVJUlFNQVFzZ0NiY2hHeUFDSUFOQkJXcEIvdzl4UmdSQUlBUkJrQVJxSUJ0RUFBQUFBQUFBNEQraUVNc0JJQVJCZ0FScUlCUWdGeUFFS1FPUUJDQUVLUU9ZQkJDZEFTQUVLUU9JQkNFWElBUXBBNEFFSVJRTUFRc2dCRUd3QkdvZ0cwUUFBQUFBQUFEb1A2SVF5d0VnQkVHZ0JHb2dGQ0FYSUFRcEE3QUVJQVFwQTdnRUVKMEJJQVFwQTZnRUlSY2dCQ2tEb0FRaEZBc2dBVUh2QUVvTkFDQUVRZEFEYWlBVUlCZENBRUtBZ0lDQWdJREEvejhRaHdVZ0JDa0QwQU1nQkNrRDJBTkNBRUlBRUlJQ0RRQWdCRUhBQTJvZ0ZDQVhRZ0JDZ0lDQWdJQ0F3UDgvRUowQklBUXBBOGdESVJjZ0JDa0R3QU1oRkFzZ0JFR3dBMm9nRmlBVklCUWdGeENkQVNBRVFhQURhaUFFS1FPd0F5QUVLUU80QXlBWUlCa1Eyd01nQkNrRHFBTWhGU0FFS1FPZ0F5RVdBa0JCZmlBU2F5QUhRZi8vLy84SGNVNE5BQ0FFSUJWQy8vLy8vLy8vLy8vL0FJTTNBNWdESUFRZ0ZqY0RrQU1nQkVHQUEyb2dGaUFWUWdCQ2dJQ0FnSUNBZ1A4L0VGb2dCQ2tEa0FNZ0JDa0RtQU5DZ0lDQWdJQ0FnTGpBQUJEL0JDRUNJQlVnQkNrRGlBTWdBa0VBU0NJREd5RVZJQllnQkNrRGdBTWdBeHNoRmtFQUlCTWdDeUFDUVFCT2FpSUxRZTRBYWs0Z0ZDQVhRZ0JDQUJDQ0FrRUFSeUFGSUFVZ0FTQUdSM0VnQXh0eEd3MEFRYlNNQkVIRUFEWUNBQXNnQkVId0Ftb2dGaUFWSUFzUWlBVWdCQ2tEOEFJaEZTQUVLUVA0QWdzM0F5Z2dEQ0FWTndNZ0lBUkJrTVlBYWlRQUlBd3BBeWdoRkNBTUtRTWdJUlVNQkFzZ0FTa0RjRUlBV1FSQUlBRWdBU2dDQkVFQmF6WUNCQXNNQVFzQ1FBSi9JQUVvQWdRaUFpQUJLQUpvUndSQUlBRWdBa0VCYWpZQ0JDQUNMUUFBREFFTElBRVFUUXRCS0VZRVFFRUJJUVVNQVF0Q2dJQ0FnSUNBNFAvL0FDRVVJQUVwQTNCQ0FGTU5BeUFCSUFFb0FnUkJBV3MyQWdRTUF3c0RRQUovSUFFb0FnUWlBaUFCS0FKb1J3UkFJQUVnQWtFQmFqWUNCQ0FDTFFBQURBRUxJQUVRVFFzaUFrRXdhMEVLU1NBQ1FjRUFhMEVhU1hJZ0FrSGZBRVp5UlNBQ1FlRUFhMEVhVDNGRkJFQWdCVUVCYWlFRkRBRUxDMEtBZ0lDQWdJRGcvLzhBSVJRZ0FrRXBSZzBDSUFFcEEzQWlGMElBV1FSQUlBRWdBU2dDQkVFQmF6WUNCQXNDUUNBREJFQWdCUTBCREFRTERBRUxBMEFnQlVFQmF5RUZJQmRDQUZrRVFDQUJJQUVvQWdSQkFXczJBZ1FMSUFVTkFBc01BZ3RCdEl3RVFSdzJBZ0FnQVVJQUVMOEJDMElBSVJRTElBQWdGVGNEQUNBQUlCUTNBd2dnREVFd2FpUUFDOUFHQWdSL0EzNGpBRUdBQVdzaUJTUUFBa0FDUUFKQUlBTWdCRUlBUWdBUWdnSkZEUUFDZnlBRVF2Ly8vLy8vL3orRElRa0NmeUFFUWpDSXAwSC8vd0Z4SWdaQi8vOEJSd1JBUVFRZ0JnMEJHa0VDUVFNZ0F5QUpoRkFiREFJTElBTWdDWVJRQ3dzaEJ5QUNRakNJcHlJSVFmLy9BWEVpQmtILy93RkdEUUFnQncwQkN5QUZRUkJxSUFFZ0FpQURJQVFRV2lBRklBVXBBeEFpQVNBRktRTVlJZ0lnQVNBQ0VQNEVJQVVwQXdnaEFpQUZLUU1BSVFRTUFRc2dBU0FDUXYvLy8vLy8veitESUFhdFFqQ0doQ0lLSUFNZ0JFTC8vLy8vLy84L2d5QUVRakNJcDBILy93RnhJZ2V0UWpDR2hDSUpFSUlDUVFCTUJFQWdBU0FLSUFNZ0NSQ0NBZ1JBSUFFaEJBd0NDeUFGUWZBQWFpQUJJQUpDQUVJQUVGb2dCU2tEZUNFQ0lBVXBBM0FoQkF3QkN5QUdCSDRnQVFVZ0JVSGdBR29nQVNBS1FnQkNnSUNBZ0lDQXdMdkFBQkJhSUFVcEEyZ2lDa0l3aUtkQitBQnJJUVlnQlNrRFlBc2hCQ0FIUlFSQUlBVkIwQUJxSUFNZ0NVSUFRb0NBZ0lDQWdNQzd3QUFRV2lBRktRTllJZ2xDTUlpblFmZ0FheUVISUFVcEExQWhBd3NnQ1VMLy8vLy8vLzgvZzBLQWdJQ0FnSURBQUlRaENTQUtRdi8vLy8vLy96K0RRb0NBZ0lDQWdNQUFoQ0VLSUFZZ0Iwb0VRQU5BQW40Z0NpQUpmU0FESUFSV3JYMGlDMElBV1FSQUlBc2dCQ0FEZlNJRWhGQUVRQ0FGUVNCcUlBRWdBa0lBUWdBUVdpQUZLUU1vSVFJZ0JTa0RJQ0VFREFVTElBdENBWVlnQkVJL2lJUU1BUXNnQ2tJQmhpQUVRaitJaEFzaENpQUVRZ0dHSVFRZ0JrRUJheUlHSUFkS0RRQUxJQWNoQmdzQ1FDQUtJQWw5SUFNZ0JGYXRmU0lKUWdCVEJFQWdDaUVKREFFTElBa2dCQ0FEZlNJRWhFSUFVZzBBSUFWQk1Hb2dBU0FDUWdCQ0FCQmFJQVVwQXpnaEFpQUZLUU13SVFRTUFRc2dDVUwvLy8vLy8vOC9XQVJBQTBBZ0JFSS9pQ0VCSUFaQkFXc2hCaUFFUWdHR0lRUWdBU0FKUWdHR2hDSUpRb0NBZ0lDQWdNQUFWQTBBQ3dzZ0NFR0FnQUp4SVFjZ0JrRUFUQVJBSUFWQlFHc2dCQ0FKUXYvLy8vLy8veitESUFaQitBQnFJQWR5clVJd2hvUkNBRUtBZ0lDQWdJREF3ejhRV2lBRktRTklJUUlnQlNrRFFDRUVEQUVMSUFsQy8vLy8vLy8vUDRNZ0JpQUhjcTFDTUlhRUlRSUxJQUFnQkRjREFDQUFJQUkzQXdnZ0JVR0FBV29rQUF1L0FnRUJmeU1BUWRBQWF5SUVKQUFDUUNBRFFZQ0FBVTRFUUNBRVFTQnFJQUVnQWtJQVFvQ0FnSUNBZ0lELy93QVFXaUFFS1FNb0lRSWdCQ2tESUNFQklBTkIvLzhCU1FSQUlBTkIvLzhBYXlFRERBSUxJQVJCRUdvZ0FTQUNRZ0JDZ0lDQWdJQ0FnUC8vQUJCYUlBTkIvZjhDSUFOQi9mOENTQnRCL3Y4QmF5RURJQVFwQXhnaEFpQUVLUU1RSVFFTUFRc2dBMEdCZ0g5S0RRQWdCRUZBYXlBQklBSkNBRUtBZ0lDQWdJQ0FPUkJhSUFRcEEwZ2hBaUFFS1FOQUlRRWdBMEgwZ0g1TEJFQWdBMEdOL3dCcUlRTU1BUXNnQkVFd2FpQUJJQUpDQUVLQWdJQ0FnSUNBT1JCYUlBTkI2SUY5SUFOQjZJRjlTaHRCbXY0QmFpRURJQVFwQXpnaEFpQUVLUU13SVFFTElBUWdBU0FDUWdBZ0EwSC8vd0JxclVJd2hoQmFJQUFnQkNrRENEY0RDQ0FBSUFRcEF3QTNBd0FnQkVIUUFHb2tBQXMxQUNBQUlBRTNBd0FnQUNBQ1F2Ly8vLy8vL3orRElBUkNNSWluUVlDQUFuRWdBa0l3aUtkQi8vOEJjWEt0UWpDR2hEY0RDQXNRQUNBQUlBRWdBa0VBUVFBUWpnVWFDOFFDQUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFGQkNXc09FZ0FLQ3d3S0N3SURCQVVNQ3d3TUNnc0hDQWtMSUFJZ0FpZ0NBQ0lCUVFScU5nSUFJQUFnQVNnQ0FEWUNBQThMQUFzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk1nRUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk13RUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk1BQUFOd01BRHdzZ0FpQUNLQUlBSWdGQkJHbzJBZ0FnQUNBQk1RQUFOd01BRHdzQUN5QUNJQUlvQWdCQkIycEJlSEVpQVVFSWFqWUNBQ0FBSUFFckF3QTVBd0FQQ3lBQUlBSWdBeEVDQUFzUEN5QUNJQUlvQWdBaUFVRUVhallDQUNBQUlBRTBBZ0EzQXdBUEN5QUNJQUlvQWdBaUFVRUVhallDQUNBQUlBRTFBZ0EzQXdBUEN5QUNJQUlvQWdCQkIycEJlSEVpQVVFSWFqWUNBQ0FBSUFFcEF3QTNBd0FMYlFFRWZ5QUFLQUlBTEFBQUVNQUJSUVJBUVFBUEN3TkFJQUFvQWdBaEEwRi9JUUVnQWtITW1iUG1BRTBFUUVGL0lBTXNBQUJCTUdzaUJDQUNRUXBzSWdGcUlBUWdBVUgvLy8vL0IzTktHeUVCQ3lBQUlBTkJBV28yQWdBZ0FTRUNJQU1zQUFFUXdBRU5BQXNnQWd2L0VnSVNmd0YrSXdCQjBBQnJJZ2drQUNBSUlBRTJBa3dnQ0VFM2FpRVhJQWhCT0dvaEVnSkFBa0FDUUFKQUEwQWdBU0VNSUFjZ0RrSC8vLy8vQjNOS0RRRWdCeUFPYWlFT0FrQUNRQUpBSUF3aUJ5MEFBQ0lKQkVBRFFBSkFBa0FnQ1VIL0FYRWlBVVVFUUNBSElRRU1BUXNnQVVFbFJ3MEJJQWNoQ1FOQUlBa3RBQUZCSlVjRVFDQUpJUUVNQWdzZ0IwRUJhaUVISUFrdEFBSWhDaUFKUVFKcUlnRWhDU0FLUVNWR0RRQUxDeUFISUF4cklnY2dEa0gvLy8vL0IzTWlHRW9OQnlBQUJFQWdBQ0FNSUFjUWhBRUxJQWNOQmlBSUlBRTJBa3dnQVVFQmFpRUhRWDhoRHdKQUlBRXNBQUVRd0FGRkRRQWdBUzBBQWtFa1J3MEFJQUZCQTJvaEJ5QUJMQUFCUVRCcklROUJBU0VUQ3lBSUlBYzJBa3hCQUNFTkFrQWdCeXdBQUNJSlFTQnJJZ0ZCSDBzRVFDQUhJUW9NQVFzZ0J5RUtRUUVnQVhRaUFVR0owUVJ4UlEwQUEwQWdDQ0FIUVFGcUlnbzJBa3dnQVNBTmNpRU5JQWNzQUFFaUNVRWdheUlCUVNCUERRRWdDaUVIUVFFZ0FYUWlBVUdKMFFSeERRQUxDd0pBSUFsQktrWUVRQUovQWtBZ0Npd0FBUkRBQVVVTkFDQUtMUUFDUVNSSERRQWdDaXdBQVVFQ2RDQUVha0hBQVd0QkNqWUNBQ0FLUVFOcUlRbEJBU0VUSUFvc0FBRkJBM1FnQTJwQmdBTnJLQUlBREFFTElCTU5CaUFLUVFGcUlRa2dBRVVFUUNBSUlBazJBa3hCQUNFVFFRQWhFQXdEQ3lBQ0lBSW9BZ0FpQVVFRWFqWUNBRUVBSVJNZ0FTZ0NBQXNoRUNBSUlBazJBa3dnRUVFQVRnMEJRUUFnRUdzaEVDQU5RWURBQUhJaERRd0JDeUFJUWN3QWFoQ01CU0lRUVFCSURRZ2dDQ2dDVENFSkMwRUFJUWRCZnlFTEFuOGdDUzBBQUVFdVJ3UkFJQWtoQVVFQURBRUxJQWt0QUFGQktrWUVRQUovQWtBZ0NTd0FBaERBQVVVTkFDQUpMUUFEUVNSSERRQWdDU3dBQWtFQ2RDQUVha0hBQVd0QkNqWUNBQ0FKUVFScUlRRWdDU3dBQWtFRGRDQURha0dBQTJzb0FnQU1BUXNnRXcwR0lBbEJBbW9oQVVFQUlBQkZEUUFhSUFJZ0FpZ0NBQ0lLUVFScU5nSUFJQW9vQWdBTElRc2dDQ0FCTmdKTUlBdEJmM05CSDNZTUFRc2dDQ0FKUVFGcU5nSk1JQWhCekFCcUVJd0ZJUXNnQ0NnQ1RDRUJRUUVMSVJRQ1FBTkFJQWNoRlNBQkloRXNBQUFpQjBIN0FHdEJSa2tOQVNBUlFRRnFJUUVnQnlBVlFUcHNha0gvOFFKcUxRQUFJZ2RCQVd0QkNFa05BQXNnQ0NBQk5nSk1RUndoQ2dKQUFrQWdCMEViUndSQUlBZEZEUXdnRDBFQVRnUkFJQVFnRDBFQ2RHb2dCellDQUNBSUlBTWdEMEVEZEdvcEF3QTNBMEFNQWdzZ0FFVU5DU0FJUVVCcklBY2dBaUFHRUlzRkRBSUxJQTlCQUU0TkN3dEJBQ0VISUFCRkRRZ0xJQTFCLy85N2NTSUpJQTBnRFVHQXdBQnhHeUVOUVFBaEQwSE8xd0VoRmlBU0lRb0NRQUpBQWtBQ2Z3SkFBa0FDUUFKQUFuOENRQUpBQWtBQ1FBSkFBa0FDUUNBUkxBQUFJZ2RCWDNFZ0J5QUhRUTl4UVFOR0d5QUhJQlViSWdkQjJBQnJEaUVFRlJVVkZSVVZGUlVPRlE4R0RnNE9GUVlWRlJVVkFnVURGUlVKRlFFVkZRUUFDd0pBSUFkQndRQnJEZ2NPRlFzVkRnNE9BQXNnQjBIVEFFWU5DUXdVQ3lBSUtRTkFJUmxCenRjQkRBVUxRUUFoQndKQUFrQUNRQUpBQWtBQ1FBSkFJQlZCL3dGeERnZ0FBUUlEQkJzRkJoc0xJQWdvQWtBZ0RqWUNBQXdhQ3lBSUtBSkFJQTQyQWdBTUdRc2dDQ2dDUUNBT3JEY0RBQXdZQ3lBSUtBSkFJQTQ3QVFBTUZ3c2dDQ2dDUUNBT09nQUFEQllMSUFnb0FrQWdEallDQUF3VkN5QUlLQUpBSUE2c053TUFEQlFMSUF0QkNDQUxRUWhMR3lFTElBMUJDSEloRFVINEFDRUhDeUFTSVF3Z0IwRWdjU0VSSUFncEEwQWlHVkJGQkVBRFFDQU1RUUZySWd3Z0dhZEJEM0ZCa1BZQ2FpMEFBQ0FSY2pvQUFDQVpRZzlXSVFrZ0dVSUVpQ0VaSUFrTkFBc0xJQTFCQ0hGRklBZ3BBMEJRY2cwRElBZEJCSFpCenRjQmFpRVdRUUloRHd3REN5QVNJUWNnQ0NrRFFDSVpVRVVFUUFOQUlBZEJBV3NpQnlBWnAwRUhjVUV3Y2pvQUFDQVpRZ2RXSVF3Z0dVSURpQ0VaSUF3TkFBc0xJQWNoRENBTlFRaHhSUTBDSUFzZ0VpQU1heUlIUVFGcUlBY2dDMGdiSVFzTUFnc2dDQ2tEUUNJWlFnQlRCRUFnQ0VJQUlCbDlJaGszQTBCQkFTRVBRYzdYQVF3QkN5QU5RWUFRY1FSQVFRRWhEMEhQMXdFTUFRdEIwTmNCUWM3WEFTQU5RUUZ4SWc4YkN5RVdJQmtnRWhDZkFpRU1DeUFVUVFBZ0MwRUFTQnNORHlBTlFmLy9lM0VnRFNBVUd5RU5JQWdwQTBBaUdVSUFVaUFMY2tVRVFDQVNJZ3doQ2tFQUlRc01EUXNnQ3lBWlVDQVNJQXhyYWlJSElBY2dDMGdiSVFzTURBc2dDQ2dDUUNJSFFiR1RBaUFIR3lJTVFRQWdDMEgvLy8vL0J5QUxRZi8vLy84SFNSc2lDaERoQXlJSElBeHJJQW9nQnhzaUJ5QU1haUVLSUF0QkFFNEVRQ0FKSVEwZ0J5RUxEQXdMSUFraERTQUhJUXNnQ2kwQUFBME9EQXNMSUFzRVFDQUlLQUpBREFJTFFRQWhCeUFBUVNBZ0VFRUFJQTBRaUFFTUFnc2dDRUVBTmdJTUlBZ2dDQ2tEUUQ0Q0NDQUlJQWhCQ0dvaUJ6WUNRRUYvSVFzZ0J3c2hDVUVBSVFjQ1FBTkFJQWtvQWdBaURFVU5BU0FJUVFScUlBd1FnUVVpQ2tFQVNDSU1JQW9nQ3lBSGEwdHlSUVJBSUFsQkJHb2hDU0FMSUFjZ0Ntb2lCMHNOQVF3Q0N3c2dEQTBPQzBFOUlRb2dCMEVBU0EwTUlBQkJJQ0FRSUFjZ0RSQ0lBU0FIUlFSQVFRQWhCd3dCQzBFQUlRb2dDQ2dDUUNFSkEwQWdDU2dDQUNJTVJRMEJJQWhCQkdvZ0RCQ0JCU0lNSUFwcUlnb2dCMHNOQVNBQUlBaEJCR29nREJDRUFTQUpRUVJxSVFrZ0J5QUtTdzBBQ3dzZ0FFRWdJQkFnQnlBTlFZREFBSE1RaUFFZ0VDQUhJQWNnRUVnYklRY01DUXNnRkVFQUlBdEJBRWdiRFFsQlBTRUtJQUFnQ0NzRFFDQVFJQXNnRFNBSElBVVJMZ0FpQjBFQVRnMElEQW9MSUFnZ0NDa0RRRHdBTjBFQklRc2dGeUVNSUFraERRd0ZDeUFJSUJFMkFrd01Bd3NnQnkwQUFTRUpJQWRCQVdvaEJ3d0FDd0FMSUFBTkJ5QVRSUTBDUVFFaEJ3TkFJQVFnQjBFQ2RHb29BZ0FpQUFSQUlBTWdCMEVEZEdvZ0FDQUNJQVlRaXdWQkFTRU9JQWRCQVdvaUIwRUtSdzBCREFrTEMwRUJJUTRnQjBFS1R3MEhBMEFnQkNBSFFRSjBhaWdDQUEwQklBZEJBV29pQjBFS1J3MEFDd3dIQzBFY0lRb01CQXNnQ3lBS0lBeHJJaEVnQ3lBUlNoc2lDU0FQUWYvLy8vOEhjMG9OQWtFOUlRb2dFQ0FKSUE5cUlnc2dDeUFRU0JzaUJ5QVlTZzBESUFCQklDQUhJQXNnRFJDSUFTQUFJQllnRHhDRUFTQUFRVEFnQnlBTElBMUJnSUFFY3hDSUFTQUFRVEFnQ1NBUlFRQVFpQUVnQUNBTUlCRVFoQUVnQUVFZ0lBY2dDeUFOUVlEQUFITVFpQUVNQVFzTFFRQWhEZ3dEQzBFOUlRb0xRYlNNQkNBS05nSUFDMEYvSVE0TElBaEIwQUJxSkFBZ0RndlVBZ0VFZnlNQVFkQUJheUlGSkFBZ0JTQUNOZ0xNQVNBRlFhQUJhaUlDUVFCQktCQTRHaUFGSUFVb0Fzd0JOZ0xJQVFKQVFRQWdBU0FGUWNnQmFpQUZRZEFBYWlBQ0lBTWdCQkNOQlVFQVNBUkFRWDhoQkF3QkN5QUFLQUpNUVFCT0lRWWdBQ2dDQUNFSElBQW9Ba2hCQUV3RVFDQUFJQWRCWDNFMkFnQUxBbjhDUUFKQUlBQW9BakJGQkVBZ0FFSFFBRFlDTUNBQVFRQTJBaHdnQUVJQU53TVFJQUFvQWl3aENDQUFJQVUyQWl3TUFRc2dBQ2dDRUEwQkMwRi9JQUFRbndVTkFSb0xJQUFnQVNBRlFjZ0JhaUFGUWRBQWFpQUZRYUFCYWlBRElBUVFqUVVMSVFJZ0NBUkFJQUJCQUVFQUlBQW9BaVFSQkFBYUlBQkJBRFlDTUNBQUlBZzJBaXdnQUVFQU5nSWNJQUFvQWhRaEFTQUFRZ0EzQXhBZ0FrRi9JQUViSVFJTElBQWdBQ2dDQUNJQUlBZEJJSEZ5TmdJQVFYOGdBaUFBUVNCeEd5RUVJQVpGRFFBTElBVkIwQUZxSkFBZ0JBdC9BZ0YvQVg0Z0FMMGlBMEkwaUtkQi93OXhJZ0pCL3c5SEJId2dBa1VFUUNBQklBQkVBQUFBQUFBQUFBQmhCSDlCQUFVZ0FFUUFBQUFBQUFEd1E2SWdBUkNQQlNFQUlBRW9BZ0JCUUdvTE5nSUFJQUFQQ3lBQklBSkIvZ2RyTmdJQUlBTkMvLy8vLy8vLy80ZUFmNE5DZ0lDQWdJQ0FnUEEvaEw4RklBQUxDd3NBSUFBZ0FVRUJFUFVCQzlvQkFRSi9Ba0FnQVVIL0FYRWlBd1JBSUFCQkEzRUVRQU5BSUFBdEFBQWlBa1VnQWlBQlFmOEJjVVp5RFFNZ0FFRUJhaUlBUVFOeERRQUxDd0pBSUFBb0FnQWlBa0YvY3lBQ1FZR0NoQWhyY1VHQWdZS0VlSEVOQUNBRFFZR0NoQWhzSVFNRFFDQUNJQU56SWdKQmYzTWdBa0dCZ29RSWEzRkJnSUdDaEhoeERRRWdBQ2dDQkNFQ0lBQkJCR29oQUNBQ1FZR0NoQWhySUFKQmYzTnhRWUNCZ29SNGNVVU5BQXNMQTBBZ0FDSUNMUUFBSWdNRVFDQUNRUUZxSVFBZ0F5QUJRZjhCY1VjTkFRc0xJQUlQQ3lBQUVKNEJJQUJxRHdzZ0FBczZBQ0FBS0FKTVFRQk9CRUFnQUVJQVFRQVFqZ01nQUNBQUtBSUFRVjl4TmdJQUR3c2dBRUlBUVFBUWpnTWdBQ0FBS0FJQVFWOXhOZ0lBQ3hzQVFRQWdBR3NnQUhGQnFjeXZPMnhCRzNaQndPRUNhaXdBQUF1WUFRRUZmeU1BUVlBQ2F5SUZKQUFDUUNBQ1FRSklEUUFnQVNBQ1FRSjBhaUlISUFVMkFnQWdBRVVOQUFOQUlBY29BZ0FnQVNnQ0FDQUFRWUFDSUFCQmdBSkpHeUlFRUQ0YVFRQWhBd05BSUFFZ0EwRUNkR29pQmlnQ0FDQUJJQU5CQVdvaUEwRUNkR29vQWdBZ0JCQStHaUFHSUFZb0FnQWdCR28yQWdBZ0FpQURSdzBBQ3lBQUlBUnJJZ0FOQUFzTElBVkJnQUpxSkFBTEtRRUJmeUFBS0FJQVFRRnJFSk1GSWdFRWZ5QUJCU0FBS0FJRUVKTUZJZ0JCSUdwQkFDQUFHd3NMMUFRQkIzOGpBRUhRQVdzaUJDUUFJQVJDQVRjRENBSkFJQUVnQW13aUIwVU5BQ0FFSUFJMkFoQWdCQ0FDTmdJVVFRQWdBbXNoQ1NBQ0lnRWhDRUVDSVFVRFFDQUVRUkJxSUFWQkFuUnFJQUVpQmlBQ0lBaHFhaUlCTmdJQUlBVkJBV29oQlNBR0lRZ2dBU0FIU1EwQUN3Si9JQUFnQUNBSGFpQUphaUlHVHdSQVFRQWhCVUVCSVFGQkFBd0JDMEVCSVFWQkFTRUJBMEFDZnlBRlFRTnhRUU5HQkVBZ0FDQUNJQU1nQVNBRVFSQnFFT0FESUFSQkNHcEJBaENNQXlBQlFRSnFEQUVMQWtBZ0JFRVFhaUFCUVFGcklnaEJBblJxS0FJQUlBWWdBR3RQQkVBZ0FDQUNJQU1nQkVFSWFpQUJRUUFnQkVFUWFoQ0xBd3dCQ3lBQUlBSWdBeUFCSUFSQkVHb1E0QU1MSUFGQkFVWUVRQ0FFUVFocVFRRVFpZ05CQUF3QkN5QUVRUWhxSUFnUWlnTkJBUXNoQVNBRUlBUW9BZ2dpQjBFQmNpSUZOZ0lJSUFBZ0Ftb2lBQ0FHU1EwQUN5QUhRUUZMSVFVZ0JDZ0NERUVBUndzaENDQUFJQUlnQXlBRVFRaHFJQUZCQUNBRVFSQnFFSXNEUVFFZ0FVRUJSeUFGY2lBSUcwVU5BQU5BQW44Z0FVRUJUQVJBSUFSQkNHb2lCaUFHRUpVRklnWVFqQU1nQkNnQ0NDRUZJQUVnQm1vTUFRc2dCRUVJYWlJSFFRSVFpZ01nQkNBRUtBSUlRUWR6TmdJSUlBZEJBUkNNQXlBQUlBbHFJZ2dnQkVFUWFpSUtJQUZCQW1zaUJrRUNkR29vQWdCcklBSWdBeUFISUFGQkFXdEJBU0FLRUlzRElBZEJBUkNLQXlBRUlBUW9BZ2hCQVhJaUJUWUNDQ0FJSUFJZ0F5QUhJQVpCQVNBS0VJc0RJQVlMSVFFZ0FDQUphaUVBSUFGQkFVY05BQ0FFS0FJTUlBVkJBVWR5RFFBTEN5QUVRZEFCYWlRQUMwWUJBWDhDZjBFQUlBQkJGM1pCL3dGeElnRkIvd0JKRFFBYVFRSWdBVUdXQVVzTkFCcEJBRUVCUVpZQklBRnJkQ0lCUVFGcklBQnhEUUFhUVFGQkFpQUFJQUZ4R3dzTEV3QWdBRUVCZEVHQWdJQUlha0dCZ0lBSVNRc1ZBUUYvSXdCQkVHc2lBU0FBT0FJTUlBRXFBZ3dMRUFBZ0FZd2dBU0FBR3hDWkJTQUJsQXNNQUNBQUlBQ1RJZ0FnQUpVTEN3QWdBQ0FCUVJRUTlRRUxjQUlDZndGK0lBQW9BaWdoQWtFQklRRUNRQ0FBUWdBZ0FDMEFBRUdBQVhFRWYwRUJRUUlnQUNnQ0ZDQUFLQUljUmhzRlFRRUxJQUlSRXdBaUEwSUFVdzBBSUFNZ0FDZ0NDQ0lCQkg4Z0FFRUVhZ1VnQUNnQ0hDSUJSUTBCSUFCQkZHb0xLQUlBSUFGcnJId2hBd3NnQXdzckFRRitBa0FnQWF3aEF5QUFLQUpNUVFCSUJFQWdBQ0FESUFJUWpnTU1BUXNnQUNBRElBSVFqZ01MQzFrQkFYOGdBQ0FBS0FKSUlnRkJBV3NnQVhJMkFrZ2dBQ2dDQUNJQlFRaHhCRUFnQUNBQlFTQnlOZ0lBUVg4UEN5QUFRZ0EzQWdRZ0FDQUFLQUlzSWdFMkFod2dBQ0FCTmdJVUlBQWdBU0FBS0FJd2FqWUNFRUVBQzNVQ0Fud0JmaUFBQW40UUVpSUJSQUFBQUFBQVFJOUFveUlDbVVRQUFBQUFBQURnUTJNRVFDQUNzQXdCQzBLQWdJQ0FnSUNBZ0lCL0N5SUROd01BSUFBQ2Z5QUJJQU5DNkFkK3VhRkVBQUFBQUFCQWowQ2lJZ0daUkFBQUFBQUFBT0JCWXdSQUlBR3FEQUVMUVlDQWdJQjRDellDQ0F0RkFnRitBWHdDZmhBU1JBQUFBQUFBUUk5QW95SUNtVVFBQUFBQUFBRGdRMk1FUUNBQ3NBd0JDMEtBZ0lDQWdJQ0FnSUIvQ3lFQklBQUVRQ0FBSUFFM0F3QUxJQUVMbFFNQ0EzOERmQ01BUVJCcklnTWtBQUpBSUFDOElnUkIvLy8vL3dkeElnSkIycCtrN2dSTkJFQWdBU0FBdXlJR0lBWkVnOGpKYlRCZjVEK2lSQUFBQUFBQUFEaERvRVFBQUFBQUFBQTR3NkFpQlVRQUFBQlEreUg1djZLZ0lBVkVZMklhWWJRUVViNmlvQ0lIT1FNQUlBZEVBQUFBWVBzaDZiOWpJUVFDZnlBRm1VUUFBQUFBQUFEZ1FXTUVRQ0FGcWd3QkMwR0FnSUNBZUFzaEFpQUVCRUFnQVNBR0lBVkVBQUFBQUFBQThMK2dJZ1ZFQUFBQVVQc2grYitpb0NBRlJHTmlHbUcwRUZHK29xQTVBd0FnQWtFQmF5RUNEQUlMSUFkRUFBQUFZUHNoNlQ5a1JRMEJJQUVnQmlBRlJBQUFBQUFBQVBBL29DSUZSQUFBQUZEN0lmbS9vcUFnQlVSallocGh0QkJSdnFLZ09RTUFJQUpCQVdvaEFnd0JDeUFDUVlDQWdQd0hUd1JBSUFFZ0FDQUFrN3M1QXdCQkFDRUNEQUVMSUFNZ0FpQUNRUmQyUVpZQmF5SUNRUmQwYTc2N09RTUlJQU5CQ0dvZ0F5QUNRUUZCQUJDa0JTRUNJQU1yQXdBaEJTQUVRUUJJQkVBZ0FTQUZtamtEQUVFQUlBSnJJUUlNQVFzZ0FTQUZPUU1BQ3lBRFFSQnFKQUFnQWd1L0NnTUVmQVYvQVg0akFFRXdheUlISkFBQ1FBSkFBa0FnQUwwaUMwSWdpS2NpQmtILy8vLy9CM0VpQ0VINjFMMkFCRTBFUUNBR1FmLy9QM0ZCKzhNa1JnMEJJQWhCL0xLTGdBUk5CRUFnQzBJQVdRUkFJQUVnQUVRQUFFQlUreUg1djZBaUFFUXhZMklhWWJUUXZhQWlBamtEQUNBQklBQWdBcUZFTVdOaUdtRzAwTDJnT1FNSVFRRWhCZ3dGQ3lBQklBQkVBQUJBVlBzaCtUK2dJZ0JFTVdOaUdtRzAwRDJnSWdJNUF3QWdBU0FBSUFLaFJERmpZaHBodE5BOW9Ea0RDRUYvSVFZTUJBc2dDMElBV1FSQUlBRWdBRVFBQUVCVSt5RUp3S0FpQUVReFkySWFZYlRndmFBaUFqa0RBQ0FCSUFBZ0FxRkVNV05pR21HMDRMMmdPUU1JUVFJaEJnd0VDeUFCSUFCRUFBQkFWUHNoQ1VDZ0lnQkVNV05pR21HMDREMmdJZ0k1QXdBZ0FTQUFJQUtoUkRGallocGh0T0E5b0RrRENFRitJUVlNQXdzZ0NFRzdqUEdBQkUwRVFDQUlRYno3MTRBRVRRUkFJQWhCL0xMTGdBUkdEUUlnQzBJQVdRUkFJQUVnQUVRQUFEQi9mTmtTd0tBaUFFVEtsSk9ua1E3cHZhQWlBamtEQUNBQklBQWdBcUZFeXBTVHA1RU82YjJnT1FNSVFRTWhCZ3dGQ3lBQklBQkVBQUF3ZjN6WkVrQ2dJZ0JFeXBTVHA1RU82VDJnSWdJNUF3QWdBU0FBSUFLaFJNcVVrNmVSRHVrOW9Ea0RDRUY5SVFZTUJBc2dDRUg3dytTQUJFWU5BU0FMUWdCWkJFQWdBU0FBUkFBQVFGVDdJUm5Bb0NJQVJERmpZaHBodFBDOW9DSUNPUU1BSUFFZ0FDQUNvVVF4WTJJYVliVHd2YUE1QXdoQkJDRUdEQVFMSUFFZ0FFUUFBRUJVK3lFWlFLQWlBRVF4WTJJYVliVHdQYUFpQWprREFDQUJJQUFnQXFGRU1XTmlHbUcwOEQyZ09RTUlRWHdoQmd3REN5QUlRZnJENUlrRVN3MEJDeUFBSUFCRWc4akpiVEJmNUQraVJBQUFBQUFBQURoRG9FUUFBQUFBQUFBNHc2QWlBMFFBQUVCVSt5SDV2NktnSWdJZ0EwUXhZMklhWWJUUVBhSWlCS0VpQlVRWUxVUlUreUhwdjJNaENRSi9JQU9aUkFBQUFBQUFBT0JCWXdSQUlBT3FEQUVMUVlDQWdJQjRDeUVHQWtBZ0NRUkFJQVpCQVdzaEJpQURSQUFBQUFBQUFQQy9vQ0lEUkRGallocGh0TkE5b2lFRUlBQWdBMFFBQUVCVSt5SDV2NktnSVFJTUFRc2dCVVFZTFVSVSt5SHBQMlJGRFFBZ0JrRUJhaUVHSUFORUFBQUFBQUFBOEQrZ0lnTkVNV05pR21HMDBEMmlJUVFnQUNBRFJBQUFRRlQ3SWZtL29xQWhBZ3NnQVNBQ0lBU2hJZ0E1QXdBQ1FDQUlRUlIySWdrZ0FMMUNOSWluUWY4UGNXdEJFVWdOQUNBQklBSWdBMFFBQUdBYVliVFFQYUlpQUtFaUJTQURSSE53QXk2S0dhTTdvaUFDSUFXaElBQ2hvU0lFb1NJQU9RTUFJQWtnQUwxQ05JaW5RZjhQY1d0Qk1rZ0VRQ0FGSVFJTUFRc2dBU0FGSUFORUFBQUFMb29ab3p1aUlnQ2hJZ0lnQTBUQlNTQWxtb043T2FJZ0JTQUNvU0FBb2FFaUJLRWlBRGtEQUFzZ0FTQUNJQUNoSUFTaE9RTUlEQUVMSUFoQmdJREEvd2RQQkVBZ0FTQUFJQUNoSWdBNUF3QWdBU0FBT1FNSVFRQWhCZ3dCQ3lBTFF2Ly8vLy8vLy84SGcwS0FnSUNBZ0lDQXNNRUFoTDhoQUVFQUlRWkJBU0VKQTBBZ0IwRVFhaUFHUVFOMGFnSi9JQUNaUkFBQUFBQUFBT0JCWXdSQUlBQ3FEQUVMUVlDQWdJQjRDN2NpQWprREFDQUFJQUtoUkFBQUFBQUFBSEJCb2lFQVFRRWhCaUFKSVFwQkFDRUpJQW9OQUFzZ0J5QUFPUU1nUVFJaEJnTkFJQVlpQ1VFQmF5RUdJQWRCRUdvZ0NVRURkR29yQXdCRUFBQUFBQUFBQUFCaERRQUxJQWRCRUdvZ0J5QUlRUlIyUVpZSWF5QUpRUUZxUVFFUXBBVWhCaUFIS3dNQUlRQWdDMElBVXdSQUlBRWdBSm81QXdBZ0FTQUhLd01JbWprRENFRUFJQVpySVFZTUFRc2dBU0FBT1FNQUlBRWdCeXNEQ0RrRENBc2dCMEV3YWlRQUlBWUwzeEVDQTN3UWZ5TUFRYkFFYXlJSkpBQWdBaUFDUVFOclFSaHRJZ2hCQUNBSVFRQktHeUlSUVdoc2FpRU5JQVJCQW5SQmtNUUNhaWdDQUNJT0lBTkJBV3NpREdwQkFFNEVRQ0FESUE1cUlRZ2dFU0FNYXlFQ0EwQWdDVUhBQW1vZ0NrRURkR29nQWtFQVNBUjhSQUFBQUFBQUFBQUFCU0FDUVFKMFFhREVBbW9vQWdDM0N6a0RBQ0FDUVFGcUlRSWdDa0VCYWlJS0lBaEhEUUFMQ3lBTlFSaHJJUTlCQUNFSUlBNUJBQ0FPUVFCS0d5RUtJQU5CQUV3aEN3TkFBa0FnQ3dSQVJBQUFBQUFBQUFBQUlRVU1BUXNnQ0NBTWFpRVFRUUFoQWtRQUFBQUFBQUFBQUNFRkEwQWdBQ0FDUVFOMGFpc0RBQ0FKUWNBQ2FpQVFJQUpyUVFOMGFpc0RBS0lnQmFBaEJTQUNRUUZxSWdJZ0EwY05BQXNMSUFrZ0NFRURkR29nQlRrREFDQUlJQXBHSVFJZ0NFRUJhaUVJSUFKRkRRQUxRUzhnRFdzaEZFRXdJQTFySVJJZ0RVRVpheUVWSUE0aENBSkFBMEFnQ1NBSVFRTjBhaXNEQUNFRlFRQWhBaUFJSVFvZ0NFRUFUQ0lMUlFSQUEwQWdDVUhnQTJvZ0FrRUNkR29DZndKL0lBVkVBQUFBQUFBQWNENmlJZ2FaUkFBQUFBQUFBT0JCWXdSQUlBYXFEQUVMUVlDQWdJQjRDN2NpQmtRQUFBQUFBQUJ3d2FJZ0JhQWlCWmxFQUFBQUFBQUE0RUZqQkVBZ0Jhb01BUXRCZ0lDQWdIZ0xOZ0lBSUFrZ0NrRUJheUlLUVFOMGFpc0RBQ0FHb0NFRklBSkJBV29pQWlBSVJ3MEFDd3NDZnlBRklBOFE1Z0VpQlNBRlJBQUFBQUFBQU1BL29weEVBQUFBQUFBQUlNQ2lvQ0lGbVVRQUFBQUFBQURnUVdNRVFDQUZxZ3dCQzBHQWdJQ0FlQXNoRUNBRklCQzNvU0VGQWtBQ1FBSkFBbjhnRDBFQVRDSVdSUVJBSUFoQkFuUWdDV29pQWlBQ0tBTGNBeUlDSUFJZ0VuVWlBaUFTZEdzaUNqWUMzQU1nQWlBUWFpRVFJQW9nRkhVTUFRc2dEdzBCSUFoQkFuUWdDV29vQXR3RFFSZDFDeUlNUVFCTURRSU1BUXRCQWlFTUlBVkVBQUFBQUFBQTREOW1EUUJCQUNFTURBRUxRUUFoQWtFQUlRb2dDMFVFUUFOQUlBbEI0QU5xSUFKQkFuUnFJaGNvQWdBaEUwSC8vLzhISVFzQ2Z3SkFJQW9OQUVHQWdJQUlJUXNnRXcwQVFRQU1BUXNnRnlBTElCTnJOZ0lBUVFFTElRb2dBa0VCYWlJQ0lBaEhEUUFMQ3dKQUlCWU5BRUgvLy84RElRSUNRQUpBSUJVT0FnRUFBZ3RCLy8vL0FTRUNDeUFJUVFKMElBbHFJZ3NnQ3lnQzNBTWdBbkUyQXR3REN5QVFRUUZxSVJBZ0RFRUNSdzBBUkFBQUFBQUFBUEEvSUFXaElRVkJBaUVNSUFwRkRRQWdCVVFBQUFBQUFBRHdQeUFQRU9ZQm9TRUZDeUFGUkFBQUFBQUFBQUFBWVFSQVFRQWhDaUFJSVFJQ1FDQUlJQTVNRFFBRFFDQUpRZUFEYWlBQ1FRRnJJZ0pCQW5ScUtBSUFJQXB5SVFvZ0FpQU9TZzBBQ3lBS1JRMEFJQThoRFFOQUlBMUJHR3NoRFNBSlFlQURhaUFJUVFGcklnaEJBblJxS0FJQVJRMEFDd3dEQzBFQklRSURRQ0FDSWdwQkFXb2hBaUFKUWVBRGFpQU9JQXByUVFKMGFpZ0NBRVVOQUFzZ0NDQUthaUVLQTBBZ0NVSEFBbW9nQXlBSWFpSU1RUU4wYWlBSVFRRnFJZ2dnRVdwQkFuUkJvTVFDYWlnQ0FMYzVBd0JCQUNFQ1JBQUFBQUFBQUFBQUlRVWdBMEVBU2dSQUEwQWdBQ0FDUVFOMGFpc0RBQ0FKUWNBQ2FpQU1JQUpyUVFOMGFpc0RBS0lnQmFBaEJTQUNRUUZxSWdJZ0EwY05BQXNMSUFrZ0NFRURkR29nQlRrREFDQUlJQXBJRFFBTElBb2hDQXdCQ3dzQ1FDQUZRUmdnRFdzUTVnRWlCVVFBQUFBQUFBQndRV1lFUUNBSlFlQURhaUFJUVFKMGFnSi9BbjhnQlVRQUFBQUFBQUJ3UHFJaUJwbEVBQUFBQUFBQTRFRmpCRUFnQnFvTUFRdEJnSUNBZ0hnTElnSzNSQUFBQUFBQUFIREJvaUFGb0NJRm1VUUFBQUFBQUFEZ1FXTUVRQ0FGcWd3QkMwR0FnSUNBZUFzMkFnQWdDRUVCYWlFSURBRUxBbjhnQlpsRUFBQUFBQUFBNEVGakJFQWdCYW9NQVF0QmdJQ0FnSGdMSVFJZ0R5RU5DeUFKUWVBRGFpQUlRUUowYWlBQ05nSUFDMFFBQUFBQUFBRHdQeUFORU9ZQklRVUNRQ0FJUVFCSURRQWdDQ0VEQTBBZ0NTQURJZ0JCQTNScUlBVWdDVUhnQTJvZ0EwRUNkR29vQWdDM29qa0RBQ0FEUVFGcklRTWdCVVFBQUFBQUFBQndQcUloQlNBQURRQUxRUUFoQ3lBSVFRQklEUUFnRGtFQUlBNUJBRW9iSVFBZ0NDRUtBMEFnQUNBTElBQWdDMGtiSVFNZ0NDQUtheUVOUVFBaEFrUUFBQUFBQUFBQUFDRUZBMEFnQWtFRGRFSHcyUUpxS3dNQUlBa2dBaUFLYWtFRGRHb3JBd0NpSUFXZ0lRVWdBaUFEUnlFUElBSkJBV29oQWlBUERRQUxJQWxCb0FGcUlBMUJBM1JxSUFVNUF3QWdDa0VCYXlFS0lBZ2dDMGNoQWlBTFFRRnFJUXNnQWcwQUN3c0NRQUpBQWtBQ1FBSkFJQVFPQkFFQ0FnQUVDMFFBQUFBQUFBQUFBQ0VHQWtBZ0NFRUFUQTBBSUFsQm9BRnFJQWhCQTNScUt3TUFJUVVnQ0NFQ0EwQWdDVUdnQVdvaUF5QUNRUU4wYWlBRklBTWdBa0VCYXlJQVFRTjBhaUlES3dNQUlnY2dCeUFGb0NJRm9hQTVBd0FnQXlBRk9RTUFJQUpCQVVzaEF5QUFJUUlnQXcwQUN5QUlRUUpJRFFBZ0NVR2dBV29nQ0VFRGRHb3JBd0FoQlNBSUlRSURRQ0FKUWFBQmFpSURJQUpCQTNScUlBVWdBeUFDUVFGcklnQkJBM1JxSWdNckF3QWlCaUFHSUFXZ0lnV2hvRGtEQUNBRElBVTVBd0FnQWtFQ1N5RURJQUFoQWlBRERRQUxSQUFBQUFBQUFBQUFJUVlnQ0VFQlRBMEFBMEFnQmlBSlFhQUJhaUFJUVFOMGFpc0RBS0FoQmlBSVFRSktJUUFnQ0VFQmF5RUlJQUFOQUFzTElBa3JBNkFCSVFVZ0RBMENJQUVnQlRrREFDQUpLd09vQVNFRklBRWdCamtERUNBQklBVTVBd2dNQXd0RUFBQUFBQUFBQUFBaEJTQUlRUUJPQkVBRFFDQUlJZ0JCQVdzaENDQUZJQWxCb0FGcUlBQkJBM1JxS3dNQW9DRUZJQUFOQUFzTElBRWdCWm9nQlNBTUd6a0RBQXdDQzBRQUFBQUFBQUFBQUNFRklBaEJBRTRFUUNBSUlRTURRQ0FESWdCQkFXc2hBeUFGSUFsQm9BRnFJQUJCQTNScUt3TUFvQ0VGSUFBTkFBc0xJQUVnQlpvZ0JTQU1HemtEQUNBSkt3T2dBU0FGb1NFRlFRRWhBaUFJUVFCS0JFQURRQ0FGSUFsQm9BRnFJQUpCQTNScUt3TUFvQ0VGSUFJZ0NFY2hBQ0FDUVFGcUlRSWdBQTBBQ3dzZ0FTQUZtaUFGSUF3Yk9RTUlEQUVMSUFFZ0JabzVBd0FnQ1NzRHFBRWhCU0FCSUFhYU9RTVFJQUVnQlpvNUF3Z0xJQWxCc0FScUpBQWdFRUVIY1F2b0FnSURmd045SUFDOElnSkIvLy8vL3dkeElnRkJnSUNBNUFSUEJFQWdBRVBhRDhrL0lBQ1lJQUM4UWYvLy8vOEhjVUdBZ0lEOEIwc2JEd3NDUUFKL0lBRkIvLy8vOWdOTkJFQkJmeUFCUVlDQWdNd0RUdzBCR2d3Q0N5QUFpeUVBSUFGQi8vL2YvQU5OQkVBZ0FVSC8vNy81QTAwRVFDQUFJQUNTUXdBQWdMK1NJQUJEQUFBQVFKS1ZJUUJCQUF3Q0N5QUFRd0FBZ0wrU0lBQkRBQUNBUDVLVklRQkJBUXdCQ3lBQlFmLy83NEFFVFFSQUlBQkRBQURBdjVJZ0FFTUFBTUEvbEVNQUFJQS9rcFVoQUVFQ0RBRUxRd0FBZ0w4Z0FKVWhBRUVEQ3lFRElBQWdBSlFpQlNBRmxDSUVJQVJEUnhMYXZaUkRtTXBNdnBLVUlRWWdCU0FFSUFSREpheDhQWlJERGZVUlBwS1VRNm1xcWo2U2xDRUVJQUZCLy8vLzlnTk5CRUFnQUNBQUlBWWdCSktVa3c4TElBTkJBblFpQVVId3d3SnFLZ0lBSUFBZ0JpQUVrcFFnQVVHQXhBSnFLZ0lBa3lBQWs1TWlBSXdnQUNBQ1FRQklHeUVBQ3lBQUMzTUJBMzhnQUVVRVFFRUFRUU5CaFR4QkFCQTVEd3NnQUNnQ0FDSUJSUVJBRHdzZ0FTZ0NBQkF4UVFBaEFRTi9JQUFvQWdBaUF5Z0NDQ0VDSUFNb0Fnd2dBVXdFZnlBQ0VERWdBQ2dDQUJBeElBQkJBRFlDQUVFQUJTQUNJQUZCREd4cUtBSUFFREVnQVVFQmFpRUJEQUVMQ3hvTG5RUUFRZERjQTBHeDlBRVFLVUhvM0FOQjB1b0JRUUZCQVVFQUVDaEI5TndEUWVIbkFVRUJRWUIvUWY4QUVBVkJqTjBEUWRybkFVRUJRWUIvUWY4QUVBVkJnTjBEUWRqbkFVRUJRUUJCL3dFUUJVR1kzUU5Cd2Q0QlFRSkJnSUIrUWYvL0FSQUZRYVRkQTBHNDNnRkJBa0VBUWYvL0F4QUZRYkRkQTBIUTNnRkJCRUdBZ0lDQWVFSC8vLy8vQnhBRlFiemRBMEhIM2dGQkJFRUFRWDhRQlVISTNRTkI5ZXdCUVFSQmdJQ0FnSGhCLy8vLy93Y1FCVUhVM1FOQjdPd0JRUVJCQUVGL0VBVkI0TjBEUVlYaEFVS0FnSUNBZ0lDQWdJQi9Rdi8vLy8vLy8vLy8vd0FRK0FaQjdOMERRWVRoQVVJQVFuOFErQVpCK04wRFFmcmdBVUVFRUJSQmhONERRZXJ3QVVFSUVCUkI4SmdDUVpUdEFSQVRRWUMrQWtIbmpnSVFFMEhJdmdKQkJFSDY3QUVRQzBHVXZ3SkJBa0dnN1FFUUMwSGd2d0pCQkVHdjdRRVFDMEhFbVFKQm9Pc0JFQ2RCaU1BQ1FRQkJvbzRDRUFGQnNNQUNRUUJCaUk4Q0VBRkIyTUFDUVFGQndJNENFQUZCZ01FQ1FRSkJzb3NDRUFGQnFNRUNRUU5CMFlzQ0VBRkIwTUVDUVFSQitZc0NFQUZCK01FQ1FRVkJsb3dDRUFGQm9NSUNRUVJCclk4Q0VBRkJ5TUlDUVFWQnk0OENFQUZCc01BQ1FRQkIvSXdDRUFGQjJNQUNRUUZCMjR3Q0VBRkJnTUVDUVFKQnZvMENFQUZCcU1FQ1FRTkJuSTBDRUFGQjBNRUNRUVJCZ1k0Q0VBRkIrTUVDUVFWQjM0MENFQUZCOE1JQ1FRWkJ2SXdDRUFGQm1NTUNRUWRCOG84Q0VBRUw4QklCRlg4akFFR0FDMnNpRFNRQUlBTkJBM1FpQlVGZ2NVRUVjaUVQSUFKQkFuUWlCMEZnY1VFQ2NpRVNJQUZCQTNRaURFRmdjVUVFY2lFVElBQW9BdVFES0FJWUlSZ0NRQ0FBS0FLRUFTSUlRUUJNQkVBTUFRc2dEeUFGUVJ4eUlncHFRUUYxSVJRZ0VpQUhRUjV5SWd0cVFRRjFJUlVnRXlBTVFSeHlJZzVxUVFGMUlSWWdBQ2dDaUFFaUJTZ0NDQ0VYSUFVb0FnUWhFQ0FGS0FJQUlSRkIvLy8vL3djaERBTkFBbjhnQkNBUmFpMEFBQ0lGSUJOSUJFQWdCU0FPYTBFQmRDSUhJQWRzSVFjZ0JTQVRhMEVCZENJRklBVnNEQUVMSUFVZ0Rrb0VRQ0FGSUJOclFRRjBJZ2NnQjJ3aEJ5QUZJQTVyUVFGMElnVWdCV3dNQVFzQ2Z5QUZJQlpNQkVBZ0JTQU9hMEVCZENJRklBVnNEQUVMSUFVZ0UydEJBWFFpQlNBRmJBc2hCMEVBQ3lFR0FuOGdCQ0FRYWkwQUFDSUZJQkpJQkVBZ0JpQUZJQkpyUVFOc0lnWWdCbXhxSVFZZ0JTQUxhMEVEYkNJRklBVnNEQUVMSUFVZ0Mwb0VRQ0FHSUFVZ0MydEJBMndpQmlBR2JHb2hCaUFGSUJKclFRTnNJZ1VnQld3TUFRc2dCU0FWVEFSQUlBVWdDMnRCQTJ3aUJTQUZiQXdCQ3lBRklCSnJRUU5zSWdVZ0JXd0xJQWRxSVFjQ2Z5QUVJQmRxTFFBQUlnVWdEMGdFUUNBR0lBVWdEMnNpQmlBR2JHb2hCaUFGSUFwcklnVWdCV3dNQVFzZ0JTQUtTZ1JBSUFZZ0JTQUtheUlHSUFac2FpRUdJQVVnRDJzaUJTQUZiQXdCQ3lBRklCUk1CRUFnQlNBS2F5SUZJQVZzREFFTElBVWdEMnNpQlNBRmJBc2hDU0FOUVlBRGFpQUVRUUowYWlBR05nSUFJQWNnQ1dvaUJTQU1JQVVnREVnYklRd2dCRUVCYWlJRUlBaEhEUUFMSUFoQkFYRWhCUUpBSUFoQkFVWUVRRUVBSVF0QkFDRUVEQUVMSUFoQmZuRWhCMEVBSVF0QkFDRUVRUUFoQmdOQUlBd2dEVUdBQTJvZ0JFRUNkR29vQWdCT0JFQWdEVUdBQVdvZ0Myb2dCRG9BQUNBTFFRRnFJUXNMSUF3Z0RVR0FBMm9nQkVFQmNpSUlRUUowYWlnQ0FFNEVRQ0FOUVlBQmFpQUxhaUFJT2dBQUlBdEJBV29oQ3dzZ0JFRUNhaUVFSUFaQkFtb2lCaUFIUncwQUN3c2dCVVVOQUNBTlFZQURhaUFFUVFKMGFpZ0NBQ0FNU2cwQUlBMUJnQUZxSUF0cUlBUTZBQUFnQzBFQmFpRUxDMEgvQUNFR0lBMUJnQU5xSVFRRFFDQUVRdi8vLy8vMy8vLy8vd0EzQWhnZ0JFTC8vLy8vOS8vLy8vOEFOd0lRSUFSQy8vLy8vL2YvLy8vL0FEY0NDQ0FFUXYvLy8vLzMvLy8vL3dBM0FnQWdCRUVnYWlFRUlBWkJCMFloQlNBR1FRaHJJUVlnQlVVTkFBc2dDMEVBU2dSQVFRQWhGZ05BSUE4Z0RVR0FBV29nRm1vdEFBQWlDaUFBS0FLSUFTSUhLQUlJYWkwQUFHc2lDRUVFZENJRlFjQUNhaUVPSUFWQndBRnFJUlFnQlVGQWF5RVZJQk1nQnlnQ0FDQUthaTBBQUdzaUNVRUdkQ0lYUVlBQ2FpRVFRUWNoQlNBTlFZQURhaUVFSUEwaEJpQVNJQWNvQWdRZ0Ntb3RBQUJySWhGQnlBQnNRWkFCYWlJTUlRY2dFVUVEYkNJUklCRnNJQWxCQVhRaUNTQUpiR29nQ0NBSWJHb2lFU0VKQTBBZ0JDZ0NBQ0FKU2dSQUlBUWdDVFlDQUNBR0lBbzZBQUFMSUFrZ0ZXb2lDQ0FFS0FJRVNBUkFJQVFnQ0RZQ0JDQUdJQW82QUFFTElBZ2dGR29pQ0NBRUtBSUlTQVJBSUFRZ0NEWUNDQ0FHSUFvNkFBSUxJQWdnRG1vaUNDQUVLQUlNU0FSQUlBUWdDRFlDRENBR0lBbzZBQU1MSUFVaUNFRUJheUVGSUFjZ0NXb2hDU0FHUVFScUlRWWdCRUVRYWlFRUlBZEJvQUpxSVFjZ0NBMEFDMEVISVFVZ0RDRUhJQkFnRVdvaUVDRUpBMEFnQkNnQ0FDQUpTZ1JBSUFRZ0NUWUNBQ0FHSUFvNkFBQUxJQWtnRldvaUNDQUVLQUlFU0FSQUlBUWdDRFlDQkNBR0lBbzZBQUVMSUFnZ0ZHb2lDQ0FFS0FJSVNBUkFJQVFnQ0RZQ0NDQUdJQW82QUFJTElBZ2dEbW9pQ0NBRUtBSU1TQVJBSUFRZ0NEWUNEQ0FHSUFvNkFBTUxJQVVpQ0VFQmF5RUZJQWNnQ1dvaENTQUdRUVJxSVFZZ0JFRVFhaUVFSUFkQm9BSnFJUWNnQ0EwQUMwRUhJUVVnRENFSElCQWdGMnBCZ0FacUloQWhDUU5BSUFRb0FnQWdDVW9FUUNBRUlBazJBZ0FnQmlBS09nQUFDeUFKSUJWcUlnZ2dCQ2dDQkVnRVFDQUVJQWcyQWdRZ0JpQUtPZ0FCQ3lBSUlCUnFJZ2dnQkNnQ0NFZ0VRQ0FFSUFnMkFnZ2dCaUFLT2dBQ0N5QUlJQTVxSWdnZ0JDZ0NERWdFUUNBRUlBZzJBZ3dnQmlBS09nQURDeUFGSWdoQkFXc2hCU0FISUFscUlRa2dCa0VFYWlFR0lBUkJFR29oQkNBSFFhQUNhaUVISUFnTkFBc2dFQ0FYYWtHQUNtb2hDVUVISVFVRFFDQUVLQUlBSUFsS0JFQWdCQ0FKTmdJQUlBWWdDam9BQUFzZ0NTQVZhaUlISUFRb0FnUklCRUFnQkNBSE5nSUVJQVlnQ2pvQUFRc2dCeUFVYWlJSElBUW9BZ2hJQkVBZ0JDQUhOZ0lJSUFZZ0Nqb0FBZ3NnQnlBT2FpSUhJQVFvQWd4SUJFQWdCQ0FITmdJTUlBWWdDam9BQXdzZ0JTSUhRUUZySVFVZ0NTQU1haUVKSUFaQkJHb2hCaUFFUVJCcUlRUWdERUdnQW1vaERDQUhEUUFMSUJaQkFXb2lGaUFMUncwQUN3c2dBVUY4Y1NFRlFRQWhCeUFOSVFRZ0EwRjhjVUVCZENFQUlBSkJlSEVpQTBFQmNrRUdkQ0VNSUFOQkFuSkJCblFoQmlBRFFRTnlRUVowSVFnZ0EwRUVja0VHZENFSklBTkJCWEpCQm5RaENpQURRUVp5UVFaMElRc2dBa0VIY2tFR2RDRVBBMEFnR0NBRklBZHFRUUowYWlnQ0FDSUJJQU5CQm5ScUlBQnFJZ0lnQkMwQUFFRUJhanNCQUNBQ0lBUXRBQUZCQVdvN0FRSWdBaUFFTFFBQ1FRRnFPd0VFSUFJZ0JDMEFBMEVCYWpzQkJpQUJJQXhxSUFCcUlnSWdCQzBBQkVFQmFqc0JBQ0FDSUFRdEFBVkJBV283QVFJZ0FpQUVMUUFHUVFGcU93RUVJQUlnQkMwQUIwRUJhanNCQmlBQklBWnFJQUJxSWdJZ0JDMEFDRUVCYWpzQkFDQUNJQVF0QUFsQkFXbzdBUUlnQWlBRUxRQUtRUUZxT3dFRUlBSWdCQzBBQzBFQmFqc0JCaUFCSUFocUlBQnFJZ0lnQkMwQURFRUJhanNCQUNBQ0lBUXRBQTFCQVdvN0FRSWdBaUFFTFFBT1FRRnFPd0VFSUFJZ0JDMEFEMEVCYWpzQkJpQUJJQWxxSUFCcUlnSWdCQzBBRUVFQmFqc0JBQ0FDSUFRdEFCRkJBV283QVFJZ0FpQUVMUUFTUVFGcU93RUVJQUlnQkMwQUUwRUJhanNCQmlBQklBcHFJQUJxSWdJZ0JDMEFGRUVCYWpzQkFDQUNJQVF0QUJWQkFXbzdBUUlnQWlBRUxRQVdRUUZxT3dFRUlBSWdCQzBBRjBFQmFqc0JCaUFCSUF0cUlBQnFJZ0lnQkMwQUdFRUJhanNCQUNBQ0lBUXRBQmxCQVdvN0FRSWdBaUFFTFFBYVFRRnFPd0VFSUFJZ0JDMEFHMEVCYWpzQkJpQUJJQTlxSUFCcUlnRWdCQzBBSEVFQmFqc0JBQ0FCSUFRdEFCMUJBV283QVFJZ0FTQUVMUUFlUVFGcU93RUVJQUVnQkMwQUgwRUJhanNCQmlBRVFTQnFJUVFnQjBFQmFpSUhRUVJIRFFBTElBMUJnQXRxSkFBTHl3TUJCSDhnQUNnQzVBTWdBRUVCUWZ3UElBQW9BZ1FvQWdBUkJBQWlBRUg4QjJvaUFUWUNLQ0FBUXYvLy8vOFBOd0w0QnlBQVFvR0FnSUFnTndLQUNDQUFRb09BZ0lEQUFEY0NpQWdnQUVMOS8vLy9iemNDOEFjZ0FFS0ZnSUNBNEFBM0FwQUlJQUJDKy8vLy8wODNBdWdISUFCQ2g0Q0FnSUFCTndLWUNDQUFRdm4vLy8rdmZ6Y0M0QWNnQUVLSmdJQ0FvQUUzQXFBSUlBQkM5Ly8vLzQ5L053TFlCeUFBUW91QWdJREFBVGNDcUFnZ0FFTDEvLy8vNzM0M0F0QUhJQUJDallDQWdPQUJOd0t3Q0NBQVF2UC8vLy9QZmpjQ3lBY2dBRUVQTmdLNENDQUFRdkgvLy8rdmZqY0N3QWRCRUNFQ1FSQWhBd05BSUFFZ0EwRUNkQ0lBYWlBQ05nSUFJQUVnQUd0QkFDQUNheUlFTmdJQUlBRWdBRUVFY21vZ0FqWUNBQ0FCSUFOQmYzTkJBblJxSUFRMkFnQWdBa0VCYWlFQ1FUQWhBQ0FEUVFKcUlnTkJNRWNOQUFzRFFDQUJJQUJCQW5RaUFtcEJJRFlDQUNBQklBSnJRV0EyQWdBZ0FTQUNRUVJ5YWtFZ05nSUFJQUVnQUVGL2MwRUNkR3BCWURZQ0FDQUJJQUpCQ0hKcVFTQTJBZ0FnQVVGK0lBQnJRUUowYWtGZ05nSUFJQUVnQWtFTWNtcEJJRFlDQUNBQlFYMGdBR3RCQW5ScVFXQTJBZ0FnQUVFRWFpSUFRWUFDUncwQUN3c01BQ0FBSUFBb0FnQVFuQVVMOXdJQkNuOGdBQ2dDNUFNaUJDQUFLQUpZSWdGQkFVWWlBallDSENBRUlBQkJBVUgrQlVHQUFpQUNHeUFBS0FKNElBQW9BZ1FvQWdnUkNBQTJBaGdnQUNnQ2VFRUFTZ1JBSUFRb0FoUWhCaUFCUVFGSElRZ0RRQ0FHSUFRZ0IwRUNkQ0lCYWlnQ0lDSUNiU0VHSUFoRkJFQWdCQ2dDR0NBQmFpSURJQU1vQWdCQi93RnFOZ0lBQ3lBQ1FmNEJhaUFDUVFGcklnbEJBWFFpQ20waEJTQUVLQUlZSUFGcUtBSUFJUUZCQUNFQ1FRQWhBd05BSUFNZ0JVb0VRQU5BSUFNZ0FrRUJhaUlDUVFGMFFRRnlRZjhCYkNBSmFpQUtiU0lGU2cwQUN3c2dBU0FEYWlBQ0lBWnNPZ0FBSUFOQkFXb2lBMEdBQWtjTkFBc2dDRVVFUUVFQklRSURRQ0FCSUFKcklnVWdBUzBBQURvQUFDQUJJQUpxSWdNZ0FTMEEvd0U2QVA4QklBRWdBa0YvYzJvZ0FTMEFBRG9BQUNBRElBRXRBUDhCT2dDQUFpQUZRUUpySUFFdEFBQTZBQUFnQXlBQkxRRC9BVG9BZ1FJZ0FrRURhaUlDUVlBQ1J3MEFDd3NnQjBFQmFpSUhJQUFvQW5oSURRQUxDd3NZQUNBQUtBSUFJZ0ZCTXpZQ0ZDQUFJQUVvQWdBUkFRQUwrZ01CQ1g5QjhKUHIzQU1nQW00aENDQUFLQUlFSVFRZ0FrSHhrK3ZjQTA4RVFDQUFLQUlBSWdkQnlBQTJBaFFnQUNBSEtBSUFFUUVBQ3lBRUlBZ2dBeUFESUFoS0d5SUlOZ0pRSUFBZ0FTQURRUUowRU5FQ0lRb2dBd1JBSUFGQkFra2hDMEVBSVFjRFFDQUFLQUlFSVFVZ0NDQURJQWRySWdRZ0JDQUlTeHNpQ0NBQ2JDSUVRZkdUNjl3RFR3UkFJQUFvQWdCQ3VJQ0FnREEzQWhRZ0FDQUFLQUlBS0FJQUVRRUFDeUFFUVFnZ0JFRUhjU0lHYTBFQUlBWWJhaUVHSUF0RkJFQWdBQ2dDQUNJRUlBRTJBaGdnQkVFUE5nSVVJQUFnQUNnQ0FDZ0NBQkVCQUFzZ0JrRVFhaUlKRURjaUJFVUVRQ0FBS0FJQVFyaUFnSURBQURjQ0ZDQUFJQUFvQWdBb0FnQVJBUUFMSUFVZ0JTZ0NUQ0FKYWpZQ1RDQUZJQUZCQW5ScUlnVW9BandoQ1NBRVFRQTJBZ2dnQkNBR05nSUVJQVFnQ1RZQ0FDQUZJQVEyQWp3Q1FDQUlSUTBBSUFSQkVHb2hCVUVBSVFZZ0NDSUVRUU54SWdrRVFBTkFJQW9nQjBFQ2RHb2dCVFlDQUNBRVFRRnJJUVFnQWlBRmFpRUZJQWRCQVdvaEJ5QUdRUUZxSWdZZ0NVY05BQXNMSUFoQkFXdEJBMGtOQUFOQUlBb2dCMEVDZEdvaUJpQUZOZ0lBSUFZZ0FpQUZhaUlGSUFKcUlna2dBbW9pRERZQ0RDQUdJQWsyQWdnZ0JpQUZOZ0lFSUFkQkJHb2hCeUFDSUF4cUlRVWdCRUVFYXlJRURRQUxDeUFESUFkTERRQUxDeUFLQy9RREFRbC9RZkNUNjl3RElBSkJCM1FpQzI0aEJTQUFLQUlFSVFRZ0MwSHhrK3ZjQTA4RVFDQUFLQUlBSWdaQnlBQTJBaFFnQUNBR0tBSUFFUUVBQ3lBRUlBVWdBeUFESUFWS0d5SUZOZ0pRSUFBZ0FTQURRUUowRU5FQ0lRb2dBd1JBSUFGQkFra2hEQ0FDUVFkMElRbEJBQ0VHQTBBZ0FDZ0NCQ0VFSUFzZ0JTQURJQVpySWdJZ0FpQUZTeHNpQld3aUIwSHhrK3ZjQTA4RVFDQUFLQUlBUXJpQWdJQXdOd0lVSUFBZ0FDZ0NBQ2dDQUJFQkFBc2dERVVFUUNBQUtBSUFJZ0lnQVRZQ0dDQUNRUTgyQWhRZ0FDQUFLQUlBS0FJQUVRRUFDeUFIUVJCeUlnZ1FOeUlDUlFSQUlBQW9BZ0JDdUlDQWdNQUFOd0lVSUFBZ0FDZ0NBQ2dDQUJFQkFBc2dCQ0FFS0FKTUlBaHFOZ0pNSUFRZ0FVRUNkR29pQkNnQ1BDRUlJQUpCQURZQ0NDQUNJQWMyQWdRZ0FpQUlOZ0lBSUFRZ0FqWUNQQUpBSUFWRkRRQWdBa0VRYWlFQ1FRQWhCeUFGSVFRZ0JVRURjU0lJQkVBRFFDQUtJQVpCQW5ScUlBSTJBZ0FnQkVFQmF5RUVJQVpCQVdvaEJpQUNJQWxxSVFJZ0IwRUJhaUlISUFoSERRQUxDeUFGUVFGclFRTkpEUUFEUUNBS0lBWkJBblJxSWdjZ0FqWUNBQ0FISUFJZ0NXb2lBaUFKYWlJSU5nSUlJQWNnQWpZQ0JDQUhJQWdnQ1dvaUFqWUNEQ0FDSUFscUlRSWdCa0VFYWlFR0lBUkJCR3NpQkEwQUN3c2dBeUFHU3cwQUN3c2dDZ3MwQUNBQUtBSUFHaUFBS0FJQUlBQVExd0ZCRkd4cUdpQUFLQUlBSUFBUWZrRVViR29hSUFBb0FnQWdBQkRYQVVFVWJHb2FDd3dBSUFBZ0FDZ0NBQkNRQlFzc0FDQUFLQUlBR2lBQUtBSUFJQUFRMkFGcUdpQUFLQUlBSUFBUWpnRnFHaUFBS0FJQUlBQVEyQUZxR2d0U0FDQUFRZ0EzQW1nZ0FFSGdBVFlDRUNBQVFlRUJOZ0lNSUFCQjRnRTJBZ2dnQUVIakFUWUNCQ0FBUWVRQk5nSUFJQUJDQURjQ2ZDQUFRdjRBTndKMElBQkJrSzBDTmdKd0lBQkJBRFlDRkNBQUM5a0JBUU4vQWtBZ0FDZ0N0QUlOQUFKQUlBQW9BaWhCQTJzT0JRQUJBUUVBQVFzZ0FDZ0NKRUVEUncwQUlBQW9BaXhCQWtjTkFDQUFLQUo0UVFOSERRQWdBQ2dDc0FJTkFDQUFLQUxZQVNJQktBSUlRUUpIRFFBZ0FTZ0NZRUVCUncwQUlBRW9BcmdCUVFGSERRQWdBU2dDREVFQ1NnMEFJQUVvQW1SQkFVY05BQ0FCS0FLOEFVRUJSdzBBSUFFb0FpUWlBaUFBS0FMRUFrY05BQ0FCS0FKOElBSkhEUUFnQVNnQzFBRWdBa2NOQUNBQktBSW9JZ0lnQUNnQ3lBSkhEUUFnQVNnQ2dBRWdBa2NOQUNBQktBTFlBU0FDUmlFREN5QURDeXdCQVg4Z0FCQ3hCU0FBS0FJQUJFQWdBQkN3QlNBQUVESWFJQUFvQWdBaEFTQUFFTmdCR2lBQkVERUxDd29BSUFBb0FnQWdBV29MOHdFQkJuOGdBQ2dDNEFNaUFTQUFRUUZCZ0FnZ0FDZ0NCQ2dDQUJFRUFEWUNDQ0FCSUFCQkFVR0FDQ0FBS0FJRUtBSUFFUVFBTmdJTUlBRWdBRUVCUVlBSUlBQW9BZ1FvQWdBUkJBQTJBaEFnQVNBQVFRRkJnQWdnQUNnQ0JDZ0NBQkVFQUNJRE5nSVVJQUVvQWhBaEJDQUJLQUlNSVFVZ0FTZ0NDQ0VHUVFBaEFVR0FmeUVBQTBBZ0JpQUJRUUowSWdKcUlBQkI2YzBGYkVHQWdBSnFRUkIxTmdJQUlBSWdCV29nQUVHaWl3ZHNRWUNBQW1wQkVIVTJBZ0FnQWlBRWFpQUFRYTZTZld3MkFnQWdBaUFEYWlBQVFlZlBmbXhCZ0lBQ2FqWUNBQ0FBUVFGcUlRQWdBVUVCYWlJQlFZQUNSdzBBQ3d2YUJnRUhmMEVCSVFFQ1FBSkFJQUFvQXRRQ0lnSkJBVVlFUUNBQUlBQW9BdGdDSWdJb0FodzJBdWdDSUFBZ0FpZ0NJQ0lETmdMc0FpQUNRUUUyQWtBZ0FrS0JnSUNBRURjQ09DQUNRUUUyQWtnZ0FpQUNLQUlrTmdKRUlBSWdBeUFDS0FJTUlnSndJZ01nQWlBREd6WUNUQ0FBUWdFM0EvQUNEQUVMSUFKQkJXdEJlMDBFUUNBQUtBSUFJZ0VnQWpZQ0dDQUJRUnMyQWhRZ0FDZ0NBRUVFTmdJY0lBQWdBQ2dDQUNnQ0FCRUJBQXNnQUNBQUtBSWNJQUFvQXF3RElBQW9BcndDYkJCcE5nTG9BaUFBS0FJZ0lBQW9BcXdESUFBb0FzQUNiQkJwSVFJZ0FFRUFOZ0x3QWlBQUlBSTJBdXdDSUFBb0F0UUNRUUJNRFFFZ0FFSDBBbW9oQkFOQUlBQWdBMEVDZEdvb0F0Z0NJZ0VnQVNnQ0NDSUZOZ0k0SUFFZ0FTZ0NEQ0lHTmdJOElBRWdCU0FHYkNJQ05nSkFJQUVnQlNBQktBSWtiRFlDUkNBQklBRW9BaHdnQlhBaUJ5QUZJQWNiTmdKSUlBRWdBU2dDSUNBR2NDSUJJQVlnQVJzMkFrd2dBQ2dDOEFJZ0FtcEJDMDRFUUNBQUtBSUFJZ0ZCRGpZQ0ZDQUFJQUVvQWdBUkFRQUxBa0FnQWtFQVRBMEFJQUpCQVdzaEJVRUFJUUVnQWtFRGNTSUdCRUFEUUNBQUlBQW9BdkFDSWdkQkFXbzJBdkFDSUFBZ0IwRUNkR29nQXpZQzlBSWdBa0VCYXlFQ0lBRkJBV29pQVNBR1J3MEFDd3NnQlVFRFNRMEFBMEFnQUNBQUtBTHdBaUlCUVFGcU5nTHdBaUFFSUFGQkFuUnFJQU0yQWdBZ0FDQUFLQUx3QWlJQlFRRnFOZ0x3QWlBRUlBRkJBblJxSUFNMkFnQWdBQ0FBS0FMd0FpSUJRUUZxTmdMd0FpQUVJQUZCQW5ScUlBTTJBZ0FnQUNBQUtBTHdBaUlCUVFGcU5nTHdBaUFFSUFGQkFuUnFJQU0yQWdBZ0FrRUZheUVCSUFKQkJHc2hBaUFCUVg1SkRRQUxDeUFEUVFGcUlnTWdBQ2dDMUFJaUFVZ05BQXNnQVVFQVRBMEJDMEVBSVFJRFFDQUFJQUpCQW5ScUtBTFlBaUlES0FKUVJRUkFBa0FnQXlnQ0VDSUJRUU5OQkVBZ0FDQUJRUUowYWlnQ3BBRU5BUXNnQUNnQ0FDSUVJQUUyQWhnZ0JFRTJOZ0lVSUFBZ0FDZ0NBQ2dDQUJFQkFBc2dBeUFBUVFGQmhBRWdBQ2dDQkNnQ0FCRUVBQ0FBSUFGQkFuUnFLQUtrQVVHRUFSQStOZ0pRSUFBb0F0UUNJUUVMSUFKQkFXb2lBaUFCU0EwQUN3c2dBQ0FBS0FMVUF5Z0NBQkVCQUNBQUlBQW9Bc1FES0FJQUVRRUFJQUFvQXN3RElBQW9Bc1FES0FJRU5nSUFDNjVEQXkxL0Izd0JmaU1BUVJCcklpY2tBQ0FGUVFBZ0JVRUFTaHNoTkFOQUlDMGdORWNFUUNBTElDNUJDSFJxSWg4Z0JDQXRRYkR4Qkd4cUlnVW9BZ0EyQWdBQ1FDQUpJQVVyQXdpMklBVXJBeEMySUNkQkRHb2dKMEVJYWhEZUFVRUFTQTBBSUI4Z0p5b0NETHM1QXpnZ0gwRkFheUFuS2dJSXV6a0RBQ0FGUVJ4cUlUVWdCVUhjdUFKcUlUWWdCU2dDR0JvZ0JVR2M4UVJxSVRNZ0gwSElBR29oTHlBZlFhZ0JhaUVvSXdCQkVHc2lJeVFBUVFJUWhnUWhGMEVDRUlZRUlTQkJBa0VDRUxjQklSbEJBQ0ViQW44Q1FBTkFJQnRCQkVjRVFBSi9JRE1nRzBFQmFpSVlRUUowYWlnQ0FDSU9JRE1nRzBFQ2RHb29BZ0FpQld0QkFXcTNSSnFabVptWm1hay9va1FBQUFBQUFBRGdQNkFpT3lBRnQ2QWlQSmxFQUFBQUFBQUE0RUZqQkVBZ1BLb01BUXRCZ0lDQWdIZ0xJUVVDZnlBT3R5QTdvU0k3bVVRQUFBQUFBQURnUVdNRVFDQTdxZ3dCQzBHQWdJQ0FlQXNnQldzaUVFRi9JQkJCQUU0YlFRRnFJUkZCQUNFT0lCQkJBV3BCQWhDM0FTRWhBMEFnRGlBUlJ3UkFJQWtnTlNBRklBNXFRUUowSWhCcUtBSUFzaUFRSURacUtBSUFzaUFqUVF4cUlDTkJDR29RM2dGQkFFZ05CQ0FoS0FJQUlBNUJCSFJxSWhBZ0l5b0NETHM1QXdBZ0VDQWpLZ0lJdXprRENDQU9RUUZxSVE0TUFRc0xRWDhoRXdKQUlDRW9BZ1FpRlVFQ1NBMEFJQ0VvQWdnaUJVRUNTQTBBSUJrb0FnZ2dCVWNOQUNBVklBVWdCU0FWU2hzaURpQVpLQUlFUncwQUlCY29BZ1FnRGtjTkFDQWdLQUlFSUFWSERRQUNmeUFoS0FJRUlDRW9BZ2dRdHdFaUVBUkFRWDhoRHdKQUlCQW9BZ1FpRGlBaEtBSUVSdzBBSUJBb0FnZ2lFaUFoS0FJSVJ3MEFRUUFoRHlBT1FRQWdEa0VBU2hzaEZDQVNRUUFnRWtFQVNoc2hHa0VBSVE0RFFDQU9JQlJHRFFFZ0RpQVNiQ0VXUVFBaEVRTkFJQkVnR2tjRVFDQVJJQlpxUVFOMEloMGdFQ2dDQUdvZ0lTZ0NBQ0FkYWlzREFEa0RBQ0FSUVFGcUlSRU1BUXNMSUE1QkFXb2hEZ3dBQ3dBTElCQWdEMEVBVGcwQkdpQVFFRVFMUVFBTElocEZEUUJCQUNFT1FRQWhEMEYvSVJFQ1FDQWFLQUlFSWhKQkFFd05BQ0FhS0FJSUloQkJBRXdOQUNBZ0tBSUVJQkJIRFFBRFFDQU9JQkJIQkVBZ0lDZ0NBQ0FPUVFOMGFrSUFOd01BSUE1QkFXb2hEZ3dCQ3dzZ0dpZ0NBQ0VSQTBBZ0R5QVNSZ1JBSUJLM0lUdEJBQ0VSUVFBaERnTkFJQTRnRUVZTkF5QWdLQUlBSUE1QkEzUnFJZzhnRHlzREFDQTdvemtEQUNBT1FRRnFJUTRNQUFzQUJTQWdLQUlBSVE1QkFDRVVBMEFnRUNBVVJ3UkFJQTRnRVNzREFDQU9Ld01Bb0RrREFDQVVRUUZxSVJRZ0RrRUlhaUVPSUJGQkNHb2hFUXdCQ3dzZ0QwRUJhaUVQREFFTEFBc0FDd0pBSUJGQkFFZ05BRUYvSVJRQ1FDQWFLQUlJSWc0Z0lDZ0NCRWNOQUVFQUlSUWdEa0VBSUE1QkFFb2JJUkFnR2lnQ0JDSU9RUUFnRGtFQVNoc2hGaUFhS0FJQUlRNUJBQ0VSQTBBZ0VTQVdSZzBCSUNBb0FnQWhFa0VBSVE4RFFDQVBJQkJIQkVBZ0RpQU9Ld01BSUJJckF3Q2hPUU1BSUE5QkFXb2hEeUFPUVFocUlRNGdFa0VJYWlFU0RBRUxDeUFSUVFGcUlSRU1BQXNBQ3lBVVFRQklEUUFnRmJlZklUdEJBQ0VPSUFVZ0ZXd2lCVUVBSUFWQkFFb2JJUVVEUUNBRklBNUhCRUFnR2lnQ0FDQU9RUU4wYWlJUUlCQXJBd0FnTzZNNUF3QWdEa0VCYWlFT0RBRUxDd0ovUVFBaERrRi9JUkVDUUFKQUlCb29BZ1FpRUVFQ1NBMEFJQm9vQWdnaUJVRUNTQTBBSUJrb0FnZ2dCVWNOQUNBRklCQWdCU0FRU0JzaUZpQVpLQUlFUncwQUlCY29BZ1FnRmtjTkFBSkFJQllnRmlBV0VMY0JJaFVvQWdSR0JFQWdGU2dDQ0NBV1JnMEJDd3dDQ3dKQUlBVWdFRTBpTjBVRVFFRi9JUlFDUUNBYUtBSUVJaE1nRlNnQ0JFY05BQ0FWS0FJSUlCTkhEUUJCQUNFVUlCTkJBQ0FUUVFCS0d5RWlJQm9vQWdnaUhVRUFJQjFCQUVvYklSd2dGU2dDQUNJZUlRVURRQ0FPSUNKR0RRRWdEaUFkYkNFcFFRQWhFUU5BQWtBZ0VTQVRSd1JBSUE0Z0VVc0VRQ0FGSUI0Z0VTQVRiQ0FPYWtFRGRHb3JBd0E1QXdBTUFnc2dHaWdDQUNFUUlBVkNBRGNEQUNBUUlDbEJBM1JxSVJJZ0VDQVJJQjFzUVFOMGFpRVBRUUFoRUVRQUFBQUFBQUFBQUNFN0EwQWdFQ0FjUmcwQ0lBVWdFaXNEQUNBUEt3TUFvaUE3b0NJN09RTUFJQkJCQVdvaEVDQVBRUWhxSVE4Z0VrRUlhaUVTREFBTEFBc2dEa0VCYWlFT0RBSUxJQkZCQVdvaEVTQUZRUWhxSVFVTUFBc0FDd0FMSUJSQkFFNE5BUXdEQzBGL0lSQUNRQ0FhS0FJSUloRWdGU2dDQkVjTkFDQVZLQUlJSUJGSERRQkJBQ0VRSUJGQkFDQVJRUUJLR3lFZElCb29BZ1FpQlVFQUlBVkJBRW9iSVNJZ0ZTZ0NBQ0ljSVJNRFFFRUFJUVVnRGlBZFJnMEJBMEFDUUNBRklCRkhCRUFnQlNBT1NRUkFJQk1nSENBRklCRnNJQTVxUVFOMGFpc0RBRGtEQUF3Q0N5QWFLQUlBSVE4Z0UwSUFOd01BSUE4Z0JVRURkR29oRWlBUElBNUJBM1JxSVE5QkFDRVVSQUFBQUFBQUFBQUFJVHNEUUNBVUlDSkdEUUlnRXlBUEt3TUFJQklyQXdDaUlEdWdJanM1QXdBZ0ZFRUJhaUVVSUJJZ0VVRURkQ0llYWlFU0lBOGdIbW9oRHd3QUN3QUxJQTVCQVdvaERnd0NDeUFGUVFGcUlRVWdFMEVJYWlFVERBQUxBQXNBQ3lBUVFRQk9EUUFNQWdzakFFRVFheUlpSkFCQmZ5RVJBa0FnRlNnQ0JDSWRRUUpJRFFBZ0hTQVZLQUlJUncwQUlCY29BZ1FnSFVjTkFDQWRFSVlFSWlsRkRRQWdJaUFkUVFGckloUTJBZ3dnSWlBcEtBSUFRUWhxTmdJSVFRQWhFQ01BUVJCckloTWtBRUYvSVNRQ1FDQVZLQUlJSWc4Z0ZTZ0NCRWNOQUNBUElCY29BZ1JIRFFBZ0R5QWlLQUlNUVFGcVJ3MEFJQTlCQW1zaUhFRUFJQnhCQUVvYklTb0RRQUpBSUNvZ0VDSVNSd1JBSUJKQkEzUWlKQ0FYS0FJQWFpQVZLQUlBSUE4Z0VteEJBM1JxSWg0Z0pHb3JBd0E1QXdBZ0V5QWVJQkpCQVdvaUVFRURkQ0lyYWlJc05nSUlJQk1nRHlBU1FYOXphaUlsTmdJTVFRQWhCUUpBSUJOQkNHb2lEaUFPRUlJRW55STdSQUFBQUFBQUFBQUFZUTBBSUE0b0FnQWlKaUFtS3dNQUlqd2dPNW9nT3lBOFJBQUFBQUFBQUFBQVl4c2lPNkFpUERrREFFUUFBQUFBQUFEd1B5QTdJRHlpbjZNaFBDQU9LQUlFSWc1QkFDQU9RUUJLR3lFT0EwQWdCU0FPUmcwQklDWWdCVUVEZEdvaU1DQThJREFyQXdDaU9RTUFJQVZCQVdvaEJRd0FDd0FMSUNJb0FnZ2dKR29nTzVvaU96a0RBQ0FRSVFVZ08wUUFBQUFBQUFBQUFHRU5BZ05BUkFBQUFBQUFBQUFBSVRzZ0VDRU9JQVVnRDA0TkFnTkFJQVVnRGswRVFDQUZJQTlzSVNRZ0JTRU9BMEFnRGlBUFNBUkFJQlVvQWdBZ0RpQWtha0VEZEdvckF3QWdIaUFPUVFOMGFpc0RBS0lnTzZBaE95QU9RUUZxSVE0TUFRc0xJQmNvQWdBZ0JVRURkR29nT3prREFDQUZRUUZxSVFVTUFnVWdGU2dDQUNBT0lBOXNJQVZxUVFOMGFpc0RBQ0FlSUE1QkEzUnFLd01Bb2lBN29DRTdJQTVCQVdvaERnd0JDd0FMQUFzQUN3SkFBa0FnRDBFQ1RnUkFJQmNvQWdBaUJTQWNRUU4wSWc1cUlCVW9BZ0FpRUNBUElCeHNJaElnSEdwQkEzUnFLd01BT1FNQUlDSW9BZ2dnRG1vZ0VDQVBRUUZySWc0Z0VtcEJBM1JxS3dNQU9RTUFEQUVMSUE5QkFVY05BU0FYS0FJQUlRVWdGU2dDQUNFUVFRQWhEZ3NnQlNBT1FRTjBhaUFRSUE0Z0Qyd2dEbXBCQTNScUt3TUFPUU1BQzBFQUlTUWdEMEVBSUE5QkFFb2JJU1lnRHlFRkEwQWdCVUVBVEEwRElCVW9BZ0FnQlVFQmF5SVFJQTlzUVFOMGFpRWVBa0FnQlNBY1NnMEFJQThnQldzaEpTQWVJQVZCQTNScUlTb2dCU0VTQTBBZ0R5QVNUQTBCSUJNZ0pUWUNEQ0FUSUNVMkFnUWdFeUFxTmdJSUlCTWdGU2dDQUNBUElCSnNJaXNnQldwQkEzUnFOZ0lBSUJOQkNHb2dFeENDQkpvaE95QUZJUTREUUNBT0lBOUlCRUFnRlNnQ0FDQU9JQ3RxUVFOMGFpSXNJRHNnSGlBT1FRTjBhaXNEQUtJZ0xDc0RBS0E1QXdBZ0RrRUJhaUVPREFFTEN5QVNRUUZxSVJJTUFBc0FDMEVBSVE0RFFDQU9JQ1pIQkVBZ0hpQU9RUU4wYWtJQU53TUFJQTVCQVdvaERnd0JDd3NnSGlBUVFRTjBha0tBZ0lDQWdJQ0ErRDgzQXdBZ0VDRUZEQUFMQUFzZ0V5QWxOZ0lNSUJNZ0pUWUNCQ0FUSUN3MkFnZ2dFeUFYS0FJQUlDdHFOZ0lBSUJOQkNHb2dFeENDQkVRQUFBQUFBQURndjZJaE95QVBJUVVEUUNBRlFRRnJJZ1VnRWt3TkFTQVhLQUlBSWlRZ0JVRURkQ0lPYWlJbElEc2dEaUFlYWlzREFDSThvaUFsS3dNQW9DSTlPUU1BSUFVZ0Qyd2hKU0FGSVE0RFFDQU9JQTlPRFFFZ0ZTZ0NBQ0FPSUNWcVFRTjBhaUltSUNZckF3QWdQQ0FrSUE1QkEzUWlKbW9yQXdDaUlEMGdIaUFtYWlzREFLS2dvVGtEQUNBT1FRRnFJUTRNQUFzQUN3QUxBQXNnRTBFUWFpUUFBa0FnSkVFQVNBMEFJQ2tvQWdBaUUwSUFOd01BSUJRaEVBTkFJQkFpQlNJUlFRQk1CRUJCQUNFRkEwQWdCU0FVUmdSQVFRQWhFUXdFQ3lBWEtBSUFJZzhnQlVFRGRHb2lFaXNEQUNJOElUc2dCVUVCYWlJUUlSRWdCU0VPQTBBZ0VTQWRTQVJBSUE4Z0VVRURkR29yQXdBaVBTQTdJRHNnUFdNaUV4c2hPeUFSSUE0Z0V4c2hEaUFSUVFGcUlSRU1BUXNMSUE4Z0RrRURkR29nUERrREFDQVNJRHM1QXdBZ0ZTZ0NBQ0lQSUFVZ0hXeEJBM1JxSVJFZ0R5QU9JQjFzUVFOMGFpRU9RUUFoQlFOQUlBVWdIVVlFUUNBUUlRVU1BZ1VnRGlzREFDRTdJQTRnRVNzREFEa0RBQ0FSSURzNUF3QWdCVUVCYWlFRklCRkJDR29oRVNBT1FRaHFJUTRNQVFzQUN3QUxBQXNEUUFKQUlCRWlEa0VBVEFSQVFRQWhEZ3dCQ3lBVElBNUJBM1FpRUdvckF3Q1pJQmNvQWdBaUR5QU9RUUZySWhGQkEzUnFLd01BbVNBUElCQnFLd01BbWFCRWplMjFvUGZHc0Q2aVpBMEJDd3NnQlVFQmF5RVFJQVVnRGtZTkFDQU9JQVVnQlNBT1NCc2hKaUFUSUFWQkEzUWlLbW9oSkNBT1FRTjBJaXNnRTJvaExFRUFJUkVEUUNBUlFlUUFSZzBCSUJGQkFXb2hFaUFYS0FJQUlod2dLMm9yQXdBZ0hDQXFhaUl3S3dNQUlqdWhJQ1FyQXdBaVBDQThvaUk4SUJ3Z0VFRURkR29pT0NzREFDQTdvVVFBQUFBQUFBRGdQNklpT3lBOElEc2dPNktnbnlJOG1pQThJRHRFQUFBQUFBQUFBQUJqRzZDam9DRStJQ3dyQXdnaFBTQU9JUVVEUUNBRklDWkhCRUFDUUNBK21TSTdJRDJaWmdSQUlEdEV2SW5ZbDdMU25EeGtSUVJBUkFBQUFBQUFBUEEvSVR0RUFBQUFBQUFBQUFBaFBBd0NDeUE5bWlBK295STdSQUFBQUFBQUFQQS9JRHNnTzZKRUFBQUFBQUFBOEQrZ242TWlPNkloUEF3QkN5QSttaUE5b3lJN1JBQUFBQUFBQVBBL0lEc2dPNkpFQUFBQUFBQUE4RCtnbjZNaVBLSWhPd3NnSENBRlFRTjBJaVZxSWhFZ0VTc0RBQ0kvSUR3Z1B5QWNJQVZCQVdvaUQwRURkQ0lSYWlJeEt3TUFJaitoSWtBZ1BLSWdPeUE3b0NBUklCTnFJaDRyQXdDaW9LSWlRYUU1QXdBZ01TQS9JRUdnT1FNQUlBVWdEa29FUUNBVElDVnFJaEVnT3lBUkt3TUFvaUE5SUR5aW9Ua0RBQXNnUEpvaFB5QWVJRHdnT3lCQW9pQThSQUFBQUFBQUFBREFvaUFlS3dNQUlrQ2lvS0lnUUtBNUF3QWdEeUFkYkNFeElBVWdIV3doT1VFQUlSRURRQ0FSSUIxSEJFQWdGU2dDQUNJeUlCRWdPV3BCQTNScUlqb2dPeUE2S3dNQUlqNmlJRElnRVNBeGFrRURkR29pTWlzREFDSTlJRCtpb0RrREFDQXlJRHdnUHFJZ095QTlvcUE1QXdBZ0VVRUJhaUVSREFFTEN5QUZJQkJPSVJFZ0R5RUZJQkVOQVNBZUt3TUFJVDRnRXlBbGFpSVJJRHNnRVNzREVDSTdvamtERUNBN0lEK2lJVDBNQVFzTElCSWhFU0FrS3dNQW1TQTRLd01BbVNBd0t3TUFtYUJFamUyMW9QZkdzRDZpWkEwQUN3d0FDd0FMSUNrUTNRSUxJQ0pCRUdva0FDQVJRUUJJRFFFQ1FDQTNSUVJBUVFBaERrRi9JUThDUUNBYUtBSUVJZ1ZCQUV3TkFDQWFLQUlJSWhOQkFFd05BQ0FWS0FJRUlBVkhEUUFnRlNnQ0NDQUZSdzBBSUJrb0FnUWdCVWNOQUNBWktBSUlJQk5IRFFBZ0Z5Z0NCQ0FGUncwQUlCa29BZ0FoRkFOQUFrQWdCU0FPUmdSQUlBVWhEZ3dCQ3lBWEtBSUFJQTVCQTNScUt3TUFJanRFdkluWWw3TFNuRHhqRFFBZ0JTQU9iQ0VXUkFBQUFBQUFBUEEvSUR1Wm42TWhQRUVBSVJFRFFDQVJJQk5IQkVBZ0dpZ0NBQ0FSUVFOMGFpRVFJQlVvQWdBZ0ZrRURkR29oRDBFQUlSSkVBQUFBQUFBQUFBQWhPd05BSUFVZ0VrY0VRQ0FTUVFGcUlSSWdEeXNEQUNBUUt3TUFvaUE3b0NFN0lCQWdFMEVEZEdvaEVDQVBRUWhxSVE4TUFRc0xJQlFnUENBN29qa0RBQ0FSUVFGcUlSRWdGRUVJYWlFVURBRUxDeUFPUVFGcUlRNE1BUXNMSUE0Z0JTQUZJQTVJR3lFRlFRQWhEeUFUUVFBZ0UwRUFTaHNoRUFOQUlBVWdEa1lOQVNBWEtBSUFJQTVCQTNScVFnQTNBd0JCQUNFU0EwQWdFQ0FTUndSQUlCUkNBRGNEQUNBU1FRRnFJUklnRkVFSWFpRVVEQUVMQ3lBT1FRRnFJUTRNQUFzQUN5QVBRUUJPRFFFTUF3dEJBQ0VGSUJaQkFDQVdRUUJLR3lFT0lCa29BZ0FoRUNBVktBSUFJUklEUUFKQUlBVWdEa2NFUUVFQUlSRWdGeWdDQUNBRlFRTjBhaXNEQUVTOGlkaVhzdEtjUEdORkRRRWdCU0VPQ3lBT0lCWWdEaUFXU2hzaEJRTkFJQVVnRGtZTkF5QVhLQUlBSUE1QkEzUnFRZ0EzQXdCQkFDRVJBMEFnRVNBV1J3UkFJQkJDQURjREFDQVJRUUZxSVJFZ0VFRUlhaUVRREFFTEN5QU9RUUZxSVE0TUFBc0FDd05BSUJFZ0ZrY0VRQ0FRSUJJckF3QTVBd0FnRVVFQmFpRVJJQkJCQ0dvaEVDQVNRUWhxSVJJTUFRc0xJQVZCQVdvaEJRd0FDd0FMSUJVUVJFRUFJUkVMSUJFTUFRc2dGUkJFUVg4TElSTWdHaEJFUVFBaERpQVhLQUlFSWdWQkFDQUZRUUJLR3lFUVJBQUFBQUFBQUFBQUlUdEJBQ0VGQTBBZ0JTQVFSZ1JBQTBBZ0RpQVFSZzBFSUJjb0FnQWdEa0VEZEdvaUJTQUZLd01BSUR1ak9RTUFJQTVCQVdvaERnd0FDd0FGSURzZ0Z5Z0NBQ0FGUVFOMGFpc0RBS0FoT3lBRlFRRnFJUVVNQVFzQUN3QUxJQm9RUkFzZ0UwRUFTQTBDSUM4Z0cwRVliR29pQlNBWktBSUFJZzRyQXdnaU96a0RBQ0FGSUE0ckF3QWlQSm81QXdnZ0JTQTdJQ0FvQWdBaUJTc0RBS0lnUENBRkt3TUlvcUdhT1FNUUlDRVFSQ0FZSVJzTUFRc0xJQmtRUkNBZ0VOMENJQmNRM1FKQkFDRU9BMEJCQUNBT1FRUkdEUUlhUVg4Z0x5QU9RUUZyUVFOeFFSaHNhaUlGS3dNQUlDOGdEa0VZYkdvaUVDc0RDQ0k4b2lBRkt3TUlJajBnRUNzREFLS2hJanVaUkMxREhPdmlOaG8vWXcwQ0dpQW9JQTVCQkhScUloRWdQU0FRS3dNUW9pQUZLd01RSUR5aW9TQTdvemtEQUNBUklCQXJBd0FnQlNzREVLSWdFQ3NERUNBRkt3TUFvcUVnTzZNNUF3Z2dEa0VCYWlFT0RBQUxBQXNnSVJCRUlCa1FSQ0FnRU4wQ0lCY1EzUUpCZndzaEJTQWpRUkJxSkFBZ0JVRUFTQTBBSUI5QkNHb2hFeUFmUVJScUlTRWdIMEVvYWlFaUlCOUJER29oRWlBZlFSaHFJUm9nSDBFd2FpRVZJQjlCOEFGcUlRNGdIMEg0QVdvaElDTUFRWkRnQUdzaUZ5UUFRUUVoQlFKQUlBaEJBbXRCQWtzTkFDQU5RWTRXUmdSQUlBZEJBa0VPUVNvZ0FDQUJJQUlnQXlBSklDaEVBQUFBQUFBQTdEOGdGMEVRYWhDL0EwRUFTQVJBSUJKQmZ6WUNBRUY2SVFVTUFnc2dGMEVRYWlFWklBNGhFVUVBSVE5QkFDRU9Jd0JCc0FGckloZ2tBQ0FZUXNPQmdJRFFBVGNEbUFFZ0dFS0FnSUNBNEJZM0E1QUJRZjhCSVFVRFFDQVBRUVJIQkVBZ0dTQVlRWkFCYWlBUFFRSjBhaWdDQUdvdEFBQWlFQ0FGUWY4QmNTSUZJQVVnRUVzYklRVWdFQ0FPUWY4QmNTSU9JQTRnRUVrYklRNGdEMEVCYWlFUERBRUxDd0ovSUE1Qi93RnhJZzRnQlVIL0FYRWlCV3RCSFV3RVFDQWFRUUEyQWdBZ0ZVS0FnSUNBZ0lDQStMOS9Od01BUVg0TUFRc2dCU0FPYWtFQmRpRWRRUUFoQlVFQUlROGdGUUo4QWtBQ1FBSkFBMEFnRDBFRVJnUkFBa0FDUUFKQUEwQWdCU0lRUVFSR0RRRWdFRUVCYWlFRklCaEJyQUZxSUJCcUxRQUFRUUZIRFFBZ0dFR3NBV29nQlVFRGNXb3RBQUJCQVVjTkFDQVlRYXdCYWlBUVFRSnFRUU54YWkwQUFBMEFDMEVBSVJaQjl3QWhGRUVOSVFWQi93RWhHd0pBSUJBaURnNEVBZ2NHQXdBTElCb2dFRFlDQUVRQUFBQUFBQUR3UHd3SUN5QWFRUUEyQWdBZ0ZVS0FnSUNBZ0lDQStMOS9Od01BUVgwTUNBc0RRQ0FPUVE1R0RRWWdEa0VPYkNFV0lBNUIvdi8vL3dkeElTTkJBQ0VQQTBBZ0QwRU9Sd1JBQWtBZ0RrRURTU0FQUVFOclFRZExja1VnRGtFTFNYRU5BQ0FQUWY3Ly8vOEhjU0lGUlNBT1FRSkpjUTBBSUNOQkRFWWlIQ0FGUlhFZ0JVRU1SaUFjY1hJTkFDQVVJQmhxSUJrZ0R5QVdhbW90QUFBZ0hXc2lCVUVmZGpvQUFDQUZJQVZCSDNVaUhITWdIR3NpQlNBYklBVWdHMGdiSVJzZ0ZFRUJheUVVQ3lBUFFRRnFJUThNQVFzTElBNUJBV29oRGd3QUN3QUxCU0FZUWF3QmFpQVBhaUFkSUJrZ0dFR1FBV29nRDBFQ2RHb29BZ0JxTFFBQVN6b0FBQ0FQUVFGcUlROE1BUXNMQTBCQkFDRVBJQVZCQUVnTkF5QUZRWDV4SVE0Z0JVRURheUVqQTBBZ0QwRU9Sd1JBQWtBZ0QwRURTU0FqUVFkTGNrVWdEMEVMU1hFTkFDQU9SU0FQUWY3Ly8vOEhjVUVNUm5FZ0QwRUNTU0lXSUE1QkRFWnhJQTVGSUJaeGNuSU5BQ0FVSUJocUlCa2dEMEVPYkNBRmFtb3RBQUFnSFdzaUZrRWZkam9BQUNBV0lCWkJIM1VpSEhNZ0hHc2lGaUFiSUJZZ0cwZ2JJUnNnRkVFQmF5RVVDeUFQUVFGcUlROE1BUXNMSUFWQkFXc2hCUXdBQ3dBTEEwQWdCVUVBU0EwQ0lBVkJEbXdoRmlBRlFYNXhJU05CRFNFUEEwQWdEMEVBVGdSQUFrQWdCVUVEU1NBUFFRTnJRUWRMY2tVZ0JVRUxTWEVOQUNBUFFYNXhJZzVCREVZaUhDQWpRUXhHY1EwQUlCd2dCVUVDU1NJZWNTQU9SU0FlY1hJTkFDQVVJQmhxSUJrZ0R5QVdhbW90QUFBZ0hXc2lEa0VmZGpvQUFDQU9JQTVCSDNVaUhITWdIR3NpRGlBYklBNGdHMGdiSVJzZ0ZFRUJheUVVQ3lBUFFRRnJJUThNQVFzTElBVkJBV3NoQlF3QUN3QUxBMEFnRmtFT1JnMEJJQlpCL3YvLy93ZHhJUVVnRmtFRGF5RWpRUTBoRHdOQUlBOUJBRTRFUUFKQUlBOUJBMGtnSTBFSFMzSkZJQTlCQzBseERRQWdCVVVnRDBGK2NTSU9RUXhHY1EwQUlBVkJERVlpSENBT1FReEdjU0FjSUE5QkFrbHhjZzBBSUJRZ0dHb2dHU0FQUVE1c0lCWnFhaTBBQUNBZGF5SU9RUjkyT2dBQUlBNGdEa0VmZFNJY2N5QWNheUlPSUJzZ0RpQWJTQnNoR3lBVVFRRnJJUlFMSUE5QkFXc2hEd3dCQ3dzZ0ZrRUJhaUVXREFBTEFBc2dHaUFRTmdJQVJBQUFBQUFBQVBBL0lCdEJIa29OQUJvZ0c3ZEVBQUFBQUFBQVBrQ2pDemtEQUVGOFFZNFdRZ0FnR0NBWVFZZ0JhaEMvQnlJRlFRQklEUUFhSUJFRVFDQVJJQVUyQWdBTElCY2dHQ2tEaUFFM0F3aEJBQXNoQlNBWVFiQUJhaVFBSUFWQkFFZ0VRQ0FTUVg4MkFnQU1BZ3NnRnlrRENDSkNRbjlSQkVBZ0VrRi9OZ0lBUVhzaEJRd0NDeUFTSUVLblFmLy9BWEZCQUNCQ1FvQ0EvdjhQZzFBYk5nSUFJQ0JGRFFFZ0lDQkNOd01BREFFTElBZEJBaUFOUWY4QmNTSVBJQTlCQTJ3Z0FDQUJJQUlnQXlBSklDZ2dDaUFYUVJCcUVMOERRUUJJQkVBZ0VrRi9OZ0lBUVhvaEJRd0JDeUFYUVJCcUlSUWdEaUVSUVFBaEJVRUFJUTVDQUNGQ0l3QkJNR3NpR0NRQUFuOGdEMEVKYTBGNVRRUkFJQkpCZnpZQ0FDQWFRUUEyQWdBZ0ZVS0FnSUNBZ0lDQStMOS9Od01BUVg4TUFRc2dHRUVBTmdJUUlCZ2dEMEVCYXlJUU5nSWNJQmdnRHlBUGJDSVdRUUZyTmdJWUlCZ2dEeUFRYkRZQ0ZFSC9BU0ViQTBBZ0JVRUVSd1JBSUJRZ0dFRVFhaUFGUVFKMGFpZ0NBR290QUFBaUdTQWJRZjhCY1NJYklCa2dHMGtiSVJzZ0dTQU9RZjhCY1NJT0lBNGdHVWtiSVE0Z0JVRUJhaUVGREFFTEN5QU9RZjhCY1NJRklCdEIvd0Z4SWc1clFSMU1CRUFnRWtGL05nSUFJQnBCQURZQ0FDQVZRb0NBZ0lDQWdJRDR2MzgzQXdCQmZnd0JDeUFGSUE1cVFRRjJJUmxCQUNFT1FRQWhCUUpBQTBBZ0JVRUVSZ1JBQWtBQ1FBTkFJQTRpQlVFRVJnMEJJQVZCQVdvaERpQVlRU3hxSUFWcUxRQUFRUUZIRFFBZ0dFRXNhaUFPUVFOeGFpMEFBRUVCUncwQUlCaEJMR29nQlVFQ2FrRURjV290QUFBTkFBc2dHaUFGTmdJQVFRQWhCVUgvQVNFYkEwQWdCU0FXUndSQUlBVWdGR29pRGlBT0xRQUFJZzRnR1VrNkFBQWdEaUFaYXlJT0lBNUJIM1VpRG5NZ0Rtc2lEaUFiSUE0Z0cwZ2JJUnNnQlVFQmFpRUZEQUVMQ3lBUUlRNENRQUpBQWtBZ0dpZ0NBQTRFQUFFQ0JBY0xJQThoR1VFQUlRNERRQ0FPSUJsR0RRY2dEaUFQYkNFV1FRQWhCUU5BSUFVZ0QwY0VRQUpBSUFVZ0RuSkZEUUFnRGlBUVJpSWRJQVZGY1NBRklCQkdJQjF4Y2cwQUlCUWdCU0FXYW1vdEFBQkJBRWV0SUVKQ0FZYUVJVUlMSUFWQkFXb2hCUXdCQ3dzZ0RrRUJhaUVPREFBTEFBc2dEeUVaUVFBaERnTkFJQTRnR1VZTkJpQVFJUVVEUUNBRlFRQk9CRUFDUUNBT1JTQUZJQkJHY1EwQUlBNGdFRVlpRmlBRklCQkdjU0FXSUFWRmNYSU5BQ0FVSUFVZ0Qyd2dEbXBxTFFBQVFRQkhyU0JDUWdHR2hDRkNDeUFGUVFGcklRVU1BUXNMSUE1QkFXb2hEZ3dBQ3dBTEEwQWdEa0VBU0EwRklBNGdEMndoR1NBUUlRVURRQ0FGUVFCT0JFQWdCU0FRUmlJV0lBNGdFRVp4SUFVZ0RuSkZJQllnRGtWeGNuSkZCRUFnRkNBRklCbHFhaTBBQUVFQVI2MGdRa0lCaG9RaFFnc2dCVUVCYXlFRkRBRUxDeUFPUVFGcklRNE1BQXNBQ3lBU1FYODJBZ0FnR2tFQU5nSUFJQlZDZ0lDQWdJQ0FnUGkvZnpjREFFRjlEQVFMQlNBWVFTeHFJQVZxSUJrZ0ZDQVlRUkJxSUFWQkFuUnFLQUlBYWkwQUFFczZBQUFnQlVFQmFpRUZEQUVMQ3lBUElSa0RRQ0FPUVFCSURRRkJBQ0VGQTBBZ0JTQVpSd1JBSUFVZ0RuSkZJQTVGSUFVZ0VFWnhja0VBSUE0Z0VFWWdCUnR5UlFSQUlCUWdCU0FQYkNBT2Ftb3RBQUJCQUVldElFSkNBWWFFSVVJTElBVkJBV29oQlF3QkN3c2dEa0VCYXlFT0RBQUxBQXNnRlNBYnQwUUFBQUFBQUFBK1FLTkVBQUFBQUFBQThEOGdHMEVlVEJzNUF3QUNRQUpBQWtBZ0RVR0ZDa1lnRFVHRUNHdEJBa2x5RFFBZ0RVR0RCRWNFUUNBTlFZUUdSZzBCSUExQmd3SkhEUUlnR0NCQ3AwR0Eyd0JxTUFBQU53TUlRcGJUcGJPWnphWEw2UUFnUW9oQ0FZTlFEUU1nRWtGL05nSUFJQlZDZ0lDQWdJQ0FnUGkvZnpjREFFRjhEQVFMSUJnZ1FxZEJ3Tm9BYWpBQUFEY0RDQ0JDUXYvLy8vOFBneUZDSUJFRVFDQVJRdjdPNys3YjkvYnovZ0FnUW9pblFRRnhOZ0lBQzBLQXNKQ0JvSWlBZ0lGL0lFS0lRZ0dEVUEwQ0lCSkJmellDQUNBVlFvQ0FnSUNBZ0lENHYzODNBd0JCZkF3REN5QU5JRUpCQUNBWVFRaHFFTDhISWdWQkFFZ0VRQ0FTUVg4MkFnQWdGVUtBZ0lDQWdJQ0ErTDkvTndNQVFYd01Bd3NnRVVVZ0JVVnlEUUVnRVNBRk5nSUFEQUVMSUJnZ1FqY0RDQXNnRWlBWUtRTUlQZ0lBUVFBTElRVWdHRUV3YWlRQUlDQkZEUUFnSUVJQU53TUFDd0pBSUFoQkFrWWdDRUVFUzNJTkFBSi9JQVpGQkVBZ0UwRi9OZ0lBUVg4TUFRc0NRQUpBSUFnT0JBQUJBUUFCQ3lBSFFRQWdCaWdDSENJT0lBNUJBblFnQUNBQklBSWdBeUFKSUNnZ0NpQVhRUkJxRUw4RFFRQklCRUFnRTBGL05nSUFRWG9NQWdzZ0JrRUFJQmRCRUdvZ0JpZ0NIQ0FUSUNFZ0loRFVCd3dCQ3lBSFFRRWdCaWdDSENJT0lBNUJBblFnQUNBQklBSWdBeUFKSUNnZ0NpQVhRUkJxRUw4RFFRQklCRUFnRTBGL05nSUFRWG9NQVFzZ0JrRUJJQmRCRUdvZ0JpZ0NIQ0FUSUNFZ0loRFVCd3NoRGlBRlFRRkdCRUFnRGlFRkRBRUxJQTVCQVVZTkFDQUZJQTV4UVI5MUlBNXhJUVVMSUJkQmtPQUFhaVFBSUFWQkJtb2lCVUVHVFFSQUlCOGdCVUVDZEVHZzJnQnFLQUlBTmdMc0FRc2dDRUVDVFFSQUlCOGdFeUFTSUFoQkFra2lCUnNvQWdBMkFnUWdIeUFoSUJvZ0JSc29BZ0EyQWhBZ0h5QWlJQlVnQlJzckF3QTVBeUFMSUM1QkFXb2hMZ3NnTFVFQmFpRXREQUVMQ3lBTUlDNDJBZ0FnSjBFUWFpUUFRUUFMSmdFQmZ5QUFLQUlFSWdFRVFDQUFJQUVvQWlnUkFRQUxJQUJCQURZQ0ZDQUFRUUEyQWdRTGpBZ0JEMzhnQUNnQ0FDRUxJQUFvQWdRaERFRUJRYndnRUlRRElnWkZCRUJCQUVFRFFlY05RUUFRT1VFQkVBSUFDMEVFRUZjUWpnUWlEU0VQUVJnUVZ4Q09CQ0lKUVFScUVJNENHa0hJQmhCWElnUkJER29RU2hvZ0JFRkFheEN5QWhvZ0JFSElBR29RamdJYUlBUkIzQUJxSWdGQjhNZ0JOZ0lBSUFGQkJHb1FTaG9nQVVJQU53SVlJQUZDQURjQ0VDQUJRWURKQVRZQ0FDQUJRU0JxRUVvYUlBRkJMR29RU2hvZ0FVRTRhaEJLR2lBRVFhQUJhaUlEUW9xQWdJQ2dBVGNDQ0NBRFFnQTNBZ0FnQTBFUWFoQktHaUFEUVFFNkFCd2dBMEVnYWhCS1FnQTNBZ3dnQTBLQWdJQ0FnSUNBa01FQU53STBJQU5CUEdvUVNob2dBMEhJQUdvUVNob2dBMEdBZ01DSUJEWUNXQ0FEUWR3QWFpSUJRZ0EzQWd3Z0FVSUFOd0lBSUFGQ0FEY0NGQ0FCUVJ4cUVFb2FJQUZCS0dvUVNob2dBMEdRQVdvUVNpRUJJQU5CaUNjUTVnWWdBVUVrRUpRQ0lBUkJ2QUpxSWdGQjBNNEJRUXdROEFFZ0FVRXdha0dBendGQkRCRHdBU0FCUWVBQWFrR3d6d0ZCREJEd0FTQUJRWkFCYWtIZ3p3RkJEQkR3QVNBQlFjQUJha0dRMEFGQkRCRHdBU0FCUWZBQmFrSEEwQUZCREJEd0FTQUJRczJacy9pRGdJRHd3QUEzQXJnQ0lBRkN6Wm16OXJQbXpQaytOd0t3QWlBQlFvQ0FnUFRqekpuVFBqY0NxQUlnQVVMTm1iUHVzK2JNbVQ0M0FxQUNJQVJCL0FScUVFcEJzK2JNK1FNMkFnd2dCRUdNQldvaUFVSUFOd0lBSUFGQkFUb0FFQ0FCUWdBM0FnZ2dBVUVVYWtFQVFjZ0FFRGdhSUFGQjNBQnFFSTRDR2lBQlFmQUFhaEJLR2lBQlFmd0FhaEJLR2lBRVFaUUdhaEJLSWdkQkRHb1FTaG9nQjBFWWFpSUJFRW9hSUFkQmdNZ0FFSlFDQWtBZ0FSQkJJZ0pCZ0FoSkJFQWpBRUVnYXlJS0pBQUNRRUdBQ0NBQ2F5SUlJQUVRTWlnQ0FDQUJLQUlFYTBFRGRVMEVRQ0FCSUFnUWlRUU1BUXNnQVJBeUlRSWdDa0VJYWlBQklBRVFRU0FJYWhDSUJDQUJFRUVnQWhEakFpRUZJd0JCRUdzaUFpUUFJQUlnQlNnQ0NEWUNBQ0FGS0FJSUlRNGdBaUFGUVFocU5nSUlJQUlnRGlBSVFRTjBhallDQkNBQ0tBSUFJUWdEUUNBQ0tBSUVJQWhIQkVBZ0JTZ0NFQm9nQWlnQ0FCQ2RCaUFDSUFJb0FnQkJDR29pQ0RZQ0FBd0JDd3NnQWhDcEFTQUNRUkJxSkFBZ0FTQUZFS2tESUFVUXFBTUxJQXBCSUdva0FBd0JDeUFDUVlBSVN3UkFJQUVvQWdCQmdFQnJJUUlnQVJCQklRVWdBU0FDRUs4RElBRWdCUkNhQkFzTElBZEJNallDTUNBSFFhZ0lOZ0lzSUFkQmdBZzJBaWdnQjBNSzF5TThPQUlrSUFOREFBQkFRRGdDTkNBRFF3QUFnRUE0QWpnZ0EwSDBBeERtQmlBRVFRRTZBQWdnQkVLSWdJQ0FnSUNBb01BQU53SUFJQWtnQkJDMEJpQVBJQWtRdFFZZ0JrS0JnSUNBY0RjQ0ZDQUdJQXcyQWhBZ0JpQUxOZ0lNSUFaQkFUWUNDQ0FHSUFBMkFnUWdCaUFOTmdJQUlBWUxPd0VCZnlBQUtBSUVJZ0VFUUNBQVFRRWdBU2dDSkJFQ0FDQUFLQUlRQkVBZ0FFRUFOZ0s0QWlBQVFjZ0JOZ0lVRHdzZ0FFSGtBRFlDRkFzTC93Z0NDMzhDZlNNQVFUQnJJZ1FrQUNBRVFvaUFnSUFRTndJa0lBUWdBRFlDSUNBRVFRRTJBaGdnQkNBRE5nSVVJQVFnQVRZQ0VDQUVRUWcyQWdnZ0JDQUROZ0lFSUFRZ0FqWUNBQUpBQW44Z0JDSUpLQUlJSUFRb0FnUVE0UVlpQUFSQVFYOGhCZ0pBSUFBb0FnUWlBaUFKS0FJSVJ3MEFJQUFvQWdnaUFTQUpLQUlFUncwQVFRQWhCaUFDUVFBZ0FrRUFTaHNoQnlBQlFRQWdBVUVBU2hzaENDQUFLQUlBSVFOQkFDRUJBMEFnQVNBSFJnMEJJQWtvQWdBZ0FVRUNkR29oQkVFQUlRVURRQ0FGSUFoSEJFQWdBeUFFS2dJQU9BSUFJQVZCQVdvaEJTQURRUVJxSVFNZ0JDQUNRUUowYWlFRURBRUxDeUFCUVFGcUlRRU1BQXNBQ3lBQUlBWkJBRTROQVJvZ0FCQkVDMEVBQ3lJTlJRUkFRWDhoQUF3QkN3SkFJQTBnQ1JEWkJpSUxSUVJBUVg4aEFBd0JDd0pBSUEwZ0NVRVFhaERaQmlJT1JRUkFRWDhoQUF3QkMwRUFJUUJCQUNFRElBc29BZ0FoQnlBTEtBSUVJUVpCQUNFQkl3QkIwQTlySWdna0FBSkFJQVpCOUFOS0RRQUNRQUpBQWtBZ0JnNENBd0FCQ3lBSFF3QUFnRDhnQnlvQ0FKVTRBZ0FNQVFzZ0JrRUFJQVpCQUVvYklRd0RRQ0FCSUF4R0JFQURRQ0FESUF4R0JFQkJBQ0VEQTBBZ0RDQURJZ0ZHRFFVRFFBSkFJQUVnQmtZRVFDQUdJUUVNQVFzZ0NDQUJRUUowYWlnQ0FDQURSZzBBSUFGQkFXb2hBUXdCQ3dzZ0NDQUJRUUowSWdKcUlBZ2dBMEVDZENJQmFpZ0NBRFlDQUNBQklBZHFJUUVnQWlBSGFpRUVRUUFoQlFOQUlBVWdERWNFUUNBRUtnSUFJUThnQkNBQktnSUFPQUlBSUFFZ0R6Z0NBQ0FGUVFGcUlRVWdBU0FHUVFKMElnSnFJUUVnQWlBRWFpRUVEQUVMQ3lBRFFRRnFJUU1NQUFzQUMwTUFBQUFBSVE5QmZ5RUZJQWNnQXlJQklBWnNRUUowYWlJQ0lRUURRQ0FCSUFaSEJFQWdCQ29DQUlzaUVDQVBJQThnRUYwaUNoc2hEeUFCSUFVZ0Noc2hCU0FCUVFGcUlRRWdCQ0FHUVFKMGFpRUVEQUVMQzBFQUlRRWdCVUYvUmlBUFEvL20yeTVmY2cwRUlBZ2dCVUVDZEdvaUFTZ0NBQ0VFSUFFZ0NDQURRUUowYWlJQktBSUFOZ0lBSUFFZ0JEWUNBQ0FISUFVZ0JteEJBblJxSVFGQkFDRUZJQUloQkFOQUlBVWdCa2NFUUNBQktnSUFJUThnQVNBRUtnSUFPQUlBSUFRZ0R6Z0NBQ0FGUVFGcUlRVWdCRUVFYWlFRUlBRkJCR29oQVF3QkN3c2dBaW9DQUNFUFFRRWhCQ0FDSVFFRFFDQUVJQVpIQkVBZ0FTQUJLZ0lFSUErVk9BSUFJQVJCQVdvaEJDQUJRUVJxSVFFTUFRc0xJQUZEQUFDQVB5QVBsVGdDQUVFQUlRb0RRQ0FHSUFwSEJFQWdBeUFLUndSQUlBY2dCaUFLYkVFQ2RHb2lBU29DQUl3aEQwRUJJUVFnQWlFRkEwQWdCQ0FHUndSQUlBRWdEeUFGS2dJQWxDQUJLZ0lFa2pnQ0FDQUZRUVJxSVFVZ0JFRUJhaUVFSUFGQkJHb2hBUXdCQ3dzZ0FTQUZLZ0lBSUErVU9BSUFDeUFLUVFGcUlRb01BUXNMSUFOQkFXb2hBd3dBQ3dBRklBZ2dBVUVDZEdvZ0FUWUNBQ0FCUVFGcUlRRU1BUXNBQ3dBTElBY2hBUXNnQ0VIUUQyb2tBQUpBUVFCQmZ5QUJHMEVBU0FSQVFYOGhBQXdCQ3lBSlFTQnFJQXNnRGhES0Job0xJQTRRUkFzZ0N4QkVDeUFORUVRTElBbEJNR29rQUNBQUN6OEJBWDhnQUNnQ0FDRUJJQUJCQURZQ0FDQUJCRUFnQUJCT0lnQXRBQVFFUUNBQUtBSUFJQUZCQ0dvUXZnVUxJQUVFUUNBQUtBSUFHaUFCRURFTEN3c0xBQ0FCUVFocUVOd0ZHZ3NlQVFGL1FSQVFWeUlCSUFBcEFnZzNBZ2dnQVNBQUtRSUFOd0lBSUFFTDl3SUNCWDhGZlNNQVFSQnJJZ1VrQUVGL0lRY2pBRUZBYWlJR0pBQUNmeUFBS2dJY0lBQXFBaXdpQ2lBRGxKTWhEU0FBS2dJZ0lnc2dBNVFnQUNvQ0VKTWhEaUFBS2dJTUlBb2dBcFNUSVFwQmZ5QUxJQUtVSUFBcUFnQ1RJZ3NnQUNvQ0pDSU1JQU9VSUFBcUFoU1RJZ09VSUE0Z0RDQUNsQ0FBS2dJRWt5SU1sSk1pQWtNQUFBQUFXdzBBR2lBRklBTWdDcFFnRFNBTWpKU1NJQUtWT0FJTUlBVWdDeUFObENBS0lBNlVreUFDbFRnQ0NFRUFDeUVBSUFaQlFHc2tBQUpBSUFCQkFFZ05BQUovSUFVcUFnd2dBU29DRENJQ2xFTXpNOHRCbFVNQUFBQS9raUlEaTBNQUFBQlBYUVJBSUFPb0RBRUxRWUNBZ0lCNEN5SUFRUUJJRFFBZ0FTZ0NCQ0lJSUFCTURRQUNmeUFCS0FJSUlnbXlJQUlnQlNvQ0NKUkRNelBMd1pXU1F3QUFBRCtTSWdLTFF3QUFBRTlkQkVBZ0FxZ01BUXRCZ0lDQWdIZ0xJZ1pCQUVnZ0JpQUpUbklOQUNBRUlBRW9BZ0FnQmlBSWJDQUFhbW90QUFBNkFBQkJBQ0VIQ3lBRlFSQnFKQUFnQndzTkFDQUFJQUVnQWtFRUVLc0VDd2tBSUFCQkVCQzZBd3QzQVFGL0lBQVExUVVnQUJBeUlBQW9BZ0FnQUNnQ0JDQUJRUVJxSWdJUWxRSWdBQ0FDRUVVZ0FFRUVhaUFCUVFocUVFVWdBQkF5SUFFUVBCQkZJQUVnQVNnQ0JEWUNBQ0FBRUxVQkdpQUFLQUlBR2lBQUtBSUFJQUFRaFFKQkJIUnFHaUFBS0FJQUlBQVFoUUpCQkhScUdpQUFLQUlBR2d0a0FRSi9Jd0JCRUdzaUJTUUFJQVZCQURZQ0RDQUFRUXhxSUFNUTBBRWdBUVJBSUFBb0FoQWdBUkRrQlNFRUN5QUFJQVEyQWdBZ0FDQUVJQUpCQkhScUlnSTJBZ2dnQUNBQ05nSUVJQUFRUENBRUlBRkJCSFJxTmdJQUlBVkJFR29rQUNBQUM1SUJBUU4vSXdCQkVHc2lBaVFBSUFJZ0FUWUNEQ01BUVJCcklnTWtBQ0FBRURJYUlBTkIvLy8vL3dBMkFnd2dBMEgvLy8vL0J6WUNDQ0FEUVF4cUlBTkJDR29RbGdJb0FnQWhCQ0FEUVJCcUpBQWdBU0FFVFFSQUlBQVFoUUlpQUNBRVFRRjJTUVJBSUFJZ0FFRUJkRFlDQ0NBQ1FRaHFJQUpCREdvUWJpZ0NBQ0VFQ3lBQ1FSQnFKQUFnQkE4TEVKWURBQXNOQUNBQUtBSUFJQUZCQkhScUM4SUNBZ0YvQkgwakFFRkFhaUlHSkFBQ1FDQUFCRUFnQUVFSWFpQUJJQVpCRUdvUXVRTkJmeUVCSUFCQnVBRnFJZ0FnQmlvQ0hDQUdLZ0lRSUFLVUlBWXFBaFFnQTVTU2tpQUdLZ0k4SUFZcUFqQWdBcFFnQmlvQ05DQURsSktTSWdlVklnZ2dCaW9DTENBR0tnSWdJQUtVSUFZcUFpUWdBNVNTa2lBSGxTSUNJQVFnQlJCd1FRQklEUUVnQUNBRUtnSUFJQVVxQWdBZ0JrRU1haUFHUVFocUVONEJRUUJJRFFGQmYwRUFJQWdnQmlvQ0RKTWlBeUFEbENBQ0lBWXFBZ2lUSWdJZ0FwU1NRd0FBZ0Q5ZUd5RUJEQUVMSUFFcUFod2hCeUFCS2dJVUlRZ2dBU29DRUNFSklBUWdBU29DRENBQktnSUFJQUtVSUFFcUFnUWdBNVNTa2lBQktnSXNJQUVxQWlBZ0FwUWdBU29DSkNBRGxKS1NJZ3FWT0FJQUlBVWdCeUFKSUFLVUlBZ2dBNVNTa2lBS2xUZ0NBRUVBSVFFTElBWkJRR3NrQUNBQkN5MEJBWDhnQUNnQ0JDRUNBMEFnQVNBQ1J3UkFJQUFRTWlBQ1FReHJJZ0lReVFVTUFRc0xJQUFnQVRZQ0JBc0hBQ0FCRURZYUMxY0JBMzhnQUNnQ0JDRUJBMEFnQVNBQUtBSUlSd1JBSUFBb0FoQWhBaUFBSUFBb0FnaEJER3NpQXpZQ0NDQUNJQU1ReVFVTUFRc0xJQUFvQWdBRVFDQUFLQUlRR2lBQUtBSUFJUUVnQUJDMkF4b2dBUkF4Q3d1U0FRRUVmeUFBRUlBQ0lBQVFNaG9nQUNnQ0FDRUVJQUFvQWdRaEFpQUJRUVJxSVFNRFFDQUNJQVJIQkVBZ0F5Z0NBRUVNYXlJRklBSkJER3NpQWlrQ0FEY0NBQ0FGSUFJb0FnZzJBZ2dnQWhEVEJ5QURJQU1vQWdCQkRHczJBZ0FNQVFzTElBQWdBeEJGSUFCQkJHb2dBVUVJYWhCRklBQVFNaUFCRUR3UVJTQUJJQUVvQWdRMkFnQWdBQ0FBRUZNUXR3TUxXZ0VDZnlNQVFSQnJJZ0lrQUNBQ0lBRTJBZ3dnQVNBQUVMZ0RJZ05OQkVBZ0FCQ2tBU0lBSUFOQkFYWkpCRUFnQWlBQVFRRjBOZ0lJSUFKQkNHb2dBa0VNYWhCdUtBSUFJUU1MSUFKQkVHb2tBQ0FERHdzUWxnTUFDOW9LQWdwL0FYMGdBeWdDR0NFTUFrQkJBU0FDZEVHZzRBRnhSU0FDUVE1TGNrVUVRRUVBSUFNb0FoQWlBbXNpQnlBREtBSVVRUUZxSWdnZ0J5QUlTaHNoRGtFQUlBTW9BZ2dpQ0dzaUNTQURLQUlNUVFGcUlnc2dDU0FMU2hzaER5QUFJQVFnQ0VFQmRHc2dCU0FDUVFGMGF5QUJiR3BxSVFVZ0FVRUJkQ0VCUVFBaEN3TkFJQWtoQWlBRklRZ2dCeUFPUmcwQ0EwQWdBaUFQUmtVRVFDQU1Md0VBSWdSQmdDQkhCRUFnQ3lBSUxRQUFJZ0JxSVFzZ0FDQUViQ0FOYWlFTklBQWdBR3dnQ21vaENnc2dBa0VCYWlFQ0lBeEJBbW9oRENBSVFRSnFJUWdNQVFzTElBZEJBV29oQnlBQklBVnFJUVVNQUFzQUN5QUNRUUZOQkVCQkFDQURLQUlRYXlJSElBTW9BaFJCQVdvaUFpQUNJQWRJR3lFT0EwQWdCeUFPUmcwQ1FRQWdBeWdDQ0NJQ2F5SUlJQU1vQWd4QkFXb2lDU0FJSUFsS0d5RVBJQUFnQjBFQmRDQUZhaUFCYkNBRWFpQUNRUUYwYTBFRGJHb2hBZ05BSUFnZ0QwWkZCRUFnREM4QkFDSVFRWUFnUndSQUlBc2dBaTBBQWlBQ0xRQUJJQUl0QUFCcWFrRURiaUlKYWlFTElBa2dFR3dnRFdvaERTQUpJQWxzSUFwcUlRb0xJQWhCQVdvaENDQU1RUUpxSVF3Z0FrRUdhaUVDREFFTEN5QUhRUUZxSVFjTUFBc0FDeUFDUVg1eFFRSkdCRUJCQUNBREtBSVFheUlISUFNb0FoUkJBV29pQWlBQ0lBZElHeUVPQTBBZ0J5QU9SZzBDUVFBZ0F5Z0NDQ0lDYXlJSUlBTW9BZ3hCQVdvaUNTQUlJQWxLR3lFUElBQWdCMEVCZENBRmFpQUJiQ0FFYWlBQ1FRRjBhMEVDZEdvaEFnTkFJQWdnRDBaRkJFQWdEQzhCQUNJUVFZQWdSd1JBSUFzZ0FpMEFBaUFDTFFBQklBSXRBQUJxYWtFRGJpSUphaUVMSUFrZ0VHd2dEV29oRFNBSklBbHNJQXBxSVFvTElBaEJBV29oQ0NBTVFRSnFJUXdnQWtFSWFpRUNEQUVMQ3lBSFFRRnFJUWNNQUFzQUN5QUNRWDF4UVFSR0JFQkJBQ0FES0FJUWF5SUhJQU1vQWhSQkFXb2lBaUFDSUFkSUd5RU9BMEFnQnlBT1JnMENRUUFnQXlnQ0NDSUNheUlJSUFNb0FneEJBV29pQ1NBSUlBbEtHeUVQSUFBZ0IwRUJkQ0FGYWlBQmJDQUVhaUFDUVFGMGEwRUNkR29oQWdOQUlBZ2dEMFpGQkVBZ0RDOEJBQ0lRUVlBZ1J3UkFJQXNnQWkwQUF5QUNMUUFDSUFJdEFBRnFha0VEYmlJSmFpRUxJQWtnRUd3Z0RXb2hEU0FKSUFsc0lBcHFJUW9MSUFoQkFXb2hDQ0FNUVFKcUlRd2dBa0VJYWlFQ0RBRUxDeUFIUVFGcUlRY01BQXNBQ3dKQUFrQWdBa0VIYXc0Q0FBRUNDMEVBSUFNb0FoQnJJZ2NnQXlnQ0ZFRUJhaUlDSUFJZ0IwZ2JJUTREUUNBSElBNUdEUUpCQUNBREtBSUlJZ2hySWdJZ0F5Z0NERUVCYWlJSklBSWdDVW9iSVE4Z0FDQUhRUUYwSUFWcUlBRnNJQVJxSUFoQkFYUnJRUUYwYWlFSUEwQWdBaUFQUmtVRVFDQU1Md0VBSWhCQmdDQkhCRUFnQ3lBSUxRQUJJZ2xxSVFzZ0NTQVFiQ0FOYWlFTklBa2dDV3dnQ21vaENnc2dBa0VCYWlFQ0lBeEJBbW9oRENBSVFRUnFJUWdNQVFzTElBZEJBV29oQnd3QUN3QUxRUUFnQXlnQ0VHc2lCeUFES0FJVVFRRnFJZ0lnQWlBSFNCc2hEZ05BSUFjZ0RrWU5BVUVBSUFNb0FnZ2lDR3NpQWlBREtBSU1RUUZxSWdrZ0FpQUpTaHNoRHlBQUlBZEJBWFFnQldvZ0FXd2dCR29nQ0VFQmRHdEJBWFJxSVFnRFFDQUNJQTlHUlFSQUlBd3ZBUUFpRUVHQUlFY0VRQ0FMSUFndEFBQWlDV29oQ3lBSklCQnNJQTFxSVEwZ0NTQUpiQ0FLYWlFS0N5QUNRUUZxSVFJZ0RFRUNhaUVNSUFoQkJHb2hDQXdCQ3dzZ0IwRUJhaUVIREFBTEFBdEJBQ0VNSUFZZ0N5QUxiQ0FES0FJa0lnQnRJZ0VnQ2tjRWZ5QU5JQU1vQWlBZ0Myd2dBRzFyUWVRQWJDQURLQUljYlVIa0FHd0NmeUFLSUFGcnNwRWlFWXREQUFBQVQxMEVRQ0FScUF3QkMwR0FnSUNBZUF0dEJVRUFDellDQUFzRUFFRUNDMFVCQW4wZ0FTb0NBQ0FBS2dJQUlnT1RJQUlxQWdRZ0FDb0NCQ0lFazVRZ0FTb0NCQ0FFa3lBQ0tnSUFJQU9UbEpOREFBQUFQNVFpQTR3Z0F5QURRd0FBQUFCZEd3c25BUUYvSXdCQkVHc2lBaVFBSUFCQkFrSDhuZ0pCaEo4Q1FlUUFJQUVRQkNBQ1FSQnFKQUFMSndFQmZ5TUFRUkJySWdJa0FDQUFRUU5CNko0Q1FmU2VBa0hqQUNBQkVBUWdBa0VRYWlRQUN5Y0JBWDhqQUVFUWF5SUNKQUFnQUVFRFFieWVBa0hNbVFKQjJ3QWdBUkFFSUFKQkVHb2tBQXNMQUNBQUlBRkJFQkQxQVF1YkRRTVBmUVovQVg0akFFRWdheUlWSkFBQ1FBSkFJQUpCQUVnTkFBSkFBa0FDUUFKQUFrQWdBZzRFQUFFQ0F3UUxJQVZCQW0yeUlRb2dCRUVDYmJJaEN5QUZRUWh0c2lFTUlBUkJDRzJ5SVFrZ0JVRUhiRUVJYmJJaERTQUVRUWRzUVFodHNpRU9RUUFoQWtGL0lRUURRQUpBQWtBQ1FDQUFJQUpCR0d4cUlnRW9BZ3hCQVdvT0FnSUFBUXNnQVNvQ0VDSUdJQWxkSUFZZ0RsNXlEUUFnQVNvQ0ZDSUhJQXhkSUFjZ0RWNXlEUUFnQmlBTGt5SUdJQWFVSUFjZ0NwTWlCaUFHbEpJaUJpQUlYa1VOQUNBQ0lRUWdCaUVJQ3lBQ1FRRnFJUUlNQVFzTFFYOGhBaUFFUVg5R0RRVWdBQ0FFUVJoc2FrRUJOZ0lNSUFRaEFnd0ZDeUFGUVFodHNpRUtJQVJCQ0cyeUlRc2dCVUVIYkVFSWJiSWhEQ0FFUVFkc1FRaHRzaUVKUVg4aEJFRUFJUUlEUUFKQUFrQUNRQ0FBSUFKQkdHeHFJZ0VvQWd4QkFXb09BZ0lBQVFzZ0FTb0NFQ0lHSUF0ZElBWWdDVjV5RFFBZ0FTb0NGQ0lISUFwZElBY2dERjV5RFFBZ0JpQURLZ0lBa3lJR0lBYVVJQWNnQXlvQ0JKTWlCaUFHbEpJaUJpQUlYa1VOQUNBR0lRZ2dBaUVFQ3lBQ1FRRnFJUUlNQVFzTFFYOGhBaUFFUVg5R0RRUWdBQ0FFUVJoc2FrRUJOZ0lNSUFRaEFnd0VDeUFGUVFodHNpRUtJQVJCQ0cyeUlRc2dCVUVIYkVFSWJiSWhEQ0FFUVFkc1FRaHRzaUVKUVg4aEJFRUFJUUlEUUFKQUFrQUNRQ0FBSUFKQkdHeHFJZ0VvQWd4QkFXb09BZ0lBQVFzZ0FTb0NFQ0lHSUF0ZElBWWdDVjV5RFFBZ0FTb0NGQ0lISUFwZElBY2dERjV5RFFBZ0JpQURLZ0lBSWdhVElBTXFBZ3dnQXlvQ0JDSU5rNVFnQXlvQ0NDQUdreUFISUEyVGxKTWlCaUFHbENJR0lBaGVSUTBBSUFZaENDQUNJUVFMSUFKQkFXb2hBZ3dCQ3d0QmZ5RUNJQVJCZjBZTkF5QUFJQVJCR0d4cVFRRTJBZ3dnQkNFQ0RBTUxJQU1nQTBFSWFpQVZRUnhxSUJWQkdHb1E3d01nQXlBRFFSQnFJQlZCRkdvZ0ZVRVFhaER2QTBFQ1FRRWdGU29DRkNJSElCVXFBaGdpQ3BRaUNDQVZLZ0ljSWdzZ0ZTb0NFQ0lNbENJR2swTUFBQUFBWUNJWUd5RVdRUUZCQWlBWUd5RVpJQVlnQ0pNaERpQURRUmhxSVJvZ0JVRUliYkloRHlBRVFRaHRzaUVRSUFWQkIyeEJDRzJ5SVJFZ0JFRUhiRUVJYmJJaEVpQUtqQ0VUSUF5TUlSUkJmeUVDUVFBaEJVTUFBQUFBSVFnRFFBSkFBa0FDUUNBQUlBVkJHR3hxSWdFb0FneEJBV29PQWdJQUFRc2dBU29DRUNJR0lCQmRJQVlnRWw1eURRQWdBU29DRkNJSklBOWRJQWtnRVY1eURRQWdBeUFHT0FJWUlBTWdBU29DRkRnQ0hDQURJQm9nRlVFTWFpQVZRUWhxRU84REFrQWdHRVVnRlNvQ0RDSUdJQXFVSUFzZ0ZTb0NDQ0lOakNJSmxKSkRBQUFBQUdCRmNrVUVRRUVEUVFJZ0JpQU1sQ0FISUFtVWtrTUFBQUFBWUNJQkd5RUVRUUpCQXlBQkd5RUJRUUVoRnd3QkN5QUdJQXlVSUFjZ0NaU1NRd0FBQUFCZ1JTQU9Rd0FBQUFCZ1JYSkZCRUJCQTBFQklBWWdDcFFnQ3lBSmxKSkRBQUFBQUdBaUFSc2hCRUVCUVFNZ0FSc2hBVUVDSVJjTUFRc2dDeUFObENBR0lCT1Vra01BQUFBQVlFVU5BVUVESVJjZ0dTRUJJQlloQkNBSElBMlVJQVlnRkpTU1F3QUFBQUJnUlEwQkN5QURJQU1nRjBFRGRHb2dBeUFCUVFOMGFpSUJFTThGSUFNZ0FTQURJQVJCQTNScUVNOEZraUlHSUFoZVJRMEFJQVloQ0NBRklRSUxJQVZCQVdvaEJRd0JDd3NnQWtGL1JnMENJQUFnQWtFWWJHcEJBVFlDREF3Q0N3SkFBMEFDUUFKQUFrQWdBU0FXUVJoc2FpSURLQUlNUVFGcURnSUNBQUVMSUFOQkFUWUNERUVBSVFJRFFBSkFBa0FnQUNBQ1FSaHNhaUlFS0FJTVFRRnFEZ0lEQUFFTElBTW9BZ0FnQkNnQ0FFY05BQ0FES0FJRUlBQWdBa0VZYkdvaUJTZ0NCRWNOQUNBREtBSUlJQVVvQWdoR0RRVUxJQUpCQVdvaEFnd0FDd0FMSUJaQkFXb2hGZ3dCQ3dzZ0FVRi9OZ0lNUVFBaEFrSDRpZ1JCQUVINGlnUW9BZ0FpQVFSL0lBRUZRYWlPQkVFQUVLRUZwMEVCYTYwM0F3QkIrSW9FS0FJQUMwRUJhaUlCSUFGQmdBRkdHellDQUVFQUlRVURRQUpBQWtBQ1FDQUFJQUpCR0d4cUtBSU1RUUZxRGdJQ0FBRUxJQVZCQVdvaEJRc2dBa0VCYWlFQ0RBRUxDeUFGUlEwQkFuOUJxSTRFUWFpT0JDa0RBRUt0L3RYazFJWDlxTmdBZmtJQmZDSWJOd01BSUFXeUlCdENJWWluc3BSREFBQUFNSlFpQ0l0REFBQUFUMTBFUUNBSXFBd0JDMEdBZ0lDQWVBc2hBVUVBSVFWQkFDRUVBMEFDUUFKQUlBQWdCVUVZYkdvaUF5Z0NEQ0lDUVFGcURnSUZBQUVMSUFFZ0JFWUVRQ0FEUVFFMkFnd2dCU0VDREFVTElBUkJBV29oQkFzZ0JVRUJhaUVGREFBTEFBc2dCRUVCTmdJTURBRUxRWDhoQWdzZ0ZVRWdhaVFBSUFJTE5RQWdBQ2dDQUJvZ0FDZ0NBQ0FBRUlVQ1FRUjBhaG9nQUNnQ0FDQUFFTFVCUVFSMGFob2dBQ2dDQUNBQUVJVUNRUVIwYWhvTHBSSUJBMzhqQUVFUWF5SUNKQUFqQUVFZ2F5SUFKQUJCd0pZQ1FhQ1hBa0dJbUFKQkFFR1ltQUpCUDBHYm1BSkJBRUdibUFKQkFFSHozUUZCblpnQ1FjQUFFQTRqQUVFUWF5SUJKQUJCd0pZQ1FRRkJvSmdDUVppWUFrSG1BRUhCQUJBTklBRkJFR29rQUNBQVFRQTJBaHdnQUVIQ0FEWUNHQ0FBSUFBcEF4ZzNBeEFqQUVFUWF5SUJKQUFnQVNBQUtRSVFOd01JUWNDV0FrR3c2d0ZCQTBHa21BSkIrSmdDUWVjQUlBRkJDR29RMndGQkFCQURJQUZCRUdva0FDQUFRUUEyQWh3Z0FFSERBRFlDR0NBQUlBQXBBeGczQXdnakFFRVFheUlCSkFBZ0FTQUFLUUlJTndNSVFjQ1dBa0dCN2dGQkJFR0FtUUpCa0prQ1FlZ0FJQUZCQ0dvUTJ3RkJBQkFESUFGQkVHb2tBQ0FBUVFBMkFod2dBRUhFQURZQ0dDQUFJQUFwQXhnM0F3QWpBRUVRYXlJQkpBQWdBU0FBS1FJQU53TUlRY0NXQWtHRDdnRkJBa0dZbVFKQm9Ka0NRZWtBSUFGQkNHb1Eyd0ZCQUJBRElBRkJFR29rQUNNQVFSQnJJZ0VrQUNBQlFjVUFOZ0lNUWNDV0FrR2Q0QUZCQTBHa21RSkJ6SmtDUWVvQUlBRkJER29RNmdGQkFCQURJQUZCRUdva0FDTUFRUkJySWdFa0FDQUJRY1lBTmdJTVFjQ1dBa0daNEFGQkJFSGdtUUpCOEprQ1Flc0FJQUZCREdvUTZnRkJBQkFESUFGQkVHb2tBQ0FBUVNCcUpBQWpBRUVnYXlJQUpBQkJuSm9DUWN5YUFrR0Vtd0pCQUVHWW1BSkJ4d0JCbTVnQ1FRQkJtNWdDUVFCQjY5MEJRWjJZQWtISUFCQU9Jd0JCRUdzaUFTUUFRWnlhQWtFQlFaU2JBa0dZbUFKQjdBQkJ5UUFRRFNBQlFSQnFKQUFnQUVFQU5nSWNJQUJCeWdBMkFoZ2dBQ0FBS1FNWU53TVFJd0JCRUdzaUFTUUFJQUVnQUNrQ0VEY0RDRUdjbWdKQnNPc0JRUU5CbUpzQ1FmaVlBa0h0QUNBQlFRaHFFTnNCUVFBUUF5QUJRUkJxSkFBZ0FFRUFOZ0ljSUFCQnl3QTJBaGdnQUNBQUtRTVlOd01JSXdCQkVHc2lBU1FBSUFFZ0FDa0NDRGNEQ0VHY21nSkJnZTRCUVFSQnNKc0NRWkNaQWtIdUFDQUJRUWhxRU5zQlFRQVFBeUFCUVJCcUpBQWdBRUVBTmdJY0lBQkJ6QUEyQWhnZ0FDQUFLUU1ZTndNQUl3QkJFR3NpQVNRQUlBRWdBQ2tDQURjRENFR2NtZ0pCZys0QlFRSkJ3SnNDUWFDWkFrSHZBQ0FCUVFocUVOc0JRUUFRQXlBQlFSQnFKQUFqQUVFUWF5SUJKQUFnQVVITkFEWUNERUdjbWdKQm5lQUJRUU5CeUpzQ1FjeVpBa0h3QUNBQlFReHFFT29CUVFBUUF5QUJRUkJxSkFBakFFRVFheUlCSkFBZ0FVSE9BRFlDREVHY21nSkJtZUFCUVFSQjRKc0NRZkNaQWtIeEFDQUJRUXhxRU9vQlFRQVFBeUFCUVJCcUpBQWdBRUVnYWlRQUl3QkJJR3NpQUNRQVFhQ2NBa0hZbkFKQm5KMENRUUJCbUpnQ1FjOEFRWnVZQWtFQVFadVlBa0VBUWU3akFVR2RtQUpCMEFBUURpTUFRUkJySWdFa0FFR2duQUpCQVVHc25RSkJtSmdDUWZJQVFkRUFFQTBnQVVFUWFpUUFJQUJCQURZQ0hDQUFRZElBTmdJWUlBQWdBQ2tER0RjREVDTUFRUkJySWdFa0FDQUJJQUFwQWhBM0F3aEJvSndDUWJEckFVRURRYkNkQWtING1BSkI4d0FnQVVFSWFoRGJBVUVBRUFNZ0FVRVFhaVFBSUFCQkFEWUNIQ0FBUWRNQU5nSVlJQUFnQUNrREdEY0RDQ01BUVJCcklnRWtBQ0FCSUFBcEFnZzNBd2hCb0p3Q1FZSHVBVUVFUWRDZEFrR1FtUUpCOUFBZ0FVRUlhaERiQVVFQUVBTWdBVUVRYWlRQUlBQkJBRFlDSENBQVFkUUFOZ0lZSUFBZ0FDa0RHRGNEQUNNQVFSQnJJZ0VrQUNBQklBQXBBZ0EzQXdoQm9Kd0NRWVB1QVVFQ1FlQ2RBa0dnbVFKQjlRQWdBVUVJYWhEYkFVRUFFQU1nQVVFUWFpUUFJd0JCRUdzaUFTUUFJQUZCMVFBMkFneEJvSndDUVozZ0FVRURRZWlkQWtITW1RSkI5Z0FnQVVFTWFoRHFBVUVBRUFNZ0FVRVFhaVFBSXdCQkVHc2lBU1FBSUFGQjFnQTJBZ3hCb0p3Q1FabmdBVUVFUVlDZUFrSHdtUUpCOXdBZ0FVRU1haERxQVVFQUVBTWdBVUVRYWlRQUlBQkJJR29rQUNNQVFSQnJJZ0FrQUVHdTZBRkJCRUdRbmdKQjhKa0NRZGNBUVNjUUJDQUFRUkJxSkFCQjUrZ0JRU2dRM0FGQjY1QUNRU2tRM0FFakFFRVFheUlBSkFCQitlTUJRUU5CcUo0Q1FjeVpBa0haQUVFcUVBUWdBRUVRYWlRQUl3QkJFR3NpQUNRQVFlK0FBa0VDUWJTZUFrR2dtUUpCMmdCQkt4QUVJQUJCRUdva0FFR0s1d0ZCTEJEY0FVR2s1d0ZCTFJEY0FVR1g1d0ZCTGhEU0JTTUFRUkJySWdBa0FFSGtnQUpCQTBISW5nSkJ6SmtDUWR3QVFTOFFCQ0FBUVJCcUpBQkJ5SjBDUVlEbkFVSFVuZ0pCM1FCQm5aZ0NRZDRBRUM0Z0FrRUlhaUlBUWJQMEFVRUFFSmtEUWR6c0FVRUVFSmtEUVlYZkFVRUlFSmtEUWI3ckFVRU1FSmtER2tISW5RSVFMRUdNOHdGQk1CRFNCVUdaOHdGQk1SRGNBVUg0OFFGQk1oRGNBU01BUVJCcklnRWtBRUdJNndGQkFrSFluZ0pCNEo0Q1FlRUFRVE1RQkNBQlFSQnFKQUFqQUVFUWF5SUJKQUJCbE9zQlFRRkI1SjRDUVppWUFrSGlBRUUwRUFRZ0FVRVFhaVFBUWJqdUFVRTFFTkVGUWMvdUFVRTJFTkFGUWVidUFVRTNFTkVGUWZ6dUFVRTRFTkFGUWFiekFVRTVFUEFEUWJmekFVRTZFTndCUVpmMEFVRTdFUEFEUWFUMEFVRThFTndCUWNqekFVRTlFUEFEUWRuekFVRStFTndCUWJhSkFrSGs0Z01RWUVIVGlRSkI3T0lERUdCQjA0SUNRZWppQXhCZ0lBSkJBRFlDQ0VHRGlBSWdBQkJnSUFKQkFUWUNDRUdVaUFJZ0FCQmdJQUpCQURZQ0NFSFlpQUlnQUJCZ0lBSkI1QUEyQWdoQjhZVUNJQUFRWUNBQ1FRQTJBZ2hCcElnQ0lBQVFZQ0FDUVFFMkFnaEJ2b2dDSUFBUVlDQUNRUUEyQWdoQjdvZ0NJQUFRWUNBQ1FRVTJBZ2hCNDRFQ0lBQVFZQ0FDUW9DQWdJQ0FnSUR3UHpjRENFSGNoUUpCaE40RElBQXJBd0FRRlNBQ1FRQTJBZ2hCaklZQ0lBQVFZQ0FDUVFFMkFnaEJ0NE1DSUFBUVlDQUNRUUkyQWdoQjM0TUNJQUFRWUNBQ1FRTTJBZ2hCL1lJQ0lBQVFZQ0FDUVFRMkFnaEJ5WU1DSUFBUVlDQUNRUUEyQWdoQmtJVUNJQUFRWUNBQ1FRRTJBZ2hCcElRQ0lBQVFZQ0FDUVFJMkFnaEJsb0VDSUFBUVlDQUNRUU0yQWdoQnZJY0NJQUFRWUNBQ1FRQTJBZ2hCNG9jQ0lBQVFZQ0FDUVFFMkFnaEI4WU1DSUFBUVlDQUNRUUkyQWdoQm80b0NJQUFRWUNBQ1FRTTJBZ2hCdUlFQ0lBQVFZQ0FDUVFRMkFnaEI3NGtDSUFBUVlDQUNRUVUyQWdoQjNZUUNJQUFRWUNBQ1FRWTJBZ2hCaVlrQ0lBQVFZQ0FDUVFjMkFnaEJrSU1DSUFBUVlDQUNRUWcyQWdoQnI0VUNJQUFRWUNBQ1FRazJBZ2hCbElJQ0lBQVFZQ0FDUVJCcUpBQUx1d1FDRTMwQmZ5TUFRVEJySWhja0FBSkFJQUFFUUNBQVFRaHFJQUVnRnhDNUF5QVhLZ0ljSWdnZ0Z5b0NFQ0lRSUFJcUFnQWlCSlFpRHlBQ0tnSUVJZ1VnRnlvQ0ZDSUhsQ0lLa3BJZ0Z5b0NMQ0lMSUJjcUFpQWlEQ0FFbENJUklBVWdGeW9DSkNJTmxDSVNrcElpQnBVaENTQVhLZ0lNSWc0Z0Z5b0NBQ0lUSUFTVUloUWdCU0FYS2dJRUloV1VJaGFTa2lBR2xTRUdJQWdnRHlBRlF3QUFJRUdTSWdVZ0I1U1NraUFMSUJFZ0JTQU5sSktTSWdlVklROGdEaUFVSUFVZ0ZaU1NraUFIbFNFSElBZ2dFQ0FFUXdBQUlFR1NJZ1NVSUFxU2tpQUxJQXdnQkpRZ0VwS1NJZ1dWSVFnZ0RpQVRJQVNVSUJhU2tpQUZsU0VFREFFTElBRXFBaHdpQ1NBQktnSVFJZ2dnQWlvQ0FDSUVsQ0lRSUFJcUFnUWlCVU1BQUNCQmtpSUdJQUVxQWhRaUNwU1NraUFCS2dJc0lnc2dBU29DSUNJTUlBU1VJaEVnQmlBQktnSWtJZzJVa3BJaUI1VWhEeUFCS2dJTUlnNGdBU29DQUNJU0lBU1VJaE1nQmlBQktnSUVJZ2FVa3BJZ0I1VWhCeUFKSUFnZ0JFTUFBQ0JCa2lJRWxDQUZJQXFVSWdxU2tpQUxJQXdnQkpRZ0JTQU5sQ0lNa3BJaURaVWhDQ0FPSUJJZ0JKUWdCU0FHbENJRmtwSWdEWlVoQkNBSklCQWdDcEtTSUFzZ0VTQU1rcElpQnBVaENTQU9JQk1nQlpLU0lBYVZJUVlMSUFNZ0JDQUdreUlFSUFTVUlBZ2dDWk1pQkNBRWxKSWlCQ0FISUFhVElnVWdCWlFnRHlBSmt5SUZJQVdVa2lJRklBUWdCVjBpQUJ1UlExeVBJa0NVT0FJRUlBTWdCU0FFSUFBYmtVTmNqeUpBbERnQ0FDQVhRVEJxSkFBTHBBRUJBbjhnQUNnQ0JDQUFFRElvQWdCSEJFQWpBRUVRYXlJREpBQWdBeUFBUVFFUXdRVWhBaUFBRURJZ0FpZ0NCQ0FCRUpRRElBSWdBaWdDQkVFUWFqWUNCQ0FDRUdzZ0EwRVFhaVFBRHdzakFFRWdheUlESkFBZ0FCQXlJZ0lnQTBFSWFpQUFJQUFRdFFGQkFXb1F4UVVnQUJDMUFTQUNFTVFGSWdJb0FnZ2dBUkNVQXlBQ0lBSW9BZ2hCRUdvMkFnZ2dBQ0FDRU1NRklBSVF3Z1VnQTBFZ2FpUUFDOTBGQWdwL0FYMGpBRUVnYXlJRUpBQWdCQ0FBRU40Q05nSVFJQVJCR0dvaEJ5TUFRU0JySWdFa0FFR2dpd1FRUEJvZ0FDZ0NBQ0VGUWFDTEJCQ1hBU0VDSUFGQkFEb0FId0pBQWtBZ0FrVU5BRUdnaXdRZ0JTQUNFRndpQmhBNktBSUFJZ05GRFFBRFFDQURLQUlBSWdORkRRRWdCU0FES0FJRVJ3UkFJQU1vQWdRZ0FoQmNJQVpIRFFJTFFhQ0xCQkJiSUFOQkNHb2dBQkNOQWtVTkFBc01BUXNqQUVFUWF5SUlKQUJCb0lzRUVESWhBQ0FCUVJCcVFjZ0JFRmNnQ0VFSWFpQUFRUUFRckFJUXF3SWlBQ2dDQUVFSWFpRUpJQVFvQWhBaENpTUFRUkJySWdNa0FDQURJQW8yQWdnZ0NTQURLQUlJS0FJQU5nSUFJQWxCQ0dwQkFFRzRBUkE0R2lBRFFSQnFKQUFnQUJCT1FRRTZBQVFnQUNnQ0FDQUZOZ0lFSUFBb0FnQkJBRFlDQUNBSVFSQnFKQUJCb0lzRUVEd29BZ0FoQUVHZ2l3UVFXeUVEQWtBZ0FnUkFJQUJCQVdxeklBTXFBZ0FnQXJPVVhrVU5BUXNnQVNBQ0VJd0NRUUZ6SUFKQkFYUnlOZ0lNSUFFQ2YwR2dpd1FRUENnQ0FFRUJhck5Cb0lzRUVGc3FBZ0NWalNJTFF3QUFnRTlkSUF0REFBQUFBR0J4QkVBZ0M2a01BUXRCQUFzMkFnaEJvSXNFSUFGQkRHb2dBVUVJYWhCdUtBSUFFSzRDSUFWQm9Jc0VFSmNCSWdJUVhDRUdDd0pBUWFDTEJDQUdFRG9vQWdBaUFFVUVRQ0FCS0FJUVFhaUxCQ2dDQURZQ0FFR29pd1FnQVNnQ0VEWUNBRUdnaXdRZ0JoQTZRYWlMQkRZQ0FDQUJLQUlRS0FJQVJRMEJJQUVvQWhBaEFFR2dpd1FnQVNnQ0VDZ0NBQ2dDQkNBQ0VGd1FPaUFBTmdJQURBRUxJQUVvQWhBZ0FDZ0NBRFlDQUNBQUlBRW9BaEEyQWdBTElBRkJFR29pQUJDMkFTRURRYUNMQkJBOElnSWdBaWdDQUVFQmFqWUNBQ0FCUVFFNkFCOGdBQ2dDQUNFQ0lBQkJBRFlDQUNBQ0JFQWdBQkJPSWdBdEFBUUVRQ0FBS0FJQUdnc2dBZ1JBSUFBb0FnQWFJQUlRTVFzTEN5QUhJQUZCRUdvZ0F4QjVJQUZCSDJvUXJRSWdBVUVnYWlRQUlBY1FiQ0VBSUFSQklHb2tBQ0FBUVFocUN5SUFBa0FnQUFSQUlBQWdBU0FDSUFNUTF3VU1BUXRCQUNBQklBSWdBeERYQlFzTE1RRUJmeUFBRU5VRklBQW9BZ0FFUUNBQUlBQW9BZ0FRMHdVZ0FCQXlHaUFBS0FJQUlRRWdBQkNGQWhvZ0FSQXhDd3NXQUNBQVFmd0NhaERiQlNBQVFkZ0NhaERvQlNBQUMvQUJBUUovSUFBb0F0Z0JJZ0VFUUFKQUlBRkZEUUFnQVNnQzhJYXZBMFVOQUNBQlFRQTJBdkNHcndNTElBQW9BdGdCSWdFRVFDQUJLQUtJaDY4RElnSUVRQ0FDRUVRZ0FVRUFOZ0tJaDY4REN5QUJLQUxnaHFjQ0VERWdBVUhraHFjQ2FpZ0NBQkF4SUFFUU1Rc2dBRUVBTmdMWUFRc2dBQ2dDM0FFRVFDQUFLQUxjQVNJQkJFQWdBUkQwQXlBQUtBTGNBUkF4SUFCQkFEWUMzQUVMSUFCQkFEWUMzQUVMSUFBb0FzQUJCRUFDUUNBQVFjQUJhaUlCUlEwQUlBRW9BZ0FpQWtVTkFDQUNLQUs0QVJBeElBRW9BZ0FvQXJ3QkVERWdBU2dDQUJBeElBRkJBRFlDQUFzZ0FFRUFOZ0xBQVFzTGxRRUJBMzhqQUVFZ2F5SURKQUFnQXlBQ05nSWNJQU1nQVJCSUlRUWdBeWdDSENFQ0l3QkJnQkJySWdFa0FDQUJRWUFRSUFRUVBTQUNFSVFDR2lBRFFSQnFJZ1VnQVJCSUdpQUJRWUFRYWlRQVFRQWhBZ05BSUFBUVFTQUNTd1JBSUFBZ0FoQlFLQUlBSWdGQkNDQUZJQUVvQWdBb0FnZ1JCUUFnQWtFQmFpRUNEQUVMQ3lBRkVEWWFJQVFRTmhvZ0EwRWdhaVFBQzdFQkFRSi9JQUJCQVRZQ0VDQUFJQVEyQWdnZ0FDQUROZ0lFSUFBZ0FqWUNBQ0FBSUFRZ0JXdzJBaFFqQUVFUWF5SUhKQUFnQUNBQk5nSVlRUkFRVnlFR0l3QkJJR3NpQkNRQUlBUWdBVFlDRENBR0VJTUVJZ1pCK05BQk5nSUFJQVpCREdvZ0JFRUlhaUFFUVF4cUVLb0NFS29DR2lBRVFTQnFKQUFnQUNBR05nSWNJQWNnQVRZQ0JDQUhJQUUyQWdBZ0IwRVFhaVFBSUFBZ0JVRUFTQVIvSUFJUTRBVWdBMndGSUFVTE5nSU1JQUFMUlFFQmZ5TUFRUkJySWdFa0FBSkFBa0FDUUNBQVFRRnJEZ0lDQVFBTFFSQVFCeUFCUWFmV0FCQklFT0FDUVp6SkFVRVBFQVlBQzBFRUlRQUxJQUZCRUdva0FDQUFDMmdCQW44akFFR1FBbXNpQVNRQUlBRkJpQUpxSWdJUW9RVWFRYmlNQkVHOGpBUkJ3SXdFRUNZZ0FrR0VqUVFRSlVHc2pRUkJ4SXdFUWNDTUJFR2tqUVFvQWdBYktBSUFOZ0lBSUFGQmdBSkJ1Z2hCaEkwRUVDOGFJQUFnQVJCSUdpQUJRWkFDYWlRQUMrY0NBUWgvSXdCQkVHc2lCeVFBSUFBb0FnQWhBaUFIUVFBNkFBOGdCMEVQYWlFSUFrQWdBRUVFYWlJRUVJNEJJZ01nQVNBQ2JDSUNTUVJBSXdCQklHc2lDU1FBQWtBZ0FpQURheUlDSUFRUU1pZ0NBQ0FFS0FJRWEwMEVRQ01BUVJCcklnVWtBQ0FGSUFRZ0FoQzFBeUlES0FJRUlRSWdBeWdDQ0NFR0EwQWdBaUFHUmdSQUlBTVFheUFGUVJCcUpBQUZJQVFRTWlBQ0lBZ1F0QU1nQXlBQ1FRRnFJZ0kyQWdRTUFRc0xEQUVMSUFRUU1pRURJQWxCQ0dvZ0JDQUVFSTRCSUFKcUVMTURJQVFRamdFZ0F4Q3FCQ0VESXdCQkVHc2lCU1FBSUFVZ0EwRUlhaUFDRUk0R0lnSW9BZ0FoQmdOQUlBSW9BZ1FnQmtjRVFDQURLQUlRSUFJb0FnQWdDQkMwQXlBQ0lBSW9BZ0JCQVdvaUJqWUNBQXdCQ3dzZ0FoQ3BBU0FGUVJCcUpBQWdCQ0FERUtnRUlBTVFwd1FMSUFsQklHb2tBQXdCQ3lBQ0lBTkpCRUFnQkNBRUtBSUFJQUpxRUl3RUN3c2dBRUVRYWlBQkVLOEdJQWRCRUdva0FBc2dBQ0FBRURJYUEwQWdBUVJBSUFFb0FnQWhBQ0FCRURFZ0FDRUJEQUVMQ3dzWkFDQUJRZi8vLy84QVN3UkFFUGdCQUFzZ0FVRUVkQkJYQzRvREFnTi9BWHdqQUVFUWF5SUJKQUFDUUNBQXZDSURRZi8vLy84SGNTSUNRZHFmcFBvRFRRUkFJQUpCZ0lDQXpBTkpEUUVnQUxzUXdRRWhBQXdCQ3lBQ1FkR243WU1FVFFSQUlBQzdJUVFnQWtIamw5dUFCRTBFUUNBRFFRQklCRUFnQkVRWUxVUlUreUg1UDZBUXdnR01JUUFNQXdzZ0JFUVlMVVJVK3lINXY2QVF3Z0VoQUF3Q0MwUVlMVVJVK3lFSndFUVlMVVJVK3lFSlFDQURRUUJPR3lBRW9Kb1F3UUVoQUF3QkN5QUNRZFhqaUljRVRRUkFJQUpCMzl1L2hRUk5CRUFnQUxzaEJDQURRUUJJQkVBZ0JFVFNJVE4vZk5rU1FLQVF3Z0VoQUF3REN5QUVSTkloTTM5ODJSTEFvQkRDQVl3aEFBd0NDMFFZTFVSVSt5RVpRRVFZTFVSVSt5RVp3Q0FEUVFCSUd5QUF1NkFRd1FFaEFBd0JDeUFDUVlDQWdQd0hUd1JBSUFBZ0FKTWhBQXdCQ3dKQUFrQUNRQUpBSUFBZ0FVRUlhaENpQlVFRGNRNERBQUVDQXdzZ0FTc0RDQkRCQVNFQURBTUxJQUVyQXdnUXdnRWhBQXdDQ3lBQkt3TUltaERCQVNFQURBRUxJQUVyQXdnUXdnR01JUUFMSUFGQkVHb2tBQ0FBQy9RQ0FnTi9BWHdqQUVFUWF5SUJKQUFDZlNBQXZDSURRZi8vLy84SGNTSUNRZHFmcFBvRFRRUkFRd0FBZ0Q4Z0FrR0FnSURNQTBrTkFSb2dBTHNRd2dFTUFRc2dBa0hScCsyREJFMEVRQ0FDUWVTWDI0QUVUd1JBUkJndFJGVDdJUWxBUkJndFJGVDdJUW5BSUFOQkFFZ2JJQUM3b0JEQ0FZd01BZ3NnQUxzaEJDQURRUUJJQkVBZ0JFUVlMVVJVK3lINVA2QVF3UUVNQWd0RUdDMUVWUHNoK1Q4Z0JLRVF3UUVNQVFzZ0FrSFY0NGlIQkUwRVFDQUNRZURidjRVRVR3UkFSQmd0UkZUN0lSbEFSQmd0UkZUN0lSbkFJQU5CQUVnYklBQzdvQkRDQVF3Q0N5QURRUUJJQkVCRTBpRXpmM3paRXNBZ0FMdWhFTUVCREFJTElBQzdSTkloTTM5ODJSTEFvQkRCQVF3QkN5QUFJQUNUSUFKQmdJQ0EvQWRQRFFBYUFrQUNRQUpBQWtBZ0FDQUJRUWhxRUtJRlFRTnhEZ01BQVFJREN5QUJLd01JRU1JQkRBTUxJQUVyQXdpYUVNRUJEQUlMSUFFckF3Z1F3Z0dNREFFTElBRXJBd2dRd1FFTElRQWdBVUVRYWlRQUlBQUxXQUVDZnlBQUVEd29BZ0FFUUNBQUlBQkJDR29pQVNnQ0FCRGpCU0FCUVFBMkFnQWdBQkNYQVNFQ1FRQWhBUU5BSUFFZ0FrWUVRQ0FBRUR4QkFEWUNBQVVnQUNBQkVEcEJBRFlDQUNBQlFRRnFJUUVNQVFzTEN3c1VBQ0FBSUFCQkNHb29BZ0FRNHdVZ0FCQ3dBZ3N3QVFKOUFuOUJBU0FBS2dJQUlnSWdBU29DQUNJRFhRMEFHa0VBSUFJZ0ExNE5BQm9nQUNnQ0JDQUJLQUlFU0FzTHJnUUNCMzhGZkNNQVFhQUJheUlISkFCQmZ5RUZBa0FnQVNnQ0NDSUdRUU5JRFFBZ0JrSGdBR3dRTnlJSVJRUkFRUUJCQTBHZUMwRUFFRGtNQVFzZ0JrRUVkQkEzSWdvRVFFRUFJUVlEUUVFQUlRVWdCa0VEUmdSQVFRQWhCZ0pBQTBBZ0FDQURJQWRCTUdvUSt3WkVBQUFBQUFBQUFBQWhERUVBSVFVRFFDQUJLQUlJSWdJZ0JVb0VRQ0FIUVpBQmFpQUhRVEJxSUFFb0FnUWdCVUVZYkdvUWp3WkJBRWdOQXlBRlFRUjBJZ0lnQVNnQ0FHb2lDU3NEQUNFTklBY3JBNUFCSVE4Z0FpQUthaUlDSUFrckF3Z2dCeXNEbUFHaElnNDVBd2dnQWlBTklBK2hJZzA1QXdBZ0RDQU5JQTJpSUE0Z0RxS2dvQ0VNSUFWQkFXb2hCUXdCQ3dzQ1FDQU1JQUszb3lJTUlBQXJBMmhqRFFBQ1FDQUdSUTBBSUF3Z0FDc0RlR05GRFFBZ0FDc0RjQ0FNSUJDall3MEJDMEVBSVFVZ0JpQUFLQUpnUmcwQUEwQWdBU2dDQ0NJQ0lBVktCRUFnQlVFWWJDRUNJQVZCNEFCc0lRa2dCVUVCYWlFRklBZ2dDV29nQUNBRElBSWdBU2dDQkdvUWlBWkJBRTROQVF3RUN3c2dCeUFLSUFnZ0FrRUJkQkNFQmtFQVNBMENJQU1nQnhEN0JTQUdRUUZxSVFZZ0RDRVFEQUVMQ3lBRUlBdzVBd0FnQ0JBeElBb1FNVUVBSVFVTUJBc2dDQkF4SUFvUU1VRi9JUVVNQXdVRFFDQUZRUVJIQkVBZ0JVRURkQ0lKSUFNZ0JrRUZkQ0lMYW1vZ0FpQUxhaUFKYWlzREFEa0RBQ0FGUVFGcUlRVU1BUXNMSUFaQkFXb2hCZ3dCQ3dBTEFBdEJBRUVEUVo0TFFRQVFPU0FJRURFTElBZEJvQUZxSkFBZ0JRdHRBQ0FBS2dJZ0lBRXFBaUNVSUFBcUFod2dBU29DSEpRZ0FDb0NHQ0FCS2dJWWxDQUFLZ0lVSUFFcUFoU1VJQUFxQWhBZ0FTb0NFSlFnQUNvQ0RDQUJLZ0lNbENBQUtnSUlJQUVxQWdpVUlBQXFBZ0FnQVNvQ0FKUWdBQ29DQkNBQktnSUVsSktTa3BLU2twS1NDeEFBSUFCQ0FEY0NBQ0FBUVFBMkFnZ0xaUUVDZlNBQUtnSVFJQUFxQWhRZ0FDb0NIQ0FBS2dJZ0VLRUJJUUVnQUNvQ0RDQUFLZ0lVSUFBcUFoZ2dBQ29DSUJDaEFTRUNJQUFxQWd3Z0FDb0NFQ0FBS2dJWUlBQXFBaHdRb1FFZ0FDb0NDSlFnQVNBQUtnSUFsQ0FDSUFBcUFnU1VrNUlMREFBZ0FDQUJLUUlBTndJQUM5Z0NBUXA5SUFVZ0Jpb0NBQ0FIS2dJQWtpQUlLZ0lBa2lBSktnSUFra01BQUlBK2xDSUtPQUlBSUFVZ0Jpb0NCQ0FIS2dJRWtpQUlLZ0lFa2lBSktnSUVra01BQUlBK2xDSUxPQUlFSUFZcUFnQWdDcE1pRENBTWxDQUdLZ0lFSUF1VElnMGdEWlNTa1NBSEtnSUFJQXFUSWc0Z0RwUWdCeW9DQkNBTGt5SVBJQStVa3BHU0lBZ3FBZ0FnQ3BNaUVDQVFsQ0FJS2dJRUlBdVRJaEVnRVpTU2taSWdDU29DQUNBS2t5SUtJQXFVSUFrcUFnUWdDNU1pQ3lBTGxKS1Jra01BQUlBK2xDSVNRd0FBQUFCY0JFQWdCRU1BQUlBL0lCS1Z1MFROTzM5bW5xRDJQNksySWhNNEFnQWdBQ0FNSUJPVU9BSUFJQUFnRFNBRUtnSUFsRGdDQkNBQklBNGdCQ29DQUpRNEFnQWdBU0FQSUFRcUFnQ1VPQUlFSUFJZ0VDQUVLZ0lBbERnQ0FDQUNJQkVnQkNvQ0FKUTRBZ1FnQXlBS0lBUXFBZ0NVT0FJQUlBTWdDeUFFS2dJQWxEZ0NCQXNnRWtNQUFBQUFYQXRDQVFKL0l3QkJFR3NpQVNRQUlBRWdBRFlDQ0NBQktBSUlJUUlqQUVFUWF5SUFKQUFnQUNBQ05nSUlJQUFvQWdnaEFpQUFRUkJxSkFBZ0FVRVFhaVFBSUFJTEVnQWdBQ0FBS0FJQUlBRkJBblJxTmdJQUN6QUJBWDhqQUVFUWF5SUNKQUFnQWlBQk5nSUFJQUlnQURZQ0NDQUNJQUpCQ0dvUTlRTWhBQ0FDUVJCcUpBQWdBQXNOQUNBQUtBSUFJQUFvQWdSR0MxY0JBbjhqQUVFZ2F5SURKQUFnQUJBeUlnSWdBMEVJYWlBQUlBQVFRVUVCYWhDSUJDQUFFRUVnQWhEakFpSUNLQUlJSUFFUTVBSWdBaUFDS0FJSVFRaHFOZ0lJSUFBZ0FoQ3BBeUFDRUtnRElBTkJJR29rQUF1cEJBSUpmd0YrSUFBUXVRSWhBaUFBRU9vQ0lRTWpBRUVnYXlJR0pBQWdCaUFETmdJUUlBWWdBallDR0NBR1FSQnFJQVpCR0dvUXBnTWhCQ01BUVJCcklnVWtBQ0FGSUFNMkFnQWdCU0FDTmdJSUlBUkJBazRFUUNBRktBSUlJUUlnQlJEUEFTZ0NBQ0VESXdCQkVHc2lBU1FBSUFFZ0Fpa0NBQ0lLTndNSUlBSWdBeWtDQURjQ0FDQURJQW8zQWdBZ0FVRVFhaVFBSUFVb0FnZ2hBaU1BUVRCcklnRWtBQ0FCSUFJMkFpQWdBU0FDTmdJb0lBRkJJR29nQVVFb2FoQ21BeUVDQWtBZ0JFRUJheUlFUVFKSURRQWdCRUVDYTBFQmRpSUpJQUpJRFFBZ0FTQUJRU2hxSUFKQkFYUWlBMEVCY2lJQ0VQRUJOZ0lZQWtBZ0EwRUNhaUlESUFST0RRQWdBVUVZYWlJSEtBSUFJUWdnQVNBSFFRRVE4UUUyQWhBZ0NDQUJLQUlRRUtZQ1JRMEFJQUZCR0dvUW9BRWFJQU1oQWdzZ0FTZ0NHQ0FCS0FJZ0VLWUNEUUFnQVNBQktBSWdLUUlBTndNUUEwQUNRQ0FCS0FJZ0lBRW9BaGdwQWdBM0FnQWdBU0FCS0FJWU5nSWdJQUlnQ1VvTkFDQUJJQUZCS0dvZ0FrRUJkQ0lEUVFGeUlnSVE4UUUyQWhnQ1FDQURRUUpxSWdNZ0JFNE5BQ0FCUVJocUlnY29BZ0FoQ0NBQklBZEJBUkR4QVRZQ0NDQUlJQUVvQWdnUXBnSkZEUUFnQVVFWWFoQ2dBUm9nQXlFQ0N5QUJLQUlZSUFGQkVHb1FwZ0pGRFFFTEN5QUJLQUlnSUFFcEF4QTNBZ0FMSUFGQk1Hb2tBQXNnQlVFUWFpUUFJQVpCSUdva0FDQUFLQUlFUVFocklRSWdBQkJCSVFNZ0FDQUNFSzhESUFBZ0F4Q2FCQXU1QWdJQmZRRi9JQUlnQVJEdEJTSURpMkFpQkVVRVFDQUFRd0FBZ0Q4Z0E1VWlBaUFCS2dJUUlBRXFBaFFnQVNvQ0hDQUJLZ0lnRUtFQmxEZ0NBQ0FBSUFJZ0FTb0NDQ0FCS2dJRUlBRXFBaUFnQVNvQ0hCQ2hBWlE0QWdRZ0FDQUNJQUVxQWdRZ0FTb0NDQ0FCS2dJUUlBRXFBaFFRb1FHVU9BSUlJQUFnQWlBQktnSVVJQUVxQWd3Z0FTb0NJQ0FCS2dJWUVLRUJsRGdDRENBQUlBSWdBU29DQUNBQktnSUlJQUVxQWhnZ0FTb0NJQkNoQVpRNEFoQWdBQ0FDSUFFcUFnZ2dBU29DQUNBQktnSVVJQUVxQWd3UW9RR1VPQUlVSUFBZ0FpQUJLZ0lNSUFFcUFoQWdBU29DR0NBQktnSWNFS0VCbERnQ0dDQUFJQUlnQVNvQ0JDQUJLZ0lBSUFFcUFod2dBU29DR0JDaEFaUTRBaHdnQUNBQ0lBRXFBZ0FnQVNvQ0JDQUJLZ0lNSUFFcUFoQVFvUUdVT0FJZ0N5QUVSUXQ0QVFKL0l3QkJFR3NpQWlRQUlBQkNBRGNDQUNBQ1FRQTJBZ3dnQUVFSWFoQ2xBaUFCQkVBZ0FCRGlBaUFCU1FSQVFjQ2dBUkNZQWdBTElBQWdBQkF5SUFFUWxBUWlBellDQUNBQUlBTTJBZ1FnQUJBeUlBTWdBVUVEZEdvMkFnQWdBRUVBRUtjRElBQWdBUkNKQkFzZ0FrRVFhaVFBSUFBTElRQWdBQ2dDQkNBQUVESW9BZ0JIQkVBZ0FDQUJFTEFERHdzZ0FDQUJFUFFGQ3dnQUlBQkIvQUJxQzY0QkFRTi9Jd0JCRUdzaUJ5UUFJQVVRYlNFRklBQWdCQkJCRUtBRElBZEJER29oQ0FOQUlBUVFRU0FHU3dSQUlBZEJDR29nQ0NBQklBTWdCQ0FHRUZBb0FnUVFhaW9DQUNBRElBUWdCaEJRS0FJRUVHb3FBZ1FROXdNZ0JTQUhLZ0lJSUFJZ0JDQUdFRkFvQWdBUWFpb0NBSk1RYlNBSEtnSU1JQUlnQkNBR0VGQW9BZ0FRYWlvQ0JKTVFiWkpnQkVBZ0FDQUVJQVlRVUJENEJRc2dCa0VCYWlFR0RBRUxDeUFIUVJCcUpBQUxzQWNDQm44RWZDTUFRWUFDYXlJQ0pBQUNRQ0FCS3dNUUlnZ2dDS0lnQVNzREFDSUlJQWlpSUFFckF3Z2lDU0FKb3FDZ0lnbEVBQUFBQUFBQUFBQmhCRUFnQWtJQU53UElBU0FDUW9DQWdJQ0FnSUQ0UHpjRHdBRkVBQUFBQUFBQUFBQWhDQXdCQ3lBQ0lBZ2dDWjhpQ0tNNUE4QUJJQUlnQVNzRENDQUlvemtEeUFFZ0FTc0RFQ0FJb3lFS0N5QUNJQWc1QTlnQklBSWdDamtEMEFFZ0FpQUJLd01ZT1FQZ0FTQUNJQUVyQXlBNUErZ0JJQUlnQVNzREtEa0Q4QUVnQWlzRDJBRWlDU0VJSXdCQkVHc2lBU1FBQW53Z0NMMUNJSWluUWYvLy8vOEhjU0lEUWZ2RHBQOERUUVJBUkFBQUFBQUFBUEEvSUFOQm5zR2E4Z05KRFFFYUlBaEVBQUFBQUFBQUFBQVF6d0lNQVFzZ0NDQUlvU0FEUVlDQXdQOEhUdzBBR2dKQUFrQUNRQUpBSUFnZ0FSQ2pCVUVEY1E0REFBRUNBd3NnQVNzREFDQUJLd01JRU04Q0RBTUxJQUVyQXdBZ0FTc0RDRUVCRU00Q21nd0NDeUFCS3dNQUlBRXJBd2dRendLYURBRUxJQUVyQXdBZ0FTc0RDRUVCRU00Q0N5RUlJQUZCRUdva0FDQUNJQWdpQ2lBQ0t3UEFBU0lJSUFpaVJBQUFBQUFBQVBBL0lBcWhJZ2lpb0RrRFlDQUNJQUlyQThBQklBSXJBOGdCb2lBSW9pQUNLd1BRQVNBSkVJa0RJZ21pb1RrRGFDQUNJQUlyQThBQklBSXJBOUFCb2lBSW9pQUpJQUlyQThnQm9xQTVBM0FnQWlBQ0t3UGdBVGtEZUNBQ0lBSXJBOGdCSUFJckE4QUJvaUFJb2lBSklBSXJBOUFCb3FBNUE0QUJJQUlnQ2lBQ0t3UElBU0lMSUF1aUlBaWlvRGtEaUFFZ0FpQUNLd1BJQVNBQ0t3UFFBYUlnQ0tJZ0NTQUNLd1BBQWFLaE9RT1FBU0FDSUFJckErZ0JPUU9ZQVNBQ0lBSXJBOUFCSUFJckE4QUJvaUFJb2lBSklBSXJBOGdCb3FFNUE2QUJJQUlnQWlzRDBBRWdBaXNEeUFHaUlBaWlJQWtnQWlzRHdBR2lvRGtEcUFFZ0FpQUtJQUlyQTlBQklna2dDYUlnQ0tLZ09RT3dBU0FDSUFJckEvQUJPUU80QVFOL0lBUkJBMFlFZndOL1FRQWhBU0FHUVFOR0JIOGdBa0dBQW1va0FFRUFCUU5BSUFGQkJFY0VRQ0FCUVFOMElnUWdBQ0FHUVFWMElnTnFhaUFDSUFOcUlBUnFLd01BT1FNQUlBRkJBV29oQVF3QkN3c2dCa0VCYWlFR0RBRUxDd1VnQUNBRVFRVjBJZ2RxSWdNckF4QWhDQ0FES3dNSUlRa2dBeXNEQUNFS1FRQWhBUU5BSUFGQkJFY0VRQ0FCUVFOMElnVWdBaUFIYW1vZ0NDQUNRZUFBYWlBRmFpSUZRVUJyS3dNQW9pQUtJQVVyQXdDaUlBa2dCU3NESUtLZ29Ea0RBQ0FCUVFGcUlRRU1BUXNMSUFJZ0Iyb2lBU0FES3dNWUlBRXJBeGlnT1FNWUlBUkJBV29oQkF3QkN3c2FDKzBTQWhSL0FYeEJ4Z0FoRlVIQWhEMGhGaUFEUVFGR0JFQWdBVUVDYlNFQlFaQ2hEeUVXUVJFaEZTQUFRUUp0SVFBTElBVkJBRFlDQUNBQ1FaQ0F5QUJxSVJNZ0FVRUNheUVZSUFCQkFtc2hHVUVBSVFFRFFBSkFJQUlvQWdnZ0FVd0VRQ0FGS0FJQUlRWU1BUXNDUUNBQ0lBRkJBblJxSWhjb0Fnd2lCaUFWU0NBR0lCWktjZzBBSUFJZ0FVRUVkR29pRVVHTWdBaHFJZ2dvQWdCQkFVWU5BQ0FSUVpDQUNHb29BZ0FnR1VZTkFDQVJRWlNBQ0dvb0FnQkJBVVlOQUNBUlFaaUFDR29vQWdBZ0dFWU5BQ0FDS0FJQUlRd2dBVUVCYWlFS0lBUWdCU2dDQUVHdzhRUnNhaUVKSXdCQmdQRUVheUlOSkFBZ0RDQUlLQUlBSWdZZ0NDZ0NDQ0lMSUFCc2FrRUJkR29oQnlBSUtBSUVJUWdDZndKQUFrQURRQ0FHSUFoS0RRRUNRQ0FITGdFQUlnNUJBRW9FUUNBT1FmLy9BM0ZCQW5RZ0UycEJCR3NvQWdBZ0NrWU5BUXNnQjBFQ2FpRUhJQVpCQVdvaEJnd0JDd3NnQmtGL1J3MEJDMEVBUVFOQjlndEJBQkE1UVg4TUFRc2dDU0FMTmdMY3VBSWdDU0FHTmdJY0lBbEJBVFlDR0NBSlFSeHFJUWhCQVNFS1FRVWhCd0pBQTBBZ0RDQUtRUUowSWc0Z0NXb2lDa0hZdUFKcUtBSUFJQUJzSUFvb0FoZ2lEMnBCQVhScUlSSWdCMEVGYWlFSFFRQWhDZ0pBQTBBQ1FDQUhRUWh2SVFjZ0NrRUlSZzBBSUJJZ0IwRUNkQ0lRUVlEYUFHb29BZ0FpRkNBQWJDQVFRZURaQUdvb0FnQWlFR3BCQVhScUxnRUFRUUJLRFFJZ0NrRUJhaUVLSUFkQkFXb2hCd3dCQ3d0QkFFRURRY1FWUVFBUU9VRi9EQU1MSUFnZ0Rtb2dEeUFRYWpZQ0FDQUpJQWtvQWhoQkFuUnFJZ3BCM0xnQ2FpQVVJQXBCMkxnQ2FpZ0NBR28yQWdBQ1FDQUlJQWtvQWhnaUNrRUNkQ0lPYWlnQ0FDQUdSdzBBSUFrZ0RtcEIzTGdDYWlnQ0FDQUxSdzBBSUFwQkFTQUtRUUZLR3lFT1FRQWhERUVBSVFoQkFTRUhEQUlMSUFrZ0NrRUJhaUlLTmdJWUlBcEJqODRBUncwQUMwRUFRUU5CNGhwQkFCQTVRWDhNQVFzRFFDQUhJQTVIQkVBZ0NTQUhRUUowYWlJUFFkeTRBbW9vQWdBZ0Myc2lFaUFTYkNBUEtBSWNJQVpySWc4Z0QyeHFJZzhnRENBTUlBOUlJZzhiSVF3Z0J5QUlJQThiSVFnZ0IwRUJhaUVIREFFTEMwRUFJUVlnQ0VFQUlBaEJBRW9iSVFjRGZ5QUdJQWRHQkg4Z0NVRWNhaUVMSUFsQjNMZ0NhaUVNSUFnaEJnTi9JQVlnQ2s0RWYwRUFJUVlEUUNBR0lBZEhCRUFnQ1NBR0lBaHJJZ29nQ1NnQ0dHcEJBblJxSUFaQkFuUWlDeUFOUWNDNEFtcHFLQUlBTmdJY0lBa2dDU2dDR0NBS2FrRUNkR3BCM0xnQ2FpQUxJQTFxS0FJQU5nSUFJQVpCQVdvaEJnd0JDd3NnQ1VFY2FpQUpLQUlZUVFKMGFpQUpLQUljTmdJQUlBbEIzTGdDYWlBSktBSVlRUUowYWlBSktBTGN1QUkyQWdBZ0NTQUpLQUlZUVFGcU5nSVlRUUFGSUFzZ0JpQUlhMEVDZENJS2FpQUxJQVpCQW5RaURtb29BZ0EyQWdBZ0NpQU1haUFNSUE1cUtBSUFOZ0lBSUFaQkFXb2hCaUFKS0FJWUlRb01BUXNMQlNBR1FRSjBJZ3NnRFVIQXVBSnFhaUFKSUF0cUlnd29BaHcyQWdBZ0N5QU5haUFNUWR5NEFtb29BZ0EyQWdBZ0JrRUJhaUVHREFFTEN3c2hCaUFOUVlEeEJHb2tBQ0FHUVFCSURRQWdGeWdDRENFTUlBUWdCU2dDQUVHdzhRUnNhaUVLUVFBaENDTUFRZkFBYXlJSEpBQWdDa0hjdUFKcUlRa2dDa0VjYWlFTElBb29BaGdpQmtFQ0lBWkJBa29iUVFGcklRNGdDaWdDM0xnQ0lROGdDaWdDSENFU1FRQWhCa0VCSVEwRFFDQU5JQTVIQkVBZ0NpQU5RUUowYWlJUVFkeTRBbW9vQWdBZ0Qyc2lGQ0FVYkNBUUtBSWNJQkpySWhBZ0VHeHFJaEFnQ0NBSUlCQklJaEFiSVFnZ0RTQUdJQkFiSVFZZ0RVRUJhaUVOREFFTEN5QUhRUUEyQWd3Z0IwRUFOZ0k4QWtBZ0N5QUpRUUFnQmlBTXQwUUFBQUFBQUFEb1A2TkVleFN1UitGNmhEK2lSQUFBQUFBQUFQQS9vaUlhSUFkQlFHc2dCMEU4YWhEckFVRUFTQVJBUVg4aERRd0JDMEYvSVEwZ0N5QUpJQVlnQ2lnQ0dFRUJheUFhSUFkQkVHb2dCMEVNYWhEckFVRUFTQTBBQW44Z0J5Z0NQQ0lJUVFGSElBY29BZ3dpREVFQlIzSkZCRUFnQnlnQ0VDRUlJQVloQ1NBSEtBSkFEQUVMSUFoQkFrZ2dESEpGQkVBZ0IwRUFOZ0k4SUFkQkFEWUNEQ0FMSUFsQkFDQUdRUUp0SWdnZ0dpQUhRVUJySUFkQlBHb1E2d0ZCQUVnTkFpQUxJQWtnQ0NBR0lCb2dCMEVRYWlBSFFReHFFT3NCUVFCSURRSWdCeWdDUEVFQlJ3MENJQWNvQWd4QkFVY05BaUFIS0FJUUlRa2dCaUVJSUFjb0FrQU1BUXNnQ0NBTVFRSkljZzBCSUFvb0FoZ2hDQ0FIUVFBMkFqd2dCMEVBTmdJTUlBc2dDU0FHSUFZZ0NHcEJBV3RCQW0waUNDQWFJQWRCUUdzZ0IwRThhaERyQVVFQVNBMEJJQXNnQ1NBSUlBb29BaGhCQVdzZ0dpQUhRUkJxSUFkQkRHb1E2d0ZCQUVnTkFTQUhLQUk4UVFGSERRRWdCeWdDREVFQlJ3MEJJQWNvQWhBaENDQUhLQUpBSVFrZ0Jnc2hCa0VBSVEwZ0NrRUFOZ0tjOFFRZ0NrR284UVJxSUFnMkFnQWdDa0drOFFScUlBazJBZ0FnQ2tHZzhRUnFJQVkyQWdBZ0NrR3M4UVJxSUFvb0FoaEJBV3MyQWdBTElBZEI4QUJxSkFBZ0RVRUFTQTBBSUFRZ0JTZ0NBRUd3OFFSc2FpQVhLQUlNTmdJQUlBUWdCU2dDQUNJR1FiRHhCR3hxSWdnZ0VVR1FnQ2hxS3dNQU9RTUlJQWdnRVVHWWdDaHFLd01BT1FNUUlBVWdCa0VCYWlJSU5nSUFRVHdoQmlBSVFUeEdEUUVMSUFGQkFXb2hBUXdCQ3d0QkFDRUNRUUFoQVFOQUlBRWdCazRFUUFOQUlBSWdCa2dFUUNBRUlBSWlBVUd3OFFSc2FpZ0NBRVVFUUFOQUlBWWdBVUVCYWlJQVNnUkFJQVFnQVVHdzhRUnNhaUFFSUFCQnNQRUViR3BCc1BFRUVENGFJQVVvQWdBaEJpQUFJUUVNQVFzTElBVWdCa0VCYXlJR05nSUFDeUFDUVFGcUlRSU1BUXNMQWtBZ0EwRUJSdzBBUVFBaEFBTkFJQUFnQms0TkFTQUVJQVFvQWdCQkFuUTJBZ0FnQkNBRUt3TUlJaG9nR3FBNUF3Z2dCQ0FFS3dNUUlob2dHcUE1QXhBZ0JDZ0NHQ0VEUVFBaEFRTkFJQUVnQTBnRVFDQUVJQUZCQW5ScUlnSWdBaWdDSEVFQmREWUNIQ0FDUWR5NEFtb2lBaUFDS0FJQVFRRjBOZ0lBSUFGQkFXb2hBUXdCQ3dzZ0FFRUJhaUVBSUFSQnNQRUVhaUVFSUFVb0FnQWhCZ3dBQ3dBTFFRQVBDeUFFSUFGQnNQRUViR29oQ0NBQlFRRnFJZ0FoQVFOQUlBRWdCazRFUUNBQUlRRU1BZ1VnQ0NzRENDQUVJQUZCc1BFRWJHb2lCaXNEQ0tFaUdpQWFvaUFJS3dNUUlBWXJBeENoSWhvZ0dxS2dJUm9DUUFKQUlBZ29BZ0FpQ1NBR0tBSUFJaE5LQkVBZ0dpQUpRUVJ0dDJNTkFRd0NDeUFJSVFZZ0dpQVRRUVJ0dDJORkRRRUxJQVpCQURZQ0FBc2dBVUVCYWlFQklBVW9BZ0FoQmd3QkN3QUxBQXNBQzdVdEFoOS9EMzBqQUVGQWFpSVVKQUFnRkVFd2FpQURFRUVROXdVaEh5QVVRU0JxSUFNUVFSRDNCU0VnQTM4Z0F4QkJJQkZOQkg5QkFDRVJJQlJCQURZQ0dDQVVRUUEyQWd3Z0ZFSUFOd01BSUJRZ0JySWlKamdDSENBVUlDWTRBaFFnRkNBRnNpSW1PQUlRSUJRZ0pqZ0NDQ0FmUVFBUVVDRVhJQ0JCQUJCUUlSZ2dCRUVNYWlJQklBTVFRU0laRUlzQ0lBQWhEeUFVSVFBZ0JFRVlhaUVWSUFRcUFpUWhKaUFFS0FJb0lSMGdCQ2dDTENFa0lBUW9BakFoQWlNQVFSQnJJaHNrQUFKQUlBUWlJUkJDSUIxQkNXeFBCRUFnQVJCQ0lCbFBCRUFnRlJCQklCMVBCRUFnR1VFRVNBMERJQnRCMGdrMkFnd2dBVUVBRURvaEV5QW1FRzBoTGlBQ0lCa1FwUU1oSlNBVElCa1Fod1lnRXlBWklCa2dHMEVNYWhEOEF3TkFJQTRnSFU0Z0RDQWtUbkpGQkVBZ0V5QVpRUVFnRzBFTWFoRDhBeUFYSUJNb0FneEJBM1FpQW1vaEFTQUNJQmhxSVFKQkFDRURBa0FnRnlBVEtBSUFRUU4wSWdscUlnUWdGeUFUS0FJRVFRTjBJZ2hxSWdvZ0Z5QVRLQUlJUVFOMEloQnFJZ2NRcHdGREFBQUFBRjRnQ1NBWWFpSUpJQWdnR0dvaUNDQVFJQmhxSWhBUXB3RkRBQUFBQUY1ekRRQWdDaUFISUFFUXB3RkRBQUFBQUY0Z0NDQVFJQUlRcHdGREFBQUFBRjV6RFFBZ0J5QUJJQVFRcHdGREFBQUFBRjRnRUNBQ0lBa1Fwd0ZEQUFBQUFGNXpEUUFnQVNBRUlBb1Fwd0ZEQUFBQUFGNGdBaUFKSUFnUXB3RkRBQUFBQUY1elJTRURDd0pBSUFORkRRQWdJU0FPUVFsc0lpSVFPaUVCSUJjZ0V5Z0NBRUVEZENJQ2FpRURJQmNnRXlnQ0JFRURkQ0lFYWlFS0lCY2dFeWdDQ0VFRGRDSUhhaUVKSUJjZ0V5Z0NERUVEZENJSWFpRVFJQUlnR0dvaEVpQUVJQmhxSVJZZ0J5QVlhaUVISUFnZ0dHb2hDRUVBSVFJakFFR1FBV3NpQkNRQUFrQWdCRUZBYXlBRVFUaHFJQVJCTUdvZ0JFRW9haUFFUWR3QWFpQUVRZEFBYWlBRElBb2dDU0FRRU84RlJRMEFJQVJCSUdvZ0JFRVlhaUFFUVJCcUlBUkJDR29nQkVIWUFHb2dCRUhJQUdvZ0VpQVdJQWNnQ0JEdkJVVU5BQ0FFUWVBQWFpRVFJd0JCb0FKcklnb2tBQ0FLSUFSQlFHc2dCRUVnYWhDZEF5QUtRY2dBYWlJSklBUkJPR29nQkVFWWFoQ2RBeUFLUVpBQmFpSUlJQVJCTUdvZ0JFRVFhaENkQXlBS1FkZ0JhaUlMSUFSQktHb2dCRUVJYWhDZEEwRUFJUkpCQUNFV0l3QkJvQUpySWdNa0FDTUFRU0JySWdja0FDQUhJQW9RVmpnQ0FDQUhJQXBCSkdvaURSQldPQUlFSUFjZ0NSQldPQUlJSUFjZ0NrSHNBR29RVmpnQ0RDQUhJQWdRVmpnQ0VDQUhJQXBCdEFGcUVGWTRBaFFnQnlBTEVGWTRBaGdnQnlBS1Fmd0JhaEJXT0FJY0lBZEJCMEVHUVFWQkJFRURRUUlnQnlvQ0JDQUhLZ0lBWGlJSklBY3FBZ2dnQnlBSlFRSjBhaW9DQUY0Yklna2dCeW9DRENBSElBbEJBblJxS2dJQVhoc2lDU0FIS2dJUUlBY2dDVUVDZEdvcUFnQmVHeUlKSUFjcUFoUWdCeUFKUVFKMGFpb0NBRjRiSWdrZ0J5b0NHQ0FISUFsQkFuUnFLZ0lBWGhzaUNTQUhLZ0ljSUFjZ0NVRUNkR29xQWdCZUd5SUpRUUowYWlJSUtnSUFJaVpEQUFBQUFGd0VRQ0FLSUFvZ0NVRWtiR29RcndFZ0F5QUtRd0FBZ0Q4Z0NDb0NBSkdWRU0wQklBTkJKR29nRFVFL0VQQUJDeUFIUVNCcUpBQUNRQ0FtUXdBQUFBQmJEUUFqQUVFZ2F5SUhKQUFnQTBFa2FpSUpJQU1nQ2tFa2FpSUlFR0lnQTBISUFHb2lDeUFESUFwQnlBQnFFR0lnQTBIc0FHb2lEU0FESUFwQjdBQnFFR0lnQTBHUUFXb2lHaUFESUFwQmtBRnFFR0lnQTBHMEFXb2lIQ0FESUFwQnRBRnFFR0lnQTBIWUFXb2lIaUFESUFwQjJBRnFFR0lnQTBIOEFXb2lJeUFESUFwQi9BRnFFR0lnQnlBSkVGWTRBZ0FnQnlBTEVGWTRBZ1FnQnlBTkVGWTRBZ2dnQnlBYUVGWTRBZ3dnQnlBY0VGWTRBaEFnQnlBZUVGWTRBaFFnQnlBakVGWTRBaGdnQjBFR1FRVkJCRUVEUVFJZ0J5b0NCQ0FIS2dJQVhpSUxJQWNxQWdnZ0J5QUxRUUowYWlvQ0FGNGJJZ3NnQnlvQ0RDQUhJQXRCQW5ScUtnSUFYaHNpQ3lBSEtnSVFJQWNnQzBFQ2RHb3FBZ0JlR3lJTElBY3FBaFFnQnlBTFFRSjBhaW9DQUY0Yklnc2dCeW9DR0NBSElBdEJBblJxS2dJQVhoc2lDMEVDZEdvaURTb0NBQ0ltUXdBQUFBQmNCRUFnQ1NBSklBdEJKR3dpQzJvUXJ3RWdDQ0FJSUF0cUVLOEJJQWtnQ1VNQUFJQS9JQTBxQWdDUmxSRE5BUXNnQjBFZ2FpUUFJQ1pEQUFBQUFGc05BQ01BUVNCcklnY2tBQ0FEUWNnQWFpSUpJQU5CSkdvaUNDQUtRY2dBYWlJTEVHSWdBMEhzQUdvaURTQUlJQXBCN0FCcUVHSWdBMEdRQVdvaUdpQUlJQXBCa0FGcUVHSWdBMEcwQVdvaUhDQUlJQXBCdEFGcUVHSWdBMEhZQVdvaUhpQUlJQXBCMkFGcUVHSWdBMEg4QVdvaUl5QUlJQXBCL0FGcUVHSWdCeUFKRUZZNEFnQWdCeUFORUZZNEFnUWdCeUFhRUZZNEFnZ2dCeUFjRUZZNEFnd2dCeUFlRUZZNEFoQWdCeUFqRUZZNEFoUWdCMEVGUVFSQkEwRUNJQWNxQWdRZ0J5b0NBRjRpQ0NBSEtnSUlJQWNnQ0VFQ2RHb3FBZ0JlR3lJSUlBY3FBZ3dnQnlBSVFRSjBhaW9DQUY0YklnZ2dCeW9DRUNBSElBaEJBblJxS2dJQVhoc2lDQ0FIS2dJVUlBY2dDRUVDZEdvcUFnQmVHeUlJUVFKMGFpSU5LZ0lBSWlaREFBQUFBRndFUUNBSklBa2dDRUVrYkNJSWFoQ3ZBU0FMSUFnZ0Myb1Fyd0VnQ1NBSlF3QUFnRDhnRFNvQ0FKR1ZFTTBCQ3lBSFFTQnFKQUFnSmtNQUFBQUFXdzBBSXdCQklHc2lCeVFBSUFOQjdBQnFJZ2tnQTBISUFHb2lDQ0FLUWV3QWFpSUxFR0lnQTBHUUFXb2lEU0FJSUFwQmtBRnFFR0lnQTBHMEFXb2lHaUFJSUFwQnRBRnFFR0lnQTBIWUFXb2lIQ0FJSUFwQjJBRnFFR0lnQTBIOEFXb2lIaUFJSUFwQi9BRnFFR0lnQnlBSkVGWTRBZ0FnQnlBTkVGWTRBZ1FnQnlBYUVGWTRBZ2dnQnlBY0VGWTRBZ3dnQnlBZUVGWTRBaEFnQjBFRVFRTkJBaUFIS2dJRUlBY3FBZ0JlSWdnZ0J5b0NDQ0FISUFoQkFuUnFLZ0lBWGhzaUNDQUhLZ0lNSUFjZ0NFRUNkR29xQWdCZUd5SUlJQWNxQWhBZ0J5QUlRUUowYWlvQ0FGNGJJZ2hCQW5ScUlnMHFBZ0FpSmtNQUFBQUFYQVJBSUFrZ0NTQUlRU1JzSWdocUVLOEJJQXNnQ0NBTGFoQ3ZBU0FKSUFsREFBQ0FQeUFOS2dJQWtaVVF6UUVMSUFkQklHb2tBQ0FtUXdBQUFBQmJEUUFqQUVFUWF5SUhKQUFnQTBHUUFXb2lDU0FEUWV3QWFpSUlJQXBCa0FGcUlnc1FZaUFEUWJRQmFpSU5JQWdnQ2tHMEFXb1FZaUFEUWRnQmFpSWFJQWdnQ2tIWUFXb1FZaUFEUWZ3QmFpSWNJQWdnQ2tIOEFXb1FZaUFISUFrUVZqZ0NBQ0FISUEwUVZqZ0NCQ0FISUJvUVZqZ0NDQ0FISUJ3UVZqZ0NEQ0FIUVFOQkFpQUhLZ0lFSUFjcUFnQmVJZ2dnQnlvQ0NDQUhJQWhCQW5ScUtnSUFYaHNpQ0NBSEtnSU1JQWNnQ0VFQ2RHb3FBZ0JlR3lJSVFRSjBhaUlOS2dJQUlpWkRBQUFBQUZ3RVFDQUpJQWtnQ0VFa2JDSUlhaEN2QVNBTElBZ2dDMm9RcndFZ0NTQUpRd0FBZ0Q4Z0RTb0NBSkdWRU0wQkN5QUhRUkJxSkFBZ0prTUFBQUFBV3cwQUl3QkJFR3NpQnlRQUlBTkJ0QUZxSWdrZ0EwR1FBV29pQ0NBS1FiUUJhaUlMRUdJZ0EwSFlBV29pRFNBSUlBcEIyQUZxRUdJZ0EwSDhBV29pR2lBSUlBcEIvQUZxRUdJZ0J5QUpFRlk0QWdRZ0J5QU5FRlk0QWdnZ0J5QWFFRlk0QWd3Z0IwRUVhaUlJUVFJZ0NDb0NCQ0FJS2dJQVhpSU5JQWdxQWdnZ0NDQU5RUUowYWlvQ0FGNGJJZ2hCQW5ScUlnMHFBZ0FpSmtNQUFBQUFYQVJBSUFrZ0NTQUlRU1JzSWdocUVLOEJJQXNnQ0NBTGFoQ3ZBU0FKSUFsREFBQ0FQeUFOS2dJQWtaVVF6UUVMSUFkQkVHb2tBQ0FtUXdBQUFBQmJEUUFqQUVFUWF5SUhKQUFnQTBIWUFXb2lDU0FEUWJRQmFpSUxJQXBCMkFGcUlnZ1FZaUFEUWZ3QmFpSU5JQXNnQ2tIOEFXb1FZaUFISUFrUVZqZ0NDQ0FISUEwUVZqZ0NEQ0FIUVFocUlBY3FBZ3dnQnlvQ0NGNGlDMEVDZEdvaURTb0NBQ0ltUXdBQUFBQmNCRUFnQ1NBSklBdEJKR3dpQzJvUXJ3RWdDQ0FJSUF0cUVLOEJJQWtnQ1VNQUFJQS9JQTBxQWdDUmxSRE5BUXNnQjBFUWFpUUFJQ1pEQUFBQUFGc05BQ0FEUWZ3QmFpSUhJQU5CMkFGcUlBcEIvQUZxRUdJZ0J4QldJaVpEQUFBQUFGd0VRQ0FISUFkREFBQ0FQeUFta1pVUXpRRUxJQ1pEQUFBQUFGc05BQ01BUVlBRGF5SUhKQUFnQnlBSElBTkJBQkRkQVRnQzBBSWdCeUFIUVNScUlBTkJBUkRkQVRnQzFBSWdCeUFIUWNnQWFpQURRUUlRM1FFNEF0Z0NJQWNnQjBIc0FHb2dBMEVERU4wQk9BTGNBaUFISUFkQmtBRnFJQU5CQkJEZEFUZ0M0QUlnQnlBSFFiUUJhaUFEUVFVUTNRRTRBdVFDSUFjZ0IwSFlBV29nQTBFR0VOMEJPQUxvQWlBSElBZEIvQUZxSUFOQkJ4RGRBVGdDN0FJZ0J5QUhRYUFDYWlBRFFRZ1EzUUU0QXZBQ0lBZEIwQUpxSWdsQkNFRUhRUVpCQlVFRVFRTkJBaUFKS2dJRUlBa3FBZ0JlSWdnZ0NTb0NDQ0FKSUFoQkFuUnFLZ0lBWGhzaUNDQUpLZ0lNSUFrZ0NFRUNkR29xQWdCZUd5SUlJQWtxQWhBZ0NTQUlRUUowYWlvQ0FGNGJJZ2dnQ1NvQ0ZDQUpJQWhCQW5ScUtnSUFYaHNpQ0NBSktnSVlJQWtnQ0VFQ2RHb3FBZ0JlR3lJSUlBa3FBaHdnQ1NBSVFRSjBhaW9DQUY0YklnZ2dDU29DSUNBSklBaEJBblJxS2dJQVhoc2lDVUVDZEdvcUFnQWlKa01BQUFBQVhBUkFJQkFnQnlBSlFTUnNhaEQ2QXdzZ0IwR0FBMm9rQUNBbVF3QUFBQUJjSVJZTElBTkJvQUpxSkFBZ0ZnUkFJQkFRN1FXTHUwVHhhT09JdGZqa1BtTkZJUklMSUFwQm9BSnFKQUFnRWtVTkFDQUVLZ0pVSVNvZ0JDb0NVQ0V2SUFRcUFtd2hNQ0FFS2dKTUlTZ2dCQ29DY0NFcklBUXFBbmdoS1NBRUtnSmdJU3dnQVNBRUtnSklJaTBnQkNvQ2ZDSXhsQ0FFS2dKa0lBUXFBbGdpSjVXU0lqSWdCQ29DWENJbWxEZ0NCQ0FCSUNrZ0xaUWdMQ0FubFpJaUxDQW1sRGdDQUNBRUtnSklJUzBnQkNvQ2dBRWhNeUFFS2dKb0lUUWdBU0F4SUNpVUlDc2dKNVdTSWlzZ0pwUTRBaEFnQVNBcElDaVVJREFnSjVXU0lpZ2dKcFE0QWd3Z0FTQXFqQ0FtbENJcElES1VJQytNSUNhVUlpb2dMSlFnTXlBdGxDQTBJQ2VWa3BLU09BSUlJQUVnS1NBcmxDQXFJQ2lVSUFRcUFvQUJJQVFxQWt5VUlBUXFBblFnSjVXU2twSTRBaFFnQVNBRUtnSjRJQ2FVSWljNEFoZ2dBU0FFS2dKOElDYVVJaVk0QWh3Z0FTQUVLZ0tBQVNBbklBUXFBbENVa3lBbUlBUXFBbFNVa3pnQ0lFRUJJUUlMSUFSQmtBRnFKQUFnQWtVTkFDQWhJQ0lRT2lFU1FRQWhDeU1BUVRCcklnZ2tBQ0FJUVNocUlnRWdFaUFBRU8wQklBaEJJR29pQWlBU0lBQkJDR29pQ2hEdEFTQUlRUmhxSWdNZ0VpQUFRUkJxSWhBUTdRRWdDRUVRYWlBQkVPNEZJQWhCQ0dvZ0FoRHVCUUpBSUFBZ0NpQVFJQUVnQWlBREVKNERSUTBBUVFNaEZpQUlRUmhxSVFFZ0NFRWdhaUVDSUFoQktHb2hBeUFBSVFrZ0NpRUhBMEFnRmtFRVJ3UkFJQU1pQkNBU0lCQkJDR29pRUJEdEFTQVdRUUZxSVJZZ0NVRUlhaUlKSUFkQkNHb2lCeUFRSUFJZ0FTQURFSjRESVNJZ0FpRURJQUVoQWlBRUlRRWdJZzBCREFJTEN5QUhJQkFnQUNBQ0lBRWdDRUVRYWhDZUEwVU5BQ0FRSUFBZ0NpQUJJQWhCRUdvZ0NFRUlhaENlQXlFTEN5QUlRVEJxSkFBZ0MwVU5BQ0FPUVFGcUlRNExJQXhCQVdvaERBd0JDd3NnRGtVRVFFRUFJUTRNQkF0REFBQ0FQeUF1bFNFbVFRQWhBQ0FPUVFBZ0RrRUFTaHNoQVVFQUlRd0RRQ0FCSUF4R0JFQURRQ0FBSUJsSUlBNUJBa3B4UlFSQUlBNUJBU0FPUVFGS0d5RUFJQlZCQUJCUUtBSUVJUUVnRlVFQUVGQXFBZ0FoSmtFQklRd0RRQ0FBSUF4R0JFQWdEeUFoSUFGQkNXd1FPaEQ2QXlBUEtnSWdJU1lnRDBHQWdJRDhBellDSUNBUElBOHFBZ0JEQUFDQVB5QW1sU0ltbERnQ0FDQVBJQ1lnRHlvQ0JKUTRBZ1FnRHlBbUlBOHFBZ2lVT0FJSUlBOGdKaUFQS2dJTWxEZ0NEQ0FQSUNZZ0R5b0NFSlE0QWhBZ0R5QW1JQThxQWhTVU9BSVVJQThnSmlBUEtnSVlsRGdDR0NBUElDWWdEeW9DSEpRNEFoeEJBU0VPREFrRklDWWdGU0FNRUZBcUFnQmVCRUFnRlNBTUVGQXFBZ0FoSmlBVklBd1FVQ2dDQkNFQkN5QU1RUUZxSVF3TUFRc0FDd0FMSUFBZ0pTQVpJQUJyRUtVRElBQnFJZ1FnQUNBRVNoc2hDa0VBSVFFRFFDQUJJQTVHQkVBZ0ZVRUFFRkFoQ1NBT1FRSnRJQTVCQVhGcVFRRnJJUWhCQUNFTUl3QkJFR3NpRWlRQUlCSkJDR29Rc2dJaEJ3SkFBa0FnRGlJS1FRQktCRUFnQ0VFQVRBMEJJQXBCQVdzaERpQUpJQWhCQVdzaUhVRURkR29oRUFOQUlBd2dEa2dFUUNBSElCQXFBZ0E0QWdBZ0J5QVFLQUlFTmdJRUlBNGhBQ0FNSVFFRFFDQUJJUUlEUUNBQ0lnRkJBV29oQWlBSklBRkJBM1JxSWhZZ0J4RHBCUTBBQ3lBQUlRTURRQ0FESWdCQkFXc2hBeUFISUFrZ0FFRURkR29pQ3hEcEJRMEFDeUFBSUFGT0JFQWdGaUFMRU1RQklBSWhBU0FESVFBTElBQWdBVTROQUFzZ0RpQUFJQUVnQ0VnYklRNGdBU0FNSUFBZ0hVZ2JJUXdNQVFzTElCc2dFQ2tDQURjQ0FDQVNRUkJxSkFBTUFndEJzS1VFUVpUQUFSQXdRYkhBQVJBd1FmckVBQkF3UWRJQUVETkI4Y29BRURCQjU4RUJFREFRTkJBQUFBdEJzS1VFUVl6Q0FSQXdRYkhBQVJBd1FmckVBQkF3UWRNQUVETkI4Y29BRURCQnFjSUJFREFRTkJBQUFBc2dDa0VCZFNFT0lBUWhBQXdDQ3lBaElCVWdBUkJRS0FJRVFRbHNFRG9oQnlBQUlRd0RRQ0FLSUF4R0JFQWdBVUVCYWlFQkRBSUZJQmNnRXlBTVFRSjBhaWdDQUVFRGRDSUphaUVESXdCQkVHc2lBaVFBSUFKQkNHb2dBa0VNYWlBSElBTXFBZ0FnQXlvQ0JCRDNBeUFDSUFJcUFnZ2dDU0FZYWlJREtnSUFremdDQUNBQ0lBSXFBZ3dnQXlvQ0JKTTRBZ1FnQWlvQ0FDSW5JQ2VVSUFJcUFnUWlKeUFubEpJZ0pwUkRBQUNBUDVJUTFnWWhKeUFDUVJCcUpBQWdGU0FCRUZBaUFpQW5JQUlxQWdDU09BSUFJQXhCQVdvaERBd0JDd0FMQUFzQUN3QUZJQlVnREJCUVFRQTJBZ0FnRlNBTUVGQWdERFlDQkNBTVFRRnFJUXdNQVFzQUN3QUxRYkNsQkVHVXZ3RVFNRUdIdkFFUU1FSDZ4QUFRTUVINUFCQXpRZkhLQUJBd1FaYk9BUkF3RURRUUFBQUxRYkNsQkVITHZRRVFNRUdIdkFFUU1FSDZ4QUFRTUVINEFCQXpRZkhLQUJBd1FiRytBUkF3RURRUUFBQUxRYkNsQkVIdXVnRVFNRUdIdkFFUU1FSDZ4QUFRTUVIM0FCQXpRZkhLQUJBd1FlYThBUkF3RURRUUFBQUxJQnRCRUdva0FDQU9CRUFqQUVId0FHc2lBQ1FBQW45QkFDQUFRU0JxSUE5RHJNVW5OeEQyQlVVTkFCb2dBRUlBTndNWUlBQkJBRFlDRkNBQUlBV3lJaVk0QWhBZ0FDQUdzaUluT0FJTUlBQWdKamdDQ0NBQUlDYzRBZ1FnQUVFQU5nSUFJQUJCNkFCcUlnSWdBRUVnYWlJQklBQkJHR29RN1FFZ0FFSGdBR29pQkNBQklBQkJFR29RN1FFZ0FFSFlBR29pQXlBQklBQkJDR29RN1FFZ0FFSFFBR29pRENBQklBQVE3UUVqQUVFd2F5SUJKQUFnQVVFb2FpSVBJQVFnQWhEWkFpQUJRU0JxSWc0Z0F5QUNFTmtDSUFGQkdHb2lHeUFNSUFJUTJRSWdBVUVRYWlJQ0lBUWdBeERaQWlBQlFRaHFJZ1FnRENBREVOa0NJQThnRGhDY0F5RW1JQTRnR3hDY0F5RW5JQThnR3hDY0F5RW9JQUlnQkJDY0F5RXBJQ1lnSnhDZkF5QW9FSjhESUNrUW53TWhKaUFCUVRCcUpBQkJBQ0FGSUFac3QwUXRReHpyNGpZYVA2SzJJQ1plRFFBYUlBQkI2QUJxSWdFZ0FFSGdBR29pQWlBQVFkZ0FhaUlERUtjQklTWkJBVUYvSUFJZ0F5QUFRZEFBYWlJRUVLY0JRd0FBQUFCZUcwRUJRWDhnSmtNQUFBQUFYaHRxUVFGQmZ5QURJQVFnQVJDbkFVTUFBQUFBWGh0cVFRRkJmeUFFSUFFZ0FoQ25BVU1BQUFBQVhodHFJZ0VnQVVFZmRTSUJjeUFCYTBFRVJnc2hFU0FBUWZBQWFpUUFDeUFnRU9BQklCOFE0QUVnRkVGQWF5UUFJQkVGSUFFZ0F5QVJFRkFvQWdBUWFpb0NBQ0VtSUNBZ0VSQlFJQ1k0QWdBZ0FTQURJQkVRVUNnQ0FCQnFLZ0lFSVNZZ0lDQVJFRkFnSmpnQ0JDQUNJQU1nRVJCUUtBSUVFR29xQWdBaEppQWZJQkVRVUNBbU9BSUFJQUlnQXlBUkVGQW9BZ1FRYWlvQ0JDRW1JQjhnRVJCUUlDWTRBZ1FnRVVFQmFpRVJEQUVMQ3d1QUNBSURmd1o5SXdCQklHc2lCQ1FBSUFRZ0F5QUJLQUpZYnlBQktBSlVieUFCS0FJMGJ5SUZOZ0lNSUFRZ0F5QUZheUFCS0FKWWJ5QUJLQUpVYnlBQktBSTBiU0lGTmdJSUlBUWdBeUFFS0FJTUlBRW9BalFnQld4cWF5QUJLQUpZYnlBQktBSlViU0lGTmdJRUlBUWdBeUFFS0FJTUlBRW9BbFFnQld3Z0FTZ0NOQ0FFS0FJSWJHcHFheUFCS0FKWWJTSUROZ0lBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFRb0Fnd2lCVUVBVGdSQUlBVWdBU2dDTkU0TkFTQUVLQUlJSWdWQkFFZ05BaUFGSUFFb0FqaE9EUU1nQkNnQ0JDSUZRUUJJRFFRZ0JTQUJLQUk4VGcwRklBTkJBRWdOQmlBRElBRW9Ba0JPRFFjTUNRdEJzS1VFUWZTd0FSQXdRZCt4QVJBd1FmckVBQkF3UWI0QkVETkI4Y29BRURCQnQ3SUJFREFRTkF3SEMwR3dwUVJCbExNQkVEQkIzN0VCRURCQitzUUFFREJCdndFUU0wSHh5Z0FRTUVHM3NnRVFNQkEwREFZTFFiQ2xCRUc4c3dFUU1FSGZzUUVRTUVINnhBQVFNRUhBQVJBelFmSEtBQkF3UWErMEFSQXdFRFFNQlF0QnNLVUVRY0cwQVJBd1FkK3hBUkF3UWZyRUFCQXdRY0VCRUROQjhjb0FFREJCcjdRQkVEQVFOQXdFQzBHd3BRUkJuYlVCRURCQjM3RUJFREJCK3NRQUVEQkJ3Z0VRTTBIeHlnQVFNRUg0dFFFUU1CQTBEQU1MUWJDbEJFSEV0Z0VRTUVIZnNRRVFNRUg2eEFBUU1FSERBUkF6UWZIS0FCQXdRZmkxQVJBd0VEUU1BZ3RCc0tVRVFheTNBUkF3UWQreEFSQXdRZnJFQUJBd1FjUUJFRE5COGNvQUVEQkJpcmdCRURBUU5Bd0JDMEd3cFFSQjJiZ0JFREJCMzdFQkVEQkIrc1FBRURCQnhRRVFNMEh4eWdBUU1FR0t1QUVRTUJBMEN4QUFBQXNnQUJDVEFpQUJFUGtGRUVJaEJTQUJLQUp3SVFNQ1FDQUNFRUVnQlU4RVFDQUZRUUFnQlVFQVNoc2hCUU5BSUFVZ0JrWU5BaUFES2dJRUlRY2dBeW9DQ0NFSUlBTXFBZ3doQ1NBRUtBSUl0MFFBQUFBQUFBRGdQNkMySVFvZ0JDZ0NCTGRFQUFBQUFBQUE0RCtndGlFTElBUW9BZ0MzUkFBQUFBQUFBT0Evb0xZaERDQUVJQU1xQWdBZ0JDZ0NETGRFQUFBQUFBQUE0RCtndHBPTE9BSWNJQVFnQnlBS2s0czRBaGdnQkNBSklBeVRpemdDRUNBRUlBZ2dDNU9MSWdjZ0FTZ0NQTElnQjVNUW53TWlCemdDRkNBSFF3QUFBQUJnQkVBQ1FDQUVLZ0ljUXdBQWdEOWRSUTBBSUFRcUFoaERBQUNBUDExRkRRQWdCQ29DRkVNQUFJQS9YVVVOQUNBRUtnSVFRd0FBZ0Q5ZFJRMEFJQUFnQWlBQkVQa0ZJQVlRT2lnQ0FCQlFFUGdGQ3lBRFFSQnFJUU1nQmtFQmFpRUdEQUVGUWJDbEJFSHR1UUVRTUVIZnNRRVFNRUg2eEFBUU1FSE5BaEF6UWZIS0FCQXdRY3k2QVJBd0VEUVFBQUFMQUFzQUMwR3dwUVJCbHJBQkVEQkI4ajBRTUVINnhBQVFNRUhXQWhBelFmSEtBQkF3UWVHd0FSQXdFRFFRQUFBTElBUkJJR29rQUF2T0dRTUtmUkYvQW53akFFRXdheUlXSkFBZ0ZrRWdhaUFERUVGQkFuUVErUU1oR1NBV1FSQnFJQU1RUVVFQ2RCRDVBeUVhQWtBRGZ5QURFRUVnRTAwRWZ5QUVzaUlJUTgzTVRENlVJQWlTSWdpTUlRa2dCYklpQ2tQTnpFdytsQ0FLa2lJS2pDRUxJQUJCQ2pZQ1FDQUFRUXcyQWp3Z0FFRUFOZ0k0SUFCQkFEWUNOQ0FBUW9DQWdQeUxnSURBUHpjQ0pDQUFJQW80QWlBZ0FDQUxPQUljSUFBZ0NEZ0NHQ0FBSUFrNEFoUWdBRUdBZ0lDSkJEWUNMQ0FBUVFBMkFsUWdBRUVBTmdKWVF3QUFJRUVRMWdZaENDQUFRUUU2QUJBZ0FFTUFBSUEvSUFpVk9BSXdJQUJCM0FCcUlnRVE1d1VnQUNBSFFRRjFzamdDRENBQUlBWkJBWFd5T0FJSUlBQWdCellDQkNBQUlBWTJBZ0FnR1VFQUVEb2hHeUFhUVFBUU9pRWNJQU1RUVNFU1FRQWhBeU1BUVJCckloTWtBQ0FCRU9jRklCSUVRQ0FBUWZBQWFpSWRJQkpCQW5RUWxBSWdBRUg4QUdvaUhpQVNFSXNDSUFBdEFCQUVRQUpBSXdCQkVHc2lHQ1FBSUFBb0FnQWdBQ2dDQkJDekFpRUJJQmdnRWhENUF5RVVBa0FDUUNBU1FRQktCRUFnQUNnQ0FFRUFUQTBCSUFBb0FnUkJBRXdOQWlBY1FReHFJUUlnRzBFTWFpRUVJQUd5SVFoQkFDRUdBMEFnQmlBU1JnUkFBbjBnRkVFQUVEb2hGU0FVRUVJaUFVRUNiU0FCUVFGeGFrRUJheUVYUVFBaEJnSkFJQUZCQUVvRVFDQVhRUUJNRFFFZ0FVRUJheUVISUJVZ0YwRUJheUlmUVFKMGFpRWdBMEFnSUNvQ0FDRUlJQWNpQVNBR0lnSktCRUFEUUNBQ0lRUURRQ0FFSWdKQkFXb2hCQ0FWSUFKQkFuUnFJaUVxQWdBZ0NGME5BQXNnQVNFRkEwQWdCU0lCUVFGcklRVWdDQ0FWSUFGQkFuUnFJaUlxQWdCZERRQUxJQUVnQWs0RVFDQWhJQ0lRdlFZZ0JDRUNJQVVoQVFzZ0FTQUNUZzBBQ3lBSElBRWdBaUFYU0JzaEJ5QUNJQVlnQVNBZlNCc2hCZ3dCQ3dzZ0NBd0NDMEd3cFFSQndwNEJFREJCeDZBQkVEQkJzUmtRTUVFMUVETkIyaDBRTUVINm9RRVFNQkEwRUFBQUMwR3dwUVJCdzZNQkVEQkJ4NkFCRURCQnNSa1FNRUUyRUROQjJoMFFNRUhnb3dFUU1CQTBFQUFBQ3lFSUlBQkJCUUovSUFBcUFoZ2dBQ29DRkpNZ0NFTUFBSUErbENJSWxZMGlDWXREQUFBQVQxMEVRQ0FKcUF3QkMwR0FnSUNBZUFzUXN3STJBalFnQUVFRkFuOGdBQ29DSUNBQUtnSWNreUFJbFkwaUNJdERBQUFBVDEwRVFDQUlxQXdCQzBHQWdJQ0FlQXNRc3dJaUFUWUNPQ0FBSUFFZ0FDZ0NOR3dpQVRZQ1ZDQUFJQUFvQWp3Z0FXdzJBbGdnRkJCeUlCaEJFR29rQUF3RkJTQUVJQVpCQkhRaUFXb3FBZ0FnQVNBQ2Fpb0NBQkRZQWlFSklCUWdCaEE2SUFrZ0NKUTRBZ0FnQmtFQmFpRUdEQUVMQUFzQUMwR3dwUVJCeCtnQUVEQkJ5aEVRTUVHeEdSQXdRZEFCRUROQjJoMFFNRUdINndBUU1CQTBEQWNMUWJDbEJFR3g3d0FRTUVIS0VSQXdRYkVaRURCQjBRRVFNMEhhSFJBd1FaanlBQkF3RURRTUJndEJzS1VFUVl6MUFCQXdRY29SRURCQnNSa1FNRUhTQVJBelFkb2RFREJCcHZjQUVEQVFOQXdGQ3dzZ0VrRUFJQkpCQUVvYklSaEJBQ0VDQTBBZ0F5QVlSZ1JBSUIwZ0FrRUNkQkNVQWlBZUlBSVFpd0lGSUJzZ0EwRUVkQ0lFYWlJQktnSUFJUTBnQVNvQ0JDRU9JQUVxQWdnaENDQUJLZ0lNSVFzZ0JDQWNhaUlCS2dJQUlRa2dBU29DQkNFS0lBRXFBZ2doRENBQktnSU1JUThqQUVFUWF5SUJKQUFnRXlBSUlBeVRJZ2c0QWdSRUdDMUVWUHNoR1VBaEl3SkFJQWk3SWlSRUdDMUVWUHNoQ2NCbFJRUkFSQmd0UkZUN0lSbkFJU01nSkVRWUxVUlUreUVKUUdSRkRRRUxJQk1nSXlBa29MWWlDRGdDQkFzQ1FBSkFJQWk3SWlORUdDMUVWUHNoQ2NCa0JFQWdJMFFZTFVSVSt5RUpRR1ZGRFFFZ0V5QUxJQThRMkFJaUNEZ0NBQ0FUS2dJRUlnc1E1Z1VoRENBTEVPVUZJUXNnQVNBTUlBaVVJZ3c0QWd3Z0FTQU1PQUlBSUFFZ0N5QUlsQ0lJT0FJSUlBRWdDSXc0QWdRZ0V5QVRLZ0lBRUtRQ0lBQXFBakNVT0FJQUlBRXFBZ2doQ0NBQktnSU1JUXNnRXlBTklBRXFBZ0FpRFNBSmxDQUJLZ0lFSWd3Z0NwU1NreUFOSUFBcUFnaVVJQXdnQUNvQ0RKU1NramdDRENBVElBNGdDQ0FKbENBTElBcVVrcE1nQ0NBQUtnSUlsQ0FMSUFBcUFneVVrcEk0QWdnZ0FVRVFhaVFBREFJTFFiQ2xCRUhCUHhBd1FZUDVBQkF3UWJFWkVEQkIxQU1RTTBIYUhSQXdRYy9EQUJBd0VEUU1Cd3RCc0tVRVFlVElBQkF3UVlQNUFCQXdRYkVaRURCQjFRTVFNMEhhSFJBd1FjL0RBQkF3RURRTUJnc0NmeUFUS2dJSUlRZ2dFeW9DQkNFTElCTXFBZ0FoQ1VFQUlSVUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FUS2dJTUlnb2dBQ29DRkNJTlhRMEFJQUFxQWhnaURpQUtYdzBBSUFBcUFod2lEQ0FJWGcwQUlBQXFBaUFpRHlBSVh3MEFJQXU3SWlORUdDMUVWUHNoQ2NCbElDTkVHQzFFVlBzaENVQmtjZzBBSUFBcUFpUWlFQ0FKWGcwQUlBQXFBaWdpRVNBSlh3MEFJQW9nRFdCRkRRRWdDaUFPWFVVTkFpQUlJQXhnUlEwRElBZ2dEMTFGRFFRZ0kwUVlMVVJVK3lFSndHUkZEUVVnSTBRWUxVUlUreUVKUUdWRkRRWWdDU0FRWUVVTkJ5QUpJQkZkUlEwSUlBQW9BalFoQVNBQUlBb2dBQ29DRkNJS2t5QUFLZ0lZSUFxVEVOZ0NJQUd5bERnQ1JDQUFLQUk0SVFFZ0FDQUlJQUFxQWh3aUNKTWdBQ29DSUNBSWt4RFlBaUFCc3BRNEFrZ2dBQ0FMdTBRWUxVUlUreUVKUUtCRWc4akpiVEJmeEQraUlBQW9Bankzb3JZNEFrd2dBQ2dDUUNFQklBQWdDU0FBS2dJa0lnaVRJQUFxQWlnZ0NKTVEyQUlnQWJLVU9BSlFJQUFxQWtSREFBQUF2NUtPSVFnZ0FDb0NTRU1BQUFDL2tvNGhDU0FBS2dKUVF3QUFBTCtTamlFS0FuOGdBQ29DVEVNQUFBQy9rbzRpQzR0REFBQUFUMTBFUUNBTHFBd0JDMEdBZ0lDQWVBc2dBQ2dDUENJWGFpQVhieUVHQW44Z0NJdERBQUFBVDEwRVFDQUlxQXdCQzBHQWdJQ0FlQXNoQVFKL0lBbUxRd0FBQUU5ZEJFQWdDYWdNQVF0QmdJQ0FnSGdMSVFRZ0FVRUFTQ0VIQW44Z0NvdERBQUFBVDEwRVFDQUtxQXdCQzBHQWdJQ0FlQXNoQlNBSERRQWdCRUVBU0NBQlFRRnFJZ2NnQUNnQ05FNXlEUUJCQUNBRVFRRnFJaElnQUNnQ09FNE5DaG9nQlVFQVNBMEFJQVZCQVdvaUZDQUFLQUpBVGcwQUlBQWdBQ0FCSUFRZ0JpQUZFSllCRUpVQklBQWdBQ0FISUFRZ0JpQUZFSllCRUpVQklBQWdBQ0FISUJJZ0JpQUZFSllCRUpVQklBQWdBQ0FISUJJZ0JrRUJhaUFYYnlJVklBVVFsZ0VRbFFFZ0FDQUFJQWNnRWlBVklCUVFsZ0VRbFFFZ0FDQUFJQWNnRWlBR0lCUVFsZ0VRbFFFZ0FDQUFJQWNnQkNBVklBVVFsZ0VRbFFFZ0FDQUFJQWNnQkNBVklCUVFsZ0VRbFFFZ0FDQUFJQWNnQkNBR0lCUVFsZ0VRbFFFZ0FDQUFJQUVnRWlBR0lBVVFsZ0VRbFFFZ0FDQUFJQUVnRWlBVklBVVFsZ0VRbFFFZ0FDQUFJQUVnRWlBVklCUVFsZ0VRbFFFZ0FDQUFJQUVnRWlBR0lCUVFsZ0VRbFFFZ0FDQUFJQUVnQkNBVklBVVFsZ0VRbFFFZ0FDQUFJQUVnQkNBVklCUVFsZ0VRbFFFZ0FDQUFJQUVnQkNBR0lCUVFsZ0VRbFFGQkFTRVZDeUFWREFrTFFiQ2xCRUhaQ0JBd1FZUDVBQkF3UWJFWkVEQkI2QUlRTTBIYUhSQXdRZW9nRURBUU5Bd0hDMEd3cFFSQm1TY1FNRUdEK1FBUU1FR3hHUkF3UWVrQ0VETkIyaDBRTUVIcUlCQXdFRFFNQmd0QnNLVUVRWkV1RURCQmcva0FFREJCc1JrUU1FSHFBaEF6UWRvZEVEQkI4eklRTUJBMERBVUxRYkNsQkVIRk9oQXdRWVA1QUJBd1FiRVpFREJCNndJUU0wSGFIUkF3UWZNeUVEQVFOQXdFQzBHd3BRUkJ3VDhRTUVHRCtRQVFNRUd4R1JBd1Fld0NFRE5CMmgwUU1FSFB3d0FRTUJBMERBTUxRYkNsQkVIa3lBQVFNRUdEK1FBUU1FR3hHUkF3UWUwQ0VETkIyaDBRTUVIUHd3QVFNQkEwREFJTFFiQ2xCRUg1emdBUU1FR0QrUUFRTUVHeEdSQXdRZTRDRUROQjJoMFFNRUdqMGdBUU1CQTBEQUVMUWJDbEJFR1cxd0FRTUVHRCtRQVFNRUd4R1JBd1FlOENFRE5CMmgwUU1FR2owZ0FRTUJBMEN3d0dDd1JBSUIwZ0FrRUNkQkE2SWdFZ0FDb0NSRGdDQUNBQklBQXFBa2c0QWdRZ0FTQUFLZ0pNT0FJSUlBRWdBQ29DVURnQ0RDQWVJQUlRT2lBRE5nSUFJQUpCQVdvaEFnc2dBMEVCYWlFRERBRUxDd3NnRTBFUWFpUUFJd0JCRUdzaUFTUUFJQlpCQURZQ0RDQVdRWDgyQWdnZ0FVRUlhaUFBUWR3QWFoRC9BeEN4QWlFQUEwQWdBQ0FCRUdZUXNRSVFmd1JBSUFBUWJDRUNJQllxQWd3Z0FpZ0NCTE5kQkVBZ0ZpQUFFR3dvQWdBMkFnZ2dGaUFBRUd3b0FnU3pPQUlNQ3lBQUVQNEREQUVMQ3lBQlFSQnFKQUFnRmlnQ0NDRUFJQllxQWd3aENDQWFFSElnR1JCeUlCWkJNR29rQUVGL0lBQWdDRU1BQUVCQVhSc0ZJQUVnQXlBVEVGQW9BZ0FRYWlFU0lBSWdBeUFURUZBb0FnUVFhaUVVSUJrZ0UwRUNkQ0lYRURvaUZTQVNLZ0lBT0FJQUlCVWdFaW9DQkRnQ0JDQVZJQklxQWdnNEFnZ2dGU0FTS2dJTU9BSU1JQm9nRnhBNkloSWdGQ29DQURnQ0FDQVNJQlFxQWdRNEFnUWdFaUFVS2dJSU9BSUlJQklnRkNvQ0REZ0NEQ0FUUVFGcUlSTU1BUXNMRHdzUUFBQUxWQUVCZnlNQVFSQnJJZ1FrQUNBRUlBQWdBeER3QWlFRElBQVFNaG9nQWlBQmF5SUFRUUJLQkVBZ0F5Z0NCQ0FCSUFBUVBob2dBeUFES0FJRUlBQkJERzVCREd4cU5nSUVDeUFERUdzZ0JFRVFhaVFBQ3c4QUlBQWdBQ2dDQUNnQ0FEWUNBQXNKQUNBQlFRUnFFSElMaVFFQkFuOGpBRUVRYXlJRUpBQWdBUkF5SVFFZ0FFRVlFRmNnQkVFSWFpQUJRUUFRckFJUXF3SWlBQ2dDQUVFSWFpRUZJQU1vQWdBaEF5TUFRUkJySWdFa0FDQUJJQU0yQWdnZ0JTQUJLQUlJS0FJQU5nSUFJQVZCQkdvUVNob2dBVUVRYWlRQUlBQVFUa0VCT2dBRUlBQW9BZ0FnQWpZQ0JDQUFLQUlBUVFBMkFnQWdCRUVRYWlRQUM5SUJBUUYvSXdCQk1Hc2lCQ1FBSUFSQ2hvQ0FnQkEzQWlRZ0JDQUFOZ0lnSUFSQkFUWUNHQ0FFSUFNMkFoUWdCQ0FCTmdJUUlBUkJCallDQ0NBRUlBTTJBZ1FnQkNBQ05nSUFBa0FnQkJEUkJpSURSUVJBUVg4aEFBd0JDd0pBSUFNZ0JCRHBBaUlDUlFSQVFYOGhBQ0FESVFFTUFRc0NRQ0FESUFSQkVHb1E2UUlpQVVVRVFFRi9JUUFnQWlFQkRBRUxRUUFoQUFKQUlBSVFxZ05CQUVnRVFFRi9JUUFNQVFzZ0JFRWdhaUFDSUFFUWx3UWFDeUFERUVRZ0FpRURDeUFERUVRTElBRVFSQXNnQkVFd2FpUUFJQUFMdVFJQUlBQW9BZ0FnQVNnQ0FCQnZJQUFvQWdRZ0FTZ0NCQkJ2YWlBQUtBSUlJQUVvQWdnUWIyb2dBQ2dDRENBQktBSU1FRzlxSUFBb0FoQWdBU2dDRUJCdmFpQUFLQUlVSUFFb0FoUVFiMm9nQUNnQ0dDQUJLQUlZRUc5cUlBQW9BaHdnQVNnQ0hCQnZhaUFBS0FJZ0lBRW9BaUFRYjJvZ0FDZ0NKQ0FCS0FJa0VHOXFJQUFvQWlnZ0FTZ0NLQkJ2YWlBQUtBSXNJQUVvQWl3UWIyb2dBQ2dDTUNBQktBSXdFRzlxSUFBb0FqUWdBU2dDTkJCdmFpQUFLQUk0SUFFb0FqZ1FiMm9nQUNnQ1BDQUJLQUk4RUc5cUlBQW9Ba0FnQVNnQ1FCQnZhaUFBS0FKRUlBRW9Ba1FRYjJvZ0FDZ0NTQ0FCS0FKSUVHOXFJQUFvQWt3Z0FTZ0NUQkJ2YWlBQUtBSlFJQUVvQWxBUWIyb2dBQ2dDVkNBQktBSlVFRzlxSUFBb0FsZ2dBU2dDV0JCdmFpQUFLQUpjSUFFb0Fsd1FiMm9MQ2dBZ0FFRU1haWdDQUFzL0FRSi9Ba0FnQVVFQVRBMEFJQUJCQURZQ0FFRUJJUUlEUUNBQklBSkdEUUVnQUNBQ1FRSjBhaUFEUVFGcUlnTTJBZ0FnQWtFQmFpRUNEQUFMQUFzTDlBc0NCbjhLZkNNQVFlQUJheUlGSkFBZ0JVSFFBR29oQnlNQVFlQUdheUlFSkFBZ0JTQUNLd01RSUFNckF4QWlDNklnQWlzREFDQURLd01Bb2lBQ0t3TUlJQU1yQXdnaURLS2dvQ0FDS3dNWW9Ea0RDQ0FGSUFJckF6Z2dDeUFDS3dNd29pQUNLd01nSUFNckF3QWlDcUlnRENBQ0t3TW9vcUNnb0RrREVDQUZJQUlyQTFnZ0N5QUNLd05Rb2lBS0lBSXJBMENpSUFJckEwZ2dBeXNEQ0NJTG9xQ2dvRGtER0NBRUlBc2dBaXNEQUNJT29qa0R5QVFnQkNBS0lBNmlPUVBBQkNBRUlBNGdBeXNERUNJTW9qa0QwQVFnQkNBTUlBSXJBd2dpRDZJNUErZ0VJQVFnQ3lBUG9qa0Q0QVFnQkNBS0lBK2lPUVBZQkNBRUlBSXJBeEFpRFRrRG1BVWdCQ0FQT1FPUUJTQUVJQTQ1QTRnRklBUWdEQ0FOb2prRGdBVWdCQ0FMSUEyaU9RUDRCQ0FFSUFvZ0RhSTVBL0FFSUFRZ0RDQUNLd01nSWc2aU9RT3dCU0FFSUFzZ0RxSTVBNmdGSUFRZ0NpQU9vamtEb0FVZ0JDQU1JQUlyQXlnaUQ2STVBOGdGSUFRZ0N5QVBvamtEd0FVZ0JDQUtJQStpT1FPNEJTQUVJQUlyQXpBaURUa0QrQVVnQkNBUE9RUHdCU0FFSUE0NUErZ0ZJQVFnRENBTm9qa0Q0QVVnQkNBTElBMmlPUVBZQlNBRUlBb2dEYUk1QTlBRklBUWdEQ0FDS3dOQUlnNmlPUU9RQmlBRUlBc2dEcUk1QTRnR0lBUWdDaUFPb2prRGdBWWdCQ0FNSUFJckEwZ2lENkk1QTZnR0lBUWdDeUFQb2prRG9BWWdCQ0FLSUEraU9RT1lCaUFFSUFJckExQWlEVGtEMkFZZ0JDQVBPUVBRQmlBRUlBNDVBOGdHSUFRZ0RDQU5vamtEd0FZZ0JDQUxJQTJpT1FPNEJpQUVJQW9nRGFJNUE3QUdJQVJCQUVIQUFCQTRJZ0pDQURjRFNDQUNRVUJyUW9DQWdJQ0FnSUQ0djM4M0F3QWdBa0lBTndOUUlBSkNBRGNEV0NBQ1FnQTNBMkFnQWtLQWdJQ0FnSUNBK0Q4M0EyZ2dBa0h3QUdwQkFFRXdFRGdhSUFKQ2dJQ0FnSUNBZ1BnL053T2dBU0FDUWFnQmFrRUFRY2dBRURnYUlBSkNnSUNBZ0lDQWdQaS9memNEOEFFZ0FrSDRBV3BCQUVFd0VEZ2FJQUpDQURjRHNBSWdBa0tBZ0lDQWdJQ0ErTDkvTndPb0FpQUNRZ0EzQTdnQ0lBSkNBRGNEd0FJZ0FrSUFOd1BJQWlBQ1FvQ0FnSUNBZ0lENFB6Y0QwQUlnQWtIWUFtcEJBRUh3QUJBNEdpQUNRb0NBZ0lDQWdJRDRQemNEeUFNZ0FrSFFBMnBCQUVFd0VEZ2FJQUpDZ0lDQWdJQ0FnUGcvTndPQUJDQUNRWWdFYWtFQVFUQVFPQm9nQWtLQWdJQ0FnSUNBK0Q4M0E3Z0VBMEJCQUNFRElBWkJBMGNFUUFOQUlBTkJCa2NFUUNBRFFRTjBJZ2dnQnlBR1FUQnNhbW9oQ1VFQUlRSkVBQUFBQUFBQUFBQWhDZ05BSUFKQkRFY0VRQ0FFUWNBRWFpQUdRZUFBYkdvZ0FrRURkR29yQXdBZ0JDQUNRVEJzYWlBSWFpc0RBS0lnQ3FBaENpQUNRUUZxSVFJTUFRc0xJQWtnQ2prREFDQURRUUZxSVFNTUFRc0xJQVpCQVdvaEJnd0JDd3NnQkVIZ0Jtb2tBRUYvSVFRQ1FDQUJLd05ZSUFFckExQWdCU3NER0NJTW9pQUJLd05BSWdzZ0JTc0RDQ0lPb2lBRkt3TVFJZzhnQVNzRFNLS2dvS0FpQ2tRQUFBQUFBQUFBQUdJRWZ5QUJLd000SVJBZ0FTc0RNQ0VSSUFFckF5Z2hFaUFCS3dNZ0lSTWdCU0FCS3dNQUlnMGdDcUlnQVNzREdDQUJLd01RSUF5aUlBMGdEcUlnRHlBQkt3TUlvcUNnb0NJTklBdWlvU0FLSUFxaUlndWpPUU1nSUFVZ0FTc0RDQ0FLb2lBTklBRXJBMGlpb1NBTG96a0RLQ0FGSUFFckF4QWdDcUlnRFNBQkt3TlFvcUVnQzZNNUF6QWdCU0FCS3dNZ0lBcWlJQkFnRVNBTW9pQVRJQTZpSUE4Z0VxS2dvS0FpRENBQkt3TkFvcUVnQzZNNUF6Z2dCU0FCS3dNb0lBcWlJQXdnQVNzRFNLS2hJQXVqT1FOQUlBVWdBU3NETUNBS29pQU1JQUVyQTFDaW9TQUxvemtEU0VFQUJVRi9DMEVBVGdSQVFRQWhBZ05BUVFBaEJDQUNRUUpHRFFJRFFDQUVRUVpIQkVBZ0JFRURkQ0lCSUFBZ0FrRXdiR3BxSVFaQkFDRURSQUFBQUFBQUFBQUFJUW9EUUNBRFFRTkhCRUFnQlVFZ2FpQUNRUmhzYWlBRFFRTjBhaXNEQUNBRlFkQUFhaUFEUVRCc2FpQUJhaXNEQUtJZ0NxQWhDaUFEUVFGcUlRTU1BUXNMSUFZZ0Nqa0RBQ0FFUVFGcUlRUU1BUXNMSUFKQkFXb2hBZ3dBQ3dBTFFRQkJBMEdkRkVFQUVEa0xJQVZCNEFGcUpBQWdCQXNJQUNBQVFlZ0FhZ3NMQUNBQVFRQWdBUkE0R2d2TUVnSVVmd0Y5SXdCQk1Hc2lEQ1FBQWtBQ1FBSkFBa0FDUUFKQUFrQWdBRUVNYWlJSktBSUVJQUFvQW13UXN3SWdCVTRFUUNBQlFRRVFvd01nQVJDcEFpQUZFSXNDSUFWQkFDQUZRUUJLR3lFQ0EwQWdBaUFHUmcwQ0lBUWdCa0VDZEdvb0FnQWhBQ0FCRUtrQ0lBWVFPaUFBTmdJQUlBWkJBV29oQmd3QUN3QUxJQXhCR0dvUWpnSWhCeUFDSVJVZ0F5RVBJd0JCRUdzaUV5UUFBa0FDUUFKQUFrQWdDU2dDQkNBSlFReHFJaGtRUWtZRVFDQVBRUUJNRFFFZ0JTQVBTZzBDSUFrb0FnUWdCVW9OQXlBVFFYODJBZ3dnQ1VFWWFpSU5JQVVnRTBFTWFoRDlBeUFUUVg4MkFnZ2dDVUVrYWlJWUlBVWdFMEVJYWhEOUF5QUpRVEJxSWhBZ0JSQ0xBaUFRUVFBUU9pQVFFRUlRaHdaQmZ5RURBMEFnQ1NnQ0NDQUlUQVJBSUFrb0FnUWdHUkJDUndSQVFiQ2xCRUhBakFFUU1FR2JqUUVRTUVINnhBQVFNRUc3QVJBelFmSEtBQkF3UWZDT0FSQXdFRFFNRGdzRklCQkJBQkE2SUJBUVFpQUpLQUlFSUFrb0FnQVEvQU1nRUVFQUVEb2hEaUFKS0FJRUlRdEJBQ0VVUVFBaEFnSkFBa0FDUUFKQUlCZ1FRaUFGUmdSQUlBOUJBRXdOQVNBRklBOUtEUUlnQzBFQVRBMERJQVZCQUNBRlFRQktHeUVSQTBBZ0VTQVVSZzBGSUFRZ0ZFRUNkR29oRWtFQUlSWkJmeUVHQTBBZ0N5QVdSZ1JBSUJSQkFXb2hGQ0FDSUFacUlRSU1BZ1VnQmlBVklCSW9BZ0JCNEFCc2FpQVZJQVFnRGlBV1FRSjBhaUlYS0FJQVFRSjBhaWdDQUVIZ0FHeHFFS0lESWdwTEJFQWdGeWdDQUNFR0lCZ2dGQkE2SUFZMkFnQWdDaUVHQ3lBV1FRRnFJUllNQVFzQUN3QUxBQXRCc0tVRVFaUDRBQkF3UVp1TkFSQXdRZnJFQUJBd1FjWUJFRE5COGNvQUVEQkJpcDBCRURBUU5CQUFBQXRCc0tVRVFlMlJBUkF3UVp1TkFSQXdRZnJFQUJBd1FjY0JFRE5COGNvQUVEQkIrcElCRURBUU5CQUFBQXRCc0tVRVFaS1ZBUkF3UVp1TkFSQXdRZnJFQUJBd1FjZ0JFRE5COGNvQUVEQkJucFlCRURBUU5CQUFBQXRCc0tVRVFiT2hBUkF3UVp1TkFSQXdRZnJFQUJBd1Fja0JFRE5COGNvQUVEQkIycUVCRURBUU5CQUFBQXNnQWlBRFNRUkFJQTBnR0JDeEF5QVpRUUFRT2lBUVFRQVFPaUFKS0FJRUVQQUJJQUloQXdzZ0NFRUJhaUVJREFFTEN5QVRRUkJxSkFBTUJBdEJzS1VFUWNDTUFSQXdRWnVOQVJBd1FmckVBQkF3UVpvQkVETkI4Y29BRURCQjhJNEJFREFRTkF3S0MwR3dwUVJCN1pFQkVEQkJtNDBCRURCQitzUUFFREJCbXdFUU0wSHh5Z0FRTUVINmtnRVFNQkEwREFrTFFiQ2xCRUdTbFFFUU1FR2JqUUVRTUVINnhBQVFNRUdjQVJBelFmSEtBQkF3UVo2V0FSQXdFRFFNQ0F0QnNLVUVRYUthQVJBd1FadU5BUkF3UWZyRUFCQXdRWjBCRUROQjhjb0FFREJCbXBzQkVEQVFOQXdIQ3lBSlFSaHFJZzBRUWlBRlJ3MEJRUUFoQmdKQUEwQUNRQ0FORUVJZ0JrMEVRQ0FIRUlZR1FRRkhEUUVnQVVFQkVLTURJQUVRcVFJZ0JSQ0xBa0VBSVFZZ0JVRUFJQVZCQUVvYklRSURRQ0FDSUFaR0RRUWdCQ0FHUVFKMGFpZ0NBQ0VBSUFFUXFRSWdCaEE2SUFBMkFnQWdCa0VCYWlFR0RBQUxBQXNnRFNBR0VEb29BZ0JCZjBZTkJTQU5JQVlRT2lnQ0FDQUZUZzBHSUFRZ0RTQUdFRG9vQWdCQkFuUnFLQUlBSUE5T0RRY2dCQ0FOSUFZUU9pZ0NBRUVDZEdvaENpTUFRU0JySWhFa0FDQVJJQW9RM2dJMkFoQWdFVUVZYWlFWElCRkJFR29oQTBFQUlRNGpBRUVnYXlJSUpBQWdCeEE4R2lBS0tBSUFJUklnQnhDWEFTRUNJQWhCQURvQUh3SkFBa0FnQWtVTkFDQUhJQklnQWhCY0lnNFFPaWdDQUNJTFJRMEFBMEFnQ3lnQ0FDSUxSUTBCSUJJZ0N5Z0NCRWNFUUNBTEtBSUVJQUlRWENBT1J3MENDeUFIRUZzZ0MwRUlhaUFLRUkwQ1JRMEFDd3dCQ3lBSVFSQnFJQWNnRWlBREVJTUdJQWNRUENnQ0FDRUtJQWNRV3lFREFrQWdBZ1JBSUFwQkFXcXpJQU1xQWdBZ0FyT1VYa1VOQVFzZ0NDQUNFSXdDUVFGeklBSkJBWFJ5TmdJTUlBZ0NmeUFIRUR3b0FnQkJBV3F6SUFjUVd5b0NBSldOSWhwREFBQ0FUMTBnR2tNQUFBQUFZSEVFUUNBYXFRd0JDMEVBQ3pZQ0NDQUhJQWhCREdvZ0NFRUlhaEJ1S0FJQUVLNENJQklnQnhDWEFTSUNFRndoRGdzQ1FDQUhJQTRRT2lnQ0FDSURSUVJBSUFnb0FoQWdCMEVJYWlJREtBSUFOZ0lBSUFjZ0NDZ0NFRFlDQ0NBSElBNFFPaUFETmdJQUlBZ29BaEFvQWdCRkRRRWdDQ2dDRUNFRElBY2dDQ2dDRUNnQ0FDZ0NCQ0FDRUZ3UU9pQUROZ0lBREFFTElBZ29BaEFnQXlnQ0FEWUNBQ0FESUFnb0FoQTJBZ0FMSUFoQkVHb2lBeEMyQVNFTElBY1FQQ0lDSUFJb0FnQkJBV28yQWdBZ0NFRUJPZ0FmSUFNb0FnQWhDaUFEUVFBMkFnQWdDZ1JBSUFNUVRpSUNMUUFFQkVBZ0FpZ0NBQ0FLUVFocUVJSUdDeUFLQkVBZ0FpZ0NBQm9nQ2hBeEN3c0xJQmNnQ0VFUWFpQUxFSGtnQ0VFZmFoQ3RBaUFJUVNCcUpBQWdGeEJzSVFJZ0VVRWdhaVFBSUFKQkJHb2dCQ0FHUVFKMGFoQ29BaUFHUVFGcUlRWU1BUXNMSUFFUWlRWWhCU0FIRUlZR0lRUWpBRUVnYXlJREpBQUNRQUpBSUFVUXhnRWdCRWtFUUNBRkVPWUNJQVJKRFFFZ0JSQXlJUUlnQlNBRFFRaHFJQVFnQlJCQ0lBSVF1QUlpQWhEbkFpQUNFTGNDQ3lBRFFTQnFKQUFNQVFzUXJ3SUFDeUFNUVJCcUlBY1Evd01Rc1FJaEJBTkFJQVFnREVFSWFoQm1FTEVDRUg5RkRRRWdCQkJzUVFScUVFSkZEUWRCZ0FFUVZ5RUZJQUFRakFZaEF5QVZJQVFRYkNnQ0FFSGdBR3hxSVFJZ0JVRUJPZ0JrSUFVZ0F6WUNBQ0FGUWVnQWFoQktHaUFGUWZRQWFoQktHaUFGUVFScUlBSkI0QUFRUGhvZ0RDQUZOZ0lJSUFWQkFCQ2pBeUFCRUlrR0lBeEJDR29RcUFJZ0JCQnNJUUlnQUNBTUtBSUlJQlVnRHlBQ1FRUnFJZ0pCQUJBNklBSVFRaENMQmlBRUVQNEREQUFMQUFzZ0J5Z0NDQ0VBSUFjUU1pRUNBMEFnQUFSQUlBQW9BZ0FoQVNBQ0lBQkJDR29RZ2dZZ0FCQXhJQUVoQUF3QkN3c2dCeEN3QWdzZ0RFRXdhaVFBRHd0QnNLVUVRWlA0QUJBd1FkdjVBQkF3UWZyRUFCQXdRZXNDRUROQjhjb0FFREJCNlBzQUVEQVFOQXdFQzBHd3BRUkJyZjRBRURCQjIva0FFREJCK3NRQUVEQkI3UUlRTTBIeHlnQVFNRUdLZ0FFUU1CQTBEQU1MUWJDbEJFSHVnZ0VRTUVIYitRQVFNRUg2eEFBUU1FSHVBaEF6UWZIS0FCQXdRYldEQVJBd0VEUU1BZ3RCc0tVRVFmR0ZBUkF3UWR2NUFCQXdRZnJFQUJBd1FlOENFRE5COGNvQUVEQkJ0WU1CRURBUU5Bd0JDMEd3cFFSQis0Y0JFREJCMi9rQUVEQkIrc1FBRURCQmd3TVFNMEh4eWdBUU1FSEZpUUVRTUJBMEN4QUFBQXNUQUNBQUlBQW9BZ1FpQUVFQmFqWUNCQ0FBQ3drQUlBQkJBRG9BQUFzb0FRRi9JQUFnQVNnQ0FEWUNBQ0FCS0FJQUlRTWdBQ0FCTmdJSUlBQWdBaUFEYWpZQ0JDQUFDNjBCQWdoOEFYOUJmeUVMSUFFckExZ2dBU3NEVUNBQ0t3TVFJZ09pSUFFckEwQWdBaXNEQUNJRW9pQUNLd01JSWdVZ0FTc0RTS0tnb0tBaUJrUUFBQUFBQUFBQUFHSUVmeUFCS3dNNElRY2dBU3NETUNFSUlBRXJBeWdoQ1NBQkt3TWdJUW9nQUNBQkt3TVlJQUVyQXhBZ0E2SWdBU3NEQUNBRW9pQUZJQUVyQXdpaW9LQ2dJQWFqT1FNQUlBQWdCeUFJSUFPaUlBb2dCS0lnQlNBSm9xQ2dvQ0FHb3prRENFRUFCVUYvQ3d0RkFRTi9JQUJCNkFCcUlRRURRQ0FCRUVJZ0Frc0VRQ0FCSUFJUU9pZ0NBQ0lEQkVBZ0F4Q1FCZ3NnQXhBeElBSkJBV29oQWd3QkN3c2dBRUgwQUdvUWNpQUJFSElMSlFFQmZ5QUFLQUlBSVFJZ0FDQUJOZ0lBSUFJRVFDQUNCRUFnQWhDUUJnc2dBaEF4Q3dzeEFRRi9JQUFRNkFJZ0FDZ0NBQVJBSUFBZ0FDZ0NBQkN2QXlBQUVESWFJQUFvQWdBaEFTQUFFTVVCR2lBQkVERUxDMk1CQVg4Z0FRUkFJQUZCSkdvaUFFSFVBR29Ra2dZZ0FFSElBR29RY2lBQVFReHFJZ0pCTUdvUWNpQUNRU1JxRUhJZ0FrRVlhaEJ5SUFKQkRHb1FjaUFBUVFocVFRQVFrUVlnQVVFSWFpSUFRUkJxRU9ZRElBQkJCR29RdEFVTElBRVFNUXNVQUNBQVFRQTJBZ1FnQUVISTJBTTJBZ0FnQUFzSkFDQUFJQUUyQWdnTEV3QWdBRUVJTmdJRUlBQkJER3BCQ0JDTEFnc2dBUUYvSUFBb0FnQWhBaUFBSUFFMkFnQWdBZ1JBSUFBUVRpQUNFS2dHQ3d1cUFnRUhmeUFBRUU0aEFnSkFJQUVFUUNBQUlBSWdBUkMxQWhDWEJpQUFFRTRnQVRZQ0FFRUFJUUlEUUNBQklBSkdCRUFnQUVFSWFpSUNLQUlBSWdORkRRTWdBQ0FES0FJRUlBRVFYQ0lIRURvZ0FqWUNBQU5BSUFNb0FnQWlBa1VOQkFKQUlBSW9BZ1FnQVJCY0lnUWdCMFlOQUNBQ0lRVWdBQ0FFRURvb0FnQkZCRUFnQUNBRUVEb2dBellDQUNBRUlRY01BUXNEUUFKQUlBVWlCaWdDQUVVRVFFRUFJUVVNQVFzZ0FCQmJHaUFDUVFocUlBWW9BZ0JCQ0dvUXFBRWhDQ0FHS0FJQUlRVWdDQTBCQ3dzZ0F5QUZOZ0lBSUFZZ0FDQUVFRG9vQWdBb0FnQTJBZ0FnQUNBRUVEb29BZ0FnQWpZQ0FBd0JDeUFDSVFNTUFBc0FCU0FBSUFJUU9rRUFOZ0lBSUFKQkFXb2hBZ3dCQ3dBTEFBc2dBRUVBRUpjR0lBQVFUa0VBTmdJQUN3c0lBQ0FBSUFFUWVRc2tBRUdJaXdRdEFBQkJBWEZGQkVCQi9Jb0VFS3NEUVlpTEJFRUJPZ0FBQzBIOGlnUUxvUUVCQlg4akFFRVFheUlESkFBZ0FCQThHaUFCS0FJQUlRUUNRQUpBSUFBUWx3RWlCVVVOQUNBQUlBUWdCUkJjSWdZUU9pZ0NBQ0lDUlEwQUEwQWdBaWdDQUNJQ1JRMEJJQVFnQWlnQ0JFY0VRQ0FDS0FJRUlBVVFYQ0FHUncwQ0N5QUVJQUlvQWdSSERRQWdBQkJiSUFKQkNHb2dBUkNOQWtVTkFBc2dBMEVJYWlBQ0VIa29BZ0FoQWd3QkN5QURFSWNFSWdJMkFnZ0xJQU5CRUdva0FDQUNDd29BSUFGQkJHb1ErZ1FMQ0FBZ0FCQ3lBaG9MUUFFQmZ5QUFFSXNISUFGSkJFQVF1d0lBQ3lBQUlBQVFNaUFCRUxJRUlnSTJBZ0FnQUNBQ05nSUVJQUFRTWlBQ0lBRkJGR3hxTmdJQUlBQkJBQkQyQmd0V0FRRi9Jd0JCRUdzaUJDUUFJQVFnQUNBREVMd0VJUU1nQUJBeUlRQURRQ0FCSUFKSEJFQWdBQ0FES0FJRUlBRVF2Z01nQXlBREtBSUVRUlJxTmdJRUlBRkJGR29oQVF3QkN3c2dBeEJySUFSQkVHb2tBQXNtQUNBQUtBSUFHaUFBS0FJQUlBQVEyQUZxR2lBQUtBSUFHaUFBS0FJQUlBQVFqZ0ZxR2dzRUFDQUJDeUVCQVg4Z0FTQUFheUVESUFBZ0FVY0VRQ0FDSUFBZ0F4RFFBZ3NnQWlBRGFnc0hBQ0FCSUFCckMwNEJBWDhqQUVFUWF5SUVKQUFnQkNBQUlBTVF0UU1oQXlBQUVESWFJQUlnQVdzaUFFRUFTZ1JBSUFNb0FnUWdBU0FBRUQ0YUlBTWdBeWdDQkNBQWFqWUNCQXNnQXhCcklBUkJFR29rQUFzWEFDQUFRZ0EzQWdBZ0FFRUJPZ0FRSUFCQ0FEY0NDQXNyQUNBQUtBSUFHaUFBS0FJQUlBQVExd0ZCRkd4cUdpQUFLQUlBR2lBQUtBSUFJQUFRZmtFVWJHb2FDMU1CQTM4akFFRVFheUlESkFBZ0F5QUFJQUVRdkFRaUFpZ0NCQ0VCSUFJb0FnZ2hCQU5BSUFFZ0JFWUVRQ0FDRUdzZ0EwRVFhaVFBQlNBQUVESWFJQUVRcFFZZ0FpQUJRUlJxSWdFMkFnUU1BUXNMQ3d3QUlBQW9BZ0FhSUFFUU1Rc0tBQ0FCUVFScUVNNEJDeW9CQVg4akFFRVFheUlDSkFBZ0FrRUlhaUFCRUkwRUlnRWdBQkNFQkNBQkVNNEJJQUpCRUdva0FBc3BBUUYvQTBBZ0FrRUlSa1VFUUNBQklBSnFJQUFnQW1zdEFBYzZBQUFnQWtFQmFpRUNEQUVMQ3dzWUFRRi9JQUFRZmlFQ0lBQWdBUkNjQlNBQUlBSVFwZ1lMS1FFQmZ5TUFRUkJySWdJa0FDQUNJQUUyQWd3Z0FDQUNRUXhxRUo4QklRQWdBa0VRYWlRQUlBQUx6QVFDQ0g4QmZTTUFRU0JySWdVa0FDQUZJQUVRM2dJMkFoQWdCVUVZYWlFSUlBVkJFR29oQ1NNQVFTQnJJZ0lrQUNBQUVEd2FJQUVvQWdBaEJpQUFFSmNCSVFNZ0FrRUFPZ0FmQWtBQ1FDQURSUTBBSUFBZ0JpQURFRndpQnhBNktBSUFJZ1JGRFFBRFFDQUVLQUlBSWdSRkRRRWdCaUFFS0FJRVJ3UkFJQVFvQWdRZ0F4QmNJQWRIRFFJTElBQVFXeUFFUVFocUlBRVFqUUpGRFFBTERBRUxJQUpCRUdvZ0FDQUdJQWtRZ3dZZ0FCQThLQUlBSVFFZ0FCQmJJUVFDUUNBREJFQWdBVUVCYXJNZ0JDb0NBQ0FEczVSZVJRMEJDeUFDSUFNUWpBSkJBWE1nQTBFQmRISTJBZ3dnQWdKL0lBQVFQQ2dDQUVFQmFyTWdBQkJiS2dJQWxZMGlDa01BQUlCUFhTQUtRd0FBQUFCZ2NRUkFJQXFwREFFTFFRQUxOZ0lJSUFBZ0FrRU1haUFDUVFocUVHNG9BZ0FRcmdJZ0JpQUFFSmNCSWdNUVhDRUhDd0pBSUFBZ0J4QTZLQUlBSWdGRkJFQWdBaWdDRUNBQVFRaHFJZ0VvQWdBMkFnQWdBQ0FDS0FJUU5nSUlJQUFnQnhBNklBRTJBZ0FnQWlnQ0VDZ0NBRVVOQVNBQ0tBSVFJUUVnQUNBQ0tBSVFLQUlBS0FJRUlBTVFYQkE2SUFFMkFnQU1BUXNnQWlnQ0VDQUJLQUlBTmdJQUlBRWdBaWdDRURZQ0FBc2dBa0VRYWlJQkVMWUJJUVFnQUJBOElnQWdBQ2dDQUVFQmFqWUNBQ0FDUVFFNkFCOGdBU2dDQUNFQUlBRkJBRFlDQUNBQUJFQWdBUkJPSWdFdEFBUUVRQ0FCS0FJQUlBQkJDR29RbkFZTElBQUVRQ0FCS0FJQUdpQUFFREVMQ3dzZ0NDQUNRUkJxSUFRUWVTQUNRUjlxRUswQ0lBSkJJR29rQUNBSUVHd2hBQ0FGUVNCcUpBQWdBRUVFYWd2L0FRRUVmeUFCSUFBUWZpSUNTd1JBSXdCQklHc2lCQ1FBQWtBZ0FTQUNheUlESUFBUU1pZ0NBQ0FBS0FJRWEwRVViVTBFUUNBQUlBTVFwd1lNQVFzZ0FCQXlJUUVnQkVFSWFpQUFJQUFRZmlBRGFoQzZCQ0FBRUg0Z0FSQ09CeUVDSXdCQkVHc2lBU1FBSUFFZ0FpZ0NDRFlDQUNBQ0tBSUlJUVVnQVNBQ1FRaHFOZ0lJSUFFZ0JTQURRUlJzYWpZQ0JDQUJLQUlBSVFNRFFDQUJLQUlFSUFOSEJFQWdBaWdDRUJvZ0FTZ0NBQkNsQmlBQklBRW9BZ0JCRkdvaUF6WUNBQXdCQ3dzZ0FSQ3BBU0FCUVJCcUpBQWdBQ0FDRUkwSElBSVFqQWNMSUFSQklHb2tBQThMSUFFZ0Fra0VRQ0FBSUFBb0FnQWdBVUVVYkdvUXJBWUxDeWtCQVg4RFFDQUNRUVJHUlFSQUlBRWdBbW9nQUNBQ2F5MEFBem9BQUNBQ1FRRnFJUUlNQVFzTEM0SURBUVIvQWtBQ1FBSkFBa0FnQUNnQ0dBNERBQUFCQWdzZ0FDZ0NMQ0lCUVFBZ0FVRUFTaHNoQTBFQUlRRURRQ0FCSUFOR0RRTUNRQ0FBSUFGQkNIUnFJZ0pCTkdvb0FnQkJBRWdOQUNBQ0t3TlFSQUFBQUFBQUFPQS9ZMFVOQUNBQ1FYODJBamdnQWtGL05nSTBJQUpCQmpZQ25BSUxJQUZCQVdvaEFRd0FDd0FMSUFBb0Fpd2lBVUVBSUFGQkFFb2JJUU5CQUNFQkEwQWdBU0FEUmcwQ0FrQWdBQ0FCUVFoMGFpSUNRVFJxS0FJQVFRQklEUUFnQWlzRFVFUUFBQUFBQUFEZ1AyTkZEUUFnQWtGL05nSThJQUpCZnpZQ05DQUNRUVkyQXB3Q0N5QUJRUUZxSVFFTUFBc0FDeUFBS0FJc0lnRkJBQ0FCUVFCS0d5RUVRUUFoQVFOQUlBRWdCRVlOQVVFQUlRTUNRQ0FBSUFGQkNIUnFJZ0pCT0dvb0FnQkJBRWdOQUNBQ0t3TllSQUFBQUFBQUFPQS9ZMFVOQUNBQ1FYODJBamhCQVNFREN3SkFJQUlvQWp4QkFFZ05BQ0FDS3dOZ1JBQUFBQUFBQU9BL1kwVU5BQ0FDUVg4MkFqd2dBMFVOQUNBQ1FRWTJBcHdDQ3lBQlFRRnFJUUVNQUFzQUN3dWZBUUVFZnlNQVFTQnJJZ0lrQUNBQUlBRTJBZ0FnQWtFWWFpQUJFSzBHSVFOQkVCQlhJUVFqQUVFZ2F5SUZKQUFnQlNBQk5nSU1JQVFRZ3dRaUJFR0F5Z0UyQWdBZ0JFRU1haUFGUVFocUlBVkJER29RcWdJUXFnSWFJQVZCSUdva0FDQUFJQVEyQWdRZ0F4QzJBUm9nQWlBQk5nSUVJQUlnQVRZQ0FDQURLQUlBSVFFZ0EwRUFOZ0lBSUFFRVFDQURJQUVRa3dZTElBSkJJR29rQUNBQUM1NEJBUUovSUFCQ0FEY0NBQ0FBUVFocUlnRkJBRFlDQUNBQlFRUnFFRW9hSUFGQkVHb1FTaG9nQUVFa2FpSUJRdElKTndJQUlBRkJDR29RamdRYUlBRkJER29pQWtJQU53SUVJQUlnQVRZQ0FDQUNRUXhxRUVvYUlBSkJHR29RU2hvZ0FrRWthaEJLR2lBQ1FUQnFFRW9hSUFGQnlBQnFFRW9hSUFGQjFBQnFFS3NESUFGQkVEWUNiQ0FCUWdBM0FtUWdBaENXQmlBQ1FRRVFsUVlnQUF1a0FnRURmeUFBS0FJQUlRSWdBQ0FCTmdJQUlBSUVRQ0FDQkVBZ0FrR1VCbW9pQUVFWWFoRGdBU0FBUVF4cUVISWdBQkJ5SUFKQmpBVnFJZ0JCL0FCcUVISWdBRUh3QUdvUWNpQUFRZHdBYWhEb0JTQUNRZndFYWhEZ0FTQUNRYUFCYWlJQVFaQUJhaEJ5SUFCQjNBQnFJZ0ZCS0dvUW9nUWdBVUVjYWhCeUlBQkJ5QUJxRUtNRUlBQkJQR29Rb3dRZ0FFRWdhaENpQkNBQVFSQnFJZ0FRZ0FJZ0FDZ0NBQVJBSUFBZ0FDZ0NBQkRVQmlBQUVESWFJQUFvQWdBaEFTQUFFS1FCR2lBQkVERUxJQUpCM0FCcUVKRUVHaUFDUWNnQWFpSURLQUlJSVFBZ0F4QXlJUVFEUUNBQUJFQWdBQ2dDQUNFQklBUWdBRUVJYWhDcEJpQUFFREVnQVNFQURBRUxDeUFERUxBQ0lBSkJRR3NRemdFZ0FrRU1haERnQVFzZ0FoQXhDd3RoQVFOL0lBQW9BZ0FoQWlBQUlBRTJBZ0FnQWdSQUlBSUVRQ0FDUVFScUlnTW9BZ2doQUNBREVESWhCQU5BSUFBRVFDQUFLQUlBSVFFZ0JDQUFRUWhxRUp3R0lBQVFNU0FCSVFBTUFRc0xJQU1Rc0FJZ0FrRUFFTFFHQ3lBQ0VERUxDK1lCQVFWL0l3QkJ3QUZySWdJa0FDQUFJQUpCQ0dvaUFSQ3dCaUFBUVFScUlBRkJCSElRc0FZRFFBSkFRUUFoQVNBRFFRTkdCRUFnQUNnQ3NBRWlBMEVEZEVHNG53RnFLQUlBSWdSQkFDQUVRUUJLR3lFRUEwQWdBU0FFUmcwQ0lBQWdBVUVEZENJRmFrSG9BR29nQWlBRmFrSHdBR29RcXdZZ0FVRUJhaUVCREFBTEFBVURRQ0FCUVFSR1JRUkFJQUZCQTNRaUJDQUFJQU5CQlhRaUJXcHFRUWhxSUFJZ0JXb2dCR3BCRUdvUXF3WWdBVUVCYWlFQkRBRUxDeUFEUVFGcUlRTU1BZ3NBQ3dzZ0FpQUROZ0s0QVNBQUlBSkJDR3BCdUFFUVBob2dBa0hBQVdva0FBc0pBQ0FCUVFBN0FRQUxDd0FnQUNBQlFRSVE5UUVMRlFBZ0FFSGN5UUUyQWdBZ0FFRUVhaEEyR2lBQUM0SUxBUlo4QWtBQ1FBSkFBa0FDUUFKQUlBVkJBV3NPQkFFQ0F3QUZDeUFBS3dNUUloRkVBQUFBQUFBQUdFQ2lJUmNnQUNzREdDSVNSQUFBQUFBQUFCaEFvaUVZSUFJZ0FDc0RPQ0lab1NBQUt3TW9JaHFqSWdvZ0NxSWhBaUFCSUFBckF6QWlHNkVnQUNzRElDSU9veUlKSUFtaUlRRWdBQ3NEUUNFVklBQXJBd2doRXlBQUt3TUFJUlFnRWlBU29DRVBJQkVnRWFBaEZrRUJJUVVnQ2lFR0lBa2hCd05BQWtBQ1FDQUJSQUFBQUFBQUFBQUFZaUFDUkFBQUFBQUFBQUFBWW5KRkJFQkVBQUFBQUFBQUFBQWhCd3dCQ3lBR0lBOGdCeUFTSUFFZ0FhQWdBaUFCb0NJUW9LSWdFeUFRb2lBUW9pQVVJQkNpUkFBQUFBQUFBUEEvb0tBaUN5QUhvaUFHSUJZZ0I2S2lvS0FnQ2FFZ0dDQUhvaUFXSUFhaUlCTWdBaUFDb2lBQlJBQUFBQUFBQUJSQW9pQUJvaUFDSUFGRUFBQUFBQUFBQ0VDaUlnZWlJZ3lnb0tJZ0ZDQUhJQUtnb2tRQUFBQUFBQUR3UDZDZ29LQ2pvU0lIb2lJTklBYWlJQXNnQnFJZ0VTQUNJQUtnSUJDZ29xQ2dJQXFoSUEwZ0Z5QUdvaUFUSUFKRUFBQUFBQUFBRkVDaUlBS2lJQUVnQWFJZ0RLQ2dvaUFVSUFKRUFBQUFBQUFBQ0VDaUlBR2dva1FBQUFBQUFBRHdQNkNnb0tDam9TRUdJQVZCQkVjTkFTQUdJUWdMSUFNZ0d5QU9JQWVpSUJXam9Ea0RBQ0FaSUJvZ0NLSWdGYU9nSVFJTUJRc2dCVUVCYWlFRklBWWdCcUloQWlBSElBZWlJUUVNQUFzQUN5QUJJQUFyQXdBaUM2RWlBU0FCb2lBQ0lBQXJBd2loSWdZZ0JxS2dJZ2VmSWdLYUlRd2dBQ3NER0VRQUFBQUFoTmVYUWFNaUNFUUFBQUFBQUFBSXdLSWhEU0FJbWlFS1FRRWhCUU5BUkFBQUFBQUFBQUFBSVFnQ1FDQUNSQUFBQUFBQUFBQUFZZ1JBSUFZZ0FpQUtJQWVpUkFBQUFBQUFBUEEvb0NBQ29pQU1vQ0FOSUFlaVJBQUFBQUFBQVBBL29LT2hJZ2lpSUFLaklRWWdBU0FJb2lBQ295RUJJQVZCQTBjTkFTQUJJUWtnQmlFSUN5QURJQXNnQ1NBQUt3TVFvNkE1QXdBZ0NDQUFLd01Rb3lBQUt3TUlvQ0VDREFRTElBVkJBV29oQlNBQklBR2lJQVlnQnFLZ0lnZWZJUUlNQUFzQUN5QUJJQUFyQXdBaURxRWlCaUFHb2lBQ0lBQXJBd2loSWdjZ0I2S2dJZ0tmSWdHYUlROGdBQ3NER0VRQUFBQUFoTmVYUWFNaUNVUUFBQUFBQUFBSXdLSWhDeUFBS3dNZ1JBQUFBQUNFMTVkQm8wUUFBQUFBQUdyNFFLTWlDRVFBQUFBQUFBQVV3S0loRENBSm1pRU5JQWlhSVFwQkFTRUZBMEJFQUFBQUFBQUFBQUFoQ1VRQUFBQUFBQUFBQUNFSUFrQWdBVVFBQUFBQUFBQUFBR0lFUUNBSElBRWdBaUFLb2lBQ29pQU5JQUtpUkFBQUFBQUFBUEEvb0tBZ0FhSWdENkFnRENBQ29pQUNvaUFMSUFLaVJBQUFBQUFBQVBBL29LQ2pvU0lDb2lBQm95RUhJQVlnQXFJZ0FhTWhCaUFGUVFOSERRRWdCaUVKSUFjaENBc2dBeUFPSUFrZ0FDc0RFS09nT1FNQUlBZ2dBQ3NERUtNZ0FDc0RDS0FoQWd3REN5QUZRUUZxSVFVZ0JpQUdvaUFISUFlaW9DSUNueUVCREFBTEFBc2dBU0FBS3dNQUlnNmhJQUFyQXhpaklnWWdCcUlnQWlBQUt3TUlvU0lISUFlaW9DSUNueUlCbWlFUElBQXJBeUJFQUFBQUFJVFhsMEdqSWdsRUFBQUFBQUFBQ01DaUlRc2dBQ3NES0VRQUFBQUFoTmVYUWFORUFBQUFBQUJxK0VDaklnaEVBQUFBQUFBQUZNQ2lJUXdnQ1pvaERTQUltaUVLUVFFaEJRTkFSQUFBQUFBQUFBQUFJUWxFQUFBQUFBQUFBQUFoQ0FKQUlBRkVBQUFBQUFBQUFBQmlCRUFnQnlBQklBSWdDcUlnQXFJZ0RTQUNva1FBQUFBQUFBRHdQNkNnSUFHaUlBK2dJQXdnQXFJZ0FxSWdDeUFDb2tRQUFBQUFBQUR3UDZDZ282RWlBcUlnQWFNaEJ5QUdJQUtpSUFHaklRWWdCVUVEUncwQklBWWhDU0FISVFnTElBTWdEaUFKSUFBckF4Q2pvRGtEQUNBSUlBQXJBeENqSUFBckF3aWdJUUlNQWdzZ0JVRUJhaUVGSUFZZ0JxSWdCeUFIb3FBaUFwOGhBUXdBQ3dBTElBUWdBamtEQUFzTFRRRUNmeU1BUVNCcklnTWtBQ0FBSUFNZ0FFRTRha0VBRURvZ0FpZ0NBQ0FDS0FJRUlBSW9BZ2dnQWlnQ0RCRGZCU0lFSUFJUTRRSWdBQ0FCSUFRUTRRSWdCQkNiQXlBRFFTQnFKQUFMTlFBZ0FDZ0NBQm9nQUNnQ0FDQUFFSkFDUVFGMGFob2dBQ2dDQUNBQUVJOENRUUYwYWhvZ0FDZ0NBQ0FBRUpBQ1FRRjBhaG9MSEFFQmZTQUFLZ0lBSVFJZ0FDQUJLZ0lBT0FJQUlBRWdBamdDQUFzTUFDQUFJQUVROUFGQkFYTUw1QUVCQVg4akFFRWdheUlESkFBZ0F5QUJOZ0lRSUFNZ0FEWUNHQ0FESUFJMkFnZ2dBeWdDRUNBREtBSVlFSkFCSVFFZ0F5Z0NDQ0FES0FJUUVKQUJJUUFDUUFKL0FuOGdBVVVFUUVFQUlRRWdBRVVOQXlBREtBSVFJQU1vQWdnUXhBRkJBU0VCSUFNb0FoQWdBeWdDR0JDUUFVVU5BeUFEUVJCcUlRQWdBMEVZYWd3QkN5QURLQUlZSVFJZ0FBUkFJQU5CQ0dvaEFFRUJEQUlMSUFJZ0F5Z0NFQkRFQVVFQklRRWdBeWdDQ0NBREtBSVFFSkFCUlEwQ0lBTkJDR29oQUNBRFFSQnFDeWdDQUNFQ1FRSUxJUUVnQWlBQUtBSUFFTVFCQ3lBRFFTQnFKQUFnQVFzU0FDQUFFRHdvQWdBZ0FDZ0NBR3RCQTNVTERRQWdBQ0FCSUFKQkF4Q3JCQXNMQUNBQVFRQkJKQkE0R2d0YUFRSi9Jd0JCRUdzaUFpUUFJQUlnQVRZQ0RDQUJJQUFRMndZaUEwMEVRQ0FBRVBJQklnQWdBMEVCZGtrRVFDQUNJQUJCQVhRMkFnZ2dBa0VJYWlBQ1FReHFFRzRvQWdBaEF3c2dBa0VRYWlRQUlBTVBDeENTQWdBTEN3QWdBU0FDUVNRUVBob0xEUUFnQUNBQklBSkJKQkNzQkFzckFRRi9JQUFnQVNnQ0FEWUNBQ0FCS0FJQUlRTWdBQ0FCTmdJSUlBQWdBeUFDUVF4c2FqWUNCQ0FBQzM4QkEzOGdBQkNBQWlBQUVESWFJQUFvQWdBaEJDQUFLQUlFSVFNZ0FVRUVhaUVDQTBBZ0F5QUVSd1JBSUFJb0FnQkJER3NnQTBFTWF5SURFSllFR2lBQ0lBSW9BZ0JCREdzMkFnQU1BUXNMSUFBZ0FoQkZJQUJCQkdvZ0FVRUlhaEJGSUFBUU1pQUJFRHdRUlNBQklBRW9BZ1EyQWdBZ0FDQUFFRk1RdHdNTFdRRUNmeU1BUVJCcklnSWtBQ0FDSUFCQkNHb2dBUkRHQmlJQktBSUFJUU1EUUNBQktBSUVJQU5IQkVBZ0FDZ0NFQm9nQVNnQ0FCQ3JBeUFCSUFFb0FnQkJER29pQXpZQ0FBd0JDd3NnQVJDcEFTQUNRUkJxSkFBTFdnRUNmeU1BUVJCcklnSWtBQ0FDSUFFMkFnd2dBU0FBRUxnRElnTk5CRUFnQUJDa0FTSUFJQU5CQVhaSkJFQWdBaUFBUVFGME5nSUlJQUpCQ0dvZ0FrRU1haEJ1S0FJQUlRTUxJQUpCRUdva0FDQUREd3NRa2dJQUM0MENBZ3gvQVgxQmZ5RUtBa0FnQVNnQ0NDSUdJQUlvQWdSSERRQWdBQ2dDQkNJRElBRW9BZ1JIRFFBZ0FDZ0NDQ0lISUFJb0FnaEhEUUJCQUNFS0lBTkJBQ0FEUVFCS0d5RUxJQWRCQUNBSFFRQktHeUVNSUFaQkFDQUdRUUJLR3lFTklBQW9BZ0FoQXdOQUlBUWdDMFlOQVNBRUlBWnNJUTVCQUNFRkEwQWdCU0FNUmtVRVFFRUFJUUFnQTBFQU5nSUFJQUlvQWdBZ0JVRUNkR29oQ0NBQktBSUFJQTVCQW5ScUlRbERBQUFBQUNFUEEwQWdBQ0FOUmtVRVFDQURJQWtxQWdBZ0NDb0NBSlFnRDVJaUR6Z0NBQ0FBUVFGcUlRQWdDVUVFYWlFSklBZ2dCMEVDZEdvaENBd0JDd3NnQlVFQmFpRUZJQU5CQkdvaEF3d0JDd3NnQkVFQmFpRUVEQUFMQUFzZ0NndFRBUU4vSXdCQkVHc2lBeVFBSUFNZ0FDQUJFUEFDSWdJb0FnUWhBU0FDS0FJSUlRUURRQ0FCSUFSR0JFQWdBaEJySUFOQkVHb2tBQVVnQUJBeUdpQUJFS3NESUFJZ0FVRU1haUlCTmdJRURBRUxDd3NKQUNBQVFRQTJBZ0FMRWdBZ0FCQThLQUlBSUFBb0FnQnJRUUoxQzFrQkFuOGpBRUVRYXlJQ0pBQWdBaUFBUVFocUlBRVFyQU1pQVNnQ0FDRURBMEFnQVNnQ0JDQURSd1JBSUFBb0FoQWFJQUVvQWdBUXpBWWdBU0FCS0FJQVFRUnFJZ00yQWdBTUFRc0xJQUVRcVFFZ0FrRVFhaVFBQ3dzQUlBQWdBVUVFRVBVQkN3c0FJQUFnQVVFa0VQVUJDOGNCQVFsL0lBQW9BZ2dnQUNnQ0JCQzNBU0lDQkVCQmZ5RUhBa0FnQWlnQ0JDSURJQUFvQWdoSERRQWdBaWdDQ0NJQklBQW9BZ1JIRFFCQkFDRUhJQU5CQUNBRFFRQktHeUVJSUFGQkFDQUJRUUJLR3lFSklBSW9BZ0FoQkVFQUlRRURRQ0FCSUFoR0RRRWdBQ2dDQUNBQlFRTjBhaUVGUVFBaEJnTkFJQVlnQ1VjRVFDQUVJQVVyQXdBNUF3QWdCa0VCYWlFR0lBUkJDR29oQkNBRklBTkJBM1JxSVFVTUFRc0xJQUZCQVdvaEFRd0FDd0FMSUFkQkFFNEVRQ0FDRHdzZ0FoQkVDMEVBQ3k0QkFYOGdBQ2dDQkNFQ0EwQWdBU0FDUndSQUlBQVFNaG9nQWtFTWF5SUNFT0FCREFFTEN5QUFJQUUyQWdRTE1RRUJmeUFBRUlBQ0lBQW9BZ0FFUUNBQUlBQW9BZ0FRMGdZZ0FCQXlHaUFBS0FJQUlRRWdBQkNrQVJvZ0FSQXhDd3N1QVFGL0lBQW9BZ1FoQWdOQUlBRWdBa2NFUUNBQUVESWFJQUpCREdzaUFoRFRCZ3dCQ3dzZ0FDQUJOZ0lFQ3lBQUlBQkNBRGNDQUNBQVFnQTNBaEFnQUVJQU53SUlJQUJCR0dvUXNnSWFDd2NBSUFBUXBBSUxMZ0VCZnlBQUtBSUVJUUlEUUNBQklBSkhCRUFnQUJBeUdpQUNRU0JySWdJUW13TU1BUXNMSUFBZ0FUWUNCQXMxQUNBQUtBSUFHaUFBS0FJQUlBQVFrUUpCQlhScUdpQUFLQUlBSUFBUW93RkJCWFJxR2lBQUtBSUFJQUFRa1FKQkJYUnFHZ3N1QVFGL0lBQW9BZ1FnQVNnQ0NCRGhCaUlDQkVBZ0FpQUFJQUVReWdaQkFFNEVRQ0FDRHdzZ0FoQkVDMEVBQ3d3QUlBQWdBQ2dDQUJDdkF3c01BQ0FBUWNmajhUZ1F1Z0lMN3dFQkJYOGpBRUVRYXlJREpBQUNRQ0FBUlFSQVFYOGhCQXdCQ3lBQUtBTDBocThESUFGR0RRQWdBQ2dDaUlldkF5SUNCRUFnQWhCRUlBQkJBRFlDaUlldkF3c0NRQUpBQWtBQ1FDQUJEZ1VEQUFBQUFRSUxJQUFvQWlRaEJTQUFLQUlvSVFaQmtCQVFOeUlDQkVBZ0FpQUdOZ0lJSUFJZ0JUWUNCQ0FDUVFBMkFnQUxJQUFnQWpZQ2lJZXZBd3dDQ3lBQVFvR0FnSUFRTndPQWg2OERRUVFoQVF3QkMwRUFJUUZCQUVFRFFlMFZRUUFRT1FzZ0FDQUJOZ0wwaHE4RElBQW9BZ0JCQVVjTkFDQURJQUZCQW5SQm9ESnFLQUlBTmdJQVFRQkJBMEdoTmlBREVEa0xJQU5CRUdva0FDQUVDL2NFQkFSL0Fud0JmUUYrQW4wZ0Fid2lCQkNZQlNFQ0FrQUNRQUpBQWtBZ0FMd2lBMEdBZ0lEOEIydEJnSUNBaUhoUEJFQWdBZzBCREFNTElBSkZEUUVMUXdBQWdEOGhDQ0FEUVlDQWdQd0RSZzBDSUFSQkFYUWlBa1VOQWlBQUlBR1NJQUpCZ1lDQWVFa2dBMEVCZENJQ1FZQ0FnSGhOY1VVTkF4b2dBa0dBZ0lENEIwWU5Ba01BQUFBQUlBRWdBWlFnQWtILy8vLzNCMHNnQkVFQVRuTWJEQU1MSUFNUW1BVUVRQ0FBSUFDVUlRZ2dBMEVBU0FSQUlBaU1JQWdnQkJDWEJVRUJSaHNoQ0FzZ0JFRUFUZzBDUXdBQWdEOGdDSlVRbVFVTUF3c2dBMEVBU0FSQUlBUVFsd1VpQWtVRVFDQUFFSnNGREFRTElBTkIvLy8vL3dkeElRTWdBa0VCUmtFUWRDRUZDeUFEUWYvLy93TkxEUUFnQUVNQUFBQkxsTHhCLy8vLy93ZHhRWUNBZ053QWF5RURDd0pBUVpqaEFpc0RBQ0FESUFOQmdJRE0rUU5ySWdSQmdJQ0FmSEZydnJzZ0JFRVBka0h3QVhFaUFrR1kzd0pxS3dNQW9rUUFBQUFBQUFEd3Y2QWlCcUpCb09FQ0t3TUFvQ0FHSUFhaUlnY2dCNktpUWFqaEFpc0RBQ0FHb2tHdzRRSXJBd0NnSUFlaVFiamhBaXNEQUNBR29pQUNRYURmQW1vckF3QWdCRUVYZGJlZ29LQ2dJQUc3b2lJSHZVS0FnSUNBZ0lEZy8vOEFnMEtCZ0lDQWdJREFyOEFBVkEwQUlBZEVjZFhSLy8vL1gwQmtCRUFnQlVNQUFBQndFSm9GREFNTElBZEVBQUFBQUFEQVlzQmxSUTBBSUFWREFBQUFFQkNhQlF3Q0MwSFkzZ0lyQXdBZ0IwSFEzZ0lyQXdBaUJpQUhvQ0lISUFhaG9TSUdva0hnM2dJckF3Q2dJQVlnQnFLaVFlamVBaXNEQUNBR29rUUFBQUFBQUFEd1A2Q2dJQWU5SWdrZ0JhMThRaStHSUFtblFSOXhRUU4wUWREY0Ftb3BBd0I4djZLMklRZ0xJQWdMQ3dzQUlBQkRBQUFBUDVLT0N4QUFJQUFRcEFKREFBQUFRQkNrQXBVTExBQWdBQ2dDQUJvZ0FDZ0NBQ0FBRVBJQlFTUnNhaG9nQUNnQ0FCb2dBQ2dDQUNBQUVJRUJRU1JzYWhvTEN3QWdBQ0FCUVFJUTdnWUxEQUFnQUNBQUtBSUFFTkFHQ3pVQUlBQW9BZ0FhSUFBb0FnQWdBQkR5QVVFa2JHb2FJQUFvQWdBZ0FCQ0JBVUVrYkdvYUlBQW9BZ0FnQUJEeUFVRWtiR29hQ3d3QUlBQWdBQ2dDQUJEUEJnc2NBUUYvSUFCQkRrMEVmeUFBUVFKMFFZQ2ZBV29vQWdBRlFRQUxDeE1BSUFBZ0FUWUNWQ0FBUVR4cUlBRVFwUVFMYWdFRmZDQUFLd01ZSWdFZ0FhSWdBQ3NERUNJQ0lBS2lJQUFyQXdBaUF5QURvaUFBS3dNSUlnUWdCS0tnb0tBaUJVUUFBQUFBQUFBQUFHRUVRQThMSUFBZ0FTQUZueUlCb3prREdDQUFJQUlnQWFNNUF4QWdBQ0FFSUFHak9RTUlJQUFnQXlBQm96a0RBQXQ1QVFOL0lBQWdBQ2dDQUVFTWF5Z0NBR3BCQ2hDN0J5RURJd0JCRUdzaUFTUUFJQUZCQ0dvaUFpQUFFUDhDR2dKQUlBSXRBQUJGRFFBZ0FTQUFFTVVFSWdJZ0F4RFJBeUFDRVBVQ1JRMEFJQUFnQUNnQ0FFRU1heWdDQUdwQkFSRERBZ3NnQVVFSWFoREpBaUFCUVJCcUpBQWdBQkNCQXlBQUN5WUFJQUFvQWdBYUlBQW9BZ0FnQUJEWUFXb2FJQUFvQWdBZ0FCRFlBV29hSUFBb0FnQWFDd2tBSUFCQmZ4QzZBZ3NaQUNBQlFkV3ExYW9CU3dSQUVQZ0JBQXNnQVVFTWJCQlhDMW9CQW44akFFRVFheUlDSkFBZ0FpQUJOZ0lNSUFFZ0FCQzRBeUlEVFFSQUlBQVFwQUVpQUNBRFFRRjJTUVJBSUFJZ0FFRUJkRFlDQ0NBQ1FRaHFJQUpCREdvUWJpZ0NBQ0VEQ3lBQ1FSQnFKQUFnQXc4TEVMc0NBQXNXQUNBQklBSXBBZ0EzQWdBZ0FTQUNLQUlJTmdJSUN6NEJBbjlCREJBM0lnTUVmeUFESUFBZ0FXd2dBblFRTnlJRU5nSUFJQVJGQkVBZ0F4QXhRUUFQQ3lBRElBRTJBZ2dnQXlBQU5nSUVJQU1GUVFBTEN6NEFBMEFnQVNBQ1J3UkFJQUVnQVN3QUFDSUFRUUJPQkg4Z0F5Z0NBQ0FCTEFBQVFRSjBhaWdDQUFVZ0FBczZBQUFnQVVFQmFpRUJEQUVMQ3lBQ0N6OEFBMEFnQVNBQ1J3UkFJQUVnQVNnQ0FDSUFRZjhBVFFSL0lBTW9BZ0FnQVNnQ0FFRUNkR29vQWdBRklBQUxOZ0lBSUFGQkJHb2hBUXdCQ3dzZ0FndW5BUUVFZnlNQVFZQUNheUlBSkFBZ0FFSWxOd1A0QVNBQVFmZ0JhaUlIUVFGeVFmL3FBU0FGSUFJb0FnUVF4UU1RV1NFSUlBQWdCRGNEQUNBQVFlQUJhaUlHSUFaQkdDQUlJQWNnQUJDc0FTQUdhaUlJSUFJUTFRRWhDU0FBUVJCcUlnY2dBaEJNSUFZZ0NTQUlJQUJCSUdvaUJpQUFRUnhxSUFCQkdHb2dCeEREQnlBSEVFWWdBU0FHSUFBb0Fod2dBQ2dDR0NBQ0lBTVFtZ0loQVNBQVFZQUNhaVFBSUFFTHB3RUJBMzhqQUVHZ0FXc2lBQ1FBSUFCQ0pUY0RtQUVnQUVHWUFXb2lCa0VCY2tHdTZ3RWdCU0FDS0FJRUVNVURFRmtoQnlBQUlBUTJBZ0FnQUVHTEFXb2lCQ0FFUVEwZ0J5QUdJQUFRckFFZ0JHb2lCeUFDRU5VQklRZ2dBRUVRYWlJR0lBSVFUQ0FFSUFnZ0J5QUFRU0JxSWdRZ0FFRWNhaUFBUVJocUlBWVF3d2NnQmhCR0lBRWdCQ0FBS0FJY0lBQW9BaGdnQWlBREVKb0NJUUVnQUVHZ0FXb2tBQ0FCQzZZQkFRUi9Jd0JCOEFCcklnQWtBQ0FBUWlVM0EyZ2dBRUhvQUdvaUIwRUJja0gvNmdFZ0JTQUNLQUlFRU1VREVGa2hDQ0FBSUFRM0F3QWdBRUhRQUdvaUJpQUdRUmdnQ0NBSElBQVFyQUVnQm1vaUNDQUNFTlVCSVFrZ0FFRVFhaUlISUFJUVRDQUdJQWtnQ0NBQVFTQnFJZ1lnQUVFY2FpQUFRUmhxSUFjUXhnY2dCeEJHSUFFZ0JpQUFLQUljSUFBb0FoZ2dBaUFERVA0QklRRWdBRUh3QUdva0FDQUJDNlVCQVFOL0l3QkIwQUJySWdBa0FDQUFRaVUzQTBnZ0FFSElBR29pQmtFQmNrR3U2d0VnQlNBQ0tBSUVFTVVERUZraEJ5QUFJQVEyQWdBZ0FFRTdhaUlFSUFSQkRTQUhJQVlnQUJDc0FTQUVhaUlISUFJUTFRRWhDQ0FBUVJCcUlnWWdBaEJNSUFRZ0NDQUhJQUJCSUdvaUJDQUFRUnhxSUFCQkdHb2dCaERHQnlBR0VFWWdBU0FFSUFBb0Fod2dBQ2dDR0NBQ0lBTVEvZ0VoQVNBQVFkQUFhaVFBSUFFTEtBQWdBQ0FCTmdJQUlBQkJCR29RblFjZ0FFSUFOd0lZSUFCQ0FEY0NFQ0FBUWdBM0FnZ2dBQXNzQUNBQUtBSUFHaUFBS0FJQUlBQVExd0ZCRkd4cUdpQUFLQUlBSUFBUTF3RkJGR3hxR2lBQUtBSUFHZ3M4QVFGL0l3QkJFR3NpQkNRQUlBUWdBQkE5TmdJQUlBUWdBeWdDQURZQ0JDQUVJQUlvQWdBMkFnZ2dBVUhwMHdFZ0JCQUlHaUFFUVJCcUpBQUxIQUFnQUNBQlFRZ2dBcWNnQWtJZ2lLY2dBNmNnQTBJZ2lLY1FHd3NyQVFGL0lBQkJxT0VETmdJQUFrQWdBQ2dDQkVFTWF5SUJRUWhxRUlBRVFRQk9EUUFnQVJBeEN5QUFDMUVCQVg4Q1FDQUJSUTBBSUFGQjhOa0RRZkRiQXhDcUFTSUJSUTBBSUFFb0FnZ2dBQ2dDQ0VGL2MzRU5BQ0FBS0FJTUlBRW9BZ3hCQUJCNlJRMEFJQUFvQWhBZ0FTZ0NFRUVBRUhvaEFnc2dBZ3VNQVFFRmZ3TkFJQVpCQTBjRVFDQUFJQVpCQlhRaUIyb2hCRUVBSVFNRFFDQURRUVJIQkVBZ0EwRURkQ0lGSUFJZ0IycHFJQVFyQXhBZ0FTQUZhaUlGUVVCckt3TUFvaUFFS3dNQUlBVXJBd0NpSUFRckF3Z2dCU3NESUtLZ29Ea0RBQ0FEUVFGcUlRTU1BUXNMSUFJZ0Iyb2lBeUFFS3dNWUlBTXJBeGlnT1FNWUlBWkJBV29oQmd3QkN3c0xWUUVDZnlBQUtBSUVJUVFDZjBFQUlBSkZEUUFhSUFSQkNIVWlCU0FFUVFGeFJRMEFHaUFDS0FJQUlBVVFzd1FMSVFVZ0FDZ0NBQ0lBSUFFZ0FpQUZhaUFEUVFJZ0JFRUNjUnNnQUNnQ0FDZ0NIQkVIQUF1K0FRRUVmeU1BUVJCcklnVWtBQ0FDUWUvLy8vOERJQUZyVFFSQUlBQVFQU0VHSUFBQ2Z5QUJRZWYvLy84QlNRUkFJQVVnQVVFQmREWUNDQ0FGSUFFZ0FtbzJBZ3dnQlVFTWFpQUZRUWhxRUc0b0FnQVF2UUlNQVF0Qjd2Ly8vd01MUVFGcUlnY1F2QUloQWlBRUJFQWdBaUFHSUFRUXlnRUxJQU1nQkVjRVFDQUVRUUowSWdnZ0Ftb2dCaUFJYWlBRElBUnJFTW9CQ3lBQlFRRkhCRUFnQmhBeEN5QUFJQUlRbUFFZ0FDQUhFTEVCSUFWQkVHb2tBQThMRUxBQkFBdVFBZ0VFZnlNQVFSQnJJZ2drQUNBQ0lBRkJmM05CNy8vLy93TnFUUVJBSUFBUVBTRUpJQUFDZnlBQlFlZi8vLzhCU1FSQUlBZ2dBVUVCZERZQ0NDQUlJQUVnQW1vMkFnd2dDRUVNYWlBSVFRaHFFRzRvQWdBUXZRSU1BUXRCN3YvLy93TUxRUUZxSWdvUXZBSWhBaUFFQkVBZ0FpQUpJQVFReWdFTElBWUVRQ0FFUVFKMElBSnFJQWNnQmhES0FRc2dBeUFFSUFWcUlndHJJUWNnQXlBTFJ3UkFJQVJCQW5RaUF5QUNhaUFHUVFKMGFpQURJQWxxSUFWQkFuUnFJQWNReWdFTElBRkJBVWNFUUNBSkVERUxJQUFnQWhDWUFTQUFJQW9Rc1FFZ0FDQUVJQVpxSUFkcUlnQVFpUUVnQ0VFQU5nSUVJQUlnQUVFQ2RHb2dDRUVFYWhDckFTQUlRUkJxSkFBUEN4Q3dBUUFMZHdFRGZ5TUFRUkJySWdNa0FDQUNRVzlOQkVBQ1FDQUNFUHdDQkVBZ0FDQUNFSklCSUFBaEJBd0JDeUFBSUFJUW13SkJBV29pQlJCWElnUVFtQUVnQUNBRkVMRUJJQUFnQWhDSkFRc2dCQ0FCSUFJUXRBRWdBMEVBT2dBUElBSWdCR29nQTBFUGFoQ0xBU0FEUVJCcUpBQVBDeEN3QVFBTEV3QWdBUVJBSUFBZ0FoQytBU0FCRURnYUN3dEhBUUovSUFBUWp3UWlBMEdvNFFNMkFnQWdBUkNlQVNJQVFRMXFFRmNpQWtFQU5nSUlJQUlnQURZQ0JDQUNJQUEyQWdBZ0F5QUNFRHdnQVNBQVFRRnFFRDQyQWdRZ0F3c0RBQUFMRmdBZ0FDQUJJQUpDZ0lDQWdJQ0FnSUNBZnhESUJBc3ZBUUYvSXdCQkVHc2lBeVFBSUFBZ0FoQ1hBaUFEUVFBNkFBOGdBU0FDYWlBRFFROXFFSXNCSUFOQkVHb2tBQXNKQUNBQUVGazJBZ0FMS3dFQmZ5QUFLQUlFSVFJRFFDQUJJQUpIQkVBZ0FCQmJHaUFDUVFScklRSU1BUXNMSUFBZ0FUWUNCQXNJQUNBQkVPa0JHZ3MvQVFGL0l3QkJFR3NpQWlRQUFrQUNRQ0FCUVI1TERRQWdBQzBBZUEwQUlBQkJBVG9BZUF3QkN5QUNRUWhxSUFFUXRRSWhBQXNnQWtFUWFpUUFJQUFMUXdFQmZ5TUFRUkJySWdFa0FDQUFFRnNhSUFGQi8vLy8vd00yQWd3Z0FVSC8vLy8vQnpZQ0NDQUJRUXhxSUFGQkNHb1FsZ0lvQWdBaEFDQUJRUkJxSkFBZ0FBc0pBQ0FBRUxrRUVERUxEUUFnQUVITW1iUG1BQkM2QWdzSkFDQUFRUlFRdWdNTGdRRUJCSDhnQUJDdkJTQUFFREloQkNBQUtBSUFJUVVnQUNnQ0JDRURJQUZCQkdvaEFnTkFJQU1nQlVjRVFDQUVJQUlvQWdCQkZHc2dBMEVVYXlJREVMNERJQUlnQWlnQ0FFRVVhellDQUF3QkN3c2dBQ0FDRUVVZ0FFRUVhaUFCUVFocUVFVWdBQkF5SUFFUVBCQkZJQUVnQVNnQ0JEWUNBQ0FBSUFBUWZoRDJCZ3RrQVFKL0l3QkJFR3NpQlNRQUlBVkJBRFlDRENBQVFReHFJQU1RMEFFZ0FRUkFJQUFvQWhBZ0FSQ3lCQ0VFQ3lBQUlBUTJBZ0FnQUNBRUlBSkJGR3hxSWdJMkFnZ2dBQ0FDTmdJRUlBQVFQQ0FFSUFGQkZHeHFOZ0lBSUFWQkVHb2tBQ0FBQ3hVQUlBQkJnSzRETmdJQUlBQkJFR29RTmhvZ0FBc1ZBQ0FBUWRpdEF6WUNBQ0FBUVF4cUVEWWFJQUFMN1FNQkJYOENRQ0FESUFJaUFHdEJBMGdOQUFzRFFBSkFJQVFnQ0UwZ0FDQURUM0lOQUNBQUxBQUFJZ1pCL3dGeElRRUNRQ0FHUVFCT0JFQkJBU0VHSUFGQi8vL0RBRTBOQVF3Q0N5QUdRVUpKRFFFZ0JrRmZUUVJBSUFNZ0FHdEJBa2dOQWlBQUxRQUJJZ1ZCd0FGeFFZQUJSdzBDUVFJaEJpQUZRVDl4SUFGQkJuUkJ3QTl4Y2tILy84TUFUUTBCREFJTEFrQUNRQ0FHUVc5TkJFQWdBeUFBYTBFRFNBMEVJQUF0QUFJaEJ5QUFMUUFCSVFVZ0FVSHRBVVlOQVNBQlFlQUJSZ1JBSUFWQjRBRnhRYUFCUmcwRERBVUxJQVZCd0FGeFFZQUJSdzBFREFJTElBTWdBR3RCQkVnZ0JrRjBTM0lOQXlBQUxRQURJUWNnQUMwQUFpRUpJQUF0QUFFaEJRSkFBa0FDUUFKQUlBRkI4QUZyRGdVQUFnSUNBUUlMSUFWQjhBQnFRZjhCY1VFd1NRMENEQVlMSUFWQjhBRnhRWUFCUmcwQkRBVUxJQVZCd0FGeFFZQUJSdzBFQ3lBSlFjQUJjVUdBQVVjZ0IwSEFBWEZCZ0FGSGNnMERRUVFoQmlBSFFUOXhJQWxCQm5SQndCOXhJQUZCRW5SQmdJRHdBSEVnQlVFL2NVRU1kSEp5Y2tILy84TUFTdzBEREFJTElBVkI0QUZ4UVlBQlJ3MENDeUFIUWNBQmNVR0FBVWNOQVVFRElRWWdCMEUvY1NBQlFReDBRWURnQTNFZ0JVRS9jVUVHZEhKeVFmLy93d0JMRFFFTElBaEJBV29oQ0NBQUlBWnFJUUFNQVFzTElBQWdBbXNMM2dRQkJYOGpBRUVRYXlJQUpBQWdBQ0FDTmdJTUlBQWdCVFlDQ0FKL0lBQWdBallDRENBQUlBVTJBZ2dDUUFKQUEwQUNRQ0FBS0FJTUlnRWdBMDhOQUNBQUtBSUlJZ3dnQms4TkFDQUJMQUFBSWdWQi93RnhJUUlDUUNBRlFRQk9CRUFnQWtILy84TUFUUVJBUVFFaEJRd0NDMEVDREFZTFFRSWhDaUFGUVVKSkRRTWdCVUZmVFFSQUlBTWdBV3RCQWtnTkJTQUJMUUFCSWdoQndBRnhRWUFCUncwRVFRSWhCU0FJUVQ5eElBSkJCblJCd0E5eGNpSUNRZi8vd3dCTkRRRU1CQXNnQlVGdlRRUkFJQU1nQVd0QkEwZ05CU0FCTFFBQ0lRa2dBUzBBQVNFSUFrQUNRQ0FDUWUwQlJ3UkFJQUpCNEFGSERRRWdDRUhnQVhGQm9BRkdEUUlNQndzZ0NFSGdBWEZCZ0FGR0RRRU1CZ3NnQ0VIQUFYRkJnQUZIRFFVTElBbEJ3QUZ4UVlBQlJ3MEVRUU1oQlNBSlFUOXhJQUpCREhSQmdPQURjU0FJUVQ5eFFRWjBjbklpQWtILy84TUFUUTBCREFRTElBVkJkRXNOQXlBRElBRnJRUVJJRFFRZ0FTMEFBeUVKSUFFdEFBSWhDeUFCTFFBQklRZ0NRQUpBQWtBQ1FDQUNRZkFCYXc0RkFBSUNBZ0VDQ3lBSVFmQUFha0gvQVhGQk1Fa05BZ3dHQ3lBSVFmQUJjVUdBQVVZTkFRd0ZDeUFJUWNBQmNVR0FBVWNOQkFzZ0MwSEFBWEZCZ0FGSElBbEJ3QUZ4UVlBQlIzSU5BMEVFSVFVZ0NVRS9jU0FMUVFaMFFjQWZjU0FDUVJKMFFZQ0E4QUJ4SUFoQlAzRkJESFJ5Y25JaUFrSC8vOE1BU3cwREN5QU1JQUkyQWdBZ0FDQUJJQVZxTmdJTUlBQWdBQ2dDQ0VFRWFqWUNDQXdCQ3dzZ0FTQURTU0VLQ3lBS0RBRUxRUUVMSVFFZ0JDQUFLQUlNTmdJQUlBY2dBQ2dDQ0RZQ0FDQUFRUkJxSkFBZ0FRdU9CQUFqQUVFUWF5SUFKQUFnQUNBQ05nSU1JQUFnQlRZQ0NBSi9JQUFnQWpZQ0RDQUFJQVUyQWdnZ0FDZ0NEQ0VCQWtBRFFDQUJJQU5QQkVCQkFDRUNEQUlMUVFJaEFpQUJLQUlBSWdGQi8vL0RBRXNnQVVHQWNIRkJnTEFEUm5JTkFRSkFBa0FnQVVIL0FFMEVRRUVCSVFJZ0JpQUFLQUlJSWdWclFRQk1EUVFnQUNBRlFRRnFOZ0lJSUFVZ0FUb0FBQXdCQ3lBQlFmOFBUUVJBSUFZZ0FDZ0NDQ0lDYTBFQ1NBMENJQUFnQWtFQmFqWUNDQ0FDSUFGQkJuWkJ3QUZ5T2dBQUlBQWdBQ2dDQ0NJQ1FRRnFOZ0lJSUFJZ0FVRS9jVUdBQVhJNkFBQU1BUXNnQmlBQUtBSUlJZ0pySVFVZ0FVSC8vd05OQkVBZ0JVRURTQTBDSUFBZ0FrRUJhallDQ0NBQ0lBRkJESFpCNEFGeU9nQUFJQUFnQUNnQ0NDSUNRUUZxTmdJSUlBSWdBVUVHZGtFL2NVR0FBWEk2QUFBZ0FDQUFLQUlJSWdKQkFXbzJBZ2dnQWlBQlFUOXhRWUFCY2pvQUFBd0JDeUFGUVFSSURRRWdBQ0FDUVFGcU5nSUlJQUlnQVVFU2RrSHdBWEk2QUFBZ0FDQUFLQUlJSWdKQkFXbzJBZ2dnQWlBQlFReDJRVDl4UVlBQmNqb0FBQ0FBSUFBb0FnZ2lBa0VCYWpZQ0NDQUNJQUZCQm5aQlAzRkJnQUZ5T2dBQUlBQWdBQ2dDQ0NJQ1FRRnFOZ0lJSUFJZ0FVRS9jVUdBQVhJNkFBQUxJQUFnQUNnQ0RFRUVhaUlCTmdJTURBRUxDMEVCREFFTElBSUxJUUVnQkNBQUtBSU1OZ0lBSUFjZ0FDZ0NDRFlDQUNBQVFSQnFKQUFnQVF2NUF3RUVmd0pBSUFNZ0FpSUFhMEVEU0EwQUN3TkFBa0FnQkNBR1RTQUFJQU5QY2cwQUlBQXRBQUFpQVVILy84TUFTdzBBQW44Z0FFRUJhaUFCUVJoMFFSaDFRUUJPRFFBYUlBRkJ3Z0ZKRFFFZ0FVSGZBVTBFUUNBRElBQnJRUUpJRFFJZ0FDMEFBU0lGUWNBQmNVR0FBVWNnQlVFL2NTQUJRUVowUWNBUGNYSkIvLy9EQUV0eURRSWdBRUVDYWd3QkN3SkFBa0FnQVVIdkFVMEVRQ0FESUFCclFRTklEUVFnQUMwQUFpRUhJQUF0QUFFaEJTQUJRZTBCUmcwQklBRkI0QUZHQkVBZ0JVSGdBWEZCb0FGR0RRTU1CUXNnQlVIQUFYRkJnQUZIRFFRTUFnc2dBeUFBYTBFRVNDQUJRZlFCUzNJZ0JDQUdhMEVDU1hJTkF5QUFMUUFESVFjZ0FDMEFBaUVJSUFBdEFBRWhCUUpBQWtBQ1FBSkFJQUZCOEFGckRnVUFBZ0lDQVFJTElBVkI4QUJxUWY4QmNVRXdTUTBDREFZTElBVkI4QUZ4UVlBQlJnMEJEQVVMSUFWQndBRnhRWUFCUncwRUN5QUlRY0FCY1VHQUFVY2dCMEhBQVhGQmdBRkhjaUFIUVQ5eElBaEJCblJCd0I5eElBRkJFblJCZ0lEd0FIRWdCVUUvY1VFTWRISnlja0gvLzhNQVMzSU5BeUFHUVFGcUlRWWdBRUVFYWd3Q0N5QUZRZUFCY1VHQUFVY05BZ3NnQjBIQUFYRkJnQUZISUFkQlAzRWdBVUVNZEVHQTRBTnhJQVZCUDNGQkJuUnlja0gvLzhNQVMzSU5BU0FBUVFOcUN5RUFJQVpCQVdvaEJnd0JDd3NnQUNBQ2F3dlRCUUVFZnlNQVFSQnJJZ0FrQUNBQUlBSTJBZ3dnQUNBRk5nSUlBbjhnQUNBQ05nSU1JQUFnQlRZQ0NBSkFBa0FDUUFOQUFrQWdBQ2dDRENJQklBTlBEUUFnQUNnQ0NDSUZJQVpQRFFCQkFpRUtJQUV0QUFBaUFrSC8vOE1BU3cwRUlBQUNmeUFDUVJoMFFSaDFRUUJPQkVBZ0JTQUNPd0VBSUFGQkFXb01BUXNnQWtIQ0FVa05CU0FDUWQ4QlRRUkFJQU1nQVd0QkFrZ05CU0FCTFFBQklnaEJ3QUZ4UVlBQlJ3MEVJQWhCUDNFZ0FrRUdkRUhBRDNGeUlnSkIvLy9EQUVzTkJDQUZJQUk3QVFBZ0FVRUNhZ3dCQ3lBQ1FlOEJUUVJBSUFNZ0FXdEJBMGdOQlNBQkxRQUNJUWtnQVMwQUFTRUlBa0FDUUNBQ1FlMEJSd1JBSUFKQjRBRkhEUUVnQ0VIZ0FYRkJvQUZHRFFJTUJ3c2dDRUhnQVhGQmdBRkdEUUVNQmdzZ0NFSEFBWEZCZ0FGSERRVUxJQWxCd0FGeFFZQUJSdzBFSUFsQlAzRWdDRUUvY1VFR2RDQUNRUXgwY25JaUFrSC8vd054UWYvL3d3QkxEUVFnQlNBQ093RUFJQUZCQTJvTUFRc2dBa0gwQVVzTkJVRUJJUW9nQXlBQmEwRUVTQTBESUFFdEFBTWhDU0FCTFFBQ0lRZ2dBUzBBQVNFQkFrQUNRQUpBQWtBZ0FrSHdBV3NPQlFBQ0FnSUJBZ3NnQVVId0FHcEIvd0Z4UVRCUERRZ01BZ3NnQVVId0FYRkJnQUZIRFFjTUFRc2dBVUhBQVhGQmdBRkhEUVlMSUFoQndBRnhRWUFCUnlBSlFjQUJjVUdBQVVkeURRVWdCaUFGYTBFRVNBMERRUUloQ2lBSlFUOXhJZ2tnQ0VFR2RDSUxRY0FmY1NBQlFReDBRWURnRDNFZ0FrRUhjU0lDUVJKMGNuSnlRZi8vd3dCTERRTWdCU0FJUVFSMlFRTnhJQUZCQW5RaUFVSEFBWEVnQWtFSWRISWdBVUU4Y1hKeVFjRC9BR3BCZ0xBRGNqc0JBQ0FBSUFWQkFtbzJBZ2dnQlNBTFFjQUhjU0FKY2tHQXVBTnlPd0VDSUFBb0FneEJCR29MTmdJTUlBQWdBQ2dDQ0VFQ2FqWUNDQXdCQ3dzZ0FTQURTU0VLQ3lBS0RBSUxRUUVNQVF0QkFnc2hBU0FFSUFBb0FndzJBZ0FnQnlBQUtBSUlOZ0lBSUFCQkVHb2tBQ0FCQy9vRkFRRi9Jd0JCRUdzaUFDUUFJQUFnQWpZQ0RDQUFJQVUyQWdnQ2Z5QUFJQUkyQWd3Z0FDQUZOZ0lJSUFBb0Fnd2hBZ0pBQWtBRFFDQUNJQU5QQkVCQkFDRUZEQU1MUVFJaEJTQUNMd0VBSWdGQi8vL0RBRXNOQWdKQUFrQWdBVUgvQUUwRVFFRUJJUVVnQmlBQUtBSUlJZ0pyUVFCTURRVWdBQ0FDUVFGcU5nSUlJQUlnQVRvQUFBd0JDeUFCUWY4UFRRUkFJQVlnQUNnQ0NDSUNhMEVDU0EwRUlBQWdBa0VCYWpZQ0NDQUNJQUZCQm5aQndBRnlPZ0FBSUFBZ0FDZ0NDQ0lDUVFGcU5nSUlJQUlnQVVFL2NVR0FBWEk2QUFBTUFRc2dBVUgvcndOTkJFQWdCaUFBS0FJSUlnSnJRUU5JRFFRZ0FDQUNRUUZxTmdJSUlBSWdBVUVNZGtIZ0FYSTZBQUFnQUNBQUtBSUlJZ0pCQVdvMkFnZ2dBaUFCUVFaMlFUOXhRWUFCY2pvQUFDQUFJQUFvQWdnaUFrRUJhallDQ0NBQ0lBRkJQM0ZCZ0FGeU9nQUFEQUVMSUFGQi83Y0RUUVJBUVFFaEJTQURJQUpyUVFSSURRVWdBaThCQWlJSVFZRDRBM0ZCZ0xnRFJ3MENJQVlnQUNnQ0NHdEJCRWdOQlNBSVFmOEhjU0FCUVFwMFFZRDRBM0VnQVVIQUIzRWlCVUVLZEhKeVFZQ0FCR3BCLy8vREFFc05BaUFBSUFKQkFtbzJBZ3dnQUNBQUtBSUlJZ0pCQVdvMkFnZ2dBaUFGUVFaMlFRRnFJZ0pCQW5aQjhBRnlPZ0FBSUFBZ0FDZ0NDQ0lGUVFGcU5nSUlJQVVnQWtFRWRFRXdjU0FCUVFKMlFROXhja0dBQVhJNkFBQWdBQ0FBS0FJSUlnSkJBV28yQWdnZ0FpQUlRUVoyUVE5eElBRkJCSFJCTUhGeVFZQUJjam9BQUNBQUlBQW9BZ2dpQVVFQmFqWUNDQ0FCSUFoQlAzRkJnQUZ5T2dBQURBRUxJQUZCZ01BRFNRMEVJQVlnQUNnQ0NDSUNhMEVEU0EwRElBQWdBa0VCYWpZQ0NDQUNJQUZCREhaQjRBRnlPZ0FBSUFBZ0FDZ0NDQ0lDUVFGcU5nSUlJQUlnQVVFR2RrRS9jVUdBQVhJNkFBQWdBQ0FBS0FJSUlnSkJBV28yQWdnZ0FpQUJRVDl4UVlBQmNqb0FBQXNnQUNBQUtBSU1RUUpxSWdJMkFnd01BUXNMUVFJTUFndEJBUXdCQ3lBRkN5RUJJQVFnQUNnQ0REWUNBQ0FISUFBb0FnZzJBZ0FnQUVFUWFpUUFJQUVMUWdFQ2Z5TUFRUkJySWdFa0FDQUJJQUEyQWd3Z0FVRUlhaUFCUVF4cUVNZ0JJUUJCQkVFQlFaQ09CQ2dDQUNnQ0FCc2hBaUFBRU1jQklBRkJFR29rQUNBQ0N6NEJBWDhqQUVFUWF5SUZKQUFnQlNBRU5nSU1JQVZCQ0dvZ0JVRU1haERJQVNFRUlBQWdBU0FDSUFNUWhnTWhBQ0FFRU1jQklBVkJFR29rQUNBQUN4SUFJQVFnQWpZQ0FDQUhJQVUyQWdCQkF3c29BUUYvSUFCQjdLUUROZ0lBQWtBZ0FDZ0NDQ0lCUlEwQUlBQXRBQXhGRFFBZ0FSQXhDeUFBQzBBQkFuOGdBQ2dDQUNnQ0FDSUFLQUlBSUFBb0FnZ2lBa0VCZFdvaEFTQUFLQUlFSVFBZ0FTQUNRUUZ4Qkg4Z0FTZ0NBQ0FBYWlnQ0FBVWdBQXNSQVFBTEN3QWdBQ0FCUVF3UTlRRUwwZ2tCQTM4Z0FBSi9RZVNzQkMwQUFBUkFRZUNzQkNnQ0FBd0JDMEhjckFRQ2YwSFlyQVF0QUFBRVFFSFVyQVFvQWdBTUFRdEJ1TGtFRUY0aUFFSFlwQU0yQWdBakFFRVFheUlDSkFBZ0FFRUlhaUlCUWdBM0F3QWdBa0VBTmdJTUlBRkJDR29RNlFGQkFEb0FnQUVnQVJDSkIwRWVTUVJBRUpZREFBc2dBU0FCRUZ0QkhoQ0lCeUlETmdJQUlBRWdBellDQkNBQkVESWdBMEg0QUdvMkFnQWdBVUVBRUxRQ0lBRkJIaENoQnlBQ1FSQnFKQUFnQUVHWUFXcEJ5NG9DRUVnYUlBRVFRaUVDSUFFUW9BY2dBU0FDRUswRFFmQzJCQkJlUWZTNEF6WUNBQ0FBUWZDMkJFR29xd1FRWFJCaFFmaTJCQkJlUVpTNUF6WUNBQ0FBUWZpMkJFR3dxd1FRWFJCaFFZQzNCQkJlSWdGQkFEb0FEQ0FCUVFBMkFnZ2dBVUhzcEFNMkFnQWdBVUdncFFNMkFnZ2dBRUdBdHdSQjlLd0VFRjBRWVVHUXR3UVFYa0hZc0FNMkFnQWdBRUdRdHdSQjdLd0VFRjBRWVVHWXR3UVFYa0hzc1FNMkFnQWdBRUdZdHdSQi9Ld0VFRjBRWVVHZ3R3UVFYaUlCUWFpdEF6WUNBQ0FCRUZrMkFnZ2dBRUdndHdSQmhLMEVFRjBRWVVHd3R3UVFYa0dBc3dNMkFnQWdBRUd3dHdSQmpLMEVFRjBRWVVHNHR3UVFYa0hvdEFNMkFnQWdBRUc0dHdSQm5LMEVFRjBRWVVIQXR3UVFYa0gwc3dNMkFnQWdBRUhBdHdSQmxLMEVFRjBRWVVISXR3UVFYa0hjdFFNMkFnQWdBRUhJdHdSQnBLMEVFRjBRWVVIUXR3UVFYaUlCUWE3WUFEc0JDQ0FCUWRpdEF6WUNBQ0FCUVF4cUVFTWFJQUJCMExjRVFheXRCQkJkRUdGQjZMY0VFRjRpQVVLdWdJQ0F3QVUzQWdnZ0FVR0FyZ00yQWdBZ0FVRVFhaEJER2lBQVFlaTNCRUcwclFRUVhSQmhRWWk0QkJCZVFiUzVBellDQUNBQVFZaTRCRUc0cXdRUVhSQmhRWkM0QkJCZVFhaTdBellDQUNBQVFaQzRCRUhBcXdRUVhSQmhRWmk0QkJCZVFmeThBellDQUNBQVFaaTRCRUhJcXdRUVhSQmhRYUM0QkJCZVFlUytBellDQUNBQVFhQzRCRUhRcXdRUVhSQmhRYWk0QkJCZVFiekdBellDQUNBQVFhaTRCRUg0cXdRUVhSQmhRYkM0QkJCZVFkREhBellDQUNBQVFiQzRCRUdBckFRUVhSQmhRYmk0QkJCZVFjVElBellDQUNBQVFiaTRCRUdJckFRUVhSQmhRY0M0QkJCZVFiakpBellDQUNBQVFjQzRCRUdRckFRUVhSQmhRY2k0QkJCZVFhektBellDQUNBQVFjaTRCRUdZckFRUVhSQmhRZEM0QkJCZVFkRExBellDQUNBQVFkQzRCRUdnckFRUVhSQmhRZGk0QkJCZVFmVE1BellDQUNBQVFkaTRCRUdvckFRUVhSQmhRZUM0QkJCZVFaak9BellDQUNBQVFlQzRCRUd3ckFRUVhSQmhRZWk0QkJCZUlnRkJnTmdETmdJSUlBRkJyTUFETmdJQUlBRkIzTUFETmdJSUlBQkI2TGdFUWRpckJCQmRFR0ZCK0xnRUVGNGlBVUdrMkFNMkFnZ2dBVUcwd2dNMkFnQWdBVUhrd2dNMkFnZ2dBRUg0dUFSQjRLc0VFRjBRWVVHSXVRUVFYaUlCUVFocUVJVUhJQUZCb01RRE5nSUFJQUJCaUxrRVFlaXJCQkJkRUdGQm1Ma0VFRjRpQVVFSWFoQ0ZCeUFCUWJ6RkF6WUNBQ0FBUVppNUJFSHdxd1FRWFJCaFFhaTVCQkJlUWJ6UEF6WUNBQ0FBUWFpNUJFRzRyQVFRWFJCaFFiQzVCQkJlUWJUUUF6WUNBQ0FBUWJDNUJFSEFyQVFRWFJCaFFkQ3NCRUc0dVFRMkFnQkIyS3dFUVFFNkFBQkIxS3dFUWRDc0JEWUNBRUhRckFRTEVMMEVRZVNzQkVFQk9nQUFRZUNzQkVIY3JBUTJBZ0JCM0t3RUN5Z0NBQ0lBTmdJQUlBQVFvUU1MS2dBakFFRVFheUlDSkFBQ1FDQUFJQUZHQkVBZ0FVRUFPZ0I0REFFTElBRVFNUXNnQWtFUWFpUUFDM0VCQW44Z0FFSFlwQU0yQWdBZ0FFRUlhaUVCQTBBZ0FSQkNJQUpMQkVBZ0FTQUNFRG9vQWdBRVFDQUJJQUlRT2lnQ0FCRGNBaG9MSUFKQkFXb2hBZ3dCQ3dzZ0FFR1lBV29RTmhvZ0FSRHVBaUFCS0FJQUJFQWdBUkNnQnlBQkVGc2dBU2dDQUNBQkVNWUJFSjRIQ3lBQUN3d0FJQUFnQUNnQ0FCQ0dCd3RTQVFOL0l3QkJFR3NpQXlRQUlBTWdBQ0FCRUxZQ0lnSW9BZ1FoQVNBQ0tBSUlJUVFEUUNBQklBUkdCRUFnQWhCcklBTkJFR29rQUFVZ0FCQmJJQUVRaHdjZ0FpQUJRUVJxSWdFMkFnUU1BUXNMQ3lBQUlBQkJxSzBETmdJQUlBQW9BZ2dRV1VjRVFDQUFLQUlJRU13RUN5QUFDd1FBUVg4TGd3WUJDbjhqQUVFUWF5SVRKQUFnQWlBQU5nSUFJQU5CZ0FSeElSVWdCMEVDZENFV0EwQWdGRUVFUmdSQUlBMFFOVUVCU3dSQUlCTWdEUkN0QVRZQ0NDQUNJQk5CQ0dwQkFSQ29CeUFORVBzQklBSW9BZ0FRMndJMkFnQUxJQU5Cc0FGeElnTkJFRWNFUUNBQklBTkJJRVlFZnlBQ0tBSUFCU0FBQ3pZQ0FBc2dFMEVRYWlRQUJRSkFBa0FDUUFKQUFrQUNRQ0FJSUJScUxBQUFEZ1VBQVFNQ0JBVUxJQUVnQWlnQ0FEWUNBQXdFQ3lBQklBSW9BZ0EyQWdBZ0JrRWdFSndCSVFjZ0FpQUNLQUlBSWc5QkJHbzJBZ0FnRHlBSE5nSUFEQU1MSUEwUXV3RU5BaUFOUVFBUXhnTW9BZ0FoQnlBQ0lBSW9BZ0FpRDBFRWFqWUNBQ0FQSUFjMkFnQU1BZ3NnREJDN0FTQVZSWElOQVNBQ0lBd1FyUUVnREJEN0FTQUNLQUlBRU5zQ05nSUFEQUVMSUFJb0FnQWhGeUFFSUJacUlnUWhCd05BQWtBZ0JTQUhUUTBBSUFaQndBQWdCeWdDQUJDeUFVVU5BQ0FIUVFScUlRY01BUXNMSUE1QkFFb0VRQ0FDS0FJQUlROGdEaUVRQTBBZ0VFVWdCQ0FIVDNKRkJFQWdCMEVFYXlJSEtBSUFJUklnQWlBUFFRUnFJaEUyQWdBZ0R5QVNOZ0lBSUJCQkFXc2hFQ0FSSVE4TUFRc0xBa0FnRUVVRVFFRUFJUklNQVFzZ0JrRXdFSndCSVJJZ0FpZ0NBQ0VQQ3dOQUlBOUJCR29oRVNBUVFRQktCRUFnRHlBU05nSUFJQkJCQVdzaEVDQVJJUThNQVFzTElBSWdFVFlDQUNBUElBazJBZ0FMQWtBZ0JDQUhSZ1JBSUFaQk1CQ2NBU0VQSUFJZ0FpZ0NBQ0lSUVFScUlnYzJBZ0FnRVNBUE5nSUFEQUVMSUFzUXV3RUVmMEYvQlNBTFFRQVFRQ3dBQUFzaEVrRUFJUTlCQUNFUUEwQWdCQ0FIUndSQUFrQWdEeUFTUndSQUlBOGhFUXdCQ3lBQ0lBSW9BZ0FpRVVFRWFqWUNBQ0FSSUFvMkFnQkJBQ0VSSUFzUU5TQVFRUUZxSWhCTkJFQWdEeUVTREFFTElBc2dFQkJBTFFBQVFmOEFSZ1JBUVg4aEVnd0JDeUFMSUJBUVFDd0FBQ0VTQ3lBSFFRUnJJZ2NvQWdBaER5QUNJQUlvQWdBaUdFRUVhallDQUNBWUlBODJBZ0FnRVVFQmFpRVBEQUVMQ3lBQ0tBSUFJUWNMSUJjZ0J4RERBd3NnRkVFQmFpRVVEQUVMQ3d1N0FnRUJmeU1BUVJCcklnb2tBQ0FKQW44Z0FBUkFJQUlRcWdjaEFBSkFJQUVFUUNBS0lBQVErUUVnQXlBS0tBSUFOZ0FBSUFvZ0FCRDNBUXdCQ3lBS0lBQVF3QU1nQXlBS0tBSUFOZ0FBSUFvZ0FCQzhBUXNnQ0NBS0VORUJJQW9RTmhvZ0JDQUFFTG9CTmdJQUlBVWdBQkNiQVRZQ0FDQUtJQUFRbWdFZ0JpQUtFSVlCSUFvUU5ob2dDaUFBRUwwQklBY2dDaERSQVNBS0VEWWFJQUFROWdFTUFRc2dBaENwQnlFQUFrQWdBUVJBSUFvZ0FCRDVBU0FESUFvb0FnQTJBQUFnQ2lBQUVQY0JEQUVMSUFvZ0FCREFBeUFESUFvb0FnQTJBQUFnQ2lBQUVMd0JDeUFJSUFvUTBRRWdDaEEyR2lBRUlBQVF1Z0UyQWdBZ0JTQUFFSnNCTmdJQUlBb2dBQkNhQVNBR0lBb1FoZ0VnQ2hBMkdpQUtJQUFRdlFFZ0J5QUtFTkVCSUFvUU5ob2dBQkQyQVFzMkFnQWdDa0VRYWlRQUM5c0ZBUXAvSXdCQkVHc2lGQ1FBSUFJZ0FEWUNBQ0FEUVlBRWNTRVdBMEFnRlVFRVJnUkFJQTBRTlVFQlN3UkFJQlFnRFJDdEFUWUNDQ0FDSUJSQkNHcEJBUkN1QnlBTkVQd0JJQUlvQWdBUTJ3STJBZ0FMSUFOQnNBRnhJZ05CRUVjRVFDQUJJQU5CSUVZRWZ5QUNLQUlBQlNBQUN6WUNBQXNnRkVFUWFpUUFEd3NDUUFKQUFrQUNRQUpBQWtBZ0NDQVZhaXdBQUE0RkFBRURBZ1FGQ3lBQklBSW9BZ0EyQWdBTUJBc2dBU0FDS0FJQU5nSUFJQVpCSUJDQ0FTRVBJQUlnQWlnQ0FDSVFRUUZxTmdJQUlCQWdEem9BQUF3REN5QU5FTHNCRFFJZ0RVRUFFRUF0QUFBaER5QUNJQUlvQWdBaUVFRUJhallDQUNBUUlBODZBQUFNQWdzZ0RCQzdBU0FXUlhJTkFTQUNJQXdRclFFZ0RCRDhBU0FDS0FJQUVOc0NOZ0lBREFFTElBSW9BZ0FoRnlBRUlBZHFJZ1FoRVFOQUFrQWdCU0FSVFEwQUlBWkJ3QUFnRVN3QUFCQ3pBVVVOQUNBUlFRRnFJUkVNQVFzTElBNGlEMEVBU2dSQUEwQWdEMFVnQkNBUlQzSkZCRUFnRVVFQmF5SVJMUUFBSVJBZ0FpQUNLQUlBSWhKQkFXbzJBZ0FnRWlBUU9nQUFJQTlCQVdzaER3d0JDd3NnRHdSL0lBWkJNQkNDQVFWQkFBc2hFZ05BSUFJZ0FpZ0NBQ0lRUVFGcU5nSUFJQTlCQUVvRVFDQVFJQkk2QUFBZ0QwRUJheUVQREFFTEN5QVFJQWs2QUFBTEFrQWdCQ0FSUmdSQUlBWkJNQkNDQVNFUElBSWdBaWdDQUNJUVFRRnFOZ0lBSUJBZ0R6b0FBQXdCQ3lBTEVMc0JCSDlCZndVZ0MwRUFFRUFzQUFBTElSQkJBQ0VQUVFBaEV3TkFJQVFnRVVZTkFRSkFJQThnRUVjRVFDQVBJUklNQVFzZ0FpQUNLQUlBSWhCQkFXbzJBZ0FnRUNBS09nQUFRUUFoRWlBTEVEVWdFMEVCYWlJVFRRUkFJQThoRUF3QkN5QUxJQk1RUUMwQUFFSC9BRVlFUUVGL0lSQU1BUXNnQ3lBVEVFQXNBQUFoRUFzZ0VVRUJheUlSTFFBQUlROGdBaUFDS0FJQUloaEJBV28yQWdBZ0dDQVBPZ0FBSUJKQkFXb2hEd3dBQ3dBTElCY2dBaWdDQUJDWkFnc2dGVUVCYWlFVkRBQUxBQXU3QWdFQmZ5TUFRUkJySWdva0FDQUpBbjhnQUFSQUlBSVFzQWNoQUFKQUlBRUVRQ0FLSUFBUStRRWdBeUFLS0FJQU5nQUFJQW9nQUJEM0FRd0JDeUFLSUFBUXdBTWdBeUFLS0FJQU5nQUFJQW9nQUJDOEFRc2dDQ0FLRUlZQklBb1FOaG9nQkNBQUVMb0JPZ0FBSUFVZ0FCQ2JBVG9BQUNBS0lBQVFtZ0VnQmlBS0VJWUJJQW9RTmhvZ0NpQUFFTDBCSUFjZ0NoQ0dBU0FLRURZYUlBQVE5Z0VNQVFzZ0FoQ3ZCeUVBQWtBZ0FRUkFJQW9nQUJENUFTQURJQW9vQWdBMkFBQWdDaUFBRVBjQkRBRUxJQW9nQUJEQUF5QURJQW9vQWdBMkFBQWdDaUFBRUx3QkN5QUlJQW9RaGdFZ0NoQTJHaUFFSUFBUXVnRTZBQUFnQlNBQUVKc0JPZ0FBSUFvZ0FCQ2FBU0FHSUFvUWhnRWdDaEEyR2lBS0lBQVF2UUVnQnlBS0VJWUJJQW9RTmhvZ0FCRDJBUXMyQWdBZ0NrRVFhaVFBQ3pFQkFYOGpBRUVRYXlJQ0pBQWdBaUFBS0FJQU5nSUlJQUpCQ0dvZ0FSRHhCU0FDS0FJSUlRQWdBa0VRYWlRQUlBQUxDd0FnQUVHSXJBUVF5UUVMQ3dBZ0FFR1FyQVFReVFFTEZRQWdBQ0FCS0FJQUVPSUVJQUVvQWdBUTdnRWFDL1FQQVF0L0l3QkJzQVJySWdza0FDQUxJQW8yQXFRRUlBc2dBVFlDcUFRQ1FDQUFJQXRCcUFScUVITUVRQ0FGSUFVb0FnQkJCSEkyQWdCQkFDRUFEQUVMSUF0QjB3STJBbUFnQ3lBTFFZZ0JhaUFMUVpBQmFpQUxRZUFBYWlJQkVHUWlEeWdDQUNJS05nS0VBU0FMSUFwQmtBTnFOZ0tBQVNBQkVFTWhFU0FMUWRBQWFoQkRJUXdnQzBGQWF4QkRJUTRnQzBFd2FoQkRJUTBnQzBFZ2FoQkRJUkFqQUVFUWF5SUJKQUFnQ3dKL0lBSUVRQ0FCSUFNUXFnY2lBaEQ1QVNBTElBRW9BZ0EyQUhnZ0FTQUNFUGNCSUEwZ0FSRFJBU0FCRURZYUlBRWdBaEM4QVNBT0lBRVEwUUVnQVJBMkdpQUxJQUlRdWdFMkFuUWdDeUFDRUpzQk5nSndJQUVnQWhDYUFTQVJJQUVRaGdFZ0FSQTJHaUFCSUFJUXZRRWdEQ0FCRU5FQklBRVFOaG9nQWhEMkFRd0JDeUFCSUFNUXFRY2lBaEQ1QVNBTElBRW9BZ0EyQUhnZ0FTQUNFUGNCSUEwZ0FSRFJBU0FCRURZYUlBRWdBaEM4QVNBT0lBRVEwUUVnQVJBMkdpQUxJQUlRdWdFMkFuUWdDeUFDRUpzQk5nSndJQUVnQWhDYUFTQVJJQUVRaGdFZ0FSQTJHaUFCSUFJUXZRRWdEQ0FCRU5FQklBRVFOaG9nQWhEMkFRczJBaHdnQVVFUWFpUUFJQWtnQ0NnQ0FEWUNBQ0FFUVlBRWNTSVNRUWwySVJOQkFDRURRUUFoQVFOQUlBRWhBZ0pBQWtBQ1FBSkFJQU5CQkVZTkFDQUFJQXRCcUFScUVJd0JSUTBBUVFBaENnSkFBa0FDUUFKQUFrQUNRQ0FMUWZnQWFpQURhaXdBQUE0RkFRQUVBd1VKQ3lBRFFRTkdEUWNnQjBFQklBQVFaeEN5QVFSQUlBdEJFR29nQUJDckJ5QVFJQXNvQWhBUXRRUU1BZ3NnQlNBRktBSUFRUVJ5TmdJQVFRQWhBQXdHQ3lBRFFRTkdEUVlMQTBBZ0FDQUxRYWdFYWhDTUFVVU5CaUFIUVFFZ0FCQm5FTElCUlEwR0lBdEJFR29nQUJDckJ5QVFJQXNvQWhBUXRRUU1BQXNBQ3dKQUlBNFFOVVVOQUNBQUVHY2dEaEE5S0FJQVJ3MEFJQUFRZkJvZ0JrRUFPZ0FBSUE0Z0FpQU9FRFZCQVVzYklRRU1CZ3NDUUNBTkVEVkZEUUFnQUJCbklBMFFQU2dDQUVjTkFDQUFFSHdhSUFaQkFUb0FBQ0FOSUFJZ0RSQTFRUUZMR3lFQkRBWUxBa0FnRGhBMVJRMEFJQTBRTlVVTkFDQUZJQVVvQWdCQkJISTJBZ0JCQUNFQURBUUxJQTRRTlVVRVFDQU5FRFZGRFFVTElBWWdEUkExUlRvQUFBd0VDeUFDSUFOQkFrbHlSUVJBUVFBaEFTQVRJQU5CQWtZZ0N5MEFlMEVBUjNGeVJRMEZDeUFMSUF3UXJRRTJBZ2dnQzBFUWFpQUxRUWhxRUo4QklRUUNRQ0FEUlEwQUlBTWdDMm90QUhkQkFVc05BQU5BQWtBZ0N5QU1FUHNCTmdJSUlBUWdDMEVJYWhCL1JRMEFJQWRCQVNBRUtBSUFLQUlBRUxJQlJRMEFJQVFRaUFJTUFRc0xJQXNnREJDdEFUWUNDQ0FFSUF0QkNHb1E5UU1pQVNBUUVEVk5CRUFnQ3lBUUVQc0JOZ0lJSUF0QkNHcEJBQ0FCYXhDb0J5RUtJQkFRK3dFaEZDQU1FSzBCSVJVakFFRWdheUlCSkFBZ0FTQVVOZ0lRSUFFZ0NqWUNHQ0FCSUJVMkFnZ0RRQUpBSUFGQkdHb2dBVUVRYWhCL0lncEZEUUFnQVNnQ0dDQUJLQUlJRUtnQlJRMEFJQUZCR0dvUWlBSWdBVUVJYWhDSUFnd0JDd3NnQVVFZ2FpUUFJQXBCQVhNTkFRc2dDeUFNRUswQk5nSUFJQVFnQzBFSWFpQUxFSjhCS0FJQU5nSUFDeUFMSUFRb0FnQTJBZ2dEUUFKQUlBc2dEQkQ3QVRZQ0FDQUxRUWhxSUFzUWYwVU5BQ0FBSUF0QnFBUnFFSXdCUlEwQUlBQVFaeUFMS0FJSUtBSUFSdzBBSUFBUWZCb2dDMEVJYWhDSUFnd0JDd3NnRWtVTkF5QUxJQXdRK3dFMkFnQWdDMEVJYWlBTEVIOUZEUU1nQlNBRktBSUFRUVJ5TmdJQVFRQWhBQXdDQ3dOQUFrQWdBQ0FMUWFnRWFoQ01BVVVOQUFKL0lBZEJ3QUFnQUJCbklnRVFzZ0VFUUNBSktBSUFJZ1FnQ3lnQ3BBUkdCRUFnQ0NBSklBdEJwQVJxRUw4Q0lBa29BZ0FoQkFzZ0NTQUVRUVJxTmdJQUlBUWdBVFlDQUNBS1FRRnFEQUVMSUJFUU5VVWdDa1Z5RFFFZ0FTQUxLQUp3UncwQklBc29Bb1FCSWdFZ0N5Z0NnQUZHQkVBZ0R5QUxRWVFCYWlBTFFZQUJhaEMvQWlBTEtBS0VBU0VCQ3lBTElBRkJCR28yQW9RQklBRWdDallDQUVFQUN5RUtJQUFRZkJvTUFRc0xJQXBGSUFzb0FvUUJJZ0VnRHlnQ0FFWnlSUVJBSUFzb0FvQUJJQUZHQkVBZ0R5QUxRWVFCYWlBTFFZQUJhaEMvQWlBTEtBS0VBU0VCQ3lBTElBRkJCR28yQW9RQklBRWdDallDQUFzQ1FDQUxLQUljUVFCTURRQUNRQ0FBSUF0QnFBUnFFSE5GQkVBZ0FCQm5JQXNvQW5SR0RRRUxJQVVnQlNnQ0FFRUVjallDQUVFQUlRQU1Bd3NEUUNBQUVId2FJQXNvQWh4QkFFd05BUUpBSUFBZ0MwR29CR29RYzBVRVFDQUhRY0FBSUFBUVp4Q3lBUTBCQ3lBRklBVW9BZ0JCQkhJMkFnQkJBQ0VBREFRTElBa29BZ0FnQ3lnQ3BBUkdCRUFnQ0NBSklBdEJwQVJxRUw4Q0N5QUFFR2NoQVNBSklBa29BZ0FpQkVFRWFqWUNBQ0FFSUFFMkFnQWdDeUFMS0FJY1FRRnJOZ0ljREFBTEFBc2dBaUVCSUFnb0FnQWdDU2dDQUVjTkF5QUZJQVVvQWdCQkJISTJBZ0JCQUNFQURBRUxBa0FnQWtVTkFFRUJJUW9EUUNBQ0VEVWdDazBOQVFKQUlBQWdDMEdvQkdvUWMwVUVRQ0FBRUdjZ0FpQUtFTVlES0FJQVJnMEJDeUFGSUFVb0FnQkJCSEkyQWdCQkFDRUFEQU1MSUFBUWZCb2dDa0VCYWlFS0RBQUxBQXRCQVNFQUlBOG9BZ0FnQ3lnQ2hBRkdEUUJCQUNFQUlBdEJBRFlDRUNBUklBOG9BZ0FnQ3lnQ2hBRWdDMEVRYWhDS0FTQUxLQUlRQkVBZ0JTQUZLQUlBUVFSeU5nSUFEQUVMUVFFaEFBc2dFQkEyR2lBTkVEWWFJQTRRTmhvZ0RCQTJHaUFSRURZYUlBOFFZd3dEQ3lBQ0lRRUxJQU5CQVdvaEF3d0FDd0FMSUF0QnNBUnFKQUFnQUFzZEFDQUFJQUVRdGdFUWV5QUJFRTRvQWdBaEFTQUFFRTRnQVRZQ0FBczBBUUYvSXdCQkVHc2lBaVFBSUFJZ0FDZ0NBRFlDQ0NBQ0lBSW9BZ2dnQVdvMkFnZ2dBaWdDQ0NFQUlBSkJFR29rQUNBQUN3c0FJQUJCK0tzRUVNa0JDd3NBSUFCQmdLd0VFTWtCQzhNQkFRWi9Jd0JCRUdzaUJDUUFJQUFRVGlnQ0FDRUZBbjhnQWlnQ0FDQUFLQUlBYXlJRFFmLy8vLzhIU1FSQUlBTkJBWFFNQVF0QmZ3c2lBMEVCSUFNYklRTWdBU2dDQUNFR0lBQW9BZ0FoQnlBRlFkTUNSZ1IvUVFBRklBQW9BZ0FMSUFNUXl3SWlDQVJBSUFWQjB3SkhCRUFnQUJDMkFSb0xJQVJCMGdJMkFnUWdBQ0FFUVFocUlBZ2dCRUVFYWhCa0lnVVFyUWNnQlJCaklBRWdBQ2dDQUNBR0lBZHJhallDQUNBQ0lBTWdBQ2dDQUdvMkFnQWdCRUVRYWlRQUR3c1FkUUFMSlFFQmZ5QUJLQUlBRU9nRVFSaDBRUmgxSVFJZ0FDQUJLQUlBTmdJRUlBQWdBam9BQUF1ZEVBRUxmeU1BUWJBRWF5SUxKQUFnQ3lBS05nS2tCQ0FMSUFFMkFxZ0VBa0FnQUNBTFFhZ0VhaEIwQkVBZ0JTQUZLQUlBUVFSeU5nSUFRUUFoQUF3QkN5QUxRZE1DTmdKb0lBc2dDMEdJQVdvZ0MwR1FBV29nQzBIb0FHb2lBUkJrSWc4b0FnQWlDallDaEFFZ0N5QUtRWkFEYWpZQ2dBRWdBUkJESVJFZ0MwSFlBR29RUXlFTUlBdEJ5QUJxRUVNaERpQUxRVGhxRUVNaERTQUxRU2hxRUVNaEVDTUFRUkJySWdFa0FDQUxBbjhnQWdSQUlBRWdBeEN3QnlJQ0VQa0JJQXNnQVNnQ0FEWUFlQ0FCSUFJUTl3RWdEU0FCRUlZQklBRVFOaG9nQVNBQ0VMd0JJQTRnQVJDR0FTQUJFRFlhSUFzZ0FoQzZBVG9BZHlBTElBSVFtd0U2QUhZZ0FTQUNFSm9CSUJFZ0FSQ0dBU0FCRURZYUlBRWdBaEM5QVNBTUlBRVFoZ0VnQVJBMkdpQUNFUFlCREFFTElBRWdBeEN2QnlJQ0VQa0JJQXNnQVNnQ0FEWUFlQ0FCSUFJUTl3RWdEU0FCRUlZQklBRVFOaG9nQVNBQ0VMd0JJQTRnQVJDR0FTQUJFRFlhSUFzZ0FoQzZBVG9BZHlBTElBSVFtd0U2QUhZZ0FTQUNFSm9CSUJFZ0FSQ0dBU0FCRURZYUlBRWdBaEM5QVNBTUlBRVFoZ0VnQVJBMkdpQUNFUFlCQ3pZQ0pDQUJRUkJxSkFBZ0NTQUlLQUlBTmdJQUlBUkJnQVJ4SWhKQkNYWWhFMEVBSVFOQkFDRUJBMEFnQVNFQ0FrQUNRQUpBQWtBZ0EwRUVSZzBBSUFBZ0MwR29CR29RalFGRkRRQkJBQ0VLQWtBQ1FBSkFBa0FDUUFKQUlBdEIrQUJxSUFOcUxBQUFEZ1VCQUFRREJRa0xJQU5CQTBZTkJ5QUhRUUVnQUJCb0VMTUJCRUFnQzBFWWFpQUFFTElISUJBZ0N5d0FHQkMyQkF3Q0N5QUZJQVVvQWdCQkJISTJBZ0JCQUNFQURBWUxJQU5CQTBZTkJnc0RRQ0FBSUF0QnFBUnFFSTBCUlEwR0lBZEJBU0FBRUdnUXN3RkZEUVlnQzBFWWFpQUFFTElISUJBZ0N5d0FHQkMyQkF3QUN3QUxBa0FnRGhBMVJRMEFJQUFRYUVIL0FYRWdEa0VBRUVBdEFBQkhEUUFnQUJCOUdpQUdRUUE2QUFBZ0RpQUNJQTRRTlVFQlN4c2hBUXdHQ3dKQUlBMFFOVVVOQUNBQUVHaEIvd0Z4SUExQkFCQkFMUUFBUncwQUlBQVFmUm9nQmtFQk9nQUFJQTBnQWlBTkVEVkJBVXNiSVFFTUJnc0NRQ0FPRURWRkRRQWdEUkExUlEwQUlBVWdCU2dDQUVFRWNqWUNBRUVBSVFBTUJBc2dEaEExUlFSQUlBMFFOVVVOQlFzZ0JpQU5FRFZGT2dBQURBUUxJQUlnQTBFQ1NYSkZCRUJCQUNFQklCTWdBMEVDUmlBTExRQjdRUUJIY1hKRkRRVUxJQXNnREJDdEFUWUNFQ0FMUVJocUlBdEJFR29RbndFaEJBSkFJQU5GRFFBZ0F5QUxhaTBBZDBFQlN3MEFBMEFDUUNBTElBd1EvQUUyQWhBZ0JDQUxRUkJxRUg5RkRRQWdCMEVCSUFRb0FnQXNBQUFRc3dGRkRRQWdCQkR5QWd3QkN3c2dDeUFNRUswQk5nSVFJQVFvQWdBZ0N5Z0NFR3NpQVNBUUVEVk5CRUFnQ3lBUUVQd0JOZ0lRSUF0QkVHcEJBQ0FCYXhDdUJ5RUtJQkFRL0FFaEZDQU1FSzBCSVJVakFFRWdheUlCSkFBZ0FTQVVOZ0lRSUFFZ0NqWUNHQ0FCSUJVMkFnZ0RRQUpBSUFGQkdHb2dBVUVRYWhCL0lncEZEUUFnQVNnQ0dDMEFBQ0FCS0FJSUxRQUFSdzBBSUFGQkdHb1E4Z0lnQVVFSWFoRHlBZ3dCQ3dzZ0FVRWdhaVFBSUFwQkFYTU5BUXNnQ3lBTUVLMEJOZ0lJSUFRZ0MwRVFhaUFMUVFocUVKOEJLQUlBTmdJQUN5QUxJQVFvQWdBMkFoQURRQUpBSUFzZ0RCRDhBVFlDQ0NBTFFSQnFJQXRCQ0dvUWYwVU5BQ0FBSUF0QnFBUnFFSTBCUlEwQUlBQVFhRUgvQVhFZ0N5Z0NFQzBBQUVjTkFDQUFFSDBhSUF0QkVHb1E4Z0lNQVFzTElCSkZEUU1nQ3lBTUVQd0JOZ0lJSUF0QkVHb2dDMEVJYWhCL1JRMERJQVVnQlNnQ0FFRUVjallDQUVFQUlRQU1BZ3NEUUFKQUlBQWdDMEdvQkdvUWpRRkZEUUFDZnlBSFFjQUFJQUFRYUNJQkVMTUJCRUFnQ1NnQ0FDSUVJQXNvQXFRRVJnUkFJQWdnQ1NBTFFhUUVhaEN4QnlBSktBSUFJUVFMSUFrZ0JFRUJhallDQUNBRUlBRTZBQUFnQ2tFQmFnd0JDeUFSRURWRklBcEZjZzBCSUFzdEFIWWdBVUgvQVhGSERRRWdDeWdDaEFFaUFTQUxLQUtBQVVZRVFDQVBJQXRCaEFGcUlBdEJnQUZxRUw4Q0lBc29Bb1FCSVFFTElBc2dBVUVFYWpZQ2hBRWdBU0FLTmdJQVFRQUxJUW9nQUJCOUdnd0JDd3NnQ2tVZ0N5Z0NoQUVpQVNBUEtBSUFSbkpGQkVBZ0N5Z0NnQUVnQVVZRVFDQVBJQXRCaEFGcUlBdEJnQUZxRUw4Q0lBc29Bb1FCSVFFTElBc2dBVUVFYWpZQ2hBRWdBU0FLTmdJQUN3SkFJQXNvQWlSQkFFd05BQUpBSUFBZ0MwR29CR29RZEVVRVFDQUFFR2hCL3dGeElBc3RBSGRHRFFFTElBVWdCU2dDQUVFRWNqWUNBRUVBSVFBTUF3c0RRQ0FBRUgwYUlBc29BaVJCQUV3TkFRSkFJQUFnQzBHb0JHb1FkRVVFUUNBSFFjQUFJQUFRYUJDekFRMEJDeUFGSUFVb0FnQkJCSEkyQWdCQkFDRUFEQVFMSUFrb0FnQWdDeWdDcEFSR0JFQWdDQ0FKSUF0QnBBUnFFTEVIQ3lBQUVHZ2hBU0FKSUFrb0FnQWlCRUVCYWpZQ0FDQUVJQUU2QUFBZ0N5QUxLQUlrUVFGck5nSWtEQUFMQUFzZ0FpRUJJQWdvQWdBZ0NTZ0NBRWNOQXlBRklBVW9BZ0JCQkhJMkFnQkJBQ0VBREFFTEFrQWdBa1VOQUVFQklRb0RRQ0FDRURVZ0NrME5BUUpBSUFBZ0MwR29CR29RZEVVRVFDQUFFR2hCL3dGeElBSWdDaEJBTFFBQVJnMEJDeUFGSUFVb0FnQkJCSEkyQWdCQkFDRUFEQU1MSUFBUWZSb2dDa0VCYWlFS0RBQUxBQXRCQVNFQUlBOG9BZ0FnQ3lnQ2hBRkdEUUJCQUNFQUlBdEJBRFlDR0NBUklBOG9BZ0FnQ3lnQ2hBRWdDMEVZYWhDS0FTQUxLQUlZQkVBZ0JTQUZLQUlBUVFSeU5nSUFEQUVMUVFFaEFBc2dFQkEyR2lBTkVEWWFJQTRRTmhvZ0RCQTJHaUFSRURZYUlBOFFZd3dEQ3lBQ0lRRUxJQU5CQVdvaEF3d0FDd0FMSUF0QnNBUnFKQUFnQUFzTUFDQUFRUUZCTFJEQUJ4b0xEQUFnQUVFQlFTMFF4QWNhQ3h3QkFYOGdBQzBBQUNFQ0lBQWdBUzBBQURvQUFDQUJJQUk2QUFBTFpBRUJmeU1BUVJCcklnWWtBQ0FHUVFBNkFBOGdCaUFGT2dBT0lBWWdCRG9BRFNBR1FTVTZBQXdnQlFSQUlBWkJEV29nQmtFT2FoQzJCd3NnQWlBQklBRWdBaWdDQUJDakJpQUdRUXhxSUFNZ0FDZ0NBQkFjSUFGcU5nSUFJQVpCRUdva0FBdENBQ0FCSUFJZ0F5QUVRUVFRMGdFaEFTQURMUUFBUVFSeFJRUkFJQUFnQVVIUUQyb2dBVUhzRG1vZ0FTQUJRZVFBU0JzZ0FVSEZBRWdiUWV3T2F6WUNBQXNMUUFBZ0FpQURJQUJCQ0dvZ0FDZ0NDQ2dDQkJFQUFDSUFJQUJCb0FKcUlBVWdCRUVBRU1jRElBQnJJZ0JCbndKTUJFQWdBU0FBUVF4dFFReHZOZ0lBQ3d0QUFDQUNJQU1nQUVFSWFpQUFLQUlJS0FJQUVRQUFJZ0FnQUVHb0FXb2dCU0FFUVFBUXh3TWdBR3NpQUVHbkFVd0VRQ0FCSUFCQkRHMUJCMjgyQWdBTEN6RUJBbjhqQUVFUWF5SUNKQUFnQWtFSWFpSURJQUFRVENBREVKa0JJQUVRZ2dFaEFDQURFRVlnQWtFUWFpUUFJQUFMUWdBZ0FTQUNJQU1nQkVFRUVOTUJJUUVnQXkwQUFFRUVjVVVFUUNBQUlBRkIwQTlxSUFGQjdBNXFJQUVnQVVIa0FFZ2JJQUZCeFFCSUcwSHNEbXMyQWdBTEMwQUFJQUlnQXlBQVFRaHFJQUFvQWdnb0FnUVJBQUFpQUNBQVFhQUNhaUFGSUFSQkFCREpBeUFBYXlJQVFaOENUQVJBSUFFZ0FFRU1iVUVNYnpZQ0FBc0xRQUFnQWlBRElBQkJDR29nQUNnQ0NDZ0NBQkVBQUNJQUlBQkJxQUZxSUFVZ0JFRUFFTWtESUFCcklnQkJwd0ZNQkVBZ0FTQUFRUXh0UVFkdk5nSUFDd3ZSRHdJVmZ3RitJd0JCMEIxcklnUWtBQ0FFUWRBY2FpSVFRY0RiQUVFOEVENGFJQVJCa0J4cUlncEJnTndBUWNBQUVENGFJQVJCa0J0cVFjRGNBRUg4QUJBK0dpQUVRWkFhYWtIQTNRQkJnQUVRUGhvZ0JFR1FGbXBCd040QVFmd0RFRDRhSUFSQmtCSnFRY0RpQUVHQUJCQStHa0YwSVJKQkFpRUxRUTBoRVVFUElRNENmd0pBQWtBQ1FBSkFBa0FDUUNBQVFZUUlhdzRDQVFNQUN5QUFRWVFHUmdSQVFRRWhDMEYzSVJJTUJBc2dBRUdGQ2tZTkFVRi9JQUJCamhaSERRVWFJQVJCa0JKcUlRb2dCRUdRRm1vaEVFRkFJUkpCK0FBaEVVSC9BQ0VPUVFraEN3d0VDMEY3SVJJTUFndEJlU0VTUVFNaEN3c2dCRUdRR21vaENpQUVRWkFiYWlFUVFSWWhFVUVmSVE0TFFRQWhBQU4vSUFBZ0VVWUVmeUFFUVpBZGFnVWdCRUdRSFdvZ0FHb2dBYWRCQVhFNkFBQWdBRUVCYWlFQUlBRkNBWWdoQVF3QkN3c2hBZ3NnQzBFQmRDSVRRUUZ5SVFoQkFTRUZBMEFnQlNBSVJrVUVRRUVBSVFjZ0JFR3dCR29nQlVFQ2RHb2lCa0VBTmdJQVFRQWhBQU5BSUFBZ0VVY0VRQ0FBSUFKcUxRQUFCRUFnQmlBSElCQWdBQ0FGYkNBT2NFRUNkR29vQWdCeklnYzJBZ0FMSUFCQkFXb2hBQXdCQ3dzZ0JpQUtJQWRCQW5ScUtBSUFOZ0lBUVFFZ0ZDQUhHeUVVSUFWQkFXb2hCUXdCQ3dzQ1FDQVVSUTBBSUFSQkFEWUNvQVlnQkNBRUtBSzBCRFlDcEFZZ0JFRUJOZ0s0QnlBRVFRQTJBdkFHUVFFaEFBTkFJQUFnRTBaRkJFQWdCRUh3Qm1vZ0FFRUNkR29pQjBGL05nSUFJQWRCQURZQ1NDQUFRUUZxSVFBTUFRc0xJQVJDLy8vLy93ODNBNEFGSUFSQ0FEY0QwQVVnRTBFQmF5RVhRUUFoQ0VFQUlRWURRQUpBSUFSQm9BWnFJQVlpQjBFQmFpSU5RUUowYWlnQ0FDSU1RWDlHQkVBZ0JFSFFCV29nQmtFQ2FpSUhRUUowYWlBSU5nSUFJQWhCZnlBSVFRQk9HMEVCYWlFRlFRQWhBQU5BSUFBZ0JVWU5BaUFBUVFKMElna2dCRUh3Qm1vaURDQUhRY2dBYkdwcUlBMUJ5QUJzSUF4cUlBbHFJZ2tvQWdBaUREWUNBQ0FKSUFvZ0RFRUNkR29vQWdBMkFnQWdBRUVCYWlFQURBQUxBQXNEUUNBRVFhQUdhaUFISWdCQkFuUnFLQUlBUVg5R0JFQWdBRUVCYXlFSElBQkJBRW9OQVFzTElBQWhCU0FBUVFCS0JFQURRQ0FBUVFGcklnZEJBblFpQ1NBRVFhQUdhbW9vQWdCQmYwY0VRQ0FISUFVZ0JFR0FCV29pRHlBRlFRSjBhaWdDQUNBSklBOXFLQUlBU0JzaEJRc2dBRUVCU3lFSklBY2hBQ0FKRFFBTEN5QUVRZEFGYWlJQUlBWkJBbW9pQjBFQ2RHb2dDQ0FOSUFWcklnOGdBQ0FGUVFKMEloVnFJaFlvQWdCcUlnQWdBQ0FJU0JzaUNUWUNBRUVBSVFBRFFDQUFJQk5HQkVBZ0RDQU9haUVNSUJZb0FnQWlBRUYvSUFCQkFFNGJRUUZxSVJZZ0JFR2dCbW9nRldvaEZVRUFJUUFEUUNBQUlCWkdCRUFnQ0VGL0lBaEJBRTRiUVFGcUlRVkJBQ0VBQTBBZ0FDQUZSZ1JBSUFraENBd0dCU0FBUVFKMElnZ2dCRUh3Qm1vaUR5QUhRY2dBYkdwcUlnd2dEVUhJQUd3Z0Qyb2dDR29pQ0NnQ0FDSVBJQXdvQWdCek5nSUFJQWdnQ2lBUFFRSjBhaWdDQURZQ0FDQUFRUUZxSVFBTUFRc0FDd0FMSUFSQjhBWnFJQVZCeUFCc2FpQUFRUUowYWlnQ0FDSVlRWDlIQkVBZ0JFSHdCbW9nQjBISUFHeHFJQUFnRDJwQkFuUnFJQkFnRENBWWFpQVZLQUlBYXlBT2IwRUNkR29vQWdBMkFnQUxJQUJCQVdvaEFBd0FDd0FGSUFSQjhBWnFJQWRCeUFCc2FpQUFRUUowYWtFQU5nSUFJQUJCQVdvaEFBd0JDd0FMQUFzZ0IwRUNkQ0lBSUFSQmdBVnFhaUFOSUFock5nSUFJQVlnRjBjRVFDQUVRYUFHYWlBQWFpSUZJQVJCc0FScUlBQnFLQUlBSWdaQmYwWUVmMEVBQlNBUUlBWkJBblJxS0FJQUN5SUdOZ0lBUVFFaEFDQUlRUUFnQ0VFQVNodEJBV29oQ1FOQUlBQWdDVVpGQkVBQ1FDQUVRYkFFYWlBSElBQnJRUUowYWlnQ0FDSU1RWDlHRFFBZ0JFSHdCbW9nQjBISUFHeHFJQUJCQW5ScUtBSUFJZzlGRFFBZ0JTQUdJQkFnQ2lBUFFRSjBhaWdDQUNBTWFpQU9iMEVDZEdvb0FnQnpJZ1kyQWdBTElBQkJBV29oQUF3QkN3c2dCU0FLSUFaQkFuUnFLQUlBTmdJQUlBMGhCaUFJSUF0TURRRUxDMEYvSUFnZ0Mwb05BUnBCQUNFQUlBaEJBV29pQmtFQUlBWkJBRW9iSVFVZ0JFSHdCbW9nQjBISUFHeHFJUTBEUUNBQUlBVkdCRUFnQmtFQklBWkJBVW9iSVEwZ0JFSHdCbW9nQjBISUFHeHFJUVpCQVNFQUEwQWdBQ0FOUmdSQUlBNUJBV29oQ1VFQUlRWkJBU0VGQTBCQkFTRUFRUUVoQ2lBRklBbEdSUVJBQTBBZ0FDQU5Sa1VFUUNBRUlBQkJBblJxSWdzb0FnQWlFMEYvUndSQUlBc2dBQ0FUYWlBT2J5SUxOZ0lBSUJBZ0MwRUNkR29vQWdBZ0NuTWhDZ3NnQUVFQmFpRUFEQUVMQ3lBS1JRUkFJQVJCTUdvZ0JrRUNkR29nRGlBRmF6WUNBQ0FHUVFGcUlRWUxJQVZCQVdvaEJRd0JDd3RCZnlBR0lBaEhEUVVhUVFBaEFDQUlRUUFnQ0VFQVNoc2hCZ05BSUFBZ0JrWU5CU0FDSUFSQk1Hb2dBRUVDZEdvb0FnQnFJZ1VnQlMwQUFFRUJjem9BQUNBQVFRRnFJUUFNQUFzQUJTQUVJQUJCQW5RaUJXb2dCU0FHYWlnQ0FEWUNBQ0FBUVFGcUlRQU1BUXNBQ3dBRklBMGdBRUVDZEdvaUNTQUtJQWtvQWdCQkFuUnFLQUlBTmdJQUlBQkJBV29oQUF3QkN3QUxBQXNnQTBJQU53TUFJQkVnRW1vaEFFSUJJUUVEUUNBQUlCRkdSUVJBSUFNZ0FTQUFJQUpxTVFBQWZpQVpmQ0laTndNQUlBQkJBV29oQUNBQlFnR0dJUUVNQVFzTFFRQWdGRVVOQUJvZ0JFSFFCV29nQjBFQ2RHb29BZ0FMSVFVZ0JFSFFIV29rQUNBRkM4SUJBUVYvSXdCQkVHc2lCeVFBSXdCQkVHc2lCU1FBSUFBaEF3SkFJQUZCNy8vLy93Tk5CRUFDUUNBQkVMMERCRUFnQXlBQkVKSUJJQU1oQmd3QkN5QURJQU1nQVJDOUFrRUJhaUlBRUx3Q0lnWVFtQUVnQXlBQUVMRUJJQU1nQVJDSkFRc2dCaUVFSUFFaUFBUi9JQUFFUUFOQUlBUWdBallDQUNBRVFRUnFJUVFnQUVFQmF5SUFEUUFMQzBFQUJTQUVDeG9nQlVFQU5nSU1JQVlnQVVFQ2RHb2dCVUVNYWhDckFTQUZRUkJxSkFBTUFRc1FzQUVBQ3lBSFFSQnFKQUFnQXd1OUJRRUtmeU1BUVJCcklna2tBQ0FHRUpRQklRb2dDU0FHRU1VQ0lnMFFtZ0VnQlNBRE5nSUFBa0FDUUNBQUlnY3RBQUFpQmtFcmF3NERBQUVBQVFzZ0NpQUdRUmgwUVJoMUVKd0JJUVlnQlNBRktBSUFJZ2RCQkdvMkFnQWdCeUFHTmdJQUlBQkJBV29oQndzQ1FBSkFJQUlnQnlJR2EwRUJUQTBBSUFjdEFBQkJNRWNOQUNBSExRQUJRU0J5UWZnQVJ3MEFJQXBCTUJDY0FTRUdJQVVnQlNnQ0FDSUlRUVJxTmdJQUlBZ2dCallDQUNBS0lBY3NBQUVRbkFFaEJpQUZJQVVvQWdBaUNFRUVhallDQUNBSUlBWTJBZ0FnQjBFQ2FpSUhJUVlEUUNBQ0lBWk5EUUlnQml3QUFCQlpFTTBFUlEwQ0lBWkJBV29oQmd3QUN3QUxBMEFnQWlBR1RRMEJJQVlzQUFBaENCQlpHaUFJRU1BQlJRMEJJQVpCQVdvaEJnd0FDd0FMQWtBZ0NSQzdBUVJBSUFvZ0J5QUdJQVVvQWdBUTR3RWdCU0FGS0FJQUlBWWdCMnRCQW5ScU5nSUFEQUVMSUFjZ0JoQ1pBaUFORUpzQklRNGdCeUVJQTBBZ0JpQUlUUVJBSUFNZ0J5QUFhMEVDZEdvZ0JTZ0NBQkREQXdVQ1FDQUpJQXNRUUN3QUFFRUFUQTBBSUF3Z0NTQUxFRUFzQUFCSERRQWdCU0FGS0FJQUlneEJCR28yQWdBZ0RDQU9OZ0lBSUFzZ0N5QUpFRFZCQVd0SmFpRUxRUUFoREFzZ0NpQUlMQUFBRUp3QklROGdCU0FGS0FJQUloQkJCR28yQWdBZ0VDQVBOZ0lBSUFoQkFXb2hDQ0FNUVFGcUlRd01BUXNMQ3dKQUFrQURRQ0FDSUFaTkRRRWdCaTBBQUNJSFFTNUhCRUFnQ2lBSFFSaDBRUmgxRUp3QklRY2dCU0FGS0FJQUlnaEJCR28yQWdBZ0NDQUhOZ0lBSUFaQkFXb2hCZ3dCQ3dzZ0RSQzZBU0VISUFVZ0JTZ0NBQ0lMUVFScUlnZzJBZ0FnQ3lBSE5nSUFJQVpCQVdvaEJnd0JDeUFGS0FJQUlRZ0xJQW9nQmlBQ0lBZ1E0d0VnQlNBRktBSUFJQUlnQm10QkFuUnFJZ1UyQWdBZ0JDQUZJQU1nQVNBQWEwRUNkR29nQVNBQ1JoczJBZ0FnQ1JBMkdpQUpRUkJxSkFBTER3QWdBQ2dDREJvZ0FFRUFOZ0lNQzk0REFRaC9Jd0JCRUdzaUNpUUFJQVlRbEFFaEN5QUtJQVlReFFJaUJoQ2FBUUpBSUFvUXV3RUVRQ0FMSUFBZ0FpQURFT01CSUFVZ0F5QUNJQUJyUVFKMGFpSUdOZ0lBREFFTElBVWdBellDQUFKQUFrQWdBQ0lJTFFBQUlnZEJLMnNPQXdBQkFBRUxJQXNnQjBFWWRFRVlkUkNjQVNFSUlBVWdCU2dDQUNJSFFRUnFOZ0lBSUFjZ0NEWUNBQ0FBUVFGcUlRZ0xBa0FnQWlBSWEwRUNTQTBBSUFndEFBQkJNRWNOQUNBSUxRQUJRU0J5UWZnQVJ3MEFJQXRCTUJDY0FTRUhJQVVnQlNnQ0FDSUpRUVJxTmdJQUlBa2dCellDQUNBTElBZ3NBQUVRbkFFaEJ5QUZJQVVvQWdBaUNVRUVhallDQUNBSklBYzJBZ0FnQ0VFQ2FpRUlDeUFJSUFJUW1RSkJBQ0VKSUFZUW13RWhERUVBSVFjZ0NDRUdBMzhnQWlBR1RRUi9JQU1nQ0NBQWEwRUNkR29nQlNnQ0FCRERBeUFGS0FJQUJRSkFJQW9nQnhCQUxRQUFSUTBBSUFrZ0NpQUhFRUFzQUFCSERRQWdCU0FGS0FJQUlnbEJCR28yQWdBZ0NTQU1OZ0lBSUFjZ0J5QUtFRFZCQVd0SmFpRUhRUUFoQ1FzZ0N5QUdMQUFBRUp3QklRMGdCU0FGS0FJQUlnNUJCR28yQWdBZ0RpQU5OZ0lBSUFaQkFXb2hCaUFKUVFGcUlRa01BUXNMSVFZTElBUWdCaUFESUFFZ0FHdEJBblJxSUFFZ0FrWWJOZ0lBSUFvUU5ob2dDa0VRYWlRQUM0MEJBUVIvSXdCQkVHc2lCU1FBSXdCQkVHc2lBeVFBQWtBZ0FVRnZUUVJBQWtBZ0FSRDhBZ1JBSUFBZ0FSQ1NBU0FBSVFRTUFRc2dBQ0FCRUpzQ1FRRnFJZ1lRVnlJRUVKZ0JJQUFnQmhDeEFTQUFJQUVRaVFFTElBUWdBU0FDRUlBSElBTkJBRG9BRHlBQklBUnFJQU5CRDJvUWl3RWdBMEVRYWlRQURBRUxFTEFCQUFzZ0JVRVFhaVFBSUFBTHFBVUJDbjhqQUVFUWF5SUpKQUFnQmhDWkFTRUtJQWtnQmhESEFpSU5FSm9CSUFVZ0F6WUNBQUpBQWtBZ0FDSUhMUUFBSWdaQksyc09Bd0FCQUFFTElBb2dCa0VZZEVFWWRSQ0NBU0VHSUFVZ0JTZ0NBQ0lIUVFGcU5nSUFJQWNnQmpvQUFDQUFRUUZxSVFjTEFrQUNRQ0FDSUFjaUJtdEJBVXdOQUNBSExRQUFRVEJIRFFBZ0J5MEFBVUVnY2tINEFFY05BQ0FLUVRBUWdnRWhCaUFGSUFVb0FnQWlDRUVCYWpZQ0FDQUlJQVk2QUFBZ0NpQUhMQUFCRUlJQklRWWdCU0FGS0FJQUlnaEJBV28yQWdBZ0NDQUdPZ0FBSUFkQkFtb2lCeUVHQTBBZ0FpQUdUUTBDSUFZc0FBQVFXUkROQkVVTkFpQUdRUUZxSVFZTUFBc0FDd05BSUFJZ0JrME5BU0FHTEFBQUlRZ1FXUm9nQ0JEQUFVVU5BU0FHUVFGcUlRWU1BQXNBQ3dKQUlBa1F1d0VFUUNBS0lBY2dCaUFGS0FJQUVQMEJJQVVnQlNnQ0FDQUdJQWRyYWpZQ0FBd0JDeUFISUFZUW1RSWdEUkNiQVNFT0lBY2hDQU5BSUFZZ0NFMEVRQ0FESUFjZ0FHdHFJQVVvQWdBUW1RSUZBa0FnQ1NBTUVFQXNBQUJCQUV3TkFDQUxJQWtnREJCQUxBQUFSdzBBSUFVZ0JTZ0NBQ0lMUVFGcU5nSUFJQXNnRGpvQUFDQU1JQXdnQ1JBMVFRRnJTV29oREVFQUlRc0xJQW9nQ0N3QUFCQ0NBU0VQSUFVZ0JTZ0NBQ0lRUVFGcU5nSUFJQkFnRHpvQUFDQUlRUUZxSVFnZ0MwRUJhaUVMREFFTEN3c0RRQUpBSUFJZ0Jrc0VRQ0FHTFFBQUlnZEJMa2NOQVNBTkVMb0JJUWNnQlNBRktBSUFJZ2hCQVdvMkFnQWdDQ0FIT2dBQUlBWkJBV29oQmdzZ0NpQUdJQUlnQlNnQ0FCRDlBU0FGSUFVb0FnQWdBaUFHYTJvaUJUWUNBQ0FFSUFVZ0F5QUJJQUJyYWlBQklBSkdHellDQUNBSkVEWWFJQWxCRUdva0FBOExJQW9nQjBFWWRFRVlkUkNDQVNFSElBVWdCU2dDQUNJSVFRRnFOZ0lBSUFnZ0J6b0FBQ0FHUVFGcUlRWU1BQXNBQzlVREFRaC9Jd0JCRUdzaUNpUUFJQVlRbVFFaEN5QUtJQVlReHdJaUJoQ2FBUUpBSUFvUXV3RUVRQ0FMSUFBZ0FpQURFUDBCSUFVZ0F5QUNJQUJyYWlJR05nSUFEQUVMSUFVZ0F6WUNBQUpBQWtBZ0FDSUlMUUFBSWdkQksyc09Bd0FCQUFFTElBc2dCMEVZZEVFWWRSQ0NBU0VJSUFVZ0JTZ0NBQ0lIUVFGcU5nSUFJQWNnQ0RvQUFDQUFRUUZxSVFnTEFrQWdBaUFJYTBFQ1NBMEFJQWd0QUFCQk1FY05BQ0FJTFFBQlFTQnlRZmdBUncwQUlBdEJNQkNDQVNFSElBVWdCU2dDQUNJSlFRRnFOZ0lBSUFrZ0J6b0FBQ0FMSUFnc0FBRVFnZ0VoQnlBRklBVW9BZ0FpQ1VFQmFqWUNBQ0FKSUFjNkFBQWdDRUVDYWlFSUN5QUlJQUlRbVFKQkFDRUpJQVlRbXdFaERFRUFJUWNnQ0NFR0EzOGdBaUFHVFFSL0lBTWdDQ0FBYTJvZ0JTZ0NBQkNaQWlBRktBSUFCUUpBSUFvZ0J4QkFMUUFBUlEwQUlBa2dDaUFIRUVBc0FBQkhEUUFnQlNBRktBSUFJZ2xCQVdvMkFnQWdDU0FNT2dBQUlBY2dCeUFLRURWQkFXdEphaUVIUVFBaENRc2dDeUFHTEFBQUVJSUJJUTBnQlNBRktBSUFJZzVCQVdvMkFnQWdEaUFOT2dBQUlBWkJBV29oQmlBSlFRRnFJUWtNQVFzTElRWUxJQVFnQmlBRElBRWdBR3RxSUFFZ0FrWWJOZ0lBSUFvUU5ob2dDa0VRYWlRQUM2QURBUUovSXdCQjRBSnJJZ0FrQUNBQUlBSTJBdEFDSUFBZ0FUWUMyQUlnQXhEV0FTRUdJQU1nQUVIZ0FXb1E5QUloQnlBQVFkQUJhaUFESUFCQnpBSnFFUE1DSUFCQndBRnFFRU1pQVNBQkVFOFFQeUFBSUFGQkFCQkFJZ0kyQXJ3QklBQWdBRUVRYWpZQ0RDQUFRUUEyQWdnRFFBSkFJQUJCMkFKcUlBQkIwQUpxRUl3QlJRMEFJQUFvQXJ3QklBRVFOU0FDYWtZRVFDQUJFRFVoQXlBQklBRVFOVUVCZEJBL0lBRWdBUkJQRUQ4Z0FDQURJQUZCQUJCQUlnSnFOZ0s4QVFzZ0FFSFlBbW9RWnlBR0lBSWdBRUc4QVdvZ0FFRUlhaUFBS0FMTUFpQUFRZEFCYWlBQVFSQnFJQUJCREdvZ0J4REVBZzBBSUFCQjJBSnFFSHdhREFFTEN3SkFJQUJCMEFGcUVEVkZEUUFnQUNnQ0RDSURJQUJCRUdwclFaOEJTZzBBSUFBZ0EwRUVhallDRENBRElBQW9BZ2cyQWdBTElBVWdBaUFBS0FLOEFTQUVJQVlRelFjMkFnQWdBRUhRQVdvZ0FFRVFhaUFBS0FJTUlBUVFpZ0VnQUVIWUFtb2dBRUhRQW1vUWN3UkFJQVFnQkNnQ0FFRUNjallDQUFzZ0FDZ0MyQUloQWlBQkVEWWFJQUJCMEFGcUVEWWFJQUJCNEFKcUpBQWdBZ3RGQVFGL0l3QkJFR3NpQXlRQUlBTWdBVFlDRENBRElBSTJBZ2dnQXlBRFFReHFFTWdCSVFFZ0FFSGs2QUVnQXlnQ0NCQ0RCU0VBSUFFUXh3RWdBMEVRYWlRQUlBQUxzUUlDQkg0RmZ5TUFRU0JySWdna0FBSkFBa0FDUUNBQklBSkhCRUJCdEl3RUtBSUFJUXhCdEl3RVFRQTJBZ0FqQUVFUWF5SUpKQUFRV1JvakFFRVFheUlLSkFBakFFRVFheUlMSkFBZ0N5QUJJQWhCSEdwQkFoREtBeUFMS1FNQUlRUWdDaUFMS1FNSU53TUlJQW9nQkRjREFDQUxRUkJxSkFBZ0Npa0RBQ0VFSUFrZ0Npa0RDRGNEQ0NBSklBUTNBd0FnQ2tFUWFpUUFJQWtwQXdBaEJDQUlJQWtwQXdnM0F4QWdDQ0FFTndNSUlBbEJFR29rQUNBSUtRTVFJUVFnQ0NrRENDRUZRYlNNQkNnQ0FDSUJSUTBCSUFnb0Fod2dBa2NOQWlBRklRWWdCQ0VISUFGQnhBQkhEUU1NQWdzZ0EwRUVOZ0lBREFJTFFiU01CQ0FNTmdJQUlBZ29BaHdnQWtZTkFRc2dBMEVFTmdJQUlBWWhCU0FISVFRTElBQWdCVGNEQUNBQUlBUTNBd2dnQ0VFZ2FpUUFDN1lCQWdKOEEzOGpBRUVRYXlJRkpBQUNRQUpBQWtBZ0FDQUJSd1JBUWJTTUJDZ0NBQ0VIUWJTTUJFRUFOZ0lBRUZrYUl3QkJFR3NpQmlRQUlBWWdBQ0FGUVF4cVFRRVF5Z01nQmlrREFDQUdLUU1JRU5vRElRTWdCa0VRYWlRQVFiU01CQ2dDQUNJQVJRMEJJQVVvQWd3Z0FVY05BaUFESVFRZ0FFSEVBRWNOQXd3Q0N5QUNRUVEyQWdBTUFndEJ0SXdFSUFjMkFnQWdCU2dDRENBQlJnMEJDeUFDUVFRMkFnQWdCQ0VEQ3lBRlFSQnFKQUFnQXd1MkFRSUNmUU4vSXdCQkVHc2lCU1FBQWtBQ1FBSkFJQUFnQVVjRVFFRzBqQVFvQWdBaEIwRzBqQVJCQURZQ0FCQlpHaU1BUVJCcklnWWtBQ0FHSUFBZ0JVRU1ha0VBRU1vRElBWXBBd0FnQmlrRENCRDVCQ0VESUFaQkVHb2tBRUcwakFRb0FnQWlBRVVOQVNBRktBSU1JQUZIRFFJZ0F5RUVJQUJCeEFCSERRTU1BZ3NnQWtFRU5nSUFEQUlMUWJTTUJDQUhOZ0lBSUFVb0Fnd2dBVVlOQVFzZ0FrRUVOZ0lBSUFRaEF3c2dCVUVRYWlRQUlBTUx4d0VDQTM4QmZpTUFRUkJySWdRa0FBSitBa0FDUUNBQUlBRkhCRUFDUUFKQUlBQXRBQUFpQlVFdFJ3MEFJQUJCQVdvaUFDQUJSdzBBREFFTFFiU01CQ2dDQUNFR1FiU01CRUVBTmdJQUVGa2FJQUFnQkVFTWFpQURFTGdFSVFjQ1FFRzBqQVFvQWdBaUFBUkFJQVFvQWd3Z0FVY05BU0FBUWNRQVJnMEVEQVVMUWJTTUJDQUdOZ0lBSUFRb0Fnd2dBVVlOQkFzTEN5QUNRUVEyQWdCQ0FBd0NDeUFDUVFRMkFnQkNmd3dCQzBJQUlBZDlJQWNnQlVFdFJoc0xJUWNnQkVFUWFpUUFJQWNMMkFFQ0EzOEJmaU1BUVJCcklnUWtBQUovQWtBQ1FBSkFJQUFnQVVjRVFBSkFBa0FnQUMwQUFDSUZRUzFIRFFBZ0FFRUJhaUlBSUFGSERRQU1BUXRCdEl3RUtBSUFJUVpCdEl3RVFRQTJBZ0FRV1JvZ0FDQUVRUXhxSUFNUXVBUWhCd0pBUWJTTUJDZ0NBQ0lBQkVBZ0JDZ0NEQ0FCUncwQklBQkJ4QUJHRFFVTUJBdEJ0SXdFSUFZMkFnQWdCQ2dDRENBQlJnMERDd3NMSUFKQkJEWUNBRUVBREFNTElBZEMvLy8vL3c5WURRRUxJQUpCQkRZQ0FFRi9EQUVMUVFBZ0I2Y2lBR3NnQUNBRlFTMUdHd3NoQUNBRVFSQnFKQUFnQUF1VkF3RUJmeU1BUVpBQ2F5SUFKQUFnQUNBQ05nS0FBaUFBSUFFMkFvZ0NJQU1RMWdFaEJpQUFRZEFCYWlBRElBQkIvd0ZxRVBZQ0lBQkJ3QUZxRUVNaUFTQUJFRThRUHlBQUlBRkJBQkJBSWdJMkFyd0JJQUFnQUVFUWFqWUNEQ0FBUVFBMkFnZ0RRQUpBSUFCQmlBSnFJQUJCZ0FKcUVJMEJSUTBBSUFBb0Fyd0JJQUVRTlNBQ2FrWUVRQ0FCRURVaEF5QUJJQUVRTlVFQmRCQS9JQUVnQVJCUEVEOGdBQ0FESUFGQkFCQkFJZ0pxTmdLOEFRc2dBRUdJQW1vUWFDQUdJQUlnQUVHOEFXb2dBRUVJYWlBQUxBRC9BU0FBUWRBQmFpQUFRUkJxSUFCQkRHcEI0S0lERU1ZQ0RRQWdBRUdJQW1vUWZSb01BUXNMQWtBZ0FFSFFBV29RTlVVTkFDQUFLQUlNSWdNZ0FFRVFhbXRCbndGS0RRQWdBQ0FEUVFScU5nSU1JQU1nQUNnQ0NEWUNBQXNnQlNBQ0lBQW9BcndCSUFRZ0JoRE5CellDQUNBQVFkQUJhaUFBUVJCcUlBQW9BZ3dnQkJDS0FTQUFRWWdDYWlBQVFZQUNhaEIwQkVBZ0JDQUVLQUlBUVFKeU5nSUFDeUFBS0FLSUFpRUNJQUVRTmhvZ0FFSFFBV29RTmhvZ0FFR1FBbW9rQUNBQ0M5MEJBZ04vQVg0akFFRVFheUlFSkFBQ2Z3SkFBa0FDUUNBQUlBRkhCRUFDUUFKQUlBQXRBQUFpQlVFdFJ3MEFJQUJCQVdvaUFDQUJSdzBBREFFTFFiU01CQ2dDQUNFR1FiU01CRUVBTmdJQUVGa2FJQUFnQkVFTWFpQURFTGdFSVFjQ1FFRzBqQVFvQWdBaUFBUkFJQVFvQWd3Z0FVY05BU0FBUWNRQVJnMEZEQVFMUWJTTUJDQUdOZ0lBSUFRb0Fnd2dBVVlOQXdzTEN5QUNRUVEyQWdCQkFBd0RDeUFIUXYvL0ExZ05BUXNnQWtFRU5nSUFRZi8vQXd3QkMwRUFJQWVuSWdCcklBQWdCVUV0UmhzTElRQWdCRUVRYWlRQUlBQkIvLzhEY1FzeUFBSkFRWDhnQUNnQ1RCQzVBVVVFUUNBQUtBSk1JUUFNQVFzZ0FDQUFRU0FRdXdjaUFEWUNUQXNnQUVFWWRFRVlkUXUzQVFJQmZnSi9Jd0JCRUdzaUJTUUFBa0FDUUNBQUlBRkhCRUJCdEl3RUtBSUFJUVpCdEl3RVFRQTJBZ0FRV1JvZ0FDQUZRUXhxSUFNUWd3Y2hCQUpBUWJTTUJDZ0NBQ0lBQkVBZ0JTZ0NEQ0FCUncwQklBQkJ4QUJHRFFNTUJBdEJ0SXdFSUFZMkFnQWdCU2dDRENBQlJnMERDd3NnQWtFRU5nSUFRZ0FoQkF3QkN5QUNRUVEyQWdBZ0JFSUFWUVJBUXYvLy8vLy8vLy8vL3dBaEJBd0JDMEtBZ0lDQWdJQ0FnSUIvSVFRTElBVkJFR29rQUNBRUM4UUJBZ0ovQVg0akFFRVFheUlFSkFBQ2Z3SkFBa0FnQUNBQlJ3UkFRYlNNQkNnQ0FDRUZRYlNNQkVFQU5nSUFFRmthSUFBZ0JFRU1haUFERUlNSElRWUNRRUcwakFRb0FnQWlBQVJBSUFRb0Fnd2dBVWNOQVNBQVFjUUFSZzBFREFNTFFiU01CQ0FGTmdJQUlBUW9BZ3dnQVVZTkFnc0xJQUpCQkRZQ0FFRUFEQUlMSUFaQ2dJQ0FnSGhUSUFaQy8vLy8vd2RWY2cwQUlBYW5EQUVMSUFKQkJEWUNBRUgvLy8vL0J5QUdRZ0JWRFFBYVFZQ0FnSUI0Q3lFQUlBUkJFR29rQUNBQUN5MEJBWDhnQUNFQlFRQWhBQU5BSUFCQkEwY0VRQ0FCSUFCQkFuUnFRUUEyQWdBZ0FFRUJhaUVBREFFTEN3djdCd0lNZndOOElBTkJBRXdFUUNBRVFRQTJBZ0FnQlVFQU5nSUFJQVpDZ0lDQWdJQ0FnUGkvZnpjREFFRi9Ed3NnQXlBRGJDRUpBa0FDUUFKQUFrQWdBVVVFUUNBSlFReHNFRGNpQzBVTkJDQUpRUU5zSVFsQkFDRUJBMEFnQVNBSlJrVUVRQ0FISUFFZ0Ftb3RBQUJCL3dGemFpRUhJQUZCQVdvaEFRd0JDd3NnQnlBSmJpRUtRUUFoQjBFQUlRRURRQ0FCSUFsR1JRUkFJQXNnQVVFQ2RHb2dBU0FDYWkwQUFFSC9BWE1nQ21zaUNEWUNBQ0FCUVFGcUlRRWdDQ0FJYkNBSGFpRUhEQUVMQ3lBSHQ1OGlGQ0FEdDBTUksxRG1lcmI3UDZLalJBQUFBQUFBQUM1QVl3MENRUUFoQnlBQUtBSUFJZ0ZCQUNBQlFRQktHeUVOUVg4aENFRi9JUXBCZnlFTUEwQWdCeUFOUndSQUlBQW9BZ2doQVFKQUEwQUNRQ0FCSUF4QkFXb2lERUVDZENJT2FpZ0NBQTREQVFBQ0FBc0xJQUFvQWhBaER5QUFLQUlNSVJCQkFDRURBMEFnQTBFRVJnMEJJQkFnQXlBT2FpSVJRUUowYWlnQ0FDRVNRUUFoQWtFQUlRRURRQ0FCSUFsR1JRUkFJQUlnRWlBQlFRSjBJZ0pxS0FJQUlBSWdDMm9vQWdCc2FpRUNJQUZCQVdvaEFRd0JDd3NnQXJjZ0R5QVJRUU4wYWlzREFLTWdGS01pRlNBVElCTWdGV01pQVJzaEV5QU1JQW9nQVJzaENpQURJQWdnQVJzaENDQURRUUZxSVFNTUFBc0FDeUFIUVFGcUlRY01BUXNMREFFTElBbEJBblFRTnlJTFJRMERRUUFoQVFOQUlBRWdDVVpGQkVBZ0J5QUJJQUpxTFFBQVFmOEJjMm9oQnlBQlFRRnFJUUVNQVFzTElBY2dDVzRoQ2tFQUlRZEJBQ0VCQTBBZ0FTQUpSa1VFUUNBTElBRkJBblJxSUFFZ0Ftb3RBQUJCL3dGeklBcHJJZ2cyQWdBZ0FVRUJhaUVCSUFnZ0NHd2dCMm9oQnd3QkN3c2dCN2VmSWhRZ0E3ZWpSQUFBQUFBQUFDNUFZdzBDUVFBaEJ5QUFLQUlBSWdGQkFDQUJRUUJLR3lFTlFYOGhDRUYvSVFwQmZ5RU1BMEFnQnlBTlJ3UkFJQUFvQWdnaEFRSkFBMEFDUUNBQklBeEJBV29pREVFQ2RDSU9haWdDQUE0REFRQUNBQXNMSUFBb0FoZ2hEeUFBS0FJVUlSQkJBQ0VEQTBBZ0EwRUVSZzBCSUJBZ0F5QU9haUlSUVFKMGFpZ0NBQ0VTUVFBaEFrRUFJUUVEUUNBQklBbEdSUVJBSUFJZ0VpQUJRUUowSWdKcUtBSUFJQUlnQzJvb0FnQnNhaUVDSUFGQkFXb2hBUXdCQ3dzZ0FyY2dEeUFSUVFOMGFpc0RBS01nRktNaUZTQVRJQk1nRldNaUFSc2hFeUFNSUFvZ0FSc2hDaUFESUFnZ0FSc2hDQ0FEUVFGcUlRTU1BQXNBQ3lBSFFRRnFJUWNNQVFzTEN5QUZJQWcyQWdBZ0JDQUtOZ0lBSUFZZ0V6a0RBQ0FMRURGQkFBOExJQVJCQURZQ0FDQUZRUUEyQWdBZ0JrS0FnSUNBZ0lDQStMOS9Od01BSUFzUU1VRitEd3NnQkVFQU5nSUFJQVZCQURZQ0FDQUdRb0NBZ0lDQWdJRDR2MzgzQXdBZ0N4QXhRWDRQQzBFQVFRTkI1dzFCQUJBNVFRRVFBZ0FMYVFBZ0FFVUVRQThMQWtBZ0FDZ0NBQ0FCUmcwQUlBQWdBVFlDQUNBQlJRUkFJQUJCNUlhbkFtb2lBQ2dDQUJBeElBQkJBRFlDQUF3QkN5QUFRZVNHcHdKcUlBQW9BaWdnQUNnQ0pHd1FOeUlBTmdJQUlBQU5BRUVBUVFOQjV3MUJBQkE1UVFFUUFnQUxDMEFCQVg5QkFDRUFBMzhnQVNBQ1JnUi9JQUFGSUFFb0FnQWdBRUVFZEdvaUFFR0FnSUNBZjNFaUEwRVlkaUFEY2lBQWN5RUFJQUZCQkdvaEFRd0JDd3NMR3dBakFFRVFheUlCSkFBZ0FDQUNJQU1ReHdRZ0FVRVFhaVFBQzFRQkFuOENRQU5BSUFNZ0JFY0VRRUYvSVFBZ0FTQUNSZzBDSUFFb0FnQWlCU0FES0FJQUlnWklEUUlnQlNBR1NnUkFRUUVQQlNBRFFRUnFJUU1nQVVFRWFpRUJEQUlMQUFzTElBRWdBa2NoQUFzZ0FBdEFBUUYvUVFBaEFBTi9JQUVnQWtZRWZ5QUFCU0FCTEFBQUlBQkJCSFJxSWdCQmdJQ0FnSDl4SWdOQkdIWWdBM0lnQUhNaEFDQUJRUUZxSVFFTUFRc0xDeHNBSXdCQkVHc2lBU1FBSUFBZ0FpQURFT0FFSUFGQkVHb2tBQXRlQVFOL0lBRWdCQ0FEYTJvaEJRSkFBMEFnQXlBRVJ3UkFRWDhoQUNBQklBSkdEUUlnQVN3QUFDSUdJQU1zQUFBaUIwZ05BaUFHSUFkS0JFQkJBUThGSUFOQkFXb2hBeUFCUVFGcUlRRU1BZ3NBQ3dzZ0FpQUZSeUVBQ3lBQUMvY0JBUVYvSXdCQklHc2lBaVFBQW44Q1FBSkFJQUZCZnhDNUFRMEFJQUlnQVRZQ0ZDQUFMUUFzQkVBZ0FrRVVha0VFUVFFZ0FDZ0NJQkRNQVVFQlJ3MENEQUVMSUFJZ0FrRVlhaUlGTmdJUUlBSkJJR29oQmlBQ1FSUnFJUU1EUUNBQUtBSWtJQUFvQWlnZ0F5QUZJQUpCREdvZ0FrRVlhaUFHSUFKQkVHb1EvUUloQkNBQ0tBSU1JQU5HRFFJZ0JFRURSZ1JBSUFOQkFVRUJJQUFvQWlBUXpBRkJBVVlOQWd3REN5QUVRUUZMRFFJZ0FrRVlhaUlEUVFFZ0FpZ0NFQ0FEYXlJRElBQW9BaUFRekFFZ0EwY05BaUFDS0FJTUlRTWdCRUVCUmcwQUN3c2dBUkRmQkF3QkMwRi9DeUVBSUFKQklHb2tBQ0FBQzJZQkFYOENRQ0FBTFFBc1JRUkFJQUpCQUNBQ1FRQktHeUVDQTBBZ0FpQURSZzBDSUFBZ0FTZ0NBQ0FBS0FJQUtBSTBFUU1BUVg5R0JFQWdBdzhGSUFGQkJHb2hBU0FEUVFGcUlRTU1BUXNBQ3dBTElBRkJCQ0FDSUFBb0FpQVF6QUVoQWdzZ0Fnc21BQ0FBSUFBb0FnQW9BaGdSQUFBYUlBQWdBUkRMQXlJQk5nSWtJQUFnQVJDY0Fqb0FMQXZ5QVFFRGZ5TUFRU0JySWdJa0FDQUJRWDhRdVFFaEJDQUFMUUEwSVFNQ1FDQUVCRUFnQXcwQklBQWdBQ2dDTUNJQlFYOFF1UUZCQVhNNkFEUU1BUXNDUUNBRFJRMEFJQUlnQUNnQ01EWUNFQUpBQWtBQ1FDQUFLQUlrSUFBb0FpZ2dBa0VRYWlBQ1FSUnFJZ01nQWtFTWFpQUNRUmhxSUFKQklHb2dBeEQ5QWtFQmF3NERBZ0lBQVFzZ0FDZ0NNQ0VESUFJZ0FrRVphallDRkNBQ0lBTTZBQmdMQTBBZ0FpZ0NGQ0lESUFKQkdHcE5EUUlnQWlBRFFRRnJJZ00yQWhRZ0F5d0FBQ0FBS0FJZ0VQc0NRWDlIRFFBTEMwRi9JUUVNQVFzZ0FFRUJPZ0EwSUFBZ0FUWUNNQXNnQWtFZ2FpUUFJQUVMQ1FBZ0FFRUJFTkFFQ3drQUlBQkJBQkRRQkFzekFDQUFJQUVReXdNaUFUWUNKQ0FBSUFFUXlnSTJBaXdnQUNBQUtBSWtFSndDT2dBMUlBQW9BaXhCQ1U0RVFCQjFBQXNMK2dFQkJYOGpBRUVnYXlJQ0pBQUNmd0pBQWtBZ0FVRi9FTGtCRFFBZ0FpQUJFTllET2dBWElBQXRBQ3dFUUNBQ1FSZHFRUUZCQVNBQUtBSWdFTXdCUVFGSERRSU1BUXNnQWlBQ1FSaHFJZ1UyQWhBZ0FrRWdhaUVHSUFKQkYyb2hBd05BSUFBb0FpUWdBQ2dDS0NBRElBVWdBa0VNYWlBQ1FSaHFJQVlnQWtFUWFoRDlBaUVFSUFJb0Fnd2dBMFlOQWlBRVFRTkdCRUFnQTBFQlFRRWdBQ2dDSUJETUFVRUJSZzBDREFNTElBUkJBVXNOQWlBQ1FSaHFJZ05CQVNBQ0tBSVFJQU5ySWdNZ0FDZ0NJQkRNQVNBRFJ3MENJQUlvQWd3aEF5QUVRUUZHRFFBTEN5QUJFTjhFREFFTFFYOExJUUFnQWtFZ2FpUUFJQUFMYVFFQmZ3SkFJQUF0QUN4RkJFQWdBa0VBSUFKQkFFb2JJUUlEUUNBQ0lBTkdEUUlnQUNBQkxBQUFFTDRCSUFBb0FnQW9BalFSQXdCQmYwWUVRQ0FERHdVZ0FVRUJhaUVCSUFOQkFXb2hBd3dCQ3dBTEFBc2dBVUVCSUFJZ0FDZ0NJQkRNQVNFQ0N5QUNDeVlBSUFBZ0FDZ0NBQ2dDR0JFQUFCb2dBQ0FCRU00RElnRTJBaVFnQUNBQkVKd0NPZ0FzQy9VQkFRTi9Jd0JCSUdzaUFpUUFJQUZCZnhDNUFTRUVJQUF0QURRaEF3SkFJQVFFUUNBRERRRWdBQ0FBS0FJd0lnRkJmeEM1QVVFQmN6b0FOQXdCQ3dKQUlBTkZEUUFnQWlBQUtBSXdFTllET2dBVEFrQUNRQUpBSUFBb0FpUWdBQ2dDS0NBQ1FSTnFJQUpCRkdvaUF5QUNRUXhxSUFKQkdHb2dBa0VnYWlBREVQMENRUUZyRGdNQ0FnQUJDeUFBS0FJd0lRTWdBaUFDUVJscU5nSVVJQUlnQXpvQUdBc0RRQ0FDS0FJVUlnTWdBa0VZYWswTkFpQUNJQU5CQVdzaUF6WUNGQ0FETEFBQUlBQW9BaUFRK3dKQmYwY05BQXNMUVg4aEFRd0JDeUFBUVFFNkFEUWdBQ0FCTmdJd0N5QUNRU0JxSkFBZ0FRc0pBQ0FBUVFFUTFRUUxDUUFnQUVFQUVOVUVDek1BSUFBZ0FSRE9BeUlCTmdJa0lBQWdBUkRLQWpZQ0xDQUFJQUFvQWlRUW5BSTZBRFVnQUNnQ0xFRUpUZ1JBRUhVQUN3c2VBRUdJcEFRUWdRTkIyS1lFRUlFRFFkeWtCQkRQQTBHc3B3UVF6d01MdEFFQkJIOGpBRUVRYXlJRkpBQURRQUpBSUFJZ0Ewd05BQ0FBS0FJWUlnUWdBQ2dDSENJR1R3UkFJQUFnQVNnQ0FDQUFLQUlBS0FJMEVRTUFRWDlHRFFFZ0EwRUJhaUVESUFGQkJHb2hBUVVnQlNBR0lBUnJRUUoxTmdJTUlBVWdBaUFEYXpZQ0NDQUZRUXhxSUFWQkNHb1FuUUloQkNBQUtBSVlJQUVnQkNnQ0FDSUVFTW9CSUFBZ0JFRUNkQ0lHSUFBb0FoaHFOZ0lZSUFNZ0JHb2hBeUFCSUFacUlRRUxEQUVMQ3lBRlFSQnFKQUFnQXdzc0FDQUFJQUFvQWdBb0FpUVJBQUJCZjBZRVFFRi9Ed3NnQUNBQUtBSU1JZ0JCQkdvMkFnd2dBQ2dDQUF2S0FRRUVmeU1BUVJCcklnUWtBQU5BQWtBZ0FpQUZUQTBBQW44Z0FDZ0NEQ0lESUFBb0FoQWlCa2tFUUNBRVFmLy8vLzhITmdJTUlBUWdCaUFEYTBFQ2RUWUNDQ0FFSUFJZ0JXczJBZ1FnQkVFTWFpQUVRUWhxSUFSQkJHb1FuUUlRblFJaEF5QUJJQUFvQWd3Z0F5Z0NBQ0lERU1vQklBQWdBMEVDZENJR0lBQW9BZ3hxTmdJTUlBRWdCbW9NQVFzZ0FDQUFLQUlBS0FJb0VRQUFJZ05CZjBZTkFTQUJJQU0yQWdCQkFTRURJQUZCQkdvTElRRWdBeUFGYWlFRkRBRUxDeUFFUVJCcUpBQWdCUXNNQUNBQUVOQURHaUFBRURFTDVPOEJCQ3gvRG4wY2ZBTitJd0JCSUdzaUhDUUFBa0FDUUFKQUFrQWdBRUVBSUFFYlJRUkFRUUJCQTBHTDJRQkJBQkE1REFFTElBQW9BaEFoRHlBQUtBSU1JUVlDUUNBQUtBSVVJaVJCQVVZTkFBSi9Ba0FDUUFKQUFrQUNRQ0FrUVFGckRnVUFBZ1FEQVFRTElCd2dCallDSENBY0lBODJBaGdnQmlBUGJDSUNFRGNpQkVVTkNDQUVJQUVnQWhBK0RBUUxBbjhnQVNFRUlCd2dCa0VEYlNJQlFRRjBJZ2MyQWh3Z0hDQVBRUU50SWdKQkFYUWlBellDR0NBRElBZHNFRGNpQlFSQUlBSkJBQ0FDUVFCS0d5RU1JQUZCQUNBQlFRQktHeUVKSUFVaUFTRURBMEFnRENBTlJ3UkFJQUVnQjJvaEFTQUVJQTFCQTJ3aUFpQUdiR29oQ2lBRUlBSkJBbW9nQm14cUlRc2dCQ0FDUVFGcUlBWnNhaUVJUVFBaEFnTkFJQUlnQ1VjRVFDQURJQW90QUFBZ0NpMEFBVUVCZG1vZ0NDMEFBRUVCZG1vZ0NDMEFBVUVDZG1wQkFuUkJDVzQ2QUFBZ0FTQUxMUUFBSUFndEFBRkJBbllnQ0MwQUFFRUJkbXBxSUFzdEFBRkJBWFpxUVFKMFFRbHVPZ0FBSUFNZ0NpMEFBaUFLTFFBQlFRRjJhaUFJTFFBQlFRSjJhaUFJTFFBQ1FRRjJha0VDZEVFSmJqb0FBU0FCSUFzdEFBSWdDQzBBQWtFQmRpQUlMUUFCUVFKMmFpQUxMUUFCUVFGMmFtcEJBblJCQ1c0NkFBRWdBa0VCYWlFQ0lBdEJBMm9oQ3lBSVFRTnFJUWdnQ2tFRGFpRUtJQUZCQW1vaEFTQURRUUpxSVFNTUFRc0xJQTFCQVdvaERTQURJQWRxSVFNTUFRc0xJQVVNQVFzTUNBc01Bd3NDZnlBQklRSWdIQ0FHUVFKdElnRTJBaHdnSENBUFFRSnRJZ1UyQWhnZ0FTQUZiQkEzSWdRRVFDQUZRUUFnQlVFQVNoc2hCU0FCUVFBZ0FVRUFTaHNoQnlBRUlRRURRQ0FESUFWSEJFQWdBaUFEUVFGMElnb2dCbXhxSVFnZ0FpQUtRUUZ5SUFac2FpRUtRUUFoQ3dOQUlBY2dDMGNFUUNBQklBb3RBQUVnQ2kwQUFDQUlMUUFCSUFndEFBQnFhbXBCQW5ZNkFBQWdDMEVCYWlFTElBcEJBbW9oQ2lBSVFRSnFJUWdnQVVFQmFpRUJEQUVMQ3lBRFFRRnFJUU1NQVFzTElBUU1BUXNNQndzTUFnc0NmeUFjSUFaQkEyMGlBallDSENBY0lBOUJBMjBpQXpZQ0dDQUNJQU5zRURjaUJBUkFJQU5CQUNBRFFRQktHeUVISUFKQkFDQUNRUUJLR3lFTUlBUWhBZ05BSUFjZ0MwY0VRQ0FCSUF0QkEyd2lCU0FHYkdvaENDQUJJQVZCQW1vZ0JteHFJUU1nQVNBRlFRRnFJQVpzYWlFS1FRQWhEUU5BSUF3Z0RVY0VRQ0FDSUFNdEFBSWdBeTBBQVNBRExRQUFJQW90QUFJZ0NpMEFBU0FLTFFBQUlBZ3RBQUlnQ0MwQUFTQUlMUUFBYW1wcWFtcHFhbXBCQ1c0NkFBQWdEVUVCYWlFTklBTkJBMm9oQXlBS1FRTnFJUW9nQ0VFRGFpRUlJQUpCQVdvaEFnd0JDd3NnQzBFQmFpRUxEQUVMQ3lBRURBRUxEQVlMREFFTEFuOGdIQ0FHUVFSdElnSTJBaHdnSENBUFFRUnRJZ00yQWhnZ0FpQURiQkEzSWdRRVFDQURRUUFnQTBFQVNoc2hEQ0FDUVFBZ0FrRUFTaHNoQ1NBRUlRSURRQ0FNSUExSEJFQWdBU0FOUVFKMElnVWdCbXhxSVFnZ0FTQUZRUU55SUFac2FpRURJQUVnQlVFQ2NpQUdiR29oQ2lBQklBVkJBWElnQm14cUlRdEJBQ0VIQTBBZ0J5QUpSd1JBSUFJZ0F5MEFBeUFETFFBQ0lBTXRBQUVnQXkwQUFDQUtMUUFESUFvdEFBSWdDaTBBQVNBS0xRQUFJQXN0QUFNZ0N5MEFBaUFMTFFBQklBc3RBQUFnQ0MwQUF5QUlMUUFDSUFndEFBRWdDQzBBQUdwcWFtcHFhbXBxYW1wcWFtcHFha0VFZGpvQUFDQUhRUUZxSVFjZ0EwRUVhaUVESUFwQkJHb2hDaUFMUVFScUlRc2dDRUVFYWlFSUlBSkJBV29oQWd3QkN3c2dEVUVCYWlFTkRBRUxDeUFFREFFTERBVUxDeUlCRFFBTUFRc2dBQ2dDQUNFQ0l3QkJJR3NpS0NRQUlDZ2dBVUVCSUFZZ0R5QUdFTjhGSVIwZ0FpZ0NBQ2dDQUNFYVFRQWhDaU1BUVNCcklpa2tBQUpBQWtBZ0drSGNBR29pQ0JCT0VLTUJSUTBBSUFnUVRrRUFFRWtvQWdRZ0hTZ0NCRWNOQUNBSUVFNUJBQkJKS0FJSUlCMG9BZ2hHRFFFTElCMG9BZ1FoQ3lBZEtBSUlJUU1EUUNBTFFRaElJQU5CQ0VoeVJRUkFJQXBCQVdvaENpQURRUUYxSVFNZ0MwRUJkU0VMREFFTEN5QWRLQUlFSVFJZ0hTZ0NDQ0VFUVFBaEF5QUlRUU0yQWhRZ0NDQUtOZ0lRSUFoREFBQUFRRU1BQUFBL0VOMEdJaTQ0QWhnZ0NFTUFBSUEvSUM0UXBBS1ZPQUljSUFoQkJHb2lCU0FJS0FJVUlBcHNFS1lFSUFwQkFDQUtRUUJLR3lFSEEwQWdBeUFIUndSQUlBUWdBM1loQ3lBQ0lBTjJJUVpCQUNFS0EwQWdDQ2dDRkNJUElBcE5CRUFnQTBFQmFpRUREQU1GSUFVZ0F5QVBiQ0FLYWhCSlFRSWdCaUFMUVFFUTh3TWdDa0VCYWlFS0RBRUxBQXNBQ3dzQ1FDQUlRU0JxSWdNUWp3SWlDaUFDSUFSc0lnVkpCRUFqQUVFZ2F5SUdKQUFDUUNBRklBcHJJZ2NnQXhBeUtBSUFJQU1vQWdSclFRRjFUUVJBSXdCQkVHc2lBaVFBSUFJZ0F6WUNBQ0FDSUFNb0FnUWlCRFlDQkNBQ0lBUWdCMEVCZEdvMkFnZ2dBaWdDQkNFS0lBSW9BZ2doQkFOQUlBUWdDa1lFUUNBQ0VHc2dBa0VRYWlRQUJTQURFRElnQ2hDM0JpQUNJQXBCQW1vaUNqWUNCQXdCQ3dzTUFRc2dBeEF5SVF3Z0JrRUlhaUVDQW44Z0F4Q1BBaUFIYWlFUEl3QkJFR3NpQkNRQUlBUWdEellDRENNQVFSQnJJZ29rQUNBREVESWFJQXBCLy8vLy93YzJBZ3dnQ2tILy8vLy9CellDQ0NBS1FReHFJQXBCQ0dvUWxnSW9BZ0FoQ3lBS1FSQnFKQUFnQ3lBUFR3UkFJQU1Ra0FJaUNpQUxRUUYyU1FSQUlBUWdDa0VCZERZQ0NDQUVRUWhxSUFSQkRHb1FiaWdDQUNFTEN5QUVRUkJxSkFBZ0N3d0JDMEhXOWdBUW1BSUFDeUVFSUFNUWp3SWhEMEVBSVFzakFFRVFheUlLSkFBZ0NrRUFOZ0lNSUFKQkRHb2dEQkRRQVNBRUJFQWdBaWdDRUJvZ0JFSC8vLy8vQjBzRVFCRDRBUUFMSUFSQkFYUVFWeUVMQ3lBQ0lBczJBZ0FnQWlBTElBOUJBWFJxSWc4MkFnZ2dBaUFQTmdJRUlBSVFQQ0FMSUFSQkFYUnFOZ0lBSUFwQkVHb2tBQ01BUVJCcklnUWtBQ0FFSUFJb0FnZzJBZ0FnQWlnQ0NDRUtJQVFnQWtFSWFqWUNDQ0FFSUFvZ0IwRUJkR28yQWdRZ0JDZ0NBQ0VMQTBBZ0JDZ0NCQ0FMUndSQUlBSW9BaEFnQkNnQ0FCQzNCaUFFSUFRb0FnQkJBbW9pQ3pZQ0FBd0JDd3NnQkJDcEFTQUVRUkJxSkFBZ0F4QzhCaUFERURJZ0F5Z0NBQ0FES0FJRUlBSkJCR29pQkJDVkFpQURJQVFRUlNBRFFRUnFJQUpCQ0dvUVJTQURFRElnQWhBOEVFVWdBaUFDS0FJRU5nSUFJQU1RandJYUlBTW9BZ0FhSUFNb0FnQWdBeENRQWtFQmRHb2FJQU1vQWdBZ0F4Q1FBa0VCZEdvYUlBTW9BZ0FhSUFJb0FnUWhCQU5BSUFRZ0FpZ0NDRWNFUUNBQ0tBSVFHaUFDSUFJb0FnaEJBbXMyQWdnTUFRc0xJQUlvQWdBRVFDQUNLQUlRR2lBQ0tBSUFJUVFnQWhBOEtBSUFJQUlvQWdCckdpQUVFREVMQ3lBR1FTQnFKQUFNQVFzZ0JTQUtTUVJBSUFNb0FnQWdCVUVCZEdvaEFpQURFSThDR2lBRElBSVF1QVlnQXlnQ0FCb2dBeWdDQUNBREVKQUNRUUYwYWhvZ0F5Z0NBQm9nQXlnQ0FDQURFSThDUVFGMGFob0xDeUFJUVN4cUlBVVFsQUlnQ0VFNGFpQUZFSlFDQ3lBcFFjRVlFSThCSVFVQ1FBSkFBa0FDUUFKQUlCMG9BZ0JCQVVZRVFDQWRLQUlRUVFGSERRRWdDRUVFYWlJQ0VLTUJJQWdvQWhRZ0NDZ0NFR3hIRFFJZ0hTZ0NCQ0FDUVFBUVNTZ0NCRWNOQXlBZEtBSUlJQUpCQUJCSktBSUlSdzBFSUFnZ0FrRUFFRWtnSFJEaEFpQUlJQUpCQVJCSklBSkJBQkJKRU9FQ0lBZ2dBa0VDRUVrZ0FrRUJFRWtRdXdaQkFTRURBMEFnQXlBSUtBSVFUdzBHSUFJZ0NDZ0NGQ0FEYkJCSktBSVlJUThnQWlBSUtBSVVJQU5zUVFGckVFa29BaGdoQmtFQUlRb2dBaUFJS0FJVUlBTnNRUUZyRUVrb0FnUWlCRUVCZENFTUlBSWdDQ2dDRkNBRGJFRUJheEJKS0FJSVFRRjJJUWtnQkVFQmRpRVlBMEFnQ1NBS1J3UkFJQVlnQ2lBTWJFRUNkR29pQ3lBRVFRSjBhaUVOUVFBaEJ3TkFJQWNnR0VZRVFDQUtRUUZxSVFvTUF3VWdEeUFMS2dJQUlBc3FBZ1NTSUEwcUFnQ1NJQTBxQWdTU1F3QUFnRDZVT0FJQUlBMUJDR29oRFNBTFFRaHFJUXNnQjBFQmFpRUhJQTlCQkdvaER3d0JDd0FMQUFzTElBZ2dBaUFJS0FJVUlBTnNRUUZxRUVrZ0FpQUlLQUlVSUFOc0VFa1E0UUlnQ0NBQ0lBZ29BaFFnQTJ4QkFtb1FTU0FDSUFnb0FoUWdBMnhCQVdvUVNSQzdCaUFEUVFGcUlRTU1BQXNBQzBHd3BRUkJzeTRRTUVIdEVoQXdRYkVaRURCQnlnSVFNMEhhSFJBd1Fkc3lFREFRTkF3SUMwR3dwUVJCNWpvUU1FSHRFaEF3UWJFWkVEQkJ5d0lRTTBIYUhSQXdRZGc5RURBUU5Bd0hDMEd3cFFSQnNNUUFFREJCN1JJUU1FR3hHUkF3UWMwQ0VETkIyaDBRTUVIL3h3QVFNQkEwREFZTFFiQ2xCRUdqendBUU1FSHRFaEF3UWJFWkVEQkJ6Z0lRTTBIYUhSQXdRYmJTQUJBd0VEUU1CUXRCc0tVRVFaUFlBQkF3UWUwU0VEQkJzUmtRTUVIUEFoQXpRZG9kRURCQnR0SUFFREFRTkF3RUN5QUZFSGdqQUVFd2F5SWhKQUFDUUNBYVFhQUJhaUlDS0FJQUlBZ1FUa0VBRUVrb0FnUkdCRUFnQWlnQ0JDQUlFRTVCQUJCSktBSUlSZzBCQzBFQUlRcEJBQ0VMUVFBaERTQUNRU0JxSVFRQ1FDQUlRUVJxRUtNQkJFQWdDRUVBUVFBUTh3RW9BZ0FoQXlBSVFRQkJBQkR6QVNnQ0JDRUZJQWhCQUVFQUVQTUJLQUlJSVFjZ0JDQUlLQUlRTmdJTUlBUWdDQ2dDRkVFQmF5SUdOZ0lRSUFRZ0JDZ0NEQ0FHYkJDbUJBTkFJQW9nQkNnQ0RFOE5BaUFISUFwMklRWWdCU0FLZGlFTVFRQWhEd05BSUFRb0FoQWlDU0FQVFFSQUlBcEJBV29oQ2d3Q0JTQUVJQWtnQ213Z0Qyb1FTU0FESUF3Z0JrRUJFUE1ESUE5QkFXb2hEd3dCQ3dBTEFBc0FDMEd3cFFSQjRBa1FNRUhxRUJBd1FiRVpFREJCTlJBelFkb2RFREJCbENFUU1CQTBEQVVMSUFnUVRrRUFFRWtvQWdRaEJ5QUlFRTVCQUJCSktBSUlJUVlnQ0NnQ0VDRUtJQWdvQWhRaEJTQUNRZHdBYWlJRVE4M01URDg0QWhnZ0JFRUZOZ0lVSUFSREFBREFQemdDRUNBRVF3QUFRRUE0QWd3Z0JFRWtOZ0lJSUFRZ0JUWUNCQ0FFSUFvMkFnQWdCRUVjYWtFa0VKUUNJQVJCS0dvaUR5QUVLQUlFSUFRb0FnQnNFS1lFQTBBZ0NpQUxSd1JBSUFZZ0MzWWhCQ0FISUF0MklRd2dCU0FMYkNFSlFRQWhBd05BSUFNZ0JVWUVRQ0FMUVFGcUlRc01Bd1VnRHlBRElBbHFFRWxCQWlBTUlBUkJBaER6QXlBRFFRRnFJUU1NQVFzQUN3QUxDeUFDSUFnUVRrRUFFRWtvQWdRMkFnQWdBaUFJRUU1QkFCQkpLQUlJTmdJRUlBSW9BZ2doQXdKQUlBTWdBa0VRYWlJS0lnUVFVeUlGU3dSQUl3QkJJR3NpQnlRQUFrQWdBeUFGYXlJRklBUVFNaWdDQUNBRUtBSUVhMEVNYlUwRVFDQUVJQVVReXdZTUFRc2dCQkF5SVFNZ0IwRUlhaUFFSUFRUVV5QUZhaERKQmlBRUVGTWdBeER2QWlJRElBVVF5QVlnQkNBREVNY0dJQU1vQWdRaEJBTkFJQVFnQXlnQ0NFY0VRQ0FES0FJUUdpQURJQU1vQWdoQkRHc2lCVFlDQ0NBRkVOTUdEQUVMQ3lBREtBSUFCRUFnQXlnQ0VCb2dBeWdDQUNFRUlBTVF0Z01hSUFRUU1Rc0xJQWRCSUdva0FBd0JDeUFESUFWSkJFQWdCQ2dDQUNBRFFReHNhaUVESUFRUVV5RUZJQVFnQXhEVUJpQUVJQVVRNVFJTEN3TkFJQW9RVXlBTlN3UkFJQW9nRFJDVEFTRUVJQUlvQWd3aEF3SkFJQU1nQkJCVElnVkxCRUFqQUVFZ2F5SUhKQUFDUUNBRElBVnJJZ1VnQkJBeUtBSUFJQVFvQWdSclFReHRUUVJBSUFRZ0JSRExCZ3dCQ3lBRUVESWhBeUFIUVFocUlBUWdCQkJUSUFWcUVNa0dJQVFRVXlBREVPOENJZ01nQlJESUJpQUVJQU1ReHdZZ0F5Z0NCQ0VFQTBBZ0JDQURLQUlJUndSQUlBTW9BaEFhSUFNZ0F5Z0NDRUVNYXlJRk5nSUlJQVVRNEFFTUFRc0xJQU1vQWdBRVFDQURLQUlRR2lBREtBSUFJUVFnQXhDMkF4b2dCQkF4Q3dzZ0IwRWdhaVFBREFFTElBTWdCVWtFUUNBRUtBSUFJQU5CREd4cUlRTWdCQkJUSVFVZ0JDQURFTklHSUFRZ0JSRGxBZ3NMSUExQkFXb2hEUXdCQ3dzTFFaUUJFRmNRc3dZaEF5TUFRUkJySWdRa0FDQUVRUWhxSUFNUXNnWWlBeUFhUVVCcklpSVFoQVFnQXhET0FTQUVRUkJxSkFBZ0lpZ0NBQ0FJRUU1QkFCQkpLQUlFRUpnQklDSW9BZ0FnQ0JCT1FRQVFTU2dDQ0JDSkFTQWhRUkJxUVpRZ0VJOEJJU29nSWlnQ0FDRXJJQnBCdkFKcUlSaEJBQ0VLSXdCQk1Hc2lKU1FBQWtBQ1FBSkFBa0FDUUNBSUJFQWdBa1VOQVNBSUVFNFFvd0ZGRFFJZ0NCQk9RUUFRU1NnQ0JDQUNLQUlBUncwRElBZ1FUa0VBRUVrb0FnZ2dBaWdDQkVjTkJDQUNJUXRCQUNFRkl3QkJJR3NpSGlRQUFrQUNRQ0FJSWdJb0FoQkJBRW9FUUNBZVFhdUNBUkNQQVNFT0lBSWhEd0pBQWtBQ1FDQUxRU0JxSWhFaURCQ2pBUVJBSUE4b0FoQkJBRXdOQVNBUFFhQ2dBVUhJeVFFUXFnRkZEUUlEUUVFQUlRWWdCU0FNS0FJTVR3MEVBMEFnRENnQ0VDQUdUUVJBSUFWQkFXb2hCUXdDQlNBTUlBd29BaEFnQld3Z0Jtb1FTU0VDSUE4Z0JTQUdFUE1CSVFRZ0R5QUZJQVpCQVdvaUJoRHpBU0VEUVFBaENRSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUlvQWdCQkFrWUVRQ0FFS0FJQVFRSkhEUUVnQXlnQ0FFRUNSdzBDSUFJb0FoQkJBVWNOQXlBRUtBSVFRUUZIRFFRZ0F5Z0NFRUVCUncwRklBSW9BZ1FnQXlnQ0JFY05CaUFDS0FJSUlBTW9BZ2hIRFFjZ0JDZ0NCQ0FES0FJRVJ3MElJQVFvQWdnZ0F5Z0NDRWNOQ1FOQUlBa2dCQ2dDQ0U4TkRVRUFJUWNnQ1NBQ0tBSUlUd1JBUWJDbEJFSDd3QUVRTUVHZ3dRRVFNRUd4R1JBd1FmY0FFRE5CMmgwUU1FSDZ3UUVRTUJBMERCVUxJQUlvQWhnZ0FpZ0NEQ0FKYkdvaEVDQUVJQWtRU3lFU0lBTWdDUkJMSVJNRFFDQUhJQVFvQWdSUEJFQWdDVUVCYWlFSkRBSUZJQkFnQjBFQ2RDSU5haUFOSUJKcUtnSUFJQTBnRTJvcUFnQ1RPQUlBSUFkQkFXb2hCd3dCQ3dBTEFBc0FDMEd3cFFSQmg4a0FFREJCNmhBUU1FR3hHUkF3UWRZQUVETkIyaDBRTUVHUHpnQVFNQkEwREFrTFFiQ2xCRUc1MHdBUU1FSHFFQkF3UWJFWkVEQkIxd0FRTTBIYUhSQXdRWS9PQUJBd0VEUU1DQXRCc0tVRVFlVFhBQkF3UWVvUUVEQkJzUmtRTUVIWUFCQXpRZG9kRURCQmo4NEFFREFRTkF3SEMwR3dwUVJCMCtjQUVEQkI2aEFRTUVHeEdSQXdRZGtBRUROQjJoMFFNRUc4NndBUU1CQTBEQVlMUWJDbEJFR0c3d0FRTUVIcUVCQXdRYkVaRURCQjJnQVFNMEhhSFJBd1FienJBQkF3RURRTUJRdEJzS1VFUWJmekFCQXdRZW9RRURCQnNSa1FNRUhiQUJBelFkb2RFREJCdk9zQUVEQVFOQXdFQzBHd3BRUkJndllBRURCQjZoQVFNRUd4R1JBd1Fkd0FFRE5CMmgwUU1FSGQ5Z0FRTUJBMERBTUxRYkNsQkVINStnQVFNRUhxRUJBd1FiRVpFREJCM1FBUU0wSGFIUkF3UWF2N0FCQXdFRFFNQWd0QnNLVUVRZGorQUJBd1Flb1FFREJCc1JrUU1FSGVBQkF6UWRvZEVEQkIzZllBRURBUU5Bd0JDMEd3cFFSQnBJRUJFREJCNmhBUU1FR3hHUkF3UWQ4QUVETkIyaDBRTUVHcit3QVFNQkEwQ3d3SUN3QUxBQXNBQzBHd3BRUkJvaWdRTUVIcUVCQXdRYkVaRURCQnlBQVFNMEhhSFJBd1FhTXNFREFRTkF3RUMwR3dwUVJCdkRRUU1FSHFFQkF3UWJFWkVEQkJ5UUFRTTBIYUhSQXdRYUk0RURBUU5Bd0RDMEd3cFFSQnk4QUFFREJCNmhBUU1FR3hHUkF3UWNvQUVETkIyaDBRTUVIaXd3QVFNQkEwREFJTElBNFFlQ0FlUWFHREFSQ1BBU0VzSXdCQk1Hc2lEU1FBSUF0QlBHb2lKaENnQkNBTlFRaHFRUVJ5SVNjZ0N5b0NOQkJ0SVRSQkFTRUVBa0FEUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnRVJDakFVRUJheUFFU3dSQUlCRWdCRUVCYXhDZkJDRUhJQkVnQkJDZkJDRU1JQkVnQkVFQmFpSURFSjhFSVFZQ2Z5QVJFS01CSUFSTEJFQWdFVUVBRUVrb0FnUWdFU0FFRUVrb0FnUnVzeERmQmhEZUJpSXVpME1BQUFCUFhRUkFJQzZvREFJTFFZQ0FnSUI0REFFTFFiQ2xCRUhNcUFFUU1FSDZxQUVRTUVHeEdSQXdRZDRBRUROQjJoMFFNRUgzcWdFUU1CQTBEQTBMSVJBZ0JDQVJLQUlRYnlFU0FrQWdCeWdDQkNBTUtBSUVSdzBBSUFjb0FnUWdCaWdDQkVjTkFDQUhLQUlJSUF3b0FnaEhEUUlnQnlnQ0NDQUdLQUlJUncwRFFRRWhBaUFNS0FJRVFRRnJJZ1JCQVNBRVFRRkxHeUVqSUF3b0FnaEJBV3NpQkVFQklBUkJBVXNiSVMwZ0VySWhMd05BSUFJZ0xVWU5DVUVCSVFRZ0FyTWhNQ0FISUFKQkFXc2lDUkJMSVI4Z0J5QUNFRXNoRXlBSElBSkJBV29pQlJCTElSWWdEQ0FKRUVzaEZDQU1JQUlRU3lFZ0lBd2dCUkJMSVJVZ0JpQUpFRXNoR1NBR0lBSVFTeUViSUFZZ0JSQkxJUmNEUUNBRUlDTkdCRUFnQlNFQ0RBSUZBa0FnSUNBRVFRSjBJZ0pxSWdrcUFnQVFiU0EwWFEwQUFrQUNRQ0FKS2dJQUlpNGdIeUFFUVFGclFRSjBJZ2xxS2dJQUlqRmVSUTBBSUM0Z0FpQWZhaW9DQUY1RkRRQWdMaUFmSUFSQkFXcEJBblFpRG1vcUFnQmVSUTBBSUM0Z0NTQVRhaW9DQUY1RkRRQWdMaUFDSUJOcUtnSUFYa1VOQUNBdUlBNGdFMm9xQWdCZVJRMEFJQzRnQ1NBV2Fpb0NBRjVGRFFBZ0xpQUNJQlpxS2dJQVhrVU5BQ0F1SUE0Z0Ztb3FBZ0JlUlEwQUlDNGdDU0FVYWlvQ0FGNUZEUUFnTGlBQ0lCUnFLZ0lBWGtVTkFDQXVJQTRnRkdvcUFnQmVSUTBBSUM0Z0NTQWdhaW9DQUY1RkRRQWdMaUFPSUNCcUtnSUFYa1VOQUNBdUlBa2dGV29xQWdCZVJRMEFJQzRnQWlBVmFpb0NBRjVGRFFBZ0xpQU9JQlZxS2dJQVhrVU5BQ0F1SUFrZ0dXb3FBZ0JlUlEwQUlDNGdBaUFaYWlvQ0FGNUZEUUFnTGlBT0lCbHFLZ0lBWGtVTkFDQXVJQWtnRzJvcUFnQmVSUTBBSUM0Z0FpQWJhaW9DQUY1RkRRQWdMaUFPSUJ0cUtnSUFYa1VOQUNBdUlBa2dGMm9xQWdCZVJRMEFJQzRnQWlBWGFpb0NBRjVGRFFBZ0xpQU9JQmRxS2dJQVhnMEJDeUF1SURGZFJRMEJJQzRnQWlBZmFpb0NBRjFGRFFFZ0xpQWZJQVJCQVdwQkFuUWlEbW9xQWdCZFJRMEJJQzRnQ1NBVGFpb0NBRjFGRFFFZ0xpQUNJQk5xS2dJQVhVVU5BU0F1SUE0Z0Uyb3FBZ0JkUlEwQklDNGdDU0FXYWlvQ0FGMUZEUUVnTGlBQ0lCWnFLZ0lBWFVVTkFTQXVJQTRnRm1vcUFnQmRSUTBCSUM0Z0NTQVVhaW9DQUYxRkRRRWdMaUFDSUJScUtnSUFYVVVOQVNBdUlBNGdGR29xQWdCZFJRMEJJQzRnQ1NBZ2Fpb0NBRjFGRFFFZ0xpQU9JQ0JxS2dJQVhVVU5BU0F1SUFrZ0ZXb3FBZ0JkUlEwQklDNGdBaUFWYWlvQ0FGMUZEUUVnTGlBT0lCVnFLZ0lBWFVVTkFTQXVJQWtnR1dvcUFnQmRSUTBCSUM0Z0FpQVphaW9DQUYxRkRRRWdMaUFPSUJscUtnSUFYVVVOQVNBdUlBa2dHMm9xQWdCZFJRMEJJQzRnQWlBYmFpb0NBRjFGRFFFZ0xpQU9JQnRxS2dJQVhVVU5BU0F1SUFrZ0Yyb3FBZ0JkUlEwQklDNGdBaUFYYWlvQ0FGMUZEUUVnTGlBT0lCZHFLZ0lBWFVVTkFRc2dEU0F1T0FJZ0lBMGdFallDR0NBTklCQTJBaFFnRFNBUElCQWdMeEN5QXpnQ0pDQU5RUWhxSWdJZ0p5QUVzeUF3SUJBUTdRSWdKaUFDRU93Q0N5QUVRUUZxSVFRTUFRc0FDd0FMQUFzQ1FDQUhLQUlFSUF3b0FnUkhEUUFnQmlnQ0JDQU1LQUlFUVFGMlJ3MEFJQWNvQWdnZ0RDZ0NDRWNOQkNBR0tBSUlJQXdvQWdoQkFYWkhEUVZCQWlFQ0FuOGdCaWdDQkVFQmE3TkRBQUFBdjVJaUxpQXVra01BQUFBL2tvNGlMa01BQUlCUFhTQXVRd0FBQUFCZ2NRUkFJQzZwREFFTFFRQUxJZ1JCQWtzaEJTQUVRUUlnQlJzaEh3Si9JQVlvQWdoQkFXdXpRd0FBQUwrU0lpNGdMcEpEQUFBQVA1S09JaTVEQUFDQVQxMGdMa01BQUFBQVlIRUVRQ0F1cVF3QkMwRUFDeUlFUVFJZ0JFRUNTeHNoSUNBU3NpRTFBMEFnQWlBZ1JnMEpJQUt6SWpoREFBQUFQNVJEQUFDQXZwSWlNRU1BQUFBL2tpRXhJREJEQUFBQXY1SWhNMEVDSVFRZ0J5QUNRUUZySWdrUVN5RVpJQWNnQWhCTElSTWdCeUFDUVFGcUlnVVFTeUVXSUF3Z0NSQkxJUlFnRENBQ0VFc2hHeUFNSUFVUVN5RVZBMEFnQkNBZlJnUkFJQVVoQWd3Q0JRSkFJQnNnQkVFQ2RDSUphaUlDS2dJQUVHMGdORjBOQUNBRXN5STJRd0FBQUQrVVF3QUFnTDZTSVM4Q1FBSkFJQUlxQWdBaUxpQVpJQVJCQVd0QkFuUWlEbW9pSXlvQ0FGNUZEUUFnTGlBSklCbHFLZ0lBWGtVTkFDQXVJQmtnQkVFQmFrRUNkQ0lYYWlvQ0FGNUZEUUFnTGlBT0lCTnFLZ0lBWGtVTkFDQXVJQWtnRTJvcUFnQmVSUTBBSUM0Z0V5QVhhaW9DQUY1RkRRQWdMaUFPSUJacUtnSUFYa1VOQUNBdUlBa2dGbW9xQWdCZVJRMEFJQzRnRmlBWGFpb0NBRjVGRFFBZ0xpQU9JQlJxS2dJQVhrVU5BQ0F1SUFrZ0ZHb3FBZ0JlUlEwQUlDNGdGQ0FYYWlvQ0FGNUZEUUFnTGlBT0lCdHFLZ0lBWGtVTkFDQXVJQmNnRzJvcUFnQmVSUTBBSUM0Z0RpQVZhaW9DQUY1RkRRQWdMaUFKSUJWcUtnSUFYa1VOQUNBdUlCVWdGMm9xQWdCZVJRMEFJQVlnTDBNQUFBQy9raUl5SURNUVJ5QXVYVVVOQUNBQ0tnSUFJQVlnTHlBekVFZGVSUTBBSUFJcUFnQWdCaUF2UXdBQUFEK1NJaTRnTXhCSFhrVU5BQ0FDS2dJQUlBWWdNaUF3RUVkZVJRMEFJQUlxQWdBZ0JpQXZJREFRUjE1RkRRQWdBaW9DQUNBR0lDNGdNQkJIWGtVTkFDQUNLZ0lBSUFZZ01pQXhFRWRlUlEwQUlBSXFBZ0FnQmlBdklERVFSMTVGRFFBZ0Fpb0NBQ0FHSUM0Z01SQkhYZzBCQ3lBQ0tnSUFJaTRnSXlvQ0FGMUZEUUVnTGlBSklCbHFLZ0lBWFVVTkFTQXVJQmtnQkVFQmFrRUNkQ0lYYWlvQ0FGMUZEUUVnTGlBT0lCTnFLZ0lBWFVVTkFTQXVJQWtnRTJvcUFnQmRSUTBCSUM0Z0V5QVhhaW9DQUYxRkRRRWdMaUFPSUJacUtnSUFYVVVOQVNBdUlBa2dGbW9xQWdCZFJRMEJJQzRnRmlBWGFpb0NBRjFGRFFFZ0xpQU9JQlJxS2dJQVhVVU5BU0F1SUFrZ0ZHb3FBZ0JkUlEwQklDNGdGQ0FYYWlvQ0FGMUZEUUVnTGlBT0lCdHFLZ0lBWFVVTkFTQXVJQmNnRzJvcUFnQmRSUTBCSUM0Z0RpQVZhaW9DQUYxRkRRRWdMaUFKSUJWcUtnSUFYVVVOQVNBdUlCVWdGMm9xQWdCZFJRMEJJQVlnTDBNQUFBQy9raUl5SURNUVJ5QXVYa1VOQVNBQ0tnSUFJQVlnTHlBekVFZGRSUTBCSUFJcUFnQWdCaUF2UXdBQUFEK1NJaTRnTXhCSFhVVU5BU0FDS2dJQUlBWWdNaUF3RUVkZFJRMEJJQUlxQWdBZ0JpQXZJREFRUjExRkRRRWdBaW9DQUNBR0lDNGdNQkJIWFVVTkFTQUNLZ0lBSUFZZ01pQXhFRWRkUlEwQklBSXFBZ0FnQmlBdklERVFSMTFGRFFFZ0Fpb0NBQ0FHSUM0Z01SQkhYVVVOQVFzZ0RTQVNOZ0lZSUEwZ0VEWUNGQ0FOSUFJcUFnQTRBaUFnRFNBUElCQWdOUkN5QXpnQ0pDQU5RUWhxSWdJZ0p5QTJJRGdnRUJEdEFpQW1JQUlRN0FJTElBUkJBV29oQkF3QkN3QUxBQXNBQ3lBRElRUWdEQ2dDQkNBSEtBSUVRUUYyUncwSklBWW9BZ1FnQnlnQ0JFRUJka2NOQ1NBTUtBSUlJQWNvQWdoQkFYWkhEUVVnQmlnQ0NDQUhLQUlJUVFGMlJ3MEdRUUVoQWlBTUtBSUVRUUZySWdSQkFTQUVRUUZMR3lFZklBd29BZ2hCQVdzaUJFRUJJQVJCQVVzYklTQWdFckloTlFOQUlBSWdJRVlOQ0VFQklRUWdBa0VCZExOREFBQUFQNUlpTUVNQUFBQkFraUV4SURCREFBQUF3SkloTXlBQ3N5RTRJQXdnQWtFQmF5SUpFRXNoR1NBTUlBSVFTeUViSUF3Z0FrRUJhaUlGRUVzaEV5QUdJQWtRU3lFV0lBWWdBaEJMSVJRZ0JpQUZFRXNoRlFOQUlBUWdIMFlFUUNBRklRSU1BZ1VDUUNBYklBUkJBblFpQ1dvaUFpb0NBQkJ0SURSZERRQWdCRUVCZExOREFBQUFQNUloTHdKQUFrQWdBaW9DQUNJdUlCa2dCRUVCYTBFQ2RDSU9haUlqS2dJQVhrVU5BQ0F1SUFrZ0dXb3FBZ0JlUlEwQUlDNGdHU0FFUVFGcVFRSjBJaGRxS2dJQVhrVU5BQ0F1SUE0Z0cyb3FBZ0JlUlEwQUlDNGdGeUFiYWlvQ0FGNUZEUUFnTGlBT0lCTnFLZ0lBWGtVTkFDQXVJQWtnRTJvcUFnQmVSUTBBSUM0Z0V5QVhhaW9DQUY1RkRRQWdMaUFPSUJacUtnSUFYa1VOQUNBdUlBa2dGbW9xQWdCZVJRMEFJQzRnRmlBWGFpb0NBRjVGRFFBZ0xpQU9JQlJxS2dJQVhrVU5BQ0F1SUFrZ0ZHb3FBZ0JlUlEwQUlDNGdGQ0FYYWlvQ0FGNUZEUUFnTGlBT0lCVnFLZ0lBWGtVTkFDQXVJQWtnRldvcUFnQmVSUTBBSUM0Z0ZTQVhhaW9DQUY1RkRRQWdCeUF2UXdBQUFNQ1NJaklnTXhCSElDNWRSUTBBSUFJcUFnQWdCeUF2SURNUVIxNUZEUUFnQWlvQ0FDQUhJQzlEQUFBQVFKSWlMaUF6RUVkZVJRMEFJQUlxQWdBZ0J5QXlJREFRUjE1RkRRQWdBaW9DQUNBSElDOGdNQkJIWGtVTkFDQUNLZ0lBSUFjZ0xpQXdFRWRlUlEwQUlBSXFBZ0FnQnlBeUlERVFSMTVGRFFBZ0Fpb0NBQ0FISUM4Z01SQkhYa1VOQUNBQ0tnSUFJQWNnTGlBeEVFZGVEUUVMSUFJcUFnQWlMaUFqS2dJQVhVVU5BU0F1SUFrZ0dXb3FBZ0JkUlEwQklDNGdHU0FFUVFGcVFRSjBJaGRxS2dJQVhVVU5BU0F1SUE0Z0cyb3FBZ0JkUlEwQklDNGdGeUFiYWlvQ0FGMUZEUUVnTGlBT0lCTnFLZ0lBWFVVTkFTQXVJQWtnRTJvcUFnQmRSUTBCSUM0Z0V5QVhhaW9DQUYxRkRRRWdMaUFPSUJacUtnSUFYVVVOQVNBdUlBa2dGbW9xQWdCZFJRMEJJQzRnRmlBWGFpb0NBRjFGRFFFZ0xpQU9JQlJxS2dJQVhVVU5BU0F1SUFrZ0ZHb3FBZ0JkUlEwQklDNGdGQ0FYYWlvQ0FGMUZEUUVnTGlBT0lCVnFLZ0lBWFVVTkFTQXVJQWtnRldvcUFnQmRSUTBCSUM0Z0ZTQVhhaW9DQUYxRkRRRWdCeUF2UXdBQUFNQ1NJaklnTXhCSElDNWVSUTBCSUFJcUFnQWdCeUF2SURNUVIxMUZEUUVnQWlvQ0FDQUhJQzlEQUFBQVFKSWlMaUF6RUVkZFJRMEJJQUlxQWdBZ0J5QXlJREFRUjExRkRRRWdBaW9DQUNBSElDOGdNQkJIWFVVTkFTQUNLZ0lBSUFjZ0xpQXdFRWRkUlEwQklBSXFBZ0FnQnlBeUlERVFSMTFGRFFFZ0Fpb0NBQ0FISUM4Z01SQkhYVVVOQVNBQ0tnSUFJQWNnTGlBeEVFZGRSUTBCQ3lBTklCSTJBaGdnRFNBUU5nSVVJQTBnQWlvQ0FEZ0NJQ0FOSUE4Z0VDQTFFTElET0FJa0lBMUJDR29pQWlBbklBU3pJRGdnRUJEdEFpQW1JQUlRN0FJTElBUkJBV29oQkF3QkN3QUxBQXNBQ3lBTlFUQnFKQUFNQ1F0QnNLVUVRWXlNQVJBd1Flb1FFREJCc1JrUU1FSEFBUkF6UWRvZEVEQkI3WXdCRURBUU5Bd0dDMEd3cFFSQi9wQUJFREJCNmhBUU1FR3hHUkF3UWNFQkVETkIyaDBRTUVIdGpBRVFNQkEwREFVTFFiQ2xCRUdNakFFUU1FSHFFQkF3UWJFWkVEQkJsUUlRTTBIYUhSQXdRZTJNQVJBd0VEUU1CQXRCc0tVRVFicVNBUkF3UWVvUUVEQkJzUmtRTUVHV0FoQXpRZG9kRURCQjdZd0JFREFRTkF3REMwR3dwUVJCa0pRQkVEQkI2aEFRTUVHeEdSQXdRZW9DRUROQjJoMFFNRUh0akFFUU1CQTBEQUlMUWJDbEJFSGxsUUVRTUVIcUVCQXdRYkVaRURCQjZ3SVFNMEhhSFJBd1FlMk1BUkF3RURRTUFRc2dBeUVFREFFTEN3d0NDeUFzRUhnZ0hrR09oUUVRandFaEUwRUFJUWxCQUNFTkl3QkIwQUJySWdJa0FDQUxRU0JxSVJFZ0MwRThhaUVPSUFzcUFqUVFiU0V4SUFzcUFqaERBQUNBUDVJUWJTQUxLZ0k0bFNFekFrQUNRQUpBQTBBZ0RoQ0JBU0FKU3dSQUlBNGdDUkNpQVNJTUtBSVFJQkVvQWhCT0RRSWdEQ2dDRENFRUlCRW9BaEFoQXlBTUtBSVFJUVVnQWtFRWFpQUNJQXdxQWdBZ0RDb0NCQ0FNS0FJTUVKNEVBbjhnQWlvQ0FFTUFBQUEva2lJdWkwTUFBQUJQWFFSQUlDNm9EQUVMUVlDQWdJQjRDeUVHQW44Z0Fpb0NCRU1BQUFBL2tpSXVpME1BQUFCUFhRUkFJQzZvREFFTFFZQ0FnSUI0Q3lFUUFrQUNmeUFSSUFNZ0JHd2dCV29pQlVFQmF4QkpJUU1nRVNBRkVFa2hCQUpBQWtBQ1FBSkFBa0FDUUNBUklBVkJBV29RU1NJSEtBSUVJQU1vQWdRZ0JDZ0NCRVpHQkVBZ0J5Z0NDQ0FES0FJSUlBUW9BZ2hHUncwQ0l3QkJJR3NpQlNRQUFrQUNRQUpBQWtBQ1FBSkFBa0FnRUVFQVRBMEFJQVFvQWdRZ0VFRUJhazBOQUNBR1FRQk1EUUVnQmtFQmFpSVNJQVFvQWdoUERRRWdBeWdDQkNBRUtBSUVSdzBDSUFNb0FnUWdCeWdDQkVjTkF5QURLQUlJSUFRb0FnaEhEUVFnQXlnQ0NDQUhLQUlJUncwRklBTWdCa0VCYXlJV0VFc2hGQ0FESUFZUVN5RVZJQU1nRWhCTElSa2dCQ0FHRUVzaEd5QUhJQllRU3lFV0lBY2dCaEJMSVJjZ0J5QVNFRXNoQnlBRlFSeHFJQVZCR0dvZ0JVRVVhaUFGUVJCcUlBVkJER29nQkNBUUlBWVFtQVFnR1NBUVFRSjBJZ05xS2dJQUlUUWdBeUFVYWlvQ0FDRXlJQU1nQjJvcUFnQWhOU0FESUJacUtnSUFJVGdnQXlBWGFpSUhLZ0lBSVM0Z0F5QVZhaUlTS2dJQUlTOGdBeUFiYWlvQ0FDRXdJQklxQWdRaE5pQVNRUVJyS2dJQUlUY2dCeW9DQkNFNUlBZEJCR3NxQWdBaE9pQUNJQVVxQWhRNEFpQWdBaUFGS2dJTUlqczRBaXdnQWlBN09BSWtJQUlnTnlBMmt5QTVJRHFUa2tNQUFJQStsQ0kyT0FJb0lBVXFBaEFoTnlBQ0lDNGdMeUF3SURDU2s1STRBa0FnQWlBeUlEU1RJRFVnT0pPU1F3QUFnRDZVSWpBNEFqd2dBaUEyT0FJNElBSWdNRGdDTkNBQ0lEYzRBakFnQWlBRktnSWNqRGdDRkNBRktnSVlJVEFnQWlBdUlDK1RRd0FBQUwrVU9BSWNJQUlnTUl3NEFoZ2dCVUVnYWlRQURBWUxRYkNsQkVHVnNRRVFNRUg2cUFFUU1FR3hHUkF3UWJVQ0VETkIyaDBRTUVIUHNRRVFNQkEwREF3TFFiQ2xCRUhKc2dFUU1FSDZxQUVRTUVHeEdSQXdRYllDRUROQjJoMFFNRUdFc3dFUU1CQTBEQXNMUWJDbEJFSGRzd0VRTUVINnFBRVFNRUd4R1JBd1FiY0NFRE5CMmgwUU1FR1J0QUVRTUJBMERBb0xRYkNsQkVIcHRBRVFNRUg2cUFFUU1FR3hHUkF3UWJnQ0VETkIyaDBRTUVHUnRBRVFNQkEwREFrTFFiQ2xCRUhDdFFFUU1FSDZxQUVRTUVHeEdSQXdRYmtDRUROQjJoMFFNRUdSdEFFUU1CQTBEQWdMUWJDbEJFR090Z0VRTUVINnFBRVFNRUd4R1JBd1Fib0NFRE5CMmgwUU1FR1J0QUVRTUJBMERBY0xEQUVMQWtBZ0F5Z0NCQ0FFS0FJRVJ3MEFJQWNvQWdRZ0JDZ0NCRUVCZGtjTkFDQURLQUlJSUFRb0FnaEhEUU1nQnlnQ0NDQUVLQUlJUVFGMlJ3MERJd0JCSUdzaUJTUUFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBUVFRQk1EUUFnQkNnQ0JDQVFRUUZxVFEwQUlBWkJBRXdOQVNBR1FRRnFJaElnQkNnQ0NFOE5BU0FES0FJRUlBUW9BZ1JIRFFJZ0J5Z0NCQ0FES0FJRVFRRjJSdzBESUFNb0FnZ2dCQ2dDQ0VjTkJDQUhLQUlJSUFNb0FnaEJBWFpIRFFVZ0F5QUdRUUZyRUVzaEZpQURJQVlRU3lFVUlBTWdFaEJMSVJVZ0JDQUdFRXNoR1NBRlFSeHFJQVZCR0dvZ0VMSWdCckpCQVJDZUJDQUZLZ0ljSWk1REFBQUF2NUpEQUFBQUFHQkZEUVlnQlNvQ0dFTUFBQUMva2tNQUFBQUFZRVVOQnlBSEtBSUVzeUF1UXdBQUFEK1NYa1VOQ0NBSEtBSUlzeUFGS2dJWVF3QUFBRCtTWGtVTkNTQUZRUlJxSUFWQkVHb2dCVUVNYWlBRlFRaHFJQVZCQkdvZ0JDQVFJQVlRbUFRZ0J5QUZLZ0ljSUFVcUFoZ1FSeUV1SUJRZ0VFRUNkQ0lEYWlJU0tnSUFJUzhnQXlBWmFpb0NBQ0V3SUJKQkJHc3FBZ0FoTkNBSElBVXFBaHhEQUFBQVA1SWdCU29DR0JCSElUSWdFaW9DQkNFMUlBY2dCU29DSEVNQUFBQy9raUFGS2dJWUVFY2hPQ0FESUJacUtnSUFJVFlnQnlBRktnSWNJQVVxQWhoREFBQUFQNUlRUnlFM0lBTWdGV29xQWdBaE9TQUhJQVVxQWh3Z0JTb0NHRU1BQUFDL2toQkhJVG9nQWlBRktnSU1PQUlnSUFJZ0JTb0NCQ0k3T0FJc0lBSWdOQ0F5a2lBMUlEaVNrME1BQUlBK2xDSTBPQUlvSUFJZ096Z0NKQ0FGS2dJSUlUSWdBaUF1SUM4Z01DQXdrcE9TT0FKQUlBSWdOaUEza2lBNUlEcVNrME1BQUlBK2xDSXdPQUk4SUFJZ05EZ0NPQ0FDSURBNEFqUWdBaUF5T0FJd0lBSWdCU29DRkl3NEFoUWdCU29DRUNFd0lBSWdMaUF2azBNQUFBQy9sRGdDSENBQ0lEQ01PQUlZSUFWQklHb2tBQXdLQzBHd3BRUkJsYkVCRURCQitxZ0JFREJCc1JrUU1FR2RBeEF6UWRvZEVEQkJ6N0VCRURBUU5Bd1FDMEd3cFFSQnliSUJFREJCK3FnQkVEQkJzUmtRTUVHZUF4QXpRZG9kRURCQmhMTUJFREFRTkF3UEMwR3dwUVJCM2JNQkVEQkIrcWdCRURCQnNSa1FNRUdmQXhBelFkb2RFREJCa2JRQkVEQVFOQXdPQzBHd3BRUkJvTGdCRURCQitxZ0JFREJCc1JrUU1FR2dBeEF6UWRvZEVEQkJrYlFCRURBUU5Bd05DMEd3cFFSQndyVUJFREJCK3FnQkVEQkJzUmtRTUVHaEF4QXpRZG9kRURCQmtiUUJFREFRTkF3TUMwR3dwUVJCaWJrQkVEQkIrcWdCRURCQnNSa1FNRUdpQXhBelFkb2RFREJCa2JRQkVEQVFOQXdMQzBHd3BRUkJ4TGtCRURCQitxZ0JFREJCc1JrUU1FR3NBeEF6UWRvZEVEQkJscm9CRURBUU5Bd0tDMEd3cFFSQnFMc0JFREJCK3FnQkVEQkJzUmtRTUVHdEF4QXpRZG9kRURCQjBic0JFREFRTkF3SkMwR3dwUVJCbUwwQkVEQkIrcWdCRURCQnNSa1FNRUd1QXhBelFkb2RFREJCbHJvQkVEQVFOQXdJQzBHd3BRUkIvYjBCRURCQitxZ0JFREJCc1JrUU1FR3ZBeEF6UWRvZEVEQkIwYnNCRURBUU5Bd0hDd3dCQ3lBRUtBSUVJQU1vQWdSQkFYWkhEUVFnQkNnQ0JDQUhLQUlFUncwRUlBUW9BZ1FnQXlnQ0JFRUJka2NOQXlBRUtBSUVJQWNvQWdSSERRTWpBRUVnYXlJRkpBQUNRQUpBQWtBQ1FBSkFBa0FDUUNBUVFRQk1EUUFnQkNnQ0JDQVFRUUZxVFEwQUlBWkJBRXdOQVNBR1FRRnFJaElnQkNnQ0NFOE5BU0FFS0FJRUlBTW9BZ1JCQVhaSERRSWdCeWdDQkNBREtBSUVRUUYyUncwRElBUW9BZ2dnQXlnQ0NFRUJka2NOQkNBSEtBSUlJQU1vQWdoQkFYWkhEUVVnQkNBR0VFc2hGaUFISUFaQkFXc1FTeUVVSUFjZ0JoQkxJUlVnQnlBU0VFc2hHU0FGUVJ4cUlBVkJHR29nRUxJZ0JySkJBUkR0QWlBRlFSUnFJQVZCRUdvZ0JVRU1haUFGUVFocUlBVkJCR29nQkNBUUlBWVFtQVFnQXlBRktnSWNJQVVxQWhnUVJ5RXVJQlVnRUVFQ2RDSUhhaUlTS2dJQUlTOGdCeUFXYWlvQ0FDRXdJQU1nQlNvQ0hFTUFBQURBa2lBRktnSVlFRWNoTkNBU0tnSUVJVElnQXlBRktnSWNRd0FBQUVDU0lBVXFBaGdRUnlFMUlCSkJCR3NxQWdBaE9DQURJQVVxQWh3Z0JTb0NHRU1BQUFEQWtoQkhJVFlnQnlBWmFpb0NBQ0UzSUFNZ0JTb0NIQ0FGS2dJWVF3QUFBRUNTRUVjaE9TQUhJQlJxS2dJQUlUb2dBaUFGS2dJTU9BSWdJQUlnQlNvQ0JDSTdPQUlzSUFJZ05DQXlraUExSURpU2swTUFBSUErbENJME9BSW9JQUlnT3pnQ0pDQUZLZ0lJSVRJZ0FpQXZJQzRnTUNBd2twT1NPQUpBSUFJZ05pQTNraUE1SURxU2swTUFBSUErbENJd09BSThJQUlnTkRnQ09DQUNJREE0QWpRZ0FpQXlPQUl3SUFJZ0JTb0NGSXc0QWhRZ0JTb0NFQ0V3SUFJZ0x5QXVrME1BQUFDL2xEZ0NIQ0FDSURDTU9BSVlJQVZCSUdva0FBd0dDMEd3cFFSQmxiRUJFREJCK3FnQkVEQkJzUmtRTUVIbkFoQXpRZG9kRURCQno3RUJFREFRTkF3TEMwR3dwUVJCeWJJQkVEQkIrcWdCRURCQnNSa1FNRUhvQWhBelFkb2RFREJCaExNQkVEQVFOQXdLQzBHd3BRUkIyNzRCRURCQitxZ0JFREJCc1JrUU1FSHBBaEF6UWRvZEVEQkJrYlFCRURBUU5Bd0pDMEd3cFFSQm9MZ0JFREJCK3FnQkVEQkJzUmtRTUVIcUFoQXpRZG9kRURCQmtiUUJFREFRTkF3SUMwR3dwUVJCMHI4QkVEQkIrcWdCRURCQnNSa1FNRUhyQWhBelFkb2RFREJCa2JRQkVEQVFOQXdIQzBHd3BRUkJpYmtCRURCQitxZ0JFREJCc1JrUU1FSHNBaEF6UWRvZEVEQkJrYlFCRURBUU5Bd0dDd3RCQVF3RkMwR3dwUVJCNmF3QkVEQkIrcWdCRURCQnNSa1FNRUhTQXhBelFkb2RFREJCMDYwQkVEQVFOQXdEQzBHd3BRUkJxYTRCRURCQitxZ0JFREJCc1JrUU1FSFZBeEF6UWRvZEVEQkIwNjBCRURBUU5Bd0NDMEd3cFFSQm9LOEJFREJCK3FnQkVEQkJzUmtRTUVIWUF4QXpRZG9kRURCQjA2MEJFREFRTkF3QkMwR3dwUVJCL2E4QkVEQkIrcWdCRURCQnNSa1FNRUhiQXhBelFkb2RFREJCeExBQkVEQVFOQXNNQ0F0RkRRQWpBRUV3YXlJREpBQWdBaW9DUUNFdUlBSXFBaVFRYlNFdklBSXFBaVFpTUNBd2tpQUNLZ0lvSWpDVUlBSXFBalNVSUM0Z0w1U1RJQUlxQWpBZ01CQnRsSk1nQWlvQ0lDQUNLZ0kwRUcyVWt5QUNLZ0lnSUFJcUFqQ1VJQUlxQWtDVWtpSXVpME1BQUFBMFh5SUZSUVJBSUFOREFBQ0FQeUF1bFNJdUlBSXFBakFnQWlvQ05DQUNLZ0pBRUpVRWxEZ0NBQ0FESUM0Z0Fpb0NLQ0FDS2dJa0lBSXFBa0FnQWlvQ1BCQ2hBWlE0QWdRZ0F5QXVJQUlxQWlRZ0Fpb0NLQ0FDS2dJd0lBSXFBalFRb1FHVU9BSUlJQU1nTGlBQ0tnSWdJQUlxQWlnZ0Fpb0NRQkNWQkpRNEFoQWdBeUF1SUFJcUFpZ2dBaW9DSUNBQ0tnSTBJQUlxQWl3UW9RR1VPQUlVSUFNZ0xpQUNLZ0lnSUFJcUFpUWdBaW9DTUJDVkJKUTRBaUFnQXlBREtnSUVPQUlNSUFNZ0F5b0NDRGdDR0NBRElBTXFBaFE0QWh3TElBVkZJZ1VFUUNBQ0lBTXFBZ2dnQWlvQ0hKUWdBeW9DQUNBQ0tnSVVsQ0FES2dJRUlBSXFBaGlVa3BJNEFnZ2dBaUFES2dJVUlBSXFBaHlVSUFNcUFnd2dBaW9DRkpRZ0F5b0NFQ0FDS2dJWWxKS1NPQUlNSUFJZ0F5b0NJQ0FDS2dJY2xDQURLZ0lZSUFJcUFoU1VJQU1xQWh3Z0Fpb0NHSlNTa2pnQ0VBc2dBMEV3YWlRQUlBVkZEUUFnQWlvQ0NCQnRJQUlxQWd3UWJaSWdDeW9DV0Y0TkFDQUNLZ0lnSUFJcUFqQ1VJQUlxQWlRUWJaTWlMa01BQUFBQVhBUkFJQXdnQWlvQ0lDQUNLZ0l3a2hCdElDNlZPQUlnQ3lBdVF3QUFBQUJiRFFBZ0RDb0NHQ0FFSUFZUVN5QVFRUUowSWdOcUtnSUFYQTBFSUF3Z0JDQUdFRXNnQTJvcUFnQWdBaW9DSENBQ0tnSVFsQ0FDS2dJVUlBSXFBZ2dpTHBRZ0Fpb0NHQ0FDS2dJTUlpK1VrcEtUT0FJWUlBd2dERUVFYWlBdUlBSXFBZ1NTSUM4Z0Fpb0NBSklnRENnQ0RCRHRBaUFNSUFJcUFoQWdEQ2dDRUxLU0lpNDRBaFFnRENBdUlCRW9BaEN5RU9zQ09BSVVJRE1nRENvQ0lJdGVSUTBBSUF3cUFoZ1FiU0F4WUVVTkFDQU1LZ0lBSWk1REFBQUFBR0JGRFFBZ0xpQVJRUUFRU1NnQ0JMTmRSUTBBSUF3cUFnUWlMa01BQUFBQVlFVU5BQ0F1SUJGQkFCQkpLQUlJczExRkRRQWdEQ0FQSUF3b0Fnd2dEQ29DRkJDeUF6Z0NIQ0FPSUEwUW9nRWdERUVrRUQ0YUlBMUJBV29oRFFzZ0NVRUJhaUVKREFFTEN3SkFJQTBnRGhDQkFTSUVTd1JBSXdCQklHc2lCaVFBQWtBZ0RTQUVheUlFSUE0UU1pZ0NBQ0FPS0FJRWEwRWtiVTBFUUNNQVFSQnJJZ01rQUNBRElBNGdCQkRGQmlJRUtBSUVJUWNnQkNnQ0NDRUZBMEFnQlNBSFJnUkFJQVFRYXlBRFFSQnFKQUFGSUE0UU1ob2dCeERDQmlBRUlBZEJKR29pQnpZQ0JBd0JDd3NNQVFzZ0RoQXlJUU1nQmtFSWFpQU9JQTRRZ1FFZ0JHb1F3d1lnRGhDQkFTQURFSjBFSVFVakFFRVFheUlESkFBZ0F5QUZLQUlJTmdJQUlBVW9BZ2doQnlBRElBVkJDR28yQWdnZ0F5QUhJQVJCSkd4cU5nSUVJQU1vQWdBaEJBTkFJQU1vQWdRZ0JFY0VRQ0FGS0FJUUdpQURLQUlBRU1JR0lBTWdBeWdDQUVFa2FpSUVOZ0lBREFFTEN5QURFS2tCSUFOQkVHb2tBQ0FPSUFVUW5BUWdCUkNiQkFzZ0JrRWdhaVFBREFFTElBUWdEVXNFUUNBT0tBSUFJQTFCSkd4cUlRUWdEaENCQVNFRElBNGdCQkRRQmlBT0lBTVE0QVlMQ3lBQ1FkQUFhaVFBREFJTFFiQ2xCRUdxb2dFUU1FSHFFQkF3UWJFWkVEQkI2UU1RTTBIYUhSQXdRWjZqQVJBd0VEUU1Bd3RCc0tVRVFZU2tBUkF3UWVvUUVEQkJzUmtRTUVHT0JCQXpRZG9kRURCQnZhUUJFREFRTkF3Q0N5QVRFSGdnSGtIUGhnRVFqd0VoRmlNQVFSQnJJaElrQUFKQUFrQUNRQUpBSUF0QlBHb2lEUkNCQVNBTEtBSlVTd1JBSUF0QkVHb2lCeEJUSUFzb0FnaEhEUUVnQjBFQUVKTUJFRk1nQ3lnQ0RFY05BaUFTRUVvaEVDQUxLQUlJSVFJZ0N5Z0NEQ0VESUFzb0FnQWhCU0FMS0FJRUlRd2dDeWdDVkNFR0l3QkJJR3NpQkNRQUlBV3lJQUt5bFkwaExpQU1zaUFEc3BXTklTOGdFQkNnQkNBUUlBWVFwUVFnQWlBRGJDRVJRUUFoQWdOQUFrQkJBQ0VESUFjUVV5QUNUUVJBQW44Z0w0dERBQUFBVDEwRVFDQXZxQXdCQzBHQWdJQ0FlQXV5SVM4Q2Z5QXVpME1BQUFCUFhRUkFJQzZvREFFTFFZQ0FnSUI0QzdJaExnTkFJQVFnQXpZQ0hDQU5FSUVCSUFOTkJFQWdCaUFSYlNFVVFRQWhEZ05BUVFBaEJpQUhFRk1nRGswRVFDQUVRU0JxSkFBTUJRc0RRQ0FISUE0UWt3RVFVeUFHVFFSQUlBNUJBV29oRGd3Q0N5QUVJQWNnRGhDVEFTQUdFSk1CSWd3UVFUWUNFQ0FFSUJRMkFod0NRQ0FFUVJCcUlBUkJIR29RbGdJb0FnQWlFVVVOQUNBTUVMa0NJUk1nQkNBTUVMa0NOZ0lRSUFSQkVHb2dFUkR4QVNFRElBd1E2Z0loQlNNQVFTQnJJZ2trQUNBSklBVTJBaEFnQ1NBRE5nSVlJd0JCUUdvaUFpUUFJQUlnQXpZQ01DQUNJQk0yQWpnZ0FpQUZOZ0lvQTBBQ1FDQUNRVEJxSUFKQktHb1FxQUVOQUFKQUFrQUNRQ0FDUVNocUlBSkJPR29RcGdNaUF3NEVBd01BQVFJTElBSkJLR29RendFb0FnQWdBaWdDT0JDUUFVVU5BaUFDS0FJNElBSW9BaWdReEFFTUFnc2dBaUFDS0FJNElnTTJBaUFnQXlBQ1FTQnFFS0FCS0FJQUlBSkJLR29RendFb0FnQVF2d1lhREFFTElBTkJCMHdFUUNBQ0tBSTRJUU1nQWlnQ0tDRVRJd0JCSUdzaUJTUUFJQVVnQXpZQ0dDQUZJQk0yQWhBZ0JVRVFhaERQQVJvRFFDQUZRUmhxSUFWQkVHb1Fmd1JBSUFVb0FoZ2hGU01BUVJCckloa2tBQ01BUVNCcklnTWtBQ0FESUJNMkFoQWdBeUFWTmdJWUFrQWdBMEVZYWlBRFFSQnFFSDlGRFFBZ0F5QURLQUlZTmdJSUEwQWdBMEVJYWhDZ0FTQURRUkJxRUg5RkRRRWdBeWdDQ0NBREtBSVlFSkFCUlEwQUlBTWdBeWdDQ0RZQ0dBd0FDd0FMSUFNb0FoZ2hGU0FEUVNCcUpBQWdHVUVRYWlRQUlBVWdGVFlDQ0NBRlFRaHFJQVZCR0dvUWZ3UkFJQVVvQWhnZ0JTZ0NDQkRFQVFzZ0JVRVlhaENnQVJvTUFRc0xJQVZCSUdva0FBd0JDeUFDSUFKQk9Hb2dBMEVCZGhEeEFTSUROZ0lnSUFJZ0FpZ0NLRFlDR0NBQ0tBSTRJQU1nQWtFWWFoRFBBU2dDQUJDL0JpRURJQUlnQWlnQ09EWUNFQ0FDSUFJb0FoZzJBZ2dDUUNBQ0tBSVFJQUlvQWlBUWtBRkZCRUFnQWtFUWFpRVZJQUpCQ0dvaEV5QUNLQUlnSVJrakFFRVFheUlGSkFBZ0JTQVpOZ0lJQTBBZ0ZTQVRFTThCRUtnQklobEZCRUFnRXlnQ0FDQUZLQUlJRUpBQlJRMEJDd3NnQlVFUWFpUUFJQmxCQVhORkRRRWdBaWdDRUNBQ0tBSUlFTVFCSUFOQkFXb2hBd3NnQWtFUWFpSUZFS0FCR2dKQUlBVWdBa0VJYWhEMEFVVU5BQU5BSUFJb0FoQWdBaWdDSUJDUUFRUkFJQUpCRUdvUW9BRWFEQUVMQTBBZ0FrRUlhaERQQVNnQ0FDQUNLQUlnRUpBQlJRMEFDeUFDUVJCcUlBSkJDR29RdmdZTkFTQUNRUkJxSWdVb0FnQWdBaWdDQ0JERUFTQUNRU0JxSUFVUXFBRUVRQ0FDSUFJb0FnZzJBaUFMSUFOQkFXb2hBeUFDUVJCcUVLQUJHZ3dBQ3dBTEFrQWdBa0VRYWlBQ1FTQnFFSDlGRFFBZ0FpZ0NJQ0FDS0FJUUVKQUJSUTBBSUFJb0FoQWdBaWdDSUJERUFTQURRUUZxSVFNTElBSkJNR29nQWtFUWFoQ29BUTBCQWtBZ0F3MEFJQUpCTUdvZ0FrRVFhaEQwQVFSQUlBSWdBaWdDT0NJRE5nSWdJQUlnQXpZQ0NBTkFJQUpCQ0dvUW9BRWdBa0VRYWhDb0FRMEVJQUlvQWdnZ0FpZ0NJQkNRQVEwQ0lBSWdBaWdDQ0RZQ0lBd0FDd0FMSUFJZ0FpZ0NFQ0lETmdJZ0lBSWdBellDQ0FOQUlBSkJDR29Rb0FFZ0FrRW9haENvQVEwRElBSW9BZ2dnQWlnQ0lCQ1FBUTBCSUFJZ0FpZ0NDRFlDSUF3QUN3QUxJQUpCTUdvZ0FrRVFhaEQwQVFSQUlBSWdBaWdDRURZQ0tBd0RDeUFDSUFKQkVHb1FvQUVvQWdBMkFqZ01BZ3NnQWtFUWFoQ2dBUm9nQWlBQ0tBSW9OZ0lJSUFJb0FqZ2dBa0VJYWhEUEFTZ0NBQkNRQVVVRVFBTkFJQUpCRUdvZ0FrRUlhaENvQVEwQ0lBSW9BamdnQWlnQ0VCQ1FBUVJBSUFKQkVHb2lBeWdDQUNBQ0tBSUlFTVFCSUFNUW9BRWFCU0FDUVJCcUVLQUJHZ3dCQ3dzTElBSkJFR29nQWtFSWFoQ29BUTBBQTBBQ1FDQUNLQUk0SUFJb0FoQVFrQUVFUUFOQUlBSW9BamdnQWtFSWFoRFBBU2dDQUJDUUFRMEFDeUFDUVJCcUlBSkJDR29RdmdZTkFTQUNLQUlRSUFJb0FnZ1F4QUVMSUFKQkVHb1FvQUVhREFFTEN5QUNRVEJxSUFKQkVHb1E5QUVOQUNBQ0lBSW9BaEEyQWpnTUFRc0xJQUpCUUdza0FDQUpRUmhxSUFsQkVHb1FmeG9nQ1VFZ2FpUUFBa0FnREJCQklCRlBEUUFnREVFQUVGQXFBZ0FnRENBUkVGQXFBZ0JnRFFCQnNLVUVRWkNsQVJBd1Flb1FFREJCc1JrUU1FR1ZCUkF6UWRvZEVEQkJ5cVVCRURBUU5Bd1BDMEVBSVFNRFFDQURJQkZHRFFFZ0VDQU5JQXdnQXhCUUtBSUVFS0lCRU93Q0lBTkJBV29oQXd3QUN3QUxJQVpCQVdvaEJnd0FDd0FMQUFVQ2Z5QU5JQVFvQWh3UW9nRWlBeW9DQkNBdmxTSXdpME1BQUFCUFhRUkFJRENvREFFTFFZQ0FnSUI0Q3lFQ0lBY0NmeUFES2dJQUlDNlZJakNMUXdBQUFFOWRCRUFnTUtnTUFRdEJnSUNBZ0hnTEVKTUJJQUlRa3dFaEFpQUVJQU1xQWhpTE9BSU1JQVJCRUdvaUJTQUVLZ0lNT0FJQUlBVWdCQ2dDSERZQ0JBSkFJQUlvQWdRZ0FoQXlLQUlBU1FSQUlBSWdCUkN3QXd3QkN5TUFRU0JySWd3a0FDQUNFRElpRXlBTVFRaHFBbjhnQWhCQlFRRnFJUTRqQUVFUWF5SURKQUFnQXlBT05nSU1JQTRnQWhEaUFpSUpUUVJBSUFJUXhRRWlEaUFKUVFGMlNRUkFJQU1nRGtFQmREWUNDQ0FEUVFocUlBTkJER29RYmlnQ0FDRUpDeUFEUVJCcUpBQWdDUXdCQ3hDU0FnQUxJQUlRUVNBVEVPTUNJZ01vQWdnZ0JSRGtBaUFESUFNb0FnaEJDR28yQWdnZ0FpQURFS2tESUFNUXFBTWdERUVnYWlRQUN5QUVLQUljUVFGcUlRTU1BUXNBQ3dBRkEwQWdCeUFDRUpNQkVGTWdBMHNFUUNBSElBSVFrd0VnQXhDVEFSQ1RBaUFEUVFGcUlRTU1BUXNMSUFKQkFXb2hBZ3dDQ3dBTEN5QU5JQkFRc1FNZ0RSQ0JBU0FMS0FKVVN3MERJQkFRb3dRTElCSkJFR29rQUF3REMwR3dwUVJCaVpjQkVEQkI2aEFRTUVHeEdSQXdRY1lERUROQjJoMFFNRUdJbWdFUU1CQTBEQVFMUWJDbEJFSEhtd0VRTUVIcUVCQXdRYkVaRURCQnh3TVFNMEhhSFJBd1FZaWFBUkF3RURRTUF3dEJzS1VFUWFlZEFSQXdRZW9RRURCQnNSa1FNRUhWQXhBelFkb2RFREJCcUtBQkVEQVFOQXdDQ3lBV0VIZ2dIa0dwaUFFUWp3RWhHVUVBSVE0akFFRkFhaUlRSkFBQ1FDQUxMUUFjUlFSQUlBdEJQR29oQWtFQUlRMERRQ0FDRUlFQklBMU5EUUlnQWlBTkVLSUJRUUEyQWdnZ0RVRUJhaUVOREFBTEFBc2dDMEhJQUdvaUZoQ2dCQ0FXSUF0QlBHb2lFaENCQVVFa2JCQ2xCQ0FMUWR3QWFpSVJRU2hxSVJ0QkFDRUNBa0FDUUFOQUlBOFFUaENqQVNBQ1N3UkFJQThRVGlBQ0VFa2lCQ2dDQkNBRUtBSU1RUUoyUncwQ0lCc2dBaEJKS0FJWUlRTWdCQ2dDQ0NFSklBTWdCQ2dDR0NJTUlBUW9BZ1FpRTBFQ2RHb2lCU29DQUNBTUtnSUFJaStUSWk0Z0RDb0NCQ0F2a3lJdkVOOEJ1MFFZTFVSVSt5RUpRS0MyT0FJQUlBTWdMeUF2bENBdUlDNlVrcEU0QWdRZ0UwRUJheUlFUVFFZ0JFRUJTeHNoRkNBTVFRUnFJUTBnQlNFR1FRRWhCd05BQWtBZ0JrRUVhaUVHSUFOQkNHb2hCQ0FISUJSR0JFQWdBeUFHS2dJQUlBMHFBZ0FpTDVNaUxpQXZJQTFCQkdzcUFnQ1RJaThRM3dHN1JCZ3RSRlQ3SVFsQW9MWTRBZ2dnQXlBdklDK1VJQzRnTHBTU2tUZ0NEQ0FKUVFGckloVkJBU0FWUVFGTEd5RVhJQVVnRTBFQ2RHb2hCaUFNSVFkQkFTRUpBMEFnQ1NBWFJnUkFJQVJCQ0dvaERTQUVJQXdnRXlBVmJFRUNkR29pQlNvQ0FDSXZJQVVnRTBFQ2RHc2lBeW9DQUpNaUxpQUZLZ0lFSUMrVElpOFEzd0c3UkJndFJGVDdJUWxBb0xZNEFnZ2dCQ0F2SUMrVUlDNGdMcFNTa1RnQ0RDQUZRUVJxSVFSQkFTRUdBMEFnQTBFRWFpRURJQVlnRkVZTkJDQU5JQVFxQWdBZ0F5b0NBSk1pTGlBRUtnSUVJQVJCQkdzcUFnQ1RJaThRM3dHN1JCZ3RSRlQ3SVFsQW9MWTRBZ2dnRFNBdklDK1VJQzRnTHBTU2tUZ0NEQ0FHUVFGcUlRWWdCRUVFYWlFRUlBMUJDR29oRFF3QUN3QUxJQVFnQmlvQ0FDQUhLZ0lBa3lJdUlBVXFBZ1FnQlNvQ0FKTWlMeERmQWJ0RUdDMUVWUHNoQ1VDZ3RqZ0NDQ0FFSUM4Z0w1UWdMaUF1bEpLUk9BSU1JQVJCRUdvaEJDQUZRUVJxSVExQkFTRURBMEFnQXlBVVJnUkFJQVFnQmlvQ0JDQUhLZ0lFa3lJdUlBMHFBZ0FnRFVFRWF5b0NBSk1pTHhEZkFidEVHQzFFVlBzaENVQ2d0amdDQUNBRUlDOGdMNVFnTGlBdWxKS1JPQUlFSUFsQkFXb2hDU0FHUVFocUlRWWdCMEVJYWlFSElBMUJCR29oQlF3Q0JTQUVJQVpCQkdvaUJpb0NBQ0FIUVFScUlnY3FBZ0NUSWk0Z0RTb0NCQ0FOUVFScktnSUFreUl2RU44QnUwUVlMVVJVK3lFSlFLQzJPQUlBSUFRZ0x5QXZsQ0F1SUM2VWtwRTRBZ1FnQTBFQmFpRURJQVJCQ0dvaEJDQU5RUVJxSVEwTUFRc0FDd0FMQUFVZ0F5QUdLZ0lBSUEwcUFnQ1RJaTRnRFNvQ0JDQU5RUVJyS2dJQWt5SXZFTjhCdTBRWUxVUlUreUVKUUtDMk9BSUlJQU1nTHlBdmxDQXVJQzZVa3BFNEFnd2dCMEVCYWlFSElBMUJCR29oRFNBRUlRTU1BZ3NBQ3dzZ0RTQUVLZ0lBSWk4Z0F5b0NBSk1pTGlBdklBUkJCR3NxQWdDVElpOFEzd0c3UkJndFJGVDdJUWxBb0xZNEFnZ2dEU0F2SUMrVUlDNGdMcFNTa1RnQ0RDQUNRUUZxSVFJTUFRc0xEQUVMUWJDbEJFSGNDaEF3UWZ3T0VEQkJzUmtRTUVIZ0FCQXpRZG9kRURCQjZ4OFFNQkEwREFNTElBdEJrQUZxSVJNRFFDQVNFSUVCSUE1TkJFQWdFaUFXRUxFRERBSUxJQklnRGhDaUFTb0NBQ0V1SUJJZ0RoQ2lBU29DQkNFdklCSWdEaENpQVNvQ0hDRXdJQkFnTGtNQUFJQS9RUUVnRWlBT0VLSUJLQUlNZExLVklpNlVJQzVEQUFBQVA1UkRBQUFBdjVJaU1aSTRBamdnRUNBdklDNlVJREdTT0FJMElCQWdMaUF3bERnQ01FRUFJUTBnRUNBUUtnSTRJQThnRWlBT0VLSUJLQUlNUVFBUTh3RW9BZ1JCQVd1ekVPc0NPQUk0SUJBZ0VDb0NOQ0FQSUJJZ0RoQ2lBU2dDREVFQUVQTUJLQUlJUVFGcnN4RHJBamdDTkNBVFFRQVFPaUViSUJJZ0RoQ2lBU2dDRENFQ0lCSWdEaENpQVNnQ0VDRUVJQkFxQWpnaEx5QVFLZ0kwSVRBZ0VDb0NNQ0V1SXdCQk1Hc2lCU1FBQWtBZ0wwTUFBQUFBWUFSQUlDOGdFVUVvYWlJRElCRW9BZ1FnQW13Z0JHb1FTU2dDQkxOZEJFQWdNRU1BQUFBQVlBUkFJREFnQXlBUktBSUVJQUpzSUFScUVFa29BZ2l6WFFSQUlBTWdFU2dDQkNBQ2JDQUVhaEJKSWdNb0FoQkJBa1lFUUNBUVFRQTJBandDZnlBdlF3QUFBRCtTSWpHTFF3QUFBRTlkQkVBZ01hZ01BUXRCZ0lDQWdIZ0xJZ3hCQUVnaEFnSi9JREJEQUFBQVA1SWlNWXREQUFBQVQxMEVRQ0F4cUF3QkMwR0FnSUNBZUFzaEJDQUNEUVVnQkVFQVNDQU1JQU1vQWdSUGNnMEZJQVFnQXlnQ0NFOE5CU0FSUVJ4cUlRZERBQUNBUHlBUktnSU1JQzZVSWk0Z0xrTUFBSUEvWFJzaU1SQnRJUzRDZnlBeElCRXFBaENVSWpGREFBQUFQNUlpTTR0REFBQUFUMTBFUUNBenFBd0JDMEdBZ0lDQWVBc2hCaUF4RUcyTklUTkJBQ0FNSUFackVMTUNJUUlnQmlBTWFpQURLQUlFUVFGckVLVURJUmRCQUNBRUlBWnJFTE1DSVFrZ0JDQUdhaUFES0FJSVFRRnJFS1VESVI4Z0IwRUFFRHBCQUNBSEVFSkJBblFRT0JwREFBQ0F2eUF1SUM2U2xTRTBBMEFnQ1NBZlNnUkFRUUFoQkVFQUlRTURRQ0FSS0FJVUlBTk1CRUJEQUFBQUFDRXVBMEFnRVNnQ0NDSURJQVJNQkVBZ0xrTUFBQUFBV3cwTEJTQXVJQWNnQkJBNktnSUFYUVJBSUFjZ0JCQTZLZ0lBSVM0TElBUkJBV29oQkF3QkN3c2dMa01BQUFBQVhnUkFRUUFoQWdOQUlBTWdBaUlFVEEwTElBVWdCTElpTHpnQ0lDQUZJQWNnQkJBNktnSUFPQUlrSUFVZ0JFRUJheUlDc2pnQ0dDQUZJQWNnQWlBUktBSUlJZ05xSUFOdkVEb3FBZ0E0QWh3Z0JTQUVRUUZxSWdLeU9BSVFJQVVnQnlBUktBSUlJZ01nQW1vZ0EyOFFPaW9DQURnQ0ZBSkFJQWNnQkJBNktnSUFJQzRnRVNvQ0dKUmVSUTBBSUFVcUFpUWlNQ0FGS2dJY1hrVU5BQ0F3SUFVcUFoUmVSUTBBSUFVZ0x6Z0NBRU1BQUFBQUlURUNRQ0FGS2dJUUlqQWdCU29DSUNJdmt5QXdJQVVxQWhnaU1KTWlOSlFpTWtNQUFBQUFXeUF3SUMrVElqTWdOSlFpTkVNQUFBQUFXM0lnTTBNQUFBQUFXM0lpQkFSQUlBVkJBRFlDRENBRlFRQTJBZ2dNQVFzZ0JTQUZLZ0lVSUFVcUFpUWlNWk1nTXBVZ0JTb0NIQ0F4a3lBMGxaTWlNVGdDRENBRklERWdMeUF2bENBd0lEQ1VJaStUbENBRktnSWNJQVVxQWlTVGtpQXpsU0l3T0FJSUlBVXFBaHdnQlNvQ0RDQXZsSk1nTUNBRktnSVlsSk1oTVFzZ0JTQXhPQUlFSUFSRkJFQWdCU29DQ0NFd0lBVXFBZ1FhSUFVcUFnd2lMME1BQUFBQVhBUkFJQVVnTUl3Z0x5QXZrcFU0QWdBTEN5QWJJQkFvQWp3aUJFRUNkR29DZkNBRktnSUFRd0FBQUQrU0lCRW9BZ2l5SWkrU0lDK1Z1MFFZTFVSVSt5RVpRS0lpUEwwaVdVSTBpS2RCL3c5eElnTkIvdzlHQkVBZ1BFUVlMVVJVK3lFWlFLSWlQQ0E4b3d3QkN5QlpRZ0dHSWxoQ3NMU2h4T3Ira0ptQWYxZ0VRQ0E4UkFBQUFBQUFBQUFBb2lBOElGaENzTFNoeE9yK2tKbUFmMUViREFFTEFuNGdBMFVFUUVFQUlRTWdXVUlNaGlKWVFnQlpCRUFEUUNBRFFRRnJJUU1nV0VJQmhpSllRZ0JaRFFBTEN5QlpRUUVnQTJ1dGhnd0JDeUJaUXYvLy8vLy8vLzhIZzBLQWdJQ0FnSUNBQ0lRTElWZ2dBMEdCQ0VvRVFBTkFBa0FnV0VLWTJwQ2l0Yi9JREgwaVdrSUFVdzBBSUZvaVdFSUFVZzBBSUR4RUFBQUFBQUFBQUFDaURBTUxJRmhDQVlZaFdDQURRUUZySWdOQmdRaEtEUUFMUVlFSUlRTUxBa0FnV0VLWTJwQ2l0Yi9JREgwaVdrSUFVdzBBSUZvaVdFSUFVZzBBSUR4RUFBQUFBQUFBQUFDaURBRUxJRmhDLy8vLy8vLy8vd2RZQkVBRFFDQURRUUZySVFNZ1dFS0FnSUNBZ0lDQUJGUWhCaUJZUWdHR0lWZ2dCZzBBQ3dzZ1dVS0FnSUNBZ0lDQWdJQi9neUJZUW9DQWdJQ0FnSUFJZlNBRHJVSTBob1FnV0VFQklBTnJyWWdnQTBFQVNodUV2d3UyT0FJQUlCQWdCRUVCYWpZQ1BBc2dFU2dDQ0NFRERBQUxBQXRCc0tVRVFmem5BQkF3UWZ3T0VEQkJzUmtRTUVIYUFSQXpRZG9kRURCQm5lc0FFREFRTkF3TkJTQUZRZkRKQVNnQ0FEWUNLQ0FGUWVqSkFTa0NBRGNESUNBSFFRQVFPaUVHSUFkQkFCQTZJUUlnQWlBUktBSUlRUUZySWd4QkFuUnFJaFFxQWdBaExpQUNLZ0lBSVM5QkFDRUpBMEFnQ1NBTVJnUkFJQVlnREVFQ2RHb2dCU29DS0NBdmxDQUZLZ0lnSUM2VUlBVXFBaVFnRkNvQ0FKU1NramdDQUFVZ0JpQUpRUUowSWhWcUlBVXFBaWdnQWlBSlFRRnFJZ2xCQW5ScUtnSUFsQ0FGS2dJZ0lDNlVJQUlnRldvcUFnQWlMaUFGS2dJa2xKS1NPQUlBREFFTEN5QURRUUZxSVFNTUFRc0FDd0FMSUFteUlEQ1RFRzBoTWlBRElBa1FTeUVnSUFJaEJBTkFJQVFnRjBvRVFDQUpRUUZxSVFrTUFnc2dNaUFFc2lBdmt4QnRraUl1SUROZVJRUkFJQ0FnQkVFRGRHb2lCaW9DQUNFeElCRW9BZ2doRkNBSFFRQVFPaUVNSURFZ0ZMS1V1MFIzeU1sdE1GL0VQNksySVRFZ05DQXVsQ0l1SUM0Z0xpQXVJQzRnTGtNQUFNQkFrcFJEQUFEd1FaS1VRd0FBOEVLU2xFTUFBTFJEa3BSREFBQTBSSktVUXdBQU5FU1N1MFE1YkZMK2E4RldQNksySUFZcUFnU1VJUzRnRVNnQ0NDRUdBa0FDUUFKQUFrQUNRQUpBQWtBQ1FDQU1CRUFnTVVNQUFBQS9ra01BQUFBQVhrVU5BU0F4UXdBQUFMK1NJalVnQnJKZFJRMEJJQzVEQUFBQUFHQkZEUUlnQmtFQVNBMERBbjhnTlk0aU5ZdERBQUFBVDEwRVFDQTFxQXdCQzBHQWdJQ0FlQXNpRkVFQmFpQUdieUVWSUFZZ0ZHb2dCbThoQmtNQUFJQS9JREVnRkxLVFF3QUFBTCtTSWpHVElqVkRBQUFBQUdCRkRRUWdNVU1BQUFBQVlFVU5CU0FHUVFCSURRWWdGVUVBU0EwSElBd2dCa0VDZEdvaUJpQTFJQzZVSUFZcUFnQ1NPQUlBSUF3Z0ZVRUNkR29pQmlBeElDNlVJQVlxQWdDU09BSUFEQWdMUWJDbEJFRzQ3Z0FRTUVHMDhRQVFNRUd4R1JBd1FZc0JFRE5CMmgwUU1FR2s5QUFRTUJBMERCUUxRYkNsQkVIUzl3QVFNRUcwOFFBUU1FR3hHUkF3UVl3QkVETkIyaDBRTUVHNitnQVFNQkEwREJNTFFiQ2xCRUhVL0FBUU1FRzA4UUFRTUVHeEdSQXdRWTBCRUROQjJoMFFNRUg0L1FBUU1CQTBEQklMUWJDbEJFR2dnQUVRTUVHMDhRQVFNRUd4R1JBd1FZNEJFRE5CMmgwUU1FSHZnUUVRTUJBMERCRUxRYkNsQkVIV2hBRVFNRUcwOFFBUU1FR3hHUkF3UVpZQkVETkIyaDBRTUVHWGhRRVFNQkEwREJBTFFiQ2xCRUhjaHdFUU1FRzA4UUFRTUVHeEdSQXdRWmNCRUROQjJoMFFNRUd4aVFFUU1CQTBEQThMUWJDbEJFSGlpZ0VRTUVHMDhRQVFNRUd4R1JBd1FaZ0JFRE5CMmgwUU1FSGtqUUVRTUJBMERBNExRYkNsQkVHNWp3RVFNRUcwOFFBUU1FR3hHUkF3UVprQkVETkIyaDBRTUVIVGtRRVFNQkEwREEwTEN5QUVRUUZxSVFRTUFBc0FDd0FMUWJDbEJFSG8wd0FRTUVIOERoQXdRYkVaRURCQi9nQVFNMEhhSFJBd1FjdldBQkF3RURRTUNBdEJzS1VFUWYzSkFCQXdRZndPRURCQnNSa1FNRUg2QUJBelFkb2RFREJCOU13QUVEQVFOQXdIQzBHd3BRUkJyY0FBRURCQi9BNFFNRUd4R1JBd1Fma0FFRE5CMmgwUU1FR2x3d0FRTUJBMERBWUxRYkNsQkVHTk5SQXdRZndPRURCQnNSa1FNRUg0QUJBelFkb2RFREJCOHpnUU1CQTBEQVVMUWJDbEJFSE1LQkF3UWZ3T0VEQkJzUmtRTUVIM0FCQXpRZG9kRURCQmtDd1FNQkEwREFRTElBVkJNR29rQUFOQUlCQW9BandnRFV3RVFDQU9RUUZxSVE0TUFnVWdFRUVJYWlJQ0lCSWdEaENpQVVFa0VENGFJQkFnRXlBTkVEb3FBZ0E0QWhBZ0ZpQUNFT3dDSUExQkFXb2hEUXdCQ3dBTEFBc0FDeUFRUVVCckpBQWdHUkI0SUI1QklHb2tBQXdDQzBHd3BRUkJ2RFFRTUVIcUVCQXdRYkVaRURCQmt3RVFNMEhhSFJBd1FhSTRFREFRTkFzUUFBQUxJQXNRaFFRUWdRRWhBaU1BUVJCcklnUWtBQ0FsUVNCcUlnOUNBRGNDQUNBRVFRQTJBZ3dnRDBFSWFoQ2xBaUFDQkVBZ0R5QUNFSjRHSUE4Z0FoQ25CZ3NnQkVFUWFpUUFBMEFnQ3hDRkJCQ0JBU0FLVFEwR0lDVkJDR29nQ3hDRkJDQUtFS0lCSWdJcUFnQWdBaW9DQkNBQ0tnSUlJQUlxQWh3Z0Fpb0NHRU1BQUFBQVhoRDFCQ0VDSUE4Z0NoQnFJZ1FnQWkwQUVEb0FFQ0FFSUFJcEFnZzNBZ2dnQkNBQ0tRSUFOd0lBSUFwQkFXb2hDZ3dBQ3dBTFFiQ2xCRUdtT2hBd1FmSTlFREJCK3NRQUVEQkIxQUVRTTBIeHlnQVFNRUhQemdBUU1CQTBEQWdMUWJDbEJFSDAwZ0FRTUVIeVBSQXdRZnJFQUJBd1FkVUJFRE5COGNvQUVEQkJ1dFlBRURBUU5Bd0hDMEd3cFFSQjUrZ0FFREJCOGowUU1FSDZ4QUFRTUVIV0FSQXpRZkhLQUJBd1FjN3FBQkF3RURRTUJndEJzS1VFUWR2dkFCQXdRZkk5RURCQitzUUFFREJCMXdFUU0wSHh5Z0FRTUVHUjhRQVFNQkEwREFVTFFiQ2xCRUczOVFBUU1FSHlQUkF3UWZyRUFCQXdRZGdCRUROQjhjb0FFREJCa2ZFQUVEQVFOQXdFQ3lBckVESWlFVUhnQUJDWUFTQVJJQThRZmhEaUJTQVlRVEJxSVF3Z0dFSGdBR29oRFNBWVFaQUJhaUVKSUJoQndBRnFJUTRnR0VId0FXb2hFQ0FZS2dLZ0FpRXZJQmdxQXFRQ0lUQWdHQ29DcUFJaE1TQVlLZ0tzQWlFeklCZ3FBckFDSVRRZ0dDb0N0QUloTWlBWUtnSzRBaUUxSUJncUFyd0NJVGhCQUNFRVFRQWhDZ0pBQWtBZ0NBUkFJQkVRZ0FFZ0R4QitSdzBCQTBBZ0R4QitJQXBOQkVBZ0R4QitJQVJIQkVCQnNLVUVRWk03RURCQjdSY1FNRUc4SFJBd1Fla0VFRE5CeFNJUU1FSENQaEF3RURRTUNRc0ZJQkVnQkJDS0FpRVNJQThnQ2hCcUlRTWpBRUdnQVdzaUJpUUFJd0JCNEFKcklnSWtBQ0FES2dJQUlUWWdBeW9DQkNFM0lBTXFBZ3dnT0pSREFBQ0FQNWNoTGlBREtnSUlJamtRNWdVaE9pQTVFT1VGSVRrZ0FrR3dBbW9pQTBHQWdJRDhBellDSUNBRFFnQTNBaGdnQXlBM09BSVVJQU1nT2lBdWxDSTNPQUlRSUFNZ05qZ0NDQ0FESURjNEFnQWdBeUE1SUM2VUlqWTRBZ3dnQXlBMmpEZ0NCQ0FDS2dMRUFpRTJJQUlxQXJnQ0lUY2dBa0dBQW1vaUJTQURJQmdRV0NBRlFRaHlJQU1nR0VFSWFoQllJQUpCa0FKcUlBTWdHRUVRYWhCWUlBSkJtQUpxSUFNZ0dFRVlhaEJZSUFKQm9BSnFJQU1nR0VFZ2FoQllJQUpCcUFKcUlBTWdHRUVvYWhCWUlBSkIwQUZxSWdVZ0F5QU1FRmdnQlVFSWNpQURJQXhCQ0dvUVdDQUNRZUFCYWlBRElBeEJFR29RV0NBQ1FlZ0JhaUFESUF4QkdHb1FXQ0FDUWZBQmFpQURJQXhCSUdvUVdDQUNRZmdCYWlBRElBeEJLR29RV0NBQ1FhQUJhaUlGSUFNZ0RSQllJQVZCQ0hJZ0F5QU5RUWhxRUZnZ0FrR3dBV29nQXlBTlFSQnFFRmdnQWtHNEFXb2dBeUFOUVJocUVGZ2dBa0hBQVdvZ0F5QU5RU0JxRUZnZ0FrSElBV29nQXlBTlFTaHFFRmdnQWtId0FHb2lCU0FESUFrUVdDQUZRUWh5SUFNZ0NVRUlhaEJZSUFKQmdBRnFJQU1nQ1VFUWFoQllJQUpCaUFGcUlBTWdDVUVZYWhCWUlBSkJrQUZxSUFNZ0NVRWdhaEJZSUFKQm1BRnFJQU1nQ1VFb2FoQllJQUpCUUdzaUJTQURJQTRRV0NBRlFRaHlJQU1nRGtFSWFoQllJQUpCMEFCcUlBTWdEa0VRYWhCWUlBSkIyQUJxSUFNZ0RrRVlhaEJZSUFKQjRBQnFJQU1nRGtFZ2FoQllJQUpCNkFCcUlBTWdEa0VvYWhCWUlBSkJFR29pQlNBRElCQVFXQ0FGUVFoeUlBTWdFRUVJYWhCWUlBSkJJR29nQXlBUVFSQnFFRmdnQWtFb2FpQURJQkJCR0dvUVdDQUNRVEJxSUFNZ0VFRWdhaEJZSUFKQk9Hb2dBeUFRUVNocUVGZ2dDQ0FDUVF4cUlnTWdBa0VJYWlJRklDNGdOWlFRaGdJZ0JpQUlJQUlxQWhBZ0Fpb0NGQ0FDS0FJTUlBSW9BZ2dRVlRnQ0FDQUdJQWdnQWlvQ0dDQUNLZ0ljSUFJb0Fnd2dBaWdDQ0JCVk9BSUVJQVlnQ0NBQ0tnSWdJQUlxQWlRZ0FpZ0NEQ0FDS0FJSUVGVTRBZ2dnQmlBSUlBSXFBaWdnQWlvQ0xDQUNLQUlNSUFJb0FnZ1FWVGdDRENBR0lBZ2dBaW9DTUNBQ0tnSTBJQUlvQWd3Z0FpZ0NDQkJWT0FJUUlBWWdDQ0FDS2dJNElBSXFBandnQWlnQ0RDQUNLQUlJRUZVNEFoUWdDQ0FESUFVZ0xpQXlsQkNHQWlBR0lBZ2dBaW9DUUNBQ0tnSkVJQUlvQWd3Z0FpZ0NDQkJWT0FJWUlBWWdDQ0FDS2dKSUlBSXFBa3dnQWlnQ0RDQUNLQUlJRUZVNEFod2dCaUFJSUFJcUFsQWdBaW9DVkNBQ0tBSU1JQUlvQWdnUVZUZ0NJQ0FHSUFnZ0Fpb0NXQ0FDS2dKY0lBSW9BZ3dnQWlnQ0NCQlZPQUlrSUFZZ0NDQUNLZ0pnSUFJcUFtUWdBaWdDRENBQ0tBSUlFRlU0QWlnZ0JpQUlJQUlxQW1nZ0Fpb0NiQ0FDS0FJTUlBSW9BZ2dRVlRnQ0xDQUlJQU1nQlNBdUlEU1VFSVlDSUFZZ0NDQUNLZ0p3SUFJcUFuUWdBaWdDRENBQ0tBSUlFRlU0QWpBZ0JpQUlJQUlxQW5nZ0Fpb0NmQ0FDS0FJTUlBSW9BZ2dRVlRnQ05DQUdJQWdnQWlvQ2dBRWdBaW9DaEFFZ0FpZ0NEQ0FDS0FJSUVGVTRBamdnQmlBSUlBSXFBb2dCSUFJcUFvd0JJQUlvQWd3Z0FpZ0NDQkJWT0FJOElBWWdDQ0FDS2dLUUFTQUNLZ0tVQVNBQ0tBSU1JQUlvQWdnUVZUZ0NRQ0FHSUFnZ0Fpb0NtQUVnQWlvQ25BRWdBaWdDRENBQ0tBSUlFRlU0QWtRZ0NDQURJQVVnTGlBemxCQ0dBaUFHSUFnZ0Fpb0NvQUVnQWlvQ3BBRWdBaWdDRENBQ0tBSUlFRlU0QWtnZ0JpQUlJQUlxQXFnQklBSXFBcXdCSUFJb0Fnd2dBaWdDQ0JCVk9BSk1JQVlnQ0NBQ0tnS3dBU0FDS2dLMEFTQUNLQUlNSUFJb0FnZ1FWVGdDVUNBR0lBZ2dBaW9DdUFFZ0Fpb0N2QUVnQWlnQ0RDQUNLQUlJRUZVNEFsUWdCaUFJSUFJcUFzQUJJQUlxQXNRQklBSW9BZ3dnQWlnQ0NCQlZPQUpZSUFZZ0NDQUNLZ0xJQVNBQ0tnTE1BU0FDS0FJTUlBSW9BZ2dRVlRnQ1hDQUlJQU1nQlNBdUlER1VFSVlDSUFZZ0NDQUNLZ0xRQVNBQ0tnTFVBU0FDS0FJTUlBSW9BZ2dRVlRnQ1lDQUdJQWdnQWlvQzJBRWdBaW9DM0FFZ0FpZ0NEQ0FDS0FJSUVGVTRBbVFnQmlBSUlBSXFBdUFCSUFJcUF1UUJJQUlvQWd3Z0FpZ0NDQkJWT0FKb0lBWWdDQ0FDS2dMb0FTQUNLZ0xzQVNBQ0tBSU1JQUlvQWdnUVZUZ0NiQ0FHSUFnZ0Fpb0M4QUVnQWlvQzlBRWdBaWdDRENBQ0tBSUlFRlU0QW5BZ0JpQUlJQUlxQXZnQklBSXFBdndCSUFJb0Fnd2dBaWdDQ0JCVk9BSjBJQWdnQXlBRklDNGdNSlFRaGdJZ0JpQUlJQUlxQW9BQ0lBSXFBb1FDSUFJb0Fnd2dBaWdDQ0JCVk9BSjRJQVlnQ0NBQ0tnS0lBaUFDS2dLTUFpQUNLQUlNSUFJb0FnZ1FWVGdDZkNBR0lBZ2dBaW9Da0FJZ0Fpb0NsQUlnQWlnQ0RDQUNLQUlJRUZVNEFvQUJJQVlnQ0NBQ0tnS1lBaUFDS2dLY0FpQUNLQUlNSUFJb0FnZ1FWVGdDaEFFZ0JpQUlJQUlxQXFBQ0lBSXFBcVFDSUFJb0Fnd2dBaWdDQ0JCVk9BS0lBU0FHSUFnZ0Fpb0NxQUlnQWlvQ3JBSWdBaWdDRENBQ0tBSUlFRlU0QW93QklBZ2dBeUFGSUM0Z0w1UVFoZ0lnQmlBSUlEY2dOaUFDS0FJTUlBSW9BZ2dRVlRnQ2tBRWdBa0hnQW1va0FFRUFJUUpCQUNFRklCSkIxQUFRaWdaQkpDRUxBMEFnQWtFbFJnUkFBa0FnQlVHYUJVWU5BRUd3cFFSQmthRUJFREJCN1JjUU1FRzhIUkF3UVpvREVETkJ4U0lRTUVHTm9nRVFNQkEwRUFBQUN3VWdCU0FMYWlFRElBWWdBa0VDZEdvaEhpQUNRUUZxSWdjaEFnTkFJQU1nQlVjRVFDQVNJQVZCQ0cxcUloTWdFeTBBQUNBZUtnSUFJQVlnQWtFQ2RHb3FBZ0JkSUFWQkIzRjBjam9BQUNBQ1FRRnFJUUlnQlVFQmFpRUZEQUVMQ3lBTFFRRnJJUXNnQXlFRklBY2hBZ3dCQ3dzZ0JrR2dBV29rQUNBUElBb1FhaUVDSUJFZ0JCQ0pBaUlESUFJdEFCQTZBQkFnQXlBQ0tRSUlOd0lJSUFNZ0Fpa0NBRGNDQUNBRVFRRnFJUVFnQ2tFQmFpRUtEQUVMQ3lBUklBUVE0Z1VNQWd0QnNLVUVRZVlVRURCQjdSY1FNRUc4SFJBd1Faa0VFRE5CeFNJUU1FR0RKaEF3RURRTUJRdEJzS1VFUWVZdUVEQkI3UmNRTUVHOEhSQXdRWm9FRUROQnhTSVFNRUdDTXhBd0VEUU1CQXNnRHhEbUF5QWxRVEJxSkFBZ0toQjRFSm9HSVFRZ0lVRVFhaUlDRU9FRklBSVFQU0VESUNFZ0lpZ0NBQkF5RUlBQk5nSU1JQ0ZCL2NzQk5nSUlJQ0VnQXpZQ0JDQWhRWnN2TmdJQUlBUkI4cUlCSUNFUTNnVWdBaEEyR2lBaUtBSUFJUmdqQUVId0FHc2lCaVFBSUJwQkRHb2lIaENUQWlBYVFYODJBaGdnR2tFY2FpRVZJQnBCbEFacUlSTWdHa0dNQldvaEVTQWFRZndFYWlFTElCZ1FNaEJiSVE0Z0JrSG9BR29nR2tISUFHb1Evd01Rc1FJaERBSkFBMEFDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnRENBR1FUQnFFR1lRc1FJUWZ3UkFJQVpCTUdwQjg2TUJFSThCSVJJZ0dpMEFDQ0VESUJnUU1pRUNJQXdRYkNnQ0JCQXlJUVFDUUNBREJFQUNmeUFFSVFVZ0RCQnNLQUlFUVNScUlRZEJBQ0VQUVFBaERTTUFRUkJySWhBa0FDQUxFSk1DQWtBQ1FDQUNJZ01RZ0FGRkRRQWdCUkNBQVVVTkFDQUxJQU1RZ0FFUW9BTURRQUpBSUFNUWdBRWdEVTBFUUNBTEVFRWdBeENBQVUwTkFVR3dwUVJCMktzQkVEQkJvS29CRURCQitzUUFFREJCcndFUU0wSHh5Z0FRTUVHVXJBRVFNQkEwREJFTFFYOGhBa0YvSVFSQi8vLy8vd2NoQ1NBRElBMFFpZ0loRmdKQUlBY29BZ2dFUUNBSFFRQTJBbVFnQjBISUFHb2lDaEJDSVFnZ0NoRGtCaUFLSUFnUXJRTWdCMEhVQUdvaENBTkFJQWdROHdWRkJFQWdDQkQxQlF3QkN3c2dCeUFJSUFjb0FnZ2dGaEQyQXlBS0VFSWFEQUVMUWJDbEJFR3dyUUVRTUVIYitRQVFNRUg2eEFBUU1FR1ZBeEF6UWZIS0FCQXdRZk90QVJBd0VEUU1Gd3RCQUNFUElBTWdEUkNKQWlFVUlBZEJ5QUJxSVFnQ1FBTkFJQWdRUWlBUFRRUkFBa0FnQWtGL1JnMERJQWxCZjBZTkJ5QUVRWDlIRFFBZ0N5QVFRUWhxSUEwZ0NSRHVBUkNuQWd3REN3VUNRQ0FVTFFBUUlBVWdDQ0FQRURvb0FnQVFpUUl0QUJCSERRQWdBaUFXSUFVZ0NDQVBFRG9vQWdBUWlnSVFvZ01pQ2tzRVFDQUlJQThRT2lnQ0FDRUpJQUloQkNBS0lRSU1BUXNnQ2lBRUlBUWdDa3NiSVFRTElBOUJBV29oRHd3QkN3c2dDeW9DRENBQ3N5QUVzNVZlUlEwQUlBc2dFRUVJYWlBTklBa1E3Z0VRcHdJTElBMUJBV29oRFF3QkN3c2dDeEJCSVE4TElCQkJFR29rQUNBUERBRUxRYkNsQkVIWXFRRVFNRUdncWdFUU1FSDZ4QUFRTUVHZ0FSQXpRZkhLQUJBd1FZMnJBUkF3RURRTURBc2dHaWdDQUU4TkFRd0pDeUFFSVFkQkFDRUVRUUFoQ1NNQVFSQnJJZzhrQUNBTEVKTUNBa0FnQWlJRkVJQUJSUTBBSUFjUWdBRkZEUUFnQ3lBRkVJQUJFS0FEQTBBZ0JSQ0FBU0FKVFFSQUlBc1FRU0FGRUlBQlN3UkFRYkNsQkVIWXF3RVFNRUdncWdFUU1FSDZ4QUFRTUVId0FCQXpRZkhLQUJBd1FaU3NBUkF3RURRTURnc0ZRUUFoQkVGL0lRSkJmeUVLUWYvLy8vOEhJUU1nQlNBSkVJb0NJUTBnQlNBSkVJa0NJUkFDUUFOQUlBY1FnQUVnQkUwRVFBSkFJQUpCZjBZTkF5QUtRWDlIRFFBZ0N5QVBRUWhxSUFrZ0F4RHVBUkNuQWd3REN3VUNRQ0FRTFFBUUlBY2dCQkNKQWkwQUVFY05BQ0FDSUEwZ0J5QUVFSW9DRUtJRElnaExCRUFnQWlFS0lBUWhBeUFJSVFJTUFRc2dDQ0FLSUFnZ0Nra2JJUW9MSUFSQkFXb2hCQXdCQ3dzZ0N5b0NEQ0FDc3lBS3M1VmVSUTBBSUFzZ0QwRUlhaUFKSUFNUTdnRVFwd0lMSUFsQkFXb2hDUXdCQ3dzZ0N4QkJJUVFMSUE5QkVHb2tBQ0FhS0FJQUlBUkxEUWdMSUJJUWVDQU1FR3dvQWdRUU1oQmJJUWtDZnlBR1FUQnFRZWlrQVJDUEFTRUNRUUFnRVNBT0lBa2dDeUFZS0FJQUlCZ29BZ1FnREJCc0tBSUVLQUlBSUF3UWJDZ0NCQ2dDQkJEL0JTSUVRUUJJRFFBYVFRRUxJUU1nQWhCNElBTkZEUWdnQmtIWUFHb1FTaUVQSUFaQk1Hb2lBMEg1cEFFUWp3RWhBaUFQSUJFZ0N5QUVFUDRGSUFJUWVDQUdRUkJxUWQybEFSQ1BBU0VDSUFNZ0RpQUpJQThnRXlBTUVHd29BZ1FvQWdBZ0RCQnNLQUlFS0FJRUVQMEZSUTBCSUFJUWVDQUdFRW9oQ0NBR1FSQnFRZldsQVJDUEFTRUNJQWdnQmtFd2FpQU9JQWtnRHlBYUtnSUVFUG9GSUFnUVFTQWFLQUlBU1EwQ0lBSVFlQ0FHUVJCcVFaQ25BUkNQQVNFV0FuOGdHQkF5SVJBZ0RCQnNLQUlFRURJaEVpQUdRVEJxSVFKQkFDRUVRUUFoRFNNQVFVQnFJZ2NrQUNBTEVKTUNBa0FDUUFKQUlCQVFnQUZGRFFBZ0VoQ0FBVVVOQUVNQUFDQkJFRzBoTGlBSFFSQnFJQUpEQUFBQUFCRDJCVVVOQVNBTElCQVFnQUVRb0FNRFFBSkFJQkFRZ0FFZ0RVMEVRQ0FMRUVFZ0VCQ0FBVTBOQVVHd3BRUkIyS3NCRURCQm9Lb0JFREJCK3NRQUVEQkJnQUlRTTBIeHlnQVFNRUdVckFFUU1CQTBEQkFMUVg4aEFrRi9JUXBCLy8vLy93Y2hBeUFRSUEwUWlnSWhHU0FIUVF4cUlBZEJDR29nQjBFUWFpQVFJQTBRaVFJaUZDb0NBQ0FVS2dJRUVQY0RRUUFoQkFKQUEwQWdFaENBQVNBRVRRUkFBa0FnQWtGL1JnMERJQU5CZjBZTkNDQUtRWDlIRFFBZ0N5QUhJQTBnQXhEdUFSQ25BZ3dEQ3dVZ0VpQUVFSWtDSVFVQ1FDQVVMUUFRSUFVdEFCQkhEUUFnQnlvQ0RDQUZLZ0lBa3hCdElBY3FBZ2dnQlNvQ0JKTVFiWklnTGw0TkFDQUNJQmtnRWlBRUVJb0NFSVVHSWdWTEJFQWdCQ0VESUFJaENpQUZJUUlNQVFzZ0JTQUtJQVVnQ2trYklRb0xJQVJCQVdvaEJBd0JDd3NnQ3lvQ0RDQUNzeUFLczVWZVJRMEFJQXNnQnlBTklBTVE3Z0VRcHdJTElBMUJBV29oRFF3QkN3c2dDeEJCSVFRTElBZEJRR3NrQUNBRURBSUxRYkNsQkVHOXd3RVFNRUdncWdFUU1FSDZ4QUFRTUVIRUFSQXpRZkhLQUJBd1FkYkRBUkF3RURRTUN3dEJzS1VFUWRpcEFSQXdRYUNxQVJBd1FmckVBQkF3UWZFQkVETkI4Y29BRURCQmphc0JFREFRTkF3S0N5QWFLQUlBU1EwRElCWVFlQUovSUFaQkVHcEJ0YWNCRUk4QklRSkJBQ0FSSUE0Z0NTQUxJQmdvQWdBZ0dDZ0NCQ0FNRUd3b0FnUW9BZ0FnREJCc0tBSUVLQUlFRVA4RklnUkJBRWdOQUJwQkFRc2hBeUFDRUhnZ0EwVU5CU0FHUVJCcUlnSkJ4cWNCRUk4QklRTWdEeUFSSUFzZ0JCRCtCU0FERUhnZ0FrR2pxQUVRandFaEFpQUdRVEJxSUE0Z0NTQVBJQk1nREJCc0tBSUVLQUlBSUF3UWJDZ0NCQ2dDQkJEOUJVVU5CQ0FDRUhnZ0NCQ1RBaUFHUVJCcVFidW9BUkNQQVNFQ0lBZ2dCa0V3YWlBT0lBa2dEeUFhS2dJRUVQb0ZJQUlRZUNBSUVFRWdHaWdDQUVrTkJTQUlFRUVnSGhCQlRRMEZJQlVnQmtFd2FoRDZBeUFlSUFnUXNRTWdHaUFNRUd3b0FnQTJBaGdNQlFzZ0dpZ0NHQm9nQmtId0FHb2tBQXdLQ3lBQ0VIZ01CQXNnQWhCNERBSUxJQllRZUF3QkN5QUNFSGdMSUFnUTRBRUxJQThRNEFFTUFRc2dFaEI0Q3lBTUVQNEREQUVMQ3d3RUN5QWhRVEJxSkFBZ0tVRWdhaVFBSUIwUW13TWdLRUVnYWlRQUlBQWdBQ2dDQUJDTEJCQitJZ0kyQWpBQ1FDQUNSUVJBUVFBaEFpQUFLQUk0SWdSQkFDQUVRUUJLR3lFRUEwQWdBaUFFUmcwQ0lBQW9BalFnQWtIRUFHeHFRWDgyQWp3Z0FrRUJhaUVDREFBTEFBc2dBQ2dDTEJBeElBQWdBQ2dDTUVFRGRCQTNJZ0kyQWl3Z0FnUkFJQUFvQWdBUWl3UWhCQUpBSUNSQkFVWUVRRUVBSVFJRFFDQUNJQUFvQWpCT0RRSWdCQ0FDRUdvcUFnQWhMaUFFSUFJUWFpb0NCQ0V2QWtBZ0FDZ0NCQ0lEQkVBZ0EwRzRBV29nTGlBdklBQW9BaXdnQWtFRGRHb2lBeUFEUVFScUVONEJHZ3dCQ3lBQUtBSXNJQUpCQTNScUlnTWdMemdDQkNBRElDNDRBZ0FMSUFKQkFXb2hBZ3dBQ3dBTEFrQUNRQUpBQWtBZ0pFRUNhdzRFQVFNQ0FBTUxRUUFoQWdOQUlBSWdBQ2dDTUU0TkJDQUVJQUlRYWlvQ0FDRXVJQVFnQWhCcUtnSUVJUzhDUUNBQUtBSUVJZ01FUUNBRFFiZ0JhaUF1UXdBQXdEK1VJQzlEQUFEQVA1UWdBQ2dDTENBQ1FRTjBhaUlESUFOQkJHb1EzZ0VhREFFTElBQW9BaXdnQWtFRGRHb2lBeUF2UXdBQXdEK1VPQUlFSUFNZ0xrTUFBTUEvbERnQ0FBc2dBa0VCYWlFQ0RBQUxBQXRCQUNFQ0EwQWdBaUFBS0FJd1RnMERJQVFnQWhCcUtnSUFJUzRnQkNBQ0VHb3FBZ1FoTHdKQUlBQW9BZ1FpQXdSQUlBTkJ1QUZxSUM0Z0xwSWdMeUF2a2lBQUtBSXNJQUpCQTNScUlnTWdBMEVFYWhEZUFSb01BUXNnQUNnQ0xDQUNRUU4wYWlJRElDOGdMNUk0QWdRZ0F5QXVJQzZTT0FJQUN5QUNRUUZxSVFJTUFBc0FDMEVBSVFJRFFDQUNJQUFvQWpCT0RRSWdCQ0FDRUdvcUFnQWhMaUFFSUFJUWFpb0NCQ0V2QWtBZ0FDZ0NCQ0lEQkVBZ0EwRzRBV29nTGtNQUFFQkFsQ0F2UXdBQVFFQ1VJQUFvQWl3Z0FrRURkR29pQXlBRFFRUnFFTjRCR2d3QkN5QUFLQUlzSUFKQkEzUnFJZ01nTDBNQUFFQkFsRGdDQkNBRElDNURBQUJBUUpRNEFnQUxJQUpCQVdvaEFnd0FDd0FMUVFBaEFnTkFJQUlnQUNnQ01FNE5BU0FFSUFJUWFpb0NBQ0V1SUFRZ0FoQnFLZ0lFSVM4Q1FDQUFLQUlFSWdNRVFDQURRYmdCYWlBdVF3QUFnRUNVSUM5REFBQ0FRSlFnQUNnQ0xDQUNRUU4wYWlJRElBTkJCR29RM2dFYURBRUxJQUFvQWl3Z0FrRURkR29pQXlBdlF3QUFnRUNVT0FJRUlBTWdMa01BQUlCQWxEZ0NBQXNnQWtFQmFpRUNEQUFMQUF0QkFDRUNJQUFvQWpnaUJFRUFJQVJCQUVvYklRUURRQ0FDSUFSR0JFQWdBQ2dDQUNnQ0FDZ0NBQkE4SVFnZ0FDZ0NBQ2dDQUNnQ0FDZ0NHQ0lFUlEwRElBQWdCRUVDZEdvb0Fqd2lEa0hFQUd3aUJTQUFLQUkwYWlnQ1FBMERBbjhnQUNnQ0JDRUtJQUFvQWdBaEF5TUFRUkJySWdJa0FDQUNJQVEyQWd3Z0F5Z0NBRUVFYWlBQ1FReHFFSzRHSVFNZ0FrRVFhaVFBSUFBb0FnQVFpd1FoQWlBQUtBSTBJQVZxSVJBakFFSGdBV3NpQkNRQVFYOGhDd0pBQWtBZ0NCQkJRUVJKRFFBZ0NCQkJRUVIwRURjaURVVU5BU0FJRUVGQkdHd1FOeUlQUlEwQlFRQWhDd05BSUFnUVFTQUxTd1JBSUEwZ0MwRUVkR29pQlNBQ0lBZ2dDeEJRS0FJQUVHb3FBZ0M3T1FNQUlBVWdBaUFJSUFzUVVDZ0NBQkJxS2dJRXV6a0RDQ0FQSUF0QkdHeHFJZ1VnQXlBSUlBc1FVQ2dDQkJDVEFTb0NBTHM1QXdBZ0F5QUlJQXNRVUNnQ0JCQ1RBU29DQkNFdUlBVkNBRGNERUNBRklDNjdPUU1JSUF0QkFXb2hDd3dCQ3dzZ0JDQVBOZ0xVQVNBRUlBMDJBdEFCSUFRZ0N6WUMyQUZCZnlFTElBcEJDR29oQlNBSUVFRWhHRUVBSVFOQkFDRUhJd0JCMEFCcklnSWtBRUYvSVFvQ1FDQVlRUVJJRFFBRFFDQURJQmhIQkVBZ0EwRVliQ0VHSUFOQkFXb2hBeUFHSUE5cUt3TVFSQUFBQUFBQUFBQUFZUTBCREFJTEN5QUZLd01BUkFBQUFBQUFBQUFBWVEwQUlBVXJBeUJFQUFBQUFBQUFBQUJpRFFBZ0JTc0RLRVFBQUFBQUFBQUFBR0VOQUNBRkt3TkFSQUFBQUFBQUFBQUFZZzBBSUFVckEwaEVBQUFBQUFBQUFBQmlEUUFnQlNzRFVFUUFBQUFBQUFEd1AySU5BQ0FGS3dNWVJBQUFBQUFBQUFBQVlnMEFJQVVyQXpoRUFBQUFBQUFBQUFCaURRQWdCU3NEV0VRQUFBQUFBQUFBQUdJTkFDQVlRUUYwSWdOQkNCQzNBU0lHUlFSQVFRQkJBMEd0QzBFQUVEa01BUXNnQTBFQkVMY0JJZ3dFUUNBTUtBSUFJUkVnQmlnQ0FDRWRBMEFnQnlBWVJ3UkFJQjBnQjBFSGRHb2lBeUFQSUFkQkdHeHFJZ2tyQXdBNUF3QWdDU3NEQ0NFOElBTkNBRGNES0NBRFFnQTNBeUFnQTBJQU53TVlJQU5DZ0lDQWdJQ0FnUGcvTndNUUlBTWdQRGtEQ0NBRElBMGdCMEVFZENJU2FpSWFLd01BSUFrckF3Q2FvamtETUNBYUt3TUFJVHdnQ1NzRENDRTlJQU5DQURjRFVDQURRZ0EzQTBnZ0EwRkFhMElBTndNQUlBTWdQQ0E5bXFJNUF6Z2dBeUFKS3dNQU9RTllJQWtyQXdnaFBDQURRb0NBZ0lDQWdJRDRQemNEYUNBRElEdzVBMkFnQXlBYUt3TUlJQWtyQXdDYW9qa0RjQ0FESUJvckF3Z2dDU3NEQ0pxaU9RTjRJQkVnRW1vaUF5QWFLd01BT1FNQUlBTWdHaXNEQ0RrRENDQUhRUUZxSVFjTUFRc0xJQVlRMFFZaUEwVUVRQ0FHRUVRZ0RCQkVRUUJCQTBHaEdrRUFFRGtNQWdzZ0F5QUdFT2tDSWdkRkJFQWdCaEJFSUF3UVJDQURFRVJCQUVFRFFaRWVRUUFRT1F3Q0N5QURJQXdRNlFJaUNVVUVRQ0FHRUVRZ0RCQkVJQU1RUkNBSEVFUkJBRUVEUWZVaVFRQVFPUXdDQ3lBSEVLb0RRUUJJQkVBZ0JoQkVJQXdRUkNBREVFUWdCeEJFSUFrUVJFRUFRUU5CNWlsQkFCQTVEQUlMSUFjZ0NSRHBBaUlhUlFSQUlBWVFSQ0FNRUVRZ0F4QkVJQWNRUkNBSkVFUkJBRUVEUWNvdlFRQVFPUXdDQ3lBRkt3TXdJVTBnR2lnQ0FDSUtLd01RSVZVZ0Npc0RLQ0ZXSUFvckF4Z2hQeUFLS3dNQUlVUWdDaXNETUNFOElBVXJBd0FoVGlBRkt3TUlJVThnQlNzREtDRlFJQW9yQXlBaFBpQUtLd01JSVVBZ0JTc0RFQ0ZSSUFvckF6Z2hQU0FHRUVRZ0RCQkVJQU1RUkNBSEVFUWdDUkJFSUJvUVJDQUNJRDBnUFNBOW9pQkFJRkVnUGFLaElFOGdQaUJOSUQyaW9TQlFveUk5b3FFZ1RxTWlQaUErb2lBOUlEMmlvS0NmSWxLak9RTW9JQUlnUFNCU296a0RJQ0FDSUQ0Z1VxTTVBeGdnQWlBOElEd2dQS0lnUkNCUklEeWlvU0JQSUQ4Z1RTQThvcUVnVUtNaVBLS2hJRTZqSWowZ1BhSWdQQ0E4b3FDZ255SlRvemtERUNBQ0lEd2dVNk01QXdnZ0FpQTlJRk9qT1FNQVFRQWhBMEVBSVFvQ1FDQUNLd01BSWtBZ0Fpc0RJQ0pLb2lBQ0t3TVlJa2NnQWlzRENDSkRvcUVpUFNBOW9pQkRJQUlyQXlnaVM2SWdTaUFDS3dNUUlraWlvU0krSUQ2aUlFZ2dSNklnU3lCQW9xRWlQeUEvb3FDZ255SThSQUFBQUFBQUFBQUFZUTBBSUQwZ1BLTWhQUUo4SUQ4Z1BLTWlSU0JBb2lBK0lEeWpJa1lnUTVxaW9DSS9SQUFBQUFBQUFBQUFZZ1JBSUVNaFBpQkFJVVFnUlNGQklFWWhQQ0JJREFFTElEMGdSU0E5SUVDaUlFWWdTSnFpb0NKQ1JBQUFBQUFBQUFBQVlpSURHeUpCSUVBZ1NDQURHeUpFb2lCR0lEMGdBeHNpUENCSUlFTWdBeHNpUHFLaElUOGdSU0JHSUFNYklUMGdRa1FBQUFBQUFBQUFBR0VoQ2lCRElFQWdBeHNMSVVVZ1AwUUFBQUFBQUFBQUFHRU5BQ0ErSUQyaUlFVWdRYUtoSUQraklrWWdTQ0JMb2lCQUlFZWlJRU1nU3FLZ29DSkFtaUJBSUVCRUFBQUFBQUFBQUFCakd5SkFSQUFBQUFBQUFQQS9vSjlFQUFBQUFBQUE4RDhnUUtHZm9FUUFBQUFBQUFEZ1A2SWlWQ0JCb2lBL295SkRvaUJVSUR5aUlEd2dQcUlnUVNCRW9xRWlQNk1pUGlCRUlEMmlJRVVnUEtLaElEK2pJa1dpb0NKSUlFaWlJRU1nUTZJZ1BpQStvcUJFQUFBQUFBQUE4TCtnSUVZZ1JxSWdSU0JGb3FCRUFBQUFBQUFBOEQrZ0lrS2lvU0kvUkFBQUFBQUFBQUFBWXcwQUlFVWdTSm9nUDU4aVNhRWdRcU1pUDZJZ1BxQWhRQ0JHSUQraUlFT2dJVVFnUlNCSklFaWhJRUtqSWtLaUlENmdJVWtnUmlCQ29pQkRvQ0ZEQW53Z0F3UkFJRUVoUGlBOUlVRWdQQ0U5SUVNaFNDQkpJVU1nUkNGR0lEOGhSU0JBSVVRZ1Fnd0JDeUFLUlFSQUlEMGhQaUE4SVQwZ1F5RklJRUloUXlCRUlVWWdRQ0ZGSUQ4aFJDQkpEQUVMSUR3aFBpQkNJVWdnUHlGR0lFQWhSU0JKQ3lGTVFRQWhBd0ovSUVFZ1I2SWdQU0JLb3FFaVFFUUFBQUFBQUFBQUFHSUVRQ0JLSVR3Z1J5RkpJRUVoUHlBOUlVSkJBQXdCQ3lBK0lFRWdQaUJIb2lBOUlFdWlvU0pYUkFBQUFBQUFBQUFBWWlJREd5SS9JRWNnU3lBREd5SkpvaUE5SUQ0Z0F4c2lRaUJMSUVvZ0F4c2lQS0toSVVBZ1FTQTlJQU1iSVQ0Z1NpQkhJQU1iSVVzZ1YwUUFBQUFBQUFBQUFHRUxJUW9nUUVRQUFBQUFBQUFBQUdFTkFDQThJRDZpSUVzZ1A2S2hJRUNqSWowZ1ZDQS9vaUJBb3lKQW9pQlVJRUtpSUVJZ1BLSWdQeUJKb3FFaVBLTWlRU0JKSUQ2aUlFc2dRcUtoSUR5aklqNmlvQ0kvSUQraUlFQWdRS0lnUVNCQm9xQkVBQUFBQUFBQThMK2dJRDBnUGFJZ1BpQStvcUJFQUFBQUFBQUE4RCtnSWtxaW9TSThSQUFBQUFBQUFBQUFZdzBBSUQ0Z1A1b2dQSjhpU2FFZ1NxTWlRcUlnUWFBaFJ5QTlJRUtpSUVDZ0lUd2dQaUJKSUQraElFcWpJaitpSUVHZ0lVRWdQU0Evb2lCQW9DRStBbndnQXdSQUlENGhRQ0EvSVQwZ1FTRStJRHdoUHlCSElUd2dRZ3dCQ3lBS1JRUkFJRDRoUUNCQklUMGdQeUUrSUR3aFB5QkNJVHdnUnd3QkN5QS9JVUFnUVNFOUlFSWhQeUJIQ3lGQklFUWdQS0lnUmlBL29pQkZJRUdpb0tBaVFwb2dRaUJDUkFBQUFBQUFBQUFBWXhzaFFpQkVJRDZpSUVZZ1FLSWdSU0E5b3FDZ0lrZWFJRWNnUjBRQUFBQUFBQUFBQUdNYklVY0NRQUpBQWtBZ1F5QStvaUJJSUVDaUlFd2dQYUtnb0NKS21pQktJRXBFQUFBQUFBQUFBQUJqR3lKS0lFTWdQS0lnU0NBL29pQk1JRUdpb0tBaVNab2dTU0JKUkFBQUFBQUFBQUFBWXhzaVNXTUVRQ0JISUVwa0JFQWdRaUJLWkVVTkFpQUNJRU01QXhBZ0FpQk1PUU1JSUFJZ1NEa0RBQXdFQ3lBQ0lFUTVBeEFnQWlCRk9RTUlJQUlnUmprREFDQStJRHdnUWlCSFpDSURHeUUrSUQwZ1FTQURHeUU5SUVBZ1B5QURHeUZBREFNTElFY2dTV1FFUUNCQ0lFbGtSUTBCSUFJZ1F6a0RFQ0FDSUV3NUF3Z2dBaUJJT1FNQURBSUxJQUlnUkRrREVDQUNJRVU1QXdnZ0FpQkdPUU1BSUQ0Z1BDQkNJRWRrSWdNYklUNGdQU0JCSUFNYklUMGdRQ0EvSUFNYklVQU1BZ3NnQWlCRU9RTVFJQUlnUlRrRENDQUNJRVk1QXdBTElEOGhRQ0JCSVQwZ1BDRStDeUFDSUQ0NUF5Z2dBaUE5T1FNZ0lBSWdRRGtER0FzZ0FrRkFheUFDS3dNQUlqd2dBaXNESUNJOW9pQUNLd01ZSWo0Z0Fpc0RDQ0kvb3FFaVJDQkVJRVNpSUQ4Z0Fpc0RLQ0pFb2lBOUlBSXJBeEFpUUtLaElrRWdRYUlnUUNBK29pQkVJRHlpb1NKRElFT2lvS0NmSWthaklrVTVBd0FnQWlCRElFYWpJa001QXpnZ0FpQkJJRWFqSWtFNUF6QWdCQ0JBT1FPd0FTQUVJRDg1QTVBQklBUWdQRGtEY0NBRUlFUTVBN2dCSUFRZ1BUa0RtQUVnQkNBK09RTjRJQVFnUlRrRHdBRWdCQ0JET1FPZ0FTQUVJRUU1QTRBQklBUkVBQUFBQUFBQThEOGdVeUJTb0VRQUFBQUFBQURnUDZJaVBLTTVBOGdCSUFRZ1ZpQk5vU0JRb3lJOUlEeWpPUU9vQVNBRUlGVWdVYUVnVHlBOW9xRWdUcU1nUEtNNUE0Z0JRUUFoQ2d3QkN5QUdFRVJCQUVFRFFhb1ZRUUFRT1FzZ0FrSFFBR29rQUNBS1FRQklCRUFnRFJBeElBOFFNUXdCQ3lBRUlBVVErQU1pQWpZQzNBRWdBa1VFUUNBTkVERWdEeEF4REFFTElBSWdCRUhRQVdvZ0JFSHdBR29nQkNBRVFlZ0FhaERxQlVFQVRnUkFRUUFoQ2dOQVFRQWhDeUFLUVFOR0JFQWdCRUhjQVdvUTlBTWdEUkF4SUE4UU1TQVFJQVFyQTJpMklpNDRBalJCZjBFQUlDNURBQUFnUVY0YklRc01Bd1VEUUNBTFFRUkhCRUFnRUNBS1FRUjBhaUFMUVFKMGFpQUVJQXBCQlhScUlBdEJBM1JxS3dNQXRqZ0NBQ0FMUVFGcUlRc01BUXNMSUFwQkFXb2hDZ3dCQ3dBTEFBc2dEUkF4SUE4UU1TQUVRZHdCYWhEMEF3c2dCRUhnQVdva0FDQUxEQUVMREFZTERRTWdEa0hFQUd3aUFpQUFLQUkwYWtFQU5nSThJQWdRUVNFRUlBQW9BalFnQW1vaUF5QU9OZ0l3SUFNZ0JEWUNPQ0FJRUVFaEJDQUlFRUVoQXlBY0lBQW9BalFnQW1vcUFqUzdPUU1RSUJ3Z0F6WUNDQ0FjSUFRMkFnUWdIQ0FPTmdJQVFRQkJBVUdiNlFBZ0hCQTVEQU1GSUFBb0FqUWdBa0hFQUd4cVFYODJBandnQWtFQmFpRUNEQUVMQUFzQUN3d0NDeUFBS0FJNElnSkJBQ0FDUVFCS0d5RUVRUUFoQWdOQUlBSWdCRWNFUUNBQUtBSTBJQUpCeEFCc2FrRUFOZ0pBSUFKQkFXb2hBZ3dCQ3dzZ0pFRUJSZzBBSUFFUU1Rc2dIRUVnYWlRQUR3dEJBRUVEUWU3SEFFRUFFRGxCQVJBQ0FBdEJBRUVEUWVjTlFRQVFPVUVCRUFJQUN4QUFBQXV2QVFFRWZ5TUFRUkJySWdVa0FBTkFBa0FnQWlBRVRBMEFJQUFvQWhnaUF5QUFLQUljSWdaUEJFQWdBQ0FCTEFBQUVMNEJJQUFvQWdBb0FqUVJBd0JCZjBZTkFTQUVRUUZxSVFRZ0FVRUJhaUVCQlNBRklBWWdBMnMyQWd3Z0JTQUNJQVJyTmdJSUlBVkJER29nQlVFSWFoQ2RBaUVESUFBb0FoZ2dBU0FES0FJQUlnTVF0QUVnQUNBRElBQW9BaGhxTmdJWUlBTWdCR29oQkNBQklBTnFJUUVMREFFTEN5QUZRUkJxSkFBZ0JBc3ZBQ0FBSUFBb0FnQW9BaVFSQUFCQmYwWUVRRUYvRHdzZ0FDQUFLQUlNSWdCQkFXbzJBZ3dnQUN3QUFCQytBUXZBQVFFRWZ5TUFRUkJySWdRa0FBTkFBa0FnQWlBRlRBMEFBa0FnQUNnQ0RDSURJQUFvQWhBaUJra0VRQ0FFUWYvLy8vOEhOZ0lNSUFRZ0JpQURhellDQ0NBRUlBSWdCV3MyQWdRZ0JFRU1haUFFUVFocUlBUkJCR29RblFJUW5RSWhBeUFCSUFBb0Fnd2dBeWdDQUNJREVMUUJJQUFnQUNnQ0RDQURhallDREF3QkN5QUFJQUFvQWdBb0FpZ1JBQUFpQTBGL1JnMEJJQUVnQXhEV0F6b0FBRUVCSVFNTElBRWdBMm9oQVNBRElBVnFJUVVNQVFzTElBUkJFR29rQUNBRkN3d0FJQUFRMXdNYUlBQVFNUXUySVFJWWZ3SjlJd0JCNEFCckloQWtBQUpBQWtBQ1FFRUFRUU1nQUVVZ0FVVnlCSDlCMVRzRklBRW9BZ1FOQVVIRHdRQUxRUUFRT1VGL0lSY01BUXNnQUNnQ0hCQXhBa0FnQVNnQ0JDSUVCRUFnQUNBRVFZUUJiQkEzSWdJMkFod2dBa1VOQXdOQUlBTWdCRTROQWlBRFFZUUJiQ0lFSUFBb0FoeHFJQUVvQWdBZ0JHcEJoQUVRUGhvZ0EwRUJhaUVESUFFb0FnUWhCQXdBQ3dBTFFRQWhCQ0FBUVFBMkFod0xJQUFnQkRZQ0lDQUFLQUlrQkVCQkFDRURBMEFnQUNnQ0pDRUVJQUFvQWlnZ0Ewb0VRQ0FFSUFOQkRHeHFLQUlBRURFZ0EwRUJhaUVEREFFTEN5QUVFREVMQWtBZ0FTZ0NEQ0lEQkVBZ0FDQURRUXhzRURjaUJEWUNKQ0FFUlEwREEwQWdBeUFKVEEwQ0lBbEJER3dpQWlBQUtBSWthaUlJSUFFb0FnZ2lCQ0FDYWlJS0tBSUlOZ0lJSUFnZ0NpZ0NCRFlDQkFKQUFrQWdDaWdDQkNJTUJFQWdDQ0FNUVF4c0VEY2lDallDQUVFQUlRTWdDa1VOQndOQUlBTWdERTROQWlBRFFReHNJZ29nQUNnQ0pDQUNhaWdDQUdvaURDQUNJQVJxS0FJQUlBcHFJZ1FwQWdBM0FnQWdEQ0FFS0FJSU5nSUlJQU5CQVdvaEF5QUJLQUlJSWdRZ0Ftb29BZ1FoREF3QUN3QUxJQXBCQURZQ0FBd0JDeUFCS0FJTUlRTUxJQWxCQVdvaENRd0FDd0FMUVFBaEF5QUFRUUEyQWlRTElBQWdBellDS0NBQUtBSTBJZ01FUUNBREVERWdBRUlBTndJMEN3SkFBa0FnQVNnQ0RDSUJRUUJNRFFBZ0FDQUJOZ0k0SUFBZ0FVSEVBR3dRTnlJRU5nSTBJQVJGRFFGQkFDRURBMEFnQVNBRFJnMEJJQVFnQTBIRUFHeHFRUUEyQWtBZ0EwRUJhaUVEREFBTEFBc2dBQ2dDSUNJQlJRMEJJQUZCQUNBQlFRQktHeUVZQTBCQkFDRUJJQkVnQUNnQ0tFNE5BZ05BSUJGQkRHd2lCU0FBS0FJa2FpZ0NCQ0FCVEFSQUlCRkJBV29oRVF3Q0N5QVFRZEFBYWhCS0lRb2dFRUZBYXhCS0lRbEJBQ0VFSUJCQk1Hb1FTaUVNQTBBZ0JDQVlSZ1JBSUJBZ0NoQitOZ0lJSUJBZ0FUWUNCQ0FRSUJFMkFnQkJBRUVCUVo3TEFDQVFFRGtnQUNBU1FRSjBhaUFBS0FJa0lBVnFJZ01vQWdnMkFqd2dBQ2dDQUNFVElBTW9BZ0FnQVVFTWJHb2lBeWdDQUNFRUlBTW9BZ1FoQXlNQVFTQnJJZ3NrQUNBTElCSTJBaHdnQzBFUWFrR1VBUkJYRUxNR0VMSUdJZ2dvQWdBZ0JCQ1lBU0FJS0FJQUlBTVFpUUVnQ0NnQ0FCQXlRZUFBRUpnQklBZ29BZ0FRTWhCYklBb1FmaEN2QmlBS0lBZ29BZ0FRTWhCYklnSkhCRUFnQ2lnQ0FDRUdJQW9vQWdRaEF5TUFRUkJySWdVa0FBSkFJQUlRMXdFZ0F5QUdhMEVVYlNJSFR3UkFJQVVnQXpZQ0RDQUNFSDRnQjA4aUR3Ui9JQU1GSUFVZ0JqWUNEQ0FDRUg0aEJDQUZJQVVvQWd3Z0JFRVViR28yQWd3Z0JTZ0NEQXNoQkNBQ0tBSUFJUTBnQkNBR2F5RU9JQVFnQmtjRVFDQU5JQVlnRGhEUUFnc2dEMFVFUUNBQ0lBVW9BZ3dnQXlBSElBSVFmbXNRbndZTUFnc2dBaUFOSUE1QkZHMUJGR3hxRUt3R0RBRUxJQUlvQWdBRVFDQUNFSDRoQkNBQ0VLb0ZJQUlnQkJDbUJpQUNFRElhSUFJb0FnQWhCQ0FDRU5jQkdpQUVFREVnQWhBeVFRQTJBZ0FnQWtJQU53SUFDeUFDSUFJZ0J4QzZCQkNlQmlBQ0lBWWdBeUFIRUo4R0N5QUZRUkJxSkFBTElBZ29BZ0FRTWhCT0lRUWdEQkNPQVNFREFrQWdBeUFFRUk0QklnSkxCRUFqQUVFZ2F5SUdKQUFDUUNBRElBSnJJZ01nQkJBeUtBSUFJQVFvQWdSclRRUkFJd0JCRUdzaUJTUUFJQVVnQkNBREVMVURJZ0lvQWdRaEF5QUNLQUlJSVFjRFFDQURJQWRHQkVBZ0FoQnJJQVZCRUdva0FBVWdCQkF5R2lBREVJMEdJQUlnQTBFQmFpSUROZ0lFREFFTEN3d0JDeUFFRURJaEFpQUdRUWhxSUFRZ0JCQ09BU0FEYWhDekF5QUVFSTRCSUFJUXFnUWhCU01BUVJCcklnY2tBQ0FISUFWQkNHb2dBeENPQmlJREtBSUFJUUlEUUNBREtBSUVJQUpIQkVBZ0JTZ0NFQm9nQXlnQ0FCQ05CaUFESUFNb0FnQkJBV29pQWpZQ0FBd0JDd3NnQXhDcEFTQUhRUkJxSkFBZ0JDQUZFS2dFSUFVUXB3UUxJQVpCSUdva0FBd0JDeUFDSUFOTEJFQWdCQ0FFS0FJQUlBTnFFSXdFQ3dzZ0RDQUlLQUlBRURJUVRpSURSd1JBSUF3b0FnQWhCU0FNS0FJRUlRSWpBRUVRYXlJRUpBQUNRQ0FGSUFJUWlnUWlCaUFERU5nQlRRUkFJQVFnQWpZQ0RDQUZJQU1RamdFZ0JrOGlCd1IvSUFJRklBUWdCVFlDRENBRUlBTVFqZ0VnQkNnQ0RHbzJBZ3dnQkNnQ0RBc2dBeWdDQUJDaUJpRUZJQWRGQkVBZ0F5QUVLQUlNSUFJZ0JpQURFSTRCYXhDa0Jnd0NDeUFESUFVUWpBUU1BUXNnQXlnQ0FBUkFJQU1RamdFaEJ5QURFTEFGSUFNZ0J4Q2dCaUFERURJYUlBTW9BZ0FoQnlBREVOZ0JHaUFIRURFZ0F4QXlRUUEyQWdBZ0EwSUFOd0lBQ3lBRElBWVFzd01oQnlBREVPb0dJQWRKQkVBUXV3SUFDeUFERURJYUlBTWdCeEJYSWcwMkFnQWdBeUFOTmdJRUlBTVFNaUFISUExcU5nSUFJQU5CQUJEcEJpQURJQVVnQWlBR0VLUUdDeUFFUVJCcUpBQUxJQWdvQWdBaUEwRWthaUlDUVF4cVFZQUJFSlVHSUFKQkRHb1FsZ1lnQWtFSU5nSm9JQUpCRURZQ2JDQURRUWhxSWdNUVRrRUFFTFVGSVEwZ0F4Q0FBU0VGUVFBaEJDTUFRUkJySWdNa0FDTUFRUkJySWdZa0FDQURRZ0EzQWdBZ0JrRUFOZ0lNSUFOQkNHb1FwUUlnQlFSQUlBTVE1Z0lnQlVrRVFCQ3ZBZ0FMSUFNZ0F4QXlJQVVRdFFJaUJ6WUNBQ0FESUFjMkFnUWdBeEF5SUFjZ0JVRUNkR28yQWdBZ0EwRUFFTFFDSUFNZ0JSQ3VBd3NnQmtFUWFpUUFBMEFnQXhCQ0lBUk5CRUFnQTBFQUVEb2hCaUFERUVJaEIwR0FBUkJYSVFRZ0FoQ01CaUVPSUFSQkFUb0FaQ0FFSUE0MkFnQWdCRUhvQUdvUVNob2dCRUgwQUdvUVNob2dCRUVFYWtIZ0FCQ0tCaUFDUVFocUlBUVFrUVlnQWlnQ0NFRUFFS01ESUFJZ0FpZ0NDQ0FOSUFVZ0JpQUhFSXNHSUFNUWNpQURRUkJxSkFBRklBTWdCQkE2SUFRMkFnQWdCRUVCYWlFRURBRUxDeUFUS0FJQUtBSUFJUU1nQ3lBTFFRaHFJQWdRalFRcEFnQTNBd0FqQUVFZ2F5SUZKQUFnQlNBU05nSWNJQVVnQTBISUFHb2lCQ0FGUVJ4cUVIRTJBaGdnQlJCbU5nSUlJQVZCR0dvZ0JVRUlhaEIvQkVCQkVCQUhJQVZCQ0dwQjJBNFFTQkRnQWtHY3lRRkJEeEFHQUFzakFFRWdheUlOSkFBZ0RTQUZRUnhxSWc4UTNnSTJBaEFnRFVFWWFpRVVRUUFoQnlNQVFTQnJJZ01rQUNBRUVEd2FJQThvQWdBaERpQUVFSmNCSVFZZ0EwRUFPZ0FmQWtBQ1FDQUdSUTBBSUFRZ0RpQUdFRndpQnhBNktBSUFJZ0pGRFFBRFFDQUNLQUlBSWdKRkRRRWdEaUFDS0FJRVJ3UkFJQUlvQWdRZ0JoQmNJQWRIRFFJTElBUVFXeUFDUVFocUlBOFFqUUpGRFFBTERBRUxJd0JCRUdzaUZTUUFJQU5CRUdvZ0JCQXlJZ0pCQVJDeUJDQVZRUWhxSUFKQkFCQ3NBaENyQWlJQ0tBSUFRUWhxSVJZZ0RTZ0NFQ0VaSXdCQkVHc2lEeVFBSUE4Z0dUWUNDQ0FXSUE4b0FnZ29BZ0EyQWdBZ0ZrRUVhaEN5QWhvZ0QwRVFhaVFBSUFJUVRrRUJPZ0FFSUFJb0FnQWdEallDQkNBQ0tBSUFRUUEyQWdBZ0ZVRVFhaVFBSUFRUVBDZ0NBQ0VDSUFRUVd5RVBBa0FnQmdSQUlBSkJBV3F6SUE4cUFnQWdCck9VWGtVTkFRc2dBeUFHRUl3Q1FRRnpJQVpCQVhSeU5nSU1JQU1DZnlBRUVEd29BZ0JCQVdxeklBUVFXeW9DQUpXTklocERBQUNBVDEwZ0drTUFBQUFBWUhFRVFDQWFxUXdCQzBFQUN6WUNDQ0FFSUFOQkRHb2dBMEVJYWhCdUtBSUFFSzRDSUE0Z0JCQ1hBU0lHRUZ3aEJ3c0NRQ0FFSUFjUU9pZ0NBQ0lDUlFSQUlBTW9BaEFnQkVFSWFpSUNLQUlBTmdJQUlBUWdBeWdDRURZQ0NDQUVJQWNRT2lBQ05nSUFJQU1vQWhBb0FnQkZEUUVnQXlnQ0VDRUNJQVFnQXlnQ0VDZ0NBQ2dDQkNBR0VGd1FPaUFDTmdJQURBRUxJQU1vQWhBZ0FpZ0NBRFlDQUNBQ0lBTW9BaEEyQWdBTElBTkJFR29pQmhDMkFTRUNJQVFRUENJRUlBUW9BZ0JCQVdvMkFnQWdBMEVCT2dBZklBWW9BZ0FoQkNBR1FRQTJBZ0FnQkFSQUlBWVFUaUlHTFFBRUJFQWdCaWdDQUNBRVFRaHFFS2tHQ3lBRUJFQWdCaWdDQUJvZ0JCQXhDd3NMSUJRZ0EwRVFhaUFDRUhrZ0EwRWZhaEN0QWlBRFFTQnFKQUFnRkJCc0lRTWdEVUVnYWlRQUlBTkJCR29nQ3hDcUJpQUxFTTRCSUFWQklHb2tBQ0FKSUJNb0FnQkJCR29nQzBFY2FoQ3VCaUlDUndSQUlBa29BZ0FoQmlBSktBSUVJUU1qQUVFUWF5SUZKQUFDUUNBR0lBTVErd01pQnlBQ0VLUUJUUVJBSUFVZ0F6WUNEQ0FDRUZNZ0IwOGlEd1IvSUFNRklBVWdCallDRENBQ0VGTWhCQ0FGSUFVb0Fnd2dCRUVNYkdvMkFnd2dCU2dDREFzaEJDQUNLQUlBSVEwZ0JDQUdheUVPSUFRZ0JrY0VRQ0FOSUFZZ0RoRFFBZ3NnRDBVRVFDQUNJQVVvQWd3Z0F5QUhJQUlRVTJzUWdBWU1BZ3NnQWhCVElRTWdBaUFOSUE1QkRHMUJER3hxRUp3SElBSWdBeERsQWd3QkN5QUNLQUlBQkVBZ0FoQlRJUVFnQWhEc0JDQUNJQVFRNVFJZ0FoQXlHaUFDS0FJQUlRUWdBaENrQVJvZ0JCQXhJQUlRTWtFQU5nSUFJQUpDQURjQ0FBc2dBaUFIRU93R0lRUWdBaEM0QXlBRVNRUkFFTHNDQUFzZ0FpQUNFRElnQkJEckJpSU5OZ0lBSUFJZ0RUWUNCQ0FDRURJZ0RTQUVRUXhzYWpZQ0FDQUNRUUFRdHdNZ0FpQUdJQU1nQnhDQUJnc2dCVUVRYWlRQUN5QUlFTTRCSUF0QklHb2tBQ0FNRUxRRklBa1ErZ1FnQ2hEbUF5QVNRUUZxSVJJZ0FVRUJhaUVCREFJTEFrQWdCRUdFQVd3aUJpQUFLQUljYWlJQ0tBS0FBU0FBS0FJa0lBVnFJZ01vQWdBZ0FVRU1iR29vQWdoSERRQWdBaWdDZkNBREtBSUlSdzBBUVFBaEF5QVFRUmhxSWdnZ0Fpb0NBQ0FDS2dJRUlBSXFBbkFnQWlvQ2RDQUNLQUo0UVFCSEVQVUVJUXNDUUNBS0tBSUVJQW9RTWlnQ0FFa0VRQ01BUVJCcklnY2tBQ0FISUFwQkFSQzhCQ0VDSUFvUU1pQUNLQUlFSUFzUXZnTWdBaUFDS0FJRVFSUnFOZ0lFSUFJUWF5QUhRUkJxSkFBTUFRc2pBRUVnYXlJSEpBQWdDaEF5SWdJZ0IwRUlhaUFLSUFvUWZrRUJhaEM2QkNBS0VINGdBaENPQnlJQ0tBSUlJQXNRdmdNZ0FpQUNLQUlJUVJScU5nSUlJQW9nQWhDTkJ5QUNFSXdISUFkQklHb2tBQXNnQUNnQ0hDQUdhaUlDS2dJSUlSb2dBaW9DRENFYklBaERBQUFBQURnQ0NDQUlJQnM0QWdRZ0NDQWFPQUlBQWtBZ0NTZ0NCQ0FKRURJb0FnQkpCRUFqQUVFUWF5SUxKQUFnQ3lBSlFRRVE4QUloQWlBSkVESWdBaWdDQkNBSUVPMEdJQUlnQWlnQ0JFRU1hallDQkNBQ0VHc2dDMEVRYWlRQURBRUxJd0JCSUdzaUN5UUFJQWtRTWlJQ0lBdEJDR29nQ1NBSkVGTkJBV29RN0FZZ0NSQlRJQUlRN3dJaUFpZ0NDQ0FJRU8wR0lBSWdBaWdDQ0VFTWFqWUNDQ0FKRUlBQ0lBa1FNaG9nQWtFRWFpSUhJZ2dnQ0NnQ0FDQUpLQUlFSUFrb0FnQWlEV3NpQ0VGMGJVRU1iR29pRGpZQ0FDQUlRUUJLQkVBZ0RpQU5JQWdRUGhvTElBa2dCeEJGSUFsQkJHb2dBa0VJYWhCRklBa1FNaUFDRUR3UVJTQUNJQUlvQWdRMkFnQWdDU0FKRUZNUXR3TWdBaWdDQkNFSUEwQWdDQ0FDS0FJSVJ3UkFJQUlvQWhBYUlBSWdBaWdDQ0VFTWF6WUNDQXdCQ3dzZ0FpZ0NBQVJBSUFJb0FoQWFJQUlvQWdBaENDQUNFTFlER2lBSUVERUxJQXRCSUdva0FBc0RRQ0FEUWVBQVJnMEJJQUFvQWh3Z0Jtb2dBMnBCRUdvaENBSkFJQXdvQWdRZ0RCQXlLQUlBUndSQUl3QkJFR3NpQ3lRQUlBc2dERUVCRUxVRElRSWdEQkF5SUFJb0FnUWdDQkMwQXlBQ0lBSW9BZ1JCQVdvMkFnUWdBaEJySUF0QkVHb2tBQXdCQ3lNQVFTQnJJZ3NrQUNBTUVESWlBaUFMUVFocUlBd2dEQkNPQVVFQmFoQ3pBeUFNRUk0QklBSVFxZ1FpQWlnQ0NDQUlFTFFESUFJZ0FpZ0NDRUVCYWpZQ0NDQU1JQUlRcUFRZ0FoQ25CQ0FMUVNCcUpBQUxJQU5CQVdvaEF3d0FDd0FMSUFSQkFXb2hCQXdBQ3dBTEFBc0FDd3dCQ3lBUVFlQUFhaVFBSUJjUEMwRUFRUU5CN3NjQVFRQVFPVUVCRUFJQUMxUUJBbjhnQVNBQUtBSlVJZ0VnQVVFQUlBSkJnQUpxSWdNUTRRTWlCQ0FCYXlBRElBUWJJZ01nQWlBQ0lBTkxHeUlDRUQ0YUlBQWdBU0FEYWlJRE5nSlVJQUFnQXpZQ0NDQUFJQUVnQW1vMkFnUWdBZ3VwQVFFRWZ5QUFLQUpVSWdNb0FnUWlCU0FBS0FJVUlBQW9BaHdpQm1zaUJDQUVJQVZMR3lJRUJFQWdBeWdDQUNBR0lBUVFQaG9nQXlBREtBSUFJQVJxTmdJQUlBTWdBeWdDQkNBRWF5SUZOZ0lFQ3lBREtBSUFJUVFnQlNBQ0lBSWdCVXNiSWdVRVFDQUVJQUVnQlJBK0dpQURJQU1vQWdBZ0JXb2lCRFlDQUNBRElBTW9BZ1FnQldzMkFnUUxJQVJCQURvQUFDQUFJQUFvQWl3aUFUWUNIQ0FBSUFFMkFoUWdBZ3NwQUNBQklBRW9BZ0JCQjJwQmVIRWlBVUVRYWpZQ0FDQUFJQUVwQXdBZ0FTa0RDQkRhQXprREFBdkhHQU1TZndGOEFuNGpBRUd3QkdzaUN5UUFJQXRCQURZQ0xBSkFJQUc5SWhsQ0FGTUVRRUVCSVJCQjJOY0JJUk1nQVpvaUFiMGhHUXdCQ3lBRVFZQVFjUVJBUVFFaEVFSGIxd0VoRXd3QkMwSGUxd0ZCMmRjQklBUkJBWEVpRUJzaEV5QVFSU0VWQ3dKQUlCbENnSUNBZ0lDQWdQai9BSU5DZ0lDQWdJQ0FnUGovQUZFRVFDQUFRU0FnQWlBUVFRTnFJZ01nQkVILy8zdHhFSWdCSUFBZ0V5QVFFSVFCSUFCQjlla0JRYUNFQWlBRlFTQnhJZ1ViUWZQdEFVRzRod0lnQlJzZ0FTQUJZaHRCQXhDRUFTQUFRU0FnQWlBRElBUkJnTUFBY3hDSUFTQURJQUlnQWlBRFNCc2hDUXdCQ3lBTFFSQnFJUkVDUUFKL0FrQWdBU0FMUVN4cUVJOEZJZ0VnQWFBaUFVUUFBQUFBQUFBQUFHSUVRQ0FMSUFzb0Fpd2lCa0VCYXpZQ0xDQUZRU0J5SWc1QjRRQkhEUUVNQXdzZ0JVRWdjaUlPUWVFQVJnMENJQXNvQWl3aENrRUdJQU1nQTBFQVNCc01BUXNnQ3lBR1FSMXJJZ28yQWl3Z0FVUUFBQUFBQUFDd1FhSWhBVUVHSUFNZ0EwRUFTQnNMSVF3Z0MwRXdha0VBUWFBQ0lBcEJBRWdiYWlJTklRY0RRQ0FIQW44Z0FVUUFBQUFBQUFEd1FXTWdBVVFBQUFBQUFBQUFBR1p4QkVBZ0Fhc01BUXRCQUFzaUF6WUNBQ0FIUVFScUlRY2dBU0FEdUtGRUFBQUFBR1hOelVHaUlnRkVBQUFBQUFBQUFBQmlEUUFMQWtBZ0NrRUFUQVJBSUFvaEF5QUhJUVlnRFNFSURBRUxJQTBoQ0NBS0lRTURRQ0FEUVIwZ0EwRWRTQnNoQXdKQUlBZEJCR3NpQmlBSVNRMEFJQU90SVJwQ0FDRVpBMEFnQmlBWlF2Ly8vLzhQZ3lBR05RSUFJQnFHZkNJWklCbENnSlRyM0FPQUlobENnSlRyM0FOK2ZUNENBQ0FHUVFScklnWWdDRThOQUFzZ0dhY2lCa1VOQUNBSVFRUnJJZ2dnQmpZQ0FBc0RRQ0FJSUFjaUJra0VRQ0FHUVFScklnY29BZ0JGRFFFTEN5QUxJQXNvQWl3Z0Eyc2lBellDTENBR0lRY2dBMEVBU2cwQUN3c2dBMEVBU0FSQUlBeEJHV3BCQ1c1QkFXb2hEeUFPUWVZQVJpRVNBMEJCQUNBRGF5SURRUWtnQTBFSlNCc2hDUUpBSUFZZ0NFMEVRQ0FJS0FJQUlRY01BUXRCZ0pUcjNBTWdDWFloRkVGL0lBbDBRWDl6SVJaQkFDRURJQWdoQndOQUlBY2dBeUFIS0FJQUloY2dDWFpxTmdJQUlCWWdGM0VnRkd3aEF5QUhRUVJxSWdjZ0Jra05BQXNnQ0NnQ0FDRUhJQU5GRFFBZ0JpQUROZ0lBSUFaQkJHb2hCZ3NnQ3lBTEtBSXNJQWxxSWdNMkFpd2dEU0FJSUFkRlFRSjBhaUlJSUJJYklnY2dEMEVDZEdvZ0JpQUdJQWRyUVFKMUlBOUtHeUVHSUFOQkFFZ05BQXNMUVFBaEF3SkFJQVlnQ0UwTkFDQU5JQWhyUVFKMVFRbHNJUU5CQ2lFSElBZ29BZ0FpQ1VFS1NRMEFBMEFnQTBFQmFpRURJQWtnQjBFS2JDSUhUdzBBQ3dzZ0RFRUFJQU1nRGtIbUFFWWJheUFPUWVjQVJpQU1RUUJIY1dzaUJ5QUdJQTFyUVFKMVFRbHNRUWxyU0FSQVFRUkJwQUlnQ2tFQVNCc2dDMm9nQjBHQXlBQnFJZ2xCQ1cwaUQwRUNkR3BCMEI5cklRcEJDaUVISUFrZ0QwRUpiR3NpQ1VFSFRBUkFBMEFnQjBFS2JDRUhJQWxCQVdvaUNVRUlSdzBBQ3dzQ1FDQUtLQUlBSWhJZ0VpQUhiaUlQSUFkc2F5SUpSU0FLUVFScUloUWdCa1p4RFFBQ1FDQVBRUUZ4UlFSQVJBQUFBQUFBQUVCRElRRWdCMEdBbE92Y0EwY2dDQ0FLVDNJTkFTQUtRUVJyTFFBQVFRRnhSUTBCQzBRQkFBQUFBQUJBUXlFQkMwUUFBQUFBQUFEZ1AwUUFBQUFBQUFEd1AwUUFBQUFBQUFENFB5QUdJQlJHRzBRQUFBQUFBQUQ0UHlBSklBZEJBWFlpRkVZYklBa2dGRWtiSVJnQ1FDQVZEUUFnRXkwQUFFRXRSdzBBSUJpYUlSZ2dBWm9oQVFzZ0NpQVNJQWxySWdrMkFnQWdBU0FZb0NBQllRMEFJQW9nQnlBSmFpSUROZ0lBSUFOQmdKVHIzQU5QQkVBRFFDQUtRUUEyQWdBZ0NDQUtRUVJySWdwTEJFQWdDRUVFYXlJSVFRQTJBZ0FMSUFvZ0NpZ0NBRUVCYWlJRE5nSUFJQU5CLzVQcjNBTkxEUUFMQ3lBTklBaHJRUUoxUVFsc0lRTkJDaUVISUFnb0FnQWlDVUVLU1EwQUEwQWdBMEVCYWlFRElBa2dCMEVLYkNJSFR3MEFDd3NnQ2tFRWFpSUhJQVlnQmlBSFN4c2hCZ3NEUUNBR0lnY2dDRTBpQ1VVRVFDQUhRUVJySWdZb0FnQkZEUUVMQ3dKQUlBNUI1d0JIQkVBZ0JFRUljU0VLREFFTElBTkJmM05CZnlBTVFRRWdEQnNpQmlBRFNpQURRWHRLY1NJS0d5QUdhaUVNUVg5QmZpQUtHeUFGYWlFRklBUkJDSEVpQ2cwQVFYY2hCZ0pBSUFrTkFDQUhRUVJyS0FJQUlnNUZEUUJCQ2lFSlFRQWhCaUFPUVFwd0RRQURRQ0FHSWdwQkFXb2hCaUFPSUFsQkNtd2lDWEJGRFFBTElBcEJmM01oQmdzZ0J5QU5hMEVDZFVFSmJDRUpJQVZCWDNGQnhnQkdCRUJCQUNFS0lBd2dCaUFKYWtFSmF5SUdRUUFnQmtFQVNoc2lCaUFHSUF4S0d5RU1EQUVMUVFBaENpQU1JQU1nQ1dvZ0JtcEJDV3NpQmtFQUlBWkJBRW9iSWdZZ0JpQU1TaHNoREF0QmZ5RUpJQXhCL2YvLy93ZEIvdi8vL3djZ0NpQU1jaUlTRzBvTkFTQU1JQkpCQUVkcVFRRnFJUTRDUUNBRlFWOXhJaFZCeGdCR0JFQWdBeUFPUWYvLy8vOEhjMG9OQXlBRFFRQWdBMEVBU2hzaEJnd0JDeUFSSUFNZ0EwRWZkU0lHY3lBR2E2MGdFUkNmQWlJR2EwRUJUQVJBQTBBZ0JrRUJheUlHUVRBNkFBQWdFU0FHYTBFQ1NBMEFDd3NnQmtFQ2F5SVBJQVU2QUFBZ0JrRUJhMEV0UVNzZ0EwRUFTQnM2QUFBZ0VTQVBheUlHSUE1Qi8vLy8vd2R6U2cwQ0N5QUdJQTVxSWdNZ0VFSC8vLy8vQjNOS0RRRWdBRUVnSUFJZ0F5QVFhaUlGSUFRUWlBRWdBQ0FUSUJBUWhBRWdBRUV3SUFJZ0JTQUVRWUNBQkhNUWlBRUNRQUpBQWtBZ0ZVSEdBRVlFUUNBTFFSQnFJZ1pCQ0hJaEF5QUdRUWx5SVFvZ0RTQUlJQWdnRFVzYklna2hDQU5BSUFnMUFnQWdDaENmQWlFR0FrQWdDQ0FKUndSQUlBWWdDMEVRYWswTkFRTkFJQVpCQVdzaUJrRXdPZ0FBSUFZZ0MwRVFha3NOQUFzTUFRc2dCaUFLUncwQUlBdEJNRG9BR0NBRElRWUxJQUFnQmlBS0lBWnJFSVFCSUFoQkJHb2lDQ0FOVFEwQUN5QVNCRUFnQUVHdmt3SkJBUkNFQVFzZ0RFRUFUQ0FISUFoTmNnMEJBMEFnQ0RVQ0FDQUtFSjhDSWdZZ0MwRVFha3NFUUFOQUlBWkJBV3NpQmtFd09nQUFJQVlnQzBFUWFrc05BQXNMSUFBZ0JpQU1RUWtnREVFSlNCc1FoQUVnREVFSmF5RUdJQWhCQkdvaUNDQUhUdzBESUF4QkNVb2hBeUFHSVF3Z0F3MEFDd3dDQ3dKQUlBeEJBRWdOQUNBSElBaEJCR29nQnlBSVN4c2hDU0FMUVJCcUlnWkJDSEloQXlBR1FRbHlJUTBnQ0NFSEEwQWdEU0FITlFJQUlBMFFud0lpQmtZRVFDQUxRVEE2QUJnZ0F5RUdDd0pBSUFjZ0NFY0VRQ0FHSUF0QkVHcE5EUUVEUUNBR1FRRnJJZ1pCTURvQUFDQUdJQXRCRUdwTERRQUxEQUVMSUFBZ0JrRUJFSVFCSUFaQkFXb2hCaUFLSUF4eVJRMEFJQUJCcjVNQ1FRRVFoQUVMSUFBZ0JpQU1JQTBnQm1zaUJpQUdJQXhLR3hDRUFTQU1JQVpySVF3Z0IwRUVhaUlISUFsUERRRWdERUVBVGcwQUN3c2dBRUV3SUF4QkVtcEJFa0VBRUlnQklBQWdEeUFSSUE5ckVJUUJEQUlMSUF3aEJnc2dBRUV3SUFaQkNXcEJDVUVBRUlnQkN5QUFRU0FnQWlBRklBUkJnTUFBY3hDSUFTQUZJQUlnQWlBRlNCc2hDUXdCQ3lBVElBVkJHblJCSDNWQkNYRnFJUXdDUUNBRFFRdExEUUJCRENBRGF5RUdSQUFBQUFBQUFEQkFJUmdEUUNBWVJBQUFBQUFBQURCQW9pRVlJQVpCQVdzaUJnMEFDeUFNTFFBQVFTMUdCRUFnR0NBQm1pQVlvYUNhSVFFTUFRc2dBU0FZb0NBWW9TRUJDeUFSSUFzb0Fpd2lCaUFHUVI5MUlnWnpJQVpyclNBUkVKOENJZ1pHQkVBZ0MwRXdPZ0FQSUF0QkQyb2hCZ3NnRUVFQ2NpRUtJQVZCSUhFaENDQUxLQUlzSVFjZ0JrRUNheUlOSUFWQkQybzZBQUFnQmtFQmEwRXRRU3NnQjBFQVNCczZBQUFnQkVFSWNTRUdJQXRCRUdvaEJ3TkFJQWNpQlFKL0lBR1pSQUFBQUFBQUFPQkJZd1JBSUFHcURBRUxRWUNBZ0lCNEN5SUhRWkQyQW1vdEFBQWdDSEk2QUFBZ0JpQURRUUJLY2tVZ0FTQUh0NkZFQUFBQUFBQUFNRUNpSWdGRUFBQUFBQUFBQUFCaGNTQUZRUUZxSWdjZ0MwRVFhbXRCQVVkeVJRUkFJQVZCTGpvQUFTQUZRUUpxSVFjTElBRkVBQUFBQUFBQUFBQmlEUUFMUVg4aENVSDkvLy8vQnlBS0lCRWdEV3NpQldvaUJtc2dBMGdOQUNBQVFTQWdBaUFHQW44Q1FDQURSUTBBSUFjZ0MwRVFhbXNpQ0VFQ2F5QURUZzBBSUFOQkFtb01BUXNnQnlBTFFSQnFheUlJQ3lJSGFpSURJQVFRaUFFZ0FDQU1JQW9RaEFFZ0FFRXdJQUlnQXlBRVFZQ0FCSE1RaUFFZ0FDQUxRUkJxSUFnUWhBRWdBRUV3SUFjZ0NHdEJBRUVBRUlnQklBQWdEU0FGRUlRQklBQkJJQ0FDSUFNZ0JFR0F3QUJ6RUlnQklBTWdBaUFDSUFOSUd5RUpDeUFMUWJBRWFpUUFJQWtMSVFFQ2Z5QUFFSjRCUVFGcUlnRVFOeUlDUlFSQVFRQVBDeUFDSUFBZ0FSQStDd1FBUWdBTEJBQkJBQXM1QVFGK0FuNGdBQ2dDVEVFQVNBUkFJQUFRblFVTUFRc2dBQkNkQlFzaUFVS0FnSUNBQ0ZrRVFFRzBqQVJCUFRZQ0FFRi9Ed3NnQWFjTENRQWdBQ2dDUEJBUEM5Y0JBUVIvSXdCQklHc2lCQ1FBSUFRZ0FUWUNFQ0FFSUFJZ0FDZ0NNQ0lEUVFCSGF6WUNGQ0FBS0FJc0lRWWdCQ0FETmdJY0lBUWdCallDR0VFZ0lRTUNRQUpBSUFBZ0FDZ0NQQ0FFUVJCcVFRSWdCRUVNYWhBaUVJVURCSDlCSUFVZ0JDZ0NEQ0lEUVFCS0RRRkJJRUVRSUFNYkN5QUFLQUlBY2pZQ0FBd0JDeUFFS0FJVUlnWWdBeUlGVHcwQUlBQWdBQ2dDTENJRE5nSUVJQUFnQXlBRklBWnJhallDQ0NBQUtBSXdCRUFnQUNBRFFRRnFOZ0lFSUFFZ0FtcEJBV3NnQXkwQUFEb0FBQXNnQWlFRkN5QUVRU0JxSkFBZ0JRdllBZ0VIZnlNQVFTQnJJZ01rQUNBRElBQW9BaHdpQkRZQ0VDQUFLQUlVSVFVZ0F5QUNOZ0ljSUFNZ0FUWUNHQ0FESUFVZ0JHc2lBVFlDRkNBQklBSnFJUVVnQTBFUWFpRUJRUUloQndKL0FrQUNRQUpBSUFBb0Fqd2dBVUVDSUFOQkRHb1FFQkNGQXdSQUlBRWhCQXdCQ3dOQUlBVWdBeWdDRENJR1JnMENJQVpCQUVnRVFDQUJJUVFNQkFzZ0FTQUdJQUVvQWdRaUNFc2lDVUVEZEdvaUJDQUdJQWhCQUNBSkcyc2lDQ0FFS0FJQWFqWUNBQ0FCUVF4QkJDQUpHMm9pQVNBQktBSUFJQWhyTmdJQUlBVWdCbXNoQlNBQUtBSThJQVFpQVNBSElBbHJJZ2NnQTBFTWFoQVFFSVVEUlEwQUN3c2dCVUYvUncwQkN5QUFJQUFvQWl3aUFUWUNIQ0FBSUFFMkFoUWdBQ0FCSUFBb0FqQnFOZ0lRSUFJTUFRc2dBRUVBTmdJY0lBQkNBRGNERUNBQUlBQW9BZ0JCSUhJMkFnQkJBQ0FIUVFKR0RRQWFJQUlnQkNnQ0JHc0xJUUVnQTBFZ2FpUUFJQUVMUmdFQmZ5QUFLQUk4SVFNakFFRVFheUlBSkFBZ0F5QUJweUFCUWlDSXB5QUNRZjhCY1NBQVFRaHFFQm9RaFFNaEFpQUFLUU1JSVFFZ0FFRVFhaVFBUW44Z0FTQUNHd3NHQUVHMGpBUUxKQUVCZjBHb2pBUW9BZ0FpQUFSQUEwQWdBQ2dDQUJFT0FDQUFLQUlFSWdBTkFBc0xDd29BSUFBb0FnUVErUWNMbndFQkJIOGdBMEVBU2dSQUlBQW9BbkFoQWlBQUtBTGtBeWdDR0NFSEEwQWdBZ1JBSUFFZ0JVRUNkR29vQWdBaEFDQUNJUVlEUUNBSElBQXRBQUJCQVhaQi9BQnhhaWdDQUNBQUxRQUJRUVIwUWNBZmNXb2dBQzBBQWtFQ2RrRStjV29pQkNBRUx3RUFJZ1FnQkVFQmFpSUVJQVFnQkVILy93TnhSeHM3QVFBZ0FFRURhaUVBSUFaQkFXc2lCZzBBQ3dzZ0JVRUJhaUlGSUFOSERRQUxDd3YrQ2dFYWZ5QUFJQUFvQXVRREloTW9BaEEyQW9nQklBQkJBU0FUS0FJVUlnaEJCWFFnQUNnQ0JDZ0NBQkVFQUNJTFFvQ0FnSUR3QXpjQ0VDQUxRb0NBZ0lEd0J6Y0NDQ0FMUW9DQWdJRHdBemNDQUNBQUlBc1E1QU5CQVNFS0FrQUNRQ0FJUVFKSURRQURRQUpBQWtBQ1FDQUlJQXBCQVhST0JFQWdDa0VCY1NFRUlBOE5BVUVBSVFKQkFDRURJQXNoQVF3Q0MwRUFJUWxCQUNFQ1FRQWhBeUFMSVFFZ0QwRURUd1JBSUFwQi9QLy8vd2R4SVFkQkFDRUVBMEFnQVVIZ0FHb2dBVUZBYXlBQlFTQnFJQUVnQWlBQktBSVlJZ0lnQTBvaUJSc2dBU2dDT0NJR0lBSWdBeUFGR3lJQ1NpSURHeUFCS0FKWUlnVWdCaUFDSUFNYklnSktJZ01iSUFFb0FuZ2lCaUFGSUFJZ0F4c2lBMG9pQlJzaEFpQUdJQU1nQlJzaEF5QUJRWUFCYWlFQklBUkJCR29pQkNBSFJ3MEFDd3NnQ2tFRGNTSUVSUTBDQTBBZ0FTQUNJQUVvQWhnaUJ5QURTaUlGR3lFQ0lBY2dBeUFGR3lFRElBRkJJR29oQVNBSlFRRnFJZ2tnQkVjTkFBc01BZ3NnQ2tIKy8vLy9CM0VoQjBFQUlRSkJBQ0VESUFzaEFVRUFJUWtEUUNBRElBRW9BaHdpQlVnRVFDQUJJQUlnQVNnQ0dFRUFTaUlHR3lFQ0lBVWdBeUFHR3lFREN5QURJQUVvQWp3aUJVZ0VRQ0FCUVNCcUlBSWdBU2dDT0VFQVNpSUdHeUVDSUFVZ0F5QUdHeUVEQ3lBQlFVQnJJUUVnQ1VFQ2FpSUpJQWRIRFFBTEN5QUVSUTBBSUFFb0Fod2dBMHdOQUNBQklBSWdBU2dDR0VFQVNoc2hBZ3NnQWtVTkFTQUxJQXBCQlhScUlnRWdBaWdDQkRZQ0JDQUJJQUlvQWd3MkFnd2dBU0FDS0FJVU5nSVVJQUVnQWlnQ0FEWUNBQ0FCSUFJb0FnZzJBZ2dnQVNBQ0tBSVFOZ0lRQWtBQ2Z3SkFBa0FDUUVFQ0lBSW9BZ1FpQkNBQ0tBSUFJZ2RyUVFSMElna2dBaWdDRENJRklBSW9BZ2dpQm10QkRHd2lBMHdnQWlnQ0ZDSU5JQUlvQWhBaURtdEJBM1FnQ1NBRElBTWdDVWdiU2hzT0F3QUJBZ1FMSUFJZ0JDQUhha0VDYlNJRE5nSUVJQUVNQWdzZ0FpQUZJQVpxUVFKdElnTTJBZ3dnQVVFSWFnd0JDeUFDSUEwZ0RtcEJBbTBpQXpZQ0ZDQUJRUkJxQ3lBRFFRRnFOZ0lBQ3lBQUlBSVE1QU1nQUNBQkVPUURJQTlCQVdvaER5QUtRUUZxSWdvZ0NFY05BQXNnQ0NJS1FRQk1EUUVMUVFBaERRTkFRUUFoQkVFQUlRZEJBQ0VGUVFBaEJpQUxJQTFCQlhScUlnRW9BZ0FpRGlBQktBSUVJaFpNQkVBZ0FTZ0NDQ0VESUFBb0F1UURLQUlZSVJjZ0FTZ0NFQ0lJUVFGcUlROGdDRUVEZEVFRWNpRVlJQUVvQWhRaUVDQUlhMEVCYWtFQmNTRVpJQUVvQWd3aEZBTkFJQU1nRkV3RVFDQU9RUU4wUVFSeUlSRWdGeUFPUVFKMGFpZ0NBQ0VhSUFNaEFRTkFJQUVoQ1FKQUlBZ2dFRW9OQUNBYUlBbEJCblJxSUFoQkFYUnFJUUlnQ1VFQ2RFRUNjaUVTQW44Z0dVVUVRQ0FDSVFFZ0NBd0JDeUFDUVFKcUlRRWdBaThCQUNJQ0JFQWdBaUFZYkNBR2FpRUdJQUlnRW13Z0JXb2hCU0FDSUJGc0lBZHFJUWNnQWlBRWFpRUVDeUFQQ3lFQ0lBZ2dFRVlOQUFOQUlBRXZBUUFpREFSQUlBd2dFbXdnQldvaEJTQU1JQkZzSUFkcUlRY2dBa0VEZEVFRWNpQU1iQ0FHYWlFR0lBUWdER29oQkFzZ0FrRUJhaUVWSUFFdkFRSWlEQVJBSUF3Z0Vtd2dCV29oQlNBTUlCRnNJQWRxSVFjZ0ZVRURkRUVFY2lBTWJDQUdhaUVHSUFRZ0RHb2hCQXNnQVVFRWFpRUJJQUpCQW1vaEFpQVFJQlZIRFFBTEN5QUpRUUZxSVFFZ0NTQVVSdzBBQ3dzZ0RpQVdSeUVCSUE1QkFXb2hEaUFCRFFBTEN5QUFLQUtJQVNnQ0FDQU5haUFISUFSQkFYVWlBV29nQkcwNkFBQWdBQ2dDaUFFb0FnUWdEV29nQVNBRmFpQUViVG9BQUNBQUtBS0lBU2dDQ0NBTmFpQUJJQVpxSUFSdE9nQUFJQTFCQVdvaURTQUtSdzBBQ3lBS0lRZ0xJQUFnQ0RZQ2hBRWdBQ2dDQUNJQklBZzJBaGdnQVVIaUFEWUNGQ0FBUVFFZ0FDZ0NBQ2dDQkJFQ0FDQVRRUUUyQWh3THN3VUJJMzhnQTBFQVNnUkFJQUFvQXRBQ0lSSWdBQ2dDaUFFaUJTZ0NDQ0ViSUFVb0FnUWhIQ0FGS0FJQUlSMGdBQ2dDNUFNaUNpZ0NLQ0VUSUFvb0FoZ2hIaUFBS0FKd0loUkJBV3NoSHlBVVFRTnNJZ1ZCQTJzaElDQUZRUU5xUVFGMElTRURRQ0FDSUJWQkFuUWlCV29vQWdBaEN5QUJJQVZxS0FJQUlRY0NmeUFLS0FJa0JFQWdDeUFmYWlFTElBY2dJR29oQjBGOUlReEJmeUVXUVFBaEJDQUtLQUlnSUNGcURBRUxRUU1oREVFQklRUkJBU0VXSUFvb0FpQUxJUVVnQ2lBRU5nSWtBa0FnRkVVRVFFRUFJUTFCQUNFT1FRQWhEd3dCQ3lBTVFRSnFJU0lnREVFQmFpRWpRUUFoRUVFQUlRbEJBQ0VSUVFBaEYwRUFJUmhCQUNFWlFRQWhEMEVBSVE1QkFDRU5JQlFoR2lBRklRUURRQ0FMSUI0Z0VpQVRJQkFnQkNBTVFRRjBhaUlGTGdFQWFrRUlha0VFZFVFQ2RHb29BZ0FnQnkwQUFHcHFMUUFBSWlSQkEzWWlKVUVDZEdvb0FnQWdFaUFUSUFrZ0JDQWpRUUYwYWk0QkFHcEJDR3BCQkhWQkFuUnFLQUlBSUFjdEFBRnFhaTBBQUNJUVFRSjJJZ2xCQm5ScUlCSWdFeUFSSUFRZ0lrRUJkR291QVFCcVFRaHFRUVIxUVFKMGFpZ0NBQ0FITFFBQ2Ftb3RBQUFpRVVFRGRpSUdRUUYwYWlJSUx3RUFJaVlFZnlBbUJTQUFJQ1VnQ1NBR0VLZ0ZJQWd2QVFBTFFRRnJJZ1k2QUFBZ0JpQWRhaTBBQUNFSklBWWdIR290QUFBaENDQUVJQkVnQmlBYmFpMEFBR3NpQmtFRGJDQU5hanNCQkNBRUlCQWdDR3NpQ0VFRGJDQU9hanNCQWlBRUlDUWdDV3NpQkVFRGJDQVBhanNCQUNBTElCWnFJUXNnQnlBTWFpRUhJQVpCQjJ3aEVTQUlRUWRzSVFrZ0JFRUhiQ0VRSUFaQkJXd2dHV29oRFNBSVFRVnNJQmhxSVE0Z0JFRUZiQ0FYYWlFUElBUWhGeUFJSVJnZ0JpRVpJQVVoQkNBYVFRRnJJaG9OQUFzTElBVWdEVHNCQkNBRklBNDdBUUlnQlNBUE93RUFJQlZCQVdvaUZTQURSdzBBQ3dzTHZ3RUJDMzhnQTBFQVNnUkFJQUFvQW5BaENTQUFLQUxrQXlnQ0dDRUtBMEFnQ1FSQUlBRWdCa0VDZENJRmFpZ0NBQ0VFSUFJZ0JXb29BZ0FoQnlBSklRVURRQ0FLSUFRdEFBQkJBM1lpQzBFQ2RHb29BZ0FnQkMwQUFVRUNkaUlNUVFaMGFpQUVMUUFDUVFOMklnMUJBWFJxSWc0dkFRQWlDRVVFUUNBQUlBc2dEQ0FORUtnRklBNHRBQUFoQ0FzZ0JFRURhaUVFSUFjZ0NFRUJhem9BQUNBSFFRRnFJUWNnQlVFQmF5SUZEUUFMQ3lBR1FRRnFJZ1lnQTBjTkFBc0xDN1FGQVFSL0lBQW9BdVFESWdNb0FoZ2hBZ0pBQWtBQ2Z5QUFLQUpZUlFSQUlBRU5Ba0g2QVF3QkN5QUFRUUkyQWxnZ0FRMEJRZnNCQ3lFQklBTkIvQUUyQWdnZ0F5QUJOZ0lFUVFFaEFRSkFJQUFvQW9RQklnUkJBRXdFZjBFNkJTQUVRWUVDU1EwQlFZQUNJUUZCT3dzaEJDQUFLQUlBSWdVZ0FUWUNHQ0FGSUFRMkFoUWdBQ0FBS0FJQUtBSUFFUUVBQ3lBQUtBSllRUUpIRFFFZ0FDZ0NjRUVHYkVFTWFpRUJJQU1vQWlBaUJFVUVRQ0FESUFCQkFTQUJJQUFvQWdRb0FnUVJCQUFpQkRZQ0lBc2dCRUVBSUFFUU9Cb2dBeWdDS0VVRVFDQUFFS2tGQ3lBRFFRQTJBaVFNQVFzZ0EwRUJOZ0ljSUFOQi9RRTJBZ2dnQTBIK0FUWUNCQXNnQXlnQ0hBUkFJQUlvQWdCQkFFR0FJQkE0R2lBQ0tBSUVRUUJCZ0NBUU9Cb2dBaWdDQ0VFQVFZQWdFRGdhSUFJb0FneEJBRUdBSUJBNEdpQUNLQUlRUVFCQmdDQVFPQm9nQWlnQ0ZFRUFRWUFnRURnYUlBSW9BaGhCQUVHQUlCQTRHaUFDS0FJY1FRQkJnQ0FRT0JvZ0FpZ0NJRUVBUVlBZ0VEZ2FJQUlvQWlSQkFFR0FJQkE0R2lBQ0tBSW9RUUJCZ0NBUU9Cb2dBaWdDTEVFQVFZQWdFRGdhSUFJb0FqQkJBRUdBSUJBNEdpQUNLQUkwUVFCQmdDQVFPQm9nQWlnQ09FRUFRWUFnRURnYUlBSW9BanhCQUVHQUlCQTRHaUFDS0FKQVFRQkJnQ0FRT0JvZ0FpZ0NSRUVBUVlBZ0VEZ2FJQUlvQWtoQkFFR0FJQkE0R2lBQ0tBSk1RUUJCZ0NBUU9Cb2dBaWdDVUVFQVFZQWdFRGdhSUFJb0FsUkJBRUdBSUJBNEdpQUNLQUpZUVFCQmdDQVFPQm9nQWlnQ1hFRUFRWUFnRURnYUlBSW9BbUJCQUVHQUlCQTRHaUFDS0FKa1FRQkJnQ0FRT0JvZ0FpZ0NhRUVBUVlBZ0VEZ2FJQUlvQW14QkFFR0FJQkE0R2lBQ0tBSndRUUJCZ0NBUU9Cb2dBaWdDZEVFQVFZQWdFRGdhSUFJb0FuaEJBRUdBSUJBNEdpQUNLQUo4UVFCQmdDQVFPQm9nQTBFQU5nSWNDd3NOQUNBQUtBTGtBMEVCTmdJY0M3Y0RBUmgvSUFOQkFFb0VRQ0FBS0FMUUFpRVNJQUFvQXVRRElRVkJBQ0FBS0FKNElnbHJJUk1nQUNnQ2NDSUtRUUZySWhRZ0NXd2hGU0FLUVFGcVFRRjBJUllEUUNBQ0lBMUJBblFpQUdvaUZ5Z0NBRUVBSUFvUU9Cb2dDVUVBU2dSQUlBQWdBV29oR0VFQUlRWURRQ0FZS0FJQUlBWnFJUWNnRnlnQ0FDRUFBbjhnQlNnQ1ZBUkFJQUFnRkdvaEFDQUhJQlZxSVFkQmZ5RU9JQk1oRHlBRklBWkJBblJxS0FKRUlCWnFEQUVMUVFFaERpQUpJUThnQlNBR1FRSjBhaWdDUkFzaEJFRUFJUXNDUUNBS1JRUkFJQVFoQ0VFQUlRd01BUXNnQmtFQ2RDSUlJQVVvQWhCcUtBSUFJUmtnQlNnQ0dDQUlhaWdDQUNFYVFRQWhFQ0FLSVJGQkFDRU1BMEFnQUNBYUlCSWdCeTBBQUNBTElBUWdEa0VCZEdvaUNDNEJBR3BCQ0dwQkJIVnFhaTBBQUNJTGFpMEFBQ0liSUFBdEFBQnFPZ0FBSUFRZ0N5QVpJQnRxTFFBQWF5SUVRUU5zSUF4cU93RUFJQVJCQjJ3aEN5QUVRUVZzSUJCcUlRd2dBQ0FPYWlFQUlBY2dEMm9oQnlBRUlSQWdDQ0VFSUJGQkFXc2lFUTBBQ3dzZ0NDQU1Pd0VBSUFaQkFXb2lCaUFKUncwQUN3c2dCU0FGS0FKVVJUWUNWQ0FOUVFGcUlnMGdBMGNOQUFzTEMvRUNBUTkvSUFOQkFFb0VRQ0FBS0FKNElRWWdBQ2dDNUFNaEJ5QUFLQUp3SWdoQmZuRWhEeUFJUVFGeElSQURRQ0FDSUFwQkFuUWlBR29pRVNnQ0FFRUFJQWdRT0JvZ0J5Z0NNQ0VOSUFaQkFFb0VRQ0FBSUFGcUlSSkJBQ0VKQTBBQ1FDQUlSUTBBSUFjZ0NVRUNkQ0lBYWlnQ05DQU5RUVowYWlFTElBY29BaGdnQUdvb0FnQWhEQ0FTS0FJQUlBbHFJUVFnRVNnQ0FDRUFRUUFoQlVFQUlRNGdDRUVCUndSQUEwQWdBQ0FBTFFBQUlBd2dDeUFGUVFKMGFpZ0NBQ0FFTFFBQWFtb3RBQUJxT2dBQUlBQWdBQzBBQVNBTUlBc2dCVUVCYWtFUGNVRUNkR29vQWdBZ0JDQUdhaUlFTFFBQWFtb3RBQUJxT2dBQklBQkJBbW9oQUNBRlFRSnFRUTl4SVFVZ0JDQUdhaUVFSUE1QkFtb2lEaUFQUncwQUN3c2dFRVVOQUNBQUlBQXRBQUFnRENBTElBVkJBblJxS0FJQUlBUXRBQUJxYWkwQUFHbzZBQUFMSUFsQkFXb2lDU0FHUncwQUN3c2dCeUFOUVFGcVFROXhOZ0l3SUFwQkFXb2lDaUFEUncwQUN3c0xqUUlCRG44Z0EwRUFTZ1JBSUFBb0FuQWhDaUFBS0FMa0F5SUVLQUlZSWdBb0FnZ2hEQ0FBS0FJRUlRMGdBQ2dDQUNFT0lBUW9BakFoQmdOQUlBb0VRQ0FHUVFaMElnQWdCQ2dDUEdvaER5QUVLQUk0SUFCcUlSQWdCQ2dDTkNBQWFpRVJJQUVnQjBFQ2RDSUZhaWdDQUNFQUlBSWdCV29vQWdBaENFRUFJUWtnQ2lFRkEwQWdDQ0FOSUJBZ0NVRUNkQ0lMYWlnQ0FDQUFMUUFCYW1vdEFBQWdEaUFMSUJGcUtBSUFJQUF0QUFCcWFpMEFBR29nRENBTElBOXFLQUlBSUFBdEFBSnFhaTBBQUdvNkFBQWdDRUVCYWlFSUlBQkJBMm9oQUNBSlFRRnFRUTl4SVFrZ0JVRUJheUlGRFFBTEN5QUVJQVpCQVdwQkQzRWlCallDTUNBSFFRRnFJZ2NnQTBjTkFBc0xDK29DQVE5L0lBTkJBRW9FUUNBQUtBSndJUXdnQUNnQzVBTW9BaGdoQmlBQUtBSjRJZ2RCZkhFaEVTQUhRUU54SVEwZ0IwRUJhMEVEU1NFU0EwQWdEQVJBSUFFZ0NFRUNkQ0lBYWlnQ0FDRUpJQUFnQW1vb0FnQWhDaUFNSVE0RFFBSkFJQWRCQUV3RVFFRUFJUVFNQVF0QkFDRVBRUUFoQkVFQUlRVWdDU0VBUVFBaEVDQVNSUVJBQTBBZ0JDQUdJQVZCQW5RaUMyb29BZ0FnQUMwQUFHb3RBQUJxSUFZZ0MwRUVjbW9vQWdBZ0FDMEFBV290QUFCcUlBWWdDMEVJY21vb0FnQWdBQzBBQW1vdEFBQnFJQVlnQzBFTWNtb29BZ0FnQUMwQUEyb3RBQUJxSVFRZ0JVRUVhaUVGSUFCQkJHb2hBQ0FRUVFScUloQWdFVWNOQUFzTElBMEVRQU5BSUFRZ0JpQUZRUUowYWlnQ0FDQUFMUUFBYWkwQUFHb2hCQ0FGUVFGcUlRVWdBRUVCYWlFQUlBOUJBV29pRHlBTlJ3MEFDd3NnQnlBSmFpRUpDeUFLSUFRNkFBQWdDa0VCYWlFS0lBNUJBV3NpRGcwQUN3c2dDRUVCYWlJSUlBTkhEUUFMQ3d1Z0FnRUpmeUFEUVFCS0JFQWdBQ2dDNUFNb0FoZ2lCQ2dDQ0NFSElBUW9BZ1FoQ0NBRUtBSUFJUWtnQUNnQ2NDSUdRUUZySVFzZ0JrRUJjU0VNQTBBQ1FDQUdSUTBBSUFFZ0NrRUNkQ0lFYWlnQ0FDRUFJQUlnQkdvb0FnQWhCU0FNQkg4Z0JTQUhJQUF0QUFKcUxRQUFJQWdnQUMwQUFXb3RBQUFnQ1NBQUxRQUFhaTBBQUdwcU9nQUFJQVZCQVdvaEJTQUFRUU5xSVFBZ0N3VWdCZ3NoQkNBR1FRRkdEUUFEUUNBRklBY2dBQzBBQW1vdEFBQWdDQ0FBTFFBQmFpMEFBQ0FKSUFBdEFBQnFMUUFBYW1vNkFBQWdCU0FISUFBdEFBVnFMUUFBSUFnZ0FDMEFCR290QUFBZ0NTQUFMUUFEYWkwQUFHcHFPZ0FCSUFWQkFtb2hCU0FBUVFacUlRQWdCRUVDYXlJRURRQUxDeUFLUVFGcUlnb2dBMGNOQUFzTEMrVUVBUWgvSUFBZ0FDZ0M1QU1pQWlnQ0VEWUNpQUVnQUNBQ0tBSVVOZ0tFQVFKQUFrQUNRQUpBQWtBZ0FDZ0NXQTREQUFFQ0F3c2dBQ2dDZUVFRFJnUkFJQUpCOHdFMkFnUVBDeUFDUWZRQk5nSUVEd3NnQUNnQ2VDRUJJQUpCQURZQ01DQUNRZlVCUWZZQklBRkJBMFliTmdJRUlBSW9BaHhGQkVBZ0FCQ3JCUXNnQWlnQ05BMENJQUFvQW5naUEwRUFUQTBDSUFBb0F1UURJUVpCQUNFQ0EwQWdCaUFDUVFKMGFpSUlLQUlnSVFSQkFDRUJBa0FDUUNBQ1JRMEFBMEFnQmlBQlFRSjBhaUlGS0FJZ0lBUkhCRUFnQVVFQmFpSUJJQUpIRFFFTUFnc0xJQVVvQWpRaUJRMEJDeUFFUVFsMFFZQUVheUVIUVFBaEJDQUFRUUZCZ0FnZ0FDZ0NCQ2dDQUJFRUFDRUZBMEJCQUNFQkEwQWdCRUVFZENBQmFrR2dzUUpxTEFBQUlnbEIvd0Z4UVlKOGJDRURJQVVnQkVFR2RHb2dBVUVDZEdvQ2Z5QUpRUUJJQkVCQkFFSC9nM3dnQTJzZ0IyMXJEQUVMSUFOQmdmd0RhaUFIYlFzMkFnQWdBVUVCYWlJQlFSQkhEUUFMSUFSQkFXb2lCRUVRUncwQUN5QUFLQUo0SVFNTElBZ2dCVFlDTkNBQ1FRRnFJZ0lnQTBnTkFBc01BZ3NnQWtFQU5nSlVJQUpCOXdFMkFnUUNRQ0FDS0FKRUJFQWdBQ2dDZUNFRERBRUxJQUFvQW5oQkFFd05BaUFBS0FKd1FRRjBRUVJxSVFSQkFDRUJBMEFnQWlBQlFRSjBhaUFBUVFFZ0JDQUFLQUlFS0FJRUVRUUFOZ0pFSUFGQkFXb2lBU0FBS0FKNElnTklEUUFMQ3lBRFFRQk1EUUVnQUNnQ2NFRUJkRUVFYWlFRFFRQWhBUU5BSUFJZ0FVRUNkR29vQWtSQkFDQURFRGdhSUFGQkFXb2lBU0FBS0FKNFNBMEFDd3dCQ3lBQUtBSUFJZ0ZCTVRZQ0ZDQUFJQUVvQWdBUkFRQUxDeG9CQVg4Z0FDZ0NBQ0lCUVM4MkFoUWdBQ0FCS0FJQUVRRUFDOVlCQVFOL0lBQW9BZ1FoQkNBQ1FmR1Q2OXdEVHdSQUlBQW9BZ0JDdUlDQWdEQTNBaFFnQUNBQUtBSUFLQUlBRVFFQUN5QUNRUWdnQWtFSGNTSURhMEVBSUFNYmFpRURJQUZCQWs4RVFDQUFLQUlBSWdJZ0FUWUNHQ0FDUVE4MkFoUWdBQ0FBS0FJQUtBSUFFUUVBQ3lBRFFSQnFJZ1VRTnlJQ1JRUkFJQUFvQWdCQ3VJQ0FnTUFBTndJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQkNBRUtBSk1JQVZxTmdKTUlBUWdBVUVDZEdvaUFDZ0NQQ0VCSUFKQkFEWUNDQ0FDSUFNMkFnUWdBaUFCTmdJQUlBQWdBallDUENBQ1FSQnFDM29CQW44Z0FDZ0NCQ0VHSUFGQkFVY0VRQ0FBS0FJQUlnY2dBVFlDR0NBSFFRODJBaFFnQUNBQUtBSUFLQUlBRVFFQUN5QUFJQUZCZ0FFUTBRSWlBRUVBTmdJb0lBQWdBallDSUNBQUlBVTJBZ3dnQUNBRE5nSUlJQUFnQkRZQ0JDQUFRUUEyQWdBZ0FDQUdLQUpFTmdJc0lBWWdBRFlDUkNBQUMzb0JBbjhnQUNnQ0JDRUdJQUZCQVVjRVFDQUFLQUlBSWdjZ0FUWUNHQ0FIUVE4MkFoUWdBQ0FBS0FJQUtBSUFFUUVBQ3lBQUlBRkJnQUVRMFFJaUFFRUFOZ0lvSUFBZ0FqWUNJQ0FBSUFVMkFnd2dBQ0FETmdJSUlBQWdCRFlDQkNBQVFRQTJBZ0FnQUNBR0tBSklOZ0lzSUFZZ0FEWUNTQ0FBQy9VREFRVi9JQUFvQWdRaUJTZ0NSQ0lCQkVBRFFDQUJLQUlBUlFSQUlBRW9BZ2dpQXlBQktBSUViQ0FFYWlFRUlBTWdBU2dDREd3Z0Ftb2hBZ3NnQVNnQ0xDSUJEUUFMQ3lBRktBSklJZ0VFUUFOQUlBRW9BZ0JGQkVBZ0FTZ0NDQ0lESUFFb0FnUnNRUWQwSUFScUlRUWdBU2dDRENBRGJFRUhkQ0FDYWlFQ0N5QUJLQUlzSWdFTkFBc0xBa0FnQWtFQVRBMEFRWUNVNjl3RElRTWdCU2dDVEJvZ0JDQUVJZ0ZLQkVBZ0FTQUNiU0lCUVFFZ0FVRUJTaHNoQXdzZ0JTZ0NSQ0lCQkVBRFFDQUJLQUlBUlFSQUFrQWdBeUFCS0FJRUlnSkJBV3NnQVNnQ0RDSUVia0VCYWs0RVFDQUJJQUkyQWhBTUFRc2dBU0FESUFSc05nSVFJQUFnQVNnQ0NDQUNiQkNzQlNBQlFRRTJBaWdnQVNnQ0VDRUNDeUFCSUFCQkFTQUJLQUlJSUFJUXJRVTJBZ0FnQlNnQ1VDRUNJQUZCQURZQ0pDQUJRZ0EzQWhnZ0FTQUNOZ0lVQ3lBQktBSXNJZ0VOQUFzTElBVW9Ba2dpQVVVTkFBTkFJQUVvQWdCRkJFQUNRQ0FESUFFb0FnUWlBa0VCYXlBQktBSU1JZ1J1UVFGcVRnUkFJQUVnQWpZQ0VBd0JDeUFCSUFNZ0JHdzJBaEFnQUNBQ0lBRW9BZ2hzUVFkMEVLd0ZJQUZCQVRZQ0tDQUJLQUlRSVFJTElBRWdBRUVCSUFFb0FnZ2dBaEN1QlRZQ0FDQUZLQUpRSVFJZ0FVRUFOZ0lrSUFGQ0FEY0NHQ0FCSUFJMkFoUUxJQUVvQWl3aUFRMEFDd3NMN1FZQkIzOENRQUpBSUFJZ0Eyb2lDQ0FCS0FJRVN3MEFJQUVvQWd3Z0Ewa05BQ0FCS0FJQURRRUxJQUFvQWdBaUEwRVhOZ0lVSUFBZ0F5Z0NBQkVCQUFzQ1FDQUNJQUVvQWhnaUEwOEVRQ0FJSUFFb0FoQWdBMnBORFFFTElBRW9BaWhGQkVBZ0FDZ0NBQ0lEUWNjQU5nSVVJQUFnQXlnQ0FCRUJBQXNnQVNnQ0pBUkFBa0FnQVNnQ0VDSUhRUUJNRFFBZ0FVRXdhaUVKSUFFb0FnZ2lDaUFCS0FJWWJDRUZJQUVvQWhRaEJrRUFJUU1EUUNBR0lBY2dBMnNpQnlBR0lBZElHeUlHSUFFb0Fod2dBU2dDR0NBRGFpSUhheUlMSUFZZ0MwZ2JJZ1lnQVNnQ0JDQUhheUlISUFZZ0IwZ2JJZ1pCQUV3TkFTQUFJQWtnQVNnQ0FDQURRUUowYWlnQ0FDQUZJQVlnQ213aUJpQUJLQUkwRVFZQUlBVWdCbW9oQlNBQktBSVFJZ2NnQVNnQ0ZDSUdJQU5xSWdOS0RRQUxDeUFCUVFBMkFpUUxRUUFoQXlBQklBSWdDQ0FCS0FJUUlnZHJJZ1ZCQUNBRlFRQktHeUFCS0FJWUlBSkpHeUlGTmdJWUlBZEJBRXdOQUNBQlFUQnFJUWtnQVNnQ0NDSUtJQVZzSVFVZ0FTZ0NGQ0VHQTBBZ0JpQUhJQU5ySWdjZ0JpQUhTQnNpQmlBQktBSWNJQUVvQWhnZ0Eyb2lCMnNpQ3lBR0lBdElHeUlHSUFFb0FnUWdCMnNpQnlBR0lBZElHeUlHUVFCTURRRWdBQ0FKSUFFb0FnQWdBMEVDZEdvb0FnQWdCU0FHSUFwc0lnWWdBU2dDTUJFR0FDQUZJQVpxSVFVZ0FTZ0NFQ0lISUFFb0FoUWlCaUFEYWlJRFNnMEFDd3NDUUFKQUFrQWdBU2dDSENJRklBaFBEUUFDUUFKQUFrQWdBaUFGU3dSQUlBSWhCU0FFUlEwQklBQW9BZ0FpQTBFWE5nSVVJQUFnQXlnQ0FCRUJBQXdDQ3lBRURRRUxJQUVvQWlBTkFTQUFLQUlBSWdOQkZ6WUNGQ0FBSUFNb0FnQVJBUUFNQkFzZ0FTQUlOZ0ljSUFFb0FpQkZEUUlMSUFVZ0FTZ0NHQ0lBYXlJRElBZ2dBR3NpQms4TkFDQUJLQUlJSVFBZ0NDQUZRWDl6YWlFSElBZ2dCV3RCQTNFaUNBUkFRUUFoQlFOQUlBRW9BZ0FnQTBFQ2RHb29BZ0JCQUNBQUVEZ2FJQU5CQVdvaEF5QUZRUUZxSWdVZ0NFY05BQXNMSUFkQkEwa05BQU5BSUFOQkFuUWlCU0FCS0FJQWFpZ0NBRUVBSUFBUU9Cb2dCU0FCS0FJQWFpZ0NCRUVBSUFBUU9Cb2dCU0FCS0FJQWFpZ0NDRUVBSUFBUU9Cb2dCU0FCS0FJQWFpZ0NERUVBSUFBUU9Cb2dBMEVFYWlJRElBWkhEUUFMQ3lBRVJRMEJDeUFCUVFFMkFpUUxJQUVvQWdBZ0FpQUJLQUlZYTBFQ2RHb0w5Z1lCQjM4Q1FBSkFJQUlnQTJvaUNDQUJLQUlFU3cwQUlBRW9BZ3dnQTBrTkFDQUJLQUlBRFFFTElBQW9BZ0FpQTBFWE5nSVVJQUFnQXlnQ0FCRUJBQXNDUUNBQ0lBRW9BaGdpQTA4RVFDQUlJQUVvQWhBZ0EycE5EUUVMSUFFb0FpaEZCRUFnQUNnQ0FDSURRY2NBTmdJVUlBQWdBeWdDQUJFQkFBc2dBU2dDSkFSQUFrQWdBU2dDRUNJSFFRQk1EUUFnQVVFd2FpRUpJQUVvQWdoQkIzUWlDaUFCS0FJWWJDRUZJQUVvQWhRaEJrRUFJUU1EUUNBR0lBY2dBMnNpQnlBR0lBZElHeUlHSUFFb0Fod2dBU2dDR0NBRGFpSUhheUlMSUFZZ0MwZ2JJZ1lnQVNnQ0JDQUhheUlISUFZZ0IwZ2JJZ1pCQUV3TkFTQUFJQWtnQVNnQ0FDQURRUUowYWlnQ0FDQUZJQVlnQ213aUJpQUJLQUkwRVFZQUlBVWdCbW9oQlNBQktBSVFJZ2NnQVNnQ0ZDSUdJQU5xSWdOS0RRQUxDeUFCUVFBMkFpUUxRUUFoQXlBQklBSWdDQ0FCS0FJUUlnZHJJZ1ZCQUNBRlFRQktHeUFCS0FJWUlBSkpHeUlGTmdJWUlBZEJBRXdOQUNBQlFUQnFJUWtnQVNnQ0NFRUhkQ0lLSUFWc0lRVWdBU2dDRkNFR0EwQWdCaUFISUFOcklnY2dCaUFIU0JzaUJpQUJLQUljSUFFb0FoZ2dBMm9pQjJzaUN5QUdJQXRJR3lJR0lBRW9BZ1FnQjJzaUJ5QUdJQWRJR3lJR1FRQk1EUUVnQUNBSklBRW9BZ0FnQTBFQ2RHb29BZ0FnQlNBR0lBcHNJZ1lnQVNnQ01CRUdBQ0FGSUFacUlRVWdBU2dDRUNJSElBRW9BaFFpQmlBRGFpSURTZzBBQ3dzQ1FBSkFBa0FnQVNnQ0hDSUZJQWhQRFFBQ1FBSkFBa0FnQWlBRlN3UkFJQUloQlNBRVJRMEJJQUFvQWdBaUEwRVhOZ0lVSUFBZ0F5Z0NBQkVCQUF3Q0N5QUVEUUVMSUFFb0FpQU5BU0FBS0FJQUlnTkJGellDRkNBQUlBTW9BZ0FSQVFBTUJBc2dBU0FJTmdJY0lBRW9BaUJGRFFJTElBVWdBU2dDR0NJQWF5SURJQWdnQUdzaUJrOE5BQ0FCS0FJSVFRZDBJUUFnQ0NBRlFYOXphaUVISUFnZ0JXdEJBM0VpQ0FSQVFRQWhCUU5BSUFFb0FnQWdBMEVDZEdvb0FnQkJBQ0FBRURnYUlBTkJBV29oQXlBRlFRRnFJZ1VnQ0VjTkFBc0xJQWRCQTBrTkFBTkFJQU5CQW5RaUJTQUJLQUlBYWlnQ0FFRUFJQUFRT0JvZ0JTQUJLQUlBYWlnQ0JFRUFJQUFRT0JvZ0JTQUJLQUlBYWlnQ0NFRUFJQUFRT0JvZ0JTQUJLQUlBYWlnQ0RFRUFJQUFRT0JvZ0EwRUVhaUlESUFaSERRQUxDeUFFUlEwQkN5QUJRUUUyQWlRTElBRW9BZ0FnQWlBQktBSVlhMEVDZEdvTEhnQWdBRUVCRU9VRElBQkJBQkRsQXlBQUtBSUVFREVnQUVFQU5nSUVDMmNCQVg4Z0F5Z0NBQ0FFYWlBQUtBTFFBa0dBQTJzaUFDQUJLQUpVSWdFb0FpQWdBaThCRUd3aUJTQUJLQUlBSUFJdkFRQnNRWVFnYWlJQmFrRURka0gvQjNGcUxRQUFPZ0FBSUFNb0FnUWdCR29nQUNBQklBVnJRUU4yUWY4SGNXb3RBQUE2QUFBTDJ3TUJEWDhnQXlnQ0FDQUVhaUlGSUFBb0F0QUNRWUFEYXlJQUlBRW9BbFFpQVNnQ1lDQUNMZ0V3YkNJR0lBRW9BaUFnQWk0QkVHd2lCMnBCMFNKc0lnZ2dCMEgrTUd4cUlnY2dBU2dDUUNBQ0x3RWdiQ0lKSUFFb0FnQWdBaThCQUd3aUNtcEJEWFFpRFdwQmdJQ0NFR29pQ3lBQktBSmtJQUl1QVRKc0lnNGdBU2dDSkNBQ0xnRVNiQ0lNYWtIUkltd2lEeUFNUWY0d2JHb2lEQ0FCS0FKRUlBSXZBU0pzSWhBZ0FTZ0NCQ0FDTHdFQ2JDSUJha0VOZENJQ2FpSVJha0VRZGtIL0IzRnFMUUFBT2dBQUlBVWdBQ0FMSUJGclFSQjJRZjhIY1dvdEFBQTZBQUVnQXlnQ0JDQUVhaUlGSUFBZ0NDQUdRZCtKZjJ4cUlnWWdDaUFKYTBFTmRDSUlha0dBZ0lJUWFpSUpJQThnRGtIZmlYOXNhaUlLSUFFZ0VHdEJEWFFpQVdvaUMycEJFSFpCL3dkeGFpMEFBRG9BQUNBRklBQWdDU0FMYTBFUWRrSC9CM0ZxTFFBQU9nQUJJQU1vQWdnZ0JHb2lCU0FBSUFnZ0JtdEJnSUNDRUdvaUJpQUJJQXBySWdGcVFSQjJRZjhIY1dvdEFBQTZBQUFnQlNBQUlBWWdBV3RCRUhaQi93ZHhhaTBBQURvQUFTQURLQUlNSUFScUlnRWdBQ0FOSUFkclFZQ0FnaEJxSWdNZ0FpQU1heUlDYWtFUWRrSC9CM0ZxTFFBQU9nQUFJQUVnQUNBRElBSnJRUkIyUWY4SGNXb3RBQUE2QUFFTDBnTUJESDhnQUNnQzBBSWhEaUFCS0FKVUlRQWpBRUhRQUdzaUJ5RUJBMEFnQUNnQ1FDRUtJQUl1QVNBaEN5QUJJQUl1QVFBZ0FDZ0NBR3hCRFhSQmdBaHlJZ3dnQUNnQ2dBRWdBaTRCUUd3aURVRytwWDlzYWtFTGRTSVBJQUFvQWlBZ0FpNEJFR3dpQlNBQUtBSmdJQUl1QVRCc0lnWWdBQ2dDb0FFZ0FpNEJVR3dpQ1dwclFRSjBJaEJyTmdJd0lBRWdEeUFRYWpZQ0RDQUJJQW9nQzJ4QnNjNEFiQ0lLSUExQm9TMXNJQXhxSWd0cUlnd2dCU0FKYWtHMkYyd2lEU0FGSUFacVFRMTBhaUlGYTBFTGRUWUNQQ0FCSUFVZ0RHcEJDM1UyQWdBZ0FTQUxJQXBySWdVZ0RTQUpJQVpyUVExMGFpSUdhMEVMZFRZQ0pDQUJJQVVnQm1wQkMzVTJBaGdnQVVFRWFpRUJJQUJCQkdvaEFDQUNRUUpxSVFJZ0NFRUJhaUlJUVFOSERRQUxJQTVCZ0FOcklRQWdCeUVDUVFBaEFRTkFJQU1nQVVFQ2RHb29BZ0FnQkdvaUJ5QUFJQUlvQWdCQkRYUkJnSUNJd0FCcUlnZ2dBaWdDQ0NJRlFhRXRiR29pQmlBQ0tBSUVRYkhPQUd3aUNXcEJFblpCL3dkeGFpMEFBRG9BQUNBSElBQWdCaUFKYTBFU2RrSC9CM0ZxTFFBQU9nQUNJQWNnQUNBRlFiNmwvLzhBYkNBSWFrRVNka0gvQjNGcUxRQUFPZ0FCSUFKQkRHb2hBaUFCUVFGcUlnRkJCa2NOQUFzTHBRWUJFbjhnQUNnQzBBSWhDeUFCS0FKVUlRRWpBRUdBQVdzaUNTRUFRUVFoQndOQUlBQUNmd0pBSUFJdUFSQWlCaUFDTHdFZ0lnVnlRZi8vQTNFTkFFRUFJUVVnQWk4Qk1BMEFJQUl2QVVBTkFDQUNMd0ZRRFFBZ0FpOEJZQTBBSUFJdkFYQU5BQ0FBSUFJdUFRQWdBU2dDQUd4QkFuUWlCVFlDWUNBQUlBVTJBbEFnQUNBRk5nSkFJQUFnQlRZQ01DQUFJQVUyQWlBZ0FDQUZOZ0lRSUFBZ0JUWUNBRUVjREFFTElBQWdBU2dDd0FFZ0FpNEJZR3dpQ2lBQktBSkFJQVZCRUhSQkVIVnNJZ1ZxUWRFaWJDSU1JQVZCL2pCc2FpSVJJQUl1QVVBZ0FTZ0NnQUZzUVExMElnMGdBaTRCQUNBQktBSUFiRUVOZEVHQUNISWlEbW9pRW1vaUR5QUJLQUlnSUFac0lnVWdBU2dDNEFFZ0FpNEJjR3dpQm1wQnMwWnNJaE1nQlVHTDRBQnNhaUFGSUFFb0FxQUJJQUl1QVZCc0lnaHFJaEFnQVNnQ1lDQUNMZ0V3YkNJRklBWnFJaFJxUWFITEFHd2lGU0FRUVlSbmJHb2lFR29pRm10QkMzVTJBbkFnQUNBUElCWnFRUXQxTmdJQUlBQWdEQ0FLUWQrSmYyeHFJZ29nRGlBTmF5SU1haUlOSUJVZ0ZFRzdnbjlzYWlJT0lBVWdDR3BCL2R0K2JDSVBJQVZCMU1RQmJHcHFJZ1ZyUVF0MU5nSmdJQUFnQlNBTmFrRUxkVFlDRUNBQUlBd2dDbXNpQlNBUElBaEJzNE1CYkdvZ0VHb2lDR3RCQzNVMkFsQWdBQ0FGSUFocVFRdDFOZ0lnSUFBZ0V5QUdRWTRUYkdvZ0Rtb2lCU0FTSUJGcklnWnFRUXQxTmdJd0lBWWdCV3RCQzNVaEJVRVFDMEVDZEdvZ0JUWUNBQ0FDUVFKcUlRSWdBVUVFYWlFQklBQkJCR29oQUNBSFFRRkxJUVVnQjBFQmF5RUhJQVVOQUFzZ0MwR0FBMnNoQUNBSklRSkJBQ0VIQTBBZ0F5QUhRUUowYWlnQ0FDQUVhaUlCSUFBZ0FpZ0NEQ0lKSUFJb0FnUWlCV3BCMFNKc0lnb2dCVUgrTUd4cUlnVWdBaWdDQUVHUWdBRnFJZ1lnQWlnQ0NDSUlha0VOZENJTGFrRVNka0gvQjNGcUxRQUFPZ0FBSUFFZ0FDQUxJQVZyUVJKMlFmOEhjV290QUFBNkFBTWdBU0FBSUFvZ0NVSGZpWDlzYWlJSklBWWdDR3RCRFhRaUJXcEJFblpCL3dkeGFpMEFBRG9BQVNBQklBQWdCU0FKYTBFU2RrSC9CM0ZxTFFBQU9nQUNJQUpCRUdvaEFpQUhRUUZxSWdkQkNFY05BQXNMaXdZQkVuOGpBRUhRQVdzaUR5UUFJQUFvQXRBQ0lRMGdBU2dDVkNFQklBOGhBQU5BSUFFb0FzQUJJUWdnQWk0QllDRUdJQUVvQWtBaENTQUNMZ0VnSVE0Z0FDQUNMZ0VBSUFFb0FnQnNRUTEwUVlBSWNpSUZJQUVvQW9BQklBSXVBVUJzSWd0QnZxVi9iR3BCQzNVaUVDQUJLQUlnSUFJdUFSQnNJZ2NnQVNnQ29BRWdBaTRCVUd3aUVTQUJLQUpnSUFJdUFUQnNJaElnQVNnQzRBRWdBaTRCY0d3aUUyc2lER3ByUVFKMEloUnJOZ0tNQVNBQUlCQWdGR28yQWlnZ0FDQUdJQWhzSWdnZ0NTQU9iQ0lHYWtHYU5Xd2lDU0FHUWZFZ2JHb2lCaUFMUVozSkFHd2dCV29pRG1vaUVDQU1RZU1UYkNJVUlCRkJEWFFpRVdvaUZTQVNJQk5xSWhKQjd6eHNJaE1nQjBHejJRQnNhbW9pRm10QkMzVTJBclFCSUFBZ0VDQVdha0VMZFRZQ0FDQUFJQTRnQm1zaUJpQUhRWlFPYkNBVGF5QVZhaUlPYTBFTGRUWUNaQ0FBSUFZZ0RtcEJDM1UyQWxBZ0FDQUxRWVJrYkNBRmFpSUZJQWtnQ0VIYzlINXNhaUlMYXlJSUlCRWdGR3NnREVFTWRHc2lEQ0FIUVl3cGJDQVNRYzhsYkNJR2Eyb2lDV3RCQzNVMkFuZ2dBQ0FJSUFscVFRdDFOZ0k4SUFBZ0JTQUxhaUlGSUFkQjA5QUFiQ0FHSUF4cWF5SUhhMEVMZFRZQ29BRWdBQ0FGSUFkcVFRdDFOZ0lVSUFCQkJHb2hBQ0FCUVFScUlRRWdBa0VDYWlFQ0lBcEJBV29pQ2tFRlJ3MEFDeUFOUVlBRGF5RUJJQThoQUVFQUlRY0RRQ0FESUFkQkFuUnFLQUlBSUFScUlnSWdBU0FBS0FJTUlnb2dBQ2dDQkNJRmFrR2FOV3dpQ3lBRlFmRWdiR29pQlNBQUtBSUFRUTEwUVlDQWlNQUFhaUlNSUFBb0FnZ2lEU0FBS0FJUUlnaHJJZ1pCMEJac2FpSUpJQWdnRFdwQnpESnNJZzFxSWdocVFSSjJRZjhIY1dvdEFBQTZBQUFnQWlBQklBZ2dCV3RCRW5aQi93ZHhhaTBBQURvQUJDQUNJQUVnQ3lBS1FkejBmbXhxSWdvZ0NTQU5heUlGYWtFU2RrSC9CM0ZxTFFBQU9nQUJJQUlnQVNBRklBcHJRUkoyUWY4SGNXb3RBQUE2QUFNZ0FpQUJJQVpCd0tYLy93QnNJQXhxUVJKMlFmOEhjV290QUFBNkFBSWdBRUVVYWlFQUlBZEJBV29pQjBFS1J3MEFDeUFQUWRBQmFpUUFDKzBHQVJKL0l3QkJvQUpySWhJa0FDQUFLQUxRQWlFVElBRW9BbFFoQVNBU0lRQURRQ0FCS0FLQUFTRU5JQUl1QVVBaENpQUFJQUVvQWtBZ0FpNEJJR3dpQ0NBQktBTEFBU0FDTGdGZ2JDSVBhMEVOZENJTElBSXVBUUFnQVNnQ0FHeEJEWFJCZ0FoeUlnWnFJZ3dnQVNnQ0lDQUNMZ0VRYkNJRklBRW9BdUFCSUFJdUFYQnNJZ2RySWhBZ0FTZ0NZQ0FDTGdFd2JDSU9JQUVvQXFBQklBSXVBVkJzSWdsckloUnFRZEVpYkNJVklCQkIvakJzYWlJUWEwRUxkVFlDOEFFZ0FDQU1JQkJxUVF0MU5nSVlJQUFnQmlBTGF5SUxJQlVnRkVIZmlYOXNhaUlNYTBFTGRUWUNxQUVnQUNBTElBeHFRUXQxTmdKZ0lBQWdDaUFOYkVHeHpnQnNJZ29nQm1vaUN5QVBRUTEwSWc4Z0NFRzIxd0JzYWlJTWF5SVFJQWNnQlNBSmFpSVVha0dOTjJ3aURTQU9RYTlkYkNJVklBVkIzRlJzYWlBSFFZeUJmMnhxYWlJV2EwRUxkVFlDa0FFZ0FDQVFJQlpxUVF0MU5nSjRJQUFnQ3lBTWFpSUxJQTBnRkVIYkVHeHFJZ3dnRGtIUDB3QnNJZzRnQlVIM0VXeHFhaUlGYTBFTGRUWUNpQUlnQUNBRklBdHFRUXQxTmdJQUlBQWdDRUcyRjJ3Z0Qyc2lCU0FHSUFwcklnWnFJZ2dnQnlBSmFrR0x2WDlzSWdvZ0NVR3dvWDlzSUJWcWFpQU1haUlKYTBFTGRUWUMyQUVnQUNBSUlBbHFRUXQxTmdJd0lBQWdCaUFGYXlJR0lBZEJ4dVVBYkNBT2F5QU5haUFLYWlJSGEwRUxkVFlDd0FFZ0FDQUdJQWRxUVF0MU5nSklJQUJCQkdvaEFDQUJRUVJxSVFFZ0FrRUNhaUVDSUJGQkFXb2lFVUVHUncwQUN5QVRRWUFEYXlFQklCSWhBRUVBSVFjRFFDQURJQWRCQW5ScUtBSUFJQVJxSWdJZ0FTQUFLQUlVSWdZZ0FDZ0NCQ0lGYWtHMkYyd2lFU0FBS0FJTUlna2dCV3BCRFhScUlnZ2dBQ2dDQUVFTmRFR0FnSWpBQUdvaURpQUFLQUlRSWcxQm9TMXNhaUlUSUFBb0FnaEJzYzRBYkNJS2FpSVBha0VTZGtIL0IzRnFMUUFBT2dBQUlBSWdBU0FQSUFoclFSSjJRZjhIY1dvdEFBQTZBQVVnQWlBQklBVWdCaUFKYW10QkRYUWlCU0FOUWI2bGYyd2dEbW9pQ0dwQkVuWkIvd2R4YWkwQUFEb0FBU0FDSUFFZ0NDQUZhMEVTZGtIL0IzRnFMUUFBT2dBRUlBSWdBU0FSSUFZZ0NXdEJEWFJxSWdZZ0V5QUtheUlGYWtFU2RrSC9CM0ZxTFFBQU9nQUNJQUlnQVNBRklBWnJRUkoyUWY4SGNXb3RBQUE2QUFNZ0FFRVlhaUVBSUFkQkFXb2lCMEVNUncwQUN5QVNRYUFDYWlRQUM2TUlBUlYvSXdCQmtBTnJJaE1rQUNBQUtBTFFBaUVVSUFFb0FsUWhBU0FUSVFBRFFDQUJLQUxBQVNFTklBSXVBV0FoQ0NBQktBSkFJUWtnQWk0QklDRU1JQUFnQWk0QkFDQUJLQUlBYkVFTmRFR0FDSElpQ2lBQktBS0FBU0FDTGdGQWJDSUxRYjZsZjJ4cVFRdDFJZzRnQVNnQzRBRWdBaTRCY0d3aUR5QUJLQUlnSUFJdUFSQnNJZ2NnQVNnQ1lDQUNMZ0V3YkNJRmF5SVJJQUVvQXFBQklBSXVBVkJzSWdacmFrRUNkQ0lTYXpZQ21BSWdBQ0FPSUJKcU5nSlVJQUFnQ0NBTmJDSUlJQWtnREd3aUNXcEI0c1lBYkNJTUlBaEIvSkYvYkdvaURpQUxRWklVYkNBS2FpSVNhaUlWSUFVZ0JtcEI3M1ZzSUE5QkRYUWlEV3NpRHlBRklBZHFRYmZWQUd3aUZ5QUZRZTVrYkdwcUloWnJRUXQxTmdMUUFpQUFJQlVnRm1wQkMzVTJBaHdnQUNBSVFlR25mMndnQ1VHakoyeHFJZ2dnQzBISlIyd2dDbW9pRldvaUZpQVBJQVlnQjJvaUQwSFN6QUJzSWhnZ0JrR0o2SDVzYW1vaUdXdEJDM1UyQXJRQ0lBQWdGaUFaYWtFTGRUWUNPQ0FBSUJJZ0Rtc2lEaUFSUWZJZGJDQU5heUlSSUFZZ0JXdEIrTmtBYkNJU0lBVkJtU3RzYW1vaUJXdEJDM1UyQXVBQklBQWdCU0FPYWtFTGRUWUNqQUVnQUNBTFFjYlJBR3dnQ21vaUJTQU1JQWxCdlJGc2FpSUtheUlMSUE5QmxEQnNJZ2tnQjBHTHZIOXNhaUFSYWlJTWEwRUxkVFlDeEFFZ0FDQUxJQXhxUVF0MU5nS29BU0FBSUFVZ0Ntb2lCU0FYSUFkQjhMZC9iR29nR0dvZ0RXb2lCMnRCQzNVMkF1d0NJQUFnQlNBSGFrRUxkVFlDQUNBQUlCVWdDR3NpQlNBU0lBWkI1cE4vYkdvZ0NXb2dEV29pQm10QkMzVTJBdndCSUFBZ0JTQUdha0VMZFRZQ2NDQUFRUVJxSVFBZ0FVRUVhaUVCSUFKQkFtb2hBaUFRUVFGcUloQkJCMGNOQUFzZ0ZFR0FBMnNoQVNBVElRQkJBQ0VGQTBBZ0F5QUZRUUowYWlnQ0FDQUVhaUlDSUFFZ0FDZ0NEQ0lISUFBb0FnUWlCbXBCN3p0c0lnZ2dCaUFIYTBIekNtd2lDV3NnQUNnQ0ZDSUtJQVpxUWFNbmJDSVVhaUlNSUFBb0FoQWlCaUFBS0FJWUlndHJRYmM0YkNJT0lBdEJnM3RzYWlBQUtBSUFRUTEwUVlDQWlNQUFhaUlOSUFzZ0FDZ0NDQ0lRYWlJTFFjYlJBR3hxSWc5cUloRnFRUkoyUWY4SGNXb3RBQUE2QUFBZ0FpQUJJQkVnREd0QkVuWkIvd2R4YWkwQUFEb0FCaUFDSUFFZ0J5QUtha0hocDM5c0lnY2dDQ0FKYW1vaUNDQVFJQVpyUVpJVWJDSUpJQVpCbFlwL2JDQU5hbW9nRG1vaURHcEJFblpCL3dkeGFpMEFBRG9BQVNBQ0lBRWdEQ0FJYTBFU2RrSC9CM0ZxTFFBQU9nQUZJQUlnQVNBVUlBcEIzdmNBYkdvZ0Iyb2lCeUFKSUJCQjhlRitiR29nRDJvaUNtcEJFblpCL3dkeGFpMEFBRG9BQWlBQ0lBRWdDaUFIYTBFU2RrSC9CM0ZxTFFBQU9nQUVJQUlnQVNBR0lBdHJRY0hhQUd3Z0RXcEJFblpCL3dkeGFpMEFBRG9BQXlBQVFSeHFJUUFnQlVFQmFpSUZRUTVIRFFBTElCTkJrQU5xSkFBTHdBa0JHbjhqQUVHQUJHc2lGQ1FBSUFBb0F0QUNJUkFnQVNnQ1ZDRUJJQlFoQUFOQUlBQWdBU2dDUUNBQ0xnRWdiQ0lNSUFFb0FzQUJJQUl1QVdCc0lnMXJJZ2xCNDlnQWJDSU9JQTFCZzZRQmJHb2lFU0FCS0FLQUFTQUNMZ0ZBYkNJS1FjL1RBR3dpRlNBQ0xnRUFJQUVvQWdCc1FRMTBRWUFJY2lJTGFpSVdhaUlTSUFFb0FtQWdBaTRCTUd3aUNDQUJLQUlnSUFJdUFSQnNJZ1ZxUWM3V0FHd2lFeUFGUWRidGZteHFJQUVvQXFBQklBSXVBVkJzSWdjZ0JXb2lHVUhwendCc0loZHFJQUVvQXVBQklBSXVBWEJzSWdZZ0JXcEIvTVVBYkNJYWFpSVlhMEVMZFRZQzRBTWdBQ0FTSUJocVFRdDFOZ0lBSUFBZ0NVSFVFV3dpQ1NBTVFjMDViR29pRWlBS1FkRWliQ0lLSUF0cUloaHFJaHNnQmlBSWFpSWNRYXRWYkNJZElBY2dDR3BCOEFoc0loNGdFeUFJUWMwRWJHcHFhaUlUYTBFTGRUWUN3QU1nQUNBVElCdHFRUXQxTmdJZ0lBQWdEaUFNUWNKWmJHb2lEQ0FMSUFwcklnNXFJZ29nQmlBSGFrR3lxWDlzSWhNZ0hpQUhRZnEzZjJ4cUlCZHFhaUlYYTBFTGRUWUNvQU1nQUNBS0lCZHFRUXQxTmdKQUlBQWdDU0FOUWJCZmJHb2lEU0FMSUJWcklndHFJZ2tnSFNBR1FaakVBR3hxSUJwcUlCTnFJZ3ByUVF0MU5nS0FBeUFBSUFrZ0NtcEJDM1UyQW1BZ0FDQUxJQTFySWdzZ0JpQUhhMEdqR213aURTQUZJQVpyUWJZNWJDSUpJQnhCbDdCL2JDSUtJQVpCaGNrQmJHcHFhaUlHYTBFTGRUWUM0QUlnQUNBR0lBdHFRUXQxTmdLQUFTQUFJQTRnREdzaUJpQVpRZFVxYkNJTElBY2dDR3RCaWRvQWJDSU1JQWRCK2s1c2Ftb2dEV29pQjJ0QkMzVTJBc0FDSUFBZ0JpQUhha0VMZFRZQ29BRWdBQ0FZSUJKcklnY2dCU0FJYTBHakdtd2lCaUFJUVpyK0FHeHFJQXhxSUFwcUlnaHJRUXQxTmdLZ0FpQUFJQWNnQ0dwQkMzVTJBc0FCSUFBZ0ZpQVJheUlJSUFZZ0JVSENpbjlzYWlBTGFpQUphaUlGYTBFTGRUWUNnQUlnQUNBRklBaHFRUXQxTmdMZ0FTQUFRUVJxSVFBZ0FVRUVhaUVCSUFKQkFtb2hBaUFQUVFGcUlnOUJDRWNOQUFzZ0VFR0FBMnNoQVNBVUlRQkJBQ0VJQTBBZ0F5QUlRUUowYWlnQ0FDQUVhaUlDSUFFZ0FDZ0NCQ0lGSUFBb0Fod2lCMnBCczBac0lnc2dCVUdMNEFCc2FpQUZJQUFvQWhRaUJtb2lEeUFBS0FJTUlnVWdCMm9pREdwQm9jc0FiQ0lOSUE5QmhHZHNhaUlQYWlJUUlBQW9BaGdpQ1NBQUtBSUlJZzVxUWRFaWJDSVJJQTVCL2pCc2FpSU9JQUFvQWdCQmtJQUJhaUlLSUFBb0FoQWlGV3BCRFhRaUZtb2lFbXBCRW5aQi93ZHhhaTBBQURvQUFDQUNJQUVnRWlBUWEwRVNka0gvQjNGcUxRQUFPZ0FISUFJZ0FTQU5JQXhCdTRKL2JHb2lEQ0FGSUFacVFmM2JmbXdpRFNBRlFkVEVBV3hxYWlJRklCRWdDVUhmaVg5c2FpSVFJQW9nRld0QkRYUWlDV29pRVdwQkVuWkIvd2R4YWkwQUFEb0FBU0FDSUFFZ0VTQUZhMEVTZGtIL0IzRnFMUUFBT2dBR0lBSWdBU0FOSUFaQnM0TUJiR29nRDJvaUJTQUpJQkJySWdacVFSSjJRZjhIY1dvdEFBQTZBQUlnQWlBQklBWWdCV3RCRW5aQi93ZHhhaTBBQURvQUJTQUNJQUVnQ3lBSFFZNFRiR29nREdvaUJTQVdJQTVySWdkcVFSSjJRZjhIY1dvdEFBQTZBQU1nQWlBQklBY2dCV3RCRW5aQi93ZHhhaTBBQURvQUJDQUFRU0JxSVFBZ0NFRUJhaUlJUVJCSERRQUxJQlJCZ0FScUpBQUxZUUFnQXlnQ0FDQUVhaUlESUFBb0F0QUNRWUFEYXlJQUlBRW9BbFFpQVNnQ0JDQUNMd0VDYkNJRUlBRW9BZ0FnQWk4QkFHeEJoQ0JxSWdGcVFRTjJRZjhIY1dvdEFBQTZBQUFnQXlBQUlBRWdCR3RCQTNaQi93ZHhhaTBBQURvQUFRdTdBd0VOZnlBREtBSUFJQVJxSWdVZ0FDZ0MwQUpCZ0FOcklnQWdBU2dDVkNJQktBSXNJQUl1QVJac0lnWWdBU2dDRENBQ0xnRUdiQ0lIYWlJSUlBRW9BaVFnQWk0QkVtd2lDaUFCS0FJRUlBSXVBUUpzSWd0cUlnbHFRZEVpYkNJTUlBbEIvakJzYWlJSklBRW9BaUFnQWk4QkVHd2lEU0FCS0FJQUlBSXZBUUJzSWc1cVFZUWdhaUlQSUFFb0FpZ2dBaThCRkd3aUVDQUJLQUlJSUFJdkFRUnNJZ0pxSWdGcVFRMTBJaEZxUVJCMlFmOEhjV290QUFBNkFBQWdCU0FBSUJFZ0NXdEJFSFpCL3dkeGFpMEFBRG9BQXlBRklBQWdEQ0FJUWQrSmYyeHFJZ2dnRHlBQmEwRU5kQ0lCYWtFUWRrSC9CM0ZxTFFBQU9nQUJJQVVnQUNBQklBaHJRUkIyUWY4SGNXb3RBQUE2QUFJZ0F5Z0NCQ0FFYWlJQklBQWdCeUFHYXlJRElBc2dDbXNpQkdwQjBTSnNJZ1VnQkVIK01HeHFJZ1FnRGlBTmEwR0VJR29pQmlBQ0lCQnJJZ0pxUVExMElnZHFRUkIyUWY4SGNXb3RBQUE2QUFBZ0FTQUFJQWNnQkd0QkVIWkIvd2R4YWkwQUFEb0FBeUFCSUFBZ0JTQURRZCtKZjJ4cUlnTWdCaUFDYTBFTmRDSUNha0VRZGtIL0IzRnFMUUFBT2dBQklBRWdBQ0FDSUFOclFSQjJRZjhIY1dvdEFBQTZBQUlMeFFjQkMzOGdBQ2dDMEFJaENTQUNMZ0VRSVFVZ0FTZ0NWQ0lCS0FJZ0lRY2pBRUhRQUdzaUFDQUNMZ0VBSUFFb0FnQnNRUTEwUVlBSWNpSUdJQUVvQWtBZ0FpNEJJR3dpQ0VHK3BYOXNha0VMZFRZQ0dDQUFJQWhCb1Mxc0lBWnFJZ1lnQlNBSGJFR3h6Z0JzSWdWclFRdDFOZ0l3SUFBZ0JTQUdha0VMZFRZQ0FDQUJLQUlrSVFVZ0FpNEJFaUVISUFBZ0FpNEJBaUFCS0FJRWJFRU5kRUdBQ0hJaUJpQUJLQUpFSUFJdUFTSnNJZ2hCdnFWL2JHcEJDM1UyQWh3Z0FDQUlRYUV0YkNBR2FpSUdJQVVnQjJ4QnNjNEFiQ0lGYTBFTGRUWUNOQ0FBSUFVZ0JtcEJDM1UyQWdRZ0FTZ0NLQ0VGSUFJdUFSUWhCeUFBSUFJdUFRUWdBU2dDQ0d4QkRYUkJnQWh5SWdZZ0FTZ0NTQ0FDTGdFa2JDSUlRYjZsZjJ4cVFRdDFOZ0lnSUFBZ0NFR2hMV3dnQm1vaUJpQUZJQWRzUWJIT0FHd2lCV3RCQzNVMkFqZ2dBQ0FGSUFacVFRdDFOZ0lJSUFFb0Fpd2hCU0FDTGdFV0lRY2dBQ0FDTGdFR0lBRW9BZ3hzUVExMFFZQUljaUlHSUFFb0Frd2dBaTRCSm13aUNFRytwWDlzYWtFTGRUWUNKQ0FBSUFoQm9TMXNJQVpxSWdZZ0JTQUhiRUd4emdCc0lnVnJRUXQxTmdJOElBQWdCU0FHYWtFTGRUWUNEQ0FCS0FJd0lRVWdBaTRCR0NFSElBQWdBaTRCQ0NBQktBSVFiRUVOZEVHQUNISWlCaUFCS0FKUUlBSXVBU2hzSWdoQnZxVi9iR3BCQzNVMkFpZ2dBQ0FJUWFFdGJDQUdhaUlHSUFVZ0IyeEJzYzRBYkNJRmEwRUxkVFlDUUNBQUlBVWdCbXBCQzNVMkFoQWdBU2dDTkNFRklBSXVBUm9oQnlBQUlBSXVBUW9nQVNnQ0ZHeEJEWFJCZ0FoeUlnWWdBU2dDVkNBQ0xnRXFiQ0lCUWI2bGYyeHFRUXQxTmdJc0lBQWdBVUdoTFd3Z0Jtb2lBU0FGSUFkc1FiSE9BR3dpQW10QkMzVTJBa1FnQUNBQklBSnFRUXQxTmdJVUlBbEJnQU5ySVFFZ0FDRUNRUUFoQ1FOQUlBTWdDVUVDZEdvb0FnQWdCR29pQUNBQklBSW9BaFFpQlNBQ0tBSUVJZ2RxUWJZWGJDSUlJQUlvQWd3aUJpQUhha0VOZEdvaUNpQUNLQUlBUVExMFFZQ0FpTUFBYWlJTElBSW9BaEFpREVHaExXeHFJZzBnQWlnQ0NFR3h6Z0JzSWc1cUlnOXFRUkoyUWY4SGNXb3RBQUE2QUFBZ0FDQUJJQThnQ210QkVuWkIvd2R4YWkwQUFEb0FCU0FBSUFFZ0J5QUZJQVpxYTBFTmRDSUhJQXhCdnFWL2JDQUxhaUlLYWtFU2RrSC9CM0ZxTFFBQU9nQUJJQUFnQVNBS0lBZHJRUkoyUWY4SGNXb3RBQUE2QUFRZ0FDQUJJQWdnQlNBR2EwRU5kR29pQlNBTklBNXJJZ2RxUVJKMlFmOEhjV290QUFBNkFBSWdBQ0FCSUFjZ0JXdEJFblpCL3dkeGFpMEFBRG9BQXlBQ1FSaHFJUUlnQ1VFQmFpSUpRUU5IRFFBTEM1RUZBUkIvSUFBb0F0QUNJUWdnQVNnQ1ZDRUFJd0JCZ0FGcklnVWhBUU5BSUFFZ0FDZ0NRQ0FDTGdFZ2JDSUdJQUFvQWdBZ0FpNEJBR3dpQ21wQkFuUWlDeUFBS0FKZ0lBSXVBVEJzSWd3Z0FDZ0NJQ0FDTGdFUWJDSUhha0hSSW14QmdBaHFJZzBnQjBIK01HeHFRUXQxSWdkck5nSmdJQUVnQnlBTGFqWUNBQ0FCSUFvZ0JtdEJBblFpQmlBTklBeEIzNGwvYkdwQkMzVWlDbXMyQWtBZ0FTQUdJQXBxTmdJZ0lBRkJCR29oQVNBQVFRUnFJUUFnQWtFQ2FpRUNJQWxCQVdvaUNVRUlSdzBBQ3lBSVFZQURheUVBSUFVaEFrRUFJUWtEUUNBRElBbEJBblJxS0FJQUlBUnFJZ0VnQUNBQ0tBSUVJZ1VnQWlnQ0hDSUlha0d6Um13aUNpQUZRWXZnQUd4cUlBVWdBaWdDRkNJR2FpSUxJQUlvQWd3aUJTQUlhaUlNYWtHaHl3QnNJZ2NnQzBHRVoyeHFJZ3RxSWcwZ0FpZ0NHQ0lPSUFJb0FnZ2lEMnBCMFNKc0loQWdEMEgrTUd4cUlnOGdBaWdDQUVHUWdBRnFJaEVnQWlnQ0VDSVNha0VOZENJVGFpSVVha0VTZGtIL0IzRnFMUUFBT2dBQUlBRWdBQ0FVSUExclFSSjJRZjhIY1dvdEFBQTZBQWNnQVNBQUlBY2dERUc3Z245c2FpSU1JQVVnQm1wQi9kdCtiQ0lISUFWQjFNUUJiR3BxSWdVZ0VDQU9RZCtKZjJ4cUlnMGdFU0FTYTBFTmRDSU9haUlRYWtFU2RrSC9CM0ZxTFFBQU9nQUJJQUVnQUNBUUlBVnJRUkoyUWY4SGNXb3RBQUE2QUFZZ0FTQUFJQWNnQmtHemd3RnNhaUFMYWlJRklBNGdEV3NpQm1wQkVuWkIvd2R4YWkwQUFEb0FBaUFCSUFBZ0JpQUZhMEVTZGtIL0IzRnFMUUFBT2dBRklBRWdBQ0FLSUFoQmpoTnNhaUFNYWlJRklCTWdEMnNpQ0dwQkVuWkIvd2R4YWkwQUFEb0FBeUFCSUFBZ0NDQUZhMEVTZGtIL0IzRnFMUUFBT2dBRUlBSkJJR29oQWlBSlFRRnFJZ2xCQkVjTkFBc0xwd1lCRW44akFFR2dBV3NpRHlRQUlBQW9BdEFDSVFvZ0FTZ0NWQ0VBSUE4aEFRTkFJQUFvQW1BaEJpQUNMZ0V3SVFVZ0FDZ0NJQ0VKSUFJdUFSQWhDeUFCSUFJdUFRQWdBQ2dDQUd4QkRYUkJnQWh5SWd3Z0FDZ0NRQ0FDTGdFZ2JDSUlJQUFvQW9BQklBSXVBVUJzSWcxcklnNUJ3S1YvYkdwQkMzVTJBa0FnQVNBT1FkQVdiQ0FNYWlJTUlBZ2dEV3BCekRKc0lnaHFJZzBnQlNBR2JDSUdJQWtnQzJ3aUJXcEJtalZzSWdrZ0JVSHhJR3hxSWdWclFRdDFOZ0tBQVNBQklBVWdEV3BCQzNVMkFnQWdBU0FNSUFocklnVWdDU0FHUWR6MGZteHFJZ1pyUVF0MU5nSmdJQUVnQlNBR2FrRUxkVFlDSUNBQlFRUnFJUUVnQUVFRWFpRUFJQUpCQW1vaEFpQUhRUUZxSWdkQkNFY05BQXNnQ2tHQUEyc2hBU0FQSVFCQkFDRUtBMEFnQXlBS1FRSjBhaWdDQUNBRWFpSUNJQUVnQUNnQ0hDSUdJQUFvQWd3aUJXb2lDMEh2UEd3aURDQUFLQUlFSWdkQnM5a0FiR29nQlNBR2F5SUdRZU1UYkNJSUlBQW9BaFFpRFVFTmRDSU9haUlUYWlJUUlBQW9BaGdpRVNBQUtBSUlJZ1ZxUVpvMWJDSVNJQVZCOFNCc2FpSVVJQUFvQWdCQkRYUkJnSUNJd0FCcUlnVWdBQ2dDRUNJSlFaM0pBR3hxSWhWcUloWnFRUkoyUWY4SGNXb3RBQUE2QUFBZ0FpQUJJQllnRUd0QkVuWkIvd2R4YWkwQUFEb0FDU0FDSUFFZ0IwSFQwQUJzSUF0Qnp5VnNJZ3NnRGlBSWF5QUdRUXgwYXlJSWFtc2lEaUFTSUJGQjNQUitiR29pRUNBSlFZUmtiQ0FGYWlJUmFpSVNha0VTZGtIL0IzRnFMUUFBT2dBQklBSWdBU0FTSUE1clFSSjJRZjhIY1dvdEFBQTZBQWdnQWlBQklBY2dCaUFOYW10QkRYUWlCaUFKUWI2bGYyd2dCV29pQldwQkVuWkIvd2R4YWkwQUFEb0FBaUFDSUFFZ0JTQUdhMEVTZGtIL0IzRnFMUUFBT2dBSElBSWdBU0FJSUFkQmpDbHNJQXRyYWlJR0lCRWdFR3NpQldwQkVuWkIvd2R4YWkwQUFEb0FBeUFDSUFFZ0JTQUdhMEVTZGtIL0IzRnFMUUFBT2dBR0lBSWdBU0FIUVpRT2JDQU1heUFUYWlJSElCVWdGR3NpQm1wQkVuWkIvd2R4YWkwQUFEb0FCQ0FDSUFFZ0JpQUhhMEVTZGtIL0IzRnFMUUFBT2dBRklBQkJJR29oQUNBS1FRRnFJZ3BCQlVjTkFBc2dEMEdnQVdva0FBdVVCd0VVZnlNQVFjQUJheUlRSkFBZ0FDZ0MwQUloQ1NBQktBSlVJUUFnRUNFQkEwQWdBQ2dDUUNFTUlBSXVBU0FoRFNBQklBSXVBUUFnQUNnQ0FHeEJEWFJCZ0FoeUlnWWdBQ2dDZ0FFZ0FpNEJRR3dpRGtHK3BYOXNha0VMZFNJUElBQW9BaUFnQWk0QkVHd2lCeUFBS0FKZ0lBSXVBVEJzSWdnZ0FDZ0NvQUVnQWk0QlVHd2lCV3ByUVFKMElndHJOZ0tBQVNBQklBc2dEMm8yQWlBZ0FTQU1JQTFzUWJIT0FHd2lEQ0FPUWFFdGJDQUdhaUlOYWlJR0lBVWdCMnBCdGhkc0lnNGdCeUFJYWtFTmRHb2lCMnRCQzNVMkFxQUJJQUVnQmlBSGFrRUxkVFlDQUNBQklBMGdER3NpQnlBT0lBVWdDR3RCRFhScUlnaHJRUXQxTmdKZ0lBRWdCeUFJYWtFTGRUWUNRQ0FCUVFScUlRRWdBRUVFYWlFQUlBSkJBbW9oQWlBS1FRRnFJZ3BCQ0VjTkFBc2dDVUdBQTJzaEFDQVFJUUZCQUNFSEEwQWdBeUFIUVFKMGFpZ0NBQ0FFYWlJQ0lBQWdBU2dDRENJTVFjL1RBR3dpRGlBQktBSUVJZ2hCOXhGc2FpQUJLQUlVSWdVZ0NHb2lDU0FCS0FJY0lncHFRWTAzYkNJTklBbEIyeEJzYWlJUGFpSUxJQUVvQWhnaUVVRU5kQ0lTSUFFb0FnZ2lCa0cyMXdCc2FpSVVJQUVvQWdCQkRYUkJnSUNJd0FCcUlna2dBU2dDRUVHeHpnQnNJaFZxSWhacUloTnFRUkoyUWY4SGNXb3RBQUE2QUFBZ0FpQUFJQk1nQzJ0QkVuWkIvd2R4YWkwQUFEb0FDeUFDSUFBZ0NDQUtheUlMSUF3Z0JXc2lFMnBCMFNKc0loY2dDMEgrTUd4cUlnc2dCaUFSYTBFTmRDSVJJQWxxSWhocVFSSjJRZjhIY1dvdEFBQTZBQUVnQWlBQUlCZ2dDMnRCRW5aQi93ZHhhaTBBQURvQUNpQUNJQUFnRHlBRklBcHFRWXU5ZjJ3aUR5QU1RYTlkYkNJTUlBVkJzS0YvYkdwcWFpSUZJQVpCdGhkc0lCSnJJZ1lnQ1NBVmF5SUxhaUlTYWtFU2RrSC9CM0ZxTFFBQU9nQUNJQUlnQUNBU0lBVnJRUkoyUWY4SGNXb3RBQUE2QUFrZ0FpQUFJQXBCeHVVQWJDQU9heUFOYWlBUGFpSUZJQXNnQm1zaUJtcEJFblpCL3dkeGFpMEFBRG9BQXlBQ0lBQWdCaUFGYTBFU2RrSC9CM0ZxTFFBQU9nQUlJQUlnQUNBWElCTkIzNGwvYkdvaUJTQUpJQkZySWdscVFSSjJRZjhIY1dvdEFBQTZBQVFnQWlBQUlBa2dCV3RCRW5aQi93ZHhhaTBBQURvQUJ5QUNJQUFnRENBSVFkeFViR29nQ2tHTWdYOXNhaUFOYWlJS0lCWWdGR3NpQ0dwQkVuWkIvd2R4YWkwQUFEb0FCU0FDSUFBZ0NDQUthMEVTZGtIL0IzRnFMUUFBT2dBR0lBRkJJR29oQVNBSFFRRnFJZ2RCQmtjTkFBc2dFRUhBQVdva0FBdm5DQUVVZnlNQVFlQUJheUlUSkFBZ0FDZ0MwQUloRENBQktBSlVJUUFnRXlFQkEwQWdBQ2dDb0FFaEJ5QUNMZ0ZRSVFrZ0FDZ0NJQ0VOSUFJdUFSQWhEaUFBS0FKZ0lRZ2dBaTRCTUNFVUlBRWdBaTRCQUNBQUtBSUFiRUVOZEVHQUNISWlCU0FBS0FLQUFTQUNMZ0ZBYkNJR0lBQW9Bc0FCSUFJdUFXQnNJZ29nQUNnQ1FDQUNMZ0VnYkNJTGFpSVBhMEhCMmdCc2FrRUxkVFlDWUNBQklBOUJ4dEVBYkNBRmFpSVBJQVlnQ210QnR6aHNJaEVnQ2tHRGUyeHFhaUlTSUFjZ0NXd2lDaUFOSUE1c0lnZHFRYU1uYkNJTklBZ2dGR3dpQ1NBSGFrSHZPMndpRGlBSElBbHJRZk1LYkNJSGEyb2lDR3RCQzNVMkFzQUJJQUVnQ0NBU2FrRUxkVFlDQUNBQklBc2dCbXRCa2hSc0lnZ2dDMEh4NFg1c2FpQVBhaUlMSUFrZ0NtcEI0YWQvYkNJSklBMGdDa0hlOXdCc2Ftb2lDbXRCQzNVMkFvQUJJQUVnQ2lBTGFrRUxkVFlDUUNBQklBWkJsWXAvYkNBRmFpQUlhaUFSYWlJR0lBY2dEbW9nQ1dvaUJXdEJDM1UyQXFBQklBRWdCU0FHYWtFTGRUWUNJQ0FCUVFScUlRRWdBRUVFYWlFQUlBSkJBbW9oQWlBUVFRRnFJaEJCQ0VjTkFBc2dERUdBQTJzaEFDQVRJUUZCQUNFUUEwQWdBeUFRUVFKMGFpZ0NBQ0FFYWlJQ0lBQWdBU2dDSENJT1FRMTBJZ3NnQVNnQ0RDSUdJQUVvQWdRaUNtcEJ0OVVBYkNJSUlBcEI4TGQvYkdvZ0FTZ0NGQ0lGSUFwcUloUkIwc3dBYkNJUGFtb2lFU0FCS0FJWUlnd2dBU2dDQ0NJTmFrSGl4Z0JzSWhJZ0RVRzlFV3hxSWhZZ0FTZ0NBRUVOZEVHQWdJakFBR29pQnlBQktBSVFJZ2xCeHRFQWJHb2lGMm9pRldwQkVuWkIvd2R4YWkwQUFEb0FBQ0FDSUFBZ0ZTQVJhMEVTZGtIL0IzRnFMUUFBT2dBTklBSWdBQ0FGSUFacVFlOTFiQ0FMYXlJUklBZ2dCa0h1Wkd4cWFpSUlJQklnREVIOGtYOXNhaUlTSUFjZ0NVR1NGR3hxSWhWcUloaHFRUkoyUWY4SGNXb3RBQUE2QUFFZ0FpQUFJQmdnQ0d0QkVuWkIvd2R4YWkwQUFEb0FEQ0FDSUFBZ0R5QUZRWW5vZm14cUlCRnFJZ2dnREVIaHAzOXNJQTFCb3lkc2FpSU1JQWxCeVVkc0lBZHFJZzFxSWc5cVFSSjJRZjhIY1dvdEFBQTZBQUlnQWlBQUlBOGdDR3RCRW5aQi93ZHhhaTBBQURvQUN5QUNJQUFnRGlBS0lBWnJJZ2dnQld0cVFRMTBJZzRnQ1VHK3BYOXNJQWRxSWdkcVFSSjJRZjhIY1dvdEFBQTZBQU1nQWlBQUlBY2dEbXRCRW5aQi93ZHhhaTBBQURvQUNpQUNJQUFnRkVHVU1Hd2lCeUFGSUFaclFmalpBR3dpQ1NBTElBVkI1cE4vYkdwcWFpSUZJQTBnREdzaURHcEJFblpCL3dkeGFpMEFBRG9BQkNBQ0lBQWdEQ0FGYTBFU2RrSC9CM0ZxTFFBQU9nQUpJQUlnQUNBSVFmSWRiQ0FMYXlJRklBa2dCa0daSzJ4cWFpSUdJQlVnRW1zaUMycEJFblpCL3dkeGFpMEFBRG9BQlNBQ0lBQWdDeUFHYTBFU2RrSC9CM0ZxTFFBQU9nQUlJQUlnQUNBSElBcEJpN3gvYkdvZ0JXb2lCaUFYSUJacklnVnFRUkoyUWY4SGNXb3RBQUE2QUFZZ0FpQUFJQVVnQm10QkVuWkIvd2R4YWkwQUFEb0FCeUFCUVNCcUlRRWdFRUVCYWlJUVFRZEhEUUFMSUJOQjRBRnFKQUFMcGdzQkdYOGpBRUdBQW1zaUZTUUFJQUFvQXRBQ0lSRWdBU2dDVkNFQklCVWhBRUVJSVFvRFFDQUFBbjhDUUNBQ0xnRVFJZ1lnQWk4QklDSUZja0gvL3dOeERRQkJBQ0VGSUFJdkFUQU5BQ0FDTHdGQURRQWdBaThCVUEwQUlBSXZBV0FOQUNBQ0x3RndEUUFnQUNBQ0xnRUFJQUVvQWdCc1FRSjBJZ1UyQXNBQklBQWdCVFlDb0FFZ0FDQUZOZ0tBQVNBQUlBVTJBbUFnQUNBRk5nSkFJQUFnQlRZQ0lDQUFJQVUyQWdCQk9Bd0JDeUFBSUFFb0FzQUJJQUl1QVdCc0lnY2dBU2dDUUNBRlFSQjBRUkIxYkNJRmFrSFJJbXdpQ3lBRlFmNHdiR29pRUNBQ0xnRkFJQUVvQW9BQmJFRU5kQ0lKSUFJdUFRQWdBU2dDQUd4QkRYUkJnQWh5SWhKcUlneHFJZzBnQVNnQ0lDQUdiQ0lGSUFFb0F1QUJJQUl1QVhCc0lnWnFRYk5HYkNJVElBVkJpK0FBYkdvZ0JTQUJLQUtnQVNBQ0xnRlFiQ0lJYWlJT0lBRW9BbUFnQWk0Qk1Hd2lCU0FHYWlJVWFrR2h5d0JzSWhZZ0RrR0VaMnhxSWc1cUlnOXJRUXQxTmdMZ0FTQUFJQTBnRDJwQkMzVTJBZ0FnQUNBTElBZEIzNGwvYkdvaUJ5QVNJQWxySWd0cUlna2dGaUFVUWJ1Q2YyeHFJaElnQlNBSWFrSDkyMzVzSWcwZ0JVSFV4QUZzYW1vaUJXdEJDM1UyQXNBQklBQWdCU0FKYWtFTGRUWUNJQ0FBSUFzZ0Iyc2lCU0FOSUFoQnM0TUJiR29nRG1vaUNHdEJDM1UyQXFBQklBQWdCU0FJYWtFTGRUWUNRQ0FBSUJNZ0JrR09FMnhxSUJKcUlnVWdEQ0FRYXlJR2FrRUxkVFlDWUNBR0lBVnJRUXQxSVFWQklBdEJBblJxSUFVMkFnQWdBa0VDYWlFQ0lBRkJCR29oQVNBQVFRUnFJUUFnQ2tFQlN5RUZJQXBCQVdzaENpQUZEUUFMSUJGQmdBTnJJUUFnRlNFQlFRQWhFUU5BSUFNZ0VVRUNkR29vQWdBZ0JHb2lBaUFBSUFFb0Fnd2lCU0FCS0FJRUlncHFRYzdXQUd3aUNTQUtRZGJ0Zm14cUlBRW9BaFFpQmlBS2FpSVNRZW5QQUd3aURHb2dBU2dDSENJSUlBcHFRZnpGQUd3aURXb2lFeUFCS0FJSUlnc2dBU2dDR0NJUWF5SU9RZVBZQUd3aUZDQVFRWU9rQVd4cUloWWdBU2dDQUVFTmRFR0FnSWpBQUdvaUJ5QUJLQUlRSWc5Qno5TUFiQ0lZYWlJWmFpSVhha0VTZGtIL0IzRnFMUUFBT2dBQUlBSWdBQ0FYSUJOclFSSjJRZjhIY1dvdEFBQTZBQThnQWlBQUlBVWdDR29pRTBHclZXd2lGeUFGSUFacVFmQUliQ0lhSUFrZ0JVSE5CR3hxYW1vaUNTQU9RZFFSYkNJT0lBdEJ6VGxzYWlJYklBY2dEMEhSSW13aUQyb2lIR29pSFdwQkVuWkIvd2R4YWkwQUFEb0FBU0FDSUFBZ0hTQUphMEVTZGtIL0IzRnFMUUFBT2dBT0lBSWdBQ0FHSUFocVFiS3BmMndpQ1NBYUlBWkIrcmQvYkdvZ0RHcHFJZ3dnRkNBTFFjSlpiR29pQ3lBSElBOXJJaFJxSWc5cVFSSjJRZjhIY1dvdEFBQTZBQUlnQWlBQUlBOGdER3RCRW5aQi93ZHhhaTBBQURvQURTQUNJQUFnRnlBSVFaakVBR3hxSUExcUlBbHFJZ2tnRGlBUVFiQmZiR29pRUNBSElCaHJJZ2RxSWd4cVFSSjJRZjhIY1dvdEFBQTZBQU1nQWlBQUlBd2dDV3RCRW5aQi93ZHhhaTBBQURvQURDQUNJQUFnQ0NBR2EwR2pHbXdpQ1NBS0lBaHJRYlk1YkNJTUlCTkJsN0IvYkNJTklBaEJoY2tCYkdwcWFpSUlJQWNnRUdzaUIycEJFblpCL3dkeGFpMEFBRG9BQkNBQ0lBQWdCeUFJYTBFU2RrSC9CM0ZxTFFBQU9nQUxJQUlnQUNBU1FkVXFiQ0lJSUFZZ0JXdEJpZG9BYkNJSElBWkIrazVzYW1vZ0NXb2lCaUFVSUF0cklndHFRUkoyUWY4SGNXb3RBQUE2QUFVZ0FpQUFJQXNnQm10QkVuWkIvd2R4YWkwQUFEb0FDaUFDSUFBZ0NpQUZhMEdqR213aUJpQUZRWnIrQUd4cUlBZHFJQTFxSWdVZ0hDQWJheUlIYWtFU2RrSC9CM0ZxTFFBQU9nQUdJQUlnQUNBSElBVnJRUkoyUWY4SGNXb3RBQUE2QUFrZ0FpQUFJQVlnQ2tIQ2luOXNhaUFJYWlBTWFpSUZJQmtnRm1zaUNtcEJFblpCL3dkeGFpMEFBRG9BQnlBQ0lBQWdDaUFGYTBFU2RrSC9CM0ZxTFFBQU9nQUlJQUZCSUdvaEFTQVJRUUZxSWhGQkNFY05BQXNnRlVHQUFtb2tBQXUrREFFYWZ5TUFRWUFFYXlJWkpBQWdBQ2dDMEFJaERTQUJLQUpVSVFFZ0dTRUFBMEFnQUNBQktBSkFJQUl1QVNCc0lnb2dBU2dDd0FFZ0FpNEJZR3dpRG1zaUVVSGoyQUJzSWc4Z0RrR0RwQUZzYWlJU0lBRW9Bb0FCSUFJdUFVQnNJZ3RCejlNQWJDSVRJQUl1QVFBZ0FTZ0NBR3hCRFhSQmdBaHlJZ3hxSWhScUloVWdBU2dDWUNBQ0xnRXdiQ0lHSUFFb0FpQWdBaTRCRUd3aUNHcEJ6dFlBYkNJUUlBaEIxdTErYkdvZ0FTZ0NvQUVnQWk0QlVHd2lCeUFJYWlJYVFlblBBR3dpRm1vZ0FTZ0M0QUVnQWk0QmNHd2lCU0FJYWtIOHhRQnNJaGRxSWhoclFRdDFOZ0xnQXlBQUlCVWdHR3BCQzNVMkFnQWdBQ0FSUWRRUmJDSVJJQXBCelRsc2FpSVZJQXRCMFNKc0lnc2dER29pR0dvaUd5QUZJQVpxSWh4QnExVnNJaDBnQmlBSGFrSHdDR3dpSGlBUUlBWkJ6UVJzYW1wcUloQnJRUXQxTmdMQUF5QUFJQkFnRzJwQkMzVTJBaUFnQUNBUElBcEJ3bGxzYWlJS0lBd2dDMnNpRDJvaUN5QUZJQWRxUWJLcGYyd2lFQ0FlSUFkQityZC9iR29nRm1wcUloWnJRUXQxTmdLZ0F5QUFJQXNnRm1wQkMzVTJBa0FnQUNBUklBNUJzRjlzYWlJT0lBd2dFMnNpREdvaUVTQWRJQVZCbU1RQWJHb2dGMm9nRUdvaUMydEJDM1UyQW9BRElBQWdDeUFSYWtFTGRUWUNZQ0FBSUF3Z0Rtc2lEQ0FGSUFkclFhTWFiQ0lPSUFnZ0JXdEJ0amxzSWhFZ0hFR1hzSDlzSWdzZ0JVR0Z5UUZzYW1wcUlnVnJRUXQxTmdMZ0FpQUFJQVVnREdwQkMzVTJBb0FCSUFBZ0R5QUtheUlGSUJwQjFTcHNJZ3dnQnlBR2EwR0oyZ0JzSWdvZ0IwSDZUbXhxYWlBT2FpSUhhMEVMZFRZQ3dBSWdBQ0FGSUFkcVFRdDFOZ0tnQVNBQUlCZ2dGV3NpQnlBSUlBWnJRYU1hYkNJRklBWkJtdjRBYkdvZ0Ntb2dDMm9pQm10QkMzVTJBcUFDSUFBZ0JpQUhha0VMZFRZQ3dBRWdBQ0FVSUJKcklnWWdCU0FJUWNLS2YyeHFJQXhxSUJGcUlnaHJRUXQxTmdLQUFpQUFJQVlnQ0dwQkMzVTJBdUFCSUFCQkJHb2hBQ0FCUVFScUlRRWdBa0VDYWlFQ0lBbEJBV29pQ1VFSVJ3MEFDeUFOUVlBRGF5RUFJQmtoQVVFQUlRd0RRQ0FESUF4QkFuUnFLQUlBSUFScUlnSWdBQ0FCS0FJTUlnWWdBU2dDQkNJSWFrSE8xZ0JzSWcwZ0NFSFc3WDVzYWlBQktBSVVJZ2NnQ0dvaUVVSHB6d0JzSWc5cUlBRW9BaHdpQlNBSWFrSDh4UUJzSWhKcUlnc2dBU2dDQ0NJS0lBRW9BaGdpRG1zaUUwSGoyQUJzSWhRZ0RrR0RwQUZzYWlJVklBRW9BZ0JCRFhSQmdJQ0l3QUJxSWdrZ0FTZ0NFQ0lRUWMvVEFHd2lHbW9pRm1vaUYycEJFblpCL3dkeGFpMEFBRG9BQUNBQ0lBQWdGeUFMYTBFU2RrSC9CM0ZxTFFBQU9nQVBJQUlnQUNBRklBWnFJZ3RCcTFWc0loY2dCaUFIYWtId0NHd2lHQ0FOSUFaQnpRUnNhbXBxSWcwZ0UwSFVFV3dpRXlBS1FjMDViR29pR3lBSklCQkIwU0pzSWhCcUloeHFJaDFxUVJKMlFmOEhjV290QUFBNkFBRWdBaUFBSUIwZ0RXdEJFblpCL3dkeGFpMEFBRG9BRGlBQ0lBQWdCU0FIYWtHeXFYOXNJZzBnR0NBSFFmcTNmMnhxSUE5cWFpSVBJQlFnQ2tIQ1dXeHFJZ29nQ1NBUWF5SVVhaUlRYWtFU2RrSC9CM0ZxTFFBQU9nQUNJQUlnQUNBUUlBOXJRUkoyUWY4SGNXb3RBQUE2QUEwZ0FpQUFJQmNnQlVHWXhBQnNhaUFTYWlBTmFpSU5JQk1nRGtHd1gyeHFJZzRnQ1NBYWF5SUphaUlQYWtFU2RrSC9CM0ZxTFFBQU9nQURJQUlnQUNBUElBMXJRUkoyUWY4SGNXb3RBQUE2QUF3Z0FpQUFJQVVnQjJ0Qm94cHNJZzBnQ0NBRmEwRzJPV3dpRHlBTFFaZXdmMndpRWlBRlFZWEpBV3hxYW1vaUJTQUpJQTVySWdscVFSSjJRZjhIY1dvdEFBQTZBQVFnQWlBQUlBa2dCV3RCRW5aQi93ZHhhaTBBQURvQUN5QUNJQUFnRVVIVkttd2lCU0FISUFaclFZbmFBR3dpQ1NBSFFmcE9iR3BxSUExcUlnY2dGQ0FLYXlJS2FrRVNka0gvQjNGcUxRQUFPZ0FGSUFJZ0FDQUtJQWRyUVJKMlFmOEhjV290QUFBNkFBb2dBaUFBSUFnZ0JtdEJveHBzSWdjZ0JrR2EvZ0JzYWlBSmFpQVNhaUlHSUJ3Z0cyc2lDV3BCRW5aQi93ZHhhaTBBQURvQUJpQUNJQUFnQ1NBR2EwRVNka0gvQjNGcUxRQUFPZ0FKSUFJZ0FDQUhJQWhCd29wL2JHb2dCV29nRDJvaUJpQVdJQlZySWdocVFSSjJRZjhIY1dvdEFBQTZBQWNnQWlBQUlBZ2dCbXRCRW5aQi93ZHhhaTBBQURvQUNDQUJRU0JxSVFFZ0RFRUJhaUlNUVJCSERRQUxJQmxCZ0FScUpBQUxwd3NCR0g4akFFSGdBMnNpR0NRQUlBQW9BdEFDSVJRZ0FTZ0NWQ0VCSUJnaEFBTkFJQUVvQXFBQklRVWdBaTRCVUNFSUlBRW9BaUFoRUNBQ0xnRVFJUW9nQVNnQzRBRWhCeUFDTGdGd0lRc2dBU2dDWUNFVklBSXVBVEFoRENBQUlBSXVBUUFnQVNnQ0FHeEJEWFJCZ0FoeUlnOGdBU2dDd0FFZ0FpNEJZR3dpRFVHK3BYOXNhaUlTSUFFb0FrQWdBaTRCSUd3aUNTQUJLQUtBQVNBQ0xnRkFiQ0lPYXlJR1FjQ2xmMnhxUVF0MU5nTGdBU0FBSUExQm5ja0FiQ0FQYWlJVElBWkI5Z0pzSWhZZ0NTQU9haUlPUWM3VkFHd2lHV3BxSWhjZ0J5QUxiQ0lIUWFPZEFXd2dEQ0FWYkNJTFFmYXBmMndpRldzZ0JTQUliRUd4emdCc0lnZ2dDaUFRYkNJRklBZHJJaEJCZ3RvQWJHb2lDbW9pREd0QkMzVTJBc0FESUFBZ0RDQVhha0VMZFRZQ0FDQUFJQTFCaEdSc0lBOXFJZzhnQmtIUUZtd2lEU0FPUWN3eWJDSU1hbW9pRnlBTElBZHJJaG9nQldwQm1qVnNJaHNnQlVIeElHeHFJaHhyUVF0MU5nS2dBeUFBSUJjZ0hHcEJDM1UyQWlBZ0FDQVNJQVpCb0Mxc2FpSVNJQkJCc2M0QWJDQUlheUlRYTBFTGRUWUNnQU1nQUNBUUlCSnFRUXQxTmdKQUlBQWdCa0c1Wm13aUJpQU9RWUlqYkNJT2F5QVRhaUlRSUFVZ0IycEI2Q1JzSWhJZ0NDQVZhaUFIUWE5SWJHcHFJZ2RyUVF0MU5nS2dBaUFBSUFjZ0VHcEJDM1UyQXFBQklBQWdDVUdUM0FCc0lnY2dHV3NnRm1vZ0Qyb2lDU0FMUWVaS2JDSUxJQVZCdVI1c2FpQUlheUFTYWlJSWEwRUxkVFlDNEFJZ0FDQUlJQWxxUVF0MU5nSmdJQUFnRXlBTWF5QU5haUlJSUJzZ0drSGM5SDVzYWlJTmEwRUxkVFlDd0FJZ0FDQUlJQTFxUVF0MU5nS0FBU0FBSUE0Z0Iyc2dCbW9nRDJvaUJpQUxJQVZCNTdoL2JHb2dDbW9pQld0QkMzVTJBb0FDSUFBZ0JTQUdha0VMZFRZQ3dBRWdBRUVFYWlFQUlBRkJCR29oQVNBQ1FRSnFJUUlnRVVFQmFpSVJRUWhIRFFBTElCUkJnQU5ySVFBZ0dDRUJRUUFoQ0FOQUlBTWdDRUVDZEdvb0FnQWdCR29pQWlBQUlBRW9BaHdpQmtHam5RRnNJQUVvQWd3aUQwSDJxWDlzSWhCcklBRW9BaFJCc2M0QWJDSVJJQUVvQWdRaUJTQUdheUlLUVlMYUFHeHFJaFZxSWhRZ0FTZ0NBRUVOZEVHQWdJakFBR29pRFNBQktBSVlJZ2xCbmNrQWJHb2lFeUFCS0FJSUlnNGdBU2dDRUNJTGF5SUhRZllDYkNJTUlBc2dEbW9pQzBITzFRQnNJaEpxYWlJV2FrRVNka0gvQjNGcUxRQUFPZ0FBSUFJZ0FDQVdJQlJyUVJKMlFmOEhjV290QUFBNkFBNGdBaUFBSUFVZ0R5QUdheUlXYWtHYU5Xd2lHU0FGUWZFZ2JHb2lGeUFKUVlSa2JDQU5haUlVSUFkQjBCWnNJaG9nQzBITU1td2lHMnBxSWh4cVFSSjJRZjhIY1dvdEFBQTZBQUVnQWlBQUlCd2dGMnRCRW5aQi93ZHhhaTBBQURvQURTQUNJQUFnQ2tHeHpnQnNJQkZySWdvZ0NVRytwWDlzSUExcUlnMGdCMEdnTFd4cUlnbHFRUkoyUWY4SGNXb3RBQUE2QUFJZ0FpQUFJQWtnQ210QkVuWkIvd2R4YWkwQUFEb0FEQ0FDSUFBZ0JTQUdha0hvSkd3aUNTQVBRZVpLYkNJUElBVkJ1UjVzYWlBUmEyb2lDaUFPUVpQY0FHd2lEaUFTYXlBTWFpQVVhaUlNYWtFU2RrSC9CM0ZxTFFBQU9nQURJQUlnQUNBTUlBcHJRUkoyUWY4SGNXb3RBQUE2QUFzZ0FpQUFJQmtnRmtIYzlINXNhaUlLSUJNZ0cyc2dHbW9pREdwQkVuWkIvd2R4YWkwQUFEb0FCQ0FDSUFBZ0RDQUthMEVTZGtIL0IzRnFMUUFBT2dBS0lBSWdBQ0FRSUJGcUlBWkJyMGhzYWlBSmFpSUdJQWRCdVdac0loRWdDMEdDSTJ3aUNXc2dFMm9pRTJwQkVuWkIvd2R4YWkwQUFEb0FCU0FDSUFBZ0V5QUdhMEVTZGtIL0IzRnFMUUFBT2dBSklBSWdBQ0FQSUFWQjU3aC9iR29nRldvaUJTQUpJQTVySUJGcUlCUnFJZ1pxUVJKMlFmOEhjV290QUFBNkFBWWdBaUFBSUFZZ0JXdEJFblpCL3dkeGFpMEFBRG9BQ0NBQ0lBQWdEU0FIUWNDbC8vOEFiR3BCRW5aQi93ZHhhaTBBQURvQUJ5QUJRU0JxSVFFZ0NFRUJhaUlJUVE5SERRQUxJQmhCNEFOcUpBQUx4d29CRlg4akFFSEFBMnNpRmlRQUlBQW9BdEFDSVJRZ0FTZ0NWQ0VCSUJZaEFBTkFJQUVvQXNBQklRY2dBaTRCWUNFSUlBRW9Ba0FoQ2lBQ0xnRWdJUWtnQUNBQ0xnRUFJQUVvQWdCc1FRMTBRWUFJY2lJTklBRW9Bb0FCSUFJdUFVQnNJZ3RCdnFWL2JHcEJDM1VpRVNBQktBTGdBU0FDTGdGd2JDSU9JQUVvQWlBZ0FpNEJFR3dpRENBQktBSmdJQUl1QVRCc0lnVnJJaElnQVNnQ29BRWdBaTRCVUd3aUJtdHFRUUowSWc5ck5nTEFBaUFBSUE4Z0VXbzJBbUFnQUNBSElBaHNJZ2dnQ1NBS2JDSUtha0hpeGdCc0lna2dDRUg4a1g5c2FpSVJJQXRCa2hSc0lBMXFJZzlxSWhVZ0JTQUdha0h2ZFd3Z0RrRU5kQ0lIYXlJT0lBVWdER3BCdDlVQWJDSVhJQVZCN21Sc2Ftb2lFMnRCQzNVMkFvQURJQUFnRXlBVmFrRUxkVFlDSUNBQUlBaEI0YWQvYkNBS1FhTW5iR29pQ0NBTFFjbEhiQ0FOYWlJVmFpSVRJQTRnQmlBTWFpSU9RZExNQUd3aUdDQUdRWW5vZm14cWFpSVphMEVMZFRZQzRBSWdBQ0FUSUJscVFRdDFOZ0pBSUFBZ0R5QVJheUlSSUJKQjhoMXNJQWRySWhJZ0JpQUZhMEg0MlFCc0lnOGdCVUdaSzJ4cWFpSUZhMEVMZFRZQ2dBSWdBQ0FGSUJGcVFRdDFOZ0tnQVNBQUlBdEJ4dEVBYkNBTmFpSUZJQWtnQ2tHOUVXeHFJZzFySWdzZ0RrR1VNR3dpQ2lBTVFZdThmMnhxSUJKcUlnbHJRUXQxTmdMZ0FTQUFJQWtnQzJwQkMzVTJBc0FCSUFBZ0JTQU5haUlGSUJjZ0RFSHd0MzlzYWlBWWFpQUhhaUlNYTBFTGRUWUNvQU1nQUNBRklBeHFRUXQxTmdJQUlBQWdGU0FJYXlJRklBOGdCa0htazM5c2FpQUthaUFIYWlJR2EwRUxkVFlDb0FJZ0FDQUZJQVpxUVF0MU5nS0FBU0FBUVFScUlRQWdBVUVFYWlFQklBSkJBbW9oQWlBUVFRRnFJaEJCQ0VjTkFBc2dGRUdBQTJzaEFDQVdJUUZCQUNFTkEwQWdBeUFOUVFKMGFpZ0NBQ0FFYWlJQ0lBQWdBU2dDSENJVVFRMTBJZ3NnQVNnQ0RDSUZJQUVvQWdRaURHcEJ0OVVBYkNJSklBeEI4TGQvYkdvZ0FTZ0NGQ0lHSUF4cUloRkIwc3dBYkNJT2Ftb2lFaUFCS0FJWUlnZ2dBU2dDQ0NJS2FrSGl4Z0JzSWc4Z0NrRzlFV3hxSWhVZ0FTZ0NBRUVOZEVHQWdJakFBR29pQnlBQktBSVFJaEJCeHRFQWJHb2lGMm9pRTJwQkVuWkIvd2R4YWkwQUFEb0FBQ0FDSUFBZ0V5QVNhMEVTZGtIL0IzRnFMUUFBT2dBTklBSWdBQ0FGSUFacVFlOTFiQ0FMYXlJU0lBa2dCVUh1Wkd4cWFpSUpJQThnQ0VIOGtYOXNhaUlQSUFjZ0VFR1NGR3hxSWhOcUloaHFRUkoyUWY4SGNXb3RBQUE2QUFFZ0FpQUFJQmdnQ1d0QkVuWkIvd2R4YWkwQUFEb0FEQ0FDSUFBZ0RpQUdRWW5vZm14cUlCSnFJZ2tnQ0VIaHAzOXNJQXBCb3lkc2FpSUlJQkJCeVVkc0lBZHFJZ3BxSWc1cVFSSjJRZjhIY1dvdEFBQTZBQUlnQWlBQUlBNGdDV3RCRW5aQi93ZHhhaTBBQURvQUN5QUNJQUFnRkNBTUlBVnJJZ2tnQm10cVFRMTBJaFFnRUVHK3BYOXNJQWRxSWdkcVFSSjJRZjhIY1dvdEFBQTZBQU1nQWlBQUlBY2dGR3RCRW5aQi93ZHhhaTBBQURvQUNpQUNJQUFnRVVHVU1Hd2lCeUFHSUFWclFmalpBR3dpRUNBTElBWkI1cE4vYkdwcWFpSUdJQW9nQ0dzaUNHcEJFblpCL3dkeGFpMEFBRG9BQkNBQ0lBQWdDQ0FHYTBFU2RrSC9CM0ZxTFFBQU9nQUpJQUlnQUNBSlFmSWRiQ0FMYXlJR0lCQWdCVUdaSzJ4cWFpSUZJQk1nRDJzaUMycEJFblpCL3dkeGFpMEFBRG9BQlNBQ0lBQWdDeUFGYTBFU2RrSC9CM0ZxTFFBQU9nQUlJQUlnQUNBSElBeEJpN3gvYkdvZ0Jtb2lCU0FYSUJWcklnWnFRUkoyUWY4SGNXb3RBQUE2QUFZZ0FpQUFJQVlnQld0QkVuWkIvd2R4YWkwQUFEb0FCeUFCUVNCcUlRRWdEVUVCYWlJTlFRNUhEUUFMSUJaQndBTnFKQUFML3dvQkZuOGpBRUdnQTJzaUZpUUFJQUFvQXRBQ0lRa2dBU2dDVkNFQklCWWhBQU5BSUFFb0F1QUJJUW9nQWk0QmNDRVFJQUVvQW1BaEJTQUNMZ0V3SVFZZ0FTZ0NvQUVoRVNBQ0xnRlFJUk1nQVNnQ0lDRUlJQUl1QVJBaEN5QUFJQUl1QVFBZ0FTZ0NBR3hCRFhSQmdBaHlJZ3dnQVNnQ2dBRWdBaTRCUUd3aURTQUJLQUxBQVNBQ0xnRmdiQ0lPYXlJUElBRW9Ba0FnQWk0QklHd2lCMnRCd2RvQWJHcEJDM1UyQXNBQklBQWdEMEdaQm13Z0RHb2lGeUFOSUE1cUlnMUIrY2tBYkNJT0lBZEI4ZGNBYkdwcUloUWdCU0FHYkNJRklBZ2dDMndpQ0dwQjBOUUFiQ0lMSUFoQjIvNStiR29nRVNBVGJDSUdJQWhxUWI3S0FHd2lFV29nQ2lBUWJDSUtJQWhxSWhCQmdqeHNJaE5xSWhWclFRdDFOZ0tBQXlBQUlCUWdGV3BCQzNVMkFnQWdBQ0FQUVpVZmJDQU1haUlVSUFkQjRNTUFiQ0FOUWFBVWJDSVZhMm9pR0NBRklBcHFRY0sxZjJ3aUdTQUZJQVpxUWF0cWJDSWFJQXNnQlVITE5XeHFhbW9pQzJ0QkMzVTJBdUFDSUFBZ0N5QVlha0VMZFRZQ0lDQUFJQWRCakNCc0lBNXJJQmRxSWdzZ0JpQUtha0g0Vld3aURpQWFJQVpCc1p0L2JHb2dFV3BxSWhGclFRdDFOZ0xBQWlBQUlBc2dFV3BCQzNVMkFrQWdBQ0FQUVlKRWJDQU1haUlNSUFkQmpIVnNJQTFCOGh0c0lnOXJhaUlOSUJrZ0NrR1VqUUZzYWlBVGFpQU9haUlSYTBFTGRUWUNvQUlnQUNBTklCRnFRUXQxTmdKZ0lBQWdEeUFIUWN0TWJHb2dER29pRENBUVFkVVZiQ0FHSUFWclFZSThiR29pRHlBSVFiTVViR29nQlVHV1lteHFJZ1ZyUVF0MU5nS0FBaUFBSUFVZ0RHcEJDM1UyQW9BQklBQWdGU0FIUWU2dmYyeHFJQlJxSWdjZ0R5QUdRYzRZYkdvZ0NrRy9rSDlzYWlJRmEwRUxkVFlDNEFFZ0FDQUZJQWRxUVF0MU5nS2dBU0FBUVFScUlRQWdBVUVFYWlFQklBSkJBbW9oQWlBU1FRRnFJaEpCQ0VjTkFBc2dDVUdBQTJzaEFDQVdJUUZCQUNFTUEwQWdBeUFNUVFKMGFpZ0NBQ0FFYWlJQ0lBQWdBU2dDRENJRklBRW9BZ1FpQ0dwQjBOUUFiQ0lKSUFoQjIvNStiR29nQVNnQ0ZDSUdJQWhxUWI3S0FHd2lFR29nQVNnQ0hDSUtJQWhxSWhGQmdqeHNJaE5xSWdzZ0FTZ0NHQ0lTSUFFb0FoQWlEbW9pRFVINXlRQnNJaGNnQVNnQ0NDSUhRZkhYQUd4cUlBRW9BZ0JCRFhSQmdJQ0l3QUJxSWc4Z0RpQVNheUlTUVprR2JHb2lEbW9pRkdwQkVuWkIvd2R4YWkwQUFEb0FBQ0FDSUFBZ0ZDQUxhMEVTZGtIL0IzRnFMUUFBT2dBTUlBSWdBQ0FGSUFwcVFjSzFmMndpQ3lBRklBWnFRYXRxYkNJVUlBa2dCVUhMTld4cWFtb2lDU0FTUVpVZmJDQVBhaUlWSUFkQjRNTUFiQ0FOUWFBVWJDSVlhMm9pR1dwQkVuWkIvd2R4YWkwQUFEb0FBU0FDSUFBZ0dTQUphMEVTZGtIL0IzRnFMUUFBT2dBTElBSWdBQ0FHSUFwcVFmaFZiQ0lKSUJRZ0JrR3htMzlzYWlBUWFtb2lFQ0FIUVl3Z2JDQVhheUFPYWlJT2FrRVNka0gvQjNGcUxRQUFPZ0FDSUFJZ0FDQU9JQkJyUVJKMlFmOEhjV290QUFBNkFBb2dBaUFBSUFzZ0NrR1VqUUZzYWlBVGFpQUphaUlKSUJKQmdrUnNJQTlxSWhBZ0IwR01kV3dnRFVIeUcyd2lEV3RxSWhOcVFSSjJRZjhIY1dvdEFBQTZBQU1nQWlBQUlCTWdDV3RCRW5aQi93ZHhhaTBBQURvQUNTQUNJQUFnRVVIVkZXd2dCaUFGYTBHQ1BHeHFJZ2tnQ0VHekZHeHFJQVZCbG1Kc2FpSUZJQTBnQjBITFRHeHFJQkJxSWdocVFSSjJRZjhIY1dvdEFBQTZBQVFnQWlBQUlBZ2dCV3RCRW5aQi93ZHhhaTBBQURvQUNDQUNJQUFnQ1NBR1FjNFliR29nQ2tHL2tIOXNhaUlGSUJnZ0IwSHVyMzlzYWlBVmFpSUdha0VTZGtIL0IzRnFMUUFBT2dBRklBSWdBQ0FHSUFWclFSSjJRZjhIY1dvdEFBQTZBQWNnQWlBQUlCSWdCMnRCd2RvQWJDQVBha0VTZGtIL0IzRnFMUUFBT2dBR0lBRkJJR29oQVNBTVFRRnFJZ3hCRFVjTkFBc2dGa0dnQTJva0FBdVlDUUVVZnlNQVFZQURheUlWSkFBZ0FDZ0MwQUloRmlBQktBSlVJUUVnRlNFQUEwQWdBU2dDZ0FFaENDQUNMZ0ZBSVE0Z0FDQUJLQUpBSUFJdUFTQnNJZzhnQVNnQ3dBRWdBaTRCWUd3aUNXdEJEWFFpQ2lBQ0xnRUFJQUVvQWdCc1FRMTBRWUFJY2lJTGFpSU1JQUVvQWlBZ0FpNEJFR3dpQmlBQktBTGdBU0FDTGdGd2JDSUhheUlRSUFFb0FtQWdBaTRCTUd3aUVTQUJLQUtnQVNBQ0xnRlFiQ0lGYXlJU2FrSFJJbXdpRXlBUVFmNHdiR29pRUd0QkMzVTJBc0FDSUFBZ0RDQVFha0VMZFRZQ0lDQUFJQXNnQ21zaUNpQVRJQkpCMzRsL2JHb2lER3RCQzNVMkF1QUJJQUFnQ2lBTWFrRUxkVFlDZ0FFZ0FDQUlJQTVzUWJIT0FHd2lEaUFMYWlJS0lBbEJEWFFpQ1NBUFFiYlhBR3hxSWd4ckloQWdCeUFGSUFacUloSnFRWTAzYkNJSUlCRkJyMTFzSWhNZ0JrSGNWR3hxSUFkQmpJRi9iR3BxSWhSclFRdDFOZ0xBQVNBQUlCQWdGR3BCQzNVMkFxQUJJQUFnQ2lBTWFpSUtJQWdnRWtIYkVHeHFJZ3dnRVVIUDB3QnNJaEVnQmtIM0VXeHFhaUlHYTBFTGRUWUM0QUlnQUNBR0lBcHFRUXQxTmdJQUlBQWdEMEcyRjJ3Z0NXc2lCaUFMSUE1cklndHFJZzhnQlNBSGFrR0x2WDlzSWc0Z0JVR3dvWDlzSUJOcWFpQU1haUlGYTBFTGRUWUNvQUlnQUNBRklBOXFRUXQxTmdKQUlBQWdDeUFHYXlJTElBZEJ4dVVBYkNBUmF5QUlhaUFPYWlJSGEwRUxkVFlDZ0FJZ0FDQUhJQXRxUVF0MU5nSmdJQUJCQkdvaEFDQUJRUVJxSVFFZ0FrRUNhaUVDSUExQkFXb2lEVUVJUncwQUN5QVdRWUFEYXlFQUlCVWhBVUVBSVFzRFFDQURJQXRCQW5ScUtBSUFJQVJxSWdJZ0FDQUJLQUlNSWc5Qno5TUFiQ0lXSUFFb0FnUWlCa0gzRVd4cUlBRW9BaFFpQlNBR2FpSU5JQUVvQWh3aUIycEJqVGRzSWhFZ0RVSGJFR3hxSWc1cUlna2dBU2dDR0NJS1FRMTBJZ3dnQVNnQ0NDSUlRYmJYQUd4cUloQWdBU2dDQUVFTmRFR0FnSWpBQUdvaURTQUJLQUlRUWJIT0FHd2lFbW9pRTJvaUZHcEJFblpCL3dkeGFpMEFBRG9BQUNBQ0lBQWdGQ0FKYTBFU2RrSC9CM0ZxTFFBQU9nQUxJQUlnQUNBR0lBZHJJZ2tnRHlBRmF5SVVha0hSSW13aUZ5QUpRZjR3YkdvaUNTQUlJQXByUVExMElnb2dEV29pR0dwQkVuWkIvd2R4YWkwQUFEb0FBU0FDSUFBZ0dDQUphMEVTZGtIL0IzRnFMUUFBT2dBS0lBSWdBQ0FPSUFVZ0IycEJpNzEvYkNJT0lBOUJyMTFzSWc4Z0JVR3dvWDlzYW1wcUlnVWdDRUcyRjJ3Z0RHc2lDQ0FOSUJKcklnbHFJZ3hxUVJKMlFmOEhjV290QUFBNkFBSWdBaUFBSUF3Z0JXdEJFblpCL3dkeGFpMEFBRG9BQ1NBQ0lBQWdCMEhHNVFCc0lCWnJJQkZxSUE1cUlnVWdDU0FJYXlJSWFrRVNka0gvQjNGcUxRQUFPZ0FESUFJZ0FDQUlJQVZyUVJKMlFmOEhjV290QUFBNkFBZ2dBaUFBSUJjZ0ZFSGZpWDlzYWlJRklBMGdDbXNpRFdwQkVuWkIvd2R4YWkwQUFEb0FCQ0FDSUFBZ0RTQUZhMEVTZGtIL0IzRnFMUUFBT2dBSElBSWdBQ0FQSUFaQjNGUnNhaUFIUVl5QmYyeHFJQkZxSWdjZ0V5QVFheUlHYWtFU2RrSC9CM0ZxTFFBQU9nQUZJQUlnQUNBR0lBZHJRUkoyUWY4SGNXb3RBQUE2QUFZZ0FVRWdhaUVCSUF0QkFXb2lDMEVNUncwQUN5QVZRWUFEYWlRQUMrY0pBUlIvSXdCQjRBSnJJaFlrQUNBQUtBTFFBaUVSSUFFb0FsUWhBU0FXSVFBRFFDQUJLQUxnQVNFRklBSXVBWEFoRFNBQktBSmdJUVlnQWk0Qk1DRUlJQUVvQXFBQklRNGdBaTRCVUNFUElBRW9BaUFoQ1NBQ0xnRVFJUkFnQUNBQ0xnRUFJQUVvQWdCc1FRMTBRWUFJY2lJTElBRW9Bc0FCSUFJdUFXQnNJZ3dnQVNnQ1FDQUNMZ0VnYkNJSGFpSVhJQUVvQW9BQklBSXVBVUJzSWdwckloTkJ2NlYvYkdwQkMzVTJBcUFCSUFBZ0UwSHMxZ0JzSUF0cUlnc2dDaUFNYTBIK29nRnNhaUlUSUF4QnRZY0JiR29pRkNBR0lBaHNJZ1lnQ1NBUWJDSUphaUlRUWVvNGJDSVZJQWxCOWtSc2FpQU9JQTlzSWdnZ0NXcEI5Q3BzSWc1cUlBVWdEV3dpQlNBSUlCQnFha0hBR1d3aURTQUZJQWxxUWJnWGJHb2lDV29pRDJ0QkMzVTJBc0FDSUFBZ0R5QVVha0VMZFRZQ0FDQUFJQXNnRjBHRnRuOXNhaUlQSUF4QncwMXNhaUlNSUEwZ0JpQUlha0hKdFg5c2FpSVFJQTRnQ0VIYXMzOXNhbW9pRG10QkMzVTJBb0FDSUFBZ0RDQU9ha0VMZFRZQ1FDQUFJQXNnQ2lBSGEwSEpHMndpREdvZ0IwR1JuMzlzYWlJTElBa2dCU0FHYWtIMWpIOXNJZ2tnQlVISGhnRnNhbW9pRG10QkMzVTJBdUFCSUFBZ0N5QU9ha0VMZFRZQ1lDQUFJQXBCdWZ3QWJDQUhRZjJtZjJ4cUlBOXFJZ2NnQ0VHTHdBQnNJQVpCamFKL2JHb2dCVUdXbEg5c2FpQU5haUlJYTBFTGRUWUN3QUVnQUNBSElBaHFRUXQxTmdLQUFTQUFJQk1nQ2tHMGkzOXNhaUFNYWlJS0lCVWdCa0hZaEFGc2FpQUphaUFRYWlJR2EwRUxkVFlDb0FJZ0FDQUdJQXBxUVF0MU5nSWdJQUJCQkdvaEFDQUJRUVJxSVFFZ0FrRUNhaUVDSUJKQkFXb2lFa0VJUncwQUN5QVJRWUFEYXlFQUlCWWhBVUVBSVF3RFFDQURJQXhCQW5ScUtBSUFJQVJxSWdJZ0FDQUJLQUlNSWdvZ0FTZ0NCQ0lGYWlJSFFlbzRiQ0lOSUFWQjlrUnNhaUFCS0FJVUlnWWdCV3BCOUNwc0loRnFJQUVvQWh3aUNDQUdJQWRxYWtIQUdXd2lFaUFGSUFocVFiZ1hiR29pRG1vaUR5QUJLQUlBUVExMFFZQ0FpTUFBYWlJUUlBRW9BaGdpQnlBQktBSUlJZ2xxSWhjZ0FTZ0NFQ0lGYXlJVFFleldBR3hxSWdzZ0JTQUhhMEgrb2dGc2FpSVVJQWRCdFljQmJHb2lGV3BCRW5aQi93ZHhhaTBBQURvQUFDQUNJQUFnRlNBUGEwRVNka0gvQjNGcUxRQUFPZ0FLSUFJZ0FDQVNJQVlnQ21wQnliVi9iR29pRHlBSUlBcHFRZldNZjJ3aUZTQU5JQXBCMklRQmJHcHFhaUlOSUFVZ0NXdEJ5UnRzSWhnZ0ZDQUZRYlNMZjJ4cWFpSVVha0VTZGtIL0IzRnFMUUFBT2dBQklBSWdBQ0FVSUExclFSSjJRZjhIY1dvdEFBQTZBQWtnQWlBQUlCRWdCa0hhczM5c2FpQVBhaUlOSUFzZ0YwR0Z0bjlzYWlJUklBZEJ3MDFzYWlJSGFrRVNka0gvQjNGcUxRQUFPZ0FDSUFJZ0FDQUhJQTFyUVJKMlFmOEhjV290QUFBNkFBZ2dBaUFBSUJVZ0NFSEhoZ0ZzYWlBT2FpSUhJQXNnR0dvZ0NVR1JuMzlzYWlJTGFrRVNka0gvQjNGcUxRQUFPZ0FESUFJZ0FDQUxJQWRyUVJKMlFmOEhjV290QUFBNkFBY2dBaUFBSUFaQmk4QUFiQ0FLUVkyaWYyeHFJQWhCbHBSL2JHb2dFbW9pQ2lBRlFibjhBR3dnQ1VIOXBuOXNhaUFSYWlJR2FrRVNka0gvQjNGcUxRQUFPZ0FFSUFJZ0FDQUdJQXByUVJKMlFmOEhjV290QUFBNkFBWWdBaUFBSUJOQnY2WC8vd0JzSUJCcVFSSjJRZjhIY1dvdEFBQTZBQVVnQVVFZ2FpRUJJQXhCQVdvaURFRUxSdzBBQ3lBV1FlQUNhaVFBQzRjSUFSSi9Jd0JCd0FKckloUWtBQ0FBS0FMUUFpRVJJQUVvQWxRaEFTQVVJUUFEUUNBQktBTEFBU0VLSUFJdUFXQWhCeUFCS0FKQUlRc2dBaTRCSUNFSklBQWdBaTRCQUNBQktBSUFiRUVOZEVHQUNISWlCU0FCS0FLQUFTQUNMZ0ZBYkNJR1FiNmxmMnhxUVF0MUloSWdBU2dDSUNBQ0xnRVFiQ0lJSUFFb0FxQUJJQUl1QVZCc0lnd2dBU2dDWUNBQ0xnRXdiQ0lOSUFFb0F1QUJJQUl1QVhCc0lnNXJJZzlxYTBFQ2RDSVRhellDNEFFZ0FDQVNJQk5xTmdKQUlBQWdCeUFLYkNJS0lBa2dDMndpQjJwQm1qVnNJZ3NnQjBIeElHeHFJZ2NnQmtHZHlRQnNJQVZxSWdscUloSWdEMEhqRTJ3aUV5QU1RUTEwSWd4cUloVWdEU0FPYWlJTlFlODhiQ0lPSUFoQnM5a0FiR3BxSWhaclFRdDFOZ0tnQWlBQUlCSWdGbXBCQzNVMkFnQWdBQ0FKSUFkcklnY2dDRUdVRG13Z0Rtc2dGV29pQ1d0QkMzVTJBcUFCSUFBZ0J5QUpha0VMZFRZQ2dBRWdBQ0FHUVlSa2JDQUZhaUlGSUFzZ0NrSGM5SDVzYWlJR2F5SUtJQXdnRTJzZ0QwRU1kR3NpRHlBSVFZd3BiQ0FOUWM4bGJDSUhhMm9pQzJ0QkMzVTJBc0FCSUFBZ0NpQUxha0VMZFRZQ1lDQUFJQVVnQm1vaUJTQUlRZFBRQUd3Z0J5QVBhbXNpQ0d0QkMzVTJBb0FDSUFBZ0JTQUlha0VMZFRZQ0lDQUFRUVJxSVFBZ0FVRUVhaUVCSUFKQkFtb2hBaUFRUVFGcUloQkJDRWNOQUFzZ0VVR0FBMnNoQUNBVUlRSkJBQ0VRQTBBZ0F5QVFRUUowYWlnQ0FDQUVhaUlCSUFBZ0FpZ0NIQ0lGSUFJb0Fnd2lCbW9pRVVIdlBHd2lDaUFDS0FJRUlnaEJzOWtBYkdvZ0JpQUZheUlGUWVNVGJDSUhJQUlvQWhRaUMwRU5kQ0lKYWlJU2FpSU1JQUlvQWhnaURTQUNLQUlJSWdacVFabzFiQ0lPSUFaQjhTQnNhaUlUSUFJb0FnQkJEWFJCZ0lDSXdBQnFJZ1lnQWlnQ0VDSVBRWjNKQUd4cUloVnFJaFpxUVJKMlFmOEhjV290QUFBNkFBQWdBU0FBSUJZZ0RHdEJFblpCL3dkeGFpMEFBRG9BQ1NBQklBQWdDRUhUMEFCc0lCRkJ6eVZzSWhFZ0NTQUhheUFGUVF4MGF5SUhhbXNpQ1NBT0lBMUIzUFIrYkdvaURDQVBRWVJrYkNBR2FpSU5haUlPYWtFU2RrSC9CM0ZxTFFBQU9nQUJJQUVnQUNBT0lBbHJRUkoyUWY4SGNXb3RBQUE2QUFnZ0FTQUFJQWdnQlNBTGFtdEJEWFFpQlNBUFFiNmxmMndnQm1vaUJtcEJFblpCL3dkeGFpMEFBRG9BQWlBQklBQWdCaUFGYTBFU2RrSC9CM0ZxTFFBQU9nQUhJQUVnQUNBSElBaEJqQ2xzSUJGcmFpSUZJQTBnREdzaUJtcEJFblpCL3dkeGFpMEFBRG9BQXlBQklBQWdCaUFGYTBFU2RrSC9CM0ZxTFFBQU9nQUdJQUVnQUNBSVFaUU9iQ0FLYXlBU2FpSUlJQlVnRTJzaUJXcEJFblpCL3dkeGFpMEFBRG9BQkNBQklBQWdCU0FJYTBFU2RrSC9CM0ZxTFFBQU9nQUZJQUpCSUdvaEFpQVFRUUZxSWhCQkNrY05BQXNnRkVIQUFtb2tBQXUzQndFVGZ5TUFRYUFDYXlJU0pBQWdBQ2dDMEFJaERDQUJLQUpVSVFFZ0VpRUFBMEFnQVNnQ1lDRUtJQUl1QVRBaENDQUJLQUtnQVNFR0lBSXVBVkFoRGlBQktBTGdBU0VQSUFJdUFYQWhDU0FCS0FJZ0lSQWdBaTRCRUNFVElBQWdBaTRCQUNBQktBSUFiRUVOZEVHQUNISWlDeUFCS0FMQUFTQUNMZ0ZnYkNJUlFiNmxmMnhxSWhRZ0FTZ0NRQ0FDTGdFZ2JDSUhJQUVvQW9BQklBSXVBVUJzSWdWckloVkJ2cVYvYkdwQkMzVTJBb0FCSUFBZ0VVR2hMV3dnQzJvaUN5QUZJQWRxUVlmVkFHd2lFU0FGUWR3UGJDSVdhMm9pRnlBR0lBNXNJZ1VnRUNBVGJDSUdha0dYT213aURpQUlJQXBzUWMreGYyd2lDbXNnQ1NBUGJDSUlJQVpxUWZvZWJDSVBhaUlKYTBFTGRUWUNnQUlnQUNBSklCZHFRUXQxTmdJQUlBQWdGQ0FWUWFFdGJHb2lDU0FHSUFVZ0NHcHJRYkhPQUd3aUJtdEJDM1UyQXVBQklBQWdCaUFKYWtFTGRUWUNJQ0FBSUFkQnE4VUFiQ0lISUFzZ0VXdHFJZ1lnQ2lBRklBaHJRWkhaQUd3aUJXc2dEbW9pQ0d0QkMzVTJBc0FCSUFBZ0JpQUlha0VMZFRZQ1FDQUFJQXNnQjJzZ0Ztb2lCeUFGSUFwcUlBOXFJZ1ZyUVF0MU5nS2dBU0FBSUFVZ0IycEJDM1UyQW1BZ0FFRUVhaUVBSUFGQkJHb2hBU0FDUVFKcUlRSWdEVUVCYWlJTlFRaEhEUUFMSUF4QmdBTnJJUUVnRWlFQVFRQWhEUU5BSUFNZ0RVRUNkR29vQWdBZ0JHb2lBaUFCSUFBb0FoUWlCeUFBS0FJRUlnVnFRWmM2YkNJT0lBQW9BZ3hCejdGL2JDSUxheUFBS0FJY0lnWWdCV3BCK2g1c0lnOXFJZ2tnQUNnQ0FFRU5kRUdBZ0lqQUFHb2lFQ0FBS0FJWUloTkJvUzFzYWlJS0lBQW9BaEFpQ0NBQUtBSUlJZ3hxUVlmVkFHd2lFU0FJUWR3UGJDSVVhMm9pRldwQkVuWkIvd2R4YWkwQUFEb0FBQ0FDSUFFZ0ZTQUphMEVTZGtIL0IzRnFMUUFBT2dBSUlBSWdBU0FGSUFZZ0IycHJRYkhPQUd3aUJTQVRRYjZsZjJ3Z0VHb2lDU0FNSUFocklnaEJvUzFzYWlJUWFrRVNka0gvQjNGcUxRQUFPZ0FCSUFJZ0FTQVFJQVZyUVJKMlFmOEhjV290QUFBNkFBY2dBaUFCSUFzZ0J5QUdhMEdSMlFCc0lnZHJJQTVxSWdVZ0RFR3J4UUJzSWdZZ0NpQVJhMm9pREdwQkVuWkIvd2R4YWkwQUFEb0FBaUFDSUFFZ0RDQUZhMEVTZGtIL0IzRnFMUUFBT2dBR0lBSWdBU0FISUF0cUlBOXFJZ2NnQ2lBR2F5QVVhaUlGYWtFU2RrSC9CM0ZxTFFBQU9nQURJQUlnQVNBRklBZHJRUkoyUWY4SGNXb3RBQUE2QUFVZ0FpQUJJQWtnQ0VHK3BmLy9BR3hxUVJKMlFmOEhjV290QUFBNkFBUWdBRUVnYWlFQUlBMUJBV29pRFVFSlJ3MEFDeUFTUWFBQ2FpUUFDelFBSUFNb0FnQWdCR29nQUNnQzBBSWdBU2dDVkNnQ0FDQUNMd0VBYkVHRUlHcEJBM1pCL3dkeGFrR0FBMnN0QUFBNkFBQUx3d0VCQlg4Z0F5Z0NBQ0FFYWlJRklBQW9BdEFDUVlBRGF5SUFJQUVvQWxRaUFTZ0NKQ0FDTHdFU2JDSUdJQUVvQWdRZ0FpOEJBbXdpQjJvaUNDQUJLQUlnSUFJdkFSQnNJZ2tnQVNnQ0FDQUNMd0VBYkVHRUlHb2lBV29pQW1wQkEzWkIvd2R4YWkwQUFEb0FBQ0FGSUFBZ0FpQUlhMEVEZGtIL0IzRnFMUUFBT2dBQklBTW9BZ1FnQkdvaUFpQUFJQWNnQm1zaUF5QUJJQWxySWdGcVFRTjJRZjhIY1dvdEFBQTZBQUFnQWlBQUlBRWdBMnRCQTNaQi93ZHhhaTBBQURvQUFRdlZCQUVQZnlBREtBSUFJQVJxSWdVZ0FDZ0MwQUpCZ0FOcklnQWdBaTRCRUNBQktBSlVJZ0VvQWlCc1FiSE9BR3dpQ0NBQ0xnRUFJQUVvQWdCc1FRMTBRWUFJY2lJR0lBRW9Ba0FnQWk0QklHd2lCMEdoTFd4cUlnbHFRUUowUVlCQWNVR0FnSWpBQUdvaUNpQUNMZ0VVSUFFb0FpaHNRYkhPQUd3aUN5QUNMZ0VFSUFFb0FnaHNRUTEwUVlBSWNpSU1JQUVvQWtnZ0FpNEJKR3dpRFVHaExXeHFJZzVxUVF0MUlnOUJvUzFzYWlJUUlBSXVBUklnQVNnQ0pHeEJzYzRBYkNJUklBSXVBUUlnQVNnQ0JHeEJEWFJCZ0FoeUloSWdBU2dDUkNBQ0xnRWliQ0lDUWFFdGJHb2lFMnBCQzNWQnNjNEFiQ0lCYWtFU2RrSC9CM0ZxTFFBQU9nQUFJQVVnQUNBUUlBRnJRUkoyUWY4SGNXb3RBQUE2QUFJZ0JTQUFJQTlCdnFYLy93QnNJQXBxUVJKMlFmOEhjV290QUFBNkFBRWdBeWdDQkNBRWFpSUJJQUFnQjBHK3BmLy9BMndnQm1wQkFuUkJnRUJ4UVlDQWlNQUFhaUlGSUExQnZxVi9iQ0FNYWtFTGRTSUdRYUV0YkdvaUJ5QUNRYjZsZjJ3Z0VtcEJDM1ZCc2M0QWJDSUNha0VTZGtIL0IzRnFMUUFBT2dBQUlBRWdBQ0FISUFKclFSSjJRZjhIY1dvdEFBQTZBQUlnQVNBQUlBWkJ2cVgvL3dCc0lBVnFRUkoyUWY4SGNXb3RBQUE2QUFFZ0F5Z0NDQ0FFYWlJQklBQWdDU0FJYTBFQ2RFR0FRSEZCZ0lDSXdBQnFJZ0lnRGlBTGEwRUxkU0lEUWFFdGJHb2lCQ0FUSUJGclFRdDFRYkhPQUd3aUJXcEJFblpCL3dkeGFpMEFBRG9BQUNBQklBQWdCQ0FGYTBFU2RrSC9CM0ZxTFFBQU9nQUNJQUVnQUNBRFFiNmwvLzhBYkNBQ2FrRVNka0gvQjNGcUxRQUFPZ0FCQzVNR0FRZC9JQUFvQXRBQ0lRc2pBRUZBYWlJQUlBRW9BbFFpQVNnQ1FDQUNMZ0VnYkNJR0lBRW9BZ0FnQWk0QkFHd2lCV3BCQW5RaUNDQUJLQUpnSUFJdUFUQnNJZ2tnQVNnQ0lDQUNMZ0VRYkNJSGFrSFJJbXhCZ0FocUlnb2dCMEgrTUd4cVFRdDFJZ2RyTmdJd0lBQWdCeUFJYWpZQ0FDQUFJQVVnQm10QkFuUWlCaUFLSUFsQjM0bC9iR3BCQzNVaUJXczJBaUFnQUNBRklBWnFOZ0lRSUFBZ0FTZ0NSQ0FDTGdFaWJDSUdJQUVvQWdRZ0FpNEJBbXdpQldwQkFuUWlDQ0FCS0FKa0lBSXVBVEpzSWdrZ0FTZ0NKQ0FDTGdFU2JDSUhha0hSSW14QmdBaHFJZ29nQjBIK01HeHFRUXQxSWdkck5nSTBJQUFnQnlBSWFqWUNCQ0FBSUFVZ0JtdEJBblFpQmlBS0lBbEIzNGwvYkdwQkMzVWlCV3MyQWlRZ0FDQUZJQVpxTmdJVUlBQWdBU2dDU0NBQ0xnRWtiQ0lHSUFFb0FnZ2dBaTRCQkd3aUJXcEJBblFpQ0NBQktBSm9JQUl1QVRSc0lna2dBU2dDS0NBQ0xnRVViQ0lIYWtIUklteEJnQWhxSWdvZ0IwSCtNR3hxUVF0MUlnZHJOZ0k0SUFBZ0J5QUlhallDQ0NBQUlBVWdCbXRCQW5RaUJpQUtJQWxCMzRsL2JHcEJDM1VpQldzMkFpZ2dBQ0FGSUFacU5nSVlJQUFnQVNnQ1RDQUNMZ0VtYkNJR0lBRW9BZ3dnQWk0QkJtd2lCV3BCQW5RaUNDQUJLQUpzSUFJdUFUWnNJZ2tnQVNnQ0xDQUNMZ0VXYkNJQmFrSFJJbXhCZ0FocUlnSWdBVUgrTUd4cVFRdDFJZ0ZyTmdJOElBQWdBU0FJYWpZQ0RDQUFJQVVnQm10QkFuUWlBU0FDSUFsQjM0bC9iR3BCQzNVaUFtczJBaXdnQUNBQklBSnFOZ0ljSUF0QmdBTnJJUXNnQUNFQ1FRQWhBUU5BSUFNZ0FVRUNkR29vQWdBZ0JHb2lBQ0FMSUFJb0Fnd2lCaUFDS0FJRUlnVnFRZEVpYkNJSUlBVkIvakJzYWlJRklBSW9BZ0JCa0lBQmFpSUpJQUlvQWdnaUIycEJEWFFpQ21wQkVuWkIvd2R4YWkwQUFEb0FBQ0FBSUFzZ0NpQUZhMEVTZGtIL0IzRnFMUUFBT2dBRElBQWdDeUFJSUFaQjM0bC9iR29pQmlBSklBZHJRUTEwSWdWcVFSSjJRZjhIY1dvdEFBQTZBQUVnQUNBTElBVWdCbXRCRW5aQi93ZHhhaTBBQURvQUFpQUNRUkJxSVFJZ0FVRUJhaUlCUVFSSERRQUxDNkVFQVF0L0lBQW9BdEFDSVFZZ0FTZ0NWQ0VBSXdCQjhBQnJJZ29oQVFOQUlBQW9BbUFoQnlBQ0xnRXdJUVVnQUNnQ0lDRUlJQUl1QVJBaEN5QUJJQUl1QVFBZ0FDZ0NBR3hCRFhSQmdBaHlJZ3dnQUNnQ1FDQUNMZ0VnYkNJTklBQW9Bb0FCSUFJdUFVQnNJZzVySWc5QndLVi9iR3BCQzNVMkFpZ2dBU0FQUWRBV2JDQU1haUlNSUEwZ0RtcEJ6REpzSWcxcUlnNGdCU0FIYkNJSElBZ2dDMndpQldwQm1qVnNJZ2dnQlVIeElHeHFJZ1ZyUVF0MU5nSlFJQUVnQlNBT2FrRUxkVFlDQUNBQklBd2dEV3NpQlNBSUlBZEIzUFIrYkdvaUIydEJDM1UyQWp3Z0FTQUZJQWRxUVF0MU5nSVVJQUZCQkdvaEFTQUFRUVJxSVFBZ0FrRUNhaUVDSUFsQkFXb2lDVUVGUncwQUN5QUdRWUFEYXlFQUlBb2hBa0VBSVFrRFFDQURJQWxCQW5ScUtBSUFJQVJxSWdFZ0FDQUNLQUlNSWdvZ0FpZ0NCQ0lHYWtHYU5Xd2lCeUFHUWZFZ2JHb2lCaUFDS0FJQVFRMTBRWUNBaU1BQWFpSUZJQUlvQWdnaUNDQUNLQUlRSWd0cklneEIwQlpzYWlJTklBZ2dDMnBCekRKc0lnaHFJZ3RxUVJKMlFmOEhjV290QUFBNkFBQWdBU0FBSUFzZ0JtdEJFblpCL3dkeGFpMEFBRG9BQkNBQklBQWdCeUFLUWR6MGZteHFJZ29nRFNBSWF5SUdha0VTZGtIL0IzRnFMUUFBT2dBQklBRWdBQ0FHSUFwclFSSjJRZjhIY1dvdEFBQTZBQU1nQVNBQUlBeEJ3S1gvL3dCc0lBVnFRUkoyUWY4SGNXb3RBQUE2QUFJZ0FrRVVhaUVDSUFsQkFXb2lDVUVGUncwQUN3dnBCQUVNZnlNQVFaQUJheUlOSkFBZ0FDZ0MwQUloRGlBQktBSlVJUUFnRFNFQkEwQWdBQ2dDUUNFSElBSXVBU0FoQ1NBQklBSXVBUUFnQUNnQ0FHeEJEWFJCZ0FoeUlnb2dBQ2dDZ0FFZ0FpNEJRR3dpQzBHK3BYOXNha0VMZFNJUElBQW9BaUFnQWk0QkVHd2lCU0FBS0FKZ0lBSXVBVEJzSWdZZ0FDZ0NvQUVnQWk0QlVHd2lER3ByUVFKMEloQnJOZ0pnSUFFZ0R5QVFhallDR0NBQklBY2dDV3hCc2M0QWJDSUhJQXRCb1Mxc0lBcHFJZ2xxSWdvZ0JTQU1ha0cyRjJ3aUN5QUZJQVpxUVExMGFpSUZhMEVMZFRZQ2VDQUJJQVVnQ21wQkMzVTJBZ0FnQVNBSklBZHJJZ1VnQ3lBTUlBWnJRUTEwYWlJR2EwRUxkVFlDU0NBQklBVWdCbXBCQzNVMkFqQWdBVUVFYWlFQklBQkJCR29oQUNBQ1FRSnFJUUlnQ0VFQmFpSUlRUVpIRFFBTElBNUJnQU5ySVFBZ0RTRUNRUUFoQ0FOQUlBTWdDRUVDZEdvb0FnQWdCR29pQVNBQUlBSW9BaFFpQlNBQ0tBSUVJZ1pxUWJZWGJDSU9JQUlvQWd3aURDQUdha0VOZEdvaUJ5QUNLQUlBUVExMFFZQ0FpTUFBYWlJSklBSW9BaEFpQ2tHaExXeHFJZ3NnQWlnQ0NFR3h6Z0JzSWc5cUloQnFRUkoyUWY4SGNXb3RBQUE2QUFBZ0FTQUFJQkFnQjJ0QkVuWkIvd2R4YWkwQUFEb0FCU0FCSUFBZ0JpQUZJQXhxYTBFTmRDSUdJQXBCdnFWL2JDQUphaUlIYWtFU2RrSC9CM0ZxTFFBQU9nQUJJQUVnQUNBSElBWnJRUkoyUWY4SGNXb3RBQUE2QUFRZ0FTQUFJQTRnQlNBTWEwRU5kR29pQlNBTElBOXJJZ1pxUVJKMlFmOEhjV290QUFBNkFBSWdBU0FBSUFZZ0JXdEJFblpCL3dkeGFpMEFBRG9BQXlBQ1FSaHFJUUlnQ0VFQmFpSUlRUVpIRFFBTElBMUJrQUZxSkFBTHd3WUJFSDhqQUVIUUFXc2lFU1FBSUFBb0F0QUNJUTRnQVNnQ1ZDRUFJQkVoQVFOQUlBQW9BcUFCSVFnZ0FpNEJVQ0VKSUFBb0FpQWhEU0FDTGdFUUlROGdBQ2dDWUNFS0lBSXVBVEFoRWlBQklBSXVBUUFnQUNnQ0FHeEJEWFJCZ0FoeUlnWWdBQ2dDZ0FFZ0FpNEJRR3dpQ3lBQUtBTEFBU0FDTGdGZ2JDSUZJQUFvQWtBZ0FpNEJJR3dpREdvaUVHdEJ3ZG9BYkdwQkMzVTJBbFFnQVNBUVFjYlJBR3dnQm1vaUVDQUxJQVZyUWJjNGJDSVRJQVZCZzN0c2Ftb2lGQ0FJSUFsc0lnVWdEU0FQYkNJSWFrR2pKMndpRFNBS0lCSnNJZ2tnQ0dwQjd6dHNJZzhnQ0NBSmEwSHpDbXdpQ0d0cUlncHJRUXQxTmdLb0FTQUJJQW9nRkdwQkMzVTJBZ0FnQVNBTUlBdHJRWklVYkNJS0lBeEI4ZUYrYkdvZ0VHb2lEQ0FGSUFscVFlR25mMndpQ1NBTklBVkIzdmNBYkdwcUlnVnJRUXQxTmdKd0lBRWdCU0FNYWtFTGRUWUNPQ0FCSUF0QmxZcC9iQ0FHYWlBS2FpQVRhaUlMSUFnZ0Qyb2dDV29pQm10QkMzVTJBb3dCSUFFZ0JpQUxha0VMZFRZQ0hDQUJRUVJxSVFFZ0FFRUVhaUVBSUFKQkFtb2hBaUFIUVFGcUlnZEJCMGNOQUFzZ0RrR0FBMnNoQUNBUklRSkJBQ0VMQTBBZ0F5QUxRUUowYWlnQ0FDQUVhaUlCSUFBZ0FpZ0NEQ0lHSUFJb0FnUWlCMnBCN3p0c0lnNGdCeUFHYTBIekNtd2lEV3NnQWlnQ0ZDSUZJQWRxUWFNbmJDSVBhaUlLSUFJb0FoQWlCeUFDS0FJWUlneHJRYmM0YkNJU0lBeEJnM3RzYWlBQ0tBSUFRUTEwUVlDQWlNQUFhaUlJSUF3Z0FpZ0NDQ0lKYWlJTVFjYlJBR3hxSWhCcUloTnFRUkoyUWY4SGNXb3RBQUE2QUFBZ0FTQUFJQk1nQ210QkVuWkIvd2R4YWkwQUFEb0FCaUFCSUFBZ0JTQUdha0hocDM5c0lnWWdEU0FPYW1vaURpQUpJQWRyUVpJVWJDSU5JQWRCbFlwL2JDQUlhbW9nRW1vaUNtcEJFblpCL3dkeGFpMEFBRG9BQVNBQklBQWdDaUFPYTBFU2RrSC9CM0ZxTFFBQU9nQUZJQUVnQUNBUElBVkIzdmNBYkdvZ0Jtb2lCaUFOSUFsQjhlRitiR29nRUdvaUJXcEJFblpCL3dkeGFpMEFBRG9BQWlBQklBQWdCU0FHYTBFU2RrSC9CM0ZxTFFBQU9nQUVJQUVnQUNBSElBeHJRY0hhQUd3Z0NHcEJFblpCL3dkeGFpMEFBRG9BQXlBQ1FSeHFJUUlnQzBFQmFpSUxRUWRIRFFBTElCRkIwQUZxSkFBTGdRa0JFbjhqQUVHQUFtc2lFaVFBSUFBb0F0QUNJUkVnQVNnQ1ZDRUJJQkloQUVFSUlRWURRQ0FBQW44Q1FDQUNMZ0VRSWdnZ0FpOEJJQ0lGY2tILy93TnhEUUJCQUNFRklBSXZBVEFOQUNBQ0x3RkFEUUFnQWk4QlVBMEFJQUl2QVdBTkFDQUNMd0Z3RFFBZ0FDQUNMZ0VBSUFFb0FnQnNRUUowSWdVMkFzQUJJQUFnQlRZQ29BRWdBQ0FGTmdLQUFTQUFJQVUyQW1BZ0FDQUZOZ0pBSUFBZ0JUWUNJQ0FBSUFVMkFnQkJPQXdCQ3lBQUlBRW9Bc0FCSUFJdUFXQnNJZ2tnQVNnQ1FDQUZRUkIwUVJCMWJDSUZha0hSSW13aURTQUZRZjR3YkdvaURpQUNMZ0ZBSUFFb0FvQUJiRUVOZENJS0lBSXVBUUFnQVNnQ0FHeEJEWFJCZ0FoeUlndHFJZzlxSWd3Z0FTZ0NJQ0FJYkNJRklBRW9BdUFCSUFJdUFYQnNJZ2hxUWJOR2JDSVRJQVZCaStBQWJHb2dCU0FCS0FLZ0FTQUNMZ0ZRYkNJSGFpSVFJQUVvQW1BZ0FpNEJNR3dpQlNBSWFpSVVha0doeXdCc0loVWdFRUdFWjJ4cUloQnFJaFpyUVF0MU5nTGdBU0FBSUF3Z0ZtcEJDM1UyQWdBZ0FDQU5JQWxCMzRsL2JHb2lDU0FMSUFwcklnMXFJZ29nRlNBVVFidUNmMnhxSWdzZ0JTQUhha0g5MjM1c0lnd2dCVUhVeEFGc2Ftb2lCV3RCQzNVMkFzQUJJQUFnQlNBS2FrRUxkVFlDSUNBQUlBMGdDV3NpQlNBTUlBZEJzNE1CYkdvZ0VHb2lCMnRCQzNVMkFxQUJJQUFnQlNBSGFrRUxkVFlDUUNBQUlCTWdDRUdPRTJ4cUlBdHFJZ1VnRHlBT2F5SUlha0VMZFRZQ1lDQUlJQVZyUVF0MUlRVkJJQXRCQW5ScUlBVTJBZ0FnQWtFQ2FpRUNJQUZCQkdvaEFTQUFRUVJxSVFBZ0JrRUJTeUVGSUFaQkFXc2hCaUFGRFFBTElCRkJnQU5ySVFBZ0VpRUNRUUFoQ0FOQUlBSW9BZ0JCa0lBQmFpRUdJQU1nQ0VFQ2RHb29BZ0FnQkdvaEFRSkFBa0FnQWlnQ0JDSUhJQUlvQWdnaUJYSU5BRUVBSVFVZ0FpZ0NEQTBBSUFJb0FoQU5BQ0FDS0FJVURRQWdBaWdDR0EwQUlBSW9BaHdOQUNBQklBQWdCa0VGZGtIL0IzRnFNUUFBUW9HQ2hJaVFvTUNBQVg0M0FBQU1BUXNnQVNBQUlBSW9BaHdpRVNBSGFrR3pSbXdpRFNBSFFZdmdBR3hxSUFJb0Fnd2lDU0FSYWlJT0lBY2dBaWdDRkNJSGFpSUtha0doeXdCc0lnc2dDa0dFWjJ4cUlncHFJZzhnQWlnQ0dDSU1JQVZxUWRFaWJDSVRJQVZCL2pCc2FpSUZJQUlvQWhBaUVDQUdha0VOZENJVWFpSVZha0VTZGtIL0IzRnFMUUFBT2dBQUlBRWdBQ0FWSUE5clFSSjJRZjhIY1dvdEFBQTZBQWNnQVNBQUlBc2dEa0c3Z245c2FpSU9JQWNnQ1dwQi9kdCtiQ0lMSUFsQjFNUUJiR3BxSWdrZ0V5QU1RZCtKZjJ4cUlnOGdCaUFRYTBFTmRDSUdhaUlNYWtFU2RrSC9CM0ZxTFFBQU9nQUJJQUVnQUNBTUlBbHJRUkoyUWY4SGNXb3RBQUE2QUFZZ0FTQUFJQXNnQjBHemd3RnNhaUFLYWlJSElBWWdEMnNpQm1wQkVuWkIvd2R4YWkwQUFEb0FBaUFCSUFBZ0JpQUhhMEVTZGtIL0IzRnFMUUFBT2dBRklBRWdBQ0FOSUJGQmpoTnNhaUFPYWlJR0lCUWdCV3NpQldwQkVuWkIvd2R4YWkwQUFEb0FBeUFCSUFBZ0JTQUdhMEVTZGtIL0IzRnFMUUFBT2dBRUN5QUNRU0JxSVFJZ0NFRUJhaUlJUVFoSERRQUxJQkpCZ0FKcUpBQUxrQWdCRVg4akFFR0FBbXNpRUNRQUlBQW9BdEFDSVFrZ0FTZ0NWQ0VCSUJBaEFFRUlJUWNEUUNBQUFuOENRQ0FDTGdFUUlnVWdBaThCSUNJR2NrSC8vd054RFFCQkFDRUdJQUl2QVRBTkFDQUNMd0ZBRFFBZ0FpOEJVQTBBSUFJdkFXQU5BQ0FDTHdGd0RRQWdBQ0FCS0FJQUlBSXVBUUJzSWdZMkFzQUJJQUFnQmpZQ29BRWdBQ0FHTmdLQUFTQUFJQVkyQW1BZ0FDQUdOZ0pBSUFBZ0JqWUNJQ0FBSUFZMkFnQkJPQXdCQ3lBQUlBRW9Bc0FCSUFJdUFXQnNJZ2dnQVNnQ1FDQUdRUkIwUVJCMWJDSUxhaUlHSUFFb0FvQUJJQUl1QVVCc0lnb2dBU2dDQUNBQ0xnRUFiQ0lNYWlJTmFpSU9JQUVvQXVBQklBSXVBWEJzSWc4Z0FTZ0NJQ0FGYkNJUmFpSVNJQUVvQXFBQklBSXVBVkJzSWhNZ0FTZ0NZQ0FDTGdFd2JDSVVhaUlWYWlJRmF6WUM0QUVnQUNBRklBNXFOZ0lBSUFBZ0N5QUlhMEhxQW14QkNIVWdCbXNpQ0NBTUlBcHJJZ3RxSWdvZ0VTQVBheUlNSUJNZ0ZHc2lEbXBCMlFOc1FRaDFJZzhnQlNBT1FaMEZiRUVJZFdwcklnVnJOZ0xBQVNBQUlBVWdDbW8yQWlBZ0FDQUxJQWhySWdnZ0VpQVZhMEhxQW14QkNIVWdCV3NpQldzMkFxQUJJQUFnQlNBSWFqWUNRQ0FBSUE4Z0RFR1ZBbXhCQ0hVZ0JXcHJJZ1VnRFNBR2F5SUdhallDWUNBR0lBVnJJUVpCSUF0QkFuUnFJQVkyQWdBZ0FrRUNhaUVDSUFGQkJHb2hBU0FBUVFScUlRQWdCMEVCU3lFR0lBZEJBV3NoQnlBR0RRQUxJQWxCZ0FOcklRQWdFQ0VDUVFBaEJnTkFJQUlvQWdCQmtJQUJhaUVGSUFNZ0JrRUNkR29vQWdBZ0JHb2hBUUpBQWtBZ0FpZ0NCQ0lKSUFJb0FnZ2lCM0lOQUVFQUlRY2dBaWdDREEwQUlBSW9BaEFOQUNBQ0tBSVVEUUFnQWlnQ0dBMEFJQUlvQWh3TkFDQUJJQUFnQlVFRmRrSC9CM0ZxTVFBQVFvR0NoSWlRb01DQUFYNDNBQUFNQVFzZ0FTQUFJQUlvQWh3aUNpQUphaUlNSUFJb0Fnd2lEU0FDS0FJVUlnNXFJZzlxSWdnZ0FpZ0NHQ0lSSUFkcUlnc2dBaWdDRUNJU0lBVnFJaE5xSWhScVFRVjJRZjhIY1dvdEFBQTZBQUFnQVNBQUlCUWdDR3RCQlhaQi93ZHhhaTBBQURvQUJ5QUJJQUFnQ1NBS2F5SUtJQTRnRFdzaUNXcEIyUU5zUVFoMUlnMGdDVUdkQld4QkNIVWdDR3BySWdrZ0J5QVJhMEhxQW14QkNIVWdDMnNpQ0NBRklCSnJJZ1ZxSWdkcVFRVjJRZjhIY1dvdEFBQTZBQUVnQVNBQUlBY2dDV3RCQlhaQi93ZHhhaTBBQURvQUJpQUJJQUFnRENBUGEwSHFBbXhCQ0hVZ0NXc2lCeUFGSUFocklnVnFRUVYyUWY4SGNXb3RBQUE2QUFJZ0FTQUFJQVVnQjJ0QkJYWkIvd2R4YWkwQUFEb0FCU0FCSUFBZ0RTQUtRWlVDYkVFSWRTQUhhbXNpQnlBVElBdHJJZ1ZxUVFWMlFmOEhjV290QUFBNkFBTWdBU0FBSUFVZ0IydEJCWFpCL3dkeGFpMEFBRG9BQkFzZ0FrRWdhaUVDSUFaQkFXb2lCa0VJUncwQUN5QVFRWUFDYWlRQUMvSUlBZzk5Qlg4akFFR0FBbXNpRmlRQUlBQW9BdEFDSVJjZ0FTZ0NWQ0VCSUJZaEFFRUlJUlFEUUNBQUFuOENRQ0FDTHdFUUloZ2dBaThCSUNJVmNnMEFRUUFoRlNBQ0x3RXdEUUFnQWk4QlFBMEFJQUl2QVZBTkFDQUNMd0ZnRFFBZ0FpOEJjQTBBSUFBZ0FTb0NBQ0FDTGdFQXNwUWlCamdDd0FFZ0FDQUdPQUtnQVNBQUlBWTRBb0FCSUFBZ0JqZ0NZQ0FBSUFZNEFrQWdBQ0FHT0FJZ0lBQWdCamdDQUVFNERBRUxJQUFnQVNvQ0FDQUNMZ0VBc3BRaUJ5QUJLZ0tBQVNBQ0xnRkFzcFFpQ0pJaURTQUJLZ0pBSUJWQkVIUkJFSFd5bENJSklBRXFBc0FCSUFJdUFXQ3lsQ0lLa2lJR2tpSUxJQUVxQW1BZ0FpNEJNTEtVSWd3Z0FTb0NvQUVnQWk0QlVMS1VJZzZTSWc4Z0FTb0NJQ0FZUVJCMFFSQjFzcFFpRUNBQktnTGdBU0FDTGdGd3NwUWlFWklpRXBJaUJaTTRBdUFCSUFBZ0N5QUZramdDQUNBQUlBY2dDSk1pQnlBSklBcVRRL01FdFQrVUlBYVRJZ2lTSWdrZ0RpQU1reUlLSUJBZ0VaTWlDNUpEWG9Qc1A1UWlEQ0FLUTNVOUo4Q1VraUFGa3lJRmt6Z0N3QUVnQUNBSklBV1NPQUlnSUFBZ0J5QUlreUlISUJJZ0Q1TkQ4d1MxUDVRZ0JaTWlCWk00QXFBQklBQWdCeUFGa2pnQ1FDQUFJQTBnQnBNaUJpQU1JQXREMUl1S3Y1U1NJQVdUSWdXU09BSmdJQVlnQlpNaEJrRWdDMEVDZEdvZ0JqZ0NBQ0FDUVFKcUlRSWdBVUVFYWlFQklBQkJCR29oQUNBVVFRRkxJUlVnRkVFQmF5RVVJQlVOQUFzZ0YwR0FBMnNoQUNBV0lRSkJBQ0VVQTBBZ0F5QVVRUUowYWlnQ0FDQUVhaUlCSUFBQ2Z5QUNLZ0lBUXdBZ0FFU1NJZ2NnQWlvQ0VDSUlraUlOSUFJcUFnZ2lDU0FDS2dJWUlncVNJZ2FTSWdzZ0Fpb0NGQ0lNSUFJcUFnd2lEcElpRHlBQ0tnSUVJaEFnQWlvQ0hDSVJraUlTa2lJRmtpSVRpME1BQUFCUFhRUkFJQk9vREFFTFFZQ0FnSUI0QzBIL0IzRnFMUUFBT2dBQUlBRWdBQUovSUFzZ0JaTWlDNHREQUFBQVQxMEVRQ0FMcUF3QkMwR0FnSUNBZUF0Qi93ZHhhaTBBQURvQUJ5QUJJQUFDZnlBSElBaVRJZ2NnQ1NBS2swUHpCTFUvbENBR2t5SUlraUlKSUF3Z0RwTWlDaUFRSUJHVElndVNRMTZEN0QrVUlnd2dDa04xUFNmQWxKSWdCWk1pQlpJaUNvdERBQUFBVDEwRVFDQUtxQXdCQzBHQWdJQ0FlQXRCL3dkeGFpMEFBRG9BQVNBQklBQUNmeUFKSUFXVElnbUxRd0FBQUU5ZEJFQWdDYWdNQVF0QmdJQ0FnSGdMUWY4SGNXb3RBQUE2QUFZZ0FTQUFBbjhnQnlBSWt5SUhJQklnRDVORDh3UzFQNVFnQlpNaUJaSWlDSXREQUFBQVQxMEVRQ0FJcUF3QkMwR0FnSUNBZUF0Qi93ZHhhaTBBQURvQUFpQUJJQUFDZnlBSElBV1RJZ2VMUXdBQUFFOWRCRUFnQjZnTUFRdEJnSUNBZ0hnTFFmOEhjV290QUFBNkFBVWdBU0FBQW44Z0RTQUdreUlHSUF3Z0MwUFVpNHEvbEpJZ0JaTWlCWklpQjR0REFBQUFUMTBFUUNBSHFBd0JDMEdBZ0lDQWVBdEIvd2R4YWkwQUFEb0FBeUFCSUFBQ2Z5QUdJQVdUSWdhTFF3QUFBRTlkQkVBZ0JxZ01BUXRCZ0lDQWdIZ0xRZjhIY1dvdEFBQTZBQVFnQWtFZ2FpRUNJQlJCQVdvaUZFRUlSdzBBQ3lBV1FZQUNhaVFBQ3hrQUlBQWdBQ2dDQUNnQ0NCRUJBQ0FBRUxrRlFRRVFBZ0FMV3dFQmZ5QUFLQUlBSVFJZ0FVRUFTQVJBQWtBZ0FpZ0NiQ0lCQkVBZ0FpZ0NhRUVEU0EwQkN5QUFJQUlvQWdnUkFRQWdBaWdDYkNFQkN5QUNJQUZCQVdvMkFtd1BDeUFCSUFJb0FtaE1CRUFnQUNBQ0tBSUlFUUVBQ3d0Y0FRSi9Jd0JCNEFGcklnRWtBQ0FBSUFGQkVHb2lBaUFBS0FJQUtBSU1FUUlBSUFFZ0FqWUNBRUhnNFFJb0FnQWhBaU1BUVJCcklnQWtBQ0FBSUFFMkFnd2dBa0d2bEFJZ0FSQ0tCU0FBUVJCcUpBQWdBVUhnQVdva0FBdVRBZ0lFZndOK0l3QkJNR3NpQXlRQUFrQUNRQUovQWtBZ0FDZ0NBQ0lDS0FJVUlnQkJBRXdOQUNBQUlBSW9BblJLRFFBZ0FpZ0NjQ0FBUVFKMGFnd0JDeUFDS0FKNElnUkZEUUVnQUNBQ0tBSjhJZ1ZJRFFFZ0FDQUNLQUtBQVVvTkFTQUVJQUFnQld0QkFuUnFDeWdDQUNJRURRRUxJQUlnQURZQ0dDQUNLQUp3S0FJQUlRUUxJQVFoQUFKQUFrQURRQ0FBTFFBQUlnVkZEUUVnQUVFQmFpRUFJQVZCSlVjTkFBc2dBQzBBQUVIekFFY05BQ0FESUFKQkdHbzJBaUFnQVNBRUlBTkJJR29Rb2dJTUFRc2dBaWtDSUNFR0lBSXBBaWdoQnlBQ0tRSVlJUWdnQXlBQ0tRSXdOd01ZSUFNZ0J6Y0RFQ0FESUFZM0F3Z2dBeUFJTndNQUlBRWdCQ0FERUtJQ0N5QURRVEJxSkFBTEZRQWdBQ2dDQUNJQVFRQTJBaFFnQUVFQU5nSnNDOEVCQVFkL0lBQW9Bc0FDUVFCS0JFQWdBQ2dDM0FNZ0FTZ0NCR29pQVMwQWpBRWhCU0FES0FJQUlRWWdBUzBBbGdFaUNFRUJheUVKQTBBZ0FDZ0NjQ0lCUVFCS0JFQWdCaUFFUVFKMGFpZ0NBQ0lESUFGcUlRb2dBaUFIUVFKMGFpZ0NBQ0VCQTBBZ0JRUkFJQU1nQVMwQUFDQUZFRGdnQldvaEF3c2dBVUVCYWlFQklBTWdDa2tOQUFzTElBaEJBazhFUUNBR0lBUWdCaUFFUVFGcUlBa2dBQ2dDY0JDUkF3c2dCMEVCYWlFSElBUWdDR29pQkNBQUtBTEFBa2dOQUFzTEM1NEJBUVYvSUFBb0FzQUNRUUJLQkVBZ0F5Z0NBQ0VGQTBBZ0JTQUVJQVVnQkVFQmNrRUJJQUFvQW5BaUFVRUFTZ1IvSUFVZ0JFRUNkR29vQWdBaUF5QUJhaUVISUFJZ0JrRUNkR29vQWdBaEFRTkFJQU1nQVMwQUFDSUlPZ0FCSUFNZ0NEb0FBQ0FCUVFGcUlRRWdBMEVDYWlJRElBZEpEUUFMSUFBb0FuQUZJQUVMRUpFRElBWkJBV29oQmlBRVFRSnFJZ1FnQUNnQ3dBSklEUUFMQ3d1RUFRRUVmeUFBS0FMQUFpSUJRUUJLQkVBZ0F5Z0NBQ0VGQTBBZ0FDZ0NjQ0lEUVFCS0JFQWdBeUFGSUFSQkFuUWlBMm9vQWdBaUFXb2hCaUFDSUFOcUtBSUFJUU1EUUNBQklBTXRBQUFpQnpvQUFTQUJJQWM2QUFBZ0EwRUJhaUVESUFGQkFtb2lBU0FHU1EwQUN5QUFLQUxBQWlFQkN5QUVRUUZxSWdRZ0FVZ05BQXNMQ3drQUlBTWdBallDQUFzSkFDQURRUUEyQWdBTEh3RUJmeUFBS0FMY0F5SUJJQUFvQXNBQ05nSmNJQUVnQUNnQ2REWUNZQXVqQWdFRmZ5QUFLQUxjQXlJREtBSmNJZ2NnQUNnQ3dBSWlDRTRFUUNBQUtBSWtRUUJLQkVBZ0EwRU1haUVLSUFBb0F0Z0JJUWhCQUNFSEEwQWdBQ0FJSUFFZ0IwRUNkQ0lKYWlnQ0FDQURJQWxxSWdzb0FtUWdBaWdDQUd4QkFuUnFJQWtnQ21vZ0N5Z0NOQkVIQUNBSVFkZ0FhaUVJSUFkQkFXb2lCeUFBS0FJa1NBMEFDeUFBS0FMQUFpRUlDeUFEUVFBMkFseEJBQ0VIQ3lBQUlBTkJER29nQnlBRUlBVW9BZ0FpQVVFQ2RHb2dDQ0FIYXlJRUlBTW9BbUFpQnlBRUlBZEpHeUlFSUFZZ0FXc2lBU0FCSUFSTEd5SUJJQUFvQXVBREtBSUVFUVlBSUFVZ0JTZ0NBQ0FCYWpZQ0FDQURJQU1vQW1BZ0FXczJBbUFnQXlBREtBSmNJQUZxSWdFMkFsd2dBQ2dDd0FJZ0FVd0VRQ0FDSUFJb0FnQkJBV28yQWdBTEM5Z0JBQUpBSUFBb0FzZ0RJZ0VvQWhnaUFnUkFJQUVvQWd3aEF3d0JDeUFCSUFBZ0FTZ0NDQ0FCS0FJVUlBRW9BaEJCQUNBQUtBSUVLQUljRVFvQUlnTTJBZ3dnQVNnQ0dDRUNDeUFBSUFNZ0FrRUNkR29nQkNBRktBSUFJZ05CQW5ScUlBRW9BaEFnQW1zaUFpQUdJQU5ySWdNZ0FpQURTUnNpQWlBQUtBSjBJQUVvQWhScklnTWdBaUFEU1JzaUFpQUFLQUxrQXlnQ0JCRUhBQ0FGSUFVb0FnQWdBbW8yQWdBZ0FTQUJLQUlZSUFKcUlnQTJBaGdnQUNBQktBSVFJZ0JQQkVBZ0FVRUFOZ0lZSUFFZ0FTZ0NGQ0FBYWpZQ0ZBc0wwd0VCQW44Z0FDZ0N5QU1pQkVFWWFpRUlBa0FnQkNnQ0dDSUdCRUFnQkNnQ0RDRUhEQUVMSUFRZ0FDQUVLQUlJSUFRb0FoUWdCQ2dDRUVFQklBQW9BZ1FvQWh3UkNnQWlCellDRENBRUtBSVlJUVlMSUFBZ0FTQUNJQU1nQnlBSUlBUW9BaEFnQUNnQzNBTW9BZ1FSREFBZ0JpQUVLQUlZSWdOSkJIOGdBQ0FFS0FJTUlBWkJBblJxUVFBZ0F5QUdheUlCSUFBb0F1UURLQUlFRVFjQUlBVWdCU2dDQUNBQmFqWUNBQ0FFS0FJWUJTQURDeUFFS0FJUUlnQlBCRUFnQkVFQU5nSVlJQVFnQkNnQ0ZDQUFhallDRkFzTGp3RUJCSDhqQUVFUWF5SUhKQUFnQUNnQ3lBTWlDQ2dDRUNFSklBVW9BZ0FoQ2lBSFFRQTJBZ3dnQUNBQklBSWdBeUFJS0FJTUlBZEJER29nQmlBS2F5SUJJQWtnQVNBSlNSc2dBQ2dDM0FNb0FnUVJEQUFnQUNBSUtBSU1JQVFnQlNnQ0FFRUNkR29nQnlnQ0RDQUFLQUxrQXlnQ0JCRUhBQ0FGSUFVb0FnQWdCeWdDREdvMkFnQWdCMEVRYWlRQUM5d0JBUUYvSUFBb0FzZ0RJUUlDUUFKQUFrQUNRQUpBSUFFT0JBQURBZ0VEQ3lBQUtBSlVCRUFnQWtIV0FUWUNCQ0FDS0FJTURRUWdBaUFBSUFJb0FnaEJBQ0FDS0FJUVFRRWdBQ2dDQkNnQ0hCRUtBRFlDREF3RUN5QUNJQUFvQXR3REtBSUVOZ0lFREFNTElBSW9BZ2hGQkVBZ0FDZ0NBQ0lCUVFNMkFoUWdBQ0FCS0FJQUVRRUFDeUFDUWRjQk5nSUVEQUlMSUFJb0FnaEZCRUFnQUNnQ0FDSUJRUU0yQWhRZ0FDQUJLQUlBRVFFQUN5QUNRZGdCTmdJRURBRUxJQUFvQWdBaUFVRUROZ0lVSUFBZ0FTZ0NBQkVCQUFzZ0FrSUFOd0lVQ3p3QUlBQWdBU0FDS0FJQUlBUWdCU2dDQUVFQ2RHb2dBQ2dDM0FNb0Fnd1JCd0FnQlNBRktBSUFRUUZxTmdJQUlBSWdBaWdDQUVFQmFqWUNBQXZDQXdFTWZ5QUNRUUowSWdJZ0FTZ0NDR29vQWdBaEJTQUJLQUlFSUFKcUtBSUFJUVlnQVNnQ0FDQUNhaWdDQUNFSElBTW9BZ0FoQVNBQUtBTFFBaUVDSUFBb0F0d0RJZ01vQWh3aENDQURLQUlZSVFzZ0F5Z0NGQ0VNSUFNb0FoQWhEU0FBS0FKd0lnTkJBazhFZnlBRFFRRjJJUU1EUUNBTUlBWXRBQUJCQW5RaUJHb29BZ0FoRGlBTElBVXRBQUJCQW5RaUNXb29BZ0FoQ2lBRUlBaHFLQUlBSVE4Z0FTQUNJQWtnRFdvb0FnQWlDU0FITFFBQUlnUnFhaTBBQURvQUFDQUJJQUlnQkNBS0lBOXFRUkIxSWdwcWFpMEFBRG9BQVNBQklBSWdCQ0FPYW1vdEFBQTZBQUlnQVNBQ0lBa2dCeTBBQVNJRWFtb3RBQUE2QUFNZ0FTQUNJQVFnQ21wcUxRQUFPZ0FFSUFFZ0FpQUVJQTVxYWkwQUFEb0FCU0FCUVFacUlRRWdCMEVDYWlFSElBVkJBV29oQlNBR1FRRnFJUVlnQTBFQmF5SUREUUFMSUFBb0FuQUZJQU1MUVFGeEJFQWdEQ0FHTFFBQVFRSjBJZ0JxS0FJQUlRTWdDeUFGTFFBQVFRSjBJZ1ZxS0FJQUlRWWdBQ0FJYWlnQ0FDRUlJQUVnQWlBSExRQUFJZ0FnQlNBTmFpZ0NBR3BxTFFBQU9nQUFJQUVnQWlBQUlBWWdDR3BCRUhWcWFpMEFBRG9BQVNBQklBSWdBQ0FEYW1vdEFBQTZBQUlMQzRzQ0FRTi9Jd0JCRUdzaUNDUUFBa0FDUUNBQUtBTGNBeUlIS0FJa0JFQWdCMEVnYWtFQUlBUWdCU2dDQUVFQ2RHcEJBRUVCSUFjb0FpZ1FrUU1nQjBFQU5nSWtJQVVnQlNnQ0FFRUJhallDQUNBSElBY29BaXhCQVdzMkFpd01BUXNnQnlnQ0xDRUpJQWdnQkNBRktBSUFJZ05CQW5ScUlnUW9BZ0EyQWdnZ0NBSi9JQWtnQmlBRGF5SURJQU1nQ1VzYklnTkJBaUFEUVFKSkd5SURRUUpQQkVBZ0JDZ0NCQXdCQ3lBSFFRRTJBaVFnQnlnQ0lBczJBZ3dnQUNBQklBSW9BZ0FnQ0VFSWFpQUhLQUlNRVFjQUlBY29BaVFoQUNBRklBVW9BZ0FnQTJvMkFnQWdCeUFIS0FJc0lBTnJOZ0lzSUFBTkFRc2dBaUFDS0FJQVFRRnFOZ0lBQ3lBSVFSQnFKQUFMaGdVQkRuOGdBa0VDZENJRklBRW9BZ2hxS0FJQUlRb2dBU2dDQkNBRmFpZ0NBQ0VMSUFFb0FnQWdBa0VEZEdvaUFTZ0NBQ0VISUFFb0FnUWhDQ0FES0FJRUlRSWdBeWdDQUNFRElBQW9BdEFDSVFRZ0FDZ0MzQU1pQVNnQ0hDRU9JQUVvQWhnaER5QUJLQUlVSVJBZ0FTZ0NFQ0VSSUFBb0FuQWlBVUVDVHdSL0lBRkJBWFloQ1FOQUlCQWdDeTBBQUVFQ2RDSUJhaWdDQUNFTUlBOGdDaTBBQUVFQ2RDSUdhaWdDQUNFRklBRWdEbW9vQWdBaEFTQURJQVFnQmlBUmFpZ0NBQ0lOSUFjdEFBQWlCbXBxTFFBQU9nQUFJQU1nQkNBR0lBRWdCV3BCRUhVaUJXcHFMUUFBT2dBQklBTWdCQ0FHSUF4cWFpMEFBRG9BQWlBRElBUWdEU0FITFFBQklnRnFhaTBBQURvQUF5QURJQVFnQVNBRmFtb3RBQUE2QUFRZ0F5QUVJQUVnREdwcUxRQUFPZ0FGSUFJZ0JDQU5JQWd0QUFBaUFXcHFMUUFBT2dBQUlBSWdCQ0FCSUFWcWFpMEFBRG9BQVNBQ0lBUWdBU0FNYW1vdEFBQTZBQUlnQWlBRUlBMGdDQzBBQVNJQmFtb3RBQUE2QUFNZ0FpQUVJQUVnQldwcUxRQUFPZ0FFSUFJZ0JDQUJJQXhxYWkwQUFEb0FCU0FDUVFacUlRSWdDRUVDYWlFSUlBTkJCbW9oQXlBSFFRSnFJUWNnQ2tFQmFpRUtJQXRCQVdvaEN5QUpRUUZySWdrTkFBc2dBQ2dDY0FVZ0FRdEJBWEVFUUNBUUlBc3RBQUJCQW5RaUFHb29BZ0FoQ1NBUElBb3RBQUJCQW5RaUFXb29BZ0FoQlNBQUlBNXFLQUlBSVFBZ0F5QUVJQUVnRVdvb0FnQWlBU0FITFFBQUlnWnFhaTBBQURvQUFDQURJQVFnQmlBQUlBVnFRUkIxSWdCcWFpMEFBRG9BQVNBRElBUWdCaUFKYW1vdEFBQTZBQUlnQWlBRUlBRWdDQzBBQUNJRGFtb3RBQUE2QUFBZ0FpQUVJQUFnQTJwcUxRQUFPZ0FCSUFJZ0JDQURJQWxxYWkwQUFEb0FBZ3NMR3dFQmZ5QUFLQUxjQXlJQlFRQTJBaVFnQVNBQUtBSjBOZ0lzQzRVREFRTi9Ba0FnQUFKL0lBQW9BcndESWdFb0FnZ0VRQ0FCUVFBMkFnZ2dBRUVBSUFBb0F1UURLQUlBRVFJQUlBQkJBaUFBS0FMSUF5Z0NBQkVDQUVFQ0RBRUxBa0FnQUNnQ1ZFVU5BQ0FBS0FLSUFRMEFBa0FnQUNnQ1hFVU5BQ0FBS0FKc1JRMEFJQUFnQVNnQ0dEWUM1QU1nQVVFQk5nSUlEQUVMSUFBb0FtUUVRQ0FBSUFFb0FoUTJBdVFEREFFTElBQW9BZ0FpQWtFdk5nSVVJQUFnQWlnQ0FCRUJBQXNnQUNBQUtBTFlBeWdDQUJFQkFDQUFJQUFvQXNRREtBSUlFUUVBSUFBb0FrUU5BU0FCS0FJUVJRUkFJQUFnQUNnQzRBTW9BZ0FSQVFBTElBQWdBQ2dDM0FNb0FnQVJBUUFnQUNnQ1ZBUkFJQUFnQVNnQ0NDQUFLQUxrQXlnQ0FCRUNBQXNnQUVFRFFRQWdBU2dDQ0JzZ0FDZ0N5QU1vQWdBUkFnQkJBQXNnQUNnQ3dBTW9BZ0FSQWdBTEFrQWdBQ2dDQ0NJQ1JRMEFJQUlnQVNnQ0RDSUROZ0lNSUFJZ0EwRUNRUUVnQVNnQ0NCdHFJZ0UyQWhBZ0FDZ0NRRVVOQUNBQUtBTE1BeWdDRkEwQUlBSkJBa0VCSUFBb0Ftd2JJQUZxTmdJUUN3c3ZBUUYvSUFBb0Fyd0RJUUVnQUNnQ1ZBUkFJQUFnQUNnQzVBTW9BZ2dSQVFBTElBRWdBU2dDREVFQmFqWUNEQXNjQUNBQVFRQkJBRUVBSUFFZ0FpQURJQUFvQXNnREtBSUVFUXdBQzJFQkFuOENRQ0FBS0FMQUF5SUVLQUl3SUFRb0FqUWlCVThFUUNBQUlBUkJDR29nQUNnQ3hBTW9BZ3dSQXdCRkRRRWdCRUVBTmdJd0lBUW9BalFoQlFzZ0FDQUVRUWhxSUFSQk1Hb2dCU0FCSUFJZ0F5QUFLQUxJQXlnQ0JCRU1BQXNMdUFjQkQzOENRQ0FBS0FMQUF5SUVLQUk0UlFSQUlBQWdCQ0FFS0FKRVFRSjBhaWdDUENBQUtBTEVBeWdDREJFREFFVU5BU0FFUVFFMkFqZ2dCQ0FFS0FKTVFRRnFOZ0pNQ3dKQUFrQUNRQ0FFS0FKSURnTUJBZ0FEQ3lBQUlBUWdCQ2dDUkVFQ2RHb29BandnQkVFd2FpQUVLQUkwSUFFZ0FpQURJQUFvQXNnREtBSUVFUXdBSUFRb0FqQWdCQ2dDTkVrTkFpQUVRUUEyQWtnZ0FpZ0NBQ0FEVHcwQ0N5QUVRUUEyQWpBZ0JDQUFLQUxJQWlJTlFRRnJOZ0kwQWtBZ0JDZ0NUQ0FBS0FMTUFrY05BQ0FBS0FJa0loQkJBRXdOQUNBQUtBTEFBeUlPSUE0b0FrUkJBblJxSVJFZ0FDZ0MyQUVoQndOQUlBY29BakFnQnlnQ0tDQUhLQUlNYkNJRmNDSUdJQVVnQmhzaEJpQUZJQTF0SVFVZ0NFVUVRQ0FPSUFaQkFXc2dCVzFCQVdvMkFqUUxBa0FnQlVFQVRBMEFJQVZCQVhRaUJVRUJJQVZCQVVvYklnbEJBM0VoRHlBUktBSThJQWhCQW5ScUtBSUFJZ29nQmtFQ2RHcEJCR3NoQzBFQUlReEJBQ0VGSUFsQkFXdEJBMDhFUUNBSlFmei8vLzhIY1NFU1FRQWhDUU5BSUFvZ0JTQUdha0VDZEdvZ0N5Z0NBRFlDQUNBS0lBVkJBWElnQm1wQkFuUnFJQXNvQWdBMkFnQWdDaUFGUVFKeUlBWnFRUUowYWlBTEtBSUFOZ0lBSUFvZ0JVRURjaUFHYWtFQ2RHb2dDeWdDQURZQ0FDQUZRUVJxSVFVZ0NVRUVhaUlKSUJKSERRQUxDeUFQUlEwQUEwQWdDaUFGSUFacVFRSjBhaUFMS0FJQU5nSUFJQVZCQVdvaEJTQU1RUUZxSWd3Z0QwY05BQXNMSUFkQjJBQnFJUWNnQ0VFQmFpSUlJQkJIRFFBTEN5QUVRUUUyQWtnTElBQWdCQ0FFS0FKRVFRSjBhaWdDUENBRVFUQnFJQVFvQWpRZ0FTQUNJQU1nQUNnQ3lBTW9BZ1FSREFBZ0JDZ0NNQ0FFS0FJMFNRMEFJQUFvQXNnQ0lRRUNRQ0FFS0FKTVFRRkhEUUFnQUNnQ0pDSUtRUUJNRFFBZ0FVRUNhaUVMSUFGQkFXb2hEaUFBS0FMQUF5RUdJQUFvQXRnQklRZEJBQ0VJQTBBZ0J5Z0NLQ0FIS0FJTWJDQUJiU0lBUVFCS0JFQWdDRUVDZENJRElBWW9Ba0JxS0FJQUlRSWdCaWdDUENBRGFpZ0NBQ0VESUFBZ0Myd2hDU0FBSUE1c0lROUJBQ0VGQTBBZ0F5QUZJQUJyUVFKMElneHFJQU1nQlNBUGFrRUNkQ0lOYWlnQ0FEWUNBQ0FDSUF4cUlBSWdEV29vQWdBMkFnQWdBeUFGSUFscVFRSjBJZ3hxSUFNZ0JVRUNkQ0lOYWlnQ0FEWUNBQ0FDSUF4cUlBSWdEV29vQWdBMkFnQWdCVUVCYWlJRklBQkhEUUFMQ3lBSFFkZ0FhaUVISUFoQkFXb2lDQ0FLUncwQUN3c2dCRUVBTmdJNElBUkJBallDU0NBRUlBRkJBbW8yQWpRZ0JDQUJRUUZxTmdJd0lBUWdCQ2dDUkVFQmN6WUNSQXNMclFjQkVYOGdBQ2dDd0FNaEJ3SkFBa0FDUUNBQkRnTUFBZ0VDQ3lBQUtBTGNBeWdDQ0FSQUlBZEJ5d0UyQWdRZ0FDZ0NKQ0lRUVFCS0JFQWdBQ2dDeUFJaURrRUNheUVSSUE1QkFtb2hFaUFBS0FMWUFTRU5BMEFnRDBFQ2RDSUFJQWNvQWtCcUtBSUFJUUVnQnlnQ1BDQUFhaWdDQUNFQ0lBQWdCMm9vQWdnaEJBSkFJQTBvQWlnZ0RTZ0NER3dnRG0waUJTQVNiQ0lKUVFCTURRQkJBQ0VHUVFBaEFDQUpRUUZyUVFOUEJFQWdDVUY4Y1NFTFFRQWhDZ05BSUFFZ0FFRUNkQ0lEYWlBRElBUnFLQUlBSWdnMkFnQWdBaUFEYWlBSU5nSUFJQUVnQTBFRWNpSUlhaUFFSUFocUtBSUFJZ3cyQWdBZ0FpQUlhaUFNTmdJQUlBRWdBMEVJY2lJSWFpQUVJQWhxS0FJQUlndzJBZ0FnQWlBSWFpQU1OZ0lBSUFFZ0EwRU1jaUlEYWlBRElBUnFLQUlBSWdnMkFnQWdBaUFEYWlBSU5nSUFJQUJCQkdvaEFDQUtRUVJxSWdvZ0MwY05BQXNMSUFsQkEzRWlDVVVOQUFOQUlBRWdBRUVDZENJRGFpQURJQVJxS0FJQUlnbzJBZ0FnQWlBRGFpQUtOZ0lBSUFCQkFXb2hBQ0FHUVFGcUlnWWdDVWNOQUFzTEFrQWdCVUVBVEEwQUlBVkJBWFFpQmtFQklBWkJBVW9iSWdwQkFYRWhDQ0FGSUJGc0lRTWdCU0FPYkNFSlFRQWhBQ0FHUVFKT0JFQWdDa0grLy8vL0IzRWhDa0VBSVFZRFFDQUJJQUFnQTJwQkFuUWlDMm9nQkNBQUlBbHFRUUowSWd4cUtBSUFOZ0lBSUFFZ0RHb2dCQ0FMYWlnQ0FEWUNBQ0FCSUFCQkFYSWlDeUFEYWtFQ2RDSU1haUFFSUFrZ0MycEJBblFpQzJvb0FnQTJBZ0FnQVNBTGFpQUVJQXhxS0FJQU5nSUFJQUJCQW1vaEFDQUdRUUpxSWdZZ0NrY05BQXNMSUFnRVFDQUJJQUFnQTJwQkFuUWlCbW9nQkNBQUlBbHFRUUowSWdCcUtBSUFOZ0lBSUFBZ0FXb2dCQ0FHYWlnQ0FEWUNBQXRCQUNFRVFRQWhBU0FGUVFGclFRTlBCRUFnQlVGOGNTRUdRUUFoQUFOQUlBSWdBU0FGYTBFQ2RHb2dBaWdDQURZQ0FDQUNJQUZCQVhJZ0JXdEJBblJxSUFJb0FnQTJBZ0FnQWlBQlFRSnlJQVZyUVFKMGFpQUNLQUlBTmdJQUlBSWdBVUVEY2lBRmEwRUNkR29nQWlnQ0FEWUNBQ0FCUVFScUlRRWdBRUVFYWlJQUlBWkhEUUFMQ3lBRlFRTnhJZ0JGRFFBRFFDQUNJQUVnQld0QkFuUnFJQUlvQWdBMkFnQWdBVUVCYWlFQklBUkJBV29pQkNBQVJ3MEFDd3NnRFVIWUFHb2hEU0FQUVFGcUlnOGdFRWNOQUFzTElBZEJBRFlDVENBSFFnQTNBa1FnQjBFQU5nSTREd3NnQjBITUFUWUNCQ0FISUFjb0FqUTJBakFQQ3lBSFFjMEJOZ0lFRHdzZ0FDZ0NBQ0lCUVFNMkFoUWdBQ0FCS0FJQUVRRUFDNVlMQVMxL0l3QkJnQUZySWdna0FDQUFLQUxNQWtFQmF5RXBJQUFvQXNRRElSUUNmd0pBQTBBZ0FDZ0NrQUVpQkNBQUtBS1lBU0lHU2cwQklBQW9Bc3dESWdzb0FoUU5BU0FFSUFaR0JFQWdBQ2dDbEFFZ0FDZ0NuQUVnQUNnQ25BTkZha3NOQWdzZ0FDQUxLQUlBRVFBQURRQUxRUUFNQVFzZ0FDZ0NKRUVBU2dSQUlBQW9BdGdCSVFrRFFBSkFJQWtvQWpSRkRRQUNmeUFBS0FLY0FTSVZJQ2xQSWlwRkJFQWdDU2dDRENJRVFRRjBJUWNnQkF3QkN5QUpLQUlnSUFrb0Fnd2lCSEFpQmlBRUlBWWJJZ2NMSVJZQ2Z5QVZCRUFnQUNBVUlBNUJBblJxS0FKSUlBUWdGVUVCYTJ3Z0JDQUhha0VBSUFBb0FnUW9BaUFSQ2dBZ0NTZ0NERUVDZEdvTUFRc2dBQ0FVSUE1QkFuUnFLQUpJUVFBZ0IwRUFJQUFvQWdRb0FpQVJDZ0FMSVNzZ0ZrRUFUQTBBSUE1QkFuUWlDeUFBS0FMWUEyb29BZ1FoTENBV1FRRnJJUzBnRkNnQ2NDQU9RUmhzYWlFUElBa29BbEFpQkM4QkJDSUdRUWgwSVJ3Z0JrRUhkQ0VkSUFRdkFSSWlCa0VJZENFZUlBWkJCM1FoSHlBRUx3RUFJZ1pCQld3aExpQUVMd0VnSWdkQkNIUWhJQ0FIUVFkMElTRWdCa0VKYkNFaUlBUXZBUkFpQjBFSWRDRWpJQWRCQjNRaEpDQUVMd0VDSWdSQkNIUWhKU0FFUVFkMElTWWdCa0VrYkNFbklBRWdDMm9vQWdBaEYwRUFJUkFEUUNBcklCQkJBblJxSWdRb0FnQWlCeUVOSUJBZ0ZYSUVRQ0FFUVFScktBSUFJUTBMSUFjaEVTQUpLQUljUVFGcklTaEJBQ0VZSUNvZ0VDQXRSbkZGQkVBZ0JDZ0NCQ0VSQ3lBUkxnRUFJaGtoQkNBSExnRUFJaEloQmlBTkxnRUFJaG9oQzBFQUlSc0RRQ0FMSVFVZ0dpRUxJQVloQ2lBU0lRWWdCQ0VNSUJraEJDQUlJQWRCZ0FFUVBob2dHQ0FvU1FSQUlCRXVBWUFCSVJrZ0RTNEJnQUVoR2lBSExnR0FBU0VTQ3dKQUlBOG9BZ1FpQTBVTkFDQUlMd0VDRFFBZ0NBSi9JQ2NnQ2lBU2Eyd2lBa0VBVGdSQUlBSWdKbW9nSlcwaUFpQURRUUJNRFFFYUlBSkJBU0FEZENJRFFRRnJJQUlnQTBnYkRBRUxRUUFnSmlBQ2F5QWxiU0lDUVFFZ0EzUWlFMEVCYXlBQ0lCTklHeUFDSUFOQkFFb2Jhd3M3QVFJTEFrQWdEeWdDQ0NJRFJRMEFJQWd2QVJBTkFDQUlBbjhnSnlBTElBUnJiQ0lDUVFCT0JFQWdBaUFrYWlBamJTSUNJQU5CQUV3TkFSb2dBa0VCSUFOMElnTkJBV3NnQWlBRFNCc01BUXRCQUNBa0lBSnJJQ050SWdKQkFTQURkQ0lUUVFGcklBSWdFMGdiSUFJZ0EwRUFTaHRyQ3pzQkVBc0NRQ0FQS0FJTUlnTkZEUUFnQ0M4QklBMEFJQWdDZnlBaUlBc2dCa0VCZEdzZ0JHcHNJZ0pCQUU0RVFDQUNJQ0ZxSUNCdElnSWdBMEVBVEEwQkdpQUNRUUVnQTNRaUEwRUJheUFDSUFOSUd3d0JDMEVBSUNFZ0Ftc2dJRzBpQWtFQklBTjBJaE5CQVdzZ0FpQVRTQnNnQWlBRFFRQktHMnNMT3dFZ0N3SkFJQThvQWhBaUEwVU5BQ0FJTHdFU0RRQWdDQUovSUM0Z0JTQU1JQnBxYXlBWmFtd2lCVUVBVGdSQUlBVWdIMm9nSG0waUJTQURRUUJNRFFFYUlBVkJBU0FEZENJTVFRRnJJQVVnREVnYkRBRUxRUUFnSHlBRmF5QWViU0lGUVFFZ0EzUWlERUVCYXlBRklBeElHeUFGSUFOQkFFb2Jhd3M3QVJJTEFrQWdEeWdDRkNJRlJRMEFJQWd2QVFRTkFDQUlBbjhnSWlBS0lBWkJBWFJySUJKcWJDSUtRUUJPQkVBZ0NpQWRhaUFjYlNJS0lBVkJBRXdOQVJvZ0NrRUJJQVYwSWdWQkFXc2dCU0FLU2hzTUFRdEJBQ0FkSUFwcklCeHRJZ3BCQVNBRmRDSU1RUUZySUFvZ0RFZ2JJQW9nQlVFQVNodHJDenNCQkFzZ0FDQUpJQWdnRnlBYklDd1JCZ0FnRVVHQUFXb2hFU0FOUVlBQmFpRU5JQWRCZ0FGcUlRY2dDU2dDSkNBYmFpRWJJQmhCQVdvaUdDQW9UUTBBQ3lBWElBa29BaWhCQW5ScUlSY2dFRUVCYWlJUUlCWkhEUUFMQ3lBSlFkZ0FhaUVKSUE1QkFXb2lEaUFBS0FJa1NBMEFDd3NnQUNBQUtBS2NBVUVCYWlJQk5nS2NBVUVEUVFRZ0FTQUFLQUxNQWtrYkN5RUFJQWhCZ0FGcUpBQWdBQXY2QlFFVWZ5QUFLQUxNQWlFRUFrQWdBQ2dDeEFNaUJTZ0NHQ0lKSUFVb0Fod2lBa2dFUUNBRVFRRnJJUk1nQUNnQzZBSkJBV3NoRFNBRlFTQnFJUXNnQlNnQ0ZDRUdBMEFnQmlBTlRRUkFBMEFnQUNnQ3RBTUVRQ0FMS0FJQVFRQWdBQ2dDOEFKQkIzUVFPQm9MSUFBZ0N5QUFLQUxVQXlnQ0JCRURBRVVOQkNBQUtBTFVBaUlDUVFCS0JFQkJBQ0VIUVFBaERnTkFBa0FnQUNBT1FRSjBhaWdDMkFJaUF5Z0NORVVFUUNBREtBSkFJQWRxSVFjTUFRc2dBeWdDUENJRVFRQk1EUUFnQXlnQ1JDQUdiQ0VNSUFNb0FnUkJBblFpQWlBQUtBTFlBMm9vQWdRaER5QUJJQUpxS0FJQUlBTW9BaWdpQWlBSmJFRUNkR29oQ2lBRFFUaEJ5QUFnQmlBTlNSdHFLQUlBSWdoQkFTQUlRUUZLR3lJUVFYNXhJUlFnRUVFQmNTRVZJQWhCQUV3aEVVRUFJUWdEUUFKQUFrQWdFeUFBS0FLVUFVMEVRQ0FES0FKTUlBZ2dDV3BNSUJGeVJRMEJEQUlMSUJFTkFRdEJBQ0VFSUF3aEFrRUFJUklnRUVFQlJ3UkFBMEFnQUNBRElBc2dCQ0FIYWtFQ2RHb29BZ0FnQ2lBQ0lBOFJCZ0FnQUNBRElBc2dCRUVCY2lBSGFrRUNkR29vQWdBZ0NpQURLQUlrSUFKcUlnSWdEeEVHQUNBRVFRSnFJUVFnQXlnQ0pDQUNhaUVDSUJKQkFtb2lFaUFVUncwQUN3c2dGUVJBSUFBZ0F5QUZJQVFnQjJwQkFuUnFLQUlnSUFvZ0FpQVBFUVlBQ3lBREtBSThJUVFnQXlnQ0tDRUNDeUFLSUFKQkFuUnFJUW9nQXlnQ09DQUhhaUVISUFoQkFXb2lDQ0FFU0EwQUN5QUFLQUxVQWlFQ0N5QU9RUUZxSWc0Z0FrZ05BQXNMSUFaQkFXb2lCaUFOVFEwQUN5QUZLQUljSVFJTFFRQWhCaUFGUVFBMkFoUWdDVUVCYWlJSklBSklEUUFMSUFBb0Fzd0NJUVFMUVFFaEFpQUFJQUFvQXB3QlFRRnFOZ0tjQVNBQUlBQW9BcFFCUVFGcUlnRTJBcFFCSUFFZ0JFa0VRQ0FBS0FMRUF5RU1JQUFvQXRRQ1FRRk1CRUFnQUNnQzJBSkJERUhNQUNBQklBUkJBV3RKRzJvb0FnQWhBZ3NnREVJQU53SVVJQXdnQWpZQ0hFRUREd3NnQUNBQUtBTE1BeWdDREJFQkFFRUVEd3NnQlNBR05nSVVJQVVnQ1RZQ0dFRUFDN0FGQVJOL0l3QkJFR3NpQ0NRQUlBQW9Bc1FESVFNZ0FDZ0MxQUpCQUVvRVFBTkFJQWdnQVVFQ2RDSUNhaUFBSUFNZ0FDQUNhaWdDMkFJaUFpZ0NCRUVDZEdvb0FrZ2dBaWdDRENJQ0lBQW9BcFFCYkNBQ1FRRWdBQ2dDQkNnQ0lCRUtBRFlDQUNBQlFRRnFJZ0VnQUNnQzFBSklEUUFMQ3dKL0lBTW9BaGdpQnlBREtBSWNJZ0pJQkVBZ0EwRWdhaUVOSUFBb0F1Z0NJUUVnQXlnQ0ZDRUVBMEFnQVNBRVN3UkFBMEJCQUNFSlFRQWhBaUFBS0FMVUFpSU9RUUJLQkVBRFFDQUFJQWxCQW5RaUFXb29BdGdDSWdVb0Fqd2lEMEVBU2dSQUlBVW9BamdpQlNBRWJDRVFJQVZCZkhFaEVTQUZRUU54SVFzZ0JVRUJheUVTSUFFZ0NHb29BZ0FoRTBFQUlRb0RRQUpBSUFWQkFFd05BQ0FUSUFjZ0NtcEJBblJxS0FJQUlCQkJCM1JxSVFGQkFDRU1JQkpCQTA4RVFBTkFJQU1nQWtFQ2RHb2lCaUFCUVlBQmFqWUNKQ0FHSUFFMkFpQWdCaUFCUVlBQ2FqWUNLQ0FHSUFGQmdBTnFOZ0lzSUFKQkJHb2hBaUFCUVlBRWFpRUJJQXhCQkdvaURDQVJSdzBBQ3d0QkFDRUdJQXRGRFFBRFFDQURJQUpCQW5ScUlBRTJBaUFnQWtFQmFpRUNJQUZCZ0FGcUlRRWdCa0VCYWlJR0lBdEhEUUFMQ3lBS1FRRnFJZ29nRDBjTkFBc0xJQWxCQVdvaUNTQU9SdzBBQ3dzZ0FDQU5JQUFvQXRRREtBSUVFUU1BUlFSQUlBTWdCRFlDRkNBRElBYzJBaGhCQUF3RkN5QUVRUUZxSWdRZ0FDZ0M2QUlpQVVrTkFBc2dBeWdDSENFQ0MwRUFJUVFnQTBFQU5nSVVJQWRCQVdvaUJ5QUNTQTBBQ3d0QkFTRUNJQUFnQUNnQ2xBRkJBV29pQVRZQ2xBRWdBQ2dDekFJaUJDQUJTd1JBSUFBb0FzUURJUU1nQUNnQzFBSkJBVXdFUUNBQUtBTFlBa0VNUWN3QUlBRWdCRUVCYTBrYmFpZ0NBQ0VDQ3lBRFFnQTNBaFFnQXlBQ05nSWNRUU1NQVFzZ0FDQUFLQUxNQXlnQ0RCRUJBRUVFQ3lFQklBaEJFR29rQUNBQkM2WURBUTEvSUFBb0Fzd0NRUUZySVFzZ0FDZ0N4QU1oREFKQUEwQWdBQ2dDa0FFaUF5QUFLQUtZQVNJRVRnUkFJQU1nQkVjTkFpQUFLQUtVQVNBQUtBS2NBVXNOQWdzZ0FDQUFLQUxNQXlnQ0FCRUFBQTBBQzBFQUR3c2dBQ2dDSkVFQVNnUkFJQUFvQXRnQklRSURRQUpBSUFJb0FqUkZEUUFnQUNBTUlBVkJBblFpQTJvb0FrZ2dBaWdDRENJRUlBQW9BcHdCYkNBRVFRQWdBQ2dDQkNnQ0lCRUtBQ0VOQW44Z0N5QUFLQUtjQVVzRVFDQUNLQUlNREFFTElBSW9BaUFnQWlnQ0RDSUVjQ0lHSUFRZ0Joc0xJZ1pCQUV3TkFDQUFLQUxZQXlBRGFpZ0NCQ0VPSUFFZ0Eyb29BZ0FoQnlBQ0tBSWNJUU5CQUNFSUEwQkJBQ0VFSUFNRVFDQU5JQWhCQW5ScUtBSUFJUU5CQUNFSlFRQWhDZ05BSUFBZ0FpQURJQWNnQ1NBT0VRWUFJQU5CZ0FGcUlRTWdBaWdDSkNBSmFpRUpJQXBCQVdvaUNpQUNLQUljSWdSSkRRQUxDeUFISUFJb0FpaEJBblJxSVFjZ0JDRURJQWhCQVdvaUNDQUdSdzBBQ3dzZ0FrSFlBR29oQWlBRlFRRnFJZ1VnQUNnQ0pFZ05BQXNMSUFBZ0FDZ0NuQUZCQVdvaUFUWUNuQUZCQTBFRUlBRWdBQ2dDekFKSkd3dE5BUUovSUFCQkFEWUNsQUZCQVNFQklBQW9Bc1FESVFJZ0FDZ0MxQUpCQVV3RVFDQUFLQUxZQWtITUFFRU1JQUFvQXN3Q1FRRkdHMm9vQWdBaEFRc2dBa0lBTndJVUlBSWdBVFlDSEF2Y0FnRUpmeUFBS0FMRUF5SUJLQUlRQkVBZ0FRSi9Ba0FnQUNnQ1VFVU5BQ0FBS0FMZ0FVVU5BQ0FBS0FLZ0FVVU5BQ0FCS0FKd0lnSkZCRUFnQVNBQVFRRWdBQ2dDSkVFWWJDQUFLQUlFS0FJQUVRUUFJZ0kyQW5BTElBQW9BaVJCQUV3TkFDQUFLQUxZQVNFREEwQWdBeWdDVUNJQlJRMEJJQUV2QVFCRkRRRWdBUzhCQWtVTkFTQUJMd0VRUlEwQklBRXZBU0JGRFFFZ0FTOEJFa1VOQVNBQkx3RUVSUTBCSUFBb0FxQUJJQVZCQ0hScUlnRW9BZ0JCQUVnTkFTQUNJQUVvQWdRMkFnUWdBU2dDQkNFR0lBSWdBU2dDQ0RZQ0NDQUJLQUlJSVFjZ0FpQUJLQUlNTmdJTUlBRW9BZ3doQ0NBQ0lBRW9BaEEyQWhBZ0FTZ0NFQ0VKSUFJZ0FTZ0NGRFlDRkVFQklBUWdDU0FCS0FJVWNpQUlJQVlnQjNKeWNoc2hCQ0FEUWRnQWFpRURJQUpCR0dvaEFpQUZRUUZxSWdVZ0FDZ0NKRWdOQUF0QnlRRWdCQTBCR2d0QnhRRUxOZ0lNQ3lBQVFRQTJBcHdCQy9JS0FRNS9Jd0JCTUdzaUJDUUFJQUFvQXRRRElRY0Nmd0pBSUFBb0FwZ0NSUTBBSUFjb0Fpd05BQ0FBS0FMUUF5SURJQU1vQWhnZ0J5Z0NFRUVJYldvMkFoZ2dCMEVBTmdJUVFRQWdBQ0FES0FJSUVRQUFSUTBCR2lBQUtBTFVBa0VBU2dSQVFRQWhBd05BSUFjZ0EwRUNkR3BCQURZQ0dDQURRUUZxSWdNZ0FDZ0MxQUpJRFFBTEN5QUhRUUEyQWhRZ0J5QUFLQUtZQWpZQ0xDQUFLQUs0QXcwQUlBZEJBRFlDS0FzZ0J5Z0NLRVVFUUNBQUtBSzBBeUVOSUFBb0FyQURJUThnQkNBQU5nSW9JQVFnQUNnQ0dDSUdLQUlBSWdnMkFoZ2dCQ0FHS0FJRUlnSTJBaHdnQnlnQ0VDRURJQWNvQWd3aEJTQUVJQWNvQWlRMkFoQWdCQ0FIS1FJY053TUlJQVFnQnlrQ0ZEY0RBQ0FBS0FMd0FrRUFTZ1JBQTBBZ0FTQU1RUUowSWd0cUtBSUFJUTRnQnlBTGFpSUtLQUprSVFZQ2Z3SkFBbjhnQTBFSFRBUkFRUUFnQkVFWWFpQUZJQU5CQUJCbFJRMEhHaUFFS0FJZ0lRVkJBU0FFS0FJa0lnTkJDRWdOQVJvTElBWWdCU0FEUVFocmRVSC9BWEVpQWtFQ2RHb29BcEFCSWdnTkFVRUpDeUVDUVFBZ0JFRVlhaUFGSUFNZ0JpQUNFTm9CSWdKQkFFZ05CUm9nQkNnQ0lDRUZJQVFvQWlRTUFRc2dBaUFHYWtHUUNXb3RBQUFoQWlBRElBaHJDeUVESUFvb0Fvd0JJUWtDUUFKQUlBb29BclFCSWdvRVFDQUNCSDhnQWlBRFNnUkFRUUFnQkVFWWFpQUZJQU1nQWhCbFJRMElHaUFFS0FJZ0lRVWdCQ2dDSkNFREN5QUNRUUowSWdaQnNLd0NhaWdDQUNJSUlBVWdBeUFDYXlJRGRYRWlBa0VBSUFnZ0FpQUdRYXlzQW1vb0FnQktHMnNGUVFBTElRSWdCQ0FBSUF0cUtBTDBBa0VDZEdvaUJrRUVhaUFHS0FJRUlBSnFJZ0kyQWdBZ0RpQUNPd0VBUVFFaEJpQUtRUUpJRFFFRFFBSi9Ba0FDZnlBRFFRZE1CRUJCQUNBRVFSaHFJQVVnQTBFQUVHVkZEUXNhSUFRb0FpQWhCVUVCSUFRb0FpUWlBMEVJU0EwQkdnc2dDU0FGSUFOQkNHdDFRZjhCY1NJQ1FRSjBhaWdDa0FFaUNBMEJRUWtMSVFKQkFDQUVRUmhxSUFVZ0F5QUpJQUlRMmdFaUFrRUFTQTBKR2lBRUtBSWdJUVVnQkNnQ0pBd0JDeUFDSUFscVFaQUphaTBBQUNFQ0lBTWdDR3NMSVFNZ0FrRUVkaUVJQWtBZ0FrRVBjU0lDQkVBZ0FpQURTZ1JBUVFBZ0JFRVlhaUFGSUFNZ0FoQmxSUTBLR2lBRUtBSWdJUVVnQkNnQ0pDRURDeUFPSUE4Z0JpQUlhaUlHUVFKMGFpZ0NBRUVCZEdvZ0FrRUNkQ0lJUWJDc0Ftb29BZ0FpQ3lBRklBTWdBbXNpQTNWeElnSkJBQ0FMSUFJZ0NFR3NyQUpxS0FJQVNodHJPd0VBREFFTElBaEJEMGNOQkNBR1FROXFJUVlMSUFaQkFXb2lCaUFLU0EwQUN3d0JDMEVCSVFZZ0FrVU5BQ0FDSUFOS0JIOUJBQ0FFUVJocUlBVWdBeUFDRUdWRkRRWWFJQVFvQWlBaEJTQUVLQUlrQlNBREN5QUNheUVEQ3lBR0lBMUtEUUFEUUFKL0FrQUNmeUFEUVFkTUJFQkJBQ0FFUVJocUlBVWdBMEVBRUdWRkRRa2FJQVFvQWlBaEJVRUJJQVFvQWlRaUEwRUlTQTBCR2dzZ0NTQUZJQU5CQ0d0MVFmOEJjU0lDUVFKMGFpZ0NrQUVpQ0EwQlFRa0xJUUpCQUNBRVFSaHFJQVVnQXlBSklBSVEyZ0VpQWtFQVNBMEhHaUFFS0FJZ0lRVWdCQ2dDSkF3QkN5QUNJQWxxUVpBSmFpMEFBQ0VDSUFNZ0NHc0xJUU1nQWtFRWRpRUlBa0FnQWtFUGNTSUNCRUFnQWlBRFNnUi9RUUFnQkVFWWFpQUZJQU1nQWhCbFJRMElHaUFFS0FJZ0lRVWdCQ2dDSkFVZ0F3c2dBbXNoQXd3QkN5QUlRUTlIRFFJTElBWWdDR3BCQVdvaUJpQU5UQTBBQ3dzZ0RFRUJhaUlNSUFBb0F2QUNTQTBBQ3lBQUtBSVlJUVlnQkNnQ0dDRUlJQVFvQWh3aEFnc2dCaUFDTmdJRUlBWWdDRFlDQUNBSElBTTJBaEFnQnlBRk5nSU1JQWNnQkNnQ0VEWUNKQ0FISUFRcEF3ZzNBaHdnQnlBRUtRTUFOd0lVQ3lBSElBY29BaXhCQVdzMkFpeEJBUXNoQ0NBRVFUQnFKQUFnQ0F2bENnRU1meU1BUVRCcklnUWtBQ0FBS0FMVUF5RUdBbjhDUUNBQUtBS1lBa1VOQUNBR0tBSXNEUUFnQUNnQzBBTWlBeUFES0FJWUlBWW9BaEJCQ0cxcU5nSVlJQVpCQURZQ0VFRUFJQUFnQXlnQ0NCRUFBRVVOQVJvZ0FDZ0MxQUpCQUVvRVFFRUFJUU1EUUNBR0lBTkJBblJxUVFBMkFoZ2dBMEVCYWlJRElBQW9BdFFDU0EwQUN3c2dCa0VBTmdJVUlBWWdBQ2dDbUFJMkFpd2dBQ2dDdUFNTkFDQUdRUUEyQWlnTElBWW9BaWhGQkVBZ0JDQUFOZ0lvSUFRZ0FDZ0NHQ0lDS0FJQUlnZzJBaGdnQkNBQ0tBSUVJZ2syQWh3Z0JpZ0NFQ0VESUFZb0Fnd2hCU0FFSUFZb0FpUTJBaEFnQkNBR0tRSWNOd01JSUFRZ0Jpa0NGRGNEQUNBQUtBTHdBa0VBU2dSQUEwQWdBU0FMUVFKMElncHFLQUlBSVF3Z0JpQUthaUlJS0FKa0lRSUNmd0pBQW44Z0EwRUhUQVJBUVFBZ0JFRVlhaUFGSUFOQkFCQmxSUTBIR2lBRUtBSWdJUVZCQVNBRUtBSWtJZ05CQ0VnTkFSb0xJQUlnQlNBRFFRaHJkVUgvQVhFaUIwRUNkR29vQXBBQklna05BVUVKQ3lFSlFRQWdCRUVZYWlBRklBTWdBaUFKRU5vQklnSkJBRWdOQlJvZ0JDZ0NJQ0VGSUFRb0FpUU1BUXNnQWlBSGFrR1FDV290QUFBaEFpQURJQWxyQ3lFRElBZ29Bb3dCSVFrQ1FBSkFJQWdvQXJRQklnMEVRQ0FDQkg4Z0FpQURTZ1JBUVFBZ0JFRVlhaUFGSUFNZ0FoQmxSUTBJR2lBRUtBSWdJUVVnQkNnQ0pDRURDeUFDUVFKMElnZEJzS3dDYWlnQ0FDSUlJQVVnQXlBQ2F5SURkWEVpQWtFQUlBZ2dBaUFIUWF5c0Ftb29BZ0JLRzJzRlFRQUxJUWdnQkNBQUlBcHFLQUwwQWtFQ2RHb2lBa0VFYWlBQ0tBSUVJQWhxSWdJMkFnQWdEQ0FDT3dFQVFRRWhDQ0FOUVFKSURRRURRQUovQWtBQ2Z5QURRUWRNQkVCQkFDQUVRUmhxSUFVZ0EwRUFFR1ZGRFFzYUlBUW9BaUFoQlVFQklBUW9BaVFpQTBFSVNBMEJHZ3NnQ1NBRklBTkJDR3QxUWY4QmNTSUNRUUowYWlnQ2tBRWlCdzBCUVFrTElRSkJBQ0FFUVJocUlBVWdBeUFKSUFJUTJnRWlBa0VBU0EwSkdpQUVLQUlnSVFVZ0JDZ0NKQXdCQ3lBQ0lBbHFRWkFKYWkwQUFDRUNJQU1nQjJzTElRTWdBa0VFZGlFSEFrQWdBa0VQY1NJQ0JFQWdBaUFEU2dSQVFRQWdCRUVZYWlBRklBTWdBaEJsUlEwS0dpQUVLQUlnSVFVZ0JDZ0NKQ0VEQ3lBTUlBY2dDR29pQjBFQ2RFR3dzd0pxS0FJQVFRRjBhaUFDUVFKMElnaEJzS3dDYWlnQ0FDSUtJQVVnQXlBQ2F5SURkWEVpQWtFQUlBb2dBaUFJUWF5c0Ftb29BZ0JLRzJzN0FRQU1BUXNnQjBFUFJ3MEVJQWhCRDJvaEJ3c2dCMEVCYWlJSUlBMUlEUUFMSUFkQlBrd05BUXdDQzBFQklRZ2dBa1VOQUNBQ0lBTktCSDlCQUNBRVFSaHFJQVVnQXlBQ0VHVkZEUVlhSUFRb0FpQWhCU0FFS0FJa0JTQURDeUFDYXlFREN3TkFBbjhDUUFKL0lBTkJCMHdFUUVFQUlBUkJHR29nQlNBRFFRQVFaVVVOQ1JvZ0JDZ0NJQ0VGUVFFZ0JDZ0NKQ0lEUVFoSURRRWFDeUFKSUFVZ0EwRUlhM1ZCL3dGeElnSkJBblJxS0FLUUFTSUhEUUZCQ1FzaEFrRUFJQVJCR0dvZ0JTQURJQWtnQWhEYUFTSUNRUUJJRFFjYUlBUW9BaUFoQlNBRUtBSWtEQUVMSUFJZ0NXcEJrQWxxTFFBQUlRSWdBeUFIYXdzaEF5QUNRUVIySVFjQ1FDQUNRUTl4SWdJRVFDQUNJQU5LQkg5QkFDQUVRUmhxSUFVZ0F5QUNFR1ZGRFFnYUlBUW9BaUFoQlNBRUtBSWtCU0FEQ3lBQ2F5RUREQUVMSUFkQkQwY05BZ3NnQnlBSWFrRUJhaUlJUWNBQVNBMEFDd3NnQzBFQmFpSUxJQUFvQXZBQ1NBMEFDeUFFS0FJY0lRa2dCQ2dDR0NFSUlBQW9BaGdoQWdzZ0FpQUpOZ0lFSUFJZ0NEWUNBQ0FHSUFNMkFoQWdCaUFGTmdJTUlBWWdCQ2dDRURZQ0pDQUdJQVFwQXdnM0Fod2dCaUFFS1FNQU53SVVDeUFHSUFZb0FpeEJBV3MyQWl4QkFRc2hCeUFFUVRCcUpBQWdCd3ZuQlFFTGZ5TUFRVEJySWdNa0FDQUFLQUtvQXlFS0lBQW9BdFFESVFRQ2Z3SkFJQUFvQXBnQ1JRMEFJQVFvQWl3TkFDQUFLQUxRQXlJRklBVW9BaGdnQkNnQ0VFRUliV28yQWhnZ0JFRUFOZ0lRUVFBZ0FDQUZLQUlJRVFBQVJRMEJHaUFBS0FMVUFrRUFTZ1JBUVFBaEJRTkFJQVFnQlVFQ2RHcEJBRFlDR0NBRlFRRnFJZ1VnQUNnQzFBSklEUUFMQ3lBRVFRQTJBaFFnQkNBQUtBS1lBallDTENBQUtBSzRBdzBBSUFSQkFEWUNLQXNnQkNnQ0tFVUVRQ0FESUFBMkFpZ2dBeUFBS0FJWUlnSW9BZ0FpQ0RZQ0dDQURJQUlvQWdRaUJqWUNIQ0FFS0FJUUlRVWdCQ2dDRENFSElBTWdCQ2dDSkRZQ0VDQURJQVFwQWh3M0F3Z2dBeUFFS1FJVU53TUFJQUFvQXZBQ1FRQktCRUJCQUNFSUEwQWdBU0FJUVFKMElnSnFLQUlBSVFzZ0JDQUFJQUFnQW1vb0F2UUNRUUowSWd4cUtBTFlBaWdDRkVFQ2RHb29BakFoQWdKL0FrQUNmeUFGUVFkTUJFQkJBQ0FEUVJocUlBY2dCVUVBRUdWRkRRY2FJQU1vQWlBaEIwRUJJQU1vQWlRaUJVRUlTQTBCR2dzZ0FpQUhJQVZCQ0d0MVFmOEJjU0lHUVFKMGFpZ0NrQUVpQ1EwQlFRa0xJUWxCQUNBRFFSaHFJQWNnQlNBQ0lBa1EyZ0VpQWtFQVNBMEZHaUFES0FJZ0lRY2dBeWdDSkF3QkN5QUNJQVpxUVpBSmFpMEFBQ0VDSUFVZ0NXc0xJUVVnQWdSL0lBSWdCVW9FUUVFQUlBTkJHR29nQnlBRklBSVFaVVVOQlJvZ0F5Z0NJQ0VISUFNb0FpUWhCUXNnQWtFQ2RDSUdRYkNzQW1vb0FnQWlDU0FISUFVZ0Ftc2lCWFZ4SWdKQkFDQUpJQUlnQmtHc3JBSnFLQUlBU2h0ckJVRUFDeUVHSUFNZ0RHb2lBa0VFYWlBQ0tBSUVJQVpxSWdJMkFnQWdDeUFDSUFwME93RUFJQWhCQVdvaUNDQUFLQUx3QWtnTkFBc2dBeWdDSENFR0lBTW9BaGdoQ0NBQUtBSVlJUUlMSUFJZ0JqWUNCQ0FDSUFnMkFnQWdCQ0FGTmdJUUlBUWdCellDRENBRUlBTW9BaEEyQWlRZ0JDQURLUU1JTndJY0lBUWdBeWtEQURjQ0ZBc2dCQ0FFS0FJc1FRRnJOZ0lzUVFFTElRWWdBMEV3YWlRQUlBWUxsUVlCREg4akFFRWdheUlESkFBZ0FDZ0MxQU1oQkFKL0FrQWdBQ2dDbUFKRkRRQWdCQ2dDTEEwQUlBQW9BdEFESWdJZ0FpZ0NHQ0FFS0FJUVFRaHRhallDR0NBRVFRQTJBaEJCQUNBQUlBSW9BZ2dSQUFCRkRRRWFJQUFvQXRRQ1FRQktCRUJCQUNFQ0EwQWdCQ0FDUVFKMGFrRUFOZ0lZSUFKQkFXb2lBaUFBS0FMVUFrZ05BQXNMSUFSQkFEWUNGQ0FFSUFBb0FwZ0NOZ0lzSUFBb0FyZ0REUUFnQkVFQU5nSW9DeUFFS0FJb1JRUkFBa0FnQkNnQ0ZDSUNCRUFnQWtFQmF5RUZEQUVMSUFNZ0FEWUNHQ0FESUFBb0FoZ2lBaWdDQURZQ0NDQURJQUlvQWdRMkFnd2dCQ2dDRUNFQ0lBUW9BZ3doQmdKL1FRQWdBQ2dDbkFNaUNDQUFLQUtnQXlJS1NnMEFHaUFFS0FKQUlRa2dBU2dDQUNFTElBQW9BckFESVF3Z0FDZ0NxQU1oRFFOQUFuOENRQUovSUFKQkIwd0VRRUVBSUFOQkNHb2dCaUFDUVFBUVpVVU5DQm9nQXlnQ0VDRUdRUUVnQXlnQ0ZDSUNRUWhJRFFFYUN5QUpJQVlnQWtFSWEzVkIvd0Z4SWdGQkFuUnFLQUtRQVNJRkRRRkJDUXNoQVVFQUlBTkJDR29nQmlBQ0lBa2dBUkRhQVNJQlFRQklEUVlhSUFNb0FoQWhCaUFES0FJVURBRUxJQUVnQ1dwQmtBbHFMUUFBSVFFZ0FpQUZhd3NoQWlBQlFRUjJJUWNDUUNBQlFROXhJZ1VFUUNBQ0lBVklCRUJCQUNBRFFRaHFJQVlnQWlBRkVHVkZEUWNhSUFNb0FoQWhCaUFES0FJVUlRSUxJQXNnRENBSElBaHFJZ0ZCQW5ScUtBSUFRUUYwYWlBRlFRSjBJZ2RCc0t3Q2FpZ0NBQ0lJSUFZZ0FpQUZheUlDZFhFaUJVRUFJQWdnQlNBSFFheXNBbW9vQWdCS0cyc2dEWFE3QVFBTUFRc2dCMEVQUndSQVFRQWdBVUVRU1EwREdpQUNJQWRJQkVCQkFDQURRUWhxSUFZZ0FpQUhFR1ZGRFFjYUlBTW9BaEFoQmlBREtBSVVJUUlMSUFkQkFuUkJzS3dDYWlnQ0FDQUdJQUlnQjJzaUFuVnhRWDhnQjNSQmYzTnFEQU1MSUFoQkQyb2hBUXNnQVVFQmFpRUlJQUVnQ2tnTkFBdEJBQXNoQlNBQUtBSVlJZ0FnQXlnQ0NEWUNBQ0FBSUFNb0FndzJBZ1FnQkNBQ05nSVFJQVFnQmpZQ0RBc2dCQ0FGTmdJVUN5QUVJQVFvQWl4QkFXczJBaXhCQVFzaEJTQURRU0JxSkFBZ0JRdXBBd0VJZnlNQVFTQnJJZ1FrQUNBQUtBTFVBeUVEQWtBQ1FDQUFLQUtZQWtVTkFDQURLQUlzRFFBZ0FDZ0MwQU1pQWlBQ0tBSVlJQU1vQWhCQkNHMXFOZ0lZSUFOQkFEWUNFQ0FBSUFJb0FnZ1JBQUJGRFFFZ0FDZ0MxQUpCQUVvRVFFRUFJUUlEUUNBRElBSkJBblJxUVFBMkFoZ2dBa0VCYWlJQ0lBQW9BdFFDU0EwQUN3c2dBMEVBTmdJVUlBTWdBQ2dDbUFJMkFpd2dBQ2dDdUFNTkFDQURRUUEyQWlnTElBUWdBRFlDR0NBRUlBQW9BaGdpQlNnQ0FDSUdOZ0lJSUFRZ0JTZ0NCQ0lITmdJTVFRRWhDU0FES0FJUUlRSWdBeWdDRENFSUlBQW9BdkFDUVFCS0JFQkJBU0FBS0FLb0EzUWhCa0VBSVFVRFFDQUNRUUJNQkVBZ0JFRUlhaUFJSUFKQkFSQmxSUVJBUVFBaENRd0VDeUFFS0FJUUlRZ2dCQ2dDRkNFQ0N5QUlJQUpCQVdzaUFuWkJBWEVFUUNBQklBVkJBblJxS0FJQUlnY2dCeThCQUNBR2Nqc0JBQXNnQlVFQmFpSUZJQUFvQXZBQ1NBMEFDeUFFS0FJTUlRY2dCQ2dDQ0NFR0lBQW9BaGdoQlFzZ0JTQUhOZ0lFSUFVZ0JqWUNBQ0FESUFJMkFoQWdBeUFJTmdJTUlBTWdBeWdDTEVFQmF6WUNMQXNnQkVFZ2FpUUFJQWtMdGdvQkVYOGpBRUdnQW1zaUF5UUFJQUFvQXRRRElRWUNRQUpBSUFBb0FwZ0NSUTBBSUFZb0Fpd05BQ0FBS0FMUUF5SUlJQWdvQWhnZ0JpZ0NFRUVJYldvMkFoZ2dCa0VBTmdJUUlBQWdDQ2dDQ0JFQUFFVU5BU0FBS0FMVUFrRUFTZ1JBQTBBZ0JpQUNRUUowYWtFQU5nSVlJQUpCQVdvaUFpQUFLQUxVQWtnTkFBc0xJQVpCQURZQ0ZDQUdJQUFvQXBnQ05nSXNJQUFvQXJnRERRQWdCa0VBTmdJb0N3SkFJQVlvQWloRkJFQWdBQ2dDc0FNaERTQUFLQUtnQXlFTElBQW9BcWdESVFRZ0F5QUFOZ0tZQWlBRElBQW9BaGdpQ0NnQ0FEWUNpQUlnQXlBSUtBSUVOZ0tNQWtGL0lBUjBJUTVCQVNBRWRDRU1JQVlvQWhBaEFpQUFLQUtjQXlFRUlBRW9BZ0FoQ2lBR0tBSU1JUVVDZndKQUlBWW9BaFFpQ0FSQURBRUxJQVlvQWtBaER3TkFBbjhDUUFKL0lBSkJCMHdFUUNBRFFZZ0NhaUFGSUFKQkFCQmxSUTBJSUFNb0FwQUNJUVZCQVNBREtBS1VBaUlDUVFoSURRRWFDeUFQSUFVZ0FrRUlhM1ZCL3dGeElnRkJBblJxS0FLUUFTSUlEUUZCQ1FzaEFTQURRWWdDYWlBRklBSWdEeUFCRU5vQklnRkJBRWdOQmlBREtBS1FBaUVGSUFNb0FwUUNEQUVMSUFFZ0QycEJrQWxxTFFBQUlRRWdBaUFJYXdzaEFpQUJRUVIySVFrQ1FBSkFBa0FDUUFKQUlBRkJEM0VPQWdJQkFBc2dBQ2dDQUNJQlFma0FOZ0lVSUFCQmZ5QUJLQUlFRVFJQUN5QUNRUUJNQkVBZ0EwR0lBbW9nQlNBQ1FRRVFaVVVOQ0NBREtBS1FBaUVGSUFNb0FwUUNJUUlMSUF3Z0RpQUZJQUpCQVdzaUFuWkJBWEViSVJBTUFRdEJBQ0VRSUFsQkQwWU5BRUVCSUFsMElRZ2dBVUVRU1EwRElBSWdDVWdFUUNBRFFZZ0NhaUFGSUFJZ0NSQmxSUTBISUFNb0FwQUNJUVVnQXlnQ2xBSWhBZ3NnQ1VFQ2RFR3dyQUpxS0FJQUlBVWdBaUFKYXlJQ2RYRWdDR29pQ0EwRERBRUxJQVFnQ3lBRUlBdEtHeUlTUVFGcUlRZ0NRQU5BQWtBZ0NpQU5JQVFpQVVFQ2RHb29BZ0JCQVhScUlnUXZBUUFFUUNBQ1FRQk1CRUFnQTBHSUFtb2dCU0FDUVFFUVpVVU5DaUFES0FLUUFpRUZJQU1vQXBRQ0lRSUxJQVVnQWtFQmF5SUNka0VCY1VVTkFTQU1JQVF1QVFBaUVYRU5BU0FFSUJFZ0RpQU1JQkZCQUVnYmFqc0JBQXdCQ3lBSlFRQk1EUUlnQ1VFQmF5RUpDeUFCUVFGcUlRUWdBU0FTUncwQUN5QUlJUUVMSUJBRVFDQUtJQTBnQVVFQ2RHb29BZ0FpQkVFQmRHb2dFRHNCQUNBRElBZEJBblJxSUFRMkFnQWdCMEVCYWlFSEN5QUJRUUZxSVFRZ0FTQUxTQTBCQ3d0QkFBd0JDeUFFSUFzZ0JDQUxTaHNoQ3dOQUFrQWdDaUFOSUFRaUFVRUNkR29vQWdCQkFYUnFJZ1F2QVFCRkRRQWdBa0VBVEFSQUlBTkJpQUpxSUFVZ0FrRUJFR1ZGRFFVZ0F5Z0NrQUloQlNBREtBS1VBaUVDQ3lBRklBSkJBV3NpQW5aQkFYRkZEUUFnRENBRUxnRUFJZ2x4RFFBZ0JDQUpJQTRnRENBSlFRQklHMm83QVFBTElBRkJBV29oQkNBQklBdEhEUUFMSUFoQkFXc0xJUUVnQUNnQ0dDSUFJQU1vQW9nQ05nSUFJQUFnQXlnQ2pBSTJBZ1FnQmlBQk5nSVVJQVlnQWpZQ0VDQUdJQVUyQWd3TElBWWdCaWdDTEVFQmF6WUNMRUVCSVFRTUFRc2dCMFVFUUVFQUlRUU1BUXNnQjBFQmF5RUFJQWRCQTNFaUFRUkFRUUFoQWdOQUlBb2dBeUFIUVFGcklnZEJBblJxS0FJQVFRRjBha0VBT3dFQUlBSkJBV29pQWlBQlJ3MEFDd3RCQUNFRUlBQkJBMGtOQUFOQUlBb2dCMEVDZENBRGFpSUFRUVJyS0FJQVFRRjBha0VBT3dFQUlBb2dBRUVJYXlnQ0FFRUJkR3BCQURzQkFDQUtJQUJCREdzb0FnQkJBWFJxUVFBN0FRQWdDaUFESUFkQkJHc2lCMEVDZEdvb0FnQkJBWFJxUVFBN0FRQWdCdzBBQ3dzZ0EwR2dBbW9rQUNBRUM4UUxBUWQvSUFBb0Fwd0RJUUlnQUNnQzFBTWhCQUpBSUFBb0F1QUJCRUFnQUNnQ29BTWhBUUpBQWtBQ1FDQUNSUVJBSUFGRkRRRU1BZ3NnQVNBQ1NBMEJJQUVnQUNnQ3RBTktEUUVnQUNnQzFBSkJBVWNOQVFzQ1FDQUFLQUtrQXlJQlJRUkFJQUFvQXFnRElRVU1BUXNnQVVFQmF5SUZJQUFvQXFnRFJ3MEJDeUFGUVE1SURRRUxJQUFvQWdBaUFTQUNOZ0lZSUFGQkVUWUNGQ0FBS0FJQUlBQW9BcUFETmdJY0lBQW9BZ0FnQUNnQ3BBTTJBaUFnQUNnQ0FDQUFLQUtvQXpZQ0pDQUFJQUFvQWdBb0FnQVJBUUFMSUFBb0F0UUNJZ0pCQUVvRVFBTkFJQUFvQXFBQklBQWdCMEVDZEdvb0F0Z0NLQUlFSWdOQkNIUnFJUVVDZjBFQUlBQW9BcHdESWdGRkRRQWFJQUVnQlNnQ0FFRUFUZzBBR2lBQUtBSUFJZ0VnQXpZQ0dDQUJRZllBTmdJVUlBQW9BZ0JCQURZQ0hDQUFRWDhnQUNnQ0FDZ0NCQkVDQUNBQUtBS2NBd3NpQWlBQUtBS2dBMHdFUUFOQUlBQW9BcVFESUFVZ0FrRUNkR29pQmlnQ0FDSUJRUUFnQVVFQVNodEhCRUFnQUNnQ0FDSUJJQU0yQWhnZ0FVSDJBRFlDRkNBQUtBSUFJQUkyQWh3Z0FFRi9JQUFvQWdBb0FnUVJBZ0FMSUFZZ0FDZ0NxQU0yQWdBZ0FpQUFLQUtnQTBnaEFTQUNRUUZxSVFJZ0FRMEFDd3NnQjBFQmFpSUhJQUFvQXRRQ0lnSklEUUFMQ3lBRVFiMEJRYjRCSUFBb0Fwd0RJZ0ViUWI4QlFjQUJJQUViSUFBb0FxUURHellDQkNBQ1FRQktCRUJCQUNFQ0EwQWdBQ0FDUVFKMElnWnFLQUxZQWlFQkFrQWdBQ2dDbkFORkJFQWdBQ2dDcEFNTkFTQUFRUUVnQVNnQ0ZDSUJJQVFnQVVFQ2RHcEJNR29Ra3dNTUFRc2dBRUVBSUFFb0FoZ2lBU0FFSUFGQkFuUnFJZ0ZCTUdvUWt3TWdCQ0FCS0FJd05nSkFDeUFFSUFacVFRQTJBaGdnQWtFQmFpSUNJQUFvQXRRQ1NBMEFDd3NnQkVFQU5nSVVEQUVMQWtBQ1FDQUNEUUFnQUNnQ3BBTU5BQ0FBS0FLb0F3MEFJQUFvQXR3QlJTQUFLQUtnQXlJQlFUOUtjUTBCSUFFZ0FDZ0N0QU5HRFFFTElBQW9BZ0FpQVVIOUFEWUNGQ0FBUVg4Z0FTZ0NCQkVDQUFzZ0JFSEJBVUhDQVNBQUtBSzBBMEUvUmhzMkFnUkJBQ0VDSUFBb0F0UUNRUUJLQkVBRFFDQUFRUUVnQUNBQ1FRSjBJZ1ZxS0FMWUFpSUdLQUlVSWdFZ0JDQUJRUUowYWtIRUFHb1Frd01nQUNnQ3RBTUVRQ0FBUVFBZ0JpZ0NHQ0lCSUFRZ0FVRUNkR3BCMUFCcUVKTURDeUFFSUFWcVFRQTJBaGdnQWtFQmFpSUNJQUFvQXRRQ1NBMEFDd3RCQUNFRklBQW9BdkFDUVFCTURRQURRQ0FFSUFWQkFuUWlBV29pQmlBRUlBQWdBQ0FCYWlnQzlBSkJBblJxS0FMWUFpSUJLQUlVUVFKMGFpZ0NSRFlDWkNBR0lBUWdBU2dDR0VFQ2RHb29BbFEyQW93QkFrQWdBU2dDTkVVRVFFRUFJUUlNQVFzZ0FTZ0NKQ0VESUFFb0FpZ2hBVUVCSVFJQ2Z3SkFBa0FDUUFKQUFrQUNRQUpBSUFBb0FyUUREakVJQmdZQUJnWUdCZ0VHQmdZR0JnWUNCZ1lHQmdZR0JnWURCZ1lHQmdZR0JnWUdCZ1FHQmdZR0JnWUdCZ1lHQmdZRkJndEJBU0FCUVFGcklBRkJBMnRCZmtrYlFRTjBRUUVnQTBFQmF5QURRUU5yUVg1SkcwRUNkR3BCNEtVQ2Fnd0dDMEVDSUFGQkFXc2dBVUVFYTBGOVNSdEJER3hCQWlBRFFRRnJJQU5CQkd0QmZVa2JRUUowYWtId3BRSnFEQVVMUVFNZ0FVRUJheUFCUVFWclFYeEpHMEVFZEVFRElBTkJBV3NnQTBFRmEwRjhTUnRCQW5ScVFhQ21BbW9NQkF0QkJDQUJRUUZySUFGQkJtdEJlMGtiUVJSc1FRUWdBMEVCYXlBRFFRWnJRWHRKRzBFQ2RHcEI0S1lDYWd3REMwRUZJQUZCQVdzZ0FVRUhhMEY2U1J0QkdHeEJCU0FEUVFGcklBTkJCMnRCZWtrYlFRSjBha0hRcHdKcURBSUxRUVlnQVVFQmF5QUJRUWhyUVhsSkcwRWNiRUVHSUFOQkFXc2dBMEVJYTBGNVNSdEJBblJxUWVDb0Ftb01BUXRCQnlBQlFRRnJJQUZCQ1d0QmVFa2JRUVYwUVFjZ0EwRUJheUFEUVFsclFYaEpHMEVDZEdwQnNLb0NhZ3NvQWdCQkFXb2hBZ3NnQmlBQ05nSzBBU0FGUVFGcUlnVWdBQ2dDOEFKSURRQUxDeUFFUVFBMkFpZ2dCRUlBTndJTUlBUWdBQ2dDbUFJMkFpd0xMUUVCZnlBQUtBTFFBeUlCSUFFb0FoZ2dBQ2dDMUFNaUFFRVFhaWdDQUVFSWJXbzJBaGdnQUVFQU5nSVFDOVFLQVE1L0lBQW9BdFFESVFVZ0FDZ0NtQUlFUUNBRklBVW9BamdpQkFSL0lBUUZJQUFRMGdJZ0JTZ0NPQXRCQVdzMkFqZ0xBa0FDUUNBRktBSVVRWDlHRFFBZ0FDZ0M4QUpCQUV3TkFDQUFLQUt3QXlFT0lBVkJ2QUZxSVE4RFFDQUJJQXRCQW5RaUJHb29BZ0FoRFFKQUlBQWdCU0FBSUFBZ0JHb29BdlFDUVFKMElnUnFLQUxZQWlJTUtBSVVJZ2xCQW5ScUlnSkJQR29vQWdBZ0JDQUZhaUlIUVNocUtBSUFhaUlERUR0RkJFQWdCMEVBTmdJb0lBY29BaGdoQkF3QkMwRUJJUVpCQUNFSVFRQWhCQUpBSUFBZ0F5QUFJQU5CQVdvUU95SUtha0VDYWlJREVEdEZEUUFnQUNBQ0tBSThJZ0pCRkdvaUF4QTdSUVJBUVFFaEJBd0JDMEVBSVFZZ0FDQUNRUlZxSWdNUU8wVUVRRUVDSVFRTUFRc2dBQ0FDUVJacUlnTVFPMFVFUUVFRUlRUU1BUXNnQUNBQ1FSZHFJZ01RTzBVRVFFRUlJUVFNQVFzZ0FDQUNRUmhxSWdNUU8wVUVRRUVRSVFRTUFRc2dBQ0FDUVJscUlnTVFPMFVFUUVFZ0lRUU1BUXNnQUNBQ1FScHFJZ01RTzBVRVFFSEFBQ0VFREFFTElBQWdBa0ViYWlJREVEdEZCRUJCZ0FFaEJBd0JDeUFBSUFKQkhHb2lBeEE3UlFSQVFZQUNJUVFNQVFzZ0FDQUNRUjFxSWdNUU8wVUVRRUdBQkNFRURBRUxJQUFnQWtFZWFpSURFRHRGQkVCQmdBZ2hCQXdCQ3lBQUlBSkJIMm9pQXhBN1JRUkFRWUFRSVFRTUFRc2dBQ0FDUVNCcUlnTVFPMFVFUUVHQUlDRUVEQUVMSUFBZ0FrRWhhaUlERUR0RkJFQkJnTUFBSVFRTUFRdEJnSUFCSVFRZ0FDQUNRU0pxSWdNUU93MEVDd0pBSUFSQkFTQUFJQWxxSWdrdEFPZ0JkRUVCZFVnTkFDQUtRUUowSVFKQkFTQUpMUUQ0QVhSQkFYVWdCRWdFUUNBQ1FReHFJUWdNQVFzZ0FrRUVhaUVJQ3lBSElBZzJBaWdDUUNBR0JFQWdCQ0VEREFFTElBTkJEbW9oQmlBRUlRTURRQ0FFUVFGMklnSkJBQ0FBSUFZUU94c2dBM0loQXlBRVFRTkxJUWdnQWlFRUlBZ05BQXNMSUFjZ0J5Z0NHQ0FEUVg5eklBTkJBV29nQ2h0cUlnUTJBaGdMSUEwZ0JEc0JBQUpBSUFBb0FyUURSUTBBSUFBZ0RDZ0NHQ0lFYWlFSUlBVWdCRUVDZEdvaEJrRUFJUVFEUUNBQUlBWW9BbndnQkNJQ1FRTnNhaUlERURzTkFRTkFBa0FnQWtFQmFpRUVJQUFnQTBFQmFoQTdEUUFnQTBFRGFpRURJQVFpQWlBQUtBSzBBMGdOQVF3R0N3c2dBQ0FQRURzaENnSkFJQUFnQTBFQ2FpSURFRHRGQkVCQkFDRUNEQUVMSUFBZ0F4QTdSUVJBUVFFaEFnd0JDd0pBSUFBZ0JpZ0NmRUc5QVVIWkFTQUNJQWd0QUlnQ1NCdHFJZ0lRTzBVRVFFRUNJUU1NQVFzZ0FDQUNRUUZxSWdJUU8wVUVRRUVFSVFNTUFRc2dBQ0FDUVFGcUlnSVFPMFVFUUVFSUlRTU1BUXNnQUNBQ1FRRnFJZ0lRTzBVRVFFRVFJUU1NQVFzZ0FDQUNRUUZxSWdJUU8wVUVRRUVnSVFNTUFRc2dBQ0FDUVFGcUlnSVFPMFVFUUVIQUFDRUREQUVMSUFBZ0FrRUJhaUlDRUR0RkJFQkJnQUVoQXd3QkN5QUFJQUpCQVdvaUFoQTdSUVJBUVlBQ0lRTU1BUXNnQUNBQ1FRRnFJZ0lRTzBVRVFFR0FCQ0VEREFFTElBQWdBa0VCYWlJQ0VEdEZCRUJCZ0FnaEF3d0JDeUFBSUFKQkFXb2lBaEE3UlFSQVFZQVFJUU1NQVFzZ0FDQUNRUUZxSWdJUU8wVUVRRUdBSUNFRERBRUxJQUFnQWtFQmFpSUNFRHRGQkVCQmdNQUFJUU1NQVF0QmdJQUJJUU1nQUNBQ1FRRnFJZ0lRT3cwR0N5QUNRUTVxSVF3Z0F5RUNBMEFnQTBFQmRpSUhRUUFnQUNBTUVEc2JJQUp5SVFJZ0EwRURTeUVKSUFjaEF5QUpEUUFMQ3lBTklBNGdCRUVDZEdvb0FnQkJBWFJxSUFKQmYzTWdBa0VCYWlBS0d6c0JBQ0FFSUFBb0FyUURTQTBBQ3dzZ0MwRUJhaUlMSUFBb0F2QUNTQTBBQ3d0QkFROExJQUFvQWdBaUFVSDFBRFlDRkNBQVFYOGdBU2dDQkJFQ0FDQUZRWDgyQWhSQkFRdVBBd0VLZnlBQUtBTFVBeUVESUFBb0FwZ0NCRUFnQXlBREtBSTRJZ0lFZnlBQ0JTQUFFTklDSUFNb0FqZ0xRUUZyTmdJNEN3SkFJQU1vQWhSQmYwWU5BRUYvSUFBb0FxZ0RJZ0owSVFWQkFTQUNkQ0VHSUFBb0FxQURJUVFnQVNnQ0FDRUhJQUFvQXJBRElRZ2dBQ2dDMkFJb0FoZ2hBZ0pBQTBBZ0J5QUlJQVJCQW5ScUtBSUFRUUYwYWk4QkFBMEJJQVJCQVdzaUJBMEFDMEVBSVFRTElBTkJ2QUZxSVFvZ0FDZ0NuQU5CQVdzaEFTQURJQUpCQW5ScUlRc0RRQ0FMS0FKOElBRkJBMnhxSVFJZ0FTQUVUZ1JBSUFBZ0FoQTdEUUlMQWtBQ2Z3SkFBMEFnQnlBSUlBRkJBV29pQVVFQ2RHb29BZ0JCQVhScUlna3ZBUUFFUUNBQUlBSkJBbW9RTzBVTkJDQUpMZ0VBSWdKQkFFNE5BaUFDSUFWcURBTUxJQUFnQWtFQmFoQTdCRUFnQlNBR0lBQWdDaEE3R3d3REN5QUNRUU5xSVFJZ0FTQUFLQUtnQTBnTkFBc2dBQ2dDQUNJQlFmVUFOZ0lVSUFCQmZ5QUJLQUlFRVFJQUlBTkJmellDRkVFQkR3c2dBaUFHYWdzaEFpQUpJQUk3QVFBTElBRWdBQ2dDb0FOSURRQUxDMEVCQzQwQkFRUi9JQUFvQXRRRElRSWdBQ2dDbUFJRVFDQUNJQUlvQWpnaUF3Ui9JQU1GSUFBUTBnSWdBaWdDT0F0QkFXczJBamdMSUFBb0F2QUNRUUJLQkVBZ0FrRzhBV29oQTBFQklBQW9BcWdEZENFRVFRQWhBZ05BSUFBZ0F4QTdCRUFnQVNBQ1FRSjBhaWdDQUNJRklBVXZBUUFnQkhJN0FRQUxJQUpCQVdvaUFpQUFLQUx3QWtnTkFBc0xRUUVMd1FVQkRIOGdBQ2dDMUFNaEF5QUFLQUtZQWdSQUlBTWdBeWdDT0NJRUJIOGdCQVVnQUJEU0FpQURLQUk0QzBFQmF6WUNPQXNDUUFKQUlBTW9BaFJCZjBZTkFDQURRYndCYWlFR0lBQW9BcHdEUVFGcklRUWdBQ0FBS0FMWUFpZ0NHQ0lDYWlFSElBTWdBa0VDZEdvaEJTQUJLQUlBSVFnZ0FDZ0NzQU1oQ1FOQUlBQWdCU2dDZkNBRUlnSkJBMnhxSWdFUU93MEJBMEFDUUNBQ1FRRnFJUVFnQUNBQlFRRnFFRHNOQUNBQlFRTnFJUUVnQkNJQ0lBQW9BcUFEU0EwQkRBUUxDeUFBSUFZUU95RUtBa0FnQUNBQlFRSnFJZ0VRTzBVRVFFRUFJUUlNQVFzZ0FDQUJFRHRGQkVCQkFTRUNEQUVMQWtBZ0FDQUZLQUo4UWIwQlFka0JJQUlnQnkwQWlBSklHMm9pQWhBN1JRUkFRUUloQVF3QkN5QUFJQUpCQVdvaUFoQTdSUVJBUVFRaEFRd0JDeUFBSUFKQkFXb2lBaEE3UlFSQVFRZ2hBUXdCQ3lBQUlBSkJBV29pQWhBN1JRUkFRUkFoQVF3QkN5QUFJQUpCQVdvaUFoQTdSUVJBUVNBaEFRd0JDeUFBSUFKQkFXb2lBaEE3UlFSQVFjQUFJUUVNQVFzZ0FDQUNRUUZxSWdJUU8wVUVRRUdBQVNFQkRBRUxJQUFnQWtFQmFpSUNFRHRGQkVCQmdBSWhBUXdCQ3lBQUlBSkJBV29pQWhBN1JRUkFRWUFFSVFFTUFRc2dBQ0FDUVFGcUlnSVFPMFVFUUVHQUNDRUJEQUVMSUFBZ0FrRUJhaUlDRUR0RkJFQkJnQkFoQVF3QkN5QUFJQUpCQVdvaUFoQTdSUVJBUVlBZ0lRRU1BUXNnQUNBQ1FRRnFJZ0lRTzBVRVFFR0F3QUFoQVF3QkMwR0FnQUVoQVNBQUlBSkJBV29pQWhBN0RRUUxJQUpCRG1vaEN5QUJJUUlEUUNBQlFRRjJJZ3hCQUNBQUlBc1FPeHNnQW5JaEFpQUJRUU5MSVEwZ0RDRUJJQTBOQUFzTElBZ2dDU0FFUVFKMGFpZ0NBRUVCZEdvZ0FrRi9jeUFDUVFGcUlBb2JJQUFvQXFnRGREc0JBQ0FFSUFBb0FxQURTQTBBQ3d0QkFROExJQUFvQWdBaUFVSDFBRFlDRkNBQVFYOGdBU2dDQkJFQ0FDQURRWDgyQWhSQkFRdU9CZ0VMZnlBQUtBTFVBeUVGSUFBb0FwZ0NCRUFnQlNBRktBSTRJZ0lFZnlBQ0JTQUFFTklDSUFVb0FqZ0xRUUZyTmdJNEN3SkFBa0FnQlNnQ0ZFRi9SZzBBSUFBb0F2QUNRUUJNRFFBRFFDQUJJQWxCQW5RaUFtb29BZ0FoREFKQUlBQWdCU0FBSUFBZ0Ftb29BdlFDUVFKMElnSnFLQUxZQWlnQ0ZDSUtRUUowYWlJRVFUeHFLQUlBSUFJZ0JXb2lCa0VvYWlnQ0FHb2lBeEE3UlFSQUlBWkJBRFlDS0NBR0tBSVlJUUlNQVF0QkFTRUhRUUFoQ0VFQUlRSUNRQ0FBSUFNZ0FDQURRUUZxRURzaUMycEJBbW9pQXhBN1JRMEFJQUFnQkNnQ1BDSUVRUlJxSWdNUU8wVUVRRUVCSVFJTUFRdEJBQ0VISUFBZ0JFRVZhaUlERUR0RkJFQkJBaUVDREFFTElBQWdCRUVXYWlJREVEdEZCRUJCQkNFQ0RBRUxJQUFnQkVFWGFpSURFRHRGQkVCQkNDRUNEQUVMSUFBZ0JFRVlhaUlERUR0RkJFQkJFQ0VDREFFTElBQWdCRUVaYWlJREVEdEZCRUJCSUNFQ0RBRUxJQUFnQkVFYWFpSURFRHRGQkVCQndBQWhBZ3dCQ3lBQUlBUkJHMm9pQXhBN1JRUkFRWUFCSVFJTUFRc2dBQ0FFUVJ4cUlnTVFPMFVFUUVHQUFpRUNEQUVMSUFBZ0JFRWRhaUlERUR0RkJFQkJnQVFoQWd3QkN5QUFJQVJCSG1vaUF4QTdSUVJBUVlBSUlRSU1BUXNnQUNBRVFSOXFJZ01RTzBVRVFFR0FFQ0VDREFFTElBQWdCRUVnYWlJREVEdEZCRUJCZ0NBaEFnd0JDeUFBSUFSQklXb2lBeEE3UlFSQVFZREFBQ0VDREFFTFFZQ0FBU0VDSUFBZ0JFRWlhaUlERURzTkJBc0NRQ0FDUVFFZ0FDQUthaUlLTFFEb0FYUkJBWFZJRFFBZ0MwRUNkQ0VFUVFFZ0NpMEErQUYwUVFGMUlBSklCRUFnQkVFTWFpRUlEQUVMSUFSQkJHb2hDQXNnQmlBSU5nSW9Ba0FnQndSQUlBSWhBd3dCQ3lBRFFRNXFJUWNnQWlFREEwQWdBa0VCZGlJRVFRQWdBQ0FIRURzYklBTnlJUU1nQWtFRFN5RUlJQVFoQWlBSURRQUxDeUFHSUFZb0FoZ2dBMEYvY3lBRFFRRnFJQXNiYWlJQ05nSVlDeUFNSUFJZ0FDZ0NxQU4wT3dFQUlBbEJBV29pQ1NBQUtBTHdBa2dOQUFzTFFRRVBDeUFBS0FJQUlnRkI5UUEyQWhRZ0FFRi9JQUVvQWdRUkFnQWdCVUYvTmdJVVFRRUxsd2dCQjM4Z0FDZ0NuQU1oQWlBQUtBTFVBeUVEQWtBZ0FDZ0M0QUVFUUNBQUtBS2dBeUVCQWtBQ1FBSkFJQUpGQkVBZ0FVVU5BUXdDQ3lBQklBSklEUUVnQVNBQUtBSzBBMG9OQVNBQUtBTFVBa0VCUncwQkN3SkFJQUFvQXFRRElnRkZCRUFnQUNnQ3FBTWhCQXdCQ3lBQlFRRnJJZ1FnQUNnQ3FBTkhEUUVMSUFSQkRrZ05BUXNnQUNnQ0FDSUJJQUkyQWhnZ0FVRVJOZ0lVSUFBb0FnQWdBQ2dDb0FNMkFod2dBQ2dDQUNBQUtBS2tBellDSUNBQUtBSUFJQUFvQXFnRE5nSWtJQUFnQUNnQ0FDZ0NBQkVCQUFzZ0FDZ0MxQUlpQWtFQVNnUkFBMEFnQUNnQ29BRWdBQ0FHUVFKMGFpZ0MyQUlvQWdRaUJFRUlkR29oQlFKL1FRQWdBQ2dDbkFNaUFVVU5BQm9nQVNBRktBSUFRUUJPRFFBYUlBQW9BZ0FpQVNBRU5nSVlJQUZCOWdBMkFoUWdBQ2dDQUVFQU5nSWNJQUJCZnlBQUtBSUFLQUlFRVFJQUlBQW9BcHdEQ3lJQ0lBQW9BcUFEVEFSQUEwQWdBQ2dDcEFNZ0JTQUNRUUowYWlJSEtBSUFJZ0ZCQUNBQlFRQktHMGNFUUNBQUtBSUFJZ0VnQkRZQ0dDQUJRZllBTmdJVUlBQW9BZ0FnQWpZQ0hDQUFRWDhnQUNnQ0FDZ0NCQkVDQUFzZ0J5QUFLQUtvQXpZQ0FDQUNJQUFvQXFBRFNDRUJJQUpCQVdvaEFpQUJEUUFMQ3lBR1FRRnFJZ1lnQUNnQzFBSWlBa2dOQUFzTElBQW9BcHdESVFFZ0FDZ0NwQU5GQkVBZ0FVVUVRQ0FEUWJZQk5nSUVEQU1MSUFOQnR3RTJBZ1FNQWdzZ0FVVUVRQ0FEUWJnQk5nSUVEQUlMSUFOQnVRRTJBZ1FNQVFzQ1FBSkFJQUlOQUNBQUtBS2tBdzBBSUFBb0FxZ0REUUFnQUNnQ29BTWlBVUUvU2cwQklBRWdBQ2dDdEFOR0RRRUxJQUFvQWdBaUFVSDlBRFlDRkNBQVFYOGdBU2dDQkJFQ0FBc2dBMEc2QVRZQ0JDQUFLQUxVQWlFQ0N5QUNRUUJLQkVCQkFDRUVBMEFnQUNBRVFRSjBJZ2RxS0FMWUFpRUZBa0FDUUNBQUtBTGdBUVJBSUFBb0Fwd0REUUVnQUNnQ3BBTU5BZ3NnQlNnQ0ZDSUNRUkJQQkVBZ0FDZ0NBQ0lCSUFJMkFoZ2dBVUV5TmdJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQXlBQ1FRSjBhaUlCUVR4cUtBSUFJZ0pGQkVBZ0FTQUFRUUZCd0FBZ0FDZ0NCQ2dDQUJFRUFDSUNOZ0k4Q3lBQ1FnQTNBQUFnQWtJQU53QTRJQUpDQURjQU1DQUNRZ0EzQUNnZ0FrSUFOd0FnSUFKQ0FEY0FHQ0FDUWdBM0FCQWdBa0lBTndBSUlBTWdCMm9pQVVFQU5nSW9JQUZCQURZQ0dDQUFLQUxnQVVVRVFDQUFLQUswQXcwQkRBSUxJQUFvQXB3RFJRMEJDeUFGS0FJWUlnSkJFRThFUUNBQUtBSUFJZ0VnQWpZQ0dDQUJRVEkyQWhRZ0FDQUFLQUlBS0FJQUVRRUFDeUFESUFKQkFuUnFJZ0ZCL0FCcUtBSUFJZ0pGQkVBZ0FTQUFRUUZCZ0FJZ0FDZ0NCQ2dDQUJFRUFDSUNOZ0o4Q3lBQ1FRQkJnQUlRT0JvTElBUkJBV29pQkNBQUtBTFVBa2dOQUFzTElBTkJjRFlDRkNBRFFnQTNBZ3dnQXlBQUtBS1lBallDT0F1ckRRSUtmd0Y4SUFBb0FpUkJBRW9FUUNBQUtBTFlBeUVLSUFBb0F0Z0JJUWNEUUNBQklRWWdBaUVFQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFjb0FpZ2dCeWdDSkNJSVFRaDBhaUlEUVlNUVRBUkFJQU5CZ1FoTUJFQUNRQ0FEUVlFRWF3NEVGd01pSGdBTFFaSUJJUUZCQUNFQ0FrQWdBMEdCQW1zT0FpWWZBQXNnQTBHREJtc09CQU1oSVJ3aEN5QURRWUlNVEFSQUFrQWdBMEdDQ0dzT0J4WWlCU0lpSWh3QUN5QURRWVVLYXc0R0JTRWhJU0VhSVFzQ1FDQURRWU1NYXc0S0ZDRWhCaUVoSVNFaEdRQUxJQU5CaHc1ckRnZ0dJQ0FnSUNBZ0Z5QUxJQU5CaFJoTUJFQWdBMEdFRkV3RVFDQURRWVFRYXc0TkV5RWhJUjhoSVNFaElTRWhGeUFMSUFOQmhSUnJEZ1lSSUNBZ0lBY0lDeUFEUVlZY1RBUkFJQU5CaGhockRnY1FJQ0FnSUNBSkNnc0NRQ0FEUVljY2F3NElEeUFnSUNBZ0lBc0FDeUFEUVlnZ2F3NEpEUjhmSHg4Zkh4OE1Dd3RCa3dFaEFVRUFJUUlNSWd0QmxBRWhBUXdoQzBHVkFTRUJRUUFoQWd3Z0MwR1dBU0VCUVFBaEFnd2ZDMEdYQVNFQlFRQWhBZ3dlQzBHWUFTRUJRUUFoQWd3ZEMwR1pBU0VCUVFBaEFnd2NDeUFEUVlzV1J3MFhRWm9CSVFGQkFDRUNEQnNMUVpzQklRRkJBQ0VDREJvTElBTkJqUnBIRFJWQm5BRWhBVUVBSVFJTUdRdEJuUUVoQVVFQUlRSU1HQXNnQTBHUEhrY05FMEdlQVNFQlFRQWhBZ3dYQzBHZkFTRUJRUUFoQWd3V0MwR2dBU0VCUVFBaEFnd1ZDMEdoQVNFQlFRQWhBZ3dVQzBHaUFTRUJRUUFoQWd3VEMwR2pBU0VCUVFBaEFnd1NDMEdrQVNFQlFRQWhBZ3dSQzBHbEFTRUJRUUFoQWd3UUMwR21BU0VCUVFBaEFnd1BDMEduQVNFQlFRQWhBZ3dPQzBHb0FTRUJRUUFoQWd3TkMwR3BBU0VCUVFBaEFnd01DMEdxQVNFQlFRQWhBZ3dMQzBHckFTRUJRUUFoQWd3S0MwR3NBU0VCUVFBaEFnd0pDMEd0QVNFQkRBZ0xRYTRCSVFGQkFDRUNEQWNMUWE4QklRRU1CZ3NnQUNnQ1NDSUNRUU5KRFFJZ0FDZ0NBQ0lCUVRFMkFoUWdBQ0FCS0FJQUVRRUFEQU1MSUFOQmlSSkdEUU1MSUFBb0FnQWlBU0FJTmdJWUlBRkJCellDRkNBQUtBSUFJQWNvQWlnMkFod2dBQ0FBS0FJQUtBSUFFUUVBREFFTElBSkJBblJCMEtVQ2FpZ0NBQ0VCREFJTElBWWhBU0FFSVFJTUFRdEJzQUVoQVVFQUlRSUxJQW9nQ1VFQ2RHb2lCQ0FCTmdJRUFrQWdCeWdDTkVVTkFDQUVLQUlzSUFKR0RRQWdCeWdDVUNJRFJRMEFJQVFnQWpZQ0xBSkFBa0FDUUFKQUlBSU9Bd0FCQWdNTElBY29BbFFoQmtFQUlRVURRQ0FHSUFWQkFuUnFJQU1nQlVFQmRHb3ZBUUEyQWdBZ0JpQUZRUUZ5SWdSQkFuUnFJQU1nQkVFQmRHb3ZBUUEyQWdBZ0JpQUZRUUp5SWdSQkFuUnFJQU1nQkVFQmRHb3ZBUUEyQWdBZ0JpQUZRUU55SWdSQkFuUnFJQU1nQkVFQmRHb3ZBUUEyQWdBZ0JVRUVhaUlGUWNBQVJ3MEFDd3dEQ3lBSEtBSlVJUVpCQUNFRkEwQWdCaUFGUVFKMGFpQUZRUUYwSWdSQmtLUUNhaTRCQUNBRElBUnFMd0VBYkVHQUVHcEJESFUyQWdBZ0JpQUZRUUZ5SWdSQkFuUnFJQVJCQVhRaUJFR1FwQUpxTGdFQUlBTWdCR292QVFCc1FZQVFha0VNZFRZQ0FDQUZRUUpxSWdWQndBQkhEUUFMREFJTElBY29BbFFoQ0VFQUlRWkJBQ0VGQTBBZ0NDQUZRUUowYWlBR1FRTjBRWkNsQW1vckF3QWlDeUFESUFWQkFYUnFMd0VBdUtKRUFBQUFBQUFBd0QraXRqZ0NBQ0FJSUFWQkFYSWlCRUVDZEdvZ0N5QURJQVJCQVhScUx3RUF1S0pFNzJGSXNWQXg5aitpUkFBQUFBQUFBTUEvb3JZNEFnQWdDQ0FGUVFKeUlnUkJBblJxSUFzZ0F5QUVRUUYwYWk4QkFMaWlSTXB2VFpHdTUvUS9va1FBQUFBQUFBREFQNksyT0FJQUlBZ2dCVUVEY2lJRVFRSjBhaUFMSUFNZ0JFRUJkR292QVFDNG9rU3FFV3p2WXREeVA2SkVBQUFBQUFBQXdEK2l0amdDQUNBSUlBVkJCSElpQkVFQ2RHb2dDeUFESUFSQkFYUnFMd0VBdUtKRUFBQUFBQUFBd0QraXRqZ0NBQ0FJSUFWQkJYSWlCRUVDZEdvZ0N5QURJQVJCQVhScUx3RUF1S0pFTzcrbndHa2s2VCtpUkFBQUFBQUFBTUEvb3JZNEFnQWdDQ0FGUVFaeUlnUkJBblJxSUFzZ0F5QUVRUUYwYWk4QkFMaWlSTHNneDN0NlVlRS9va1FBQUFBQUFBREFQNksyT0FJQUlBZ2dCVUVIY2lJRVFRSjBhaUFMSUFNZ0JFRUJkR292QVFDNG9rUmRxM0xlVmFqUlA2SkVBQUFBQUFBQXdEK2l0amdDQUNBRlFRaHFJUVVnQmtFQmFpSUdRUWhIRFFBTERBRUxJQUFvQWdBaUJFRXhOZ0lVSUFBZ0JDZ0NBQkVCQUFzZ0IwSFlBR29oQnlBSlFRRnFJZ2tnQUNnQ0pFZ05BQXNMQzZjQ0FRbC9JQVJCQUVvRVFDQUFLQUp3SWdsQmZIRWhDeUFKUVFOeElRb2dBQ2dDSkNJR1FRQk1JUXdnQ1VFQmEwRURTU0VOQTBCQkFDRUlJQXhGQkVBRFFBSkFJQWxGRFFBZ0FTQUlRUUowYWlnQ0FDQUNRUUowYWlnQ0FDRUFJQU1vQWdBZ0NHb2hCVUVBSVFjZ0RVVUVRQU5BSUFVZ0FDMEFBRG9BQUNBRklBWnFJZ1VnQUMwQUFUb0FBQ0FGSUFacUlnVWdBQzBBQWpvQUFDQUZJQVpxSWdVZ0FDMEFBem9BQUNBQVFRUnFJUUFnQlNBR2FpRUZJQWRCQkdvaUJ5QUxSdzBBQ3d0QkFDRUhJQXBGRFFBRFFDQUZJQUF0QUFBNkFBQWdCU0FHYWlFRklBQkJBV29oQUNBSFFRRnFJZ2NnQ2tjTkFBc0xJQWhCQVdvaUNDQUdSdzBBQ3dzZ0EwRUVhaUVESUFKQkFXb2hBaUFFUVFGS0lRQWdCRUVCYXlFRUlBQU5BQXNMQzhBQ0FRNS9JQVJCQUVvRVFDQUFLQUxRQWlFRklBQW9BbkFoQnlBQUtBTGdBeUlBS0FJVUlRb2dBQ2dDRUNFTElBQW9BZ3doRENBQUtBSUlJUTBEUUNBRUlRZ2dCd1JBSUFKQkFuUWlBQ0FCS0FJTWFpZ0NBQ0VPSUFFb0FnZ2dBR29vQWdBaER5QUJLQUlFSUFCcUtBSUFJUkFnQVNnQ0FDQUFhaWdDQUNFUklBTW9BZ0FoQkVFQUlRQURRQ0FBSUJCcUxRQUFJUVlnQkNBRklBQWdFV290QUFCQi93RnpJZ2tnRFNBQUlBOXFMUUFBUVFKMEloSnFLQUlBYTJvdEFBQTZBQUFnQkNBRklBa2dDeUFTYWlnQ0FDQUtJQVpCQW5RaUJtb29BZ0JxUVJCMWEyb3RBQUE2QUFFZ0JDQUZJQWtnQmlBTWFpZ0NBR3RxTFFBQU9nQUNJQVFnQUNBT2FpMEFBRG9BQXlBRVFRUnFJUVFnQUVFQmFpSUFJQWRIRFFBTEN5QURRUVJxSVFNZ0FrRUJhaUVDSUFoQkFXc2hCQ0FJUVFKT0RRQUxDd3Z4QWdFTGZ5QUVRUUJLQkVBZ0FDZ0NjQ0lJUVg1eElRNGdDRUVCY1NFUEEwQWdCQ0VNQWtBZ0NFVU5BQ0FDUVFKMElnQWdBU2dDQ0dvb0FnQWhCaUFCS0FJRUlBQnFLQUlBSVFrZ0FTZ0NBQ0FBYWlnQ0FDRUhJQU1vQWdBaEJFRUFJUUJCQUNFTklBaEJBVWNFUUFOQUlBQWdCMm90QUFBaENpQUFJQVpxTFFBQUlRc2dCQ0FBSUFscUxRQUFJZ1U2QUFFZ0JDQUZJQXRxUVlBQmN6b0FBaUFFSUFVZ0NtcEJnQUZ6T2dBQUlBY2dBRUVCY2lJRmFpMEFBQ0VLSUFVZ0Jtb3RBQUFoQ3lBRUlBVWdDV290QUFBaUJUb0FCQ0FFSUFVZ0MycEJnQUZ6T2dBRklBUWdCU0FLYWtHQUFYTTZBQU1nQUVFQ2FpRUFJQVJCQm1vaEJDQU5RUUpxSWcwZ0RrY05BQXNMSUE5RkRRQWdBQ0FIYWkwQUFDRUhJQUFnQm1vdEFBQWhCaUFFSUFBZ0NXb3RBQUFpQURvQUFTQUVJQUFnQm1wQmdBRnpPZ0FDSUFRZ0FDQUhha0dBQVhNNkFBQUxJQU5CQkdvaEF5QUNRUUZxSVFJZ0RFRUJheUVFSUF4QkFrNE5BQXNMQzZrQ0FRbC9JQVJCQUVvRVFDQUFLQUp3SWdWQmZuRWhEQ0FGUVFGeElRMERRQ0FFSVFrQ1FDQUZSUTBBSUFKQkFuUWlBQ0FCS0FJSWFpZ0NBQ0VHSUFFb0FnUWdBR29vQWdBaEJ5QUJLQUlBSUFCcUtBSUFJUWdnQXlnQ0FDRUVRUUFoQUVFQUlRb2dCVUVCUndSQUEwQWdCQ0FBSUFocUxRQUFPZ0FBSUFRZ0FDQUhhaTBBQURvQUFTQUVJQUFnQm1vdEFBQTZBQUlnQkNBSUlBQkJBWElpQzJvdEFBQTZBQU1nQkNBSElBdHFMUUFBT2dBRUlBUWdCaUFMYWkwQUFEb0FCU0FBUVFKcUlRQWdCRUVHYWlFRUlBcEJBbW9pQ2lBTVJ3MEFDd3NnRFVVTkFDQUVJQUFnQ0dvdEFBQTZBQUFnQkNBQUlBZHFMUUFBT2dBQklBUWdBQ0FHYWkwQUFEb0FBZ3NnQTBFRWFpRURJQUpCQVdvaEFpQUpRUUZySVFRZ0NVRUNUZzBBQ3dzTG9nSUJEWDhnQkVFQVNnUkFJQUFvQXRBQ0lRVWdBQ2dDY0NFSElBQW9BdUFESWdBb0FoUWhDaUFBS0FJUUlRc2dBQ2dDRENFTUlBQW9BZ2doRFFOQUlBUWhDQ0FIQkVBZ0FrRUNkQ0lBSUFFb0FnaHFLQUlBSVE0Z0FTZ0NCQ0FBYWlnQ0FDRVBJQUVvQWdBZ0FHb29BZ0FoRUNBREtBSUFJUVJCQUNFQUEwQWdBQ0FQYWkwQUFDRUdJQVFnQlNBQUlCQnFMUUFBSWdrZ0RTQUFJQTVxTFFBQVFRSjBJaEZxS0FJQWFtb3RBQUE2QUFBZ0JDQUZJQWtnQ3lBUmFpZ0NBQ0FLSUFaQkFuUWlCbW9vQWdCcVFSQjFhbW90QUFBNkFBRWdCQ0FGSUFrZ0JpQU1haWdDQUdwcUxRQUFPZ0FDSUFSQkEyb2hCQ0FBUVFGcUlnQWdCMGNOQUFzTElBTkJCR29oQXlBQ1FRRnFJUUlnQ0VFQmF5RUVJQWhCQWs0TkFBc0xDOVlDQVFsL0lBUkJBRW9FUUNBQUtBSndJZ2hCZkhFaERDQUlRUU54SVFrZ0NFRUJhMEVEU1NFTkEwQWdCQ0VLQWtBZ0NFVU5BQ0FCS0FJQUlBSkJBblJxS0FJQUlRWWdBeWdDQUNFRVFRQWhDMEVBSVFCQkFDRUhJQTFGQkVBRFFDQUVJQUFnQm1vdEFBQWlCVG9BQVNBRUlBVTZBQUlnQkNBRk9nQUFJQVFnQmlBQVFRRnlhaTBBQUNJRk9nQUVJQVFnQlRvQUJTQUVJQVU2QUFNZ0JDQUdJQUJCQW5KcUxRQUFJZ1U2QUFjZ0JDQUZPZ0FJSUFRZ0JUb0FCaUFFSUFZZ0FFRURjbW90QUFBaUJUb0FDaUFFSUFVNkFBc2dCQ0FGT2dBSklBQkJCR29oQUNBRVFReHFJUVFnQjBFRWFpSUhJQXhIRFFBTEN5QUpSUTBBQTBBZ0JDQUFJQVpxTFFBQUlnYzZBQUVnQkNBSE9nQUNJQVFnQnpvQUFDQUFRUUZxSVFBZ0JFRURhaUVFSUF0QkFXb2lDeUFKUncwQUN3c2dBMEVFYWlFRElBSkJBV29oQWlBS1FRRnJJUVFnQ2tFQ1RnMEFDd3NMNmdFQkIzOGdCRUVBU2dSQUlBQW9BbkFoQnlBQUtBTGdBeWdDR0NFRkEwQWdCQ0VBSUFjRVFDQUNRUUowSWdRZ0FTZ0NDR29vQWdBaENDQUJLQUlFSUFScUtBSUFJUWtnQVNnQ0FDQUVhaWdDQUNFS0lBTW9BZ0FoQzBFQUlRUURRQ0FFSUF0cUlBVWdCQ0FKYWkwQUFDSUdRUUowYWtHQUNHb29BZ0FnQlNBR1FZQi9jeUlHSUFRZ0Ntb3RBQUJxUWY4QmNVRUNkR29vQWdCcUlBVWdCaUFFSUFocUxRQUFha0gvQVhGQkFuUnFRWUFRYWlnQ0FHcEJFSFk2QUFBZ0JFRUJhaUlFSUFkSERRQUxDeUFEUVFScUlRTWdBa0VCYWlFQ0lBQkJBV3NoQkNBQVFRSk9EUUFMQ3d2VUFRRUdmeUFFUVFCS0JFQWdBQ2dDY0NFR0lBQW9BdUFES0FJWUlRVURRQ0FFSVFBZ0JnUkFJQUpCQW5RaUJDQUJLQUlJYWlnQ0FDRUhJQUVvQWdRZ0JHb29BZ0FoQ0NBQktBSUFJQVJxS0FJQUlRa2dBeWdDQUNFS1FRQWhCQU5BSUFRZ0Ntb2dCU0FFSUFkcUxRQUFRUUowYWtHQUVHb29BZ0FnQlNBRUlBaHFMUUFBUVFKMGFrR0FDR29vQWdBZ0JTQUVJQWxxTFFBQVFRSjBhaWdDQUdwcVFSQjJPZ0FBSUFSQkFXb2lCQ0FHUncwQUN3c2dBMEVFYWlFRElBSkJBV29oQWlBQVFRRnJJUVFnQUVFQ1RnMEFDd3NMRndBZ0FTZ0NBQ0FDSUFOQkFDQUVJQUFvQW5BUWtRTUxwd29CRFg4akFFRVFheUlDSkFBQ1FDQUFLQUlZSWdZb0FnUWlCRVVFUUNBQUlBWW9BZ3dSQUFCRkJFQkJBQ0VFREFJTElBWW9BZ1FoQkFzZ0JpZ0NBQ0lCTFFBQUlRVWdCRUVCYXlJRUJIOGdBVUVCYWdVZ0FDQUdLQUlNRVFBQVJRUkFRUUFoQkF3Q0N5QUdLQUlFSVFRZ0JpZ0NBQXNpQVVFQmFpRUlJQVJCQVdzaEJFRU9RUUFnQVMwQUFDQUZRUWgwY2lJQlFRSnJJZ1VnQVNBRlNSc2dBVUVQU3hzaUFRUkFBMEFnQkVVRVFDQUFJQVlvQWd3UkFBQkZCRUJCQUNFRURBUUxJQVlvQWdBaENDQUdLQUlFSVFRTElBSkJBbW9nQTJvZ0NDMEFBRG9BQUNBSVFRRnFJUWdnQkVFQmF5RUVJQU5CQVdvaUF5QUJSdzBBQ3dzZ0JTQUJheUVNQWtBQ1FBSkFJQUFvQXJnRElnTkI0QUZySWdjRVFDQUhRUTVHQkVBTUFnVU1Bd3NBQ3lBQklBeHFJUVVDUUFKQUFrQUNRQ0FCUVE1UEJFQWdBaTBBQWtIS0FFY05BaUFDTFFBRFFjWUFSdzBCSUFJdEFBUkJ5UUJIRFFFZ0FpMEFCVUhHQUVjTkFTQUNMUUFHRFFFZ0FFRUJOZ0tjQWlBQUlBSXRBQWNpQVRvQW9BSWdBQ0FDTFFBSUlnYzZBS0VDSUFBZ0FpMEFDU0lKT2dDaUFpQUFJQUl2QUFvaUEwRUlkQ0FEUVFoMmNpSUtPd0drQWlBQUlBSXZBQXdpQTBFSWRDQURRUWgyY2lJTE93R21BaUFCUVFGclFmOEJjVUVDVHdSQUlBQW9BZ0FpQXlBQk5nSVlJQU5CK2dBMkFoUWdBQ2dDQUNBQUxRQ2hBallDSENBQVFYOGdBQ2dDQUNnQ0JCRUNBQ0FBTFFDaUFpRUpJQUF2QWFZQ0lRc2dBQzhCcEFJaENpQUFMUUNoQWlFSElBQXRBS0FDSVFFTElBQW9BZ0FpQXlBQk5nSVlJQU5CMlFBMkFoUWdBeUFKTmdJb0lBTWdDMEgvL3dOeE5nSWtJQU1nQ2tILy93TnhOZ0lnSUFNZ0J6WUNIQ0FBUVFFZ0F5Z0NCQkVDQUNBQ0xRQVBJZ01nQWkwQURpSUJjZ1JBSUFBb0FnQWlBVUhjQURZQ0ZDQUJJQUl0QUE0MkFoZ2dBQ2dDQUNBQ0xRQVBOZ0ljSUFCQkFTQUFLQUlBS0FJRUVRSUFJQUl0QUE4aEF5QUNMUUFPSVFFTElBVkJEbXNpQlNBQklBTnNRUU5zUmcwRUlBQW9BZ0FpQVNBRk5nSVlJQUZCMmdBMkFoUU1Bd3NnQVVFR1NRMEJJQUl0QUFKQnlnQkhEUUVMSUFJdEFBTkJ4Z0JIRFFBZ0FpMEFCRUhZQUVjTkFDQUNMUUFGUWRnQVJ3MEFJQUl0QUFZTkFBSkFBa0FDUUFKQUlBSXRBQWRCRUdzT0JBQUJBd0lEQ3lBQUtBSUFJZ0VnQlRZQ0dDQUJRZTRBTmdJVURBUUxJQUFvQWdBaUFTQUZOZ0lZSUFGQjd3QTJBaFFNQXdzZ0FDZ0NBQ0lCSUFVMkFoZ2dBVUh3QURZQ0ZBd0NDeUFBS0FJQUlnRkIyd0EyQWhRZ0FTQUNMUUFITmdJWUlBQW9BZ0FnQlRZQ0hBd0JDeUFBS0FJQUlnRWdCVFlDR0NBQlFjOEFOZ0lVQ3lBQVFRRWdBQ2dDQUNnQ0JCRUNBQXNNQWdzQ1FDQUJRUXhKRFFBZ0FpMEFBa0hCQUVjTkFDQUNMUUFEUWVRQVJ3MEFJQUl0QUFSQjd3QkhEUUFnQWkwQUJVSGlBRWNOQUNBQ0xRQUdRZVVBUncwQUlBSXRBQWdoQXlBQ0xRQUhJUWNnQWkwQUNpRUpJQUl0QUFraENpQUNMUUFNSVFzZ0FpMEFDeUVOSUFJdEFBMGhCU0FBS0FJQUlnRkJ6Z0EyQWhRZ0FTQUZOZ0lrSUFFZ0N5QU5RUWgwY2pZQ0lDQUJJQWtnQ2tFSWRISTJBaHdnQVNBRElBZEJDSFJ5TmdJWUlBQkJBU0FCS0FJRUVRSUFJQUFnQlRvQXJBSWdBRUVCTmdLb0Fnd0NDeUFBS0FJQUlnRWdCVFlDR0NBQlFkQUFOZ0lVSUFCQkFTQUFLQUlBS0FJRUVRSUFEQUVMSUFBb0FnQWlBU0FETmdJWUlBRkJ4Z0EyQWhRZ0FDQUFLQUlBS0FJQUVRRUFDeUFHSUFRMkFnUWdCaUFJTmdJQVFRRWhCQ0FNUVFCTURRQWdBQ0FNSUFBb0FoZ29BaEFSQWdBTElBSkJFR29rQUNBRUN6WUFJQUJCQURZQzJBRWdBRUVBTmdLNEF5QUFRUUEyQXBBQklBQW9BdEFESWdCQkFEWUNwQUVnQUVFQU5nSVlJQUJDQURjQ0RBdUdPd0VQZnlNQVFhQUNheUlKSkFBZ0FDZ0N1QU1oQVFOQUFrQUNRQUpBSUFFTkFDQUFLQUxRQXlnQ0RFVUVRQ0FBS0FJWUlnSW9BZ1FpQVVVRVFDQUFJQUlvQWd3UkFBQkZCRUJCQUNFQkRBUUxJQUlvQWdRaEFRc2dBaWdDQUNJRExRQUFJUVVnQVVFQmF5SUVCSDhnQTBFQmFnVWdBQ0FDS0FJTUVRQUFSUVJBUVFBaEFRd0VDeUFDS0FJRUlRUWdBaWdDQUFzaUFVRUJhaUVESUFWQi93RkdJQUV0QUFBaUFVSFlBVVp4UlFSQUlBQW9BZ0FpQmlBRk5nSVlJQVpCTnpZQ0ZDQUFLQUlBSUFFMkFod2dBQ0FBS0FJQUtBSUFFUUVBQ3lBQUlBRTJBcmdESUFJZ0JFRUJhellDQkNBQ0lBTTJBZ0FNQVFzZ0FCRG5BMFVFUUVFQUlRRU1BZ3NnQUNnQ3VBTWhBUXNDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBRkJBV3NPL2dFUEVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSRVJFUkVSSUJBZ1VKQlFVRkJRTUVCUWdGQlFVUER3OFBEdzhQRHdBSEJnb1FDeEVSRFEwTkRRME5EUTBORFEwTkRRME5EUkVSRVJFUkVSRVJEQkVSRVJFUkRoRUxJQUFvQWdBaUFrSG9BRFlDRkNBQVFRRWdBaWdDQkJFQ0FDQUFLQUxRQXlJQktBSU1CRUFnQUNnQ0FDSUNRY0FBTmdJVUlBQWdBaWdDQUJFQkFDQUFLQUxRQXlFQkN5QUFRZ0EzQU9nQklBQkNBRGNBOEFFZ0FFS0Jnb1NJa0tEQWdBRTNBSUFDSUFCQ2dZS0VpSkNnd0lBQk53RDRBU0FBUW9XS2xLalFvTUdDQlRjQWtBSWdBRUtGaXBTbzBLREJnZ1UzQUlnQ0lBQkNBRGNEc0FJZ0FFRUFOZ0lvSUFCQ0FEY0RtQUlnQUVFQU9nQ3NBaUFBUW9HQUJEY0NwQUlnQUVFQU9nQ2lBaUFBUVlFQ093R2dBaUFCUVFFMkFnd01GQXRCQUNFQklBQkJBRUVBUVFBUTB3SU5Fd3dTQzBFQUlRRWdBRUVBUVFGQkFCRFRBZzBTREJFTFFRQWhBU0FBUVFCQkFFRUJFTk1DRFJFTUVBdEJBQ0VCSUFCQkFFRUJRUUVRMHdJTkVBd1BDeUFBS0FJQUlnSWdBVFlDR0NBQ1FUODJBaFFnQUNBQUtBSUFLQUlBRVFFQURBOExJQUFvQWhnaUJpZ0NCQ0VCSUFZb0FnQWhBeUFBS0FMUUF5Z0NFRVVFUUNBQUtBSUFJZ0pCUERZQ0ZDQUNRUmhxUWVpaUFrSFFBQkErR2lBQUlBQW9BZ0FvQWdBUkFRQUxJQUZGQkVBZ0FDQUdLQUlNRVFBQVJRUkFRUUFoQVF3UEN5QUdLQUlBSVFNZ0JpZ0NCQ0VCQ3lBRExRQUFJUVVnQVVFQmF5SUNCSDhnQTBFQmFnVWdBQ0FHS0FJTUVRQUFSUVJBUVFBaEFRd1BDeUFHS0FJRUlRSWdCaWdDQUFzaUJDMEFBQ0VCSUFKQkFXc2lBd1IvSUFSQkFXb0ZJQUFnQmlnQ0RCRUFBRVVFUUVFQUlRRU1Ed3NnQmlnQ0JDRURJQVlvQWdBTElRUWdBQ2dDQUNJQ0lBUXRBQUFpQ3pZQ0dDQUNRZWtBTmdJVVFRRWhBaUFBUVFFZ0FDZ0NBQ2dDQkJFQ0FBSkFBa0FDUUNBTFFRRjBRUVpxSUFWQkNIUWdBWEpISUF0QkJFdHlEUUFnQ3dSQUlBQWdDellDMUFJZ0JFRUJhaUVLSUFOQkFXc2hCUXdDQ3lBQUtBTGdBVVVOQUNBQUlBczJBdFFDSUFSQkFXb2hDaUFEUVFGcklRVU1BZ3NnQUNnQ0FDSUJRUXcyQWhRZ0FDQUJLQUlBRVFFQUlBQWdDellDMUFJZ0JFRUJhaUVLSUFOQkFXc2hCU0FMUlEwQkMwRUFJUVFEUUNBRlJRUkFJQUFnQmlnQ0RCRUFBRVVFUUVFQUlRRU1FUXNnQmlnQ0FDRUtJQVlvQWdRaEJRc2dDaTBBQUNFREFrQWdCRVVOQUNBRVFRSnJJUUlnQkVFQmF5RUlRUUFoQVFOQUlBTWdBQ0FCUVFKMGFpZ0MyQUlvQWdCSEJFQWdCQ0FCUVFGcUlnRkhEUUVNQWdzTElBQW9BdGdDS0FJQUlRRUNRQ0FFUVFKSkRRQkJBU0VESUFKQkEwOEVRQ0FJUVh4eElReEJBQ0VIQTBBZ0FDQURRUUowYWlJQ0tBTGtBaWdDQUNJTklBSW9BdUFDS0FJQUlnNGdBaWdDM0FJb0FnQWlEeUFDS0FMWUFpZ0NBQ0lDSUFFZ0FTQUNTQnNpQWlBQ0lBOUlHeUlDSUFJZ0RrZ2JJZ0lnQWlBTlNCc2hBU0FEUVFScUlRTWdCMEVFYWlJSElBeEhEUUFMQzBFQUlRSWdDRUVEY1NJSVJRMEFBMEFnQUNBRFFRSjBhaWdDMkFJb0FnQWlCeUFCSUFFZ0IwZ2JJUUVnQTBFQmFpRURJQUpCQVdvaUFpQUlSdzBBQ3dzZ0FVRUJhaUVEQ3lBRlFRRnJJUWdnQUNnQzJBRWhBUUpBSUFBb0FpUWlCMEVBU2dSQUlBRWdCMEhZQUd4cUlRVkJBQ0VDQTBBZ0F5QUJLQUlBUmcwQ0lBRkIyQUJxSVFFZ0FrRUJhaUlDSUFkSERRQUxJQVVoQVFzZ0FDZ0NBQ0lDSUFNMkFoZ2dBa0VFTmdJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQUNBRVFRSjBhaUFCTmdMWUFpQUlCSDhnQ2tFQmFnVWdBQ0FHS0FJTUVRQUFSUVJBUVFBaEFRd1JDeUFHS0FJRUlRZ2dCaWdDQUFzaEJTQUJJQVV0QUFBaUFrRVBjVFlDR0NBQklBSkJCSFkyQWhRZ0FDZ0NBQ0lDSUFFb0FnQTJBaGdnQWlBQktBSVVOZ0ljSUFFb0FoZ2hBU0FDUWVvQU5nSVVJQUlnQVRZQ0lDQUFRUUVnQWlnQ0JCRUNBQ0FGUVFGcUlRb2dDRUVCYXlFRklBUkJBV29pQkNBTFJ3MEFDMEVBSVFJTElBVkZCRUFnQUNBR0tBSU1FUUFBUlFSQVFRQWhBUXdQQ3lBR0tBSUFJUW9nQmlnQ0JDRUZDeUFBSUFvdEFBQTJBcHdESUFBZ0JVRUJheUlEQkg4Z0NrRUJhZ1VnQUNBR0tBSU1FUUFBUlFSQVFRQWhBUXdQQ3lBR0tBSUVJUU1nQmlnQ0FBc2lCQzBBQURZQ29BTWdBQ0FEUVFGcklnY0VmeUFFUVFGcUJTQUFJQVlvQWd3UkFBQkZCRUJCQUNFQkRBOExJQVlvQWdRaEJ5QUdLQUlBQ3lJRkxRQUFJZ1JCRDNFMkFxZ0RJQUFnQkVFRWRqWUNwQU1nQUNnQ0FDSUVJQUFvQXB3RE5nSVlJQVFnQUNnQ29BTTJBaHdnQkNBQUtBS2tBellDSUNBRUlBQW9BcWdETmdJa0lBUkI2d0EyQWhSQkFTRUJJQUJCQVNBRUtBSUVFUUlBSUFBb0F0QURRUUEyQWhRZ0FrVUVRQ0FBSUFBb0FwQUJRUUZxTmdLUUFRc2dCaUFIUVFGck5nSUVJQVlnQlVFQmFqWUNBQ0FBUVFBMkFyZ0REQTBMSUFBb0FnQWlBa0hYQURZQ0ZDQUFRUUVnQWlnQ0JCRUNBQ0FBUVFBMkFyZ0RRUUloQVF3TUN5QUFLQUlZSWdVb0FnUWlBVVVFUUNBQUlBVW9BZ3dSQUFCRkJFQkJBQ0VCREEwTElBVW9BZ1FoQVFzZ0JTZ0NBQ0lDTFFBQUlRUWdBVUVCYXlJREJIOGdBa0VCYWdVZ0FDQUZLQUlNRVFBQVJRUkFRUUFoQVF3TkN5QUZLQUlFSVFNZ0JTZ0NBQXNpQVVFQmFpRUNJQU5CQVdzaEF5QUJMUUFBSUFSQkNIUnlJZ1JCQW1zaEFTQUVRUU5QQkVBRFFDQUJJUVFnQTBVRVFDQUFJQVVvQWd3UkFBQkZCRUJCQUNFQkRBOExJQVVvQWdRaEF5QUZLQUlBSVFJTElBSXRBQUFoQVNBRFFRRnJJZ2dFZnlBQ1FRRnFCU0FBSUFVb0Fnd1JBQUJGQkVCQkFDRUJEQThMSUFVb0FnUWhDQ0FGS0FJQUN5SURMUUFBSVFJZ0FDZ0NBQ0lHSUFFMkFoZ2dCa0hSQURZQ0ZDQUFLQUlBSUFJMkFod2dBRUVCSUFBb0FnQW9BZ1FSQWdBQ1FBSkFBa0FnQVVFZ1R3UkFJQUFvQWdBaUJpQUJOZ0lZSUFaQkhUWUNGQ0FBSUFBb0FnQW9BZ0FSQVFBTUFRc2dBVUVRU1EwQkN5QUFJQUZxSUFJNkFQZ0JEQUVMSUFBZ0FXb2lBU0FDUVFSMklnWTZBUGdCSUFFZ0FrRVBjU0lCT2dEb0FTQUJJQVpORFFBZ0FDZ0NBQ0lCSUFJMkFoZ2dBVUVlTmdJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQTBFQmFpRUNJQWhCQVdzaEF5QUVRUUpySVFFZ0JFRUNTdzBBQ3dzZ0FRUkFJQUFvQWdBaUJFRU1OZ0lVSUFBZ0JDZ0NBQkVCQUFzZ0JTQUROZ0lFSUFVZ0FqWUNBQXdNQ3lBQUtBSVlJZ1lvQWdRaUFVVUVRQ0FBSUFZb0Fnd1JBQUJGRFFvZ0JpZ0NCQ0VCQ3lBR0tBSUFJZ0l0QUFBaEJDQUJRUUZySWdFRWZ5QUNRUUZxQlNBQUlBWW9BZ3dSQUFCRkRRb2dCaWdDQkNFQklBWW9BZ0FMSWdKQkFXb2hBeUFCUVFGcklRRWdBaTBBQUNBRVFRaDBjaUlDUVFKcklRVWdBa0VUVHdSQUEwQWdBVVVFUUNBQUlBWW9BZ3dSQUFCRkRRd2dCaWdDQUNFRElBWW9BZ1FoQVFzZ0FDZ0NBQ0lDSUFNdEFBQWlCellDR0NBQ1FkSUFOZ0lVUVFFaEFpQUFRUUVnQUNnQ0FDZ0NCQkVDQUVFQUlRUWdDVUVBT2dDQUFpQURRUUZxSVFNZ0FVRUJheUVCQTBBZ0FVVUVRQ0FBSUFZb0Fnd1JBQUJGRFEwZ0JpZ0NBQ0VESUFZb0FnUWhBUXNnQ1VHQUFtb2dBbW9nQXkwQUFDSUlPZ0FBSUFOQkFXb2hBeUFCUVFGcklRRWdCQ0FJYWlFRUlBSkJBV29pQWtFUlJ3MEFDeUFBS0FJQUlnSWdDUzBBZ1FJMkFoZ2dBaUFKTFFDQ0FqWUNIQ0FDSUFrdEFJTUNOZ0lnSUFJZ0NTMEFoQUkyQWlRZ0FpQUpMUUNGQWpZQ0tDQUNJQWt0QUlZQ05nSXNJQUlnQ1MwQWh3STJBakFnQ1MwQWlBSWhDQ0FDUWRnQU5nSVVJQUlnQ0RZQ05DQUFRUUlnQWlnQ0JCRUNBQ0FBS0FJQUlnSWdDUzBBaVFJMkFoZ2dBaUFKTFFDS0FqWUNIQ0FDSUFrdEFJc0NOZ0lnSUFJZ0NTMEFqQUkyQWlRZ0FpQUpMUUNOQWpZQ0tDQUNJQWt0QUk0Q05nSXNJQUlnQ1MwQWp3STJBakFnQ1MwQWtBSWhDQ0FDUWRnQU5nSVVJQUlnQ0RZQ05DQUFRUUlnQWlnQ0JCRUNBQ0FFUVlBQ1RTQUZRUkZySWdVZ0JFNXhSUVJBSUFBb0FnQWlBa0VKTmdJVUlBQWdBaWdDQUJFQkFBdEJBQ0VDSUFsQkFFR0FBaEE0SVFnZ0JBUkFBMEFnQVVVRVFDQUFJQVlvQWd3UkFBQkZEUTRnQmlnQ0FDRURJQVlvQWdRaEFRc2dBaUFJYWlBRExRQUFPZ0FBSUFOQkFXb2hBeUFCUVFGcklRRWdBa0VCYWlJQ0lBUkhEUUFMQ3lBQUlBZEJFR3NpQWtFQ2RHcEJ4QUZxSUFBZ0IwRUNkR3BCdEFGcUlBZEJFSEVpQ3hzaENpQUNJQWNnQ3hzaUFrRUVUd1JBSUFBb0FnQWlCeUFDTmdJWUlBZEJIellDRkNBQUlBQW9BZ0FvQWdBUkFRQUxJQVVnQkdzaEJTQUtLQUlBSWdKRkJFQWdBRUVBUVpnQ0lBQW9BZ1FvQWdBUkJBQWlBa0VBTmdLVUFpQUtJQUkyQWdBTElBSWdDQ2tEZ0FJM0FnQWdBaUFJS1FPSUFqY0NDQ0FDSUFndEFKQUNPZ0FRSUFvb0FnQkJFV29nQ0VHQUFoQStHaUFGUVJCS0RRQUxDeUFGQkVBZ0FDZ0NBQ0lDUVF3MkFoUWdBQ0FDS0FJQUVRRUFDeUFHSUFFMkFnUWdCaUFETmdJQURBc0xJQUFvQWhnaUJpZ0NCQ0lCUlFSQUlBQWdCaWdDREJFQUFFVUVRRUVBSVFFTUN3c2dCaWdDQkNFQkN5QUdLQUlBSWdJdEFBQWhCU0FCUVFGcklnTUVmeUFDUVFGcUJTQUFJQVlvQWd3UkFBQkZCRUJCQUNFQkRBc0xJQVlvQWdRaEF5QUdLQUlBQ3lJQlFRRnFJUUlnQTBFQmF5RUVJQUV0QUFBZ0JVRUlkSElpQVVFQ2F5RUlJQUZCQTA4RVFBTkFJQVJGQkVBZ0FDQUdLQUlNRVFBQVJRUkFRUUFoQVF3TkN5QUdLQUlFSVFRZ0JpZ0NBQ0VDQ3lBQ0xRQUFJUVVnQUNnQ0FDSUJRZE1BTmdJVUlBRWdCVUVQY1NJQk5nSVlJQUFvQWdBZ0JVRUVkallDSENBQVFRRWdBQ2dDQUNnQ0JCRUNBQ0FCUVFSUEJFQWdBQ2dDQUNJRElBRTJBaGdnQTBFZ05nSVVJQUFnQUNnQ0FDZ0NBQkVCQUFzZ0FDQUJRUUowYWlJREtBS2tBU0lCUlFSQUlBQkJBRUdFQVNBQUtBSUVLQUlBRVFRQUlnRkJBRFlDZ0FFZ0F5QUJOZ0trQVFzZ0NFRUJheUVLQWtBQ1FBSkFBa0FDZnlBRlFSQkpJZ3RGQkVCQkFDRUhJQWhCZ0FGTERRSURRQ0FCSUFkQkFYUWlCV3BCQVRzQkFDQUJJQVZCQW5KcVFRRTdBUUFnQVNBRlFRUnlha0VCT3dFQUlBRWdCVUVHY21wQkFUc0JBQ0FCSUFWQkNISnFRUUU3QVFBZ0FTQUZRUXB5YWtFQk93RUFJQUVnQlVFTWNtcEJBVHNCQUNBQklBVkJEbkpxUVFFN0FRQWdCMEVJYWlJSFFjQUFSdzBBQ3lBS1FRRjFEQUVMUVFBaEJ5QUlRY0FBU3cwQkEwQWdBU0FIUVFGMElnVnFRUUU3QVFBZ0FTQUZRUUp5YWtFQk93RUFJQUVnQlVFRWNtcEJBVHNCQUNBQklBVkJCbkpxUVFFN0FRQWdBU0FGUVFoeWFrRUJPd0VBSUFFZ0JVRUtjbXBCQVRzQkFDQUJJQVZCREhKcVFRRTdBUUFnQVNBRlFRNXlha0VCT3dFQUlBZEJDR29pQjBIQUFFY05BQXNnQ2dzaEJVSHd2QUloQ0FKQUFrQUNRQUpBQWtBQ1FDQUZRUVJyRGk0RkJ3Y0hCd0FIQndjSEJ3Y0JCd2NIQndjSEJ3Y0NCd2NIQndjSEJ3Y0hCd01IQndjSEJ3Y0hCd2NIQndjRUJ3dEJnTHdDSVFnTUJBdEJnTHNDSVFnTUF3dEIwTGtDSVFnTUFndEJnTGdDSVFnTUFRdEI4TFVDSVFnTElBSkJBV29oQWlBRVFRRnJJUVFNQWdzZ0FrRUJhaUVDSUFSQkFXc2hCRUhBQUNFRlFiQ3pBaUVJREFFTElBSkJBV29oQWlBRVFRRnJJUVJCc0xNQ0lRZ2dCVUVBVEEwQkMwRUFJUU1EUUFKL0lBdEZCRUFnQkVVRVFDQUFJQVlvQWd3UkFBQkZCRUJCQUNFQkRCRUxJQVlvQWdRaEJDQUdLQUlBSVFJTElBSXRBQUFoQnlBRVFRRnJJZ1FFZnlBQ1FRRnFCU0FBSUFZb0Fnd1JBQUJGQkVCQkFDRUJEQkVMSUFZb0FnUWhCQ0FHS0FJQUN5SUNMUUFBSUFkQkNIUnlEQUVMSUFSRkJFQWdBQ0FHS0FJTUVRQUFSUVJBUVFBaEFRd1FDeUFHS0FJRUlRUWdCaWdDQUNFQ0N5QUNMUUFBQ3lFSElBRWdDQ0FEUVFKMGFpZ0NBRUVCZEdvZ0J6c0JBQ0FDUVFGcUlRSWdCRUVCYXlFRUlBTkJBV29pQXlBRlJ3MEFDd3RCQUNFSUlBQW9BZ0FvQW1oQkFrNEVRQU5BSUFBb0FnQWlBeUFCSUFoQkFYUWlCMm92QVFBMkFoZ2dBeUFCSUFkQkFuSnFMd0VBTmdJY0lBTWdBU0FIUVFSeWFpOEJBRFlDSUNBRElBRWdCMEVHY21vdkFRQTJBaVFnQXlBQklBZEJDSEpxTHdFQU5nSW9JQU1nQVNBSFFRcHlhaThCQURZQ0xDQURJQUVnQjBFTWNtb3ZBUUEyQWpBZ0FTQUhRUTV5YWk4QkFDRUhJQU5CM3dBMkFoUWdBeUFITmdJMElBQkJBaUFES0FJRUVRSUFJQWhCT0VraEF5QUlRUWhxSVFnZ0F3MEFDd3NnQ2lBRlFRQWdCU0FMRzJwcklnaEJBRW9OQUFzTElBZ0VRQ0FBS0FJQUlnRkJERFlDRkNBQUlBRW9BZ0FSQVFBTElBWWdCRFlDQkNBR0lBSTJBZ0FNQ2dzZ0FDZ0NHQ0lDS0FJRUlnTkZCRUFnQUNBQ0tBSU1FUUFBUlFSQVFRQWhBUXdLQ3lBQ0tBSUVJUU1MSUFJb0FnQWlCQzBBQUNFQklBTkJBV3NpQXdSL0lBUkJBV29GSUFBZ0FpZ0NEQkVBQUVVRVFFRUFJUUVNQ2dzZ0FpZ0NCQ0VESUFJb0FnQUxJUVFnQTBFQmF5RURJQVF0QUFBZ0FVRUlkSEpCQkVjRVFDQUFLQUlBSWdGQkREWUNGQ0FBSUFFb0FnQVJBUUFMSUFNRWZ5QUVRUUZxQlNBQUlBSW9BZ3dSQUFCRkJFQkJBQ0VCREFvTElBSW9BZ1FoQXlBQ0tBSUFDeUlCTFFBQUlRVWdBMEVCYXlJRUJIOGdBVUVCYWdVZ0FDQUNLQUlNRVFBQVJRUkFRUUFoQVF3S0N5QUNLQUlFSVFRZ0FpZ0NBQXNpQVMwQUFDRURJQUFvQWdBaUJrSFVBRFlDRkNBR0lBTWdCVUVJZEhJaUJUWUNHQ0FBUVFFZ0FDZ0NBQ2dDQkJFQ0FDQUFJQVUyQXBnQ0lBSWdCRUVCYXpZQ0JDQUNJQUZCQVdvMkFnQU1DUXNnQUNnQ0dDSUJLQUlFSVFNZ0FTZ0NBQ0VDSUFBb0F0QURLQUlRUlFSQUlBQW9BZ0FpQkVFOE5nSVVJQVJCR0dwQnVhTUNRZEFBRUQ0YUlBQWdBQ2dDQUNnQ0FCRUJBQXNDUUFKQUlBQW9BaVJCQTBnTkFDQURSUVJBSUFBZ0FTZ0NEQkVBQUVVRVFFRUFJUUVNQ3dzZ0FTZ0NCQ0VESUFFb0FnQWhBZ3NnQWkwQUFDRUVJQU5CQVdzaUF3Ui9JQUpCQVdvRklBQWdBU2dDREJFQUFFVUVRRUVBSVFFTUN3c2dBU2dDQkNFRElBRW9BZ0FMSVFJZ0EwRUJheUVESUFJdEFBQWdCRUVJZEhKQkdFY0VRQ0FBS0FJQUlnUkJERFlDRkNBQUlBUW9BZ0FSQVFBTElBTUVmeUFDUVFGcUJTQUFJQUVvQWd3UkFBQkZCRUJCQUNFQkRBc0xJQUVvQWdRaEF5QUJLQUlBQ3lFQ0lBTkJBV3NoQXlBQ0xRQUFRUTFIQkVBZ0FDZ0NBQ0lFUWNZQU5nSVVJQVFnQUNnQ3VBTTJBaGdnQUNBQUtBSUFLQUlBRVFFQUN5QURCSDhnQWtFQmFnVWdBQ0FCS0FJTUVRQUFSUVJBUVFBaEFRd0xDeUFCS0FJRUlRTWdBU2dDQUFzaUFpMEFBQ0VFSUFOQkFXc2lBd1IvSUFKQkFXb0ZJQUFnQVNnQ0RCRUFBRVVFUUVFQUlRRU1Dd3NnQVNnQ0JDRURJQUVvQWdBTElnVkJBV29oQWlBRFFRRnJJUU1nQlMwQUFDQUVRUWgwY2tIL0FVY05BQ0FEUlFSQUlBQWdBU2dDREJFQUFFVUVRRUVBSVFFTUN3c2dBU2dDQkNFRElBRW9BZ0FoQWdzZ0FrRUJhaUVFSUFOQkFXc2hBeUFDTFFBQVFRTkhCRUFnQkNFQ0RBRUxJQU5GQkVBZ0FDQUJLQUlNRVFBQVJRUkFRUUFoQVF3TEN5QUJLQUlFSVFNZ0FTZ0NBQ0VFQ3lBRVFRRnFJUUlnQTBFQmF5RURJQUFvQXRnQklnY29BbGdnQkMwQUFFY05BQ0FEUlFSQUlBQWdBU2dDREJFQUFFVUVRRUVBSVFFTUN3c2dBQ2dDMkFFaEJ5QUJLQUlFSVFNZ0FTZ0NBQ0VDQ3lBQ1FRRnFJUVFnQTBFQmF5RURJQWNvQWdBZ0FpMEFBRWNFUUNBRUlRSU1BUXNnQTBVRVFDQUFJQUVvQWd3UkFBQkZCRUJCQUNFQkRBc0xJQUFvQXRnQklRY2dBU2dDQkNFRElBRW9BZ0FoQkFzZ0JFRUJhaUVDSUFOQkFXc2hBeUFIS0FLd0FTQUVMUUFBUncwQUlBTkZCRUFnQUNBQktBSU1FUUFBUlFSQVFRQWhBUXdMQ3lBQktBSUVJUU1nQVNnQ0FDRUNDeUFDUVFGcUlRUWdBMEVCYXlFRElBSXRBQUJCZ0FGSEJFQWdCQ0VDREFFTElBTkZCRUFnQUNBQktBSU1FUUFBUlFSQVFRQWhBUXdMQ3lBQktBSUVJUU1nQVNnQ0FDRUVDeUFFTFFBQUlRVWdBMEVCYXlJREJIOGdCRUVCYWdVZ0FDQUJLQUlNRVFBQVJRUkFRUUFoQVF3TEN5QUJLQUlFSVFNZ0FTZ0NBQXNpQkVFQmFpRUNJQU5CQVdzaEF5QUVMUUFBSUFWQkNIUnlEUUFnQTBVRVFDQUFJQUVvQWd3UkFBQkZCRUJCQUNFQkRBc0xJQUVvQWdRaEF5QUJLQUlBSVFJTElBSXRBQUFoQkNBRFFRRnJJZ01FZnlBQ1FRRnFCU0FBSUFFb0Fnd1JBQUJGQkVCQkFDRUJEQXNMSUFFb0FnUWhBeUFCS0FJQUN5SUZRUUZxSVFJZ0EwRUJheUVESUFVdEFBQWdCRUVJZEhJTkFDQURSUVJBSUFBZ0FTZ0NEQkVBQUVVRVFFRUFJUUVNQ3dzZ0FTZ0NCQ0VESUFFb0FnQWhBZ3NnQWtFQmFpRUVJQU5CQVdzaEF5QUNMUUFBQkVBZ0JDRUNEQUVMSUFORkJFQWdBQ0FCS0FJTUVRQUFSUVJBUVFBaEFRd0xDeUFCS0FJRUlRTWdBU2dDQUNFRUN5QUVMUUFBSVFVZ0EwRUJheUlEQkg4Z0JFRUJhZ1VnQUNBQktBSU1FUUFBUlFSQVFRQWhBUXdMQ3lBQktBSUVJUU1nQVNnQ0FBc2lCRUVCYWlFQ0lBTkJBV3NoQXlBRUxRQUFJQVZCQ0hSeVFRRkhEUUFnQTBVRVFDQUFJQUVvQWd3UkFBQkZCRUJCQUNFQkRBc0xJQUVvQWdRaEF5QUJLQUlBSVFJTElBSXRBQUFoQkNBRFFRRnJJZ01FZnlBQ1FRRnFCU0FBSUFFb0Fnd1JBQUJGQkVCQkFDRUJEQXNMSUFFb0FnUWhBeUFCS0FJQUN5SUZRUUZxSVFJZ0EwRUJheUVESUFVdEFBQWdCRUVJZEhJTkFDQURSUVJBSUFBZ0FTZ0NEQkVBQUVVRVFFRUFJUUVNQ3dzZ0FTZ0NCQ0VESUFFb0FnQWhBZ3NnQWtFQmFpRUVJQU5CQVdzaEF5QUNMUUFBQkVBZ0JDRUNEQUVMSUFORkJFQWdBQ0FCS0FJTUVRQUFSUVJBUVFBaEFRd0xDeUFCS0FJRUlRTWdBU2dDQUNFRUN5QUVMUUFBSVFVZ0EwRUJheUlEQkg4Z0JFRUJhZ1VnQUNBQktBSU1FUUFBUlFSQVFRQWhBUXdMQ3lBQktBSUVJUU1nQVNnQ0FBc2lCRUVCYWlFQ0lBTkJBV3NoQXlBRUxRQUFJQVZCQ0hSeVFRRkhEUUFnQTBVRVFDQUFJQUVvQWd3UkFBQkZCRUJCQUNFQkRBc0xJQUVvQWdRaEF5QUJLQUlBSVFJTElBSXRBQUFoQkNBRFFRRnJJZ01FZnlBQ1FRRnFCU0FBSUFFb0Fnd1JBQUJGQkVCQkFDRUJEQXNMSUFFb0FnUWhBeUFCS0FJQUN5SUZRUUZxSVFJZ0EwRUJheUVESUFVdEFBQWdCRUVJZEhKRkRRRUxJQUFvQWdBaUJFRWNOZ0lVSUFBZ0JDZ0NBQkVCQUFzZ0FFRUJOZ0t3QWlBQklBTTJBZ1FnQVNBQ05nSUFEQWdMSUFBZ0FDZ0MwQU1nQVVFQ2RHcEI0QVpyS0FJQUVRQUFEUWRCQUNFQkRBWUxJQUFnQUNnQzBBTW9BaHdSQUFBTkJrRUFJUUVNQlFzZ0FDZ0NBQ0lDSUFFMkFoZ2dBa0hlQURZQ0ZDQUFRUUVnQUNnQ0FDZ0NCQkVDQUF3RkN5QUFLQUlZSWdRb0FnUWlBMFVFUUNBQUlBUW9BZ3dSQUFCRkJFQkJBQ0VCREFVTElBUW9BZ1FoQXdzZ0JDZ0NBQ0lCTFFBQUlRVWdBMEVCYXlJQ0JIOGdBVUVCYWdVZ0FDQUVLQUlNRVFBQVJRUkFRUUFoQVF3RkN5QUVLQUlFSVFJZ0JDZ0NBQXNpQVMwQUFDRURJQUFvQWdBaUJrSGRBRFlDRkNBR0lBQW9BcmdETmdJWUlBQW9BZ0FnQXlBRlFRaDBjaUlGUVFKcklnTTJBaHdnQUVFQklBQW9BZ0FvQWdRUkFnQWdCQ0FDUVFGck5nSUVJQVFnQVVFQmFqWUNBQ0FGUVFOSkRRUWdBQ0FESUFBb0FoZ29BaEFSQWdBTUJBc2dBQ2dDQUNJQ0lBRTJBaGdnQWtIR0FEWUNGQ0FBSUFBb0FnQW9BZ0FSQVFBTUF3dEJBQ0VCSUFCQkFVRUFRUUFRMHdJTkFnd0JDMEVBSVFFTElBbEJvQUpxSkFBZ0FROExRUUFoQVNBQVFRQTJBcmdEREFBTEFBdVNBUUVDZndKQUFrQWdBQ2dDdUFNaUFRUi9JQUVGSUFBUTV3TkZEUUVnQUNnQ3VBTUxJQUFvQXRBREtBSVVJZ0ZCMEFGcVJnUkFJQUFvQWdBaUFpQUJOZ0lZSUFKQjVBQTJBaFFnQUVFRElBQW9BZ0FvQWdRUkFnQWdBRUVBTmdLNEF3d0NDeUFBSUFFZ0FDZ0NHQ2dDRkJFREFBMEJDMEVBRHdzZ0FDZ0MwQU1pQUNBQUtBSVVRUUZxUVFkeE5nSVVRUUVMMXdFQkJuOGdBQ2dDR0NJQktBSUVJZ0pGQkVBZ0FDQUJLQUlNRVFBQVJRUkFRUUFQQ3lBQktBSUVJUUlMSUFFb0FnQWlBeTBBQUNFRUlBSkJBV3NpQlFSL0lBTkJBV29GSUFBZ0FTZ0NEQkVBQUVVRVFFRUFEd3NnQVNnQ0JDRUZJQUVvQWdBTElnSXRBQUFoQXlBQUtBSUFJZ1pCM1FBMkFoUWdCaUFBS0FLNEF6WUNHQ0FBS0FJQUlBTWdCRUVJZEhJaUEwRUNheUlFTmdJY0lBQkJBU0FBS0FJQUtBSUVFUUlBSUFFZ0JVRUJhellDQkNBQklBSkJBV28yQWdBZ0EwRURUd1JBSUFBZ0JDQUFLQUlZS0FJUUVRSUFDMEVCQzg4Q0FRVi9JQUFvQWdBaUF5QUFLQUs0QXlJQ05nSVlJQU5CL0FBMkFoUWdBQ2dDQUNBQk5nSWNJQUJCZnlBQUtBSUFLQUlFRVFJQUlBRkJCbXBCQjNGQjBBRnlJUU1nQVVFQmEwRUhjVUhRQVhJaEJDQUJRUUpxUVFkeFFkQUJjaUVGSUFGQkFXcEJCM0ZCMEFGeUlRRURRQUpBQWtBZ0FrSEFBVWdOQUNBQklBSkdJQUpCMkFGclFYaEpjaUFDSUFWR2NnMEJJQUlnQkVZZ0FpQURSbklOQUNBQUtBSUFJZ0VnQWpZQ0dDQUJRZU1BTmdJVUlBQW9BZ0JCQVRZQ0hDQUFRUVFnQUNnQ0FDZ0NCQkVDQUNBQVFRQTJBcmdEUVFFUEN5QUFLQUlBSWdZZ0FqWUNHQ0FHUWVNQU5nSVVJQUFvQWdCQkFqWUNIQ0FBUVFRZ0FDZ0NBQ2dDQkJFQ0FDQUFFT2NEQkVBZ0FDZ0N1QU1oQWd3Q0JVRUFEd3NBQ3dzZ0FDZ0NBQ0lCSUFJMkFoZ2dBVUhqQURZQ0ZDQUFLQUlBUVFNMkFod2dBRUVFSUFBb0FnQW9BZ1FSQWdCQkFRdXdEUUVJZjBFQ0lRRUNRQ0FBS0FMTUF5SUVLQUlVRFFBRFFBSkFJQUFDZndKQUFrQWdBQ0FBS0FMUUF5Z0NCQkVBQUNJQlFRRkhCRUFnQVVFQ1J3MEdJQVJCQVRZQ0ZDQUVLQUlZUlEwQlFRSWhBU0FBS0FMUUF5Z0NFRVVOQmlBQUtBSUFJZ0ZCUGpZQ0ZDQUFJQUVvQWdBUkFRQkJBZzhMQWtBQ1FBSkFJQVFvQWhnT0FnSUJBQXNnQUNnQzFBSWhBUXdGQ3dKQUlBQW9BaUJCM1A4RFRBUkFJQUFvQWh4QjNmOERTQTBCQ3lBQUtBSUFRcXFBZ0lEQSt6ODNBaFFnQUNBQUtBSUFLQUlBRVFFQUN5QUFLQUxVQVNJQlFRMXJRWHBOQkVBZ0FDZ0NBQ0lDSUFFMkFoZ2dBa0VRTmdJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQUNnQ0pDSUNRUXRPQkVBZ0FDZ0NBQ0lCSUFJMkFoZ2dBVUViTmdJVUlBQW9BZ0JCQ2pZQ0hDQUFJQUFvQWdBb0FnQVJBUUFnQUNnQ0pDRUNDeUFBUW9HQWdJQVFOd0s4QWlBQ1FRQktCRUFnQUNnQzJBRWhBVUVBSVFoQkFTRUZRUUVoQXdOQUFrQWdBU2dDQ0NJR1FRVnJRWHhQQkVBZ0FTZ0NEQ0lIUVFWclFYdExEUUVMSUFBb0FnQWlBa0VUTmdJVUlBQWdBaWdDQUJFQkFDQUFLQUlrSVFJZ0FTZ0NEQ0VISUFBb0FzQUNJUVVnQVNnQ0NDRUdJQUFvQXJ3Q0lRTUxJQUFnQlNBSElBVWdCMG9iSWdVMkFzQUNJQUFnQXlBR0lBTWdCa29iSWdNMkFyd0NJQUZCMkFCcUlRRWdDRUVCYWlJSUlBSklEUUFMQ3lBQUtBTGNBUTBDSUFBb0F1QUJCRUFnQUNnQzFBSU5Bd3NDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFBb0FxQURJZ0ZCOXdCTUJFQWdBUTVrQVE0T0FnNE9EZzRERGc0T0RnNE9CQTRPRGc0T0RnNE9CUTRPRGc0T0RnNE9EZzRHRGc0T0RnNE9EZzRPRGc0T0J3NE9EZzRPRGc0T0RnNE9EZzRPRVE0T0RnNE9EZzRPRGc0T0RnNE9EZzRJRGc0T0RnNE9EZzRPRGc0T0RnNE9EZzRPQ1E0TElBRkJ3Z0ZNQkVBZ0FVSDRBRVlOQ2lBQlFZOEJSZzBMSUFGQnFBRkhEUTRnQUVFL05nSzBBeUFBUWJDekFqWUNzQU1nQUVFTk5nS3NBMEVOREJJTElBRkJ3d0ZHRFFzZ0FVSGdBVVlORENBQlFmOEJSdzBOSUFCQlB6WUN0QU1nQUVHd3N3STJBckFESUFCQkVEWUNyQU5CRUF3UkN5QUFRUUEyQXJRRElBQkJzTE1DTmdLd0F5QUFRUUUyQXF3RFFRRU1FQXNnQUVFRE5nSzBBeUFBUWZDOEFqWUNzQU1nQUVFQ05nS3NBMEVDREE4TElBQkJDRFlDdEFNZ0FFR0F2QUkyQXJBRElBQkJBellDckFOQkF3d09DeUFBUVE4MkFyUURJQUJCZ0xzQ05nS3dBeUFBUVFRMkFxd0RRUVFNRFFzZ0FFRVlOZ0swQXlBQVFkQzVBallDc0FNZ0FFRUZOZ0tzQTBFRkRBd0xJQUJCSXpZQ3RBTWdBRUdBdUFJMkFyQURJQUJCQmpZQ3JBTkJCZ3dMQ3lBQVFUQTJBclFESUFCQjhMVUNOZ0t3QXlBQVFRYzJBcXdEUVFjTUNnc2dBRUUvTmdLMEF5QUFRYkN6QWpZQ3NBTWdBRUVKTmdLc0EwRUpEQWtMSUFCQlB6WUN0QU1nQUVHd3N3STJBckFESUFCQkNqWUNyQU5CQ2d3SUN5QUFRVDgyQXJRRElBQkJzTE1DTmdLd0F5QUFRUXMyQXF3RFFRc01Cd3NnQUVFL05nSzBBeUFBUWJDekFqWUNzQU1nQUVFTU5nS3NBMEVNREFZTElBQkJQellDdEFNZ0FFR3dzd0kyQXJBRElBQkJEallDckFOQkRnd0ZDeUFBUVQ4MkFyUURJQUJCc0xNQ05nS3dBeUFBUVE4MkFxd0RRUThNQkFzZ0FDZ0NBQ0lCUVJFMkFoUWdBU0FBS0FLY0F6WUNHQ0FBS0FJQUlBQW9BcUFETmdJY0lBQW9BZ0FnQUNnQ3BBTTJBaUFnQUNnQ0FDQUFLQUtvQXpZQ0pDQUFJQUFvQWdBb0FnQVJBUUFnQUNnQ0pDRUNJQUFvQXF3RERBTUxJQVFvQWhCRkJFQWdBQ2dDQUNJQlFTUTJBaFFnQUNBQktBSUFFUUVBQ3lBQUtBTFVBa1VOQkNBQUVMY0ZRUUVQQzBFQ0lRRWdBQ2dDa0FFaUFpQUFLQUtZQVU0TkJDQUFJQUkyQXBnQkRBUUxJQUJCUHpZQ3RBTWdBRUd3c3dJMkFyQURJQUJCQ0RZQ3JBTkJDQXNpQVRZQ3lBSWdBQ0FCTmdMRUFpQUNRUUJLQkVBZ0FDZ0MyQUVoQVVFQUlRTURRQ0FCSUFBb0Fxd0RJZ0kyQWlnZ0FTQUNOZ0lrSUFFZ0FTZ0NDQ0FBS0FJY2JDQUNJQUFvQXJ3Q2JCQnBOZ0ljSUFFZ0FTZ0NEQ0FBS0FJZ2JDQUFLQUtzQXlBQUtBTEFBbXdRYVRZQ0lDQUJJQUVvQWdnZ0FDZ0NIR3dnQUNnQ3ZBSVFhVFlDTENBQktBSU1JQUFvQWlCc0lBQW9Bc0FDRUdraEFpQUJRUUEyQWxBZ0FVRUJOZ0kwSUFFZ0FqWUNNQ0FCUWRnQWFpRUJJQU5CQVdvaUF5QUFLQUlrU0EwQUN5QUFLQUtzQXlFQkN5QUFJQUFvQWlBZ0FTQUFLQUxBQW13UWFUWUN6QUpCQVNFRklBQW9Bc3dESUFBb0F0UUNJZ0VnQUNnQ0pFNEVmeUFBS0FMZ0FVRUFSd1ZCQVFzMkFoQUxJQUZGQkVBZ0JFRUNOZ0lZREFFTEN5QUVRUUEyQWhoQkFROExJQUVMUXdFQmZ5QUFLQUxNQXlJQlFRRTJBaGdnQVVJQU53SVFJQUZCZ1FFMkFnQWdBQ0FBS0FJQUtBSVFFUUVBSUFBZ0FDZ0MwQU1vQWdBUkFRQWdBRUVBTmdLZ0FRc2NBQ0FBSUFBb0F0UURLQUlJRVFFQUlBQW9Bc3dEUVlFQk5nSUFDd3dBSUFBb0FoaEJBVFlDSkF1TEFRRUNmeUFBS0FJWUlnRW9BaUJCQVVHQUlDQUJLQUljRUY4aUFrVUVRQ0FCS0FJa0JFQWdBQ2dDQUNJQ1FTczJBaFFnQUNBQ0tBSUFFUUVBQ3lBQUtBSUFJZ0pCK3dBMkFoUWdBRUYvSUFJb0FnUVJBZ0FnQVNnQ0lFSC9BVG9BQUNBQktBSWdRZGtCT2dBQlFRSWhBZ3NnQVVFQU5nSWtJQUVnQWpZQ0JDQUJJQUVvQWlBMkFnQkJBUXRVQVFKL0lBRkJBRW9FUUNBQklBQW9BaGdpQWlnQ0JDSURTZ1JBQTBBZ0FDQUNLQUlNRVFBQUdpQUJJQU5ySWdFZ0FpZ0NCQ0lEU2cwQUN3c2dBaUFESUFGck5nSUVJQUlnQWlnQ0FDQUJhallDQUFzTGV3RUJmeUFBS0FJWUlnSkZCRUFnQUNBQVFRQkJLQ0FBS0FJRUtBSUFFUVFBSWdJMkFoZ2dBaUFBUVFCQmdDQWdBQ2dDQkNnQ0FCRUVBRFlDSUNBQUtBSVlJUUlMSUFJZ0FUWUNIQ0FDUWZrQU5nSVlJQUpCK2dBMkFoUWdBa0g3QURZQ0VDQUNRZndBTmdJTUlBSkIvUUEyQWdnZ0FrSUFOd0lBQzgwQkFRUi9Jd0JCRUdzaUJDUUFJQUFvQWhRaUEwSE5BVWNFUUNBQUtBSUFJZ1VnQXpZQ0dDQUZRUlUyQWhRZ0FDQUFLQUlBS0FJQUVRRUFDd0pBSUFBb0Fvd0JJZ1VnQUNnQ2RDSUdUd1JBSUFBb0FnQWlBVUgrQURZQ0ZDQUFRWDhnQVNnQ0JCRUNBRUVBSVFJTUFRc2dBQ2dDQ0NJREJFQWdBeUFHTmdJSUlBTWdCVFlDQkNBQUlBTW9BZ0FSQVFBTElBUkJBRFlDRENBQUlBRWdCRUVNYWlBQ0lBQW9Bc0FES0FJRUVRY0FJQUFnQkNnQ0RDSUNJQUFvQW93QmFqWUNqQUVMSUFSQkVHb2tBQ0FDQyt3L0FSUi9Ba0FDUUFKQUFrQUNRQ0FBS0FJVUlnRkJ5Z0ZyRGdNQUFRTUNDeUFBSUFCQkFVRWNJQUFvQWdRb0FnQVJCQUFpRERZQ3ZBTWdERUVBTmdJSUlBeEJ6Z0UyQWdRZ0RFSFBBVFlDQUNBQUtBTFVBU0lCUVFoSEJFQWdBQ2dDQUNJQ0lBRTJBaGdnQWtFUU5nSVVJQUFnQUNnQ0FDZ0NBQkVCQUFzZ0FDZ0NGQ0lCUWNvQlJ3UkFJQUFvQWdBaUFpQUJOZ0lZSUFKQkZUWUNGQ0FBSUFBb0FnQW9BZ0FSQVFBTEFuOGdBQ2dDckFNaUFpQUFLQUl3YkNJRElBQW9BalFpQkUwRVFDQUFJQUFvQWh3Z0FoQnBOZ0p3UVFFaEFTQUFLQUlnREFFTElBUkJBWFFnQTA4RVFDQUFJQUFvQWh4QkFYUWdBaEJwTmdKd1FRSWhBU0FBS0FJZ1FRRjBEQUVMUVFNaEFTQUVRUU5zSUFOUEJFQWdBQ0FBS0FJY1FRTnNJQUlRYVRZQ2NDQUFLQUlnUVFOc0RBRUxJQVJCQW5RZ0EwOEVRQ0FBSUFBb0FoeEJBblFnQWhCcE5nSndRUVFoQVNBQUtBSWdRUUowREFFTFFRVWhBU0FFUVFWc0lBTlBCRUFnQUNBQUtBSWNRUVZzSUFJUWFUWUNjQ0FBS0FJZ1FRVnNEQUVMUVFZaEFTQUVRUVpzSUFOUEJFQWdBQ0FBS0FJY1FRWnNJQUlRYVRZQ2NDQUFLQUlnUVFac0RBRUxRUWNoQVNBRVFRZHNJQU5QQkVBZ0FDQUFLQUljUVFkc0lBSVFhVFlDY0NBQUtBSWdRUWRzREFFTElBUkJBM1FnQTA4RVFDQUFJQUFvQWh4QkEzUWdBaEJwTmdKd1FRZ2hBU0FBS0FJZ1FRTjBEQUVMUVFraEFTQUVRUWxzSUFOUEJFQWdBQ0FBS0FJY1FRbHNJQUlRYVRZQ2NDQUFLQUlnUVFsc0RBRUxRUW9oQVNBRVFRcHNJQU5QQkVBZ0FDQUFLQUljUVFwc0lBSVFhVFlDY0NBQUtBSWdRUXBzREFFTFFRc2hBU0FFUVF0c0lBTlBCRUFnQUNBQUtBSWNRUXRzSUFJUWFUWUNjQ0FBS0FJZ1FRdHNEQUVMUVF3aEFTQUVRUXhzSUFOUEJFQWdBQ0FBS0FJY1FReHNJQUlRYVRZQ2NDQUFLQUlnUVF4c0RBRUxRUTBoQVNBRVFRMXNJQU5QQkVBZ0FDQUFLQUljUVExc0lBSVFhVFlDY0NBQUtBSWdRUTFzREFFTFFRNGhBU0FFUVE1c0lBTlBCRUFnQUNBQUtBSWNRUTVzSUFJUWFUWUNjQ0FBS0FJZ1FRNXNEQUVMUVE4aEFTQUFLQUljSVFZZ0JFRVBiQ0FEVHdSQUlBQWdCa0VQYkNBQ0VHazJBbkFnQUNnQ0lFRVBiQXdCQ3lBQUlBWkJCSFFnQWhCcE5nSndRUkFoQVNBQUtBSWdRUVIwQ3lBQUtBS3NBeEJwSVFJZ0FDQUJOZ0xJQWlBQUlBRTJBc1FDSUFBZ0FqWUNkQUpBSUFBb0FpUWlCRUVBVEEwQUlBQW9BdGdCSVFJZ0JFRUJhMEVIVHdSQUlBUkJlSEVoQmtFQUlRTURRQ0FDSUFFMkFpZ2dBaUFCTmdJa0lBSWdBVFlDa0FVZ0FpQUJOZ0tNQlNBQ0lBRTJBcmdFSUFJZ0FUWUN0QVFnQWlBQk5nTGdBeUFDSUFFMkF0d0RJQUlnQVRZQ2lBTWdBaUFCTmdLRUF5QUNJQUUyQXJBQ0lBSWdBVFlDckFJZ0FpQUJOZ0xZQVNBQ0lBRTJBdFFCSUFJZ0FUWUNnQUVnQWlBQk5nSjhJQUpCd0FWcUlRSWdBMEVJYWlJRElBWkhEUUFMQ3lBRVFRZHhJZ1JGRFFCQkFDRURBMEFnQWlBQk5nSW9JQUlnQVRZQ0pDQUNRZGdBYWlFQ0lBTkJBV29pQXlBRVJ3MEFDd3NDUUNBQUtBSWtJZ2xCQUV3TkFFRUlRUVFnQUNnQ1RCc2hDaUFBS0FMSUFpRURJQUFvQXNRQ0lRUWdBQ2dDMkFFaUJ5RUlBMEFDUUNBS0lBUWlBVWdOQUNBQUtBSzhBaUlDSUFnb0FnZ2lEVUVCZEc4TkFFRUNJUVlEUUNBRUlBWnNJZ0VnQ2tvTkFTQUNJQVpCQVhRaUJpQU5iRzlGRFFBTEN5QUlJQUUyQWlRQ1FDQUtJQU1pQWtnTkFDQUFLQUxBQWlJTklBZ29BZ3dpRGtFQmRHOE5BRUVDSVFZRFFDQURJQVpzSWdJZ0Nrb05BU0FOSUFaQkFYUWlCaUFPYkc5RkRRQUxDeUFJSUFJMkFpZ0NRQ0FDUVFGMElnWWdBVWdFUUNBSUlBWTJBaVFNQVFzZ0FpQUJRUUYwSWdGTURRQWdDQ0FCTmdJb0N5QUlRZGdBYWlFSUlBdEJBV29pQ3lBSlJ3MEFDeUFKUVFCTURRQkJBQ0VHQTBBZ0J5QUhLQUlrSUFjb0FnZ2dBQ2dDSEd4c0lBQW9BcXdESUFBb0Fyd0NiQkJwTmdJc0lBY2dCeWdDS0NBSEtBSU1JQUFvQWlCc2JDQUFLQUtzQXlBQUtBTEFBbXdRYVRZQ01DQUhRZGdBYWlFSElBWkJBV29pQmlBQUtBSWtJZ2xJRFFBTEN5QUFLQUlzUVFGcklnRkJCazBFUUNBQlFRSjBRZkNzQW1vb0FnQWhDUXNnQUNBSk5nSjRJQUJCQVNBSklBQW9BbFFiTmdKOElBQWdBQkN6QlFSL0lBQW9Bc0FDQlVFQkN6WUNnQUVnQUNBQVFRRkJnQW9nQUNnQ0JDZ0NBQkVFQUVFQVFZQUVFRGdpQWtHQUJHb2lBVFlDMEFJRFFDQUJJQVZxSUFVNkFBQWdBU0FGUVFGeUlnTnFJQU02QUFBZ0FTQUZRUUp5SWdOcUlBTTZBQUFnQVNBRlFRTnlJZ05xSUFNNkFBQWdBU0FGUVFSeUlnTnFJQU02QUFBZ0FTQUZRUVZ5SWdOcUlBTTZBQUFnQVNBRlFRWnlJZ05xSUFNNkFBQWdBU0FGUVFkeUlnTnFJQU02QUFBZ0JVRUlhaUlGUVlBQ1J3MEFDeUFDUVlBR2FrSC9BVUdBQkJBNEdnSkFBa0FnQUNnQ2RFVU5BQ0FBS0FKd1JRMEFJQUFvQW5oQkFFb05BUXNnQUNnQ0FDSUJRU0UyQWhRZ0FDQUJLQUlBRVFFQUN5QU1RUUEyQWd3Z0FCQ3pCU0VCSUF4Q0FEY0NGQ0FNSUFFMkFoQUNRQ0FBS0FKVVJRUkFJQUJCQURZQ2JDQUFRZ0EzQW1RTUFRc2dBQ2dDUUVVRVFDQUFRUUEyQW13Z0FFSUFOd0prQ3lBQUtBSkVCRUFnQUNnQ0FDSUJRVEEyQWhRZ0FDQUJLQUlBRVFFQUN3SkFJQUFvQW5oQkEwY0VRQ0FBUVFBMkFvZ0JJQUJCQURZQ2JDQUFRZ0UzQW1RTUFRc2dBQ2dDaUFFRVFDQUFRUUUyQW1nTUFRc2dBQ2dDWEFSQUlBQkJBVFlDYkF3QkN5QUFRUUUyQW1RTElBQW9BbVFFUUNBQUlBQkJBVUhZQUNBQUtBSUVLQUlBRVFRQUlnRTJBdVFESUFGQkFEWUNSQ0FCUWZBQk5nSU1JQUZCOFFFMkFnZ2dBVUh5QVRZQ0FDQUJRUUEyQWpRZ0FDZ0NlRUVGVGdSQUlBQW9BZ0JDdVlDQWdNQUFOd0lVSUFBZ0FDZ0NBQ2dDQUJFQkFBc2dBQ2dDWUNJSFFZRUNUZ1JBSUFBb0FnQkN1NENBZ0lBZ053SVVJQUFnQUNnQ0FDZ0NBQkVCQUNBQUtBSmdJUWNMSUFBb0FuZ2lDRUVCYXlJS1FYaHhJUVlnQ2tFSGNTRUVJQUFvQXVRRElRa2dDRUVDU0NFTElBaEJBbXRCQjBraERVRUJJUUlEUUNBQ0lnVkJBV29pQWlFREFrQWdDdzBBUVFBaEFTQUNJUU1nRFVVRVFBTkFJQUlnQTJ3Z0Ftd2dBbXdnQW13Z0Ftd2dBbXdnQW13Z0Ftd2hBeUFCUVFocUlnRWdCa2NOQUFzTFFRQWhBU0FFUlEwQUEwQWdBaUFEYkNFRElBRkJBV29pQVNBRVJ3MEFDd3NnQXlBSFRBMEFDMEVCSVFRZ0JVRUJUUVJBSUFBb0FnQWlBU0FETmdJWUlBRkJPallDRkNBQUlBQW9BZ0FvQWdBUkFRQUxBa0FnQ0VFQVRBMEFJQWxCSUdvaEFpQUlRUU54SVF0QkFDRUdBa0FnQ2tFRFNRUkFRUUFoQXd3QkN5QUlRWHh4SVExQkFDRURRUUFoQ2dOQUlBSWdBMEVDZENJQmFpQUZOZ0lBSUFJZ0FVRUVjbW9nQlRZQ0FDQUNJQUZCQ0hKcUlBVTJBZ0FnQWlBQlFReHlhaUFGTmdJQUlBTkJCR29oQXlBRUlBVnNJQVZzSUFWc0lBVnNJUVFnQ2tFRWFpSUtJQTFIRFFBTEN5QUxCRUFEUUNBQ0lBTkJBblJxSUFVMkFnQWdBMEVCYWlFRElBUWdCV3doQkNBR1FRRnFJZ1lnQzBjTkFBc0xJQWhCQUV3TkFFRUFJUU1nQUNnQ0xFRUNSeUVGUVFFaEJnTkFJQWNnQkNBQ0lBVUVmeUFEQlNBRFFRSjBRYUN6QW1vb0FnQUxRUUowYWlJS0tBSUFJZ0Z0SUFGQkFXb2lDMndpQVU0RVFDQUtJQXMyQWdCQkFDRUdJQUVoQkNBRFFRRnFJZ01nQ0VjTkFRc2dCa0VCY1NFQlFRRWhCa0VBSVFNZ0FVVU5BQXNMSUFBb0FuZ2hBaUFBS0FJQUlnRWdCRFlDR0NBQkFuOGdBa0VEUmdSQUlBRWdDU2dDSURZQ0hDQUJJQWtvQWlRMkFpQWdBU0FKS0FJb05nSWtRZUFBREFFTElBQW9BZ0FoQVVIaEFBczJBaFFnQUVFQklBRW9BZ1FSQWdBZ0FFRUJJQVFnQUNnQ2VDQUFLQUlFS0FJSUVRZ0FJUTRnQUNnQ2VDSUNRUUJLQkVCQkFDRUhJQVFoQVFOQUlBRWdDU0FIUVFKMElnTnFLQUlnSWcxdElRVWdEVUVBU2dSQUlBVkJmSEVoRVNBRlFRTnhJUThnQlVFQmF5RVNJQU1nRG1vaENDQU5RUUZySWhOQkFYWWhGRUVBSVFZRFFDQUVJQVVnQm13aUEwb0VRQ0FHUWY4QmJDQVVhaUFUYlNFTEEwQUNRQ0FGUVFCTURRQkJBQ0VLUVFBaEFrRUFJUkFnRWtFRFR3UkFBMEFnQ0NnQ0FDQUNJQU5xYWlBTE9nQUFJQWdvQWdBZ0FrRUJjaUFEYW1vZ0N6b0FBQ0FJS0FJQUlBSkJBbklnQTJwcUlBczZBQUFnQ0NnQ0FDQUNRUU55SUFOcWFpQUxPZ0FBSUFKQkJHb2hBaUFRUVFScUloQWdFVWNOQUFzTElBOUZEUUFEUUNBSUtBSUFJQUlnQTJwcUlBczZBQUFnQWtFQmFpRUNJQXBCQVdvaUNpQVBSdzBBQ3dzZ0FTQURhaUlESUFSSURRQUxDeUFHUVFGcUlnWWdEVWNOQUFzZ0FDZ0NlQ0VDQ3lBRklRRWdCMEVCYWlJSElBSklEUUFMQ3lBSklBUTJBaFFnQ1NBT05nSVFJQUFRcXdVQ1FDQUFLQUpZUVFKSERRQWdBQ2dDZUVFQVRBMEFJQUFvQW5CQkFYUkJCR29oQVNBQUtBTGtBeUVEUVFBaEFnTkFJQU1nQWtFQ2RHb2dBRUVCSUFFZ0FDZ0NCQ2dDQkJFRUFEWUNSQ0FDUVFGcUlnSWdBQ2dDZUVnTkFBc0xJQXdnQUNnQzVBTTJBaFFMSUFBb0FteEZCRUFnQUNnQ2FFVU5BUXRCQUNFQ0lBQWdBRUVCUVN3Z0FDZ0NCQ2dDQUJFRUFDSUJOZ0xrQXlBQlFRQTJBaWdnQVVFQU5nSWdJQUZCK0FFMkFnd2dBVUg1QVRZQ0FDQUFLQUo0UVFOSEJFQWdBQ2dDQUNJRFFUQTJBaFFnQUNBREtBSUFFUUVBQ3lBQklBQkJBVUdBQVNBQUtBSUVLQUlBRVFRQU5nSVlBMEFnQUVFQlFZQWdJQUFvQWdRb0FnUVJCQUFoQXlBQ1FRSjBJZ1FnQVNnQ0dHb2dBellDQUNBQVFRRkJnQ0FnQUNnQ0JDZ0NCQkVFQUNFRElBRW9BaGdnQkVFRWNtb2dBellDQUNBQ1FRSnFJZ0pCSUVjTkFBc2dBVUVCTmdJY0FrQWdBQ2dDYkFSQVFRZ2hBMEU2SVFRQ1FDQUFLQUpnSWdKQkNFNEVRQ0FDUVlFQ1NRMEJRVHNoQkVHQUFpRURDeUFBS0FJQUlnVWdBellDR0NBRklBUTJBaFFnQUNBQUtBSUFLQUlBRVFFQUN5QUFRUUVnQWtFRElBQW9BZ1FvQWdnUkNBQWhBeUFCSUFJMkFoUWdBU0FETmdJUURBRUxJQUZCQURZQ0VBc2dBQ2dDV0FSQUlBQkJBallDV0NBQklBQkJBU0FBS0FKd1FRWnNRUXhxSUFBb0FnUW9BZ1FSQkFBMkFpQWdBQkNwQlFzZ0RDQUFLQUxrQXpZQ0dBc2dBQ2dDUkVVRVFBSkFJQXdvQWhBRVFFRUFJUUlnQUNBQVFRRkJNQ0FBS0FJRUtBSUFFUVFBSWdFMkF0d0RJQUZCQURZQ0NDQUJRZEFCTmdJQUlBRWdBQ2dDZUNBQUtBSndiQ0lETmdJb0FrQWdBQ2dDd0FKQkFrWUVRQ0FCUWRFQk5nSU1JQUZCMGdFMkFnUWdBRUVCSUFNZ0FDZ0NCQ2dDQkJFRUFDRUNEQUVMSUFGQjB3RTJBZ3dnQVVIVUFUWUNCQXNnQVNBQ05nSWdJQUFvQWlnaEF5QUFLQUxjQXlJQklBQkJBVUdBQ0NBQUtBSUVLQUlBRVFRQU5nSVFJQUVnQUVFQlFZQUlJQUFvQWdRb0FnQVJCQUEyQWhRZ0FTQUFRUUZCZ0FnZ0FDZ0NCQ2dDQUJFRUFEWUNHQ0FCSUFCQkFVR0FDQ0FBS0FJRUtBSUFFUVFBSWdRMkFod2dBU2dDR0NFRklBRW9BaFFoQmlBQktBSVFJUWRCQUNFQ1FZQi9JUUVDUUNBRFFRZEdCRUFEUUNBSElBSkJBblFpQTJvZ0FVSFRtd3RzUVlDQUFtcEJFSFUyQWdBZ0F5QUdhaUFCUWNTV0RteEJnSUFDYWtFUWRUWUNBQ0FESUFWcUlBRkIzYVI2YkRZQ0FDQURJQVJxSUFGQnpaOTliRUdBZ0FKcU5nSUFJQUZCQVdvaEFTQUNRUUZxSWdKQmdBSkhEUUFNQWdzQUN3TkFJQWNnQWtFQ2RDSURhaUFCUWVuTkJXeEJnSUFDYWtFUWRUWUNBQ0FESUFacUlBRkJvb3NIYkVHQWdBSnFRUkIxTmdJQUlBTWdCV29nQVVHdWtuMXNOZ0lBSUFNZ0JHb2dBVUhuejM1c1FZQ0FBbW8yQWdBZ0FVRUJhaUVCSUFKQkFXb2lBa0dBQWtjTkFBc0xEQUVMSUFBZ0FFRUJRUndnQUNnQ0JDZ0NBQkVFQUNJQk5nTGdBeUFCUVljQk5nSUFBa0FDUUFKQUlBQW9BaWdpQWtFSFN3MEFBa0JCQVNBQ2RFSE1BWEZGQkVCQkFTQUNkRUV3Y1EwQklBSkJBVWNOQWlBQUtBSWtRUUZIRFFNTUJBc2dBQ2dDSkVFRFJ3MENEQU1MSUFBb0FpUkJCRWNOQVF3Q0N5QUFLQUlrUVFCS0RRRUxJQUFvQWdBaUFrRUxOZ0lVSUFBZ0FpZ0NBQkVCQUFzQ1FDQUFLQUt3QWtVTkFBSkFJQUFvQWloQkFtc09CUUVBQUFBQkFBc2dBQ2dDQUNJQ1FSdzJBaFFnQUNBQ0tBSUFFUUVBQ3dKQUFrQUNRQUpBQWtBQ1FDQUFLQUlzSWdKQkFXc09CZ0FCQkFNRUFnUUxJQUJCQVRZQ2VBSkFBa0FDUUNBQUtBSW9RUUZyRGdjQUFRQUNBZ0lBQWdzZ0FVR0lBVFlDQkNBQUtBSWtJZ0ZCQWtnTkJpQUJRUUZySWdWQkIzRWhBeUFBS0FMWUFTRUVRUUVoQWlBQlFRSnJRUWRQQkVBZ0JVRjRjU0VHUVFBaEJRTkFJQVFnQWtIWUFHeHFJZ0ZCQURZQ05DQUJRUUEyQW93QklBRkJBRFlDNUFFZ0FVRUFOZ0s4QWlBQlFRQTJBcFFESUFGQkFEWUM3QU1nQVVFQU5nTEVCQ0FCUVFBMkFwd0ZJQUpCQ0dvaEFpQUZRUWhxSWdVZ0JrY05BQXNMSUFORkRRWkJBQ0VCQTBBZ0JDQUNRZGdBYkdwQkFEWUNOQ0FDUVFGcUlRSWdBVUVCYWlJQklBTkhEUUFMREFZTEFrQUNRQUpBQWtBZ0FDZ0NzQUlPQWdBQkFnc2dBVUdKQVRZQ0JBd0NDeUFCUVlvQk5nSUVEQUVMSUFBb0FnQWlBVUVjTmdJVUlBQWdBU2dDQUJFQkFBc2dBQ2dDNEFNZ0FFRUJRWUFZSUFBb0FnUW9BZ0FSQkFBaUJEWUNHRUVBSVFFRFFDQUVJQUZCQW5ScUlnSWdBVUdMbVFGc05nSUFJQUpCZ0JCcUlBRkJyenBzUVlDQUFtbzJBZ0FnQWtHQUNHb2dBVUhHckFKc05nSUFJQVFnQVVFQmNpSURRUUowYWlBRFFZdVpBV3cyQWdBZ0FrR0VFR29nQTBHdk9teEJnSUFDYWpZQ0FDQUNRWVFJYWlBRFFjYXNBbXcyQWdBZ0FVRUNhaUlCUVlBQ1J3MEFDd3dGQ3lBQUtBSUFJZ0ZCSERZQ0ZDQUFJQUVvQWdBUkFRQU1CQXNnQUVFRE5nSjRBa0FDUUFKQUFrQUNRQ0FBS0FJb1FRRnJEZ2NBQXdFRUJBUUNCQXNnQVVHTEFUWUNCQXdIQ3lBQlFZd0JOZ0lFSUFBUXRnVU1CZ3NnQVVHTUFUWUNCQ0FBS0FMZ0F5SUJJQUJCQVVHQUNDQUFLQUlFS0FJQUVRUUFOZ0lJSUFFZ0FFRUJRWUFJSUFBb0FnUW9BZ0FSQkFBMkFnd2dBU0FBUVFGQmdBZ2dBQ2dDQkNnQ0FCRUVBRFlDRUNBQklBQkJBVUdBQ0NBQUtBSUVLQUlBRVFRQUlnUTJBaFFnQVNnQ0VDRUZJQUVvQWd3aEJpQUJLQUlJSVFkQkFDRUNRWUIvSVFFRFFDQUhJQUpCQW5RaUEyb2dBVUhUbXd0c1FZQ0FBbXBCRUhVMkFnQWdBeUFHYWlBQlFjU1dEbXhCZ0lBQ2FrRVFkVFlDQUNBRElBVnFJQUZCM2FSNmJEWUNBQ0FESUFScUlBRkJ6Wjk5YkVHQWdBSnFOZ0lBSUFGQkFXb2hBU0FDUVFGcUlnSkJnQUpIRFFBTERBVUxBa0FDUUFKQUlBQW9BckFDRGdJQUFRSUxJQUZCalFFMkFnUU1CZ3NnQVVHT0FUWUNCQXdGQ3lBQUtBSUFJZ0ZCSERZQ0ZDQUFJQUVvQWdBUkFRQU1CQXNnQUNnQ0FDSUJRUncyQWhRZ0FDQUJLQUlBRVFFQURBTUxJQUJCQXpZQ2VDQUFLQUlvUVFaR0JFQUNRQUpBQWtBZ0FDZ0NzQUlPQWdBQkFnc2dBVUdOQVRZQ0JBd0ZDeUFCUVk0Qk5nSUVEQVFMSUFBb0FnQWlBVUVjTmdJVUlBQWdBU2dDQUJFQkFBd0RDeUFBS0FJQUlnRkJIRFlDRkNBQUlBRW9BZ0FSQVFBTUFnc2dBRUVFTmdKNEFrQUNRQUpBSUFBb0FpaEJCR3NPQWdFQUFnc2dBVUdQQVRZQ0JDQUFFTFlGREFNTElBRkJrQUUyQWdRTUFnc2dBQ2dDQUNJQlFSdzJBaFFnQUNBQktBSUFFUUVBREFFTElBQW9BaWdnQWtZRVFDQUFJQUFvQWlRMkFuZ2dBVUdRQVRZQ0JBd0JDeUFBS0FJQUlnRkJIRFlDRkNBQUlBRW9BZ0FSQVFBTElBQWdBQ2dDVkFSL1FRRUZJQUFvQW5nTE5nSjhRUUFoQmlBQUlBQkJBVUdnQVNBQUtBSUVLQUlBRVFRQUlnTTJBdHdESUFOQkFEWUNDQ0FEUWRrQk5nSUVJQU5CMmdFMkFnQWdBQ2dDdEFJRVFDQUFLQUlBSWdGQkdqWUNGQ0FBSUFFb0FnQVJBUUFMSUFBb0FpUkJBRW9FUUNBQUtBTFlBU0VCQTBBZ0FDZ0N3QUloQkNBQUtBSzhBaUVISUFBb0FzUUNJUWdnQVNnQ0pDRUpJQUVvQWdnaENpQURJQVpCQW5ScUlnSWdBU2dDS0NBQktBSU1iQ0FBS0FMSUFtMGlCVFlDWkNBSklBcHNJQWh0SVFnQ1FDQUJLQUkwUlFSQUlBSkIyd0UyQWpRTUFRc2dCeUFJUnlBRUlBVkhja1VFUUNBQ1Fkd0JOZ0kwREFFTEFrQWdDRUVCZENBSFJ5SUpJQVFnQlVkeVJRUkFJQUpCM1FFMkFqUU1BUXNnQ1NBRlFRRjBJQVJIY2tVRVFDQUNRZDRCTmdJMERBRUxBa0FnQnlBSElBaHRJZ2NnQ0d4ckRRQWdCQ0FFSUFWdElnUWdCV3hyRFFBZ0FrSGZBVFlDTkNBRElBWnFJZ1VnQkRvQWxnRWdCU0FIT2dDTUFRd0JDeUFBS0FJQUlnUkJKellDRkNBQUlBUW9BZ0FSQVFBTElBQW9BZ1FvQWdnaEJDQUNJQUJCQVNBQUtBSndJQUFvQXJ3Q0VKSURJQUFvQXNBQ0lBUVJDQUEyQWd3TElBRkIyQUJxSVFFZ0JrRUJhaUlHSUFBb0FpUklEUUFMQ3dzZ0FDZ0NiQ0VFSUFBZ0FFRUJRUndnQUNnQ0JDZ0NBQkVFQUNJQk5nTElBeUFCUWdBM0FnZ2dBVUhWQVRZQ0FDQUFLQUpVQkVBQ1FDQUJJQUFvQXNBQ0lnSTJBaEFnQUNnQ0JDRURJQVFFUUNBREtBSVFJUU1nQVNBQVFRRkJBQ0FBS0FKNElBQW9BbkJzSUFBb0FuUWdBaENTQXlBQktBSVFJQU1SQ1FBMkFnZ01BUXNnQVNBQVFRRWdBQ2dDZUNBQUtBSndiQ0FDSUFNb0FnZ1JDQUEyQWd3TEN3dEJBQ0VCSUFBZ0FFRUJRZFFBSUFBb0FnUW9BZ0FSQkFBaUF6WUMyQU1nQTBHUkFUWUNBQ0FBS0FJa1FRQktCRUFnQUNnQzJBRWhBZ05BSUFJZ0FFRUJRWUFDSUFBb0FnUW9BZ0FSQkFBaUJEWUNWQ0FFUVFCQmdBSVFPQm9nQXlBQlFRSjBha0YvTmdJc0lBSkIyQUJxSVFJZ0FVRUJhaUlCSUFBb0FpUklEUUFMQ3dKQUlBQW9BdVFCQkVCQkFDRUNJQUFnQUVFQlFjQUJJQUFvQWdRb0FnQVJCQUFpQVRZQzFBTWdBVUcwQVRZQ0NDQUJRYlVCTmdJQUlBRkJQR3BCQUVHQUFSQTRHaUFCUWZFQU9nQzhBUUpBSUFBb0F1QUJSUTBBSUFBZ0FFRUJJQUFvQWlSQkNIUWdBQ2dDQkNnQ0FCRUVBQ0lCTmdLZ0FTQUFLQUlrUVFCTURRQURRQ0FCUWY4QlFZQUNFRGhCZ0FKcUlRRWdBa0VCYWlJQ0lBQW9BaVJJRFFBTEN3d0JDMEVBSVFJZ0FDQUFRUUZCM0FFZ0FDZ0NCQ2dDQUJFRUFDSUJOZ0xVQXlBQlFic0JOZ0lJSUFGQnZBRTJBZ0FDUUNBQUtBTGdBVVVFUUNBQlFnQTNBbHdnQVVJQU53SlVJQUZDQURjQ1RDQUJRZ0EzQWtRTUFRc2dBQ0FBUVFFZ0FDZ0NKRUVJZENBQUtBSUVLQUlBRVFRQUlnTTJBcUFCSUFBb0FpUkJBRW9FUUFOQUlBTkIvd0ZCZ0FJUU9FR0FBbW9oQXlBQ1FRRnFJZ0lnQUNnQ0pFZ05BQXNMSUFGQ0FEY0NPQ0FCUWdBM0FqQUxDeUFBS0FMTUF5Z0NFQVIvUVFFRklBQW9Ba0JCQUVjTElRSkJBQ0VESUFBZ0FFRUJRZlFBSUFBb0FnUW9BZ0FSQkFBaUFUWUN4QU1nQVVFQU5nSndJQUZCd3dFMkFnZ2dBVUhFQVRZQ0FBSkFJQUlFUUNBQUtBSWtRUUJLQkVBZ0FDZ0MyQUVoQWdOQUlBSW9BZ3doQkNBQUtBTGdBU0VGSUFBb0FnUW9BaFFoQmlBQklBTkJBblJxSUFCQkFVRUJJQUlvQWh3Z0FpZ0NDQkNTQXlBQ0tBSWdJQUlvQWd3UWtnTWdCRUVEYkNBRUlBVWJJQVlSQ1FBMkFrZ2dBa0hZQUdvaEFpQURRUUZxSWdNZ0FDZ0NKRWdOQUFzTElBRkJ4UUUyQWd3Z0FVSEdBVFlDQkNBQklBRkJ5QUJxTmdJUURBRUxJQUVnQUVFQlFZQUtJQUFvQWdRb0FnUVJCQUFpQWpZQ0lDQUJJQUpCZ0FscU5nSkVJQUZCUUdzZ0FrR0FDR28yQWdBZ0FTQUNRWUFIYWpZQ1BDQUJJQUpCZ0FacU5nSTRJQUVnQWtHQUJXbzJBalFnQVNBQ1FZQUVhallDTUNBQklBSkJnQU5xTmdJc0lBRWdBa0dBQW1vMkFpZ2dBU0FDUVlBQmFqWUNKQ0FBS0FLMEEwVUVRQ0FDUVFCQmdBb1FPQm9MSUFGQnh3RTJBZ3dnQVVISUFUWUNCQ0FCUVFBMkFoQUxJQUFvQWtSRkJFQkJBQ0VDSUFBZ0FFRUJRZEFBSUFBb0FnUW9BZ0FSQkFBaUJUWUN3QU1nQlVIS0FUWUNBQ0FBS0FMSUFpRURBa0FnQUNnQzNBTW9BZ2dFUUNBRFFRRk1CRUFnQUNnQ0FDSUJRVEEyQWhRZ0FDQUJLQUlBRVFFQUlBQW9Bc2dDSVFNTElBQW9Bc0FESWdZZ0FFRUJJQUFvQWlSQkEzUWdBQ2dDQkNnQ0FCRUVBQ0lCTmdJOElBWkJRR3NnQVNBQUtBSWtJZ1JCQW5ScU5nSUFJQVJCQUVvRVFDQURRUVJxSVFNZ0FDZ0MyQUVoQVFOQUlBQkJBU0FCS0FJb0lBRW9BZ3hzSUFBb0FzZ0NiU0lFSUFOc0lnZEJBM1FnQUNnQ0JDZ0NBQkVFQUNFSUlBSkJBblFpQ1NBR0tBSThhaUFJSUFSQkFuUnFJZ1EyQWdBZ0JpZ0NRQ0FKYWlBRUlBZEJBblJxTmdJQUlBRkIyQUJxSVFFZ0FrRUJhaUlDSUFBb0FpUWlCRWdOQUFzTElBQW9Bc2dDUVFKcUlRTU1BUXNnQlNBRE5nSTBJQUFvQWlRaEJBc2dCRUVBU2dSQUlBQW9BdGdCSVFGQkFDRUNBMEFnQlNBQ1FRSjBhaUFBUVFFZ0FTZ0NKQ0FCS0FJY2JDQUJLQUlvSUFFb0FneHNJQUFvQXNnQ2JTQURiQ0FBS0FJRUtBSUlFUWdBTmdJSUlBRkIyQUJxSVFFZ0FrRUJhaUlDSUFBb0FpUklEUUFMQ3dzZ0FDQUFLQUlFS0FJWUVRRUFJQUFnQUNnQ3pBTW9BZ2dSQVFBQ1FDQUFLQUlJSWdGRkRRQWdBQ2dDUUEwQUlBQW9Bc3dES0FJUVJRMEFJQUFvQXVBQklRTWdBQ2dDSkNFQ0lBRkJBRFlDQkNBQUtBTE1BaUVFSUFGQkFEWUNEQ0FCSUFRZ0FrRURiRUVDYWlBQ0lBTWJiRFlDQ0NBQlFRTkJBaUFBS0FKc0d6WUNFQ0FNSUF3b0FneEJBV28yQWd3TElBQW9Ba0FFUUNBQVFjOEJOZ0lVUVFFUEN5QUFRY3NCTmdJVUN3SkFJQUFvQXN3REtBSVFSUTBBSUFBb0FnZ2hCUU5BSUFVRVFDQUFJQVVvQWdBUkFRQUxBa0FnQUNBQUtBTE1BeWdDQUJFQUFDSUJEZ01GQUFJQUN5QUFLQUlJSWdWRklBRkJmWEZCQVVkeURRQWdCU0FGS0FJRVFRRnFJZ0UyQWdRZ0FTQUZLQUlJSWdKSURRQWdCU0FBS0FMTUFpQUNhallDQ0F3QUN3QUxJQUFnQUNnQ2tBRTJBcGdCREFFTElBQW9BZ0FpQWlBQk5nSVlJQUpCRlRZQ0ZDQUFJQUFvQWdBb0FnQVJBUUFMSUFBb0FoUkJ6QUZIQkVBZ0FDQUFLQUs4QXlnQ0FCRUJBQ0FBUWN3Qk5nSVVJQUJCQURZQ2pBRUxBa0FnQUNnQ3ZBTW9BZ2dFUUNBQVFZd0JhaUVDSUFBb0Fvd0JJUVVEUUNBQUtBSjBJZ01nQlVzRVFDQUFLQUlJSWdFRVFDQUJJQU0yQWdnZ0FTQUZOZ0lFSUFBZ0FTZ0NBQkVCQUNBQUtBS01BU0VGQzBFQUlRRWdBRUVBSUFKQkFDQUFLQUxBQXlnQ0JCRUhBQ0FGSUFBb0Fvd0JJZ1ZIRFFFTUF3c2dBQ0FBS0FLOEF5Z0NCQkVCQUNBQUlBQW9BcndES0FJQUVRRUFRUUFoQlNBQVFRQTJBb3dCSUFBb0Fyd0RLQUlJRFFBTEN5QUFRYzRCUWMwQklBQW9Ba1FiTmdJVVFRRWhBUXNMSUFFTDBnRUJBbjhDUUFKQUlBQW9BaFFpQVVITkFXdEJBVXNOQUNBQUtBSkFEUUFnQUNnQ2pBRWdBQ2dDZEVrRVFDQUFLQUlBSWdGQnhRQTJBaFFnQUNBQktBSUFFUUVBQ3lBQUlBQW9BcndES0FJRUVRRUFJQUJCMGdFMkFoUU1BUXNDUUFKQUlBRkJ6d0ZyRGdRQUFRRUNBUXNnQUVIU0FUWUNGQXdCQ3lBQUtBSUFJZ0lnQVRZQ0dDQUNRUlUyQWhRZ0FDQUFLQUlBS0FJQUVRRUFDd0pBQTBBZ0FDZ0N6QU1pQVNnQ0ZBMEJJQUFnQVNnQ0FCRUFBQTBBQzBFQUR3c2dBQ0FBS0FJWUtBSVlFUUVBSUFBUXV3VkJBUXVjQmdFRmZ5QUFLQUlVSWdOQmZuRkJ5QUZIQkVBZ0FDZ0NBQ0lDSUFNMkFoZ2dBa0VWTmdJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNDZjBFQklRSUNRQUpBQWtBQ1FBSkFJQUFvQWhRaUEwSElBV3NPQ3dBQkJBSUNBZ0lDQWdNQ0F3c2dBQ0FBS0FMTUF5Z0NCQkVCQUNBQUlBQW9BaGdvQWdnUkFRQWdBRUhKQVRZQ0ZBc2dBQ0FBS0FMTUF5Z0NBQkVBQUNJQ1FRRkhEUUlnQUNnQ0pDSUNJUVVDUUFKQUFrQUNRQ0FDUVFGckRnUURBZ0FCQWdzZ0FDZ0MyQUVpQXlnQ3NBRWhCRUVDSVFVZ0F5Z0NBQ0lHUVFGSElnSWdBeWdDV0NJRFFRSkhjaUFFUVFOSGNrVUVRRUVESVFJTUF3c2dBaUFEUVNKSGNrVUVRRUVISVFJZ0JFRWpSZzBEQ3lBR1FkSUFSeUFEUWNjQVIzSWdCRUhDQUVkeVJRUkFRUUloQWd3REN5QUdRZklBUnlBRFFlY0FSM0pGQkVCQkJpRUNJQVJCNGdCR0RRTUxJQUFvQXB3Q0JFQkJBeUVDREFNTElBQW9BcWdDQkVCQkFpRUNBa0FDUUNBQUxRQ3NBaUlERGdJRkFBRUxRUU1oQWd3RUN5QUFLQUlBSWdJZ0F6WUNHQ0FDUWZRQU5nSVVJQUJCZnlBQUtBSUFLQUlFRVFJQVFRTWhBZ3dEQ3lBQUtBSUFJZ0lnQmpZQ0dDQUNRZkVBTmdJVUlBSWdCRFlDSUNBQ0lBTTJBaHdnQUVFQklBSW9BZ1FSQWdCQkF5RUNEQUlMUVFRaEJTQUFLQUtvQWtVRVFFRUVJUUlNQWd0QkJDRUNBa0FDUUNBQUxRQ3NBaUlERGdNREFRQUJDMEVGSVFJTUFnc2dBQ2dDQUNJQ0lBTTJBaGdnQWtIMEFEWUNGQ0FBUVg4Z0FDZ0NBQ2dDQkJFQ0FFRUZJUUlNQVF0QkFDRUNRUUFoQlFzZ0FDQUZOZ0lzSUFBZ0FqWUNLQ0FBUVFBMkFvZ0JJQUJCZ0FJMkFtQWdBRUtDZ0lDQUVEY0RXQ0FBUWdFM0ExQWdBRUtBZ0lDQUVEY0RTQ0FBUWdBM0EwQWdBRUtBZ0lDQWdJQ0ErRDgzQXpnZ0FFRUFOZ0pzSUFCQ0FEY0NaQ0FBUWNvQk5nSVVJQUFnQUNnQ3JBTWlBallDTkNBQUlBSTJBakJCQVF3REN5QUFJQUFvQXN3REtBSUFFUUFBREFJTElBQW9BZ0FpQWlBRE5nSVlJQUpCRlRZQ0ZDQUFJQUFvQWdBb0FnQVJBUUJCQUNFQ0N5QUNDeUlDUVFKR0JFQWdBUVJBSUFBb0FnQWlBVUUxTmdJVUlBQWdBU2dDQUJFQkFBc2dBQkM3QlFzZ0Fnc0hBQ0FBRUxrRkM2SUhBUUYvSUFCQkFEWUNCQ0FCUWRvQVJ3UkFJQUFvQWdCQ2pZQ0FnS0FMTndJVUlBQW9BZ0FnQVRZQ0hDQUFJQUFvQWdBb0FnQVJBUUFMSUFKQjZBTkhCRUFnQUNnQ0FFS1dnSUNBZ0QwM0FoUWdBQ2dDQUNBQ05nSWNJQUFnQUNnQ0FDZ0NBQkVCQUFzZ0FDZ0NBQ0VCSUFBb0Fnd2hBaUFBUVFScVFRQkI1QU1RT0JvZ0FFRUJOZ0lRSUFBZ0FqWUNEQ0FBSUFFMkFnQWpBRUVRYXlJQ0pBQWdBRUVBTmdJRUlBSkJBRFlDREVIVUFCQTNJZ0ZGQkVBZ0FDZ0NBRUk0TndJVUlBQWdBQ2dDQUNnQ0FCRUJBQXNnQVVHQWxPdmNBellDTUNBQlFlVUJOZ0lvSUFGQjVnRTJBaVFnQVVIbkFUWUNJQ0FCUWVnQk5nSWNJQUZCNlFFMkFoZ2dBVUhxQVRZQ0ZDQUJRZXNCTmdJUUlBRkI3QUUyQWd3Z0FVSHRBVFlDQ0NBQlFlNEJOZ0lFSUFGQjd3RTJBZ0FnQVVJQU53STBJQUZCQURZQ0xDQUJRZFFBTmdKTUlBRkNBRGNDUENBQlFnQTNBa1FnQUNBQk5nSUVBa0JCeTRRQ0VJMERJZ05GRFFBZ0FrSDRBRG9BQ3lBQ0lBSkJER28yQWdBZ0FpQUNRUXRxTmdJRUlBTkI3LzhCSUFJUTVRRkJBRXdOQUNBQ0tBSU1JUU1nQWkwQUMwSGZBWEZCelFCR0JFQWdBaUFEUWVnSGJDSUROZ0lNQ3lBQklBTkI2QWRzTmdJc0N5QUNRUkJxSkFBZ0FFRUFOZ0s0QWlBQVFRQTJBaGdnQUVFQU5nSUlJQUJDQURjQ3BBRWdBRUlBTndLc0FTQUFRZ0EzQXJRQklBQkNBRGNDdkFFZ0FFSUFOd0xFQVNBQVFnQTNBc3dCSUFBZ0FFRUFRYXdCSUFBb0FnUW9BZ0FSQkFBaUFUWUMwQU1nQVVJQU53SmdJQUZCZ2dFMkFod2dBVUdEQVRZQ0NDQUJRWVFCTmdJRUlBRkJoUUUyQWdBZ0FVRUFOZ0pvSUFGQmdnRTJBaVFnQVVHQ0FUWUNLQ0FCUWdBM0Ftd2dBVUdDQVRZQ0xDQUJRWUlCTmdJd0lBRkNBRGNDZENBQlFZSUJOZ0kwSUFGQmdnRTJBamdnQVVJQU53SjhJQUZCZ2dFMkFqd2dBVUVBTmdLRUFTQUJRVUJyUVlJQk5nSUFJQUZDQURjQ2lBRWdBVUdDQVRZQ1JDQUJRWUlCTmdKSUlBRkJnZ0UyQWt3Z0FVR0NBVFlDVUNBQlFnQTNBcEFCSUFGQmdnRTJBbFFnQVVJQU53S1lBU0FCUVFBMkFxQUJJQUZCZ2dFMkFsd2dBVUdHQVRZQ0lDQUJRWVlCTmdKWUlBQkJBRFlDdUFNZ0FFRUFOZ0tRQVNBQVFRQTJBdGdCSUFBb0F0QURJZ0ZCQURZQ3BBRWdBVUVBTmdJWUlBRkNBRGNDRENBQUlBQkJBRUVjSUFBb0FnUW9BZ0FSQkFBaUFUWUN6QU1nQVVFQk5nSVlJQUZDQURjQ0VDQUJRZjRBTmdJTUlBRkIvd0EyQWdnZ0FVR0FBVFlDQkNBQlFZRUJOZ0lBSUFCQnlBRTJBaFFMSWdFQmZVRi9JQUFxQWdBZ0FTb0NBSk1pQWtNQUFBQUFYaUFDUXdBQUFBQmRHd3NRQUNBQklBSWdBeUFBS0FJQUVRUUFDemtCQVg4Z0FDZ0NCQ0lFUVFGMUlBRnFJUUVnQUNnQ0FDRUFJQUVnQWlBRElBUkJBWEVFZnlBQktBSUFJQUJxS0FJQUJTQUFDeEVGQUFzM0FRRi9JQUFvQWdRaUEwRUJkU0FCYWlFQklBQW9BZ0FoQUNBQklBSWdBMEVCY1FSL0lBRW9BZ0FnQUdvb0FnQUZJQUFMRVFJQUN6UUJBWDhqQUVFUWF5SUVKQUFnQUNnQ0FDRUFJQVFnQXpZQ0RDQUJJQUlnQkVFTWFpQUFFUVFBSVFBZ0JFRVFhaVFBSUFBTFZBRUNmeU1BUVJCcklnUWtBQ0FBS0FJRUlnVkJBWFVnQVdvaEFTQUFLQUlBSVFBZ0JVRUJjUVJBSUFFb0FnQWdBR29vQWdBaEFBc2dCQ0FETmdJTUlBRWdBaUFFUVF4cUlBQVJCUUFnQkVFUWFpUUFDMUlCQW44akFFRVFheUlESkFBZ0FDZ0NCQ0lFUVFGMUlBRnFJUUVnQUNnQ0FDRUFJQVJCQVhFRVFDQUJLQUlBSUFCcUtBSUFJUUFMSUFNZ0FqWUNEQ0FCSUFOQkRHb2dBQkVDQUNBRFFSQnFKQUFMTmdFQmZ5TUFRUkJySWdRa0FDQUFLQUlBSVFBZ0JDQURFSlVESUFFZ0FpQUVJQUFSQkFBaEFDQUVFRFlhSUFSQkVHb2tBQ0FBQzFZQkFuOGpBRUVRYXlJRUpBQWdBQ2dDQkNJRlFRRjFJQUZxSVFFZ0FDZ0NBQ0VBSUFWQkFYRUVRQ0FCS0FJQUlBQnFLQUlBSVFBTElBUWdBeENWQXlBQklBSWdCQ0FBRVFVQUlBUVFOaG9nQkVFUWFpUUFDMVFCQW44akFFRVFheUlESkFBZ0FDZ0NCQ0lFUVFGMUlBRnFJUUVnQUNnQ0FDRUFJQVJCQVhFRVFDQUJLQUlBSUFCcUtBSUFJUUFMSUFNZ0FoQ1ZBeUFCSUFNZ0FCRUNBQ0FERURZYUlBTkJFR29rQUFzTEFDQUJJQUlnQUJFQ0FBc3JBZ0YvQVh3akFFRVFheUlDSkFBZ0FpQUJJQUFSSEFBNUF3Z2dBaXNEQ0NFRElBSkJFR29rQUNBREN3c0FJQUVnQWlBQUVSUUFDeWNCQVg4akFFRVFheUlCSkFBZ0FTQUFFUkFBTmdJTUlBRW9BZ3doQUNBQlFSQnFKQUFnQUFzSkFDQUJJQUFSQVFBTER3QWdBU0FBS0FJQWFpQUNOZ0lBQ3cwQUlBRWdBQ2dDQUdvb0FnQUxHQUVCZjBFUUVGY2lBRUlBTndNQUlBQkNBRGNEQ0NBQUN5Z0JBWDhqQUVFUWF5SURKQUFnQXlBQklBSWdBQkVGQUNBREVMOEZJUUFnQTBFUWFpUUFJQUFMS3dFQmZ5TUFRUkJySWdNa0FDQURJQUVnQWlBQUVRTUFOZ0lNSUFNb0Fnd2hBQ0FEUVJCcUpBQWdBQXMxQVFGL0l3QkJFR3NpQWlRQUlBSWdBUkNWQXlBQ0lBSWdBQkVBQURZQ0RDQUNLQUlNSVFBZ0FoQTJHaUFDUVJCcUpBQWdBQXN3QVFGL0l3QkJFR3NpQXlRQUlBTWdBU0FDSUFBUkJRQkJEQkJYSUFNUWxnUWhBQ0FERUhJZ0EwRVFhaVFBSUFBTEtRRUJmeU1BUVJCcklnSWtBQ0FDSUFFZ0FCRUFBRFlDRENBQ0tBSU1JUUFnQWtFUWFpUUFJQUFMTFFFQmZ5TUFRUkJySWdRa0FDQUVJQUVnQWlBRElBQVJCQUEyQWd3Z0JDZ0NEQ0VBSUFSQkVHb2tBQ0FBQ3g4QUlBQWdBUkRHQlNJQUlBSXBBZ2czQWdnZ0FDQUNLUUlBTndJQVFRRUxaQUVDZnlBQkVMVUJJQUpMQkVBZ0FTQUNFTVlGSVFNakFFRVFheUlDSkFBakFFRVFheUlCSkFBZ0FTQUNRUWhxSWdRMkFnd2dBVUVNYWlBREVMOEZFT2dESUFGQkVHb2tBQ0FBUWNpZEFpQUVFQXcyQWdBZ0FrRVFhaVFBRHdzZ0FCRHNBd3VBQXdFRWZ5QUJJQUFRdFFFaUEwc0VRQ01BUVNCcklnWWtBQUpBSUFFZ0Eyc2lCQ0FBRURJb0FnQWdBQ2dDQkd0QkJIVk5CRUFqQUVFUWF5SUZKQUFnQlNBQUlBUVF3UVVpQXlnQ0JDRUJJQU1vQWdnaEJBTkFJQUVnQkVZRVFDQURFR3NnQlVFUWFpUUFCU0FBRURJZ0FTQUNFSlFESUFNZ0FVRVFhaUlCTmdJRURBRUxDd3dCQ3lBQUVESWhBU0FHUVFocUlBQWdBQkMxQVNBRWFoREZCU0FBRUxVQklBRVF4QVVoQXlNQVFSQnJJZ0VrQUNBQklBTW9BZ2cyQWdBZ0F5Z0NDQ0VGSUFFZ0EwRUlhallDQ0NBQklBVWdCRUVFZEdvMkFnUWdBU2dDQUNFRUEwQWdBU2dDQkNBRVJ3UkFJQU1vQWhBZ0FTZ0NBQ0FDRUpRRElBRWdBU2dDQUVFUWFpSUVOZ0lBREFFTEN5QUJFS2tCSUFGQkVHb2tBQ0FBSUFNUXd3VWdBeERDQlFzZ0JrRWdhaVFBRHdzZ0FTQURTUVJBSUFBb0FnQWdBVUVFZEdvaEFTQUFFTFVCR2lBQUlBRVEwd1VnQUNnQ0FCb2dBQ2dDQUNBQUVJVUNRUVIwYWhvZ0FDZ0NBQm9nQUNnQ0FDQUFFTFVCUVFSMGFob0xDeEFBSUFBRVFDQUFFTnNGQ3lBQUVERUxCZ0JCb0p3Q0N4WUFJQUlvQWdBaEFpQUFJQUVRT2lBQ05nSUFRUUVMWWdFQ2Z5QUJFRUlnQWtzRVFDQUJJQUlRT2lFREl3QkJFR3NpQWlRQUl3QkJFR3NpQVNRQUlBRWdBa0VJYWlJRU5nSU1JQUZCREdvZ0F5Z0NBQkRvQXlBQlFSQnFKQUFnQUVHdzNRTWdCQkFNTmdJQUlBSkJFR29rQUE4TElBQVE3QU1MRHdBZ0FBUkFJQUFRY2dzZ0FCQXhDd1lBUVp5YUFndXFBZ0VDZndKQUlBSWdBQ0FCRUpNQklnQkhCSDhnQUJDUkFVVUVRQ0FDRUpFQlJRUkFJQUFnQWlnQ0NEWUNDQ0FBSUFJcEFnQTNBZ0FNQXdzZ0FoQTlJUU1nQWhBMUlRRWpBRUVRYXlJQ0pBQUNRQ0FCUVFwTkJFQWdBQ0FCRUpJQklBQWdBeUFCRUxRQklBSkJBRG9BRHlBQUlBRnFJQUpCRDJvUWl3RU1BUXNnQUVFS0lBRkJDbXNnQUMwQUN5SUFRUUFnQUNBQklBTVF2QU1MSUFKQkVHb2tBQXdDQ3lBQ0VEMGhBeUFDRURVaEFTTUFRUkJySWdJa0FBSkFJQUVnQUJEa0FTSUVTUVJBSUFBb0FnQWhCQ0FBSUFFUWlRRWdCQ0FESUFFUXRBRWdBa0VBT2dBUElBRWdCR29nQWtFUGFoQ0xBUXdCQ3lBQUlBUkJBV3NnQVNBRWEwRUJhaUFBS0FJRUlnQkJBQ0FBSUFFZ0F4QzhBd3NnQWtFUWFpUUFRUUFGSUFBTEdndEJBUXVHQVFFRGZ5QUJFRk1nQWtzRVFDQUJJQUlRa3dFaEFTTUFRUkJySWdJa0FDQUFJUVVqQUVFUWF5SUFKQUFnQUNBQ1FRaHFJZ1EyQWd3Z0FSQTFRUVJxRURjaUF5QUJFRFUyQWdBZ0EwRUVhaUFCRUQwZ0FSQTFFRDRhSUFCQkRHb2dBeERvQXlBQVFSQnFKQUFnQlVId21BSWdCQkFNTmdJQUlBSkJFR29rQUE4TElBQVE3QU1MdmdJQkJIOGdBU0FBRUZNaUEwc0VRQ01BUVNCcklnWWtBQUpBSUFFZ0Eyc2lBU0FBRURJb0FnQWdBQ2dDQkd0QkRHMU5CRUFqQUVFUWF5SUVKQUFnQkNBQUlBRVE4QUlpQXlnQ0JDRUJJQU1vQWdnaEJRTkFJQUVnQlVZRVFDQURFR3NnQkVFUWFpUUFCU0FBRURJZ0FTQUNFSmNESUFNZ0FVRU1haUlCTmdJRURBRUxDd3dCQ3lBQUVESWhBeUFHUVFocUlBQWdBQkJUSUFGcUVNd0ZJQUFRVXlBREVPOENJUU1qQUVFUWF5SUVKQUFnQkNBRFFRaHFJQUVReGdZaUFTZ0NBQ0VGQTBBZ0FTZ0NCQ0FGUndSQUlBTW9BaEFnQVNnQ0FDQUNFSmNESUFFZ0FTZ0NBRUVNYWlJRk5nSUFEQUVMQ3lBQkVLa0JJQVJCRUdva0FDQUFJQU1ReXdVZ0F4REtCUXNnQmtFZ2FpUUFEd3NnQVNBRFNRUkFJQUFvQWdBZ0FVRU1iR29oQVNBQUVGTWhBaUFBSUFFUXlBVWdBQ0FDRU9VQ0N3dWlBUUVDZnlBQUtBSUVJQUFRTWlnQ0FFY0VRQ01BUVJCcklnTWtBQ0FESUFCQkFSRHdBaUVDSUFBUU1pQUNLQUlFSUFFUWx3TWdBaUFDS0FJRVFReHFOZ0lFSUFJUWF5QURRUkJxSkFBUEN5TUFRU0JySWdNa0FDQUFFRElpQWlBRFFRaHFJQUFnQUJCVFFRRnFFTXdGSUFBUVV5QUNFTzhDSWdJb0FnZ2dBUkNYQXlBQ0lBSW9BZ2hCREdvMkFnZ2dBQ0FDRU1zRklBSVF5Z1VnQTBFZ2FpUUFDem9CQVg4Z0FBUkFJQUFRZ0FJZ0FDZ0NBQVJBSUFBZ0FDZ0NBQkRJQlNBQUVESWFJQUFvQWdBaEFTQUFFS1FCR2lBQkVERUxDeUFBRURFTEJnQkJ3SllDQyt3Z0FneDhEWDhqQUVFd2F5SVdKQUJCdUlzRVFiaUxCQ2dDQUNJU1FRRnFOZ0lBSUJZZ0VqWUNMQ0FXUVN4cUVIY2hGQ0FXS0FJc0lROGdGQ0FCTmdMVUFTQVVJQUEyQXRBQklCUWdEellDQUNBVUlBQWdBV3dpQUVFQ2RDSUJOZ0xJQVNBVUlBRVFOellDeEFFZ0ZDQUFFRGMyQXN3Qkl3QkJNR3NpRWlRQUlCSWdBallDS0NBU0lBODJBaXdnRWtHTWl3UWdFa0VzYWhCeE5nSVFJQklRWmpZQ0lBSkFBa0FDUUNBU1FSQnFJQkpCSUdvUWRnMEFJQkpCTEdvUWR5RVRJQkpCb0lzRUlCSkJLR29RY1RZQ0VDQVNFR1kyQWlBZ0VrRVFhaUFTUVNCcUVIWU5BQ0FUUVFocUlCSkJLR29RMlFWQnVBRVFQaUVBSUJNb0Fnd2hBUUpBSUJNb0FnZ2lBaUFUS0FMUUFVWUVRQ0FCSUJNb0F0UUJSZzBCQ3lBU0lBRTJBZ1FnRWlBQ05nSUFRUUJCQWtHUWxRSWdFaEE1SUJNb0F0QUJJUUVnQUNnQ0FDRUNJQUFvQWdRaEVDQUFJQk1vQXRRQkloRTJBZ1FnQUNBQk5nSUFJQUJCQ0dvaER5QVJ0eUFRdDZNaEF5QUJ0eUFDdDZNaEJFRUFJUUVEUUNBQlFRUkhCRUFnRHlBQlFRTjBJZ0pxSUFRZ0FpQVBhaXNEQUtJNUF3QWdBQ0FDYWlJQ0lBTWdBaXNES0tJNUF5Z2dBaUFDS3dOSU9RTklJQUZCQVdvaEFRd0JDd3NDUUFKQUFrQUNRQUpBQWtBZ0FDZ0NzQUVpQVVFQmF3NEVBd0lCQUFVTElBQWdBQ3NEYURrRGFDQUFJQUFyQTNBNUEzQWdBQ0FBS3dONE9RTjRJQUFnQUNzRGdBRTVBNEFCSUFBZ0JDQUFLd09JQWFJNUE0Z0JJQUFnQXlBQUt3T1FBYUk1QTVBQklBQWdCQ0FBS3dPWUFhSTVBNWdCSUFBZ0F5QUFLd09nQWFJNUE2QUJJQUFnQUNzRHFBRTVBNmdCREFNTElBQWdCQ0FBS3dOb29qa0RhQ0FBSUFNZ0FDc0RjS0k1QTNBZ0FDQUFLd040T1FONElBQWdBQ3NEZ0FFNUE0QUJJQUFnQUNzRGlBRWdCQ0FEb3FNNUE0Z0JJQUFnQUNzRGtBRWdBeUFFSUFTaUlBT2lvcU01QTVBQkRBSUxJQUFnQkNBQUt3Tm9vamtEYUNBQUlBTWdBQ3NEY0tJNUEzQWdBQ0FBS3dONE9RTjRJQUFnQUNzRGdBRWdCQ0FEb3FNNUE0QUJJQUFnQUNzRGlBRWdBeUFFSUFTaUlBT2lvcU01QTRnQkRBRUxJQUFnQkNBQUt3Tm9vamtEYUNBQUlBTWdBQ3NEY0tJNUEzQWdBQ0FBS3dONE9RTjRJQUFnQUNzRGdBRWdCQ0FEb3FNNUE0QUJDeUFBSUFFMkFyQUJDd3NnRXhEZEJTQVRBbjhqQUVFZ2F5SVBKQUJCMEFFUU55SUJCRUFDUUNBQklBQkJ1QUVRUGlJUUlBQW9BZ0JCSG1vaUFUWUN3QUVnQUNnQ0JDRUNJQkJCRHpZQ3pBRWdFRUVQTmdMSUFTQVFJQUpCSG1vaUZUWUN4QUVnRUNBQklCVnNRUU4wSWhFUU55SUNOZ0s0QVNBQ1JRMEFJQkFnRVJBM0loRTJBcndCSUJGRkRRQWdGVUVBSUJWQkFFb2JJUm9nQVVFQUlBRkJBRW9iSVJnZ0FFSG9BR29oQVNBQUtBS3dBU0VaQTBBZ0Z5QWFSd1JBSUJkQkQydXl1eUVHUVFBaEZRTkFJQlVnR0VjRVFDQVZRUTlyc3JzaUNTRURBa0FnRHdKOEFrQUNRQUpBQWtBZ0dVRUJhdzRFQXdJQkFBVUxJQThnQVNzREdDSUhJQU1nQVNzRE1DSUtvU0FCS3dOQUlnU2lJQUVyQXlBaUM2TWlBeUFEb0NBRG9pQURJQU9pSUFZZ0FTc0RPQ0lNb1NBRW9pQUJLd01vSWcyaklnUWdCS0tnSWdXZ29pQURJQUVyQXdnZ0JhSWdCYUlnQVNzREFDQUZva1FBQUFBQUFBRHdQNkNnSWc2aUlBUWdBU3NERUNJSUlBaWdJQU9pb3FDZ0lBdWlJQXFnT1FNSUlBd2dEU0FISUFlZ0lBT2lJQVNpSUFRZ0RxSWdDQ0FFSUFTZ0lBU2lJQVdnb3FDZ29xQU1Bd3NnQVNzREVDSUhJQVlnQVNzRENLR2lJUVFnQXlBQkt3TUFJZ1doSUFlaUlnTkVBQUFBQUFBQUFBQmlJQVJFQUFBQUFBQUFBQUJpY2tVRVFDQVBJQVU1QXdnZ0FTc0RDQXdEQ3lBUElBTWdBeUFEb2lBRUlBU2lvQ0lESUFFckF5aEVBQUFBQUlUWGwwR2pSQUFBQUFBQWF2akFvNklnQTZJZ0FTc0RJRVFBQUFBQWhOZVh3YU1nQTZKRUFBQUFBQUFBOEQrZ29DSURvaUFCS3dNWW9pQUZvRGtEQ0NBRUlBT2lJQUVyQXdpZ0RBSUxJQUVyQXhBaUJ5QUdJQUVyQXdpaG9pRUVJQU1nQVNzREFDSUZvU0FIb2lJRFJBQUFBQUFBQUFBQVlpQUVSQUFBQUFBQUFBQUFZbkpGQkVBZ0R5QUZPUU1JSUFFckF3Z01BZ3NnRHlBRElBTWdBNklnQkNBRW9xQWlBeUFCS3dNZ1JBQUFBQUNFMTVkQm8wUUFBQUFBQUdyNHdLT2lJQU9pSUFFckF4aEVBQUFBQUlUWGw4R2pJQU9pUkFBQUFBQUFBUEEvb0tBaUE2SWdCYUE1QXdnZ0JDQURvaUFCS3dNSW9Bd0JDeUFCS3dNUUlnY2dCaUFCS3dNSW9hSWhCQ0FESUFFckF3QWlCYUVnQjZJaUEwUUFBQUFBQUFBQUFHSWdCRVFBQUFBQUFBQUFBR0p5UlFSQUlBOGdCVGtEQ0NBQkt3TUlEQUVMSUE4Z0F5QUJLd01ZUkFBQUFBQ0UxNWZCb3lBRElBT2lJQVFnQktLZ29rUUFBQUFBQUFEd1A2QWlBNklnQmFBNUF3Z2dCQ0FEb2lBQkt3TUlvQXM1QXdBTElBSWdEeXNEQ0xZNEFnQWdBaUFQS3dNQXRqZ0NCQ0FCSUFrZ0JpQVBRUmhxSUE5QkVHb2dHUkM2QmlBUklBOHJBeGkyT0FJQUlCRWdEeXNERUxZNEFnUWdGVUVCYWlFVklCRkJDR29oRVNBQ1FRaHFJUUlNQVFzTElCZEJBV29oRnd3QkN3c2dEMEVnYWlRQUlCQU1BZ3NMREFJTElnSTJBc0FCSUFKRkJFQWdFa0VRYWtHM2tRSVFTQ0lBRU93QklBQVFOaG9NQVFzZ0V3Si9RYUNIcndNUU55SUJCRUFDUUNBQlFRQTJBb2lIcndNZ0FVS0FnSUNBY0RjREFDQUJRUU0yQXBpSHJ3TWdBVUtBZ0lDQWdJQ0E4RDgzQTVDSHJ3TWdBVUtBZ0lDQUlEY0RHQ0FCUXVRQU53TVFJQUZDZ0lDQWdCQTNBd2dnQVNBQ05nSWdJQUZCNUlhbkFtcEJBRFlDQUNBQklBSW9BZ0FpRHpZQ0pDQUNLQUlFSVFJZ0FVSG9ocWNDYWtFQU5nSUFJQUZCQURZQ3NIZ2dBVUVBTmdJc0lBRWdBallDS0NBQlFRQTJBdmlLcGdJZ0FTQUNJQTlzUVFGMEVEY2lBallDNElhbkFpQUNSUTBBSUFGQkFEWUM4SWF2QXlBQlFRQVExUWNnQVVGL05nTDBocThESUFGQkFCRGNCaG9nQVFSQUlBRkJBRFlDL0lhdkF5QUJRUWMyQXZpR3J3TUxJQUVNQWdzTERBSUxJZ0UyQXRnQklBRkZCRUFnRWtFUWFrSGlrUUlRU0NJQUVPd0JJQUFRTmhvTUFRc2dFeWdDb0FRaEFpTUFRUkJySWc4a0FBSkFJQUZGRFFBZ0FTZ0NCQ0FDUmcwQUFrQUNRQUpBQWtBQ1FDQUNRUTVOQkVCQkFTQUNkRUhmSDNFTkFTQUJJQUkyQWdRZ0FTQUNFT1VHTmdJSUlBRW9BaGdPQkFJR0JnTUdDeUFQSUFJMkFnQkJBRUVEUWQ4OElBOFFPUXdGQ3lBQklBSTJBZ1FnQVNBQ0VPVUdOZ0lJSUFFb0FoaEJBV3NPQkFJRUJBTUVDeUFCUVFFMkFoZ01Bd3NnQVVFRU5nSVlEQUlMSUFGQkJEWUNHQXdCQ3lBQlFRTTJBaGdMSUE5QkVHb2tBQ0FUQW44Z0FFRUlhaUVCUVFRUU55SUFCRUFnQUNBQkVQZ0RJZ0UyQWdBZ0FRUi9JQUFGSUFBUU1VRUFDd3dCQ3d3Q0N5SUFOZ0xjQVNBQVJRUkFJQkpCRUdwQnhQQUJFRWdpQUJEc0FTQUFFRFlhREFFTElCTW9Bc0FCSVFFZ0V5c0RpQU1oQkNBVEt3T1FBeUVESUJOQm9BTnFJUmRCQUNFUVFRQWhBaU1BUVpBRGF5SUFKQUFnQVNnQ0JDRVpJQUVvQWdBaEdpQUFRYkFDYWlFUEl3QkI0QUJySWhFa0FBSkFJQUZCQ0dvaUZTc0RXRVFBQUFBQUFBQUFBR1pGQkVBRFFFRUFJUUVnRUVFRFJnMENBMEFnQVVFRVJ3UkFJQUZCQTNRaUdDQVJJQkJCQlhRaUcycHFJQlVnRzJvZ0dHb3JBd0NhT1FNQUlBRkJBV29oQVF3QkN3c2dFRUVCYWlFUURBQUxBQXNEUUVFQUlRRWdFRUVEUmcwQkEwQWdBVUVFUndSQUlBRkJBM1FpR0NBUklCQkJCWFFpRzJwcUlCVWdHMm9nR0dvckF3QTVBd0FnQVVFQmFpRUJEQUVMQ3lBUVFRRnFJUkFNQUFzQUMwRUFJUkFDUUFOL1FRQWhBU0FRUVFOR0JIOGdEeUFSS3dOQUlnWWdFU3NEU0NJRklCRXJBMUFpQnhDVEJDSUlPUU5RSUFBZ0JpQUlveUlHT1FPUUFpQUFJQVVnRHlzRFVLTWlCVGtEbUFJZ0FDQUhJQThyQTFDaklnYzVBNkFDSUFBZ0VTc0RXQ0FQS3dOUW96a0RxQUlnRHlBR0lBVWdCeUFSS3dNZ0lnVWdFU3NES0NJSElCRXJBekFpQ0JDU0JDSUdPUU13SUE4Z0JTQUdJQUFyQTVBQ29xRWlCU0FISUFZZ0FDc0RtQUtpb1NJSElBZ2dCaUFBS3dPZ0FxS2hJZ1lRa3dRaUNEa0RLQ0FBSUFVZ0NLTTVBL0FCSUFBZ0J5QVBLd01vb3prRCtBRWdBQ0FHSUE4ckF5aWpPUU9BQWlBUElBQXJBNUFDSUFBckE1Z0NJQUFyQTZBQ0lCRXJBd0FpQnlBUkt3TUlJZ2dnRVNzREVDSUpFSklFSWdZNUF4QWdEeUFBS3dQd0FTQUFLd1A0QVNBQUt3T0FBaUFISUFnZ0NSQ1NCQ0lGT1FNSUlBOGdCeUFGSUFBckEvQUJvcUVnQmlBQUt3T1FBcUtoSWdjZ0NDQUZJQUFyQS9nQm9xRWdCaUFBS3dPWUFxS2hJZ2dnQ1NBRklBQXJBNEFDb3FFZ0JpQUFLd09nQXFLaElnWVFrd1FpQlRrREFDQUFJQWNnQmFNNUE5QUJJQUFnQ0NBUEt3TUFvemtEMkFFZ0FDQUdJQThyQXdDak9RUGdBU0FBSUJFckF6Z2dEeXNETUNBQUt3T29BaUlHb3FFZ0R5c0RLS01pQlRrRGlBSWdBQ0FSS3dNWUlBOHJBd2dnQmFLaElBWWdEeXNERUtLaElBOHJBd0NqT1FQb0FVRUFJUkFEZjBFQUlRRWdFRUVEUmdSL0lCRkI0QUJxSkFCQkFBVURRQ0FCUVFOSEJFQWdEeUFRUVFWMGFpQUJRUU4wYWlJVklCVXJBd0FnRHlzRFVLTTVBd0FnQVVFQmFpRUJEQUVMQ3lBUVFRRnFJUkFNQVFzTEJRTkFJQUZCQkVjRVFDQVBJQkJCQlhScUlBRkJBM1JxUWdBM0F3QWdBVUVCYWlFQkRBRUxDeUFRUVFGcUlSQU1BUXNMUVFCT0JFQWdHVUVCYTdjaEJnTkFJQUpCQkVZRVFDQUFLd09BQXlFRlFRQWhBUU5BUVFBaEFpQUJRUU5IQkVBRFFDQUNRUU5IQkVBZ0FrRURkQ0lQSUFCQmdBRnFJQUZCR0d4cWFpQUFRYkFDYWlBQlFRVjBhaUFQYWlzREFDQUZvemtEQUNBQ1FRRnFJUUlNQVFzTElBRkJBV29oQVF3QkN3c2dBRUlBTndNZ0lBQkNBRGNET0NBQVFVQnJRZ0EzQXdBZ0FFSUFOd05JSUFCQ0FEY0RhQ0FBSUFRZ0E2QWdCQ0FEb1NJRm96a0RVQ0FBSUFNZ0E2QWdCS0lnQmFNNUExZ2dBQ0FBS3dPZ0FVUUFBQUFBQUFBQXdLSWdCcU01QXlnZ0FDQUFLd09vQVNJRElBT2dJQWFqUkFBQUFBQUFBUEMvb0pvNUF6QWdBRUlBTndNWUlBQkNBRGNEWUNBQUlBQXJBNEFCSWdNZ0E2QWdHa0VCYTdjaUE2TTVBd0FnQUNBQUt3T0lBU0lFSUFTZ0lBT2pPUU1JSUFBZ0FDc0RrQUVpQkNBRW9DQURvMFFBQUFBQUFBRHd2NkNhT1FNUUlBQkNBRGNEZUNBQVFvQ0FnSUNBZ0lENHYzODNBM0FnQUNzRHFBSWhCU0FBS3dPSUFpRUhRUUFoQVNBQUt3UG9BU0VJQTBBZ0FVRUVSZzBFSUFBZ0FVRUZkR29pRHlzREVDRURJQThyQXdnaEJDQVBLd01BSVFaQkFDRUNBMEFnQWtFRFJ3UkFJQmNnQWtFQ2RDQUJha0VEZEdvZ0F5QUFRZEFCYWlBQ1FRTjBhaUlRUVVCckt3TUFvaUFHSUJBckF3Q2lJQVFnRUNzRElLS2dvRGtEQUNBQ1FRRnFJUUlNQVFzTElBRkJBM1FnRjJvZ0F5QUZvaUFHSUFpaUlBUWdCNktnb0NBUEt3TVlvRGtEWUNBQlFRRnFJUUVNQUFzQUJTQUFRYkFDYWlBQ1FRTjBhaUlCSUFZZ0FVRkFheXNEQUtJZ0FTc0RJS0U1QXlBZ0FrRUJhaUVDREFFTEFBc0FDMEVBUVFOQjBBeEJBQkE1Q3lBQVFaQURhaVFBSUJNZ0V5Z0N3QUVRdWdVMkF1QUJDeUFTUVRCcUpBQU1BUXRCQUVFRFFlY05RUUFRT1VFQkVBSUFDeUFXUVNCcVFibjlBUkJJSWdBZ0ZDZ0N5QUVRd3dFZ0FCQTJHaUFVS0FJQUlRQWdGQ2dDeEFFaEFTQVVLQUxJQVNFQ0lCWWdGQ2dDekFFMkFoUWdGa0hBaXdRMkFoQWdGaUFVUWFBRGFqWUNEQ0FXSUFJMkFnZ2dGaUFCTmdJRUlCWWdBRFlDQUVHMWlBUkI0WlVDSUJZUUNCb2dGQ2dDQUNFQUlCWkJNR29rQUNBQUMvQWNBdzkvQTN3SGZTTUFRVEJySWdva0FDQUtJQUEyQWl3Z0NrR01pd1FnQ2tFc2FoQnhOZ0lBSUFvUVpqWUNLQUovSUFvZ0NrRW9haEIyQkVCQjVPSURLQUlBREFFTElBcEJMR29RZHlFQUlBcEJBRUVvRURnaEJDQUFLQUxFQVNFQ0lBUkJBVFlDRUNBRUlBSTJBZ0FnQkNBQUtBTE1BVFlDRENBQUtBTFlBU0VCSXdCQjBBQnJJZ1lrQUFKQUFrQUNRQUpBSUFGRklBUkZjZzBBSUFGQkFEWUNMQ0FCUVN4cUlRa0NRQUpBSUFFb0F2U0dyd01pQWtFRVJnUkFJQUVvQXZ5R3J3TWlBRUVBU2dSQUlBRWdBRUVCYXpZQy9JYXZBd3dDQ3lBR0lBRW9BaEFpQlNBQktBS0FoNjhEYWlJQVFmOEJJQUJCL3dGSUd5SUhOZ0pFSUFFb0FvU0hyd01oQUNBR0lBVTJBa3dnQmlBRklBQnJJZ0JCQUNBQVFRQktHeUlJTmdKSUlBRkJNR29oQ3lBQlFiRDRBR29oRENBQlFiajRBR29oQUNBQlFlQ0dwd0pxSVFOQkFDRUNBMEFnQWtFRFJ3UkFJQVFvQWd3Z0FTZ0NKQ0FCS0FJb0lBRW9BZ0FnQVNnQ0RDQUNRUUowSWcwZ0JrSEVBR3BxS0FJQUlBRW9BaFFnQTBFQUVOTURRUUJJRFFVZ0FTZ0NKQ0FCS0FJb0lBTWdBU2dDRkNBQUlBd1EvQVZCQUVnTkJTQUVLQUlBSUFFb0FpUWdBU2dDS0NBQktBSUVJQUFnQVNnQ3NIZ2dBU2dDOElhdkF5QUJLQUlVSUFFb0FoZ2dBU2dDSUVHNEFXb2dBU3NEa0lldkF5QUxJQWtnQVNnQ21JZXZBeEM0QlVFQVNBMEZJQVpCT0dvZ0RXb2dDU2dDQURZQ0FDQUNRUUZxSVFJTUFRc0xBa0FnQVNnQ0FFRUJSd1JBSUFZb0Fqd2hBeUFHS0FKQUlRSWdCaWdDT0NFQURBRUxJQVlnQnpZQ01DQUdJQVlvQWpnaUFEWUNOQ0FHSUFnMkFpQWdCaUFHS0FJOElnTTJBaVFnQmlBRk5nSW9JQVlnQmlnQ1FDSUNOZ0lzUVFCQkEwR2l4d0FnQmtFZ2FoQTVDeUFDSUFOSUlBQWdBa3B5UlFSQUFrQWdBUUovSUFFb0FvQ0hyd01pQkNBQktBS0VoNjhESWdCSUJFQWdCRUVCYWd3QkN5QUFJQVJJQkVBZ0FTQUFRUUZxTmdLRWg2OEREQUlMSUFFZ0FFRUJhallDaElldkF5QUVRUUZxQ3lJRU5nS0FoNjhEQ3lBRUlBVnFRZjhCVGdSL0lBRkJBVFlDZ0lldkEwRUJCU0FFQ3lBRlRnUkFJQUZCQVRZQ2hJZXZBd3NnQVNBQktBTDRocThETmdMOGhxOEREQVlMSUFFZ0NDQUhJQUFnQTBnYklnSTJBaEJCQVNFQUFrQWdBaUFGYXlJRFFRQktCRUFnQVNBRE5nS0FoNjhEREFFTElBRkJBVFlDZ0lldkEwRUFJQU5ySVFBTElBRWdBRFlDaElldkF5QUJLQUlBUVFGR0JFQWdCaUFDTmdJUVFRQkJBMEdKekFBZ0JrRVFhaEE1Q3lBQklBRW9BdmlHcndNMkF2eUdyd01nQVNnQzlJYXZBeUVDQ3dKQUFrQWdBa0VCYXc0REFRRUFBZ3RCQUNFSFFYOGhBQUpBSUFFb0FvaUhyd01pQXlBRUtBSU1JZzRRM3dOQkFFZ05BQ0FES0FJQVJRUkFJQU1nQXlnQ0NDQURLQUlFYkJBM0lnSTJBZ0FnQWtVTkFRc0RRQUpBUVFBaEFDQUhJQU1vQWdnaUJVNE5BQU5BQWtCQkFDRUlRUUFoQzBGOElRVWdBQ0FES0FJRUlneE9EUUFEUUNBRlFRVkhCRUFDUUNBRklBZHFJZ0pCQUVnTkFDQUNJQU1vQWdoT0RRQWdBaUFNYkNFUFFYd2hBZ05BSUFKQkJVWU5BU0FBSUFKcUlnMUJBRWdnRENBTlRISkZCRUFnQzBFQmFpRUxJQWdnRGlBTklBOXFhaTBBQUdvaENBc2dBa0VCYWlFQ0RBQUxBQXNnQlVFQmFpRUZEQUVMQ3lBREtBSUFJQWNnREd3Z0FHcHFJQWdnQzIwNkFBQWdBRUVCYWlFQURBRUxDeUFIUVFGcUlRY01BUXNMUVFBaEFnTkFJQUlnQlNBREtBSUViRTROQVNBREtBSUFJQUpxSWdVZ0JTMEFBRUVIYXpvQUFDQUNRUUZxSVFJZ0F5Z0NDQ0VGREFBTEFBc2dBQ0lGUVFCSURRWWdCQ2dDRENBQktBS0loNjhESWdBb0FnUWdBQ2dDQ0NBQktBSUFJQUVvQWd4QkFFRUFJQUZCNElhbkFtb2dBQ2dDQUJEVEF5SUZRUUJPRFFJTUJnc2dBU2dDL0lhdkF5SUFRUUJLQkVBZ0FTQUFRUUZyTmdMOGhxOEREQUVMSUFRb0Fnd2hBQ0FCS0FLSWg2OERJUU1DZnlBQ1FRRkdCRUJCQUNFRlFRQWhCMEVBSVFJZ0F5QUFFTjhEUVFCSUJIOUJmd1ZCQUNFQUEwQWdBeUFGUVFKMGFpSUlRWXdJYWlBSUtBSU1JQWRxSWdjMkFnQWdCVUVCYWlFRklBQkIvd0Z4UVFGcUlnQkIvd0Z4SUFCR0RRQUxRUUFMSWdCQkFFNEVmd0ovSUFNb0FnZ2dBeWdDQkd5eVF3QUFBRCtVSWhOREFBQ0FUMTBnRTBNQUFBQUFZSEVFUUNBVHFRd0JDMEVBQ3lFRkEwQWdBaUlBUVFGcUlRSWdBeUFBUWY4QmNTSUhRUUowYWtHTUNHb29BZ0FnQlVrTkFBc0RRQ0FBUWY4QmNTRUNJQUJCQVdvaEFDQURJQUpCQW5ScVFZd0lhaWdDQUNBRlJnMEFDeUFHSUFJZ0IycEJBWFk2QUVSQkFBVWdBQXNNQVFzQ2YwRUFJUVZCZnlBRElBQVEzd05CQUVnTkFCcEJBU0VDUVFFaEFBTkFJQlVnQXlBQ1FRSjBhaWdDRENBQ2JMT1NJUlVnQWtFQmFpRUNJQUJCL3dGeFFRRnFJZ0JCL3dGeElBQkdEUUFMSUFNb0FnZ2dBeWdDQkd5eUlSaEJBQ0VDUVFBaEFBTkFBa0FnRXlBRElBSkJBblJxS0FJTUlnZXpraUlUUXdBQUFBQmNCRUFnR0NBVGt5SVVRd0FBQUFCYkRRRWdGaUFDSUFkc3M1SWlGaUFUbFNBVklCYVRJQlNWa3lJWklCa2dFeUFVbEpTVUloUWdGeUFVSUJkZUlnY2JJUmNnQWlBRklBY2JJUVVMSUFKQkFXb2hBaUFBUWY4QmNVRUJhaUlBUWY4QmNTQUFSZzBCQ3dzZ0JpQUZPZ0JFUVFBTEN5SUZRUUJJRFFVQ1FDQUJLQUlBUVFGSERRQWdCaTBBUkNJQUlBRW9BaEJHRFFBZ0FTZ0M5SWF2QXlFQ0lBWWdBRFlDQkNBR1FZVFNBRUgzMVFBZ0FrRUJSaHMyQWdCQkFFRURRZi9RQUNBR0VEa0xJQUVnQmkwQVJEWUNFQ0FCSUFFb0F2aUdyd00yQXZ5R3J3TUxJQVFvQWd3Z0FTZ0NKQ0FCS0FJb0lBRW9BZ0FnQVNnQ0RDQUJLQUlRSUFFb0FoUWdBVUhnaHFjQ2FrRUFFTk1EUVFCSURRRUxJQUVvQWlRZ0FTZ0NLQ0FCUWVDR3B3SnFJQUVvQWhRZ0FVRzQrQUJxSWdBZ0FVR3crQUJxRVB3RlFRQk9EUUVMUVg4aEJRd0NDMEYvSVFVZ0JDZ0NBQ0FCS0FJa0lBRW9BaWdnQVNnQ0JDQUFJQUVvQXJCNElBRW9BdkNHcndNZ0FTZ0NGQ0FCS0FJWUlBRW9BaUJCdUFGcUlBRXJBNUNIcndNZ0FVRXdhaUFKSUFFb0FwaUhyd01RdUFWQkFFZ05BUXNnQVNnQ0hFRUJSd1JBSUFFb0F2aUtwZ0lpQUVFQUlBQkJBRW9iSVFoQkFDRUhBMEFnQnlBSVJ3UkFRUUFoQkNBQktBSXNJZ0JCQUNBQVFRQktHeUVGSUFFZ0IwR0lBbXhxUVlDTHBnSnFJUUpCZnlFRFJBQUFBQUFBQU9BL0lSRURRQ0FFSUFWSEJFQUNRQ0FDS0FJQXR5QUJJQVJCQ0hScUlnQW9BakMzSWhDakloSkVabVptWm1abTVqOWpJQkpFNFhvVXJrZmg5ajlrY2cwQUlBQXJBMmdnQWlzRE9LRWlFaUFTb2lBQUt3TndJQUlyQTBDaEloSWdFcUtnSUJDakloQWdFV05GRFFBZ0VDRVJJQVFoQXdzZ0JFRUJhaUVFREFFTEN3SkFJQU5CQUVnTkFFRi9JUVVDUUFKQUlBRW9BaGdpQ3c0RkFBQUFBUUVHQ3lBQ0t3TWdJaElnQVNBRFFRaDBhaUlGSWdBckExQmtSUTBCSUFBZ0Vqa0RVQ0FGSUFJb0FnUWlDVFlDTkVFQUlRTkJmeUVBUkFBQUFBQ0UxNWRCSVJFRFFFUUFBQUFBQUFBQUFDRVFRUUFoQkNBRFFRUkhCRUFEUUNBRVFRUkhCRUFnRUNBQ0lBUkJCSFJxSWd3ckE2Z0JJQVVnQXlBRWFrRURjVUVFZEdvaURTc0QyQUdoSWhBZ0VLSWdEQ3NEc0FFZ0RTc0Q0QUdoSWhBZ0VLS2dvQ0VRSUFSQkFXb2hCQXdCQ3dzZ0VDQVJZd1JBSUJBaEVTQUNLQUlRSUFOclFRUnFRUVJ2SVFBTElBTkJBV29oQXd3QkN3c2dCVUZBYXlBQU5nSUFJQXRCQVUwRVFDQUZJQkk1QTFnZ0JTQUpOZ0k0SUFVZ0FEWUNSQXdDQ3lBRklCSTVBMkFnQlNBSk5nSThJQVVnQURZQ1NBd0JDd0pBSUFJckF5Z2lFQ0FCSUFOQkNIUnFJZ1VpQUNzRFdHUUVRQ0FDS3dNd0lSRU1BUXNnQWlzRE1DSVJJQVVyQTJCa1JRMEJDeUFBSUJBNUExZ2dBaWdDQ0NFQUlBVWdFVGtEWUNBRklBQTJBamdnQlNBQ0tBSU1OZ0k4UVFBaEEwRi9JUUJFQUFBQUFJVFhsMEVoRVFOQVJBQUFBQUFBQUFBQUlSQkJBQ0VFSUFOQkJFY0VRQU5BSUFSQkJFY0VRQ0FRSUFJZ0JFRUVkR29pQ1NzRHFBRWdCU0FESUFScVFRTnhRUVIwYWlJTEt3UFlBYUVpRUNBUW9pQUpLd093QVNBTEt3UGdBYUVpRUNBUW9xQ2dJUkFnQkVFQmFpRUVEQUVMQ3lBRElBQWdFQ0FSWXlJRUd5RUFJQkFnRVNBRUd5RVJJQU5CQVdvaEF3d0JDd3NnQlVFRUlBQnJJZ0FnQWlnQ0ZHcEJCRzgyQWtRZ0JTQUFJQUlvQWhocVFRUnZOZ0pJQ3lBSFFRRnFJUWNNQVFzTElBRVFzUVpCQUNFRVFRQWhBd05BSUFFb0F2aUtwZ0lnQkVvRVFDQUJJQVJCaUFKc2FpSUFRWUNOcGdKcUlnSWdBaWdDQUNJQ1FRRnFOZ0lBSUFKQkFrd0VRQ0FESUFSSEJFQWdBU0FEUVlnQ2JHcEJnSXVtQW1vZ0FFR0FpNllDYWtHSUFoQStHZ3NnQTBFQmFpRURDeUFFUVFGcUlRUU1BUXNMSUFFZ0F6WUMrSXFtQWlBQktBSXNJZ0JCQUNBQVFRQktHeUVGUVFBaEFBTkFBa0FDUUNBQUlBVkdEUUFnQVNBQVFRaDBhaUlFS0FJMElnZEJBRWdOQVNBRVFUQnFJUWxCQUNFRUlBTkJBQ0FEUVFCS0d5RUNBMEFDUUNBQ0lBUkhCRUFnQVNBRVFZZ0NiR3BCaEl1bUFtb29BZ0FnQjBjTkFTQUVJUUlMSUFJZ0EwWUVRQ0FEUVR4R0RRTWdBU0FEUVFGcUlnTTJBdmlLcGdJTElBRWdBa0dJQW14cUlnUkJnSXVtQW1vZ0NVR0FBaEErR2lBRVFZQ05wZ0pxUVFFMkFnQU1Bd3NnQkVFQmFpRUVEQUFMQUF0QkFDRUZJQUVvQWh4QkFrWU5BMEVBSVFBRFFDQUFJQU5PRFFSQkFDRUVJQUVvQWl3aUIwRUFJQWRCQUVvYklRa2dBU0FBUVlnQ2JHcEJnSXVtQW1vaEFnTkFBa0FnQkNBSlJ3Ui9JQUlvQWdDM0lBRWdCRUVJZEdvaUNDZ0NNTGNpRWFNaUVFUm1abVptWm1ibVAyTWdFRVRoZWhTdVIrSDJQMlJ5RFFFZ0NDc0RhQ0FDS3dNNG9TSVFJQkNpSUFnckEzQWdBaXNEUUtFaUVDQVFvcUFnRWFORUFBQUFBQUFBNEQ5alJRMEJJQVFGSUFrTElBZEdCRUFnQVNBSFFRaDBha0V3YWlBQ1FZQUNFRDRhSUFFZ0FTZ0NMRUVCYWpZQ0xDQUJLQUw0aXFZQ0lRTUxJQUJCQVdvaEFBd0NDeUFFUVFGcUlRUU1BQXNBQ3dBTElBQkJBV29oQUF3QUN3QUxJQUVRc1FaQkFDRUZDeUFHUWRBQWFpUUFJQVVMSVFBZ0NrRXdhaVFBSUFBTGNnRUJmeU1BUVJCcklnRWtBQ0FCSUFBMkFnd2dBVUdNaXdRZ0FVRU1haEJ4TmdJSUlBRVFaallDQUVGL0lRQWdBVUVJYWlBQkVIWkZCRUFnQVVFTWFoQjNLQUxZQVNJQUJIOGdBU0FBS0FJVU5nSUlRUUFGUVg4TElRQkJmeUFCS0FJSUlBQWJJUUFMSUFGQkVHb2tBQ0FBQzM4QkFYOGpBRUVnYXlJQ0pBQWdBaUFBTmdJY0lBSkJqSXNFSUFKQkhHb1FjVFlDQ0NBQ0VHWTJBaGdDUUNBQ1FRaHFJQUpCR0dvUWRnMEFJQUpCSEdvUWR5Z0MyQUVpQUVVZ0FVRUJTM0lFZjBGL0JTQUFJQUUyQWhSQkFBc05BQ0FDUVFocVFjV1NBaEJJSWdBZ0FSRERBU0FBRURZYUN5QUNRU0JxSkFBTGRnRUNmeU1BUVJCcklnRWtBQ0FCSUFBMkFnd2dBVUdNaXdRZ0FVRU1haEJ4TmdJSUlBRVFaallDQUVFQUlRQWdBVUVJYWlBQkVIWkZCRUFnQVVFTWFoQjNLQUxZQVNJQVJTQUJRUWhxSWdKRmNnUi9RWDhGSUFJZ0FDZ0NBRFlDQUVFQUN4b2dBU2dDQ0NFQUN5QUJRUkJxSkFBZ0FBdGJBUUYvSXdCQkVHc2lBU1FBSUFFZ0FEWUNEQ0FCUVl5TEJDQUJRUXhxRUhFMkFnZ2dBUkJtTmdJQVFRQWhBQ0FCUVFocUlBRVFka1VFUUNBQlFReHFFSGNvQXRnQlFlU0dwd0pxS0FJQUlRQUxJQUZCRUdva0FDQUFDMzhCQVg4akFFRWdheUlDSkFBZ0FpQUFOZ0ljSUFKQmpJc0VJQUpCSEdvUWNUWUNDQ0FDRUdZMkFoaEJBQ0VBSUFKQkNHb2dBa0VZYWhCMlJRUkFJQUpCSEdvUWR5Z0MyQUVnQVVFQVJ4RFZCeUFDUVFocVFjWGxBUkJJSWdCQmtKRUNRWlNSQWlBQkd4Q2FBeUFBRURZYUlBRWhBQXNnQWtFZ2FpUUFJQUFMZndFQ2Z5TUFRUkJySWdFa0FDQUJJQUEyQWd3Z0FVR01pd1FnQVVFTWFoQnhOZ0lJSUFFUVpqWUNBRUYvSVFBZ0FVRUlhaUFCRUhaRkJFQWdBVUVNYWhCM0tBTFlBU0lBUlNBQlFRaHFJZ0pGY2dSL1FYOEZJQUlnQUNnQzlJYXZBellDQUVFQUN5RUFRWDhnQVNnQ0NDQUFHeUVBQ3lBQlFSQnFKQUFnQUF0c0FRRi9Jd0JCSUdzaUFpUUFJQUlnQURZQ0hDQUNRWXlMQkNBQ1FSeHFFSEUyQWdnZ0FoQm1OZ0lZQWtBZ0FrRUlhaUFDUVJocUVIWU5BQ0FDUVJ4cUVIY29BdGdCSUFFUTNBWU5BQ0FDUVFocVFkZjdBUkJJSWdBZ0FSRERBU0FBRURZYUN5QUNRU0JxSkFBTGZBRUNmeU1BUVJCcklnRWtBQ0FCSUFBMkFnd2dBVUdNaXdRZ0FVRU1haEJ4TmdJSUlBRVFaallDQUVGL0lRQWdBVUVJYWlBQkVIWkZCRUFnQVVFTWFoQjNLQUxZQVNJQVJTQUJRUWhxSWdKRmNnUi9RWDhGSUFJZ0FDZ0NFRFlDQUVFQUN5RUFRWDhnQVNnQ0NDQUFHeUVBQ3lBQlFSQnFKQUFnQUF1TUFRRUJmeU1BUVNCcklnSWtBQ0FDSUFBMkFod2dBa0dNaXdRZ0FrRWNhaEJ4TmdJSUlBSVFaallDR0FKQUlBSkJDR29nQWtFWWFoQjJEUUFnQWtFY2FoQjNJUUFnQVVIL0FVc05BQ0FBS0FMWUFTSUFSU0FCUWY4QlMzSUVmMEYvQlNBQUlBRTJBaEJCQUFzTkFDQUNRUWhxUWZEN0FSQklJZ0FnQVJEREFTQUFFRFlhQ3lBQ1FTQnFKQUFMV3dJQmZ3RjhJd0JCRUdzaUFTUUFJQUVnQURZQ0RDQUJRWXlMQkNBQlFReHFFSEUyQWdnZ0FSQm1OZ0lBUkFBQUFBQUFBUEMvSVFJZ0FVRUlhaUFCRUhaRkJFQWdBVUVNYWhCM0t3T1FBeUVDQ3lBQlFSQnFKQUFnQWd0TUFRRi9Jd0JCRUdzaUFpUUFJQUlnQURZQ0RDQUNRWXlMQkNBQ1FReHFFSEUyQWdnZ0FoQm1OZ0lBSUFKQkNHb2dBaEIyUlFSQUlBSkJER29RZHlBQk9RT1FBd3NnQWtFUWFpUUFDMXNDQVg4QmZDTUFRUkJySWdFa0FDQUJJQUEyQWd3Z0FVR01pd1FnQVVFTWFoQnhOZ0lJSUFFUVpqWUNBRVFBQUFBQUFBRHd2eUVDSUFGQkNHb2dBUkIyUlFSQUlBRkJER29RZHlzRGlBTWhBZ3NnQVVFUWFpUUFJQUlMVEFFQmZ5TUFRUkJySWdJa0FDQUNJQUEyQWd3Z0FrR01pd1FnQWtFTWFoQnhOZ0lJSUFJUVpqWUNBQ0FDUVFocUlBSVFka1VFUUNBQ1FReHFFSGNnQVRrRGlBTUxJQUpCRUdva0FBdW5Sd0lqZndKOUl3QkJNR3NpQ3lRQUlBc2dBVFlDTENBTFFZeUxCQ0FMUVN4cUVIRTJBaGdnQ3hCbU5nSUlBa0FDUUFKQUFrQUNRQ0FMUVJocUlBdEJDR29RZGdSQUlBQVFTaG9NQVFzZ0MwRXNhaEIzSWhjb0F1QUJJU01nQzBFQU5nSW9JQUlRVTBFVVR3MEJJQmRCL0FKcUlTUWdGMEhzQW1vaEpTQUxRUmhxRUVvaElnSkFBMEFDUUNBTElBVTJBaFFnQWhCVElBVk5EUUFnQzBFSWFpSURRWm5zQVJCSUlnRWdBaEJURU1NQklBRVFOaG9nQTBIN2t3SVFTQ0lCSUFJZ0N5Z0NGQkNUQVJBOUVKb0RJQUVRTmhvZ0FpQUxLQUlVRUpNQkVEMGhHQ0FMS0FJVUlRa2dJaUFMUVJScUVLZ0NJQU5CMnBBQ0VFZ2lBU0FZRUpvRElBRVFOaG9DUUFKQUFuOGpBRUVRYXlJSUpBQWdDRUg0bndFdEFBQTZBQTRnQ0VIMm53RXZBQUE3QVF3Q1FBSi9Ba0FDUUNBWVFRQWdDMEVFYWh0RkJFQkJBRUVEUWRqWUFFRUFFRGtNQVFzQ2Z5QUlRUXhxSVFFakFFRVFheUlFSkFBQ1FBSkFJQmhGQkVCQkFDRUJEQUVMSUJnUW5nRkI1WkFDRUo0QmFrRUNhaEEzSWdORkRRRWdCRUhsa0FJMkFnUWdCQ0FZTmdJQUlBTkI3dzRnQkJDaUFpQURJQUVRekFJaEFTQURFREVMSUFSQkVHb2tBQ0FCREFFTERBNExJZ1JGQkVBZ0NDQVlOZ0lBSUFoQjVaQUNOZ0lJSUFoQnZNZ0FOZ0lFUVFCQkEwR0w2Z0FnQ0JBNURBRUxRUUZCRUJDRUF5SUtSUTBEQWtBZ0NrRUVha0VFUVFFZ0JCQmZRUUZIRFFBZ0NpZ0NCQ0lCUVFCTURRQWdDaUFCUVlRQmJCQTNJZ0UyQWdBZ0FVVU5CRUVBSVFZRFFDQUtLQUlFSUFaS0JFQWdCa0dFQVd3aUFTQUtLQUlBYWtFSVFRRWdCQkJmUVFGSERRSWdDaWdDQUNBQmFrRUlha0VJUVFFZ0JCQmZRUUZIRFFJZ0NpZ0NBQ0FCYWtFUWFrSHNBRUVCSUFRUVgwRUJSdzBDSUFvb0FnQWdBV3BCL0FCcVFRUkJBU0FFRUY5QkFVY05BaUFHUVFGcUlRWWdDaWdDQUNBQmFrR0FBV3BCQkVFQklBUVFYMEVCUmcwQkRBSUxDeUFLUVF4cVFRUkJBU0FFRUY5QkFVY05BRUVBSVFZZ0NpZ0NEQ0lCUVFCTUJFQWdDa0VBTmdJSURBRUxJQW9nQVVFTWJCQTNJZ0UyQWdnZ0FVVU5CQU5BSUFZZ0NpZ0NERTROQXlBR1FReHNJZ0VnQ2lnQ0NHcEJDR3BCQkVFQklBUVFYMEVCUncwQklBb29BZ2dnQVdwQkJHcEJCRUVCSUFRUVgwRUJSdzBCSUFvb0FnZ2dBV29pQVNBQktBSUVJZ05CREd3UU55SUJOZ0lBSUFGRkRRVWdCa0VCYWlFR0lBRkJEQ0FESUFRUVh5QURSZzBBQ3d0QkFFRURRZm5zQUVFQUVEa2dDaWdDQ0JBeElBb29BZ0FRTVNBS0VERWdCQkN1QVF0QmZ3d0JDeUFMSUFvMkFnUWdCQkN1QVVFQUN5RUJJQWhCRUdva0FDQUJEQUVMREFnTFFRQklCRUFnQzBFSWFrRzFrQUlRU0NJQklCZ1E4UU1NQVFzZ0MwRUlha0hoa2dJUVNDSUJJQWtRd3dFZ0FSQTJHa0VBSVFVQ1FDQUxLQUlFSWdnRVFDQUlLQUlFSWdGQkFDQUJRUUJLR3lFRUEwQWdCQ0FGUmdSQVFRQWhCaUFJS0FJTUlnRkJBQ0FCUVFCS0d5RUVRUUFoQlFOQUlBUWdCVVlOQkVFQUlBZ29BZ2dnQlVFTWJHb2lBeWdDQ0NJQlFYOUhJQUZCQUU0YlJRUkFJQU1nQ1RZQ0NBc2dCVUVCYWlFRkRBQUxBQVZCQUNBSUtBSUFJQVZCaEFGc2FpSURLQUo4SWdGQmYwY2dBVUVBVGh0RkJFQWdBeUFKTmdKOEN5QUZRUUZxSVFVTUFRc0FDd0FMUVFCQkEwRzA4QUJCQUJBNVFYOGhCZ3NnQmtFQVNBUkFJQXRCQ0dwQnVlQUJFRWdpQVJEc0FRd0JDd0ovUVFBaEFTQUxRU2hxUVFBZ0MwRUVhaUlWRzBVRVFFRUFRUU5CdGpkQkFCQTVRWDhNQVFzQ1FDQUxLQUlvSWdWRkJFQWdDMEVRRURjaUJUWUNLQ0FGUlEwQklBVkNBRGNDQUNBRlFnQTNBZ2dMQWtBZ0ZTZ0NBQ0lHUlEwQUlBWW9BZ1FpQ0NBRktBSUVJZzVxSWdsQmhBRnNFRGNpQ2dSQUlBNUJBQ0FPUVFCS0d5RUVBMEFnQVNBRVJnUkFRUUFoQVNBSVFRQWdDRUVBU2hzaEF3TkFJQUVnQTBjRVFDQUtJQUVnRG1wQmhBRnNhaUFHS0FJQUlBRkJoQUZzYWtHRUFSQStHaUFCUVFGcUlRRU1BUXNMSUFVb0FnQVFNU0FMS0FJb0lBbzJBZ0FnQ3lnQ0tDSUlJQWsyQWdSQkFDRUZJQWdvQWd3aUVrRUFJQkpCQUVvYklSb2dGU2dDQUNJRUtBSU1JZ2xCQUNBSlFRQktHeUVOUVFBaEd3TkFRUUFoQVNBTklCdEhCRUFDUUFOQUlBRWdHa1lOQVNBQlFReHNJUU1nQVVFQmFpRUJJQVFvQWdnZ0cwRU1iR29vQWdnZ0F5QUlLQUlJYWlnQ0NFY05BQXNnQlVFQmFpRUZDeUFiUVFGcUlSc01BUXNMSUFrZ0Vtb2dCV3NpQmtFTWJCQTNJZ3dFUUVFQUlSQURRQ0FRSUJwR0JFQkJBQ0VGUVFBaEVRSkFBMEFnQlNBTlJ3UkFJQVZCREd3aUNDQVZLQUlBS0FJSWFpSUVLQUlJSVFsQkFDRUJBa0FDUUFOQUlBRWdHa1lOQVNBQlFReHNJUU1nQVVFQmFpRUJJQWtnQXlBTEtBSW9LQUlJYWlnQ0NFY05BQXNnRVVFQmFpRVJEQUVMSUF3Z0JTQVNhaUFSYTBFTWJHb2lEaUFKTmdJSUlBNGdCQ2dDQkNJS1FReHNFRGNpQVRZQ0FDQUJSUTBEUVFBaEFTQUtRUUFnQ2tFQVNoc2hDUU5BSUFFZ0NVY0VRQ0FCUVF4c0lnTWdEaWdDQUdvaUJDQVZLQUlBS0FJSUlBaHFLQUlBSUFOcUlnTXBBZ0EzQWdBZ0JDQURLQUlJTmdJSUlBRkJBV29oQVF3QkN3c2dEaUFLTmdJRUN5QUZRUUZxSVFVTUFRc0xJQXNvQWlnaUVTZ0NDQVIvUVFBaEFRTkFJQkVvQWdnaEF5QVJLQUlNSUFGS0JFQWdBeUFCUVF4c2FpZ0NBQkF4SUFGQkFXb2hBU0FMS0FJb0lSRU1BUXNMSUFNUU1TQUxLQUlvQlNBUkN5QU1OZ0lJSUFzb0FpZ2dCallDRENBVkVLWUZEQWNMREFjTElBd2dFRUVNYkNJS2FpSU9JQXNvQWlnb0FnZ2dDbW9pQkNnQ0NEWUNDRUVBSVFFZ0JDZ0NCQ0lJSVFVRFFDQUJJQTFIQkVBZ0ZTZ0NBQ2dDQ0NBQlFReHNhaUlES0FJSUlBUW9BZ2hHQkVBZ0F5Z0NCQ0FGYWlFRkN5QUJRUUZxSVFFTUFRc0xJQTRnQlVFTWJCQTNJZ0UyQWdBZ0FRUkFRUUFoRVNBSVFRQWdDRUVBU2hzaENVRUFJUUVEUUNBQklBbEhCRUFnQVVFTWJDSURJQTRvQWdCcUlnUWdDeWdDS0NnQ0NDQUthaWdDQUNBRGFpSURLUUlBTndJQUlBUWdBeWdDQ0RZQ0NDQUJRUUZxSVFFTUFRc0xBa0FEUUNBTklCRkdEUUVnRlNnQ0FDZ0NDQ0liSUJGQkRHd2lDV29vQWdnZ0N5Z0NLQ2dDQ0NBS2FpZ0NDRWNFUUNBUlFRRnFJUkVNQVFzTFFRQWhBUU5BSUFFZ0NTQWJhaUlES0FJRVRnMEJJQTRvQWdBZ0FTQUlha0VNYkdvaUJDQURLQUlBSUFGQkRHeHFJZ01wQWdBM0FnQWdCQ0FES0FJSU5nSUlJQUZCQVdvaEFTQVZLQUlBS0FJSUlSc01BQXNBQ3lBT0lBVTJBZ1FnRUVFQmFpRVFEQUVMQ3d3RkN3d0VCU0FLSUFGQmhBRnNJZ05xSUFVb0FnQWdBMnBCaEFFUVBob2dBVUVCYWlFQkRBRUxBQXNBQ3d3QkMwRUFEQUVMREFnTFFRQklCRUFnQzBFSWFrSGM0QUVRU0NJQkVPd0JEQUVMSUF0QkNHb2lBMEhja1FJUVNDSUJFUElESUFFUU5ob2dBMEdONEFFUVNDSUJJQmdRbWdNZ0FSQTJHZ0ovUVFBaEEwRUFJUlJCQUNFY0l3QkIwQWRySWdja0FBSkFBa0FDUUFKL0FrQkJtT0FCTFFBQUJFQkJtT0FCUVlBSUVLQUNEUUVMSUFkQjBBVnFJQmhCL3dFUTNRTkJBRG9BL3dGQkFRd0JDeUFISUJnMkFyQUJJQWRCbU9BQk5nSzBBU0FIUWNBQmFpSUJRZThPSUFkQnNBRnFFS0lDSUFGQjZ4Y1F6QUlpRkVVRVFDQUhJQmcyQXFBQlFRQkJBMEhESFNBSFFhQUJhaEE1SUFkQnRJd0VLQUlBRUlnRE5nS1VBU0FIUWUwck5nS1FBVUVBUVFOQnlDSWdCMEdRQVdvUU9Rd0NDMEVBQ3lFYkFrQUNRRUgwQ0JBM0lod0VRRUVCSVJFQ1FDQWJEUUFnQjBIQUFXb2dGQkRYQWtVTkFpQUhJQWRCekFWcU5nS0FBU0FIUWNBQmFrR25NeUFIUVlBQmFoRGxBVUVCUncwQ0lBY29Bc3dGSWhGQkFFb05BQXdDQ3lBY1FRQTJBcGdCSUJ3Z0VUWUNCQ0FjSUJGQjhBQnNFRGNpRmpZQ0FDQVdCRUFDUUFOQUlBY2dBellDekFVZ0F5QVJUZzBCSUFjZ0EwRUJhallDY0VFQVFRRkJxRDBnQjBId0FHb1FPU0FiUlFSQUlBZEJ3QUZxSUJRUTF3SkZEUUlnQnlBSFFkQUZhallDWUNBSFFjQUJha0hWUFNBSFFlQUFhaERsQVVFQlJ3MENJQWRCMEFWcUlRbEJBQ0VCUVg4aEF3TkFBa0FDUUNBQklBbHFMUUFBSWdSQkxrY0VRQ0FFRFFFZ0EwRi9Sd1JBSUFNZ0NXcEJBRG9BQUFzTUFnc2dBU0VEQ3lBQlFRRnFJUUVNQVFzTEMwRUFRUUZCNHNVQVFRQVFPUUovSXdCQjRBQnJJZzhrQUNBUFFmU2ZBUzhBQURzQldDQVBRZkNmQVNnQUFEWUNWQUpBQW44Q1FDQUhRZEFGYWlJTUVKNEJJQTlCMUFCcUVKNEJha0VCYWhBM0lnRUVRQ0FQSUF3MkFrQWdEeUFQUWRRQWFqWUNSQ0FCUWVvT0lBOUJRR3NRb2dJZ0FVSFdHQkRNQWlFVElBRVFNU0FUUlFSQUlBOGdERFlDQUNBUElBOUIxQUJxTmdJRVFRQkJBMEdxSHlBUEVEbEJBQXdEQzBFSUVEY2lIa1VOQXdKQUFrQWdIa0VFYWtFRVFRRWdFeEJmUVFGR0JFQWdIaWdDQkNJVlFRQktEUUVMUVFCQkEwR3pJMEVBRURrTUFRc2dEeUFWTmdJd1FRQkJBVUc3S2lBUFFUQnFFRGtnSGlBVlFRSjBFRGNpR1RZQ0FDQVpSUTBFSUJsQkVCQTNJZ0UyQWdBZ0FVVU5CQUovUVJRUU55SVNCRUFnRWtFSWFpRU9JQkpCREdvaENpQVNRUVJxSVFnZ0VrRVFhaUVhSXdCQm9BWnJJZ1VrQUVFb0VEY2lEVUVBTmdJQUlBVkJ1QUpxUVFCQjZBTVFPQnBCd0pvRVFRQTJBZ0FnQlVFWWFoQ3lCU0VFUWNDYUJDZ0NBQ0VEUWNDYUJFRUFOZ0lBUVg4aEFVRUVJUkFDUUFKQUFrQUNRQ0FEUlEwQVFjU2FCQ2dDQUNJR1JRMEFJQU1vQWdBZ0RVRUVFS1lCSWdGRkRRRWdCaVFCQ3lNQklRTWdBVUVCUndSQUlBVkJBellDR0NBRklBUTJBcmdDSUFWQm5BRnFRUUVnRFVFRUVQd0VJUTBqQVNFUVFRQWhBd3NEUUNBREJFQkJ3Sm9FUVFBMkFnQkJCQ0FGUWJnQ2FoQUpRY0NhQkNnQ0FDRURRY0NhQkVFQU5nSUFRWDhoQVFKQUlBTkZEUUJCeEpvRUtBSUFJZ1pGRFFBZ0F5Z0NBQ0FOSUJBUXBnRWlBVVVOQXlBR0pBRUxJd0VoQXlBQlFRRkdEUUZCd0pvRVFRQTJBZ0JCQlVFQVFRTkI4ekJCQUJBS1FjQ2FCQ2dDQUNFRFFjQ2FCRUVBTmdJQVFYOGhBUUpBSUFORkRRQkJ4Sm9FS0FJQUlnWkZEUUFnQXlnQ0FDQU5JQkFRcGdFaUFVVU5BeUFHSkFFTEl3RWhBeUFCUVFGR0RRRU1Bd3RCd0pvRVFRQTJBZ0JCQmlBRlFiZ0Nha0hhQUVIb0F4QWhRY0NhQkNnQ0FDRURRY0NhQkVFQU5nSUFRWDhoQVFKQUlBTkZEUUJCeEpvRUtBSUFJZ1pGRFFBZ0F5Z0NBQ0FOSUJBUXBnRWlBVVVOQWlBR0pBRUxJd0VoQXlBQlFRRkdEUUJCd0pvRVFRQTJBZ0JCQnlBRlFiZ0NhaUFURUJsQndKb0VLQUlBSVFOQndKb0VRUUEyQWdCQmZ5RUJBa0FnQTBVTkFFSEVtZ1FvQWdBaUJrVU5BQ0FES0FJQUlBMGdFQkNtQVNJQlJRMENJQVlrQVFzakFTRURJQUZCQVVZTkFFSEFtZ1JCQURZQ0FFRUlJQVZCdUFKcVFRRVFHQ0VFUWNDYUJDZ0NBQ0VEUWNDYUJFRUFOZ0lBUVg4aEFRSkFJQU5GRFFCQnhKb0VLQUlBSWdaRkRRQWdBeWdDQUNBTklCQVFwZ0VpQVVVTkFpQUdKQUVMSXdFaEF5QUJRUUZHRFFBZ0JFRUJSd1JBUWNDYUJFRUFOZ0lBUVFWQkFFRURRY1UyUVFBUUNrSEFtZ1FvQWdBaEEwSEFtZ1JCQURZQ0FFRi9JUUVDUUNBRFJRMEFRY1NhQkNnQ0FDSUdSUTBBSUFNb0FnQWdEU0FRRUtZQklnRkZEUU1nQmlRQkN5TUJJUU1nQVVFQlJnMEJRY0NhQkVFQU5nSUFRUVFnQlVHNEFtb1FDVUhBbWdRb0FnQWhBMEhBbWdSQkFEWUNBRUYvSVFFQ1FDQURSUTBBUWNTYUJDZ0NBQ0lHUlEwQUlBTW9BZ0FnRFNBUUVLWUJJZ0ZGRFFNZ0JpUUJDeU1CSVFNZ0FVRUJSZzBCREFNTFFjQ2FCRUVBTmdJQVFRa2dCVUc0QW1vUUZocEJ3Sm9FS0FJQUlRTkJ3Sm9FUVFBMkFnQkJmeUVCQWtBZ0EwVU5BRUhFbWdRb0FnQWlCa1VOQUNBREtBSUFJQTBnRUJDbUFTSUJSUTBDSUFZa0FRc2pBU0VESUFGQkFVWU5BQ0FGS0FMVUFpQUZLQUxjQW13aUNTQUZLQUxZQW13UU55SWRCRUJCQUNFQkFrQUNRQUpBQTBBQ1FFRUFJUU1nQlNnQ3hBTWdCU2dDckFOUEJFQkJ3Sm9FUVFBMkFnQkJDaUFGUWJnQ2FoQVdHa0hBbWdRb0FnQWhBMEhBbWdSQkFEWUNBRUYvSVFFQ1FDQURSUTBBUWNTYUJDZ0NBQ0lHUlEwQUlBTW9BZ0FnRFNBUUVLWUJJZ0ZGRFFrZ0JpUUJDeU1CSVFNZ0FVRUJSZzBIUWNDYUJFRUFOZ0lBUVFRZ0JVRzRBbW9RQ1VIQW1nUW9BZ0FoQTBIQW1nUkJBRFlDQUVGL0lRRUNRQ0FEUlEwQVFjU2FCQ2dDQUNJR1JRMEFJQU1vQWdBZ0RTQVFFS1lCSWdGRkRRa2dCaVFCQ3lNQklRTWdBVUVCUmcwSElBNEVRQ0FPSUFVb0F0UUNOZ0lBQ3lBS0JFQWdDaUFGS0FMWUFqWUNBQXNnQ0FSQUlBZ2dCU2dDM0FJMkFnQUxJQnBGRFFvZ0JTMEEyZ1FpQkVFQmF3NENBUU1FQ3dOQUlBTkJCVWNFUUNBRklBTkJBblJxSUIwZ0FTQURhaUFKYkdvMkFnQWdBMEVCYWlFRERBRUxDMEhBbWdSQkFEWUNBRUVMSUFWQnVBSnFJQVZCQlJBWElRUkJ3Sm9FS0FJQUlRTkJ3Sm9FUVFBMkFnQkJmeUVnQWtBZ0EwVU5BRUhFbWdRb0FnQWlCa1VOQUNBREtBSUFJQTBnRUJDbUFTSWdSUTBJSUFZa0FRc2pBU0VESUNCQkFVWU5CaUFCSUFScUlRRU1BUXNMSUFVdkFkd0VJZ0VnQlM4QjNnUWlBMGNOQWlBYUlBR3pPQUlBREFjTElBVXZBZHdFSWdFZ0JTOEIzZ1FpQTBjTkFTQWFJQUd6UTF5UElrQ1VPQUlBREFZTElBVXZBZDRFSVFNZ0JTOEIzQVFoQVFzZ0F5QUJRZi8vQTNFZ0JFRURTWEp5UlFSQUlCb2dCTE00QWdBTUJRc2dHa0VBTmdJQURBUUxRY0NhQkVFQU5nSUFRUVZCQUVFRFFlY05RUUFRQ2tIQW1nUW9BZ0FoQTBIQW1nUkJBRFlDQUVGL0lRRUNRQ0FEUlEwQVFjU2FCQ2dDQUNJR1JRMEFJQU1vQWdBZ0RTQVFFS1lCSWdGRkRRSWdCaVFCQ3lNQklRTWdBVUVCUmcwQVFjQ2FCRUVBTmdJQVFRUWdCVUc0QW1vUUNVSEFtZ1FvQWdBaEEwSEFtZ1JCQURZQ0FFRi9JUUVDUUNBRFJRMEFRY1NhQkNnQ0FDSUdSUTBBSUFNb0FnQWdEU0FRRUtZQklnRkZEUUlnQmlRQkN5TUJJUU1nQVVFQlJnMEFDd3dCQ3lBTkVERWdBeUFHRVBzRUFBdEJBQ0VkQ3lBTkVERWdCVUdnQm1va0FDQVNJQjAyQWdBZ0hRUi9JQklGSUJJUU1VRUFDd3dCQ3d3RkN5SURSUTBDSUFNb0FnUkJBVWNFUUNBUElBdzJBaUFnRHlBUFFkUUFhallDSkVFQVFRSkJsakFnRDBFZ2FoQTVJQmtvQWdBUU1TQVpFREVnSGhBeElBTVFNU0FURUs0QlFRQU1CQXNnR1NnQ0FDSUJJQU1vQWdnMkFnUWdBU0FES0FJTU5nSUlJQUVnQXlvQ0VEZ0NEQ0FCSUFNb0FnQTJBZ0FnQXhBeElCTkJCQ0FWUVFKMGEwRUNFSjRGUVFFaElRSkFBMEFnRlNBaFJ3UkFJQTlCM0FCcVFRUkJBU0FURUY5QkFVY0VRRUVBSVFFRFFDQUJJQ0ZHRFFRZ0dTQUJRUUowYWlJREtBSUFLQUlBRURFZ0F5Z0NBQkF4SUFGQkFXb2hBUXdBQ3dBTElCa2dJVUVDZEdvQ2Z5QVBLZ0pjSVNjZ0dTZ0NBQ0lmS0FJRUlRTWdIeW9DRENFbUlCOG9BZ2doQVVFUUVEY2hCU0FCc2lBbmxDQW1sUkNqQWlFRUlBT3lJQ2VVSUNhVkVLTUNJUU1nQlFSQUFrQWdCU0FuT0FJTUlBVWdCRFlDQ0NBRklBTTJBZ1FnQlNBRElBUnNFRGNpSFRZQ0FDQWRSUTBBUVFBaEFTQUVRUUFnQkVFQVNoc2hHaUFEUVFBZ0EwRUFTaHNoREFOQUlBRWdHa2NFUUNBZktBSUlJUWtnSHlvQ0RDSW1JQUZCQVdvaUJMS1VJQ2VWRUtNQ0lRTWdKaUFCc3BRZ0o1VVFvd0lpQ0NBRElBa2dBeUFKU0JzaUFTQUJJQWhJR3lFT1FRQWhBUU5BSUFFZ0RFWUVRQ0FFSVFFTUF3VWdIeWdDQkNFTklCOHFBZ3dpSmlBQlFRRnFJZ095bENBbmxSQ2pBaUVKSUNZZ0FiS1VJQ2VWRUtNQ0loQWdDU0FOSUFrZ0RVZ2JJZ0VnQVNBUVNCc2dFR3NoQ2tFQUlRRWdDQ0VHUVFBaEVnTkFJQVlnRGtjRVFDQUJJQXBxSVFrZ0h5Z0NBQ0FHSUExc0lCQnFhaUVnQTBBZ0FTQUpSd1JBSUFGQkFXb2hBU0FTSUNBdEFBQnFJUklnSUVFQmFpRWdEQUVMQ3lBR1FRRnFJUVlnQ1NFQkRBRUxDeUFkSUJJZ0FXMDZBQUFnSFVFQmFpRWRJQU1oQVF3QkN3QUxBQXNMSUFVTUFnc0xEQWdMSWdFMkFnQWdBUVJBSUNGQkFXb2hJUXdDQlVFQUlRRURRQ0FCSUNGR0RRUWdHU0FCUVFKMGFpSURLQUlBS0FJQUVERWdBeWdDQUJBeElBRkJBV29oQVF3QUN3QUxBQXNMSUJNUXJnRWdIZ3dFQ3lBWkVERUxJQjRRTVNBVEVLNEJRUUFNQWdzTUFnc2dEeUFNTmdJUUlBOGdEMEhVQUdvMkFoUkJBRUVDUVpZd0lBOUJFR29RT1NBWktBSUFFREVnR1JBeElCNFFNU0FURUpJRkFuOUJBQ0VCQWtBQ1FBSkFRUWdRTnlJR0JFQUNRQ0FHUVFScVFRUkJBU0FURUY5QkFVWUVRQ0FHS0FJRUlnbEJBRW9OQVF0QkFFRURRYk1qUVFBUU9Rd0NDeUFHSUFsQkFuUVFOeUlJTmdJQUlBZ0VRRUVCSVEwRFFDQUJJQWxHQkVCQkFDRUJBMEFnQVNBSlJnMEdBa0FDUUNBSUlBRkJBblJxSWdRb0FnQkJCR3BCQkVFQklCTVFYMEVCUndSQVFRQWhBd05BSUFFZ0EwWUVRRUVBSVFFRFFDQUJJQWxHRFFRZ0NDQUJRUUowYWlnQ0FCQXhJQUZCQVdvaEFRd0FDd0FGSUFnZ0EwRUNkR29vQWdBb0FnQVFNU0FEUVFGcUlRTU1BUXNBQ3dBTElBUW9BZ0JCQ0dwQkJFRUJJQk1RWDBFQlJ3UkFRUUFoQXdOQUlBRWdBMFlFUUVFQUlRRURRQ0FCSUFsR0RRUWdDQ0FCUVFKMGFpZ0NBQkF4SUFGQkFXb2hBUXdBQ3dBRklBZ2dBMEVDZEdvb0FnQW9BZ0FRTVNBRFFRRnFJUU1NQVFzQUN3QUxJQVFvQWdCQkRHcEJCRUVCSUJNUVgwRUJSd1JBUVFBaEF3TkFJQUVnQTBZRVFFRUFJUUVEUUNBQklBbEdEUVFnQ0NBQlFRSjBhaWdDQUJBeElBRkJBV29oQVF3QUN3QUZJQWdnQTBFQ2RHb29BZ0FvQWdBUU1TQURRUUZxSVFNTUFRc0FDd0FMSUFRb0FnQWlBeUFES0FJSUlBTW9BZ1JzRURjaUF6WUNBQ0FEQkVBZ0JDZ0NBQ0lES0FJQVFRRWdBeWdDQ0NBREtBSUViQ0FURUY4Z0JDZ0NBQ0lES0FJSUlBTW9BZ1JzUmcwQ1FRQWhBUU5BSUFFZ0RVWUVRRUVBSVFFRFFDQUJJQWxHRFFRZ0NDQUJRUUowYWlnQ0FCQXhJQUZCQVdvaEFRd0FDd0FGSUFnZ0FVRUNkR29vQWdBb0FnQVFNU0FCUVFGcUlRRU1BUXNBQ3dBTERBa0xJQWdRTVF3R0N5QU5RUUZxSVEwZ0FVRUJhaUVCREFBTEFBc2dDQ0FCUVFKMGFrRVFFRGNpQXpZQ0FDQUJRUUZxSVFFZ0F3MEFDd3dFQ3d3REN3d0NDeUFHRURGQkFDRUdDeUFURUs0QklBWU1BUXNNQWdzTElRRWdEMEhnQUdva0FDQUJEQUVMREJNTElRRWdGaUFIS0FMTUJVSHdBR3hxSUFFMkFnQWdBVVVFUUNBSElBZEIwQVZxTmdJQVFRQkJBMEc5ekFBZ0J4QTVJQllRTVNBY0VERWdGRVVOQmlBVUVLNEJEQVlMUVFCQkFVSDEwQUJCQUJBNVFRQkJBVUhOMUFCQkFCQTVBbjlCQUNFTVFRQWhCaU1BUWFBRWF5SUlKQUFnQ0NBSFFkQUZhaUlETmdJUUlBaEJnQWcyQWhRZ0NFRWdhaUlCUVlzSUlBaEJFR29Rb2dJQ1FBSkFJQUZCdEJRUXpBSWlEa1VFUUNBSUlBTTJBZ0JCQUVFRFFiNFpJQWdRT1F3QkN3SkFBa0JCQ0JBM0lnd0VRQ0FNUVFScVFRUkJBU0FPRUY5QkFVY0VRRUVBUVFOQjZ5UkJBQkE1REFJTElBd2dEQ2dDQkNJQlFSUnNFRGNpQ1RZQ0FDQUpCRUFnQVVFQUlBRkJBRW9iSVFNRFFDQURJQVpHRFFRQ1FBSkFJQWtnQmtFVWJHb2lDa0VJYWtFRVFRRWdEaEJmUVFGSERRQWdDa0VNYWtFRVFRRWdEaEJmUVFGSERRQWdDa0VRYWtFRVFRRWdEaEJmUVFGSERRQWdDa0VFYWtFRVFRRWdEaEJmUVFGSERRQWdDaUFLS0FJRVFSUnNFRGNpQVRZQ0FFRUFJUVFnQVVVTkNBTkFJQVFnQ2lnQ0JFNE5BaUFFUVJSc0lnRWdDaWdDQUdwQkJFRUJJQTRRWDBFQlJ3MEJJQW9vQWdBZ0FXcEJCR3BCQkVFQklBNFFYMEVCUncwQklBb29BZ0FnQVdwQkNHcEJCRUVCSUE0UVgwRUJSdzBCSUFvb0FnQWdBV3BCREdwQkJFRUJJQTRRWDBFQlJ3MEJJQVJCQVdvaEJDQUtLQUlBSUFGcVFSQnFRUVJCQVNBT0VGOUJBVVlOQUFzTFFRQWhBMEVBUVFOQjZ5UkJBQkE1QTBBZ0F5QUdSd1JBSUFrZ0EwRVViR29vQWdBUU1TQURRUUZxSVFNTUFRc0xJQWtRTVF3RUN5QUdRUUZxSVFZTUFBc0FDd3dFQ3d3REN5QU1FREZCQUNFTUN5QU9FSzRCQ3lBSVFhQUVhaVFBSUF3TUFRdEJBRUVEUWRvZlFRQVFPUXdVQ3lFQklCWWdCeWdDekFWQjhBQnNhaUFCTmdJRUlBRkZCRUFnQnlBSFFkQUZhallDRUVFQVFRTkJ0OWtBSUFkQkVHb1FPVUVBSVFNQ1FDQVdJQWNvQXN3RlFmQUFiR29pQ1VVTkFDQUpLQUlBSWd4RkRRQURRQ0FNS0FJQUlRUWdEQ2dDQkNBRFNnUkFJQVFnQTBFQ2RDSUJhaWdDQUNnQ0FCQXhJQWtvQWdBb0FnQWdBV29vQWdBUU1TQURRUUZxSVFNZ0NTZ0NBQ0VNREFFTEN5QUVFREVnQ1NnQ0FCQXhJQWxCQURZQ0FBc2dGaEF4SUJ3UU1TQVVSUTBHSUJRUXJnRU1CZ3RCQUVFQlFmWFFBRUVBRURrZ0ZpQUhLQUxNQlVId0FHeHFRUUEyQWdnQ1FBSkFJQnNFUUVFQUlRRWdCeWdDekFVaERBTkFRUUFoQXlBQlFRTkdEUUlEUUNBRFFRUkhCRUFnRmlBTVFmQUFiR29nQVVFRWRHb2dBMEVDZEdwREFBQ0FQME1BQUFBQUlBRWdBMFliT0FJTUlBTkJBV29oQXd3QkN3c2dBVUVCYWlFQkRBQUxBQXNnQjBIQUFXb2dGQkRYQWtVTkF5QUhJQllnQnlnQ3pBVkI4QUJzYWlJQlFReHFOZ0pBSUFjZ0FVRVFhallDUkNBSElBRkJGR28yQWtnZ0J5QUJRUmhxTmdKTUlBZEJ3QUZxUVl6eUFDQUhRVUJyRU9VQlFRUkhEUWtnQjBIQUFXb2dGQkRYQWtVTkF5QUhJQllnQnlnQ3pBVkI4QUJzYWlJQlFSeHFOZ0l3SUFjZ0FVRWdhallDTkNBSElBRkJKR28yQWpnZ0J5QUJRU2hxTmdJOElBZEJ3QUZxUVl6eUFDQUhRVEJxRU9VQlFRUkhEUWtnQjBIQUFXb2dGQkRYQWtVTkF5QUhJQllnQnlnQ3pBVkI4QUJzYWlJQlFTeHFOZ0lnSUFjZ0FVRXdhallDSkNBSElBRkJOR28yQWlnZ0J5QUJRVGhxTmdJc0lBZEJ3QUZxUVl6eUFDQUhRU0JxRU9VQlFRUkhEUUVnQnlnQ3pBVWhEQXNnRmlBTVFmQUFiR29pQVVFTWFpRUpJQUZCUEdvaENFRUFJUUZCQkVFRUVMY0JJZ1lvQWdBaENnTkFJQUZCQTBjRVFDQUJRUUowSVFSQkFDRURBMEFnQTBFRVJ3UkFJQW9nQXlBRWFrRURkR29nQ1NBQlFRUjBhaUFEUVFKMGFpb0NBTHM1QXdBZ0EwRUJhaUVEREFFTEN5QUJRUUZxSVFFTUFRc0xJQXBDQURjRFlDQUtRb0NBZ0lDQWdJRDRQemNEZUNBS1FnQTNBM0FnQ2tJQU53Tm9JQVlRcWdNYUlBWW9BZ0FoQ1VFQUlRRURRQ0FCUVFOSEJFQWdBVUVDZENFRVFRQWhBd05BSUFOQkJFY0VRQ0FJSUFGQkJIUnFJQU5CQW5ScUlBa2dBeUFFYWtFRGRHb3JBd0MyT0FJQUlBTkJBV29oQXd3QkN3c2dBVUVCYWlFQkRBRUxDeUFHRUVRZ0IwSFFCV29oQ0VFQUlRTkJBQ0VCQWtBQ1FBTkFBa0FDUUNBQklBaHFJZ2t0QUFBaUJFRXVSd1JBSUFRTkFVSDk5Z0FRbmdFaEJDQUREUUlnQVNBRWFrRUNha0dBQWtvTkJTQUpRUzQ2QUFBZ0FTRUREQVFMSUFFaEF3c2dBVUVCYWlFQkRBRUxDeUFESUFScVFRSnFRWUFDU2cwQkN5QURJQWhxUVFBNkFBRkIvZllBSVFFQ1FBSkFJQWdRbmdFZ0NHb2lERUg5OWdCelFRTnhCRUJCL2ZZQUxRQUFJUU1NQVFzRFFDQU1JQUV0QUFBaUF6b0FBQ0FEUlEwQ0lBeEJBV29oRENBQlFRRnFJZ0ZCQTNFTkFBc2dBU2dDQUNJRFFYOXpJQU5CZ1lLRUNHdHhRWUNCZ29SNGNRMEFBMEFnRENBRE5nSUFJQUVvQWdRaEF5QU1RUVJxSVF3Z0FVRUVhaUVCSUFOQmdZS0VDR3NnQTBGL2MzRkJnSUdDaEhoeFJRMEFDd3NnRENBRE9nQUFJQU5CL3dGeFJRMEFBMEFnRENBQkxRQUJJZ002QUFFZ0RFRUJhaUVNSUFGQkFXb2hBU0FERFFBTEN3dEJnQUlRTnlFRElCWWdCeWdDekFVaUFVSHdBR3hxSUFNMkFtd2dBMFVOQ1NBRElBZEIwQVZxUVlBQ0VOMERHaUFCUVFGcUlRTU1BUXNMREFZTElCUUVRQ0FVRUs0QkN5QVJJQWNvQXN3RlRBMEVRUUFRQWdBTERBVUxEQVFMSUJRUXJnRWdIQkF4QzBFQUlSd0xJQWRCMEFkcUpBQWdIQXdDQzBFQVFRTkJzdllBUVFBUU9TQVVFSzRCUVFBUUFnQUxRUUJCQTBHQk1rRUFFRGtNQ2dzaEFTQVhJQXNvQWhSQkFuUnFJQUUyQW9nQ0lBRU5BU0FMUVFocVFlM2ZBUkJJSWdFZ0dCRHhBd3NnQVJBMkdpQUFFRW9hREFNTElBRW9BZ0FvQWdBaUFTZ0NCQ0VESUJjZ0FTZ0NBQ2dDQUNJQktBSUVOZ0x3QWlBWElBRW9BZ2cyQXZRQ0lCY0NmeUFCS2dJTUlpYUxRd0FBQUU5ZEJFQWdKcWdNQVF0QmdJQ0FnSGdMTmdMNEFpQUxRUWhxSWdSQjJPc0JFRWdpQVNBREVNTUJJQUVRTmhvZ0JFR0U3QUVRU0NJQklCY29BdkFDRU1NQklBRVFOaG9nQkVIQzZ3RVFTQ0lCSUJjb0F2UUNFTU1CSUFFUU5ob2dCRUh4NndFUVNDSUJJQmNvQXZnQ0VNTUJJQUVRTmhvZ0Z5QUxLQUlVTmdMc0FpQWtJQ1VRMkFVZ0JFSGNrUUlRU0NJQkVQSURJQUVRTmhvZ0N5Z0NGRUVCYWlFRkRBRUxDeUFqSUFzb0FpZ1E5QWRCQUVnRVFDQUxRUWhxUWFIZ0FSQklJZ0VRN0FFZ0FSQTJHaUFBRUVvYURBRUxJQXRCS0dvUXBnVWdDMEVJYWtHWmtRSVFTQ0lCRVBJRElBRVFOaG9nRnlBaUVFSWdGeWdDaEFKcU5nS0VBaUFBSUNJUWxnUWFDeUFpRUhJTElBdEJNR29rQUE4TElBdEJHR3BCOUpBQ0VFZ2lBQkRzQVNBQUVEWWFRWDhRQWdBTFFRQkJBMEh6RzBFQUVEa01BUXRCQUVFRFFlY05RUUFRT1F0QkFSQUNBQXVHQmdJSmZ3RjhJd0JCMEFGcklnVWtBRUYvSVFrZ0FCQTlJUU1qQUVHZ0Ftc2lBU1FBUVg4aEJBSkFJQVZCR0dvaUJrVWdBMFZ5RFFBZ0EwR3RJUkRNQWlJQ1JRUkFRYlNNQkNnQ0FDRUNJQUVnQXpZQ0ZDQUJJQUkyQWhCQkFFRURRWWNySUFGQkVHb1FPU0FCUWJTTUJDZ0NBQkNJQXpZQ0JDQUJRZW9mTmdJQVFRQkJBMEc0R1NBQkVEa01BUXRCQUNFRUlBSkJBRUVDRUo0RkFuOENRQUovSUFJb0FreEJBRWdFUUNBQ0tBSUFEQUVMSUFJb0FnQUxRUVYyUVFGeEJFQWdBVUcwakFRb0FnQTJBbEJCQUVFRFFiWXRJQUZCMEFCcUVEa2dBVUcwakFRb0FnQVFpQU0yQWtRZ0FVSHFIellDUUVFQVFRTkJ1QmtnQVVGQWF4QTVEQUVMSUFJUS9BY2hCeUFDRUpJRkFrQURRQ0FFSWdOQkJFWU5BU0FEUVFGcUlRUWdCeUFEUVFOMFFjQ2ZBV29vQWdSdkRRQUxJQUZCNEFCcUlBTkJBM1JCd0o4QmFpZ0NCRUVCSUFJUVgwRUJSd1JBSUFGQnRJd0VLQUlBTmdJd1FRQkJBMEhPT1NBQlFUQnFFRGtnQVVHMGpBUW9BZ0FRaUFNMkFpUWdBVUhxSHpZQ0lFRUFRUU5CdUJrZ0FVRWdhaEE1REFJTElBRWdCRFlDa0FJZ0FVSGdBR29RdGdZZ0EwVUVRQ0FCS3dQZ0FTRUtJQUVnQVNzRDJBRTVBK0FCSUFFZ0Nqa0QyQUVMSUFZZ0FVSGdBR3BCdUFFUVBpRUhJQUZCQURZQ25BSkJBU0VHQTBCQkFDQUdRUUZHRFFNYUlBRWdBU2dDbkFJaUNFRUVhallDbkFJZ0NDZ0NBQ0lJSUFjb0FyQUJOZ0t3QVNBQlFlQUFhaUFIS0FLd0FVRURkRUc4bndGcUtBSUFRUUVnQWhCZlFRRkhEUUlnQVNBRU5nS1FBaUFCUWVBQWFoQzJCaUFEUlFSQUlBRXJBK0FCSVFvZ0FTQUJLd1BZQVRrRDRBRWdBU0FLT1FQWUFRc2dDQ0FCUWVBQWFrRzRBUkErR2lBR1FRRnFJUVlNQUFzQUMwRUFRUU5CNWpaQkFCQTVDMEYvQ3lFRUlBSVFyZ0VMSUFGQm9BSnFKQUFDUUNBRVFRQklCRUFnQlVFSWFrSDNrZ0lRU0NJRUlBQVFQUkR4QXlBRUVEWWFEQUVMUWJTTEJFRzBpd1FvQWdBaUFFRUJhallDQUNBRklBQTJBZ2dnQlVFSWFoRFpCU0FGUVJocVFiZ0JFRDRhSUFVb0FnZ2hDUXNnQlVIUUFXb2tBQ0FKQzlVREFRdC9Jd0JCRUdzaUFTUUFJQUVnQURZQ0RDQUJRWXlMQkNBQlFReHFFSEUyQWdnZ0FSQm1OZ0lBUVg4aEFDQUJRUWhxSUFFUWRrVUVRQ0FCUVF4cUVIY2lCeWdDeEFFaUFBUkFJQUFRTVNBSFFnQTNBc1FCQ3lBSEVOMEZJd0JCSUdzaUF5UUFJQU5CaklzRUlBRkJER29RbXdZMkFoZ2dBeENIQkRZQ0VDQURRUmhxSUFOQkVHb1FxQUZGQkVBZ0EwRUlhaUFEUVJocUVKOEJLQUlBSVFBakFFRWdheUlJSkFBZ0NFRVlhaUFBRUhraUN4Q0JCaUFJUVFocUlRa2pBRUVRYXlJS0pBQkJqSXNFRUpjQklRVkJqSXNFSUFBb0FnUWdCUkJjSWdZUU9pZ0NBQ0VDQTBBZ0FpSUVLQUlBSWdJZ0FFY05BQXNDUUNBRVFaU0xCRWNFUUNBRUtBSUVJQVVRWENBR1JnMEJDeUFBS0FJQUlnSUVRQ0FDS0FJRUlBVVFYQ0FHUmcwQkMwR01pd1FnQmhBNlFRQTJBZ0FMQWtBZ0FDZ0NBQ0lDUlEwQUlBSW9BZ1FnQlJCY0lnSWdCa1lOQUVHTWl3UWdBaEE2SUFRMkFnQUxJQVFnQUNnQ0FEWUNBQ0FBUVFBMkFnQkJqSXNFRUR3aUJDQUVLQUlBUVFGck5nSUFJQWtnQUNBS1FRaHFRWXlMQkJBeVFRRVFyQUlRcXdJYUlBcEJFR29rQUNBSkVMMEZJQXNvQWdBYUlBaEJJR29rQUFzZ0EwRWdhaVFBSUFjUTNBVVFNVUVBSVFBTElBRkJFR29rQUNBQUN3a0FRZERpQXlnQ0FBc0xBRUhRNGdNZ0FEWUNBQXVtQVFFQmZ5TUFRUkJySWdNa0FDQURJQUUyQWd3Z0EwR01pd1FnQTBFTWFoQnhOZ0lJSUFNUVpqWUNBQUpBSUFOQkNHb2dBeEIyQkVBZ0FFSUFOd0lBSUFCQ0FEY0NDQXdCQ3lBRFFReHFFSGNpQVVIOEFtb1F0UUVnQWswRVFFRUlFQWRCcytZQkVJRUhJZ0JCak9JRE5nSUFJQUJCck9JRFFRd1FCZ0FMSUFBZ0FTZ0MvQUlnQWtFRWRHb2lBU2tDQURjQ0FDQUFJQUVwQWdnM0FnZ0xJQU5CRUdva0FBdXZCQUVIZnlNQVFTQnJJZ0lrQUNBQ0lBQTJBaHdnQWtHTWl3UWdBa0VjYWhCeE5nSUlJQUlRWmpZQ0dFRi9JUUFnQWtFSWFpQUNRUmhxRUhaRkJFQWdBa0VjYWhCM0lnRWhCd0ovSUFFb0FxQUVJUVlnQVNnQ3dBRWlBeWdDQUNFRUlBTW9BZ1FoQlVHazZ3QVFOeUlBQkVBQ1FDQUFRUUUyQXVCbklBQkNtclBtK0lPQWdJREFBRGNDS0NBQVFvdUFnSUNnQVRjQ0lDQUFRcG1BZ0lDd0FUY0NHQ0FBSUFVMkFnZ2dBQ0FFTmdJRUlBQWdCallDRkNBQVFmVG5BR29nQkNBRmJCQTNJZ1EyQWdBZ0JFVU5BQ0FBUWZqbkFHcEJBRFlDQUNBQURBSUxDMEVBUVFOQnY1VUNRUUFRT1VFQkVBSUFDeUlBSUFNMkFnd2dBRUVCTmdJQUlBQWdBMEVJYWhENEF5SUROZ0lRSUFORUFBQUFBQUFBQUFBUTJnSWdCeUFBTmdMa0FTQUFSUVJBSUFKQkNHcEJocElDRUVnaUFCRHNBU0FBRURZYUlBRW9BdUFCSWdBRVFDQUFLQUlBSWdBRVFDQUFRUUFRdFFZTElBQVFNU0FCS0FMZ0FTZ0NIQkF4SUFFb0F1QUJLQUlrRURFZ0FTZ0M0QUVvQWpRUU1TQUJLQUxnQVNnQ0xCQXhJQUVvQXVBQkVERWdBVUVBTmdMZ0FRc2dBU2dDNUFFaEFBc2dBQVJBSUFCREFBQ2dRRGdDTEFzZ0FTZ0M1QUVpQUFSQUlBQkRBQUFBUHpnQ0tBc2dBU2dDNUFFaUFBUkFJQUJCRURZQ0pBc2dBU2dDNUFFaUFBUkFJQUJCQmpZQ0dBc2dBU2dDNUFFaUFBUkFJQUJCQmpZQ0hBc2dBU2dDNUFFaUFBUkFJQUJCQmpZQ0lBc2dBU0FCS0FMQUFSQzZCVFlDNEFGQkFDRUFDeUFDUVNCcUpBQWdBQXZSQkFJSmZ3SjhJd0JCUUdvaUFTUUFJQUVnQURZQ1BDQUJRWXlMQkNBQlFUeHFFSEUyQWdBZ0FSQm1OZ0k0UVg4aEFBSkFJQUVnQVVFNGFoQjJEUUFnQVVFOGFoQjNJUUlnQVVFQU5nSTRJQUZCZnpZQ05DQUNLQUtBQWtGK1J3MEFJQUlvQXVBQklBSW9Bc3dCRU84SElBSW9BdUFCSWdBRVFDQUJJQUFvQWpRMkFqZ2dBU0FBS0FJNE5nSTBDeUFDQW44Z0Fpc0QrQUVoQ2lBQ0t3UHdBU0VMUWNBQUVEY2lBQVJBSUFCQ0FEY0RDQ0FBUWdBM0F5Z2dBRUlBTndNWUlBQkNBRGNERUNBQVFvQ0FnSUNBZ0lENFB6Y0RJQ0FBUWdBM0F6QWdBRUlBTndNNElBQWdBQVIvSUFwRUFBQUFBQUFBQUFCaElBdEVBQUFBQUFBQUFBQmhjZ1IvUVg0RklBQkVBQUFBQUFBQThEOGdDcU1pQ2lBS1JBQUFBQUFBQVBBL0lBdWpvS001QXdCQkFBc0ZRWDhMUVFCT0RRRWFJQUFRTVF0QkFBczJBdWdCQTBBZ0JTQUJLQUkwSWdCT0RRRWdBU2dDT0NBRlFjUUFiR29pQkNnQ1BFVUVRQ0FDSUFRb0FqQWlCallDZ0FKQkFDRURBMEFnQTBFRFJ3UkFJQVFnQTBFRWRDSUhhaUVJUVFBaEFBTkFJQUJCQkVZRVFDQURRUUZxSVFNTUF3VWdBRUVDZENJSklBRWdCMnBxSUFnZ0NXb3FBZ0E0QWdBZ0FFRUJhaUVBREFFTEFBc0FDd3RCQUNFQUlBSWdCa0VDZEdvb0FvZ0NJZ1FFUUNBRVFRRTJBcGdCQTBCQkFDRURJQUJCQTBjRVFBTkFJQU5CQkVjRVFDQURRUUowSWdZZ0JDQUFRUVIwSWdkcWFpQUJJQWRxSUFacUtnSUFPQUlJSUFOQkFXb2hBd3dCQ3dzZ0FFRUJhaUVBREFFTEN5QUVRWDgyQXFnQkN3c2dCVUVCYWlFRkRBQUxBQXNnQVVGQWF5UUFJQUFMbEUwRVBYOEdmUTE4QVg0akFFR2dBMnNpQXlRQUlBTWdBRFlDbkFNZ0EwR01pd1FnQTBHY0Eyb1FjVFlDZ0FJZ0F4Qm1OZ0tnQVFKQUFuOGdBMEdBQW1vZ0EwR2dBV29RZGdSQVFlVGlBeWdDQUF3QkN5QUJJQU5CbkFOcUVIY2lIaWdDaEFKT0JFQkI2T0lES0FJQURBRUxJQU5Cb0FGcVFRQkI0QUFRT0JvZ0EwR0FnSUQ4ZXpZQ25BRUNRQ0FlS0FLQUFpSUFJQUZIRFFBZ0hpZ0M1QUVoQnlBZUlBRkJBblJxS0FLSUFpRVBJQjRvQXNRQklUTkJBQ0VBSXdCQk1Hc2lJaVFBUVg4aENnSkFJQWRGSUE5RmNpQXpSU0FEUWVBQ2FpSVVSWEp5SUFOQjVINUdjZzBBSUE4b0FwZ0JRUUJNQkVCQmZpRUtEQUVMSUFOQkFEWUNuQUVnRDBIb0FHb2hDeUFQUVRocUlSRWdEMEVJYWlFdUEwQWdEeWdDQkNBQVNnUkFJQzRnQUVId0FHd2lCQ0FQS0FJQWFrRU1haUFISUFCQk1HeHFJZ1ZCTUdvUXFRUUNRQ0FQS0FLWUFVRUNTQTBBSUJFZ0R5Z0NBQ0FFYWtFTWFpQUZRWkFFYWhDcEJDQVBLQUtZQVVFRFNBMEFJQXNnRHlnQ0FDQUVha0VNYWlBRlFmQUhhaENwQkFzZ0FFRUJhaUVBREFFTEN3SkFJQWNvQWdCQkFVWUVRQ0FIS0FJTUlRVWdCMEV3YWlFTUlBZEI4QlJxSVFzZ0IwSElPbW9oRVVFQUlRUWpBRUhRQUdzaUFDUUFJQVVvQWdTeUlVTWdCU2dDQUxJaFJBSi9BMEFDUUVFQUlRZ2dFaUFQS0FJRVRnMEFBMEJCQUNFS0lBaEJBMFlFUUNBU1FmQUFiQ0lRSUE4b0FnQnFLQUlFSVFKQkFDRUlBMEFnQWlnQ0JDQUlTZ1JBUVFBaENnTkFJQWhCRkd3aUNTQUNLQUlBYWlJWUtBSUVJQXBLQkVBQ1FDQUZJQUJCSUdvZ0NrRVViQ0lDSUJnb0FnQnFJaGdxQWdnZ0dDb0NEQ0FBUVJ4cUlBQkJHR29ReHdWQkFFZ05BQ0FBS2dJY0lqOURBQUFBQUYwZ1B5QkVZSElOQUNBQUtnSVlJajlEQUFBQUFGMGdQeUJEWUhJTkFDQUFLZ0pNSUFBcUFrQWdEeWdDQUNBUWFpZ0NCQ2dDQUNBSmFpZ0NBQ0FDYWlJQ0tnSUlJaitVSUFJcUFnd2lRQ0FBS2dKRWxKS1NJa0VnUVNCQmxDQUFLZ0lzSUFBcUFpQWdQNVFnQUNvQ0pDQkFsSktTSWtFZ1FaUWdBQ29DUENBQUtnSXdJRCtVSUVBZ0FDb0NOSlNTa2lKQUlFQ1VrcEtSSWtLVklBQXFBa2lVSUVFZ1FwVWdBQ29DS0pRZ0FDb0NPQ0JBSUVLVmxKS1NRODNNekwxZURRQWdBQ0EvT0FJUUlBQWdBaW9DRERnQ0ZDQUZJQUJCSUdvZ0FFRVFhaUFBUVFocUVOb0ZBa0FnQUNvQ0RDSS9JQThvQWdBZ0VHb29BZ1FvQWdBZ0NXb2lBaW9DRENKQVgwVU5BQ0EvSUFJcUFoQmdSUTBBSUFaQnlBRkdCRUJCQUVFRFFjS1VBa0VBRURrZ0MwSE1KV29NQ3dzZ0N5QUdRUmhzYWlJQ0lBbzJBZ2dnQWlBSU5nSUVJQUlnRWpZQ0FDQUNJQUFxQWh3NEFoQWdBQ29DR0NFL0lBSkJBRFlDRENBQ0lEODRBaFFnQmtFQmFpRUdEQUVMSUQ4Z1FDQkFrbDlGRFFBZ1B5QUNLZ0lRUXdBQUFEK1VZRVVOQUNBRVFjZ0JSZ1JBSUJGQmZ6WUN6Q1ZCeUFFaEJBd0JDeUFSSUFSQkdHeHFJZ0lnQ2pZQ0NDQUNJQWcyQWdRZ0FpQVNOZ0lBSUFJZ0FDb0NIRGdDRUNBQUtnSVlJVDhnQWtFQU5nSU1JQUlnUHpnQ0ZDQUVRUUZxSVFRTElBcEJBV29oQ2lBUEtBSUFJQkJxS0FJRUlRSU1BUXNMSUFoQkFXb2hDQXdCQ3dzZ0VrRUJhaUVTREFNRkEwQWdDa0VFUndSQUlBcEJBblFpQWlBSVFRUjBJaEFnQUVFZ2FtcHFJQXdnRWtFd2JHb2dFR29nQW1vcUFnQTRBZ0FnQ2tFQmFpRUtEQUVMQ3lBSVFRRnFJUWdNQVFzQUN3QUxDeUFMSUFaQkdHeHFRWDgyQWd3Z0VTQUVRUmhzYWtFTWFndEJmellDQUF3QkN5QUhLQUlFSVFZZ0J5Z0NDQ0VGSUFkQk1Hb2hDU0FIUWZBVWFpRUxJQWRCeURwcUlSRkJBQ0VFSXdCQjBBQnJJZ0FrQUNBRnNpRkJJQWF5SVVJQ2Z3TkFBa0JCQUNFS0lCSWdEeWdDQkU0TkFBTkFRUUFoQ0NBS1FRTkdCRUFnRWtId0FHd2lFQ0FQS0FJQWFpZ0NCQ0VLUVFBaEJnTkFJQW9vQWdRZ0Jrb0VRRUVBSVFnRFFDQUdRUlJzSWdVZ0NpZ0NBR29pRENnQ0JDQUlTZ1JBQWtCQkFDQUFRU0JxSUFoQkZHd2lHQ0FNS0FJQWFpSU1LZ0lJSUF3cUFnd2dBRUVjYWlBQVFSaHFFTWNGUVFCSURRQWdBQ29DSENJL1F3QUFBQUJkSUQ4Z1FtQnlEUUFnQUNvQ0dDSS9Rd0FBQUFCZElEOGdRV0J5RFFBZ0FDQVBLQUlBSUJCcUtBSUVLQUlBSUFWcUtBSUFJQmhxSWd3cUFnZzRBaEFnQUNBTUtnSU1PQUlVUVFBZ0FFRWdhaUFBUVJCcUlBQkJDR29RMmdVQ1FDQUFLZ0lNSWo4Z0R5Z0NBQ0FRYWlnQ0JDZ0NBQ0FGYWlJRktnSU1Ja0JmUlEwQUlEOGdCU29DRUdCRkRRQWdBa0hJQVVZRVFFRUFRUU5Cd3BRQ1FRQVFPU0FMUWN3bGFnd0xDeUFMSUFKQkdHeHFJZ1VnQ0RZQ0NDQUZJQVkyQWdRZ0JTQVNOZ0lBSUFVZ0FDb0NIRGdDRUNBQUtnSVlJVDhnQlVFQU5nSU1JQVVnUHpnQ0ZDQUNRUUZxSVFJTUFRc2dQeUJBSUVDU1gwVU5BQ0EvSUFVcUFoQkRBQUFBUDVSZ1JRMEFJQVJCeUFGR0JFQWdFVUYvTmdMTUpVSElBU0VFREFFTElCRWdCRUVZYkdvaUJTQUlOZ0lJSUFVZ0JqWUNCQ0FGSUJJMkFnQWdCU0FBS2dJY09BSVFJQUFxQWhnaFB5QUZRUUEyQWd3Z0JTQS9PQUlVSUFSQkFXb2hCQXNnQ0VFQmFpRUlJQThvQWdBZ0VHb29BZ1FoQ2d3QkN3c2dCa0VCYWlFR0RBRUxDeUFTUVFGcUlSSU1Bd1VEUUNBSVFRUkhCRUFnQ0VFQ2RDSUdJQXBCQkhRaUJTQUFRU0JxYW1vZ0NTQVNRVEJzYWlBRmFpQUdhaW9DQURnQ0FDQUlRUUZxSVFnTUFRc0xJQXBCQVdvaENnd0JDd0FMQUFzTElBc2dBa0VZYkdwQmZ6WUNEQ0FSSUFSQkdHeHFRUXhxQzBGL05nSUFDeUFBUWRBQWFpUUFJQWRCMEF0cUlUUWdEMEdjQVdvaE5TQUhRY2c2YWlFMklBZEI4QlJxSWpjaEVrRUFJUWdEUUFKQUlBZ2hBRUVBSVJzZ0x5QUhLQUlrVGcwQUEwQUNRQUpBSUJzZ0J5Z0M0R2RPRFFBZ0x5QUhLQUlrUmcwQUlCSWdOU0FBSURRZ0J5Z0NCQ0FIS0FJSUVOUUZJZ3BCQUU0TkFTQVNJRGRIRFFBZ05pSVNJRFVnQUNBMElBY29BZ1FnQnlnQ0NCRFVCU0lLUVFCT0RRRUxRUUFoQ2lBYlJRMENBMEFnQ2lBYlJnMEVJQWNnQ2tFMGJHb2lHVUdVNkFCcUlUNGdHVUhrNXdCcUtBSUFJUVFnR1VIbzV3QnFLQUlBSVNNZ0dVSHM1d0JxS0FJQUlRQWdHVUh3NXdCcUtBSUFJU29nR1VIMDV3QnFLQUlBSVJFZ0dVSDg1d0JxSVJoQkFDRUxRUUFoRUVFQUlSVWpBRUV3YXlJY0pBQWdBQ2dDQ0NFa0lBQW9BZ1FoSmlBQUtBSUFJU0FnR1VINDV3QnFJaFlvQWdBaUFrVUVRQ0FXQW44Z0JDZ0NIQ0VDSUFRb0FpQWhCa0VvRURjaUFBUkFBa0FnQUNBR05nSVVJQUFnQWpZQ0NDQUFJQUkyQWhBZ0FDQUdOZ0lNSUFBZ0FpQUdha0VCYWlJQ05nSUVJQUFnQWpZQ0FDQUFJQUlnQW14QkFYUVFOeUlDTmdJWUlBSkZEUUFnQUF3Q0N3c01DZ3NpQWpZQ0FBdEJmeUVySUFRb0Fnd2hCU0FFSUNCQk1HeHFRVEJxSVE0Z0l5Z0NBQ0FnUWZBQWJHb2lBQ2dDQUNFWElBQW9BZ1FvQWdBZ0prRVViR29oRXlNQVFkQUFheUlBSkFBQ1FBSkFBa0FnQlFSQUlBVkJDR29nRGlBQVFSQnFJZ2tRdVFNZ0FDQVRLQUlBSUNSQkZHeHFJZ1lxQWdnaVB6Z0NUQ0FBSUFZcUFnd2lRRGdDU0VGL0lRWkJBQ0FKSUQ4Z1FDQUFRY3dBYWlBQVFjZ0FhaERXQWtFQVNBMERJQVZCdUFGcUlpRWdBQ29DVENBQUtnSklJQUJCeEFCcUlBQkJRR3NRY0VFQVNBMERJQUlvQWhBaEJnSi9JQUFxQWtCREFBQUFQNUlpUDR0REFBQUFUMTBFUUNBL3FBd0JDMEdBZ0lDQWVBc2hCU0FHUVFGMElRa0NmeUFBS2dKRVF3QUFBRCtTSWorTFF3QUFBRTlkQkVBZ1A2Z01BUXRCZ0lDQWdIZ0xJUjhnQlNBSmF5RUpRUUFnQm1zaERDQUNLQUlZSVFVRFFDQU1JQUlvQWhSS0RRSkJBQ0FDS0FJSUlnWnJJUTBnSHlBR1FRRjBheUVHSUFteUlUOERRQUpBQWtBZ0FpZ0NEQ0FOVGdSQUlDRWdCcklnUHlBQVFjUUFhaUFBUVVCckVONEJRUUJJRFFFZ0FFRVFhaUFYS0FJQUlCTW9BZ2hCQW5ScUtBSUFJQUFxQWtRZ0FDb0NRQ0FBUVE5cUVNQUZRUUJJRFFFZ0JTQUFMUUFQSWhvN0FRQWdFRUVCYWlFUUlBc2dHbW9oQ3lBYUlCcHNJQlZxSVJVTUFnc2dDVUVDYWlFSklBeEJBV29oREF3REN5QUZRWUFnT3dFQUN5QUdRUUpxSVFZZ0RVRUJhaUVOSUFWQkFtb2hCUXdBQ3dBTEFBdEJBQ0FPSUJNb0FnQWdKRUVVYkdvaUJpb0NDQ0FHS2dJTUlBQkJ4QUJxSUFCQlFHc1ExZ0pCQUVnTkFTQUNLQUlRSVFZQ2Z5QUFLZ0pBUXdBQUFEK1NJaitMUXdBQUFFOWRCRUFnUDZnTUFRdEJnSUNBZ0hnTElRVWdCa0VCZENFSkFuOGdBQ29DUkVNQUFBQS9raUkvaTBNQUFBQlBYUVJBSUQrb0RBRUxRWUNBZ0lCNEN5RWhJQVVnQ1dzaENVRUFJQVpySVF3Z0FpZ0NHQ0VGQTBBZ0RDQUNLQUlVU2cwQlFRQWdBaWdDQ0NJR2F5RU5JQ0VnQmtFQmRHc2hCaUFKc2lFL0EwQWdBaWdDRENBTlRnUkFBa0FnRGlBWEtBSUFJQk1vQWdoQkFuUnFLQUlBSUFheUlEOGdBRUVQYWhEQUJVRUFTQVJBSUFWQmdDQTdBUUFNQVFzZ0JTQUFMUUFQSWhvN0FRQWdFRUVCYWlFUUlBc2dHbW9oQ3lBYUlCcHNJQlZxSVJVTElBWkJBbW9oQmlBTlFRRnFJUTBnQlVFQ2FpRUZEQUVMQ3lBSlFRSnFJUWtnREVFQmFpRU1EQUFMQUFzZ0VFVU5BQ0FDSUJBMkFpUWdBaUFMTmdJZ0lBSUNmeUFWSUFzZ0Myd2dFRzFyc3BFaVA0dERBQUFBVDEwRVFDQS9xQXdCQzBHQWdJQ0FlQXMyQWh4QkFDRUdEQUVMUVg4aEJnc2dBRUhRQUdva0FBSkFJQVpCQUVnTkFDQVdLQUlBSWdBb0FoQWdBQ2dDRkdwQkFXb2dBQ2dDQ0NBQUtBSU1ha0VCYW15eVF3QUFvRUNVUXdBQW9FQ1VJQUFvQWh3aUFDQUFiTEplRFFBQ1FBSkFBa0FDUUNBaktBS1lBVUVCYXc0Q0FBRUNDeUFFS0FJTUlBNUJBRUVBSUNNb0FnQWdJRUh3QUd4cUtBSUVLQUlBSUNaQkZHeHFLQUlBSUNSQkZHeHFJQnhCRUdvUTdRTU1BZ3NnQkNnQ0RDQU9JQVFnSUVFd2JHcEJrQVJxUVFBZ0l5Z0NBQ0FnUWZBQWJHb29BZ1FvQWdBZ0prRVViR29vQWdBZ0pFRVViR29nSEVFUWFoRHRBd3dCQ3lBRUtBSU1JQTRnQkNBZ1FUQnNhaUlBUVpBRWFpQUFRZkFIYWlBaktBSUFJQ0JCOEFCc2FpZ0NCQ2dDQUNBbVFSUnNhaWdDQUNBa1FSUnNhaUFjUVJCcUVPMERDMEVBSVNzQ2Z5QUVLQUlFSVJVZ0JDZ0NDQ0VhSUFRb0FoUWhJU0FXS0FJQUlRMGdCQ2dDR0NFTElCeEJFR29oSDBFQUlRd2pBRUZBYWlJT0pBQWdHa0VCYXlFRklCVkJBV3NoRUNBTktBSVVJUWtnRFNnQ0VDRVRBMEFDUUNBTVFRTkdEUUFnSHlBTVFRTjBhaUlBS0FJQUlnSkJBRWdOQUNBQ1FYeHhRUUp5SWdJZ0Myb2lCQ0FRSUFRZ0ZVZ2JJUllnQWlBTGF5SUNRUUFnQWtFQVNoc2hCaUFBS0FJRVFRUnRRUUowUVFKeUlnQWdDMm9pQWlBRklBSWdHa2diSVJjZ0FDQUxheUlBUVFBZ0FFRUFTaHNoQUFOQUlBQWdGMHdFUUNBUklBQWdGV3dnQm1wcUlRUWdCaUVDQTBBZ0FpQVdUQVJBSUFSQkFEb0FBQ0FDUVFGcUlRSWdCRUVCYWlFRURBRUxDeUFBUVFGcUlRQU1BUXNMSUF4QkFXb2hEQXdCQ3dzZ0RrRUFOZ0k4SUFsQkFYUWhMRUVBSUJOQkFYUnJJUjFCQUNFRVFRRWhCZ05BQWtBQ1FBSkFJQVJCQTBjRVFDQWZJQVJCQTNScUlnQW9BZ0FpQWtFQVRnMENRWDhoSHlBR0RRRUxJQTBvQWdCQkEzUkJJR29nRFNnQ0JFRUJkRUVJYW13aUFCQTNJaEVFUUNBQUVEY2lFQVJBUVg4aEh5QWhRUTVMSVRCQkFDRVhRUUFoQUFOQUFrQWdEaWdDUENBWFNnUkFBa0FDUUVFQklDRjBRYURnQVhGRklBMG9BaVFnRFNnQ0JDSUNJQTBvQWdBaUJteEhJREJ5Y2cwQUlCZEJBblFpQkNBT1FTUnFhaUl4S0FJQUlnVWdEU2dDRUVFQmRHdEJBMnNpSjBFQVNBMEFJQVVnRFNnQ0ZFRUJkR3BCQTJvZ0drNE5BQ0FPUVRCcUlBUnFJamdvQWdBaUJDQU5LQUlJUVFGMGEwRURheUlzUVFCSURRQWdCQ0FOS0FJTVFRRjBha0VEYWlBVlNBMEJDeUFYUVFKMElnSWdEa0VrYW1vb0FnQWlCRUVEYWlFRklBUkJBMnNoQkNBT1FUQnFJQUpxSVFzRFFDQUVJQVZLRFFNQ1FDQUVJQTBvQWhCQkFYUnJRUUJJRFFBZ0RTZ0NGRUVCZENBRWFpQWFUZzBFSUFzb0FnQWlBa0VEYWlFSklBSkJBMnNoQWdOQUlBSWdDVW9OQVFKQUlBSWdEU2dDQ0VFQmRHdEJBRWdOQUNBTktBSU1RUUYwSUFKcUlCVk9EUUlnS2lBVklDRWdEU0FDSUFRZ0RrRVVhaEROQlNBT0tBSVVJZ1lnQUV3TkFDQWNJQUkyQWd3Z0hDQUVOZ0lJSUJnZ0JySkRBRUFjUnBVNEFnQkJBQ0VmSUFZaEFBc2dBa0VCYWlFQ0RBQUxBQXNnQkVFQmFpRUVEQUFMQUF0QkFDRUpJQVpCQW5SQkVHb2lCRUVBSUFSQkFFb2JJUXNnQWtFQmRFRUdhaUVGSUJFaEFpQVFJUVFEUUNBSklBdEhCRUFnQWtFQU5nSUFJQVJCQURZQ0FDQUpRUUZxSVFrZ0JFRUVhaUVFSUFKQkJHb2hBZ3dCQ3d0QkFDRVdJQVpCQVhSQkJtb2lCa0VBSUFaQkFFb2JJU1VnQlVFQUlBVkJBRW9iSVRJZ0tpQXNJQlVnSjJ4cWFpRU1RUUFoRXlBUklRVWdFQ0VMQTBCQkFDRUpJQk1nTWtjRVFBTkFJQWxCQWtjRVFDQUNRUUEyQWdBZ0JFRUFOZ0lBSUFsQkFuUWlCaUFPUVFScWFrRUFOZ0lBSUE1QkRHb2dCbXBCQURZQ0FDQUpRUUZxSVFrZ0JFRUVhaUVFSUFKQkJHb2hBZ3dCQ3dzZ0MwRUlhaUVMSUFWQkNHb2hCVUVBSVFrZ0RDRUdBMEFnQ1NBbFJ3UkFJQWxCQW5SQkJIRWlLQ0FPUVF4cWFpSXBJQVl0QUFBaUhTQXBLQUlBYWlJcE5nSUFJQTVCQkdvZ0tHb2lLQ0FvS0FJQUlCMGdIV3hxSWgwMkFnQWdBaUFGS0FJQUlDbHFOZ0lBSUFRZ0N5Z0NBQ0FkYWpZQ0FDQUpRUUZxSVFrZ0JFRUVhaUVFSUF0QkJHb2hDeUFDUVFScUlRSWdCVUVFYWlFRklBWkJBV29oQmd3QkN3c2dFMEVCYWlFVElBd2dGV29oREF3QkN3c0RRQ0FXUVFkR0RRSWdGa0VEYXlFeUlCWkJBbW9oS0NBV0lDZHFJU2xCQUNFQ0EwQWdBa0VIUndSQUlBSkJBbW9oT1VFQUlRWkJBQ0VUSUEwb0FnUWlIVUVBSUIxQkFFb2JJVG9nRlVFQmRDRTdJQ29nQWlBc2FpQVZJQ2xzYW1vaEJTQU5LQUlBSWlWQkFDQWxRUUJLR3lJOFFRRjBJVDBnRFNnQ0dDRUxBMEFnQmlBNlJ3UkFJQVVoQkNBTElRbEJBQ0VNQTBBZ0RDQThSd1JBSUF4QkFXb2hEQ0FKTHdFQUlBUXRBQUJzSUJOcUlSTWdCRUVDYWlFRUlBbEJBbW9oQ1F3QkN3c2dCa0VCYWlFR0lBVWdPMm9oQlNBTElEMXFJUXNNQVFzTElBNGdFQ0FsUVFGMElnWkJDR29pQlNBb1FRSnJJZ3RzSWdrZ09VRUNheUlFYWtFQ2RDSU1haWdDQUNBUUlBVWdDeUFkUVFGMGFtd2lCU0FFSUFacUlnWnFRUUowSWd0cUtBSUFhaUlkSUJBZ0JpQUpha0VDZENJR2FpZ0NBQ0FRSUFRZ0JXcEJBblFpQkdvb0FnQnFJQXdnRVdvb0FnQWdDeUFSYWlnQ0FHb2dCQ0FSYWlnQ0FDQUdJQkZxS0FJQWFtc2lCQ0FFYkNBTktBSWtJZ1p0YWlJRlJ3Ui9JQk1nRFNnQ0lDQUViQ0FHYld0QjVBQnNJQTBvQWh4dFFlUUFiQUovSUIwZ0JXdXlrU0kvaTBNQUFBQlBYUVJBSUQrb0RBRUxRWUNBZ0lCNEMyMEZRUUFMTmdJVUlBQWdEaWdDRkNJRVNBUkFJQndnQWlBNEtBSUFha0VEYXpZQ0RDQWNJRElnTVNnQ0FHbzJBZ2dnR0NBRXNrTUFRQnhHbFRnQ0FFRUFJUjhnQkNFQUN5QUNRUUZxSVFJTUFRc0xJQlpCQVdvaEZnd0FDd0FMSUJFUU1TQVFFREVNQkFzZ0YwRUJhaUVYREFBTEFBc01Bd3NNQWdzZ0RrRkFheVFBSUI4TUF3c2dBa0Y4Y1VFQ2NpSUNJQXRxSVNVZ0FpQUxheUVRSUFBb0FnUkJCRzFCQW5SQkFuSWlBQ0FMYWlFd0lBQWdDMnNoQ1FOQUFrQWdDU0F3U2cwQUFrQWdDU0FkYWtFQVNBMEFJQWtnTEdvZ0drNE5BU0FKSUJWc0lURWdFQ0VDQTBBZ0FpQWxTZzBCQWtBZ0FpQU5LQUlJUVFGMGEwRUFTQTBBSUEwb0FneEJBWFFnQW1vZ0ZVNE5BaUFSSUFJZ01XcHFJZ0F0QUFBTkFDQUFRUUU2QUFBZ0tpQVZJQ0VnRFNBQ0lBa2dEa0VVYWhETkJTQU9LQUlVSVJjZ0RrRXdhaUVUSUE1QkpHb2hGaUFPUVJocUlReEJBQ0VBQWtBZ0RpZ0NQQ0lGQkVBZ0JVRUFJQVZCQUVvYklRWURRQUpBSUFBZ0JrY0VRQ0FNSUFCQkFuUnFLQUlBSUJkT0RRRWdBQ0VHQ3lBRklBWkdCRUFnQlVFQ1N3MEVJQk1nQlVFQ2RDSUFhaUFDTmdJQUlBQWdGbW9nQ1RZQ0FDQUFJQXhxSUJjMkFnQWdEaUFPS0FJOFFRRnFOZ0k4REFRTFFRSWhBQ0FGUVFOSEJFQWdEaUFGUVFGcU5nSThJQVVoQUFzRFFDQUFJQVpLQkVBZ0V5QUFRUUowSWdWcUlCTWdBRUVCYXlJQVFRSjBJaWRxS0FJQU5nSUFJQVVnRm1vZ0ZpQW5haWdDQURZQ0FDQUZJQXhxSUF3Z0oyb29BZ0EyQWdBTUFRc0xJQk1nQUVFQ2RDSUFhaUFDTmdJQUlBQWdGbW9nQ1RZQ0FDQUFJQXhxSUJjMkFnQU1Bd3NnQUVFQmFpRUFEQUFMQUFzZ0V5QUNOZ0lBSUJZZ0NUWUNBQ0FNSUJjMkFnQWdEa0VCTmdJOEMwRUFJUVlMSUFKQkJHb2hBZ3dBQ3dBTElBbEJCR29oQ1F3QkN3c2dCRUVCYWlFRURBRUxDd3dLQzBFQVNBUkFRWDhoS3d3QkN5QVlJQndvQWd5eU9BSUVJQmdnSENnQ0NMSTRBZ2dnR0NBaktBSUFJQ0JCOEFCc2FpSUFLZ0lZSUFBcUFnd2dBQ2dDQkNnQ0FDQW1RUlJzYWlnQ0FDQWtRUlJzYWlJQ0tnSUlsQ0FBS2dJUUlBSXFBZ3lVa3BJNEFnd2dHQ0FBS2dJb0lBQXFBaHdnQWlvQ0NKUWdBQ29DSUNBQ0tnSU1sSktTT0FJUUlCZ2dBQ29DT0NBQUtnSXNJQUlxQWdpVUlBQXFBakFnQWlvQ0RKU1NramdDRkFzZ0hFRXdhaVFBSUQ0Z0t6WUNBQUpBSUNzTkFDQVlLZ0lBSUFjcUFpaGVSUTBBSUFjZ0NFRURkR29pQWtIVURtb0NmU0FIS0FJQVFRRkdCRUFnQnlnQ0RDSUFRZWdBYWlBWlFZRG9BR29xQWdDN0lCbEJoT2dBYWlvQ0FMc2dJa0VJYWlBaUlBQW9BckFCRUxvR0lBY2dDRUVEZEdwQjBBNXFJQ0lyQXdpMk9BSUFJQ0lyQXdDMkRBRUxJQWNnQ0VFRGRHcEIwQTVxSUJsQmdPZ0FhaW9DQURnQ0FDQVpRWVRvQUdvcUFnQUxPQUlBSUFjZ0NFRU1iR29pQUVHUUVXb2dHVUdJNkFCcUtnSUFPQUlBSUFCQmxCRnFJQmxCak9nQWFpb0NBRGdDQUNBQVFaZ1JhaUFaUVpEb0FHb3FBZ0E0QWdBZ0FrSFFDMm9nSWtFUWFpQUtRUUowYWlnQ0FDSUFLZ0lRT0FJQUlBSkIxQXRxSUFBcUFoUTRBZ0FnQnlBSVFSaHNhaUlDUWFEZ0FHb2dBQ2dDQURZQ0FDQUNRYVRnQUdvZ0FDZ0NCRFlDQUNBQUtBSUlJUUFnQWtHczRBQnFRUUEyQWdBZ0FrR280QUJxSUFBMkFnQWdDRUVCYWlFSUN5QUtRUUZxSVFvTUFBc0FDeUFpUVJCcUlCdEJBblJxSUJJZ0NrRVliR29pQWpZQ0FDQUhJQUJCQTNScUlnUkIwQXRxSUFJcUFoQTRBZ0FnQkVIVUMyb2dBaW9DRkRnQ0FDQUhJQnRCTkd4cUlnUkI4T2NBYWlBek5nSUFJQVJCN09jQWFpQUNOZ0lBSUFSQjZPY0FhaUFQTmdJQUlBUkI1T2NBYWlBSE5nSUFJQWdnQUVFQmFpSUFJQUJCQlVZYklRQWdHMEVCYWlFYklDOUJBV29oTHd3QUN3QUxDMEVBSVFBZ0NFRUFJQWhCQUVvYklRWURRQ0FBSUFaSEJFQWdEeUFBUVJoc0lnUnFJZ0lnQkNBSGFpSUVRYkRnQUdvcEFnQTNBcXdCSUFJZ0JFR280QUJxS1FJQU53S2tBU0FDSUFSQm9PQUFhaWtDQURjQ25BRWdBRUVCYWlFQURBRUxDeUFQSUFoQkdHeHFRWDgyQXFnQkFrQUNRQ0FIS0FJQVFRRkdCRUJCZlNFS0lBaEJBMGdOQWlBRElBY29BaEFnTGlBSFFkQU9haUlBSUFkQmtCRnFJZ0lnQ0NBVVFRQVExUUlpUHpnQ25BRWdQeUFIS2dJc1hrVU5BU0FIS0FJUVJBQUFBS0NabWVrL0VOb0NJQU1nQnlnQ0VDQVVJQUFnQWlBSUlCUkJBUkRWQWlJL09BS2NBU0EvSUFjcUFpeGVSUTBCSUFjb0FoQkVBQUFBUURNejR6OFEyZ0lnQXlBSEtBSVFJQlFnQUNBQ0lBZ2dGRUVCRU5VQ0lqODRBcHdCSUQ4Z0J5b0NMRjVGRFFFZ0J5Z0NFRVFBQUFDZ21ablpQeERhQWlBRElBY29BaEFnRkNBQUlBSWdDQ0FVUVFFUTFRSWlQemdDbkFFZ1B5QUhLZ0lzWGtVTkFTQUhLQUlRUkFBQUFBQUFBQUFBRU5vQ0lBTWdCeWdDRUNBVUlBQWdBaUFJSUJSQkFSRFZBaUkvT0FLY0FVRjhJUW9nUHlBSEtnSXNYa1VOQVF3Q0MwRjlJUW9nQ0VFRFNBMEJJQU1nTGlBSFFkQU9haUlBSUFkQmtCRnFJZ0lnQ0NBVVFRQkRBQUNBUHhEVUFpSS9PQUtjQVNBL0lBY3FBaXhlUlEwQUlBTWdGQ0FBSUFJZ0NDQVVRUUZEemN4TVB4RFVBaUkvT0FLY0FTQS9JQWNxQWl4ZVJRMEFJQU1nRkNBQUlBSWdDQ0FVUVFGRG1wa1pQeERVQWlJL09BS2NBU0EvSUFjcUFpeGVSUTBBSUFNZ0ZDQUFJQUlnQ0NBVVFRRkR6Y3pNUGhEVUFpSS9PQUtjQVNBL0lBY3FBaXhlUlEwQUlBTWdGQ0FBSUFJZ0NDQVVRUUZEQUFBQUFCRFVBaUkvT0FLY0FVRjhJUW9nUHlBSEtnSXNYZzBCQ3lBUElBOG9BcGdCUVFGcU5nS1lBVUVBSVFwQkFDRWJBMEJCQUNFQUlCdEJBMFlFUUFOQVFRQWhBQ0FLUVFOR0JFQURRRUVBSVFvZ0FFRURSZzBHQTBBZ0NrRUVSd1JBSUFwQkFuUWlBaUFQSUFCQkJIUWlCR3BxSUFRZ0ZHb2dBbW9xQWdBNEFnZ2dDa0VCYWlFS0RBRUxDeUFBUVFGcUlRQU1BQXNBQlFOQUlBQkJCRWNFUUNBUElBcEJCSFJxSUFCQkFuUnFJZ0lnQWlvQ0NEZ0NPQ0FBUVFGcUlRQU1BUXNMSUFwQkFXb2hDZ3dCQ3dBTEFBVURRQ0FBUVFSSEJFQWdEeUFiUVFSMGFpQUFRUUowYWlJQ0lBSXFBamc0QW1nZ0FFRUJhaUVBREFFTEN5QWJRUUZxSVJzTUFRc0FDd0FMSUE5QkFEWUNtQUVMSUNKQk1Hb2tBQU5BQWtCQkFDRUFJQzFCQTBZRVFDQWVLQUxvQVNFQ0lBcEJIM1loQkNNQVFVQnFJZ0FrQUNBQ0JIOGdBQUo4SUFNckE0QUNJa1VnQXlzRHFBSWlScUFnQXlzRDBBSWlSNkJFQUFBQUFBQUE4RCtnSWtoRUxVTWM2K0kyR2o5a0JFQWdBQ0FES3dPd0FpQURLd1BJQXFFZ1NKOGlSU0JGb0NKRm96a0RJQ0FBSUFNckE4QUNJQU1yQTVBQ29TQkZvemtES0NBQUlBTXJBNGdDSUFNckE2QUNvU0JGb3prRE1DQkZSQUFBQUFBQUFOQS9vZ3dCQ3lCRklFWmtSU0JGSUVka1JYSkZCRUFnQUNCRlJBQUFBQUFBQVBBL29DQkdvU0JIb1o4aVJTQkZvQ0pGUkFBQUFBQUFBTkEvb2prRElDQUFJQU1yQTRnQ0lBTXJBNkFDb0NCRm96a0RLQ0FBSUFNckE4QUNJQU1yQTVBQ29DQkZvemtETUNBREt3T3dBaUFES3dQSUFxRWdSYU1NQVFzZ1JpQkhaQVJBSUFNckE2QUNJVWdnQXlzRGlBSWhTU0FBSUVaRUFBQUFBQUFBOEQrZ0lFV2hJRWVobnlKRklFV2dJa1ZFQUFBQUFBQUEwRCtpT1FNb0lBQWdTU0JJb0NCRm96a0RJQ0FBSUFNckE3QUNJQU1yQThnQ29DQkZvemtETUNBREt3UEFBaUFES3dPUUFxRWdSYU1NQVFzZ0FDQURLd1BBQWlBREt3T1FBcUFnUjBRQUFBQUFBQUR3UDZBZ1JhRWdScUdmSWtVZ1JhQWlSYU01QXlBZ0F5c0R5QUloUmlBREt3T3dBaUZISUFBZ1JVUUFBQUFBQUFEUVA2STVBekFnQUNCSElFYWdJRVdqT1FNb0lBTXJBNGdDSUFNckE2QUNvU0JGb3dzNUF6Z2dBQ0FES3dPWUFqa0RBQ0FBSUFNckE3Z0NPUU1JSUFBZ0F5c0QyQUk1QXhBZ0FFRWdhaERuQmdKQUlBUUVRQ0FDSUFBckF5QTVBd2dnQWlBQUt3TW9PUU1RSUFJZ0FDc0RNRGtER0NBQ0lBQXJBemc1QXlBZ0FpQUFLd01BT1FNb0lBSWdBQ3NEQ0RrRE1DQUNJQUFyQXhBNUF6Z01BUXRFQUFBQUFBQUE4RDhnQWlzREFDSkZvU0pKSVVnZ1JTRkdJQUFyQXpnaVRDQUNLd01nSWs2aUlBQXJBekFpU2lBQ0t3TVlJaytpSUFBckF5QWlTeUFDS3dNSUlsQ2lJQUFyQXlnaVRTQUNLd01RSWxHaW9LQ2dJa2RFQUFBQUFBQUFBQUJqQkVBZ0FDQk1taUpNT1FNNElBQWdTcG9pU2prRE1DQUFJRTJhSWswNUF5Z2dBQ0JMbWlKTE9RTWdJRWVhSVVjTElFZEVsa09MYk9mNzd6OWtSUVJBSUVVQ2ZDQkh2U0pTUWlDSXAwSC8vLy8vQjNFaUJFR0FnTUQvQTA4RVFFUUFBQUFBQUFBQUFFUVlMVVJVK3lFSlFDQlNRZ0JaR3lCU3B5QUVRWUNBd1A4RGEzSkZEUUVhUkFBQUFBQUFBQUFBSUVjZ1I2R2pEQUVMQW53Z0JFSC8vLy8rQTAwRVFFUVlMVVJVK3lINVB5QUVRWUdBZ09NRFNRMEJHa1FIWEJRekpxYVJQQ0JISUVjZ1I2SVE0d09pb1NCSG9VUVlMVVJVK3lINVA2QU1BZ3NnVWtJQVV3UkFSQmd0UkZUN0lmay9JRWRFQUFBQUFBQUE4RCtnUkFBQUFBQUFBT0Evb2lKR255SkhJRWNnUmhEakE2SkVCMXdVTXlhbWtieWdvS0VpUmlCR29Bd0NDMFFBQUFBQUFBRHdQeUJIb1VRQUFBQUFBQURnUDZJaVJwOGlSeUJHRU9NRG9pQkdJRWU5UW9DQWdJQndnNzhpUmlCR29xRWdSeUJHb0tPZ0lFYWdJa1lnUnFBTEN5SkhvaENKQXlCSEVJa0RJa2lqSVVZZ1NTQkhvaENKQXlCSW95RklDeUFDSUV3Z1JxSWdUaUJJb3FBNUF5QWdBaUJLSUVhaUlFOGdTS0tnT1FNWUlBSWdUU0JHb2lCUklFaWlvRGtERUNBQ0lFc2dScUlnVUNCSW9xQTVBd2dnQWtFSWFoRG5CaUFDSUFBckF3QWdSYUlnU1NBQ0t3TW9vcUE1QXlnZ0FpQUFLd01JSUVXaUlFa2dBaXNETUtLZ09RTXdJQUlnQUNzREVDQkZvaUJKSUFJckF6aWlvRGtET0FzZ0F5QUNLd01JSWtVZ0Fpc0RFQ0pHSUVhZ0lraWlJa29nQWlzRElDSkpJQUlyQXhnaVRDQk1vQ0pIb2lKTG9Ua0RvQUlnQXlCRklFZWlJazBnU0NCSm9pSk9vRGtEd0FJZ0F5QktJRXVnT1FPSUFpQURJRVlnUjZJaVNpQkpJRVVnUmFBaVNhSWlTNkU1QThnQ0lBTWdUU0JPb1RrRGtBSWdBeUJLSUV1Z09RT3dBaUFEUkFBQUFBQUFBUEEvSUVVZ1NhSWlSU0JHSUVpaUlrYWdvVGtEMEFJZ0EwUUFBQUFBQUFEd1B5QkZJRXdnUjZJaVJhQ2hPUU9vQWlBRFJBQUFBQUFBQVBBL0lFWWdSYUNoT1FPQUFpQURJQUlyQXlnNUE1Z0NJQU1nQWlzRE1Ea0R1QUlnQXlBQ0t3TTRPUVBZQWtFQUJVRi9DeUVDSUFCQlFHc2tBQ0FDUVFCSUJFQWdBMEdRQVdwQm5wSUNFRWdoQWlNQVFSQnJJZ0FrQUNBQUlBSVFQVFlDQUNBQUlBRTJBZ3dnQUVIYzRnTW9BZ0EyQWdRZ0FFSGc0Z01vQWdBMkFnaEIrZlFEUWZMVEFTQUFFQWdhSUFCQkVHb2tBQ0FDRURZYUN5QURRWUFDYWlFQ0lBTkJvQUZxSVFSQkFDRUFBMEFDUUVFQUlRZ2dBRUVEUmcwQUEwQWdDRUVFUmdSQUlBQkJBV29oQUF3REJTQUlRUU4wSWdZZ0JDQUFRUVYwSWdWcWFpSUxJQXNyQXdBaVJTQUNJQVZxSUFacUt3TUFJRVdoUkFBQUFHQm1adTQvbzZBNUF3QWdDRUVCYWlFSURBRUxBQXNBQ3dzZ0NrRUFUZzBCSUFOQmtBRnFRWlgvQVJCSUlnQWdDaEREQVNBQUVEWWFRWDRoQUNBZVFYNDJBb0FDREFNRkEwQWdBRUVFUndSQUlBTkJnQUpxSUMxQkJYUnFJQUJCQTNScUlBTkI0QUpxSUMxQkJIUnFJQUJCQW5ScUtnSUF1emtEQUNBQVFRRnFJUUFNQVFzTElDMUJBV29oTFF3Q0N3QUxDeUFlSUI0b0FvQUNRUUowYWlnQ2lBSWhBQ0FESUI0b0FvUUNRUUZyTmdLRUFTQURJQUEyQW9BQlFRQkJBVUgxbEFJZ0EwR0FBV29RT1NBZUtBS0FBaUVBQ3dKQUlBQWdBVVlFUUNBRElBTXJBNkFCT1FNUUlBTWdBeXNEcUFFNUF4Z2dBeUFES3dPd0FUa0RJQ0FESUFNckE3Z0JPUU1vSUFNZ0F5c0R3QUU1QXpBZ0F5QURLd1BnQVRrRFVDQURJQU1yQThnQk9RTTRJQU5CUUdzZ0F5c0QwQUU1QXdBZ0F5QURLd1BZQVRrRFNDQURJQU1yQStnQk9RTllJQU1nQXlzRDhBRTVBMkFnQXlBREt3UDRBVGtEYUNBRElBRTJBZ0FnQXlBREtnS2NBYnM1QXdoQi92MERRZENWQWlBREVBZ2FEQUVMSUFNZ0FUWUNjRUhBZ3dSQjM1VUNJQU5COEFCcUVBZ2FDMEVBQ3lFQUlBTkJvQU5xSkFBZ0FBOExRUUJCQTBIbkRVRUFFRGxCQVJBQ0FBczBBUUYvUWFpTEJDZ0NBQ0VBUWFDTEJCQXlHZ05BSUFBRVFDQUFLQUlBSVFFZ0FCQXhJQUVoQUF3QkN3dEJvSXNFRUxBQ0N6OEJBbjlCbElzRUtBSUFJUUJCaklzRUVESWhBUU5BSUFBRVFDQUFLQUlBSVFJZ0FTQUFRUWhxRUw0RklBQVFNU0FDSVFBTUFRc0xRWXlMQkJDd0Fnc1JBQ0FBS0FJQVFZUUJha0VCRVBzRUFBc1VBQ0FBUVF4cVFRQWdBU2dDQkVHTTB3RkdHd3NNQUNBQVFReHFLQUlBRURFTEZBQWdBRUVNYWtFQUlBRW9BZ1JCNU5FQlJoc0xDd0FnQUVFTWFpZ0NBQm9MS2dFQmZFRi9JQUFyQXdBZ0FTc0RBS0VpQWtRQUFBQUFBQUFBQUdRZ0FrUUFBQUFBQUFBQUFHTWJDeFFBSUFCQkRHcEJBQ0FCS0FJRVFhakxBVVliQ3hFQUlBQkJER29pQUNBQUtBSUFFSk1HQzJvQkFYOUIvSW9FRU9nQ1FmeUtCQ2dDQUFSQVFmeUtCQ2dDQUNFQlFZQ0xCQ2dDQUNFQUEwQWdBQ0FCUndSQVFmeUtCQkF5R2lBQVFRaHJJZ0FRemdFTUFRc0xRWUNMQkNBQk5nSUFRZnlLQkJBeUdrSDhpZ1FvQWdBaEFFSDhpZ1FReFFFYUlBQVFNUXNMQ1FBZ0FFRUVhaEE5Q3drQUlBQVF1UVlRTVFzSkFDQUFFSkFFRURFTERBQWdBQkNSQkJvZ0FCQXhDd2NBSUFBb0FnZ0xCd0FnQUNnQ0JBc2xBQ0FCSUFJZ0F5QUVJQVVnQnEwZ0I2MUNJSWFFSUFpdElBbXRRaUNHaENBQUVSMEFDeU1BSUFFZ0FpQURJQVFnQmEwZ0JxMUNJSWFFSUFldElBaXRRaUNHaENBQUVSNEFDeGtBSUFFZ0FpQURJQVFnQmEwZ0JxMUNJSWFFSUFBUkZnQUxHUUFnQVNBQ0lBT3RJQVN0UWlDR2hDQUZJQVlnQUJFdEFBc2lBUUYrSUFFZ0FxMGdBNjFDSUlhRUlBUWdBQkVUQUNJRlFpQ0lweVFCSUFXbkN3WUFJQUFrQUFzRUFDTUFDd1lBUWJQc0FRc0dBRUhjL3dFTEJnQkIrT2dCQ3hzQUlBQkZCRUJCQUE4TElBQkI4TmtEUVlEYkF4Q3FBVUVBUndzYkFDQUFJQUVvQWdnZ0JSQjZCRUFnQVNBQ0lBTWdCQkN4QkFzTE9BQWdBQ0FCS0FJSUlBVVFlZ1JBSUFFZ0FpQURJQVFRc1FRUEN5QUFLQUlJSWdBZ0FTQUNJQU1nQkNBRklBQW9BZ0FvQWhRUkN3QUxvQUlCQjM4Z0FDQUJLQUlJSUFVUWVnUkFJQUVnQWlBRElBUVFzUVFQQ3lBQkxRQTFJUVlnQUNnQ0RDRUlJQUZCQURvQU5TQUJMUUEwSVFjZ0FVRUFPZ0EwSUFCQkVHb2lEQ0FCSUFJZ0F5QUVJQVVRcndRZ0JpQUJMUUExSWdweUlRWWdCeUFCTFFBMElndHlJUWNDUUNBQVFSaHFJZ2tnRENBSVFRTjBhaUlJVHcwQUEwQWdCMEVCY1NFSElBWkJBWEVoQmlBQkxRQTJEUUVDUUNBTEJFQWdBU2dDR0VFQlJnMERJQUF0QUFoQkFuRU5BUXdEQ3lBS1JRMEFJQUF0QUFoQkFYRkZEUUlMSUFGQkFEc0JOQ0FKSUFFZ0FpQURJQVFnQlJDdkJDQUJMUUExSWdvZ0JuSWhCaUFCTFFBMElnc2dCM0loQnlBSlFRaHFJZ2tnQ0VrTkFBc0xJQUVnQmtIL0FYRkJBRWM2QURVZ0FTQUhRZjhCY1VFQVJ6b0FOQXVTQVFBZ0FDQUJLQUlJSUFRUWVnUkFJQUVnQWlBREVMQUVEd3NDUUNBQUlBRW9BZ0FnQkJCNlJRMEFBa0FnQWlBQktBSVFSd1JBSUFFb0FoUWdBa2NOQVFzZ0EwRUJSdzBCSUFGQkFUWUNJQThMSUFFZ0FqWUNGQ0FCSUFNMkFpQWdBU0FCS0FJb1FRRnFOZ0lvQWtBZ0FTZ0NKRUVCUncwQUlBRW9BaGhCQWtjTkFDQUJRUUU2QURZTElBRkJCRFlDTEFzTDh3RUFJQUFnQVNnQ0NDQUVFSG9FUUNBQklBSWdBeEN3QkE4TEFrQWdBQ0FCS0FJQUlBUVFlZ1JBQWtBZ0FpQUJLQUlRUndSQUlBRW9BaFFnQWtjTkFRc2dBMEVCUncwQ0lBRkJBVFlDSUE4TElBRWdBellDSUFKQUlBRW9BaXhCQkVZTkFDQUJRUUE3QVRRZ0FDZ0NDQ0lBSUFFZ0FpQUNRUUVnQkNBQUtBSUFLQUlVRVFzQUlBRXRBRFVFUUNBQlFRTTJBaXdnQVMwQU5FVU5BUXdEQ3lBQlFRUTJBaXdMSUFFZ0FqWUNGQ0FCSUFFb0FpaEJBV28yQWlnZ0FTZ0NKRUVCUncwQklBRW9BaGhCQWtjTkFTQUJRUUU2QURZUEN5QUFLQUlJSWdBZ0FTQUNJQU1nQkNBQUtBSUFLQUlZRVFZQUN3dVpCQUVEZnlBQUlBRW9BZ2dnQkJCNkJFQWdBU0FDSUFNUXNBUVBDd0pBSUFBZ0FTZ0NBQ0FFRUhvRVFBSkFJQUlnQVNnQ0VFY0VRQ0FCS0FJVUlBSkhEUUVMSUFOQkFVY05BaUFCUVFFMkFpQVBDeUFCSUFNMkFpQWdBU2dDTEVFRVJ3UkFJQUJCRUdvaUJTQUFLQUlNUVFOMGFpRUhRUUFoQXlBQkFuOENRQU5BQWtBZ0JTQUhUdzBBSUFGQkFEc0JOQ0FGSUFFZ0FpQUNRUUVnQkJDdkJDQUJMUUEyRFFBQ1FDQUJMUUExUlEwQUlBRXRBRFFFUUVFQklRTWdBU2dDR0VFQlJnMEVRUUVoQmlBQUxRQUlRUUp4RFFFTUJBdEJBU0VHSUFBdEFBaEJBWEZGRFFNTElBVkJDR29oQlF3QkN3dEJCQ0FHUlEwQkdndEJBd3MyQWl3Z0EwRUJjUTBDQ3lBQklBSTJBaFFnQVNBQktBSW9RUUZxTmdJb0lBRW9BaVJCQVVjTkFTQUJLQUlZUVFKSERRRWdBVUVCT2dBMkR3c2dBQ2dDRENFR0lBQkJFR29pQnlBQklBSWdBeUFFRUxzRElBQkJHR29pQlNBSElBWkJBM1JxSWdaUERRQUNRQ0FBS0FJSUlnQkJBbkZGQkVBZ0FTZ0NKRUVCUncwQkN3TkFJQUV0QURZTkFpQUZJQUVnQWlBRElBUVF1d01nQlVFSWFpSUZJQVpKRFFBTERBRUxJQUJCQVhGRkJFQURRQ0FCTFFBMkRRSWdBU2dDSkVFQlJnMENJQVVnQVNBQ0lBTWdCQkM3QXlBRlFRaHFJZ1VnQmtrTkFBd0NDd0FMQTBBZ0FTMEFOZzBCSUFFb0FpUkJBVVlFUUNBQktBSVlRUUZHRFFJTElBVWdBU0FDSUFNZ0JCQzdBeUFGUVFocUlnVWdCa2tOQUFzTEM3a0ZBUVIvSXdCQlFHb2lCaVFBQWtBZ0FVSGMzQU5CQUJCNkJFQWdBa0VBTmdJQVFRRWhCQXdCQ3dKQUlBQWdBU0FBTFFBSVFSaHhCSDlCQVFVZ0FVVU5BU0FCUWZEWkEwSFEyZ01RcWdFaUEwVU5BU0FETFFBSVFSaHhRUUJIQ3hCNklRVUxJQVVFUUVFQklRUWdBaWdDQUNJQVJRMEJJQUlnQUNnQ0FEWUNBQXdCQ3dKQUlBRkZEUUFnQVVIdzJRTkJnTnNERUtvQklnVkZEUUVnQWlnQ0FDSUJCRUFnQWlBQktBSUFOZ0lBQ3lBRktBSUlJZ01nQUNnQ0NDSUJRWDl6Y1VFSGNTQURRWDl6SUFGeFFlQUFjWElOQVVFQklRUWdBQ2dDRENBRktBSU1RUUFRZWcwQklBQW9BZ3hCME53RFFRQVFlZ1JBSUFVb0Fnd2lBRVVOQWlBQVFmRFpBMEcwMndNUXFnRkZJUVFNQWdzZ0FDZ0NEQ0lEUlEwQVFRQWhCQ0FEUWZEWkEwR0Eyd01RcWdFaUFRUkFJQUF0QUFoQkFYRkZEUUlDZnlBRktBSU1JUUJCQUNFQ0FrQURRRUVBSUFCRkRRSWFJQUJCOE5rRFFZRGJBeENxQVNJRFJRMEJJQU1vQWdnZ0FTZ0NDRUYvYzNFTkFVRUJJQUVvQWd3Z0F5Z0NERUVBRUhvTkFob2dBUzBBQ0VFQmNVVU5BU0FCS0FJTUlnQkZEUUVnQUVIdzJRTkJnTnNERUtvQklnRUVRQ0FES0FJTUlRQU1BUXNMSUFCQjhOa0RRZkRiQXhDcUFTSUFSUTBBSUFBZ0F5Z0NEQkQ2QmlFQ0N5QUNDeUVFREFJTElBTkI4TmtEUWZEYkF4Q3FBU0lCQkVBZ0FDMEFDRUVCY1VVTkFpQUJJQVVvQWd3UStnWWhCQXdDQ3lBRFFmRFpBMEdnMmdNUXFnRWlBVVVOQVNBRktBSU1JZ0JGRFFFZ0FFSHcyUU5Cb05vREVLb0JJZ05GRFFFZ0JrRUlhaUlBUVFSeVFRQkJOQkE0R2lBR1FRRTJBamdnQmtGL05nSVVJQVlnQVRZQ0VDQUdJQU0yQWdnZ0F5QUFJQUlvQWdCQkFTQURLQUlBS0FJY0VRY0FBa0FnQmlnQ0lDSUFRUUZIRFFBZ0FpZ0NBRVVOQUNBQ0lBWW9BaGcyQWdBTElBQkJBVVloQkF3QkMwRUFJUVFMSUFaQlFHc2tBQ0FFQzJzQkFuOGdBQ0FCS0FJSVFRQVFlZ1JBSUFFZ0FpQURFTFFFRHdzZ0FDZ0NEQ0VFSUFCQkVHb2lCU0FCSUFJZ0F4RDhCZ0pBSUFCQkdHb2lBQ0FGSUFSQkEzUnFJZ1JQRFFBRFFDQUFJQUVnQWlBREVQd0dJQUV0QURZTkFTQUFRUWhxSWdBZ0JFa05BQXNMQ3pJQUlBQWdBU2dDQ0VFQUVIb0VRQ0FCSUFJZ0F4QzBCQThMSUFBb0FnZ2lBQ0FCSUFJZ0F5QUFLQUlBS0FJY0VRY0FDeGtBSUFBZ0FTZ0NDRUVBRUhvRVFDQUJJQUlnQXhDMEJBc0xwQUVCQW44akFFRkFhaUlESkFBQ2YwRUJJQUFnQVVFQUVIb05BQnBCQUNBQlJRMEFHa0VBSUFGQjhOa0RRYURhQXhDcUFTSUJSUTBBR2lBRFFRaHFJZ1JCQkhKQkFFRTBFRGdhSUFOQkFUWUNPQ0FEUVg4MkFoUWdBeUFBTmdJUUlBTWdBVFlDQ0NBQklBUWdBaWdDQUVFQklBRW9BZ0FvQWh3UkJ3QWdBeWdDSUNJQVFRRkdCRUFnQWlBREtBSVlOZ0lBQ3lBQVFRRkdDeUVBSUFOQlFHc2tBQ0FBQ3dvQUlBQWdBVUVBRUhvTENRQkIzSzRFRURZYUN5VUFRZWl1QkMwQUFFVUVRRUhjcmdSQjZLOERFTDRDUWVpdUJFRUJPZ0FBQzBIY3JnUUxDUUJCeks0RUVEWWFDeVVBUWRpdUJDMEFBRVVFUUVITXJnUkIyK2dCRUVnYVFkaXVCRUVCT2dBQUMwSE1yZ1FMQ1FCQnZLNEVFRFlhQ3lVQVFjaXVCQzBBQUVVRVFFRzhyZ1JCbEs4REVMNENRY2l1QkVFQk9nQUFDMEc4cmdRTENRQkJySzRFRURZYUN5VUFRYml1QkMwQUFFVUVRRUdzcmdSQis0QUNFRWdhUWJpdUJFRUJPZ0FBQzBHc3JnUUxDUUJCbks0RUVEWWFDeVVBUWFpdUJDMEFBRVVFUUVHY3JnUkI4SzRERUw0Q1FhaXVCRUVCT2dBQUMwR2NyZ1FMQ1FCQmpLNEVFRFlhQ3lVQVFaaXVCQzBBQUVVRVFFR01yZ1JCOUlJQ0VFZ2FRWml1QkVFQk9nQUFDMEdNcmdRTENRQkIvSzBFRURZYUN5VUFRWWl1QkMwQUFFVUVRRUg4clFSQnpLNERFTDRDUVlpdUJFRUJPZ0FBQzBIOHJRUUxDUUJCN0swRUVEWWFDeVVBUWZpdEJDMEFBRVVFUUVIc3JRUkI5TlFCRUVnYVFmaXRCRUVCT2dBQUMwSHNyUVFMR3dCQjZMWUVJUUFEUUNBQVFReHJFRFlpQUVIUXRnUkhEUUFMQzIwQVFlaXRCQzBBQUFSQVFlU3RCQ2dDQUE4TFFlaTJCQzBBQUVVRVFFSFF0Z1FoQUFOQUlBQVFRMEVNYWlJQVFlaTJCRWNOQUF0QjZMWUVRUUU2QUFBTFFkQzJCRUhnMXdNUVVVSGN0Z1JCN05jREVGRkI2SzBFUVFFNkFBQkI1SzBFUWRDMkJEWUNBRUhRdGdRTEd3QkJ5TFlFSVFBRFFDQUFRUXhyRURZaUFFR3d0Z1JIRFFBTEMyMEFRZUN0QkMwQUFBUkFRZHl0QkNnQ0FBOExRY2kyQkMwQUFFVUVRRUd3dGdRaEFBTkFJQUFRUTBFTWFpSUFRY2kyQkVjTkFBdEJ5TFlFUVFFNkFBQUxRYkMyQkVIVGhBSVFVa0c4dGdSQnlJUUNFRkpCNEswRVFRRTZBQUJCM0swRVFiQzJCRFlDQUVHd3RnUUxHd0JCb0xZRUlRQURRQ0FBUVF4ckVEWWlBRUdBdEFSSERRQUxDOGtDQUVIWXJRUXRBQUFFUUVIVXJRUW9BZ0FQQzBHZ3RnUXRBQUJGQkVCQmdMUUVJUUFEUUNBQUVFTkJER29pQUVHZ3RnUkhEUUFMUWFDMkJFRUJPZ0FBQzBHQXRBUkIyTk1ERUZGQmpMUUVRZmpUQXhCUlFaaTBCRUdjMUFNUVVVR2t0QVJCdE5RREVGRkJzTFFFUWN6VUF4QlJRYnkwQkVIYzFBTVFVVUhJdEFSQjhOUURFRkZCMUxRRVFZVFZBeEJSUWVDMEJFR2cxUU1RVVVIc3RBUkJ5TlVERUZGQitMUUVRZWpWQXhCUlFZUzFCRUdNMWdNUVVVR1F0UVJCc05ZREVGRkJuTFVFUWNEV0F4QlJRYWkxQkVIUTFnTVFVVUcwdFFSQjROWURFRkZCd0xVRVFjelVBeEJSUWN5MUJFSHcxZ01RVVVIWXRRUkJnTmNERUZGQjVMVUVRWkRYQXhCUlFmQzFCRUdnMXdNUVVVSDh0UVJCc05jREVGRkJpTFlFUWNEWEF4QlJRWlMyQkVIUTF3TVFVVUhZclFSQkFUb0FBRUhVclFSQmdMUUVOZ0lBUVlDMEJBc2JBRUh3c3dRaEFBTkFJQUJCREdzUU5pSUFRZEN4QkVjTkFBc0x5UUlBUWRDdEJDMEFBQVJBUWN5dEJDZ0NBQThMUWZDekJDMEFBRVVFUUVIUXNRUWhBQU5BSUFBUVEwRU1haUlBUWZDekJFY05BQXRCOExNRVFRRTZBQUFMUWRDeEJFR3ExQUVRVWtIY3NRUkJvZFFCRUZKQjZMRUVRZUxzQVJCU1FmU3hCRUdDNndFUVVrR0FzZ1JCOE5RQkVGSkJqTElFUWJQdUFSQlNRWml5QkVHeTFBRVFVa0drc2dSQjVOMEJFRkpCc0xJRVFjWG5BUkJTUWJ5eUJFRzA1d0VRVWtISXNnUkJ2T2NCRUZKQjFMSUVRYy9uQVJCU1FlQ3lCRUhLNmdFUVVrSHNzZ1JCdFlBQ0VGSkIrTElFUWZibkFSQlNRWVN6QkVHdjVnRVFVa0dRc3dSQjhOUUJFRkpCbkxNRVFmVG9BUkJTUWFpekJFSE82Z0VRVWtHMHN3UkI2T3dCRUZKQndMTUVRZGZvQVJCU1FjeXpCRUgyNEFFUVVrSFlzd1JCdDlnQkVGSkI1TE1FUWV2L0FSQlNRZEN0QkVFQk9nQUFRY3l0QkVIUXNRUTJBZ0JCMExFRUN4c0FRY2l4QkNFQUEwQWdBRUVNYXhBMklnQkJvTEFFUncwQUN3dmxBUUJCeUswRUxRQUFCRUJCeEswRUtBSUFEd3RCeUxFRUxRQUFSUVJBUWFDd0JDRUFBMEFnQUJCRFFReHFJZ0JCeUxFRVJ3MEFDMEhJc1FSQkFUb0FBQXRCb0xBRVFZVFJBeEJSUWF5d0JFR2cwUU1RVVVHNHNBUkJ2TkVERUZGQnhMQUVRZHpSQXhCUlFkQ3dCRUdFMGdNUVVVSGNzQVJCcU5JREVGRkI2TEFFUWNUU0F4QlJRZlN3QkVIbzBnTVFVVUdBc1FSQitOSURFRkZCakxFRVFZalRBeEJSUVppeEJFR1kwd01RVVVHa3NRUkJxTk1ERUZGQnNMRUVRYmpUQXhCUlFieXhCRUhJMHdNUVVVSElyUVJCQVRvQUFFSEVyUVJCb0xBRU5nSUFRYUN3QkFzYkFFR1lzQVFoQUFOQUlBQkJER3NRTmlJQVFmQ3VCRWNOQUFzTDVRRUFRY0N0QkMwQUFBUkFRYnl0QkNnQ0FBOExRWml3QkMwQUFFVUVRRUh3cmdRaEFBTkFJQUFRUTBFTWFpSUFRWml3QkVjTkFBdEJtTEFFUVFFNkFBQUxRZkN1QkVIYjFBRVFVa0g4cmdSQjR0UUJFRkpCaUs4RVFjRFVBUkJTUVpTdkJFSEkxQUVRVWtHZ3J3UkJ0OVFCRUZKQnJLOEVRZW5VQVJCU1FiaXZCRUhTMUFFUVVrSEVyd1JCOE9nQkVGSkIwSzhFUWZIcEFSQlNRZHl2QkVHTjdnRVFVa0hvcndSQnhmWUJFRkpCOUs4RVFidllBUkJTUVlDd0JFRzY2d0VRVWtHTXNBUkJnT0VCRUZKQndLMEVRUUU2QUFCQnZLMEVRZkN1QkRZQ0FFSHdyZ1FMQ3dBZ0FFRzByZ01RdmdJTEN3QWdBRUdSN2dFUVNCb0xDd0FnQUVHZ3JnTVF2Z0lMQ3dBZ0FFR0k3Z0VRU0JvTERBQWdBQ0FCUVJCcUVOOENDd3dBSUFBZ0FVRU1haERmQWdzSEFDQUFMQUFKQ3djQUlBQXNBQWdMREFBZ0FCQ1BCeG9nQUJBeEN3d0FJQUFRa0FjYUlBQVFNUXNWQUNBQUtBSUlJZ0JGQkVCQkFROExJQUFRbHdjTGtnRUJCbjhEUUFKQUlBSWdBMFlnQkNBSVRYSU5BRUVCSVFjZ0FDZ0NDQ0VGSXdCQkVHc2lCaVFBSUFZZ0JUWUNEQ0FHUVFocUlBWkJER29ReUFFaENrRUFJQUlnQXlBQ2F5QUJRYVNyQkNBQkd4Q0dBeUVGSUFvUXh3RWdCa0VRYWlRQUFrQUNRQ0FGUVFKcURnTUNBZ0VBQ3lBRklRY0xJQWhCQVdvaENDQUhJQWxxSVFrZ0FpQUhhaUVDREFFTEN5QUpDMXdCQTM4Z0FDZ0NDQ0VDSXdCQkVHc2lBU1FBSUFFZ0FqWUNEQ0FCUVFocUlBRkJER29ReUFFaEFpTUFRUkJySWdNa0FDQURRUkJxSkFBZ0FoREhBU0FCUVJCcUpBQWdBQ2dDQ0NJQVJRUkFRUUVQQ3lBQUVKY0hRUUZHQzVJQkFRRi9Jd0JCRUdzaUJTUUFJQVFnQWpZQ0FBSi9RUUlnQlVFTWFrRUFJQUFvQWdnUXV3UWlBRUVCYWtFQ1NRMEFHa0VCSUFCQkFXc2lBaUFESUFRb0FnQnJTdzBBR2lBRlFReHFJUU1EZnlBQ0JIOGdBeTBBQUNFQUlBUWdCQ2dDQUNJQlFRRnFOZ0lBSUFFZ0FEb0FBQ0FDUVFGcklRSWdBMEVCYWlFRERBRUZRUUFMQ3dzaEF5QUZRUkJxSkFBZ0F3dk5CZ0VNZnlNQVFSQnJJaEVrQUNBQ0lRZ0RRQUpBSUFNZ0NFWUVRQ0FESVFnTUFRc2dDQzBBQUVVTkFDQUlRUUZxSVFnTUFRc0xJQWNnQlRZQ0FDQUVJQUkyQWdBRFFBSkFBbjhDUUNBQ0lBTkdJQVVnQmtaeURRQWdFU0FCS1FJQU53TUlJQUFvQWdnaENTTUFRUkJySWhBa0FDQVFJQWsyQWd3Z0VFRUlhaUFRUVF4cUVNZ0JJUk1nQ0NBQ2F5RU5RUUFoQ2lNQVFaQUlheUlMSkFBZ0N5QUVLQUlBSWc0MkFnd2dCU0FMUVJCcUlBVWJJUThDUUFKQUFrQWdEa1VnQmlBRmEwRUNkVUdBQWlBRkd5SU1SWElOQUFOQUlBMUJBbllpQ1NBTVNTQU5RWU1CVFhFTkFpQVBJQXRCREdvZ0NTQU1JQWtnREVrYklBRVF5Z1FpRWtGL1JnUkFRWDhoQ2tFQUlRd2dDeWdDRENFT0RBSUxJQXhCQUNBU0lBOGdDMEVRYWtZYklnbHJJUXdnRHlBSlFRSjBhaUVQSUEwZ0Rtb2dDeWdDRENJT2EwRUFJQTRiSVEwZ0NpQVNhaUVLSUE1RkRRRWdEQTBBQ3dzZ0RrVU5BUXNnREVVZ0RVVnlEUUFnQ2lFSkEwQUNRQUpBSUE4Z0RpQU5JQUVRaGdNaUNrRUNha0VDVFFSQUFrQUNRQ0FLUVFGcURnSUdBQUVMSUF0QkFEWUNEQXdDQ3lBQlFRQTJBZ0FNQVFzZ0N5QUxLQUlNSUFwcUlnNDJBZ3dnQ1VFQmFpRUpJQXhCQVdzaURBMEJDeUFKSVFvTUFnc2dEMEVFYWlFUElBMGdDbXNoRFNBSklRb2dEUTBBQ3dzZ0JRUkFJQVFnQ3lnQ0REWUNBQXNnQzBHUUNHb2tBQ0FLSVFrZ0V4REhBU0FRUVJCcUpBQUNRQUpBQWtBQ1FDQUpRWDlHQkVBRFFBSkFJQWNnQlRZQ0FDQUNJQVFvQWdCR0RRQkJBU0VHQWtBQ1FBSkFJQVVnQWlBSUlBSnJJQkZCQ0dvZ0FDZ0NDQkNZQnlJQlFRSnFEZ01JQUFJQkN5QUVJQUkyQWdBTUJRc2dBU0VHQ3lBQ0lBWnFJUUlnQnlnQ0FFRUVhaUVGREFFTEN5QUVJQUkyQWdBTUJRc2dCeUFIS0FJQUlBbEJBblJxSWdVMkFnQWdCU0FHUmcwRElBUW9BZ0FoQWlBRElBaEdCRUFnQXlFSURBZ0xJQVVnQWtFQklBRWdBQ2dDQ0JDWUIwVU5BUXRCQWd3RUN5QUhJQWNvQWdCQkJHbzJBZ0FnQkNBRUtBSUFRUUZxSWdJMkFnQWdBaUVJQTBBZ0F5QUlSZ1JBSUFNaENBd0dDeUFJTFFBQVJRMEZJQWhCQVdvaENBd0FDd0FMSUFRZ0FqWUNBRUVCREFJTElBUW9BZ0FoQWdzZ0FpQURSd3NoQUNBUlFSQnFKQUFnQUE4TElBY29BZ0FoQlF3QUN3QUx0UVVCREg4akFFRVFheUlOSkFBZ0FpRUlBMEFDUUNBRElBaEdCRUFnQXlFSURBRUxJQWdvQWdCRkRRQWdDRUVFYWlFSURBRUxDeUFISUFVMkFnQWdCQ0FDTmdJQUEwQUNRQUpBSUFJZ0EwWWdCU0FHUm5JRWZ5QUNCU0FOSUFFcEFnQTNBd2hCQVNFUUlBQW9BZ2doQ1NNQVFSQnJJZzRrQUNBT0lBazJBZ3dnRGtFSWFpQU9RUXhxRU1nQklSTWdCaUFGSWdscklRcEJBQ0VQSXdCQkVHc2lFU1FBQWtBZ0JDZ0NBQ0lMUlNBSUlBSnJRUUoxSWhKRmNnMEFJQXBCQUNBSkd5RUtBMEFnRVVFTWFpQUpJQXBCQkVrYklBc29BZ0FRM0FNaURFRi9SZ1JBUVg4aER3d0NDeUFKQkg4Z0NrRURUUVJBSUFvZ0RFa05BeUFKSUJGQkRHb2dEQkErR2dzZ0NpQU1heUVLSUFrZ0RHb0ZRUUFMSVFrZ0N5Z0NBRVVFUUVFQUlRc01BZ3NnRENBUGFpRVBJQXRCQkdvaEN5QVNRUUZySWhJTkFBc0xJQWtFUUNBRUlBczJBZ0FMSUJGQkVHb2tBQ0FQSVFrZ0V4REhBU0FPUVJCcUpBQUNRQUpBQWtBQ1FBSkFJQWxCQVdvT0FnQUdBUXNnQnlBRk5nSUFBMEFDUUNBQ0lBUW9BZ0JHRFFBZ0JTQUNLQUlBSUFBb0FnZ1F1d1FpQVVGL1JnMEFJQWNnQnlnQ0FDQUJhaUlGTmdJQUlBSkJCR29oQWd3QkN3c2dCQ0FDTmdJQURBRUxJQWNnQnlnQ0FDQUphaUlGTmdJQUlBVWdCa1lOQWlBRElBaEdCRUFnQkNnQ0FDRUNJQU1oQ0F3SEN5QU5RUVJxUVFBZ0FDZ0NDQkM3QkNJSVFYOUhEUUVMUVFJaEVBd0RDeUFOUVFScUlRSWdCaUFIS0FJQWF5QUlTUTBDQTBBZ0NBUkFJQUl0QUFBaEJTQUhJQWNvQWdBaUNVRUJhallDQUNBSklBVTZBQUFnQ0VFQmF5RUlJQUpCQVdvaEFnd0JDd3NnQkNBRUtBSUFRUVJxSWdJMkFnQWdBaUVJQTBBZ0F5QUlSZ1JBSUFNaENBd0ZDeUFJS0FJQVJRMEVJQWhCQkdvaENBd0FDd0FMSUFRb0FnQUxJQU5ISVJBTElBMUJFR29rQUNBUUR3c2dCeWdDQUNFRkRBQUxBQXNNQUNBQUVLSUhHaUFBRURFTE53QWpBRUVRYXlJQUpBQWdBQ0FFTmdJTUlBQWdBeUFDYXpZQ0NDQUFRUXhxSUFCQkNHb1FsZ0lvQWdBaEFTQUFRUkJxSkFBZ0FRczBBQU5BSUFFZ0FrWkZCRUFnQkNBRElBRXNBQUFpQUNBQVFRQklHem9BQUNBRVFRRnFJUVFnQVVFQmFpRUJEQUVMQ3lBQ0N3d0FJQUlnQVNBQlFRQklHd3NxQUFOQUlBRWdBa1pGQkVBZ0F5QUJMUUFBT2dBQUlBTkJBV29oQXlBQlFRRnFJUUVNQVFzTElBSUxEd0FnQUNBQklBSkIwSllERU84R0N5Y0FJQUZCQUU0RWYwSFFsZ01vQWdBZ0FVSC9BWEZCQW5ScUtBSUFCU0FCQzBFWWRFRVlkUXNQQUNBQUlBRWdBa0hJaWdNUTd3WUxKd0FnQVVFQVRnUi9RY2lLQXlnQ0FDQUJRZjhCY1VFQ2RHb29BZ0FGSUFFTFFSaDBRUmgxQ3d3QUlBQVFtZ2NhSUFBUU1RczFBQU5BSUFFZ0FrWkZCRUFnQkNBQktBSUFJZ0FnQXlBQVFZQUJTUnM2QUFBZ0JFRUJhaUVFSUFGQkJHb2hBUXdCQ3dzZ0Fnc1RBQ0FCSUFJZ0FVR0FBVWtiUVJoMFFSaDFDeW9BQTBBZ0FTQUNSa1VFUUNBRElBRXNBQUEyQWdBZ0EwRUVhaUVESUFGQkFXb2hBUXdCQ3dzZ0Fnc1BBQ0FBSUFFZ0FrSFFsZ01ROEFZTEhnQWdBVUgvQUUwRWYwSFFsZ01vQWdBZ0FVRUNkR29vQWdBRklBRUxDdzhBSUFBZ0FTQUNRY2lLQXhEd0Jnc2VBQ0FCUWY4QVRRUi9RY2lLQXlnQ0FDQUJRUUowYWlnQ0FBVWdBUXNMUVFBQ1FBTkFJQUlnQTBZTkFRSkFJQUlvQWdBaUFFSC9BRXNOQUNBQVFRSjBRYUNsQTJvb0FnQWdBWEZGRFFBZ0FrRUVhaUVDREFFTEN5QUNJUU1MSUFNTFFBQURRQUpBSUFJZ0EwY0VmeUFDS0FJQUlnQkIvd0JMRFFFZ0FFRUNkRUdncFFOcUtBSUFJQUZ4UlEwQklBSUZJQU1MRHdzZ0FrRUVhaUVDREFBTEFBdEpBUUYvQTBBZ0FTQUNSa1VFUUVFQUlRQWdBeUFCS0FJQUlnUkIvd0JOQkg4Z0JFRUNkRUdncFFOcUtBSUFCVUVBQ3pZQ0FDQURRUVJxSVFNZ0FVRUVhaUVCREFFTEN5QUNDeVVBUVFBaEFDQUNRZjhBVFFSL0lBSkJBblJCb0tVRGFpZ0NBQ0FCY1VFQVJ3VkJBQXNMRHdBZ0FDQUFLQUlBS0FJRUVRRUFDeUlCQVg4Z0FDRUJRZWlzQkVIb3JBUW9BZ0JCQVdvaUFEWUNBQ0FCSUFBMkFnUUxEQUFnQUJDZkJ4b2dBQkF4QzUwQkFDTUFRUkJySWdNa0FBSkFJQVVRa1FGRkJFQWdBQ0FGS0FJSU5nSUlJQUFnQlNrQ0FEY0NBQXdCQ3lBRktBSUFJUVFDUUFKQUFrQWdCU2dDQkNJQ0VMMERCRUFnQUNJQklBSVFrZ0VNQVFzZ0FrSHYvLy8vQTBzTkFTQUFJQUFnQWhDOUFrRUJhaUlGRUx3Q0lnRVFtQUVnQUNBRkVMRUJJQUFnQWhDSkFRc2dBU0FFSUFKQkFXb1F5Z0VNQVFzUXNBRUFDd3NnQTBFUWFpUUFDd2tBSUFBZ0JSRGZBZ3VLQXdFSWZ5TUFRZkFEYXlJQUpBQWdBRUhvQTJvaUJpQURFRXdnQmhDVUFTRUtJQVVRTlFSQUlBVkJBQkRHQXlnQ0FDQUtRUzBRbkFGR0lRc0xJQUlnQ3lBQVFlZ0RhaUFBUWVBRGFpQUFRZHdEYWlBQVFkZ0RhaUFBUWNnRGFoQkRJZ3dnQUVHNEEyb1FReUlHSUFCQnFBTnFFRU1pQnlBQVFhUURhaENsQnlBQVFkSUNOZ0lRSUFCQkNHcEJBQ0FBUVJCcUlnSVFaQ0VJQWtBQ2Z5QUZFRFVnQUNnQ3BBTktCRUFnQlJBMUlRa2dBQ2dDcEFNaERTQUhFRFVnQ1NBTmEwRUJkR29nQmhBMWFpQUFLQUtrQTJwQkFXb01BUXNnQnhBMUlBWVFOV29nQUNnQ3BBTnFRUUpxQ3lJSlFlVUFTUTBBSUFnZ0NVRUNkQkEzRUhzZ0NDZ0NBQ0lDRFFBUWRRQUxJQUlnQUVFRWFpQUFJQU1vQWdRZ0JSQTlJQVVRUFNBRkVEVkJBblJxSUFvZ0N5QUFRZUFEYWlBQUtBTGNBeUFBS0FMWUF5QU1JQVlnQnlBQUtBS2tBeENrQnlBQklBSWdBQ2dDQkNBQUtBSUFJQU1nQkJDYUFpRUJJQWdRWXlBSEVEWWFJQVlRTmhvZ0RCQTJHaUFBUWVnRGFoQkdJQUJCOEFOcUpBQWdBUXZLQkFFTGZ5TUFRYkFJYXlJQUpBQWdBQ0FGTndNUUlBQWdCamNER0NBQUlBQkJ3QWRxSWdjMkFyd0hJQWRCNUFCQjkrMEJJQUJCRUdvUTNnTWhCeUFBUWRJQ05nS2dCQ0FBUVpnRWFrRUFJQUJCb0FScUlna1FaQ0VPSUFCQjBnSTJBcUFFSUFCQmtBUnFRUUFnQ1JCa0lRb0NRQ0FIUWVRQVR3UkFFRmtoQnlBQUlBVTNBd0FnQUNBR053TUlJQUJCdkFkcUlBZEI5KzBCSUFBUTFBRWlCMEYvUmcwQklBNGdBQ2dDdkFjUWV5QUtJQWRCQW5RUU54QjdJQW9ROVFJTkFTQUtLQUlBSVFrTElBQkJpQVJxSWdnZ0F4Qk1JQWdRbEFFaUVTQUFLQUs4QnlJSUlBY2dDR29nQ1JEakFTQUhRUUJLQkVBZ0FDZ0N2QWN0QUFCQkxVWWhEd3NnQWlBUElBQkJpQVJxSUFCQmdBUnFJQUJCL0FOcUlBQkIrQU5xSUFCQjZBTnFFRU1pRUNBQVFkZ0RhaEJESWdnZ0FFSElBMm9RUXlJTElBQkJ4QU5xRUtVSElBQkIwZ0kyQWpBZ0FFRW9ha0VBSUFCQk1Hb2lBaEJrSVF3Q2Z5QUFLQUxFQXlJTklBZElCRUFnQ3hBMUlBY2dEV3RCQVhScUlBZ1FOV29nQUNnQ3hBTnFRUUZxREFFTElBc1FOU0FJRURWcUlBQW9Bc1FEYWtFQ2Fnc2lEVUhsQUU4RVFDQU1JQTFCQW5RUU54QjdJQXdvQWdBaUFrVU5BUXNnQWlBQVFTUnFJQUJCSUdvZ0F5Z0NCQ0FKSUFrZ0IwRUNkR29nRVNBUElBQkJnQVJxSUFBb0F2d0RJQUFvQXZnRElCQWdDQ0FMSUFBb0FzUURFS1FISUFFZ0FpQUFLQUlrSUFBb0FpQWdBeUFFRUpvQ0lRRWdEQkJqSUFzUU5ob2dDQkEyR2lBUUVEWWFJQUJCaUFScUVFWWdDaEJqSUE0UVl5QUFRYkFJYWlRQUlBRVBDeEIxQUF1Q0F3RUlmeU1BUWNBQmF5SUFKQUFnQUVHNEFXb2lCaUFERUV3Z0JoQ1pBU0VLSUFVUU5RUkFJQVZCQUJCQUxRQUFJQXBCTFJDQ0FVSC9BWEZHSVFzTElBSWdDeUFBUWJnQmFpQUFRYkFCYWlBQVFhOEJhaUFBUWE0QmFpQUFRYUFCYWhCRElnd2dBRUdRQVdvUVF5SUdJQUJCZ0FGcUVFTWlCeUFBUWZ3QWFoQ25CeUFBUWRJQ05nSVFJQUJCQ0dwQkFDQUFRUkJxSWdJUVpDRUlBa0FDZnlBRkVEVWdBQ2dDZkVvRVFDQUZFRFVoQ1NBQUtBSjhJUTBnQnhBMUlBa2dEV3RCQVhScUlBWVFOV29nQUNnQ2ZHcEJBV29NQVFzZ0J4QTFJQVlRTldvZ0FDZ0NmR3BCQW1vTElnbEI1UUJKRFFBZ0NDQUpFRGNRZXlBSUtBSUFJZ0lOQUJCMUFBc2dBaUFBUVFScUlBQWdBeWdDQkNBRkVEMGdCUkE5SUFVUU5Xb2dDaUFMSUFCQnNBRnFJQUFzQUs4QklBQXNBSzRCSUF3Z0JpQUhJQUFvQW53UXBnY2dBU0FDSUFBb0FnUWdBQ2dDQUNBRElBUVEvZ0VoQVNBSUVHTWdCeEEyR2lBR0VEWWFJQXdRTmhvZ0FFRzRBV29RUmlBQVFjQUJhaVFBSUFFTHdRUUJDMzhqQUVIUUEyc2lBQ1FBSUFBZ0JUY0RFQ0FBSUFZM0F4Z2dBQ0FBUWVBQ2FpSUhOZ0xjQWlBSFFlUUFRZmZ0QVNBQVFSQnFFTjRESVFjZ0FFSFNBallDOEFFZ0FFSG9BV3BCQUNBQVFmQUJhaUlKRUdRaERpQUFRZElDTmdMd0FTQUFRZUFCYWtFQUlBa1FaQ0VLQWtBZ0IwSGtBRThFUUJCWklRY2dBQ0FGTndNQUlBQWdCamNEQ0NBQVFkd0NhaUFIUWZmdEFTQUFFTlFCSWdkQmYwWU5BU0FPSUFBb0F0d0NFSHNnQ2lBSEVEY1FleUFLRVBVQ0RRRWdDaWdDQUNFSkN5QUFRZGdCYWlJSUlBTVFUQ0FJRUprQkloRWdBQ2dDM0FJaUNDQUhJQWhxSUFrUS9RRWdCMEVBU2dSQUlBQW9BdHdDTFFBQVFTMUdJUThMSUFJZ0R5QUFRZGdCYWlBQVFkQUJhaUFBUWM4QmFpQUFRYzRCYWlBQVFjQUJhaEJESWhBZ0FFR3dBV29RUXlJSUlBQkJvQUZxRUVNaUN5QUFRWndCYWhDbkJ5QUFRZElDTmdJd0lBQkJLR3BCQUNBQVFUQnFJZ0lRWkNFTUFuOGdBQ2dDbkFFaURTQUhTQVJBSUFzUU5TQUhJQTFyUVFGMGFpQUlFRFZxSUFBb0Fwd0Jha0VCYWd3QkN5QUxFRFVnQ0JBMWFpQUFLQUtjQVdwQkFtb0xJZzFCNVFCUEJFQWdEQ0FORURjUWV5QU1LQUlBSWdKRkRRRUxJQUlnQUVFa2FpQUFRU0JxSUFNb0FnUWdDU0FISUFscUlCRWdEeUFBUWRBQmFpQUFMQURQQVNBQUxBRE9BU0FRSUFnZ0N5QUFLQUtjQVJDbUJ5QUJJQUlnQUNnQ0pDQUFLQUlnSUFNZ0JCRCtBU0VCSUF3UVl5QUxFRFlhSUFnUU5ob2dFQkEyR2lBQVFkZ0JhaEJHSUFvUVl5QU9FR01nQUVIUUEyb2tBQ0FCRHdzUWRRQUx0Z1VCQTM4akFFSEFBMnNpQUNRQUlBQWdBallDc0FNZ0FDQUJOZ0s0QXlBQVFkTUNOZ0lVSUFCQkdHb2dBRUVnYWlBQVFSUnFJZ2NRWkNFSklBQkJFR29pQVNBRUVFd2dBUkNVQVNFSUlBQkJBRG9BRHlBQVFiZ0RhaUFDSUFNZ0FTQUVLQUlFSUFVZ0FFRVBhaUFJSUFrZ0J5QUFRYkFEYWhDc0J3UkFJd0JCRUdzaUFTUUFBa0FnQmhDUkFRUkFJQVlvQWdBaEFpQUJRUUEyQWd3Z0FpQUJRUXhxRUtzQklBWkJBQkNKQVF3QkN5QUJRUUEyQWdnZ0JpQUJRUWhxRUtzQklBWkJBQkNTQVFzZ0FVRVFhaVFBSUFBdEFBOEVRQ0FHSUFoQkxSQ2NBUkMxQkFzZ0NFRXdFSndCSVFFZ0NTZ0NBQ0VDSUFBb0FoUWlDRUVFYXlFREEwQUNRQ0FDSUFOUERRQWdBaWdDQUNBQlJ3MEFJQUpCQkdvaEFnd0JDd3NqQUVFUWF5SUJKQUFnQmhBMUlRTWdCaEMrQkNFRUFrQWdBaUFJRU5rRElnZEZEUUFnQmhBOUlBSk5CSDhnQmhBOUlBWVFOVUVDZEdvZ0FrOEZRUUFMUlFSQUlBY2dCQ0FEYTBzRVFDQUdJQVFnQXlBSGFpQUVheUFESUFNUS9RWUxJQVlRUFNBRFFRSjBhaUVFQTBBZ0FpQUlSd1JBSUFRZ0FoQ3JBU0FDUVFScUlRSWdCRUVFYWlFRURBRUxDeUFCUVFBMkFnQWdCQ0FCRUtzQklBWWdBeUFIYWhDWEFnd0JDeU1BUVJCcklnTWtBQ0FCSUFJZ0NCREhCQ0FEUVJCcUpBQWdBUkE5SVFnZ0FSQTFJUUlqQUVFUWF5SUVKQUFDUUNBQ0lBWVF2Z1FpQnlBR0VEVWlBMnROQkVBZ0FrVU5BU0FHRUQwaUJ5QURRUUowYWlBSUlBSVF5Z0VnQmlBQ0lBTnFJZ0lRbHdJZ0JFRUFOZ0lNSUFjZ0FrRUNkR29nQkVFTWFoQ3JBUXdCQ3lBR0lBY2dBaUFEYWlBSGF5QURJQU5CQUNBQ0lBZ1EvZ1lMSUFSQkVHb2tBQ0FCRURZYUN5QUJRUkJxSkFBTElBQkJ1QU5xSUFCQnNBTnFFSE1FUUNBRklBVW9BZ0JCQW5JMkFnQUxJQUFvQXJnRElRRWdBRUVRYWhCR0lBa1FZeUFBUWNBRGFpUUFJQUVMNFFNQkFuOGpBRUh3QkdzaUFDUUFJQUFnQWpZQzRBUWdBQ0FCTmdMb0JDQUFRZE1DTmdJUUlBQkJ5QUZxSUFCQjBBRnFJQUJCRUdvUVpDRUJJQUJCd0FGcUlnY2dCQkJNSUFjUWxBRWhDQ0FBUVFBNkFMOEJBa0FnQUVIb0JHb2dBaUFESUFjZ0JDZ0NCQ0FGSUFCQnZ3RnFJQWdnQVNBQVFjUUJhaUFBUWVBRWFoQ3NCMFVOQUNBQVFabVFBaWdBQURZQXR3RWdBRUdTa0FJcEFBQTNBN0FCSUFnZ0FFR3dBV29nQUVHNkFXb2dBRUdBQVdvUTR3RWdBRUhTQWpZQ0VDQUFRUWhxUVFBZ0FFRVFhaUlFRUdRaEF3SkFJQUFvQXNRQklBRW9BZ0JyUVlrRFRnUkFJQU1nQUNnQ3hBRWdBU2dDQUd0QkFuVkJBbW9RTnhCN0lBTW9BZ0JGRFFFZ0F5Z0NBQ0VFQ3lBQUxRQy9BUVJBSUFSQkxUb0FBQ0FFUVFGcUlRUUxJQUVvQWdBaEFnTkFJQUFvQXNRQklBSk5CRUFDUUNBRVFRQTZBQUFnQUNBR05nSUFJQUJCRUdwQi9lMEJJQUFRNVFGQkFVY05BQ0FERUdNTUJBc0ZJQVFnQUVHd0FXb2dBRUdBQVdvaUJ5QUhRU2hxSUFJUXZ3UWdCMnRCQW5WcUxRQUFPZ0FBSUFSQkFXb2hCQ0FDUVFScUlRSU1BUXNMRUhVQUN4QjFBQXNnQUVIb0JHb2dBRUhnQkdvUWN3UkFJQVVnQlNnQ0FFRUNjallDQUFzZ0FDZ0M2QVFoQWlBQVFjQUJhaEJHSUFFUVl5QUFRZkFFYWlRQUlBSUxzd1VCQTM4akFFR2dBV3NpQUNRQUlBQWdBallDa0FFZ0FDQUJOZ0tZQVNBQVFkTUNOZ0lVSUFCQkdHb2dBRUVnYWlBQVFSUnFJZ2NRWkNFSklBQkJFR29pQVNBRUVFd2dBUkNaQVNFSUlBQkJBRG9BRHlBQVFaZ0JhaUFDSUFNZ0FTQUVLQUlFSUFVZ0FFRVBhaUFJSUFrZ0J5QUFRWVFCYWhDekJ3UkFJd0JCRUdzaUFTUUFBa0FnQmhDUkFRUkFJQVlvQWdBaEFpQUJRUUE2QUE4Z0FpQUJRUTlxRUlzQklBWkJBQkNKQVF3QkN5QUJRUUE2QUE0Z0JpQUJRUTVxRUlzQklBWkJBQkNTQVFzZ0FVRVFhaVFBSUFBdEFBOEVRQ0FHSUFoQkxSQ0NBUkMyQkFzZ0NFRXdFSUlCSVFFZ0NTZ0NBQ0VDSUFBb0FoUWlDRUVCYXlFRElBRkIvd0Z4SVFFRFFBSkFJQUlnQTA4TkFDQUNMUUFBSUFGSERRQWdBa0VCYWlFQ0RBRUxDeU1BUVJCcklnRWtBQ0FHRURVaEF5QUdFRThoQkFKQUlBSWdDQkNLQkNJSFJRMEFJQVlRUFNBQ1RRUi9JQVlRUFNBR0VEVnFJQUpQQlVFQUMwVUVRQ0FISUFRZ0EydExCRUFnQmlBRUlBTWdCMm9nQkdzZ0F5QURFTGNFQ3lBR0VEMGdBMm9oQkFOQUlBSWdDRWNFUUNBRUlBSVFpd0VnQWtFQmFpRUNJQVJCQVdvaEJBd0JDd3NnQVVFQU9nQVBJQVFnQVVFUGFoQ0xBU0FHSUFNZ0Iyb1Fsd0lNQVFzakFFRVFheUlESkFBZ0FTQUNJQWdRNEFRZ0EwRVFhaVFBSUFFUVBTRUlJQUVRTlNFQ0l3QkJFR3NpQkNRQUFrQWdBaUFHRUU4aUJ5QUdFRFVpQTJ0TkJFQWdBa1VOQVNBR0VEMGlCeUFEYWlBSUlBSVF0QUVnQmlBQ0lBTnFJZ0lRbHdJZ0JFRUFPZ0FQSUFJZ0Iyb2dCRUVQYWhDTEFRd0JDeUFHSUFjZ0FpQURhaUFIYXlBRElBTkJBQ0FDSUFnUXZBTUxJQVJCRUdva0FDQUJFRFlhQ3lBQlFSQnFKQUFMSUFCQm1BRnFJQUJCa0FGcUVIUUVRQ0FGSUFVb0FnQkJBbkkyQWdBTElBQW9BcGdCSVFFZ0FFRVFhaEJHSUFrUVl5QUFRYUFCYWlRQUlBRUwxd01CQW44akFFR2dBbXNpQUNRQUlBQWdBallDa0FJZ0FDQUJOZ0tZQWlBQVFkTUNOZ0lRSUFCQm1BRnFJQUJCb0FGcUlBQkJFR29RWkNFQklBQkJrQUZxSWdjZ0JCQk1JQWNRbVFFaENDQUFRUUE2QUk4QkFrQWdBRUdZQW1vZ0FpQURJQWNnQkNnQ0JDQUZJQUJCandGcUlBZ2dBU0FBUVpRQmFpQUFRWVFDYWhDekIwVU5BQ0FBUVptUUFpZ0FBRFlBaHdFZ0FFR1NrQUlwQUFBM0E0QUJJQWdnQUVHQUFXb2dBRUdLQVdvZ0FFSDJBR29RL1FFZ0FFSFNBallDRUNBQVFRaHFRUUFnQUVFUWFpSUVFR1FoQXdKQUlBQW9BcFFCSUFFb0FnQnJRZU1BVGdSQUlBTWdBQ2dDbEFFZ0FTZ0NBR3RCQW1vUU54QjdJQU1vQWdCRkRRRWdBeWdDQUNFRUN5QUFMUUNQQVFSQUlBUkJMVG9BQUNBRVFRRnFJUVFMSUFFb0FnQWhBZ05BSUFBb0FwUUJJQUpOQkVBQ1FDQUVRUUE2QUFBZ0FDQUdOZ0lBSUFCQkVHcEIvZTBCSUFBUTVRRkJBVWNOQUNBREVHTU1CQXNGSUFRZ0FFSDJBR29pQnlBSFFRcHFJQUlRd2dRZ0FHc2dBR290QUFvNkFBQWdCRUVCYWlFRUlBSkJBV29oQWd3QkN3c1FkUUFMRUhVQUN5QUFRWmdDYWlBQVFaQUNhaEIwQkVBZ0JTQUZLQUlBUVFKeU5nSUFDeUFBS0FLWUFpRUNJQUJCa0FGcUVFWWdBUkJqSUFCQm9BSnFKQUFnQWd1YUFnRUNmeU1BUWFBRGF5SUlKQUFnQ0NBSVFhQURhaUlETmdJTUl3QkJrQUZySWdja0FDQUhJQWRCaEFGcU5nSWNJQUJCQ0dvZ0IwRWdhaUlDSUFkQkhHb2dCQ0FGSUFZUXR3Y2dCMElBTndNUUlBY2dBallDRENBSVFSQnFJZ0lnQ0NnQ0RCRDJCQ0VFSUFBb0FnZ2hCU01BUVJCcklnQWtBQ0FBSUFVMkFnd2dBRUVJYWlBQVFReHFFTWdCSVFVZ0FpQUhRUXhxSUFRZ0IwRVFhaERLQkNFRUlBVVF4d0VnQUVFUWFpUUFJQVJCZjBZRVFCQjFBQXNnQ0NBQ0lBUkJBblJxTmdJTUlBZEJrQUZxSkFBZ0NDZ0NEQ0VFSXdCQkVHc2lBQ1FBSUFBZ0FUWUNDQU5BSUFJZ0JFY0VRQ0FBUVFocUlBSW9BZ0FRNFFRZ0FrRUVhaUVDREFFTEN5QUFLQUlJSVFFZ0FFRVFhaVFBSUFNa0FDQUJDNFVCQUNNQVFZQUJheUlDSkFBZ0FpQUNRZlFBYWpZQ0RDQUFRUWhxSUFKQkVHb2lBQ0FDUVF4cUlBUWdCU0FHRUxjSElBQWhCQ0FDS0FJTUlRTWpBRUVRYXlJQUpBQWdBQ0FCTmdJSUEwQWdBeUFFUndSQUlBQkJDR29nQkN3QUFCRFJBeUFFUVFGcUlRUU1BUXNMSUFBb0FnZ2hBU0FBUVJCcUpBQWdBa0dBQVdva0FDQUJDKzRNQVFGL0l3QkJRR29pQnlRQUlBY2dBVFlDT0NBRVFRQTJBZ0FnQnlBREVFd2dCeENVQVNFSUlBY1FSZ0ovQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FHUWNFQWF3NDVBQUVYQkJjRkZ3WUhGeGNYQ2hjWEZ4Y09EeEFYRnhjVEZSY1hGeGNYRnhjQUFRSURBeGNYQVJjSUZ4Y0pDeGNNRncwWEN4Y1hFUklVRmdzZ0FDQUZRUmhxSUFkQk9Hb2dBaUFFSUFnUXVnY01HQXNnQUNBRlFSQnFJQWRCT0dvZ0FpQUVJQWdRdVFjTUZ3c2dCeUFBSUFFZ0FpQURJQVFnQlNBQVFRaHFJQUFvQWdnb0Fnd1JBQUFpQUJBOUlBQVFQU0FBRURWQkFuUnFFT0VCTmdJNERCWUxJQWRCT0dvZ0FpQUVJQWhCQWhEU0FTRUFBa0FnQkNnQ0FDSUJRUVJ4SUFCQkFXdEJIa3R5UlFSQUlBVWdBRFlDREF3QkN5QUVJQUZCQkhJMkFnQUxEQlVMSUFkQnVLTURLUU1BTndNWUlBZEJzS01ES1FNQU53TVFJQWRCcUtNREtRTUFOd01JSUFkQm9LTURLUU1BTndNQUlBY2dBQ0FCSUFJZ0F5QUVJQVVnQnlBSFFTQnFFT0VCTmdJNERCUUxJQWRCMktNREtRTUFOd01ZSUFkQjBLTURLUU1BTndNUUlBZEJ5S01ES1FNQU53TUlJQWRCd0tNREtRTUFOd01BSUFjZ0FDQUJJQUlnQXlBRUlBVWdCeUFIUVNCcUVPRUJOZ0k0REJNTElBZEJPR29nQWlBRUlBaEJBaERTQVNFQUFrQWdCQ2dDQUNJQlFRUnhJQUJCRjBweVJRUkFJQVVnQURZQ0NBd0JDeUFFSUFGQkJISTJBZ0FMREJJTElBZEJPR29nQWlBRUlBaEJBaERTQVNFQUFrQWdCQ2dDQUNJQlFRUnhJQUJCQVd0QkMwdHlSUVJBSUFVZ0FEWUNDQXdCQ3lBRUlBRkJCSEkyQWdBTERCRUxJQWRCT0dvZ0FpQUVJQWhCQXhEU0FTRUFBa0FnQkNnQ0FDSUJRUVJ4SUFCQjdRSktja1VFUUNBRklBQTJBaHdNQVFzZ0JDQUJRUVJ5TmdJQUN3d1FDeUFIUVRocUlBSWdCQ0FJUVFJUTBnRWhBQUpBSUFRb0FnQWlBVUVFY1NBQVFReEtja1VFUUNBRklBQkJBV3MyQWhBTUFRc2dCQ0FCUVFSeU5nSUFDd3dQQ3lBSFFUaHFJQUlnQkNBSVFRSVEwZ0VoQUFKQUlBUW9BZ0FpQVVFRWNTQUFRVHRLY2tVRVFDQUZJQUEyQWdRTUFRc2dCQ0FCUVFSeU5nSUFDd3dPQ3lBSFFUaHFJUUFqQUVFUWF5SUJKQUFnQVNBQ05nSUlBMEFDUUNBQUlBRkJDR29RakFGRkRRQWdDRUVCSUFBUVp4Q3lBVVVOQUNBQUVId2FEQUVMQ3lBQUlBRkJDR29RY3dSQUlBUWdCQ2dDQUVFQ2NqWUNBQXNnQVVFUWFpUUFEQTBMSUFkQk9Hb2hBUUpBSUFCQkNHb2dBQ2dDQ0NnQ0NCRUFBQ0lBRURWQkFDQUFRUXhxRURWclJnUkFJQVFnQkNnQ0FFRUVjallDQUF3QkN5QUJJQUlnQUNBQVFSaHFJQWdnQkVFQUVNY0RJZ0lnQUVjZ0JTZ0NDQ0lCUVF4SGNrVUVRQ0FGUVFBMkFnZ01BUXNnQWlBQWEwRU1SeUFCUVF0S2NrVUVRQ0FGSUFGQkRHbzJBZ2dMQ3d3TUN5QUhRZUNqQTBFc0VENGlCaUFBSUFFZ0FpQURJQVFnQlNBR0lBWkJMR29RNFFFMkFqZ01Dd3NnQjBHZ3BBTW9BZ0EyQWhBZ0IwR1lwQU1wQXdBM0F3Z2dCMEdRcEFNcEF3QTNBd0FnQnlBQUlBRWdBaUFESUFRZ0JTQUhJQWRCRkdvUTRRRTJBamdNQ2dzZ0IwRTRhaUFDSUFRZ0NFRUNFTklCSVFBQ1FDQUVLQUlBSWdGQkJIRWdBRUU4U25KRkJFQWdCU0FBTmdJQURBRUxJQVFnQVVFRWNqWUNBQXNNQ1FzZ0IwSElwQU1wQXdBM0F4Z2dCMEhBcEFNcEF3QTNBeEFnQjBHNHBBTXBBd0EzQXdnZ0IwR3dwQU1wQXdBM0F3QWdCeUFBSUFFZ0FpQURJQVFnQlNBSElBZEJJR29RNFFFMkFqZ01DQXNnQjBFNGFpQUNJQVFnQ0VFQkVOSUJJUUFDUUNBRUtBSUFJZ0ZCQkhFZ0FFRUdTbkpGQkVBZ0JTQUFOZ0lZREFFTElBUWdBVUVFY2pZQ0FBc01Cd3NnQUNBQklBSWdBeUFFSUFVZ0FDZ0NBQ2dDRkJFSkFBd0hDeUFISUFBZ0FTQUNJQU1nQkNBRklBQkJDR29nQUNnQ0NDZ0NHQkVBQUNJQUVEMGdBQkE5SUFBUU5VRUNkR29RNFFFMkFqZ01CUXNnQlVFVWFpQUhRVGhxSUFJZ0JDQUlFTGdIREFRTElBZEJPR29nQWlBRUlBaEJCQkRTQVNFQUlBUXRBQUJCQkhGRkJFQWdCU0FBUWV3T2F6WUNGQXNNQXdzZ0JrRWxSZzBCQ3lBRUlBUW9BZ0JCQkhJMkFnQU1BUXNqQUVFUWF5SUFKQUFnQUNBQ05nSUlRUVloQVFKQUFrQWdCMEU0YWlJQ0lBQkJDR29RY3cwQVFRUWhBU0FJSUFJUVp4REFBa0VsUncwQVFRSWhBU0FDRUh3Z0FFRUlhaEJ6UlEwQkN5QUVJQVFvQWdBZ0FYSTJBZ0FMSUFCQkVHb2tBQXNnQnlnQ09Bc2hBQ0FIUVVCckpBQWdBQXRJQVFGL0l3QkJFR3NpQmlRQUlBWWdBVFlDQ0NBR0lBTVFUQ0FHRUpRQklRRWdCaEJHSUFWQkZHb2dCa0VJYWlBQ0lBUWdBUkM0QnlBR0tBSUlJUUFnQmtFUWFpUUFJQUFMU2dFQmZ5TUFRUkJySWdZa0FDQUdJQUUyQWdnZ0JpQURFRXdnQmhDVUFTRUJJQVlRUmlBQUlBVkJFR29nQmtFSWFpQUNJQVFnQVJDNUJ5QUdLQUlJSVFBZ0JrRVFhaVFBSUFBTFNnRUJmeU1BUVJCcklnWWtBQ0FHSUFFMkFnZ2dCaUFERUV3Z0JoQ1VBU0VCSUFZUVJpQUFJQVZCR0dvZ0JrRUlhaUFDSUFRZ0FSQzZCeUFHS0FJSUlRQWdCa0VRYWlRQUlBQUxNUUFnQUNBQklBSWdBeUFFSUFVZ0FFRUlhaUFBS0FJSUtBSVVFUUFBSWdBUVBTQUFFRDBnQUJBMVFRSjBhaERoQVF0ZEFRRi9Jd0JCSUdzaUJpUUFJQVpCeUtRREtRTUFOd01ZSUFaQndLUURLUU1BTndNUUlBWkJ1S1FES1FNQU53TUlJQVpCc0tRREtRTUFOd01BSUFBZ0FTQUNJQU1nQkNBRklBWWdCa0VnYWlJQkVPRUJJUUFnQVNRQUlBQUxuZ3dCQW44akFFRWdheUlISkFBZ0J5QUJOZ0lZSUFSQkFEWUNBQ0FIUVFocUlna2dBeEJNSUFrUW1RRWhDQ0FKRUVZQ2Z3SkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0JrSEJBR3NPT1FBQkZ3UVhCUmNHQnhjWEZ3b1hGeGNYRGc4UUZ4Y1hFeFVYRnhjWEZ4Y1hBQUVDQXdNWEZ3RVhDQmNYQ1FzWERCY05Gd3NYRnhFU0ZCWUxJQUFnQlVFWWFpQUhRUmhxSUFJZ0JDQUlFTDRIREJnTElBQWdCVUVRYWlBSFFSaHFJQUlnQkNBSUVMMEhEQmNMSUFjZ0FDQUJJQUlnQXlBRUlBVWdBRUVJYWlBQUtBSUlLQUlNRVFBQUlnQVFQU0FBRUQwZ0FCQTFhaERpQVRZQ0dBd1dDeUFIUVJocUlBSWdCQ0FJUVFJUTB3RWhBQUpBSUFRb0FnQWlBVUVFY1NBQVFRRnJRUjVMY2tVRVFDQUZJQUEyQWd3TUFRc2dCQ0FCUVFSeU5nSUFDd3dWQ3lBSFFxWGF2YW5DN011UytRQTNBd2dnQnlBQUlBRWdBaUFESUFRZ0JTQUhRUWhxSUFkQkVHb1E0Z0UyQWhnTUZBc2dCMEtsc3JXcDBxM0xrdVFBTndNSUlBY2dBQ0FCSUFJZ0F5QUVJQVVnQjBFSWFpQUhRUkJxRU9JQk5nSVlEQk1MSUFkQkdHb2dBaUFFSUFoQkFoRFRBU0VBQWtBZ0JDZ0NBQ0lCUVFSeElBQkJGMHB5UlFSQUlBVWdBRFlDQ0F3QkN5QUVJQUZCQkhJMkFnQUxEQklMSUFkQkdHb2dBaUFFSUFoQkFoRFRBU0VBQWtBZ0JDZ0NBQ0lCUVFSeElBQkJBV3RCQzB0eVJRUkFJQVVnQURZQ0NBd0JDeUFFSUFGQkJISTJBZ0FMREJFTElBZEJHR29nQWlBRUlBaEJBeERUQVNFQUFrQWdCQ2dDQUNJQlFRUnhJQUJCN1FKS2NrVUVRQ0FGSUFBMkFod01BUXNnQkNBQlFRUnlOZ0lBQ3d3UUN5QUhRUmhxSUFJZ0JDQUlRUUlRMHdFaEFBSkFJQVFvQWdBaUFVRUVjU0FBUVF4S2NrVUVRQ0FGSUFCQkFXczJBaEFNQVFzZ0JDQUJRUVJ5TmdJQUN3d1BDeUFIUVJocUlBSWdCQ0FJUVFJUTB3RWhBQUpBSUFRb0FnQWlBVUVFY1NBQVFUdEtja1VFUUNBRklBQTJBZ1FNQVFzZ0JDQUJRUVJ5TmdJQUN3d09DeUFIUVJocUlRQWpBRUVRYXlJQkpBQWdBU0FDTmdJSUEwQUNRQ0FBSUFGQkNHb1FqUUZGRFFBZ0NFRUJJQUFRYUJDekFVVU5BQ0FBRUgwYURBRUxDeUFBSUFGQkNHb1FkQVJBSUFRZ0JDZ0NBRUVDY2pZQ0FBc2dBVUVRYWlRQURBMExJQWRCR0dvaEFRSkFJQUJCQ0dvZ0FDZ0NDQ2dDQ0JFQUFDSUFFRFZCQUNBQVFReHFFRFZyUmdSQUlBUWdCQ2dDQUVFRWNqWUNBQXdCQ3lBQklBSWdBQ0FBUVJocUlBZ2dCRUVBRU1rRElnSWdBRWNnQlNnQ0NDSUJRUXhIY2tVRVFDQUZRUUEyQWdnTUFRc2dBaUFBYTBFTVJ5QUJRUXRLY2tVRVFDQUZJQUZCREdvMkFnZ0xDd3dNQ3lBSFFZaWpBeWdBQURZQUR5QUhRWUdqQXlrQUFEY0RDQ0FISUFBZ0FTQUNJQU1nQkNBRklBZEJDR29nQjBFVGFoRGlBVFlDR0F3TEN5QUhRWkNqQXkwQUFEb0FEQ0FIUVl5akF5Z0FBRFlDQ0NBSElBQWdBU0FDSUFNZ0JDQUZJQWRCQ0dvZ0IwRU5haERpQVRZQ0dBd0tDeUFIUVJocUlBSWdCQ0FJUVFJUTB3RWhBQUpBSUFRb0FnQWlBVUVFY1NBQVFUeEtja1VFUUNBRklBQTJBZ0FNQVFzZ0JDQUJRUVJ5TmdJQUN3d0pDeUFIUXFXUTZhblN5YzZTMHdBM0F3Z2dCeUFBSUFFZ0FpQURJQVFnQlNBSFFRaHFJQWRCRUdvUTRnRTJBaGdNQ0FzZ0IwRVlhaUFDSUFRZ0NFRUJFTk1CSVFBQ1FDQUVLQUlBSWdGQkJIRWdBRUVHU25KRkJFQWdCU0FBTmdJWURBRUxJQVFnQVVFRWNqWUNBQXNNQndzZ0FDQUJJQUlnQXlBRUlBVWdBQ2dDQUNnQ0ZCRUpBQXdIQ3lBSElBQWdBU0FDSUFNZ0JDQUZJQUJCQ0dvZ0FDZ0NDQ2dDR0JFQUFDSUFFRDBnQUJBOUlBQVFOV29RNGdFMkFoZ01CUXNnQlVFVWFpQUhRUmhxSUFJZ0JDQUlFTHdIREFRTElBZEJHR29nQWlBRUlBaEJCQkRUQVNFQUlBUXRBQUJCQkhGRkJFQWdCU0FBUWV3T2F6WUNGQXNNQXdzZ0JrRWxSZzBCQ3lBRUlBUW9BZ0JCQkhJMkFnQU1BUXNqQUVFUWF5SUFKQUFnQUNBQ05nSUlRUVloQVFKQUFrQWdCMEVZYWlJQ0lBQkJDR29RZEEwQVFRUWhBU0FJSUFJUWFCREJBa0VsUncwQVFRSWhBU0FDRUgwZ0FFRUlhaEIwUlEwQkN5QUVJQVFvQWdBZ0FYSTJBZ0FMSUFCQkVHb2tBQXNnQnlnQ0dBc2hBQ0FIUVNCcUpBQWdBQXRJQVFGL0l3QkJFR3NpQmlRQUlBWWdBVFlDQ0NBR0lBTVFUQ0FHRUprQklRRWdCaEJHSUFWQkZHb2dCa0VJYWlBQ0lBUWdBUkM4QnlBR0tBSUlJUUFnQmtFUWFpUUFJQUFMU2dFQmZ5TUFRUkJySWdZa0FDQUdJQUUyQWdnZ0JpQURFRXdnQmhDWkFTRUJJQVlRUmlBQUlBVkJFR29nQmtFSWFpQUNJQVFnQVJDOUJ5QUdLQUlJSVFBZ0JrRVFhaVFBSUFBTFNnRUJmeU1BUVJCcklnWWtBQ0FHSUFFMkFnZ2dCaUFERUV3Z0JoQ1pBU0VCSUFZUVJpQUFJQVZCR0dvZ0JrRUlhaUFDSUFRZ0FSQytCeUFHS0FJSUlRQWdCa0VRYWlRQUlBQUxMZ0FnQUNBQklBSWdBeUFFSUFVZ0FFRUlhaUFBS0FJSUtBSVVFUUFBSWdBUVBTQUFFRDBnQUJBMWFoRGlBUXRBQVFGL0l3QkJFR3NpQmlRQUlBWkNwWkRwcWRMSnpwTFRBRGNEQ0NBQUlBRWdBaUFESUFRZ0JTQUdRUWhxSUFaQkVHb2lBUkRpQVNFQUlBRWtBQ0FBQzVjQkFRVi9Jd0JCMEFGcklnQWtBQkJaSVFZZ0FDQUVOZ0lBSUFCQnNBRnFJZ2NnQnlBSFFSUWdCa0hrNkFFZ0FCQ3NBU0lJYWlJRUlBSVExUUVoQmlBQVFSQnFJZ1VnQWhCTUlBVVFsQUVoQ1NBRkVFWWdDU0FISUFRZ0JSRGpBU0FCSUFVZ0NFRUNkQ0FGYWlJQklBWWdBR3RCQW5RZ0FHcEJzQVZySUFRZ0JrWWJJQUVnQWlBREVKb0NJUUVnQUVIUUFXb2tBQ0FCQzQwRUFRZC9BbjhqQUVHd0Eyc2lBQ1FBSUFCQ0pUY0RxQU1nQUVHb0EycEJBWEpCcllVQ0lBSW9BZ1FReEFNaENDQUFJQUJCZ0FOcU5nTDhBaEJaSVFZQ2Z5QUlCRUFnQWlnQ0NDRUhJQUJCUUdzZ0JUY0RBQ0FBSUFRM0F6Z2dBQ0FITmdJd0lBQkJnQU5xUVI0Z0JpQUFRYWdEYWlBQVFUQnFFS3dCREFFTElBQWdCRGNEVUNBQUlBVTNBMWdnQUVHQUEycEJIaUFHSUFCQnFBTnFJQUJCMEFCcUVLd0JDeUVHSUFCQjBnSTJBb0FCSUFCQjhBSnFRUUFnQUVHQUFXb1FaQ0VKSUFCQmdBTnFJZ29oQndKQUlBWkJIazRFUUJCWklRWUNmeUFJQkVBZ0FpZ0NDQ0VISUFBZ0JUY0RFQ0FBSUFRM0F3Z2dBQ0FITmdJQUlBQkIvQUpxSUFZZ0FFR29BMm9nQUJEVUFRd0JDeUFBSUFRM0F5QWdBQ0FGTndNb0lBQkIvQUpxSUFZZ0FFR29BMm9nQUVFZ2FoRFVBUXNpQmtGL1JnMEJJQWtnQUNnQy9BSVFleUFBS0FMOEFpRUhDeUFISUFZZ0Iyb2lDeUFDRU5VQklRd2dBRUhTQWpZQ2dBRWdBRUg0QUdwQkFDQUFRWUFCYWhCa0lRY0NRQ0FBS0FMOEFpQUFRWUFEYWtZRVFDQUFRWUFCYWlFR0RBRUxJQVpCQTNRUU55SUdSUTBCSUFjZ0JoQjdJQUFvQXZ3Q0lRb0xJQUJCNkFCcUlnZ2dBaEJNSUFvZ0RDQUxJQVlnQUVIMEFHb2dBRUh3QUdvZ0NCREJCeUFJRUVZZ0FTQUdJQUFvQW5RZ0FDZ0NjQ0FDSUFNUW1nSWhBU0FIRUdNZ0NSQmpJQUJCc0FOcUpBQWdBUXdCQ3hCMUFBc0w2UU1CQjM4Q2Z5TUFRWUFEYXlJQUpBQWdBRUlsTndQNEFpQUFRZmdDYWtFQmNrSFBsUUlnQWlnQ0JCREVBeUVISUFBZ0FFSFFBbW8yQXN3Q0VGa2hCUUovSUFjRVFDQUNLQUlJSVFZZ0FDQUVPUU1vSUFBZ0JqWUNJQ0FBUWRBQ2FrRWVJQVVnQUVINEFtb2dBRUVnYWhDc0FRd0JDeUFBSUFRNUF6QWdBRUhRQW1wQkhpQUZJQUJCK0FKcUlBQkJNR29RckFFTElRVWdBRUhTQWpZQ1VDQUFRY0FDYWtFQUlBQkIwQUJxRUdRaENDQUFRZEFDYWlJSklRWUNRQ0FGUVI1T0JFQVFXU0VGQW44Z0J3UkFJQUlvQWdnaEJpQUFJQVE1QXdnZ0FDQUdOZ0lBSUFCQnpBSnFJQVVnQUVINEFtb2dBQkRVQVF3QkN5QUFJQVE1QXhBZ0FFSE1BbW9nQlNBQVFmZ0NhaUFBUVJCcUVOUUJDeUlGUVg5R0RRRWdDQ0FBS0FMTUFoQjdJQUFvQXN3Q0lRWUxJQVlnQlNBR2FpSUtJQUlRMVFFaEN5QUFRZElDTmdKUUlBQkJ5QUJxUVFBZ0FFSFFBR29RWkNFR0FrQWdBQ2dDekFJZ0FFSFFBbXBHQkVBZ0FFSFFBR29oQlF3QkN5QUZRUU4wRURjaUJVVU5BU0FHSUFVUWV5QUFLQUxNQWlFSkN5QUFRVGhxSWdjZ0FoQk1JQWtnQ3lBS0lBVWdBRUhFQUdvZ0FFRkFheUFIRU1FSElBY1FSaUFCSUFVZ0FDZ0NSQ0FBS0FKQUlBSWdBeENhQWlFQklBWVFZeUFJRUdNZ0FFR0FBMm9rQUNBQkRBRUxFSFVBQ3dzUkFDQUFJQUVnQWlBRElBUkJBQkR4QmdzUkFDQUFJQUVnQWlBRElBUkJBQkR5QmdzUkFDQUFJQUVnQWlBRElBUkJBUkR4QmdzUkFDQUFJQUVnQWlBRElBUkJBUkR5Qmd2UkFRRUJmeU1BUVRCcklnVWtBQ0FGSUFFMkFpZ0NRQ0FDS0FJRVFRRnhSUVJBSUFBZ0FTQUNJQU1nQkNBQUtBSUFLQUlZRVFvQUlRSU1BUXNnQlVFWWFpSUFJQUlRVENBQUVNVUNJUUVnQUJCR0FrQWdCQVJBSUFWQkdHb2dBUkM5QVF3QkN5QUZRUmhxSUFFUXZBRUxJQVVnQlVFWWFoQ3RBVFlDRUFOQUlBVWdCVUVZYWhEN0FUWUNDQ0FGUVJCcUlBVkJDR29RZndSQUlBVkJLR29nQlVFUWFpSUFLQUlBS0FJQUVPRUVJQUFRaUFJTUFRVWdCU2dDS0NFQ0lBVkJHR29RTmhvTEN3c2dCVUV3YWlRQUlBSUxqd0VCQlg4akFFSGdBR3NpQUNRQUVGa2hCaUFBSUFRMkFnQWdBRUZBYXlJSElBY2dCMEVVSUFaQjVPZ0JJQUFRckFFaUNHb2lCQ0FDRU5VQklRWWdBRUVRYWlJRklBSVFUQ0FGRUprQklRa2dCUkJHSUFrZ0J5QUVJQVVRL1FFZ0FTQUZJQVVnQ0dvaUFTQUdJQUJySUFCcVFUQnJJQVFnQmtZYklBRWdBaUFERVA0QklRRWdBRUhnQUdva0FDQUJDNDBFQVFkL0FuOGpBRUdBQW1zaUFDUUFJQUJDSlRjRCtBRWdBRUg0QVdwQkFYSkJyWVVDSUFJb0FnUVF4QU1oQ0NBQUlBQkIwQUZxTmdMTUFSQlpJUVlDZnlBSUJFQWdBaWdDQ0NFSElBQkJRR3NnQlRjREFDQUFJQVEzQXpnZ0FDQUhOZ0l3SUFCQjBBRnFRUjRnQmlBQVFmZ0JhaUFBUVRCcUVLd0JEQUVMSUFBZ0JEY0RVQ0FBSUFVM0ExZ2dBRUhRQVdwQkhpQUdJQUJCK0FGcUlBQkIwQUJxRUt3QkN5RUdJQUJCMGdJMkFvQUJJQUJCd0FGcVFRQWdBRUdBQVdvUVpDRUpJQUJCMEFGcUlnb2hCd0pBSUFaQkhrNEVRQkJaSVFZQ2Z5QUlCRUFnQWlnQ0NDRUhJQUFnQlRjREVDQUFJQVEzQXdnZ0FDQUhOZ0lBSUFCQnpBRnFJQVlnQUVINEFXb2dBQkRVQVF3QkN5QUFJQVEzQXlBZ0FDQUZOd01vSUFCQnpBRnFJQVlnQUVINEFXb2dBRUVnYWhEVUFRc2lCa0YvUmcwQklBa2dBQ2dDekFFUWV5QUFLQUxNQVNFSEN5QUhJQVlnQjJvaUN5QUNFTlVCSVF3Z0FFSFNBallDZ0FFZ0FFSDRBR3BCQUNBQVFZQUJhaEJrSVFjQ1FDQUFLQUxNQVNBQVFkQUJha1lFUUNBQVFZQUJhaUVHREFFTElBWkJBWFFRTnlJR1JRMEJJQWNnQmhCN0lBQW9Bc3dCSVFvTElBQkI2QUJxSWdnZ0FoQk1JQW9nRENBTElBWWdBRUgwQUdvZ0FFSHdBR29nQ0JERkJ5QUlFRVlnQVNBR0lBQW9BblFnQUNnQ2NDQUNJQU1RL2dFaEFTQUhFR01nQ1JCaklBQkJnQUpxSkFBZ0FRd0JDeEIxQUFzTDZRTUJCMzhDZnlNQVFkQUJheUlBSkFBZ0FFSWxOd1BJQVNBQVFjZ0Jha0VCY2tIUGxRSWdBaWdDQkJERUF5RUhJQUFnQUVHZ0FXbzJBcHdCRUZraEJRSi9JQWNFUUNBQ0tBSUlJUVlnQUNBRU9RTW9JQUFnQmpZQ0lDQUFRYUFCYWtFZUlBVWdBRUhJQVdvZ0FFRWdhaENzQVF3QkN5QUFJQVE1QXpBZ0FFR2dBV3BCSGlBRklBQkJ5QUZxSUFCQk1Hb1FyQUVMSVFVZ0FFSFNBallDVUNBQVFaQUJha0VBSUFCQjBBQnFFR1FoQ0NBQVFhQUJhaUlKSVFZQ1FDQUZRUjVPQkVBUVdTRUZBbjhnQndSQUlBSW9BZ2doQmlBQUlBUTVBd2dnQUNBR05nSUFJQUJCbkFGcUlBVWdBRUhJQVdvZ0FCRFVBUXdCQ3lBQUlBUTVBeEFnQUVHY0FXb2dCU0FBUWNnQmFpQUFRUkJxRU5RQkN5SUZRWDlHRFFFZ0NDQUFLQUtjQVJCN0lBQW9BcHdCSVFZTElBWWdCU0FHYWlJS0lBSVExUUVoQ3lBQVFkSUNOZ0pRSUFCQnlBQnFRUUFnQUVIUUFHb1FaQ0VHQWtBZ0FDZ0NuQUVnQUVHZ0FXcEdCRUFnQUVIUUFHb2hCUXdCQ3lBRlFRRjBFRGNpQlVVTkFTQUdJQVVRZXlBQUtBS2NBU0VKQ3lBQVFUaHFJZ2NnQWhCTUlBa2dDeUFLSUFVZ0FFSEVBR29nQUVGQWF5QUhFTVVISUFjUVJpQUJJQVVnQUNnQ1JDQUFLQUpBSUFJZ0F4RCtBU0VCSUFZUVl5QUlFR01nQUVIUUFXb2tBQ0FCREFFTEVIVUFDd3NSQUNBQUlBRWdBaUFESUFSQkFCRHpCZ3NSQUNBQUlBRWdBaUFESUFSQkFCRDBCZ3NSQUNBQUlBRWdBaUFESUFSQkFSRHpCZ3NSQUNBQUlBRWdBaUFESUFSQkFSRDBCZ3ZSQVFFQmZ5TUFRVEJySWdVa0FDQUZJQUUyQWlnQ1FDQUNLQUlFUVFGeFJRUkFJQUFnQVNBQ0lBTWdCQ0FBS0FJQUtBSVlFUW9BSVFJTUFRc2dCVUVZYWlJQUlBSVFUQ0FBRU1jQ0lRRWdBQkJHQWtBZ0JBUkFJQVZCR0dvZ0FSQzlBUXdCQ3lBRlFSaHFJQUVRdkFFTElBVWdCVUVZYWhDdEFUWUNFQU5BSUFVZ0JVRVlhaEQ4QVRZQ0NDQUZRUkJxSUFWQkNHb1Fmd1JBSUFWQktHb2dCVUVRYWlJQUtBSUFMQUFBRU5FRElBQVE4Z0lNQVFVZ0JTZ0NLQ0VDSUFWQkdHb1FOaG9MQ3dzZ0JVRXdhaVFBSUFJTEJ3QWdBQ2dDREF2MUFnRUJmeU1BUWVBQ2F5SUFKQUFnQUNBQ05nTFFBaUFBSUFFMkF0Z0NJQUJCMEFGcUVFTWhCaUFBUVJCcUlnSWdBeEJNSUFJUWxBRkI0S0lEUWZxaUF5QUFRZUFCYWhEakFTQUNFRVlnQUVIQUFXb1FReUlESUFNUVR4QS9JQUFnQTBFQUVFQWlBVFlDdkFFZ0FDQUNOZ0lNSUFCQkFEWUNDQU5BQWtBZ0FFSFlBbW9nQUVIUUFtb1FqQUZGRFFBZ0FDZ0N2QUVnQXhBMUlBRnFSZ1JBSUFNUU5TRUNJQU1nQXhBMVFRRjBFRDhnQXlBREVFOFFQeUFBSUFJZ0EwRUFFRUFpQVdvMkFyd0JDeUFBUWRnQ2FoQm5RUkFnQVNBQVFid0JhaUFBUVFocVFRQWdCaUFBUVJCcUlBQkJER29nQUVIZ0FXb1F4QUlOQUNBQVFkZ0NhaEI4R2d3QkN3c2dBeUFBS0FLOEFTQUJheEEvSUFNUVBTRUNFRmtoQVNBQUlBVTJBZ0FnQWlBQklBQVF5QWRCQVVjRVFDQUVRUVEyQWdBTElBQkIyQUpxSUFCQjBBSnFFSE1FUUNBRUlBUW9BZ0JCQW5JMkFnQUxJQUFvQXRnQ0lRRWdBeEEyR2lBR0VEWWFJQUJCNEFKcUpBQWdBUXZVQXdFQmZpTUFRWUFEYXlJQUpBQWdBQ0FDTmdMd0FpQUFJQUUyQXZnQ0lBQkIyQUZxSUFNZ0FFSHdBV29nQUVIc0FXb2dBRUhvQVdvUXdRUWdBRUhJQVdvUVF5SUJJQUVRVHhBL0lBQWdBVUVBRUVBaUFqWUN4QUVnQUNBQVFTQnFOZ0ljSUFCQkFEWUNHQ0FBUVFFNkFCY2dBRUhGQURvQUZnTkFBa0FnQUVINEFtb2dBRUh3QW1vUWpBRkZEUUFnQUNnQ3hBRWdBUkExSUFKcVJnUkFJQUVRTlNFRElBRWdBUkExUVFGMEVEOGdBU0FCRUU4UVB5QUFJQU1nQVVFQUVFQWlBbW8yQXNRQkN5QUFRZmdDYWhCbklBQkJGMm9nQUVFV2FpQUNJQUJCeEFGcUlBQW9BdXdCSUFBb0F1Z0JJQUJCMkFGcUlBQkJJR29nQUVFY2FpQUFRUmhxSUFCQjhBRnFFTUFFRFFBZ0FFSDRBbW9RZkJvTUFRc0xBa0FnQUVIWUFXb1FOVVVOQUNBQUxRQVhSUTBBSUFBb0Fod2lBeUFBUVNCcWEwR2ZBVW9OQUNBQUlBTkJCR28yQWh3Z0F5QUFLQUlZTmdJQUN5QUFJQUlnQUNnQ3hBRWdCQkRKQnlBQUtRTUFJUVlnQlNBQUtRTUlOd01JSUFVZ0JqY0RBQ0FBUWRnQmFpQUFRU0JxSUFBb0Fod2dCQkNLQVNBQVFmZ0NhaUFBUWZBQ2FoQnpCRUFnQkNBRUtBSUFRUUp5TmdJQUN5QUFLQUw0QWlFQ0lBRVFOaG9nQUVIWUFXb1FOaG9nQUVHQUEyb2tBQ0FDQzcwREFDTUFRZkFDYXlJQUpBQWdBQ0FDTmdMZ0FpQUFJQUUyQXVnQ0lBQkJ5QUZxSUFNZ0FFSGdBV29nQUVIY0FXb2dBRUhZQVdvUXdRUWdBRUc0QVdvUVF5SUJJQUVRVHhBL0lBQWdBVUVBRUVBaUFqWUN0QUVnQUNBQVFSQnFOZ0lNSUFCQkFEWUNDQ0FBUVFFNkFBY2dBRUhGQURvQUJnTkFBa0FnQUVIb0Ftb2dBRUhnQW1vUWpBRkZEUUFnQUNnQ3RBRWdBUkExSUFKcVJnUkFJQUVRTlNFRElBRWdBUkExUVFGMEVEOGdBU0FCRUU4UVB5QUFJQU1nQVVFQUVFQWlBbW8yQXJRQkN5QUFRZWdDYWhCbklBQkJCMm9nQUVFR2FpQUNJQUJCdEFGcUlBQW9BdHdCSUFBb0F0Z0JJQUJCeUFGcUlBQkJFR29nQUVFTWFpQUFRUWhxSUFCQjRBRnFFTUFFRFFBZ0FFSG9BbW9RZkJvTUFRc0xBa0FnQUVISUFXb1FOVVVOQUNBQUxRQUhSUTBBSUFBb0Fnd2lBeUFBUVJCcWEwR2ZBVW9OQUNBQUlBTkJCR28yQWd3Z0F5QUFLQUlJTmdJQUN5QUZJQUlnQUNnQ3RBRWdCQkRLQnprREFDQUFRY2dCYWlBQVFSQnFJQUFvQWd3Z0JCQ0tBU0FBUWVnQ2FpQUFRZUFDYWhCekJFQWdCQ0FFS0FJQVFRSnlOZ0lBQ3lBQUtBTG9BaUVDSUFFUU5ob2dBRUhJQVdvUU5ob2dBRUh3QW1va0FDQUNDNzBEQUNNQVFmQUNheUlBSkFBZ0FDQUNOZ0xnQWlBQUlBRTJBdWdDSUFCQnlBRnFJQU1nQUVIZ0FXb2dBRUhjQVdvZ0FFSFlBV29Rd1FRZ0FFRzRBV29RUXlJQklBRVFUeEEvSUFBZ0FVRUFFRUFpQWpZQ3RBRWdBQ0FBUVJCcU5nSU1JQUJCQURZQ0NDQUFRUUU2QUFjZ0FFSEZBRG9BQmdOQUFrQWdBRUhvQW1vZ0FFSGdBbW9RakFGRkRRQWdBQ2dDdEFFZ0FSQTFJQUpxUmdSQUlBRVFOU0VESUFFZ0FSQTFRUUYwRUQ4Z0FTQUJFRThRUHlBQUlBTWdBVUVBRUVBaUFtbzJBclFCQ3lBQVFlZ0NhaEJuSUFCQkIyb2dBRUVHYWlBQ0lBQkJ0QUZxSUFBb0F0d0JJQUFvQXRnQklBQkJ5QUZxSUFCQkVHb2dBRUVNYWlBQVFRaHFJQUJCNEFGcUVNQUVEUUFnQUVIb0Ftb1FmQm9NQVFzTEFrQWdBRUhJQVdvUU5VVU5BQ0FBTFFBSFJRMEFJQUFvQWd3aUF5QUFRUkJxYTBHZkFVb05BQ0FBSUFOQkJHbzJBZ3dnQXlBQUtBSUlOZ0lBQ3lBRklBSWdBQ2dDdEFFZ0JCRExCemdDQUNBQVFjZ0JhaUFBUVJCcUlBQW9BZ3dnQkJDS0FTQUFRZWdDYWlBQVFlQUNhaEJ6QkVBZ0JDQUVLQUlBUVFKeU5nSUFDeUFBS0FMb0FpRUNJQUVRTmhvZ0FFSElBV29RTmhvZ0FFSHdBbW9rQUNBQ0M2QURBUUovSXdCQjRBSnJJZ0FrQUNBQUlBSTJBdEFDSUFBZ0FUWUMyQUlnQXhEV0FTRUdJQU1nQUVIZ0FXb1E5QUloQnlBQVFkQUJhaUFESUFCQnpBSnFFUE1DSUFCQndBRnFFRU1pQVNBQkVFOFFQeUFBSUFGQkFCQkFJZ0kyQXJ3QklBQWdBRUVRYWpZQ0RDQUFRUUEyQWdnRFFBSkFJQUJCMkFKcUlBQkIwQUpxRUl3QlJRMEFJQUFvQXJ3QklBRVFOU0FDYWtZRVFDQUJFRFVoQXlBQklBRVFOVUVCZEJBL0lBRWdBUkJQRUQ4Z0FDQURJQUZCQUJCQUlnSnFOZ0s4QVFzZ0FFSFlBbW9RWnlBR0lBSWdBRUc4QVdvZ0FFRUlhaUFBS0FMTUFpQUFRZEFCYWlBQVFSQnFJQUJCREdvZ0J4REVBZzBBSUFCQjJBSnFFSHdhREFFTEN3SkFJQUJCMEFGcUVEVkZEUUFnQUNnQ0RDSURJQUJCRUdwclFaOEJTZzBBSUFBZ0EwRUVhallDRENBRElBQW9BZ2cyQWdBTElBVWdBaUFBS0FLOEFTQUVJQVlRekFjM0F3QWdBRUhRQVdvZ0FFRVFhaUFBS0FJTUlBUVFpZ0VnQUVIWUFtb2dBRUhRQW1vUWN3UkFJQVFnQkNnQ0FFRUNjallDQUFzZ0FDZ0MyQUloQWlBQkVEWWFJQUJCMEFGcUVEWWFJQUJCNEFKcUpBQWdBZ3VnQXdFQ2Z5TUFRZUFDYXlJQUpBQWdBQ0FDTmdMUUFpQUFJQUUyQXRnQ0lBTVExZ0VoQmlBRElBQkI0QUZxRVBRQ0lRY2dBRUhRQVdvZ0F5QUFRY3dDYWhEekFpQUFRY0FCYWhCRElnRWdBUkJQRUQ4Z0FDQUJRUUFRUUNJQ05nSzhBU0FBSUFCQkVHbzJBZ3dnQUVFQU5nSUlBMEFDUUNBQVFkZ0NhaUFBUWRBQ2FoQ01BVVVOQUNBQUtBSzhBU0FCRURVZ0FtcEdCRUFnQVJBMUlRTWdBU0FCRURWQkFYUVFQeUFCSUFFUVR4QS9JQUFnQXlBQlFRQVFRQ0lDYWpZQ3ZBRUxJQUJCMkFKcUVHY2dCaUFDSUFCQnZBRnFJQUJCQ0dvZ0FDZ0N6QUlnQUVIUUFXb2dBRUVRYWlBQVFReHFJQWNReEFJTkFDQUFRZGdDYWhCOEdnd0JDd3NDUUNBQVFkQUJhaEExUlEwQUlBQW9BZ3dpQXlBQVFSQnFhMEdmQVVvTkFDQUFJQU5CQkdvMkFnd2dBeUFBS0FJSU5nSUFDeUFGSUFJZ0FDZ0N2QUVnQkNBR0VNOEhPd0VBSUFCQjBBRnFJQUJCRUdvZ0FDZ0NEQ0FFRUlvQklBQkIyQUpxSUFCQjBBSnFFSE1FUUNBRUlBUW9BZ0JCQW5JMkFnQUxJQUFvQXRnQ0lRSWdBUkEyR2lBQVFkQUJhaEEyR2lBQVFlQUNhaVFBSUFJTG9BTUJBbjhqQUVIZ0Ftc2lBQ1FBSUFBZ0FqWUMwQUlnQUNBQk5nTFlBaUFERU5ZQklRWWdBeUFBUWVBQmFoRDBBaUVISUFCQjBBRnFJQU1nQUVITUFtb1E4d0lnQUVIQUFXb1FReUlCSUFFUVR4QS9JQUFnQVVFQUVFQWlBallDdkFFZ0FDQUFRUkJxTmdJTUlBQkJBRFlDQ0FOQUFrQWdBRUhZQW1vZ0FFSFFBbW9RakFGRkRRQWdBQ2dDdkFFZ0FSQTFJQUpxUmdSQUlBRVFOU0VESUFFZ0FSQTFRUUYwRUQ4Z0FTQUJFRThRUHlBQUlBTWdBVUVBRUVBaUFtbzJBcndCQ3lBQVFkZ0NhaEJuSUFZZ0FpQUFRYndCYWlBQVFRaHFJQUFvQXN3Q0lBQkIwQUZxSUFCQkVHb2dBRUVNYWlBSEVNUUNEUUFnQUVIWUFtb1FmQm9NQVFzTEFrQWdBRUhRQVdvUU5VVU5BQ0FBS0FJTUlnTWdBRUVRYW10Qm53RktEUUFnQUNBRFFRUnFOZ0lNSUFNZ0FDZ0NDRFlDQUFzZ0JTQUNJQUFvQXJ3QklBUWdCaERSQnpjREFDQUFRZEFCYWlBQVFSQnFJQUFvQWd3Z0JCQ0tBU0FBUWRnQ2FpQUFRZEFDYWhCekJFQWdCQ0FFS0FJQVFRSnlOZ0lBQ3lBQUtBTFlBaUVDSUFFUU5ob2dBRUhRQVdvUU5ob2dBRUhnQW1va0FDQUNDNkFEQVFKL0l3QkI0QUpySWdBa0FDQUFJQUkyQXRBQ0lBQWdBVFlDMkFJZ0F4RFdBU0VHSUFNZ0FFSGdBV29ROUFJaEJ5QUFRZEFCYWlBRElBQkJ6QUpxRVBNQ0lBQkJ3QUZxRUVNaUFTQUJFRThRUHlBQUlBRkJBQkJBSWdJMkFyd0JJQUFnQUVFUWFqWUNEQ0FBUVFBMkFnZ0RRQUpBSUFCQjJBSnFJQUJCMEFKcUVJd0JSUTBBSUFBb0Fyd0JJQUVRTlNBQ2FrWUVRQ0FCRURVaEF5QUJJQUVRTlVFQmRCQS9JQUVnQVJCUEVEOGdBQ0FESUFGQkFCQkFJZ0pxTmdLOEFRc2dBRUhZQW1vUVp5QUdJQUlnQUVHOEFXb2dBRUVJYWlBQUtBTE1BaUFBUWRBQmFpQUFRUkJxSUFCQkRHb2dCeERFQWcwQUlBQkIyQUpxRUh3YURBRUxDd0pBSUFCQjBBRnFFRFZGRFFBZ0FDZ0NEQ0lESUFCQkVHcHJRWjhCU2cwQUlBQWdBMEVFYWpZQ0RDQURJQUFvQWdnMkFnQUxJQVVnQWlBQUtBSzhBU0FFSUFZUTBnYzJBZ0FnQUVIUUFXb2dBRUVRYWlBQUtBSU1JQVFRaWdFZ0FFSFlBbW9nQUVIUUFtb1Fjd1JBSUFRZ0JDZ0NBRUVDY2pZQ0FBc2dBQ2dDMkFJaEFpQUJFRFlhSUFCQjBBRnFFRFlhSUFCQjRBSnFKQUFnQWd2dkFRRUJmeU1BUVNCcklnWWtBQ0FHSUFFMkFoZ0NRQ0FES0FJRVFRRnhSUVJBSUFaQmZ6WUNBQ0FHSUFBZ0FTQUNJQU1nQkNBR0lBQW9BZ0FvQWhBUkNRQWlBVFlDR0FKQUFrQUNRQ0FHS0FJQURnSUFBUUlMSUFWQkFEb0FBQXdEQ3lBRlFRRTZBQUFNQWdzZ0JVRUJPZ0FBSUFSQkJEWUNBQXdCQ3lBR0lBTVFUQ0FHRUpRQklRRWdCaEJHSUFZZ0F4Qk1JQVlReFFJaEFDQUdFRVlnQmlBQUVMMEJJQVpCREhJZ0FCQzhBU0FGSUFaQkdHb2lBeUFDSUFZZ0F5QUJJQVJCQVJESEF5QUdSam9BQUNBR0tBSVlJUUVEUUNBRFFReHJFRFlpQXlBR1J3MEFDd3NnQmtFZ2FpUUFJQUVMOVFJQkFYOGpBRUdRQW1zaUFDUUFJQUFnQWpZQ2dBSWdBQ0FCTmdLSUFpQUFRZEFCYWhCRElRWWdBRUVRYWlJQ0lBTVFUQ0FDRUprQlFlQ2lBMEg2b2dNZ0FFSGdBV29RL1FFZ0FoQkdJQUJCd0FGcUVFTWlBeUFERUU4UVB5QUFJQU5CQUJCQUlnRTJBcndCSUFBZ0FqWUNEQ0FBUVFBMkFnZ0RRQUpBSUFCQmlBSnFJQUJCZ0FKcUVJMEJSUTBBSUFBb0Fyd0JJQU1RTlNBQmFrWUVRQ0FERURVaEFpQURJQU1RTlVFQmRCQS9JQU1nQXhCUEVEOGdBQ0FDSUFOQkFCQkFJZ0ZxTmdLOEFRc2dBRUdJQW1vUWFFRVFJQUVnQUVHOEFXb2dBRUVJYWtFQUlBWWdBRUVRYWlBQVFReHFJQUJCNEFGcUVNWUNEUUFnQUVHSUFtb1FmUm9NQVFzTElBTWdBQ2dDdkFFZ0FXc1FQeUFERUQwaEFoQlpJUUVnQUNBRk5nSUFJQUlnQVNBQUVNZ0hRUUZIQkVBZ0JFRUVOZ0lBQ3lBQVFZZ0NhaUFBUVlBQ2FoQjBCRUFnQkNBRUtBSUFRUUp5TmdJQUN5QUFLQUtJQWlFQklBTVFOaG9nQmhBMkdpQUFRWkFDYWlRQUlBRUwxQU1CQVg0akFFR2dBbXNpQUNRQUlBQWdBallDa0FJZ0FDQUJOZ0tZQWlBQVFlQUJhaUFESUFCQjhBRnFJQUJCN3dGcUlBQkI3Z0ZxRU1RRUlBQkIwQUZxRUVNaUFTQUJFRThRUHlBQUlBRkJBQkJBSWdJMkFzd0JJQUFnQUVFZ2FqWUNIQ0FBUVFBMkFoZ2dBRUVCT2dBWElBQkJ4UUE2QUJZRFFBSkFJQUJCbUFKcUlBQkJrQUpxRUkwQlJRMEFJQUFvQXN3QklBRVFOU0FDYWtZRVFDQUJFRFVoQXlBQklBRVFOVUVCZEJBL0lBRWdBUkJQRUQ4Z0FDQURJQUZCQUJCQUlnSnFOZ0xNQVFzZ0FFR1lBbW9RYUNBQVFSZHFJQUJCRm1vZ0FpQUFRY3dCYWlBQUxBRHZBU0FBTEFEdUFTQUFRZUFCYWlBQVFTQnFJQUJCSEdvZ0FFRVlhaUFBUWZBQmFoRERCQTBBSUFCQm1BSnFFSDBhREFFTEN3SkFJQUJCNEFGcUVEVkZEUUFnQUMwQUYwVU5BQ0FBS0FJY0lnTWdBRUVnYW10Qm53RktEUUFnQUNBRFFRUnFOZ0ljSUFNZ0FDZ0NHRFlDQUFzZ0FDQUNJQUFvQXN3QklBUVF5UWNnQUNrREFDRUdJQVVnQUNrRENEY0RDQ0FGSUFZM0F3QWdBRUhnQVdvZ0FFRWdhaUFBS0FJY0lBUVFpZ0VnQUVHWUFtb2dBRUdRQW1vUWRBUkFJQVFnQkNnQ0FFRUNjallDQUFzZ0FDZ0NtQUloQWlBQkVEWWFJQUJCNEFGcUVEWWFJQUJCb0FKcUpBQWdBZ3U5QXdBakFFR1FBbXNpQUNRQUlBQWdBallDZ0FJZ0FDQUJOZ0tJQWlBQVFkQUJhaUFESUFCQjRBRnFJQUJCM3dGcUlBQkIzZ0ZxRU1RRUlBQkJ3QUZxRUVNaUFTQUJFRThRUHlBQUlBRkJBQkJBSWdJMkFyd0JJQUFnQUVFUWFqWUNEQ0FBUVFBMkFnZ2dBRUVCT2dBSElBQkJ4UUE2QUFZRFFBSkFJQUJCaUFKcUlBQkJnQUpxRUkwQlJRMEFJQUFvQXJ3QklBRVFOU0FDYWtZRVFDQUJFRFVoQXlBQklBRVFOVUVCZEJBL0lBRWdBUkJQRUQ4Z0FDQURJQUZCQUJCQUlnSnFOZ0s4QVFzZ0FFR0lBbW9RYUNBQVFRZHFJQUJCQm1vZ0FpQUFRYndCYWlBQUxBRGZBU0FBTEFEZUFTQUFRZEFCYWlBQVFSQnFJQUJCREdvZ0FFRUlhaUFBUWVBQmFoRERCQTBBSUFCQmlBSnFFSDBhREFFTEN3SkFJQUJCMEFGcUVEVkZEUUFnQUMwQUIwVU5BQ0FBS0FJTUlnTWdBRUVRYW10Qm53RktEUUFnQUNBRFFRUnFOZ0lNSUFNZ0FDZ0NDRFlDQUFzZ0JTQUNJQUFvQXJ3QklBUVF5Z2M1QXdBZ0FFSFFBV29nQUVFUWFpQUFLQUlNSUFRUWlnRWdBRUdJQW1vZ0FFR0FBbW9RZEFSQUlBUWdCQ2dDQUVFQ2NqWUNBQXNnQUNnQ2lBSWhBaUFCRURZYUlBQkIwQUZxRURZYUlBQkJrQUpxSkFBZ0FndTlBd0FqQUVHUUFtc2lBQ1FBSUFBZ0FqWUNnQUlnQUNBQk5nS0lBaUFBUWRBQmFpQURJQUJCNEFGcUlBQkIzd0ZxSUFCQjNnRnFFTVFFSUFCQndBRnFFRU1pQVNBQkVFOFFQeUFBSUFGQkFCQkFJZ0kyQXJ3QklBQWdBRUVRYWpZQ0RDQUFRUUEyQWdnZ0FFRUJPZ0FISUFCQnhRQTZBQVlEUUFKQUlBQkJpQUpxSUFCQmdBSnFFSTBCUlEwQUlBQW9BcndCSUFFUU5TQUNha1lFUUNBQkVEVWhBeUFCSUFFUU5VRUJkQkEvSUFFZ0FSQlBFRDhnQUNBRElBRkJBQkJBSWdKcU5nSzhBUXNnQUVHSUFtb1FhQ0FBUVFkcUlBQkJCbW9nQWlBQVFid0JhaUFBTEFEZkFTQUFMQURlQVNBQVFkQUJhaUFBUVJCcUlBQkJER29nQUVFSWFpQUFRZUFCYWhEREJBMEFJQUJCaUFKcUVIMGFEQUVMQ3dKQUlBQkIwQUZxRURWRkRRQWdBQzBBQjBVTkFDQUFLQUlNSWdNZ0FFRVFhbXRCbndGS0RRQWdBQ0FEUVFScU5nSU1JQU1nQUNnQ0NEWUNBQXNnQlNBQ0lBQW9BcndCSUFRUXl3YzRBZ0FnQUVIUUFXb2dBRUVRYWlBQUtBSU1JQVFRaWdFZ0FFR0lBbW9nQUVHQUFtb1FkQVJBSUFRZ0JDZ0NBRUVDY2pZQ0FBc2dBQ2dDaUFJaEFpQUJFRFlhSUFCQjBBRnFFRFlhSUFCQmtBSnFKQUFnQWd1VkF3RUJmeU1BUVpBQ2F5SUFKQUFnQUNBQ05nS0FBaUFBSUFFMkFvZ0NJQU1RMWdFaEJpQUFRZEFCYWlBRElBQkIvd0ZxRVBZQ0lBQkJ3QUZxRUVNaUFTQUJFRThRUHlBQUlBRkJBQkJBSWdJMkFyd0JJQUFnQUVFUWFqWUNEQ0FBUVFBMkFnZ0RRQUpBSUFCQmlBSnFJQUJCZ0FKcUVJMEJSUTBBSUFBb0Fyd0JJQUVRTlNBQ2FrWUVRQ0FCRURVaEF5QUJJQUVRTlVFQmRCQS9JQUVnQVJCUEVEOGdBQ0FESUFGQkFCQkFJZ0pxTmdLOEFRc2dBRUdJQW1vUWFDQUdJQUlnQUVHOEFXb2dBRUVJYWlBQUxBRC9BU0FBUWRBQmFpQUFRUkJxSUFCQkRHcEI0S0lERU1ZQ0RRQWdBRUdJQW1vUWZSb01BUXNMQWtBZ0FFSFFBV29RTlVVTkFDQUFLQUlNSWdNZ0FFRVFhbXRCbndGS0RRQWdBQ0FEUVFScU5nSU1JQU1nQUNnQ0NEWUNBQXNnQlNBQ0lBQW9BcndCSUFRZ0JoRE1CemNEQUNBQVFkQUJhaUFBUVJCcUlBQW9BZ3dnQkJDS0FTQUFRWWdDYWlBQVFZQUNhaEIwQkVBZ0JDQUVLQUlBUVFKeU5nSUFDeUFBS0FLSUFpRUNJQUVRTmhvZ0FFSFFBV29RTmhvZ0FFR1FBbW9rQUNBQ0M1VURBUUYvSXdCQmtBSnJJZ0FrQUNBQUlBSTJBb0FDSUFBZ0FUWUNpQUlnQXhEV0FTRUdJQUJCMEFGcUlBTWdBRUgvQVdvUTlnSWdBRUhBQVdvUVF5SUJJQUVRVHhBL0lBQWdBVUVBRUVBaUFqWUN2QUVnQUNBQVFSQnFOZ0lNSUFCQkFEWUNDQU5BQWtBZ0FFR0lBbW9nQUVHQUFtb1FqUUZGRFFBZ0FDZ0N2QUVnQVJBMUlBSnFSZ1JBSUFFUU5TRURJQUVnQVJBMVFRRjBFRDhnQVNBQkVFOFFQeUFBSUFNZ0FVRUFFRUFpQW1vMkFyd0JDeUFBUVlnQ2FoQm9JQVlnQWlBQVFid0JhaUFBUVFocUlBQXNBUDhCSUFCQjBBRnFJQUJCRUdvZ0FFRU1ha0hnb2dNUXhnSU5BQ0FBUVlnQ2FoQjlHZ3dCQ3dzQ1FDQUFRZEFCYWhBMVJRMEFJQUFvQWd3aUF5QUFRUkJxYTBHZkFVb05BQ0FBSUFOQkJHbzJBZ3dnQXlBQUtBSUlOZ0lBQ3lBRklBSWdBQ2dDdkFFZ0JDQUdFTThIT3dFQUlBQkIwQUZxSUFCQkVHb2dBQ2dDRENBRUVJb0JJQUJCaUFKcUlBQkJnQUpxRUhRRVFDQUVJQVFvQWdCQkFuSTJBZ0FMSUFBb0FvZ0NJUUlnQVJBMkdpQUFRZEFCYWhBMkdpQUFRWkFDYWlRQUlBSUxsUU1CQVg4akFFR1FBbXNpQUNRQUlBQWdBallDZ0FJZ0FDQUJOZ0tJQWlBREVOWUJJUVlnQUVIUUFXb2dBeUFBUWY4QmFoRDJBaUFBUWNBQmFoQkRJZ0VnQVJCUEVEOGdBQ0FCUVFBUVFDSUNOZ0s4QVNBQUlBQkJFR28yQWd3Z0FFRUFOZ0lJQTBBQ1FDQUFRWWdDYWlBQVFZQUNhaENOQVVVTkFDQUFLQUs4QVNBQkVEVWdBbXBHQkVBZ0FSQTFJUU1nQVNBQkVEVkJBWFFRUHlBQklBRVFUeEEvSUFBZ0F5QUJRUUFRUUNJQ2FqWUN2QUVMSUFCQmlBSnFFR2dnQmlBQ0lBQkJ2QUZxSUFCQkNHb2dBQ3dBL3dFZ0FFSFFBV29nQUVFUWFpQUFRUXhxUWVDaUF4REdBZzBBSUFCQmlBSnFFSDBhREFFTEN3SkFJQUJCMEFGcUVEVkZEUUFnQUNnQ0RDSURJQUJCRUdwclFaOEJTZzBBSUFBZ0EwRUVhallDRENBRElBQW9BZ2cyQWdBTElBVWdBaUFBS0FLOEFTQUVJQVlRMFFjM0F3QWdBRUhRQVdvZ0FFRVFhaUFBS0FJTUlBUVFpZ0VnQUVHSUFtb2dBRUdBQW1vUWRBUkFJQVFnQkNnQ0FFRUNjallDQUFzZ0FDZ0NpQUloQWlBQkVEWWFJQUJCMEFGcUVEWWFJQUJCa0FKcUpBQWdBZ3VWQXdFQmZ5TUFRWkFDYXlJQUpBQWdBQ0FDTmdLQUFpQUFJQUUyQW9nQ0lBTVExZ0VoQmlBQVFkQUJhaUFESUFCQi93RnFFUFlDSUFCQndBRnFFRU1pQVNBQkVFOFFQeUFBSUFGQkFCQkFJZ0kyQXJ3QklBQWdBRUVRYWpZQ0RDQUFRUUEyQWdnRFFBSkFJQUJCaUFKcUlBQkJnQUpxRUkwQlJRMEFJQUFvQXJ3QklBRVFOU0FDYWtZRVFDQUJFRFVoQXlBQklBRVFOVUVCZEJBL0lBRWdBUkJQRUQ4Z0FDQURJQUZCQUJCQUlnSnFOZ0s4QVFzZ0FFR0lBbW9RYUNBR0lBSWdBRUc4QVdvZ0FFRUlhaUFBTEFEL0FTQUFRZEFCYWlBQVFSQnFJQUJCREdwQjRLSURFTVlDRFFBZ0FFR0lBbW9RZlJvTUFRc0xBa0FnQUVIUUFXb1FOVVVOQUNBQUtBSU1JZ01nQUVFUWFtdEJud0ZLRFFBZ0FDQURRUVJxTmdJTUlBTWdBQ2dDQ0RZQ0FBc2dCU0FDSUFBb0Fyd0JJQVFnQmhEU0J6WUNBQ0FBUWRBQmFpQUFRUkJxSUFBb0Fnd2dCQkNLQVNBQVFZZ0NhaUFBUVlBQ2FoQjBCRUFnQkNBRUtBSUFRUUp5TmdJQUN5QUFLQUtJQWlFQ0lBRVFOaG9nQUVIUUFXb1FOaG9nQUVHUUFtb2tBQ0FDQys4QkFRRi9Jd0JCSUdzaUJpUUFJQVlnQVRZQ0dBSkFJQU1vQWdSQkFYRkZCRUFnQmtGL05nSUFJQVlnQUNBQklBSWdBeUFFSUFZZ0FDZ0NBQ2dDRUJFSkFDSUJOZ0lZQWtBQ1FBSkFJQVlvQWdBT0FnQUJBZ3NnQlVFQU9nQUFEQU1MSUFWQkFUb0FBQXdDQ3lBRlFRRTZBQUFnQkVFRU5nSUFEQUVMSUFZZ0F4Qk1JQVlRbVFFaEFTQUdFRVlnQmlBREVFd2dCaERIQWlFQUlBWVFSaUFHSUFBUXZRRWdCa0VNY2lBQUVMd0JJQVVnQmtFWWFpSURJQUlnQmlBRElBRWdCRUVCRU1rRElBWkdPZ0FBSUFZb0FoZ2hBUU5BSUFOQkRHc1FOaUlESUFaSERRQUxDeUFHUVNCcUpBQWdBUXNMMnNJRFRBQkJnQWdMa1NwbWMyVjBBQ1Z6THlWekFDVnpMaVZ6QUhabFkzUnZjZ0JrWldKMVp3QjNZZ0FsWStLRXVlKzRqMXQzWldKaGNtdHBkQzFwYm1adk9sMEFKVzB0SldRdEpWa3RKVWd0SlUwdEpWTUFUV0Z5YTJWeUlFOUxMZ0FzQUVGemMyVnlkR2x2YmlCZ2VDQStQU0J0VFdsdVdHQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUhkcFpIUm9JRDQ5SURWZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0IzYVdSMGFDQStQU0F4WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdkMmxrZEdnZ1BpQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2NIbHlZVzFwWkMwK2MybDZaU2dwSUQ0Z01HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUcxVGRHRnlkRlJwYldVZ1BqMGdNR0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lDaHpjbU5mZDJsa2RHZ2xNaWtnUFQwZ01HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdsdExuZHBaSFJvS0NrZ1BUMGdhVzB1YzNSbGNDZ3BMM05wZW1WdlppaG1iRzloZENsZ0lHWmhhV3hsWkNCcGJpQUFJQWtLRFFCRmNuSnZjam9nYldGc2JHOWpDZ0JGY25KdmNpQXhPaUJwWTNCSFpYUkpibWwwV0hjeVdHTUtBQ0E5UFQwZ2JXRjBjbWw0SUNnbFpDd2xaQ2tnUFQwOUNnQWdQVDA5SUhabFkzUnZjaUFvSldRcElEMDlQUW9BUHo4L0lERUtBRVZ5Y205eU9pQnNZV0psYkdsdVp5QjNiM0pySUc5MlpYSm1iRzkzTGdvQUl5TWpJRVpsWVhSMWNtVWdZMkZ1Wkdsa1lYUmxjeUJtYjNJZ2RISmhZMnRwYm1jZ1lYSmxJRzkyWlhKbWJHOTNMZ29BWVhKbmJFTmhiV1Z5WVVaeWRYTjBkVzFTU0NncE9pQmhjbEJoY21GdFJHVmpiMjF3VFdGMEtDa2dhVzVrYVdOaGRHVmtJSEJoY21GdFpYUmxjaUJsY25KdmNpNEtBR3R3YlVSbGJHVjBaVkpsWmtSaGRHRlRaWFFvS1RvZ1RsVk1UQ0J5WldaRVlYUmhVMlYwVUhSeUwzSmxaa2x0WVdkbExnb0FVM1JoY25RZ2RISmhZMnRwYm1kZmRHaHlaV0ZrSUNNbFpDNEtBRTkxZENCdlppQnRaVzF2Y25raElRb0FSR0YwWVNCdWRXMGdaWEp5YjNJaElRb0FZMjlzYjNJNklDTTJOalEwTURBN0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVptT1RrN0lHSnZjbVJsY2kxeVlXUnBkWE02SURSd2VEc2djR0ZrWkdsdVp6b2dNbkI0QUhjQVNVUWdZV3h5WldGa2VTQmxlR2x6ZEhNQUpYTWxjd0FsY3k0bGN3QjJaV04wYjNJQUwzTnlZeTlsYlhOamNtbHdkR1Z1TDFkbFlrRlNTMmwwVEdsaUwyeHBZaTlUVWtNdlMxQk5MMFp5WldGclRXRjBZMmhsY2k5a1pYUmxZM1J2Y25NdmIzSnBaVzUwWVhScGIyNWZZWE56YVdkdWJXVnVkQzVqY0hBQUwzTnlZeTlsYlhOamNtbHdkR1Z1TDFkbFlrRlNTMmwwVEdsaUwyeHBZaTlUVWtNdlMxQk5MMFp5WldGclRXRjBZMmhsY2k5bWNtRnRaWGR2Y21zdmRHbHRaWEp6TG1Od2NBQXZjM0pqTDJWdGMyTnlhWEIwWlc0dlYyVmlRVkpMYVhSTWFXSXZiR2xpTDFOU1F5OUxVRTB2Um5KbFlXdE5ZWFJqYUdWeUwyUmxkR1ZqZEc5eWN5OW9ZWEp5YVhNdVkzQndBQzl6Y21NdlpXMXpZM0pwY0hSbGJpOVhaV0pCVWt0cGRFeHBZaTlzYVdJdlUxSkRMMHRRVFM5R2NtVmhhMDFoZEdOb1pYSXZaR1YwWldOMGIzSnpMMFJ2UjE5elkyRnNaVjlwYm5aaGNtbGhiblJmWkdWMFpXTjBiM0l1WTNCd0FDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdmJXRjBZMmhsY25NdmFHOTFaMmhmYzJsdGFXeGhjbWwwZVY5MmIzUnBibWN1WTNCd0FDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdlpuSmhiV1YzYjNKckwybHRZV2RsTG1Od2NBQXZjM0pqTDJWdGMyTnlhWEIwWlc0dlYyVmlRVkpMYVhSTWFXSXZiR2xpTDFOU1F5OUxVRTB2Um5KbFlXdE5ZWFJqYUdWeUwyUmxkR1ZqZEc5eWN5OW5ZWFZ6YzJsaGJsOXpZMkZzWlY5emNHRmpaVjl3ZVhKaGJXbGtMbU53Y0FBdmMzSmpMMlZ0YzJOeWFYQjBaVzR2VjJWaVFWSkxhWFJNYVdJdmJHbGlMMU5TUXk5TFVFMHZSbkpsWVd0TllYUmphR1Z5TDJSbGRHVmpkRzl5Y3k5d2VYSmhiV2xrTG1Od2NBQnBibVp2QUVWeWNtOXlPaUJwWTNCSFpYUktYMVZmV0dNQWQySUFjbUlBUVZKZlVFbFlSVXhmUms5U1RVRlVYMUpIUWdCUVlYUjBaWEp1SUdWNGRISmhZM1JwYjI0Z1ptRnBiR1ZrTGdCQmMzTmxjblJwYjI0Z1lIQjVjbUZ0YVdSZ0lHWmhhV3hsWkNCcGJpQUFWSEpoWTJ0cGJtY2dkR2h5WldGa0lEMGdKV1FLQUZOSldrVWdQU0FsWkN3Z0pXUUtBRVZ5Y205eUlESTZJR2xqY0VkbGRFbHVhWFJZZHpKWVl3b0FQejgvSURJS0FFVnljbTl5T2lCMWJuTjFjSEJ2Y25SbFpDQndhWGhsYkNCbWIzSnRZWFF1Q2dCVmJtdHViM2R1SUc5eUlIVnVjM1Z3Y0c5eWRHVmtJR3hoWW1Wc2FXNW5JSFJvY21WemFHOXNaQ0J0YjJSbElISmxjWFZsYzNSbFpDNGdVMlYwSUhSdklHMWhiblZoYkM0S0FHdHdiVVJsYkdWMFpWSmxaa1JoZEdGVFpYUW9LVG9nTUNCNGMybDZaUzk1YzJsNlpTOWtjR2t1Q2dCRmNuSnZjaUFvSldRcE9pQjFibUZpYkdVZ2RHOGdiM0JsYmlCallXMWxjbUVnY0dGeVlXMWxkR1Z5Y3lCbWFXeGxJQ0lsY3lJZ1ptOXlJSGR5YVhScGJtY3VDZ0JGY25KdmNqb2dUbFZNVENCd1lYUjBTR0Z1Wkd4bExnb0FSVzVrSUhSeVlXTnJhVzVuWDNSb2NtVmhaQ0FqSldRdUNnQlBkWFFnYjJZZ2JXVnRiM0o1SVNFS0FISUFMM055WXk5bGJYTmpjbWx3ZEdWdUwxZGxZa0ZTUzJsMFRHbGlMMnhwWWk5VFVrTXZTMUJOTDBaeVpXRnJUV0YwWTJobGNpOXRZWFJqYUdWeWN5OW1jbVZoYXk1b0FIZGhjbTVwYm1jQUlDVXhNR2NBUW5WcGJHUWdVSGx5WVcxcFpBQWxOR1FBZDJJQWNtSUFKV1B3bjVxcFczZGxZbUZ5YTJsMExXVnljbTl5T2wwQVFWSmZVRWxZUlV4ZlJrOVNUVUZVWDBKSFVnQk5RVTVWUVV3QVIyVnVaWEpwWXlCbGNuSnZjaUJrZFhKcGJtY2diV0YwWTJocGJtY2djR2hoYzJVdUFDQnNhVzVsSUFBbGN5VnpDZ0JHYVd4bElHOXdaVzRnWlhKeWIzSXVJQ1Z6Q2dCRWFYTjBiM0owYVc5dUlHWmhZM1J2Y2pvZ2F6RTlKVEV1TVRCbUxDQnJNajBsTVM0eE1HWXNJSEF4UFNVeExqRXdaaXdnY0RJOUpURXVNVEJtQ2dCRmNuSnZjam9nYldGc2JHOWpDZ0JGY25KdmNpQXpPaUJwWTNCSFpYUkpibWwwV0hjeVdHTUtBRVZ5Y205eUlHbGpjRWRsZEVwZlZWOVRDZ0E5UFQwOVBUMGdKWE1nUFQwOVBUMDlQVDBLQUQ4L1B5QXpDZ0JGY25KdmNqb2dZMkZ1SjNRZ2JHOWhaQ0J3WVhSMFpYSnVJR1p5YjIwZ1RsVk1UQ0JpZFdabVpYSXVDZ0JyY0cxVFpYUlNaV1pFWVhSaFUyVjBLQ2s2SUU1VlRFd2dhM0J0U0dGdVpHeGxMMlpwYkdWdVlXMWxMZ29BUlhKeWIzSWdjMkYyYVc1bklHWmxZWFIxY21VZ2JXRndPaUJsY25KdmNpQjNjbWwwYVc1bklHUmhkR0V1Q2dCUGRYUWdiMllnYldWdGIzSjVJU0VLQUdOdmJHOXlPaUFqWm1abVptWm1PeUJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1Zd01UQXhPeUJpYjNKa1pYSXRjbUZrYVhWek9pQTBjSGc3SUhCaFpHUnBibWM2SURKd2VBQmxjbkp2Y2dCR2NtVmhheUJtWldGMGRYSmxjeUF0SUNWa0FISmlBRUZWVkU5ZlRVVkVTVUZPQUVGU1gxQkpXRVZNWDBaUFVrMUJWRjlTUjBKQkFFbHVjM1ZtWm1samFXVnVkQ0JqYjI1MGNtRnpkQ0JrZFhKcGJtY2diV0YwWTJocGJtY3VBQ1UzTGpWbUlBQWdiR2x1WlNBQVJYSnliM0lnYjNCbGJtbHVaeUJtYVd4bElDY2xjeWM2SUFBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWVEMGxaaXdnWm5rOUpXWXNJSGd3UFNWbUxDQjVNRDBsWml3Z2N6MGxaZ29BUlhKeWIzSWdORG9nYVdOd1IyVjBTVzVwZEZoM01saGpDZ0JGY25KdmNpQnBZM0JIWlhSVlgyWnliMjFmV0Y5aWVWOU5ZWFJZTWxVS0FFVnljbTl5SUdGc2JHOWpZWFJwYm1jZ2JXVnRiM0o1TGdvQVJYSnliM0k2SUc5MWRDQnZaaUJ0WlcxdmNua3VDZ0JGY25KdmNqb2dWVzVoWW14bElIUnZJRzl3Wlc0Z1ptbHNaU0FuSlhNbklHWnZjaUIzY21sMGFXNW5MZ29BUlhKeWIzSTZJSFZ1WVdKc1pTQjBieUJ2Y0dWdUlHWnBiR1VnSnlWekpYTW5JR1p2Y2lCeVpXRmthVzVuTGdvQVQzVjBJRzltSUcxbGJXOXllU0VoQ2dCVGRHVndJSE5wZW1VZ2JYVnpkQ0JpWlNCbGNYVmhiQ0IwYnlCM2FXUjBhQ0JtYjNJZ2JtOTNBRVY0ZEhKaFkzUWdSbVZoZEhWeVpYTUFKWE1BVjJsa2RHZ2dZMkZ1Ym05MElHSmxJSHBsY204QVUyOTFjbU5sSUhkcFpIUm9JRzExYzNRZ1ltVWdaWFpsYmdCSmJXRm5aU0JwY3lCMGIyOGdjMjFoYkd3QWVDQnZkWFFnYjJZZ2NtRnVaMlVBUTJ4dlkyc2dhR0Z6SUc1dmRDQmlaV1Z1SUhOMFlYSjBaV1FBVUhseVlXMXBaQ0JwY3lCdWIzUWdZV3hzYjJOaGRHVmtBSEppQUNWajRwcWc3N2lQVzNkbFltRnlhMmwwTFhkaGNtNDZYUUJCVlZSUFgwOVVVMVVBUVZKZlVFbFlSVXhmUms5U1RVRlVYMEpIVWtFQWQzQWdiWFZ6ZENCaVpTQmhkQ0JzWldGemRDQXhBRUpoY21OdlpHVWdiV0YwWTJocGJtY2dZMjkxYkdRZ2JtOTBJR1pwYm1RZ1kyOXljbVZqZENCaVlYSmpiMlJsSUd4dlkyRjBiM0lnY0dGMGRHVnliaTRBV3lWelhTQUFPaUFBSlhNbGN3b0FSR2x6ZEc5eWRHbHZiaUJtWVdOMGIzSWdQU0FsWmlBbFppQWxaaUFsWmlBbFppQWxaZ29BUlhKeWIzSWdOVG9nYVdOd1IyVjBTVzVwZEZoM01saGpDZ0JGY25KdmNpQnBZM0JIWlhSWVkxOW1jbTl0WDFoM1gySjVYMDFoZEZoM01saGpDZ0JGY25KdmNpQnlaV0ZrYVc1bklHbHRZV2RsVTJWMExnb0FSWEp5YjNJZ2QyaHBiR1VnWVdSa2FXNW5JSEpsWm1WeVpXNWpaU0JrWVhSaElITmxkRG9nYTNCdFIyVnVVbVZtUkdGMFlWTmxkQ2dwSUdaaGFXeGxaQzRLQUVWeWNtOXlJRzl3Wlc1cGJtY2dKeVZ6Snk0S0FFTmhiaWQwSUc5d1pXNGdTbEJGUnlCbWFXeGxJQ2NsY3ljS0FFOTFkQ0J2WmlCdFpXMXZjbmtoSVFvQVVHRjBkR1Z5YmlCRVlYUmhJSEpsWVdRZ1pYSnliM0loSVFvQVVtVmhaQ0JsY25KdmNpRWhDZ0JqYjJ4dmNqb2dJemMzTkRRd01Ec2dZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWm1ZNU9Uc2dZbTl5WkdWeUxYSmhaR2wxY3pvZ05IQjRPeUJ3WVdSa2FXNW5PaUF5Y0hnQVd5VnpYU0JiSlhOZElGc2xjMTBnT2lCR2IzVnVaQ0FsWkNCbVpXRjBkWEpsY3dBbFpnQjNZZ0JCVWw5UVNWaEZURjlHVDFKTlFWUmZRVUpIVWdCUWVYSmhiV2xrSUdseklFNVZURXdBUVZWVVQxOUJSRUZRVkVsV1JRQkNZWEpqYjJSbElHMWhkR05vYVc1bklHVnljbTl5SUdSbGRHVmpkR2x2Ymk5amIzSnlaV04wYVc5dUlHWnZkVzVrSUhWdWNtVmpiM1psY21GaWJHVWdaWEp5YjNJdUFFVnljbTl5SUdOeVpXRjBhVzVuSUdaMWJHd2dabWxzWlNCd1lYUm9JR1p5YjIwZ0p5VnpKeUJoYm1RZ0p5VnpKd0JCYzNObGNuUnBiMjRnWUhnZ1BDQnRUV0Y0V0dBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZR2hsYVdkb2RDQStQU0ExWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdhR1ZwWjJoMElENDlJREZnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQm9aV2xuYUhRZ1BpQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2JVbHRZV2RsY3k1emFYcGxLQ2tnUGlBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnZUNBK1BTQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2JWTjBiM0JVYVcxbElENDlJREJnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQmtjM1FnSVQwZ01HQWdabUZwYkdWa0lHbHVJQUFsY3lWekNnQkVhWE4wYjNKMGFXOXVJR1poWTNSdmNpQTlJQ1ZtSUNWbUlDVm1JQ1ZtSUNWbUNnQkZjbkp2Y2lBOUlDVm1DZ0JGY25KdmNpQTJPaUJwWTNCSFpYUkpibWwwV0hjeVdHTUtBQ0FnSUNBZ0lDQWdJRWx0WVdkbFUybDZaU0E5SUNVM1pGdHdhWGhsYkYwS0FEMDlQVDA5UFQwOVBTQWxaQ0E5UFQwOVBUMDlQVDA5UFFvQVNXMWhaMlZ6WlhRZ1kyOXVkR0ZwYm5NZ0pXUWdhVzFoWjJWekxnb0FSWEp5YjNJNklGVnVZV0pzWlNCMGJ5QnZjR1Z1SUdacGJHVWdKeVZ6SnlCbWIzSWdjbVZoWkdsdVp5NEtBRVZ5Y205eUlDZ2xaQ2s2SUhWdVlXSnNaU0IwYnlCdmNHVnVJR05oYldWeVlTQndZWEpoYldWMFpYSnpJR1pwYkdVZ0lpVnpJaUJtYjNJZ2NtVmhaR2x1Wnk0S0FFVnljbTl5SUhKbFlXUnBibWNnY0dGMGRHVnliaUJtYVd4bElDY2xjeWN1Q2dCSVpXbG5hSFFnWTJGdWJtOTBJR0psSUhwbGNtOEFKV1lnSldZZ0pXWWdKV1lBZUNCdGRYTjBJR0psSUhCdmMybDBhWFpsQUV4aGNHeGhZMmxoYmlCd2VYSmhiV2xrSUdoaGN5QnViM1FnWW1WbGJpQmhiR3h2WTJGMFpXUUFRMnh2WTJzZ2FHRnpJRzV2ZENCaVpXVnVJSE4wYjNCd1pXUUFRVkpmVUVsWVJVeGZSazlTVFVGVVgwMVBUazhBUkdWemRHbHVZWFJwYjI0Z2FYTWdUbFZNVEFCQlZWUlBYMEpTUVVOTFJWUkpUa2NBYUhBZ2JYVnpkQ0JpWlNCaGRDQnNaV0Z6ZENBeEFFVnljbTl5SUNnbFpDazZJSFZ1WVdKc1pTQjBieUJrWlhSbGNtMXBibVVnWm1sc1pTQnNaVzVuZEdndUFFMWhkR05vYVc1bklHTnZibVpwWkdWdVkyVWdZM1YwYjJabUlIWmhiSFZsSUc1dmRDQnlaV0ZqYUdWa0xnQkJjM05sY25ScGIyNGdZSGtnUGowZ2JVMXBibGxnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQnBiV0ZuWlM1MGVYQmxLQ2tnUFQwZ1NVMUJSMFZmVlVsT1ZEaGdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCemRHOXlaUzV6YVhwbEtDa2dQVDBnY0c5cGJuUnpMbk5wZW1Vb0tXQWdabUZwYkdWa0lHbHVJQUFnU1U1R1R5QWdBQ1Z6SlhNS0FFUnBjM1J2Y25ScGIyNGdabUZqZEc5eUlEMGdKV1lnSldZZ0pXWWdKV1lLQUVWeWNtOXlJRGM2SUdsamNFZGxkRWx1YVhSWWR6SllZd29BUlhoMGNtRmpkR1ZrSUdabFlYUjFjbVZ6SUQwZ0pUZGtXM0JwZUdWc1hRb0FSWEp5YjNJZ2FXTndNa2RsZEZSVENnQkdZV3hzYVc1bklHSmhZMnNnZEc4Z2NtVmhaR2x1WnlBbkpYTWxjeWNnYVc0Z1FWSlViMjlzUzJsMElIWTBMbmdnWm05eWJXRjBMZ29BUlhKeWIzSWdhVzRnYjNCbGJtbHVaeUFuSlhNbklHbHVJSHBwY0dacGJHVXVDZ0JGY25KdmNpQnlaV0ZrYVc1bklFcFFSVWNnWm1sc1pTNEtBRVZ5Y205eUlIZG9hV3hsSUdGa1pHbHVaeUJ5WldabGNtVnVZMlVnWkdGMFlTQnpaWFE2SUd0d2JVMWxjbWRsVW1WbVJHRjBZVk5sZENncElHWmhhV3hsWkM0S0FFVnljbTl5SUhOaGRtbHVaeUJtWldGMGRYSmxJSE5sZERvZ1pYSnliM0lnZDNKcGRHbHVaeUJrWVhSaExnb0FUM1YwSUc5bUlHMWxiVzl5ZVNFaENnQkJvRElMdFNlRkRBQUFiUTRBQU1rUUFBQVRFd0FBa0JZQUFFSjFhV3hrSUVsdVpHVjRBRnNsYzEwZ1d5VnpYU0JiSlhOZElEb2dKWE02SUNWbUlHMXpBRWx0WVdkbElHMTFjM1FnWW1VZ1ozSmhlWE5qWVd4bEFIa2diM1YwSUc5bUlISmhibWRsQUVabFlYUjFjbVVnYzNSdmNtVWdhR0Z6SUc1dmRDQmlaV1Z1SUdGc2JHOWpZWFJsWkFBbFpBQjNZZ0JCVWw5UVNWaEZURjlHVDFKTlFWUmZRVkpIUWdCTllYaHBiWFZ0SUdGc2JHOTNZV0pzWlNCd2IzTmxJR1Z5Y205eUlHVjRZMlZsWkdWa0xnQkJjM05sY25ScGIyNGdZSE4wWlhBZ1BqMGdkMmxrZEdoZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JwS3pFclkyaDFibXRmYzJsNlpTQThJSGRwWkhSb1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnY0hseVlXMXBaQzArYm5WdFQyTjBZWFpsY3lncElENGdNR0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lITnlZeUFoUFNBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnZUNBOElHMUhjbUZrYVdWdWRITmJiMk4wWVhabEttMU9kVzFUWTJGc1pYTlFaWEpQWTNSaGRtVXJjMk5oYkdWZExuZHBaSFJvS0NsZ0lHWmhhV3hsWkNCcGJpQUFSWEp5YjNJZ2FXNGdiM0JsYm1sdVp5QW5KWE1uSUdadmNpQnlaV0ZrYVc1bkNnQWdSbWxzZEdWeVpXUWdabVZoZEhWeVpYTWdQU0FsTjJSYmNHbDRaV3hkQ2dCTVlXSmxiR2x1WnlCMGFISmxjMmh2YkdRZ2JXOWtaU0J6WlhRZ2RHOGdKWE11Q2dCRmNuSnZjaUJ5WldGa2FXNW5JRXBRUlVjZ1ptbHNaU0JvWldGa1pYSXVDZ0JGY25KdmNqb2djM1Z3Y0d4cFpXUWdabWxzWlNCa2IyVnpJRzV2ZENCaGNIQmxZWElnZEc4Z1ltVWdZVzRnUVZKVWIyOXNTMmwwSUdOaGJXVnlZU0J3WVhKaGJXVjBaWElnWm1sc1pTNEtBR3R3YlVSbGJHVjBaVkpsWmtSaGRHRlRaWFFvS1RvZ1RsVk1UQ0J5WldaRVlYUmhVMlYwVUhSeU1TOXlaV1pFWVhSaFUyVjBVSFJ5TWk0S0FFTmhiaWQwSUhKbFlXUWdTbEJGUnlCbWFXeGxJQ2NsY3ljS0FFRlNYMUJKV0VWTVgwWlBVazFCVkY4eWRuVjVBRkI1Y21GdGFXUWdaRzlsY3lCdWIzUWdZMjl1ZEdGcGJpQmhibmtnYkdWMlpXeHpBRk4wWlhBZ2JYVnpkQ0JpWlNCbmNtVmhkR1Z5SUhSb1lXNGdiM0lnWlhGMVlXd2dkR2hsSUhkcFpIUm9BSGdnYlhWemRDQmlaU0JzWlhOeklIUm9ZVzRnZEdobElHbHRZV2RsSUhkcFpIUm9BRVY0ZEdWdVpHbHVaeUJpWlhsdmJtUWdkR2hsSUhkcFpIUm9JRzltSUhSb1pTQnBiV0ZuWlFCVGIzVnlZMlVnYVhNZ1RsVk1UQUJGY25KdmNpQW9KV1FwT2lCMWJtRmliR1VnZEc4Z2NtVmhaQ0JtY205dElHWnBiR1V1QUUxMWJIUnBMVzFoY210bGNpQndiM05sSUdWeWNtOXlJSFpoYkhWbElHVjRZMlZsWkdWa0xnQU5KVFJrTHlVMFpDNEFRWE56WlhKMGFXOXVJR0J3ZVhKaGJXbGtZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2VTQThJRzFOWVhoWllDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnYVcxaFoyVXVZMmhoYm01bGJITW9LU0E5UFNBeFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnYm5WdFgzQnZhVzUwY3lBOVBTQndiMmx1ZEhNdWMybDZaU2dwWUNCbVlXbHNaV1FnYVc0Z0FDVTNMalZtSUFBZ1NVNUdUeUFnQUd0d2JWTmxkRkpsWmtSaGRHRlRaWFFvS1RvZ1RsVk1UQ0JyY0cxSVlXNWtiR1V2Y21WbVJHRjBZVk5sZEM0S0FHdHdiVVJsYkdWMFpWSmxaa1JoZEdGVFpYUW9LVG9nVGxWTVRDQnlaV1pFWVhSaFUyVjBVSFJ5TGdvQVJYSnliM0k2SUhWdVlXSnNaU0IwYnlCdmNHVnVJR1pwYkdVZ0p5VnpKeUJtYjNJZ2QzSnBkR2x1Wnk0S0FFVnljbTl5T2lCVmJuTjFjSEJ2Y25SbFpDQndhWGhsYkNCbWIzSnRZWFFnS0NWa0tTQnlaWEYxWlhOMFpXUXVDZ0JGY25KdmNpQnBiaUJ5WldGa2FXNW5JQ2NsY3ljdUNnQUtJeU1qSUZOMWNtWmhZMlVnVG04dUpXUWdJeU1qQ2dCQlVsOVFTVmhGVEY5R1QxSk5RVlJmZVhWMmN3QWxjd0JKYldGblpTQnRkWE4wSUdoaGRtVWdNU0JqYUdGdWJtVnNBQzl6Y21NdlpXMXpZM0pwY0hSbGJpOVhaV0pCVWt0cGRFeHBZaTlzYVdJdlUxSkRMMHRRVFM5R2NtVmhhMDFoZEdOb1pYSXZiV0YwWTJobGNuTXZkbWx6ZFdGc1gyUmhkR0ZpWVhObExtZ0FVMmh2ZFd4a0lHSmxJSE5oYldVZ2MybDZaUUJTWldwbFkzUmxaQ0JtY21WeGRXVnVkR3g1SUcxcGMzSmxZMjluYm1selpXUWdiV0YwY21sNElHMWhjbXRsY2k0QVFYTnpaWEowYVc5dUlHQmlkV05yWlhSYk1GMHVabWx5YzNRZ1BqMGdZblZqYTJWMFcyNWRMbVpwY25OMFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWVc1bmJHVWdQaUF0VUVsZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JqYUdGdWJtVnNjeUErSURCZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0J6Y21OZmQybGtkR2dnUGlBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnZVNBK1BTQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ1pIbHVZVzFwWTE5allYTjBQR052Ym5OMElFSnBibTl0YVdGc1VIbHlZVzFwWkRNeVppbytLSEI1Y21GdGFXUXBZQ0JtWVdsc1pXUWdhVzRnQUd0d2JWTmhkbVZTWldaRVlYUmhVMlYwS0NrNklFNVZURXdnWm1sc1pXNWhiV1V2Y21WbVJHRjBZVk5sZEM0S0FHdHdiVk5sZEZKbFprUmhkR0ZUWlhRb0tUb2djbVZtUkdGMFlWTmxkQzRLQUVWeWNtOXlPaUJ6ZFhCd2JHbGxaQ0JpZFdabVpYSWdaRzlsY3lCdWIzUWdZWEJ3WldGeUlIUnZJR0psSUVGU1ZHOXZiRXRwZENCallXMWxjbUVnY0dGeVlXMWxkR1Z5Y3k0S0FFVnljbTl5SUdsdUlIZHlhWFJwYm1jZ0p5VnpKeUJwYmlCMGFHVWdlbWx3Wm1sc1pTNEtBRVZ5Y205eUlITmhkbWx1WnlCcGJXRm5aU0J6WlhRNklHVnljbTl5SUhkeWFYUnBibWNnWkdGMFlTNEtBRTUxYldKbGNpQnZaaUJqYUdGdWJtVnNjeUJqWVc1dWIzUWdZbVVnZW1WeWJ3QjVJRzExYzNRZ1ltVWdjRzl6YVhScGRtVUFWMmxrZEdnZ2JYVnpkQ0JpWlNCd2IzTnBkR2wyWlFCaGJtZHNaU0J2ZFhRZ2IyWWdjbUZ1WjJVQVQyNXNlU0JpYVc1dmJXbGhiQ0J3ZVhKaGJXbGtJR2x6SUhOMWNIQnZjblJsWkFCdWRHaGZaV3hsYldWdWRDQm1ZV2xzWldRQVFWSmZVRWxZUlV4ZlJrOVNUVUZVWDFKSFFsODFOalVBUVhOelpYSjBhVzl1SUdCdFVIbHlZVzFwWkM1emFYcGxLQ2tnUFQwZ2JVNTFiVTlqZEdGMlpYTXFiVTUxYlZOallXeGxjMUJsY2s5amRHRjJaV0FnWm1GcGJHVmtJR2x1SUFBZ2JHbHVaU0FBUm1sbGJHUXRiMll0ZG1sbGR5QjJaWEowYVdOaGJDQTlJQ1V1TVdZc0lHaHZjbWw2YjI1MFlXd2dQU0FsTGpGbUlHUmxaM0psWlhNc0lHRnpjR1ZqZENCeVlYUnBieUE5SUNVdU0yWUtBRTFoZUNCbVpXRjBkWEpsSUQwZ0pXUUtBQ0FnVW1WaFpDQkpiV0ZuWlZObGRDNEtBRVZ5Y205eUlITmhkbWx1WnlCTFVFMGdaR0YwWVRvZ2RXNWhZbXhsSUhSdklHOXdaVzRnWm1sc1pTQW5KWE1sY3lWekp5Qm1iM0lnZDNKcGRHbHVaeTRLQUVWeWNtOXlJQ2dsWkNrNklIVnVZV0pzWlNCMGJ5QnZjR1Z1SUdWNGRHVnlibUZzSUhCaGNtRnRaWFJsY25NZ1ptbHNaU0FpSlhNaUlHWnZjaUIzY21sMGFXNW5MZ29BUlhKeWIzSWdhVzRnWTJ4dmMybHVaeUFsY3lCcGJpQjBhR1VnZW1sd1ptbHNaUzRLQUVGMWRHOGdkR2h5WlhOb2IyeGtJQ2hpY21GamEyVjBLU0J0WVhKclpYSWdZMjkxYm5SeklDMWJKVE5rT2lBbE0yUmRJRnNsTTJRNklDVXpaRjBnV3lVelpEb2dKVE5rWFNzdUNnQlBkWFFnYjJZZ2JXVnRiM0o1SVNFS0FGQjVjbUZ0YVdRZ2FHRnpJRzV2ZENCaVpXVnVJR0ZzYkc5allYUmxaQ0I1WlhRQVFWSmZVRWxZUlV4ZlJrOVNUVUZVWDFKSFFrRmZOVFUxTVFBdUFFRnpjMlZ5ZEdsdmJpQmdjRnN3WFNBK0lIQnRNVnN0TVYxZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JoYm1kc1pTQThQU0JRU1dBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZR1F1ZEhsd1pTZ3BJRDA5SUVsTlFVZEZYMFl6TW1BZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZSE55WTE5b1pXbG5hSFFnUGlBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnYjJOMFlYWmxJRDQ5SURCZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0I1SUR3Z2JVZHlZV1JwWlc1MGMxdHZZM1JoZG1VcWJVNTFiVk5qWVd4bGMxQmxjazlqZEdGMlpTdHpZMkZzWlYwdWFHVnBaMmgwS0NsZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0J0UkdGMFlTNW5aWFFvS1dBZ1ptRnBiR1ZrSUdsdUlBQTZJQUFsTTJRNklDZ2xNMlFzSlROa0tTQTZJQ1ZtSUcxcGJqMGxaaUJ0WVhnOUpXWXNJSE5rUFNWbUNnQndZV2RsSUNWa0xDQnBiV0ZuWlNCdWRXMGdKV1FzSUhCdmFXNTBjeUF0SUNWa0NnQkZjbkp2Y2lBb0pXUXBPaUIxYm1GaWJHVWdkRzhnYjNCbGJpQmxlSFJsY201aGJDQndZWEpoYldWMFpYSnpJR1pwYkdVZ0lpVnpJaUJtYjNJZ2NtVmhaR2x1Wnk0S0FFRjFkRzhnZEdoeVpYTm9iMnhrSUNoaWNtRmphMlYwS1NCaFpHcDFjM1JsWkNCMGFISmxjMmh2YkdRZ2RHOGdKV1F1Q2dCRmNuSnZjaUJ2Y0dWdWFXNW5JR1pwYkdVZ0p5VnpMbWx6WlhRbkxnb0FSWEp5YjNJZ2FXNGdZMnh2YzJsdVp5QW5KWE1uTGdvQWVTQnRkWE4wSUdKbElHeGxjM01nZEdoaGJpQjBhR1VnYVcxaFoyVWdhR1ZwWjJoMEFDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdlpHVjBaV04wYjNKekwyZGhkWE56YVdGdVgzTmpZV3hsWDNOd1lXTmxYM0I1Y21GdGFXUXVhQUJJWldsbmFIUWdiWFZ6ZENCaVpTQndiM05wZEdsMlpRQlBibXg1SUVZek1pQnBiV0ZuWlhNZ2MzVndjRzl5ZEdWa0FGTm9iM1ZzWkNCaVpTQnRZWGhwYldFQVJHRjBZU0J3YjJsdWRHVnlJR2x6SUU1VlRFd0FVSGx5WVcxcFpDQnBjeUJPVlV4TUFFRlNYMUJKV0VWTVgwWlBVazFCVkY5U1IwSkJYelEwTkRRQVFYTnpaWEowYVc5dUlHQnpZMkZzWlNBK1BTQnRUV2x1VTJOaGJHVmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCcGJXRm5aUzUzYVdSMGFDZ3BJRDA5SUcxUWVYSmhiV2xrV3pCZExuZHBaSFJvS0NsZ0lHWmhhV3hsWkNCcGJpQUFXeVVnTGpObUlDVWdMak5tSUNVZ0xqTm1YU0JiSlNBMkxqRm1YUW9BUlhKeWIzSWdLQ1ZrS1RvZ2RXNWhZbXhsSUhSdklHOXdaVzRnYjNCMGFXTmhiQ0J3WVhKaGJXVjBaWEp6SUdacGJHVWdJaVZ6SWlCbWIzSWdkM0pwZEdsdVp5NEtBR3R3YlZObGRGSmxaa1JoZEdGVFpYUkdhV3hsS0NrNklFNVZURXdnYTNCdFNHRnVaR3hsTDJacGJHVnVZVzFsTGdvQUlDQWdJR1Z1WkM0S0FFRjFkRzhnZEdoeVpYTm9iMnhrSUNnbGN5a2dZV1JxZFhOMFpXUWdkR2h5WlhOb2IyeGtJSFJ2SUNWa0xnb0FMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRDZ0JCVWw5UVNWaEZURjlHVDFKTlFWUmZOREl3ZGdCdFpXUnBZVzRBVDJOMFlYWmxJRzExYzNRZ1ltVWdjRzl6YVhScGRtVUFjMk5oYkdVZ2IzVjBJRzltSUhKaGJtZGxBRWx0WVdkbElHOW1JSGR5YjI1bklITnBlbVVnWm05eUlIQjVjbUZ0YVdRQVZXNWhZbXhsSUhSdklHRnNiRzlqWVhSbElHbHRZV2RsSUdSaGRHRUFRWE56WlhKMGFXOXVJR0JrWlhSbFkzUnZjbUFnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lIQmJNRjBnUGlCd2JURmJNRjFnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQnBiVEV1ZEhsd1pTZ3BJRDA5SUVsTlFVZEZYMFl6TW1BZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZR2N1WTJoaGJtNWxiSE1vS1NBOVBTQXlZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2MzSmpYM04wWlhBZ1BpQXdZQ0JtWVdsc1pXUWdhVzRnQUNVelpDd2dKVE5rT2lCdFlYaGZjMmx0SUQwZ0pXWUtBQ0FnVW1WaFpDQkdaV0YwZFhKbFUyVjBMZ29BUTJGdWJtOTBJR1pwYm1RZ2RHaGxJSEJoWjJVZ1ptOXlJSE5yYVhCd2FXNW5MZ29BUlhKeWIzSWdLQ1ZrS1RvZ2RXNWhZbXhsSUhSdklHOXdaVzRnYjNCMGFXTmhiQ0J3WVhKaGJXVjBaWEp6SUdacGJHVWdJaVZ6SWlCbWIzSWdjbVZoWkdsdVp5NEtBRVZ5Y205eUlITmhkbWx1WnlCTFVFMGdaR0YwWVRvZ1pYSnliM0lnZDNKcGRHbHVaeUJrWVhSaExnb0FUM1J6ZFFCQlVsOVFTVmhGVEY5R1QxSk5RVlJmTkRJd1pnQlRkR1Z3SUcxMWMzUWdZbVVnY0c5emFYUnBkbVVBU1c1MllXeHBaQ0JwYldGblpTQjBlWEJsQUVSbGRHVmpkRzl5SUdseklFNVZURXdBVG5WdFltVnlJRzltSUdOb1lXNXVaV3h6SUhOb2IzVnNaQ0JpWlNBeUFFRnpjMlZ5ZEdsdmJpQmdiMk4wWVhabElEd2diVTUxYlU5amRHRjJaWE5nSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQnpZMkZzWlNBOElHMU5ZWGhUWTJGc1pXQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUhCYk1GMGdQaUJ3YlRGYk1WMWdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCcGJUSXVkSGx3WlNncElEMDlJRWxOUVVkRlgwWXpNbUFnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lHbHRZV2RsTG1obGFXZG9kQ2dwSUQwOUlHMVFlWEpoYldsa1d6QmRMbWhsYVdkb2RDZ3BZQ0JtWVdsc1pXUWdhVzRnQUNVM0xqUm1JQUJyY0cxTWIyRmtVbVZtUkdGMFlWTmxkQ2dwT2lCT1ZVeE1JR1pwYkdWdVlXMWxMM0psWmtSaGRHRlRaWFJRZEhJdUNnQnJjRzFOWVhSamFHbHVaeWdwT2lCT1ZVeE1JR3R3YlVoaGJtUnNaUzlwYmtsdFlXZGxUSFZ0WVM0S0FFVnljbTl5SUc5d1pXNXBibWNnWm1sc1pTQW5KWE11Wm5ObGRDY3VDZ0JCNU5rQUMxRUJBQUFBQVFBQUFBRUFBQUFBQUFBQS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vOEFBQUFBQVFBQUFBRUFBQUFCQUFBQUFBQUFBUC8vLy84QkFBQUFDUUFBQUFVQUFBQUVBQUFBQXdBQUFBSUFRY1BhQUF1SWRBRUFBUUVCQUFJRS8vOEZBd0VBQXY4R0IvOERBUUlDQXdJREFnTURBUDhFQmdjRi93RUVCUVFFQlFVRUJRY0dCZ1lIQndjRy93SUVCZ2NGQS84QS8vOEQvd1VHLy84SkN2OE0vLzhQL3hFUy94VC8veGNZLy84Yi94MGUvLzhCQXY4RS8vOEhDUC8vQy84TkR2OFEvLzhUL3hVVy8vOFpHdjhjLy84ZkFRQUFBQUlBQUFBRUFBQUFDQUFBQUFNQUFBQUdBQUFBREFBQUFBc0FBQUFGQUFBQUNnQUFBQWNBQUFBT0FBQUFEd0FBQUEwQUFBQUpBQUFBQUFBQUFQLy8vLzhBQUFBQUFRQUFBQVFBQUFBQ0FBQUFDQUFBQUFVQUFBQUtBQUFBQXdBQUFBNEFBQUFKQUFBQUJ3QUFBQVlBQUFBTkFBQUFDd0FBQUF3QUFBQUJBQUFBQWdBQUFBUUFBQUFJQUFBQUVBQUFBQVVBQUFBS0FBQUFGQUFBQUEwQUFBQWFBQUFBRVFBQUFBY0FBQUFPQUFBQUhBQUFBQjBBQUFBZkFBQUFHd0FBQUJNQUFBQURBQUFBQmdBQUFBd0FBQUFZQUFBQUZRQUFBQThBQUFBZUFBQUFHUUFBQUJjQUFBQUxBQUFBRmdBQUFBa0FBQUFTQUFBQUFBQUFBUC8vLy84QUFBQUFBUUFBQUJJQUFBQUNBQUFBQlFBQUFCTUFBQUFMQUFBQUF3QUFBQjBBQUFBR0FBQUFHd0FBQUJRQUFBQUlBQUFBREFBQUFCY0FBQUFFQUFBQUNnQUFBQjRBQUFBUkFBQUFCd0FBQUJZQUFBQWNBQUFBR2dBQUFCVUFBQUFaQUFBQUNRQUFBQkFBQUFBTkFBQUFEZ0FBQUJnQUFBQVBBQUFBQVFBQUFBSUFBQUFFQUFBQUNBQUFBQkFBQUFBZ0FBQUFRQUFBQUFNQUFBQUdBQUFBREFBQUFCZ0FBQUF3QUFBQVlBQUFBRU1BQUFBRkFBQUFDZ0FBQUJRQUFBQW9BQUFBVUFBQUFDTUFBQUJHQUFBQUR3QUFBQjRBQUFBOEFBQUFlQUFBQUhNQUFBQmxBQUFBU1FBQUFCRUFBQUFpQUFBQVJBQUFBQXNBQUFBV0FBQUFMQUFBQUZnQUFBQXpBQUFBWmdBQUFFOEFBQUFkQUFBQU9nQUFBSFFBQUFCckFBQUFWUUFBQUNrQUFBQlNBQUFBSndBQUFFNEFBQUFmQUFBQVBnQUFBSHdBQUFCN0FBQUFkUUFBQUdrQUFBQlJBQUFBSVFBQUFFSUFBQUFIQUFBQURnQUFBQndBQUFBNEFBQUFjQUFBQUdNQUFBQkZBQUFBQ1FBQUFCSUFBQUFrQUFBQVNBQUFBQk1BQUFBbUFBQUFUQUFBQUJzQUFBQTJBQUFBYkFBQUFGc0FBQUExQUFBQWFnQUFBRmNBQUFBdEFBQUFXZ0FBQURjQUFBQnVBQUFBWHdBQUFEMEFBQUI2QUFBQWR3QUFBRzBBQUFCWkFBQUFNUUFBQUdJQUFBQkhBQUFBRFFBQUFCb0FBQUEwQUFBQWFBQUFBRk1BQUFBbEFBQUFTZ0FBQUJjQUFBQXVBQUFBWEFBQUFEc0FBQUIyQUFBQWJ3QUFBRjBBQUFBNUFBQUFjZ0FBQUdjQUFBQk5BQUFBR1FBQUFESUFBQUJrQUFBQVN3QUFBQlVBQUFBcUFBQUFWQUFBQUNzQUFBQldBQUFBTHdBQUFGNEFBQUEvQUFBQWZnQUFBSDhBQUFCOUFBQUFlUUFBQUhFQUFBQmhBQUFBUVFBQUFBQUFBQUQvLy8vL0FBQUFBQUVBQUFBSEFBQUFBZ0FBQUE0QUFBQUlBQUFBT0FBQUFBTUFBQUEvQUFBQUR3QUFBQjhBQUFBSkFBQUFXZ0FBQURrQUFBQVZBQUFBQkFBQUFCd0FBQUJBQUFBQVF3QUFBQkFBQUFCd0FBQUFJQUFBQUdFQUFBQUtBQUFBYkFBQUFGc0FBQUJHQUFBQU9nQUFBQ1lBQUFBV0FBQUFMd0FBQUFVQUFBQTJBQUFBSFFBQUFCTUFBQUJCQUFBQVh3QUFBRVFBQUFBdEFBQUFFUUFBQUNzQUFBQnhBQUFBY3dBQUFDRUFBQUJOQUFBQVlnQUFBSFVBQUFBTEFBQUFWd0FBQUcwQUFBQWpBQUFBWEFBQUFFb0FBQUJIQUFBQVR3QUFBRHNBQUFCb0FBQUFKd0FBQUdRQUFBQVhBQUFBVWdBQUFEQUFBQUIzQUFBQUJnQUFBSDRBQUFBM0FBQUFEUUFBQUI0QUFBQStBQUFBRkFBQUFGa0FBQUJDQUFBQUd3QUFBR0FBQUFCdkFBQUFSUUFBQUdzQUFBQXVBQUFBSlFBQUFCSUFBQUExQUFBQUxBQUFBRjRBQUFCeUFBQUFLZ0FBQUhRQUFBQk1BQUFBSWdBQUFGWUFBQUJPQUFBQVNRQUFBR01BQUFCbkFBQUFkZ0FBQUZFQUFBQU1BQUFBZlFBQUFGZ0FBQUE5QUFBQWJnQUFBQm9BQUFBa0FBQUFhZ0FBQUYwQUFBQTBBQUFBU3dBQUFDa0FBQUJJQUFBQVZRQUFBRkFBQUFCbUFBQUFQQUFBQUh3QUFBQnBBQUFBR1FBQUFDZ0FBQUF6QUFBQVpRQUFBRlFBQUFBWUFBQUFld0FBQUZNQUFBQXlBQUFBTVFBQUFIb0FBQUI0QUFBQWVRQUFBRTlqZEdGMlpTQnRkWE4wSUdKbElHeGxjM01nZEdoaGJpQnVkVzFpWlhJZ2IyWWdiMk4wWVhabGN3QkJVbDlRU1ZoRlRGOUdUMUpOUVZSZlRsWXlNUUJCYzNObGNuUnBiMjRnWUhCYk1GMGdQaUJ3V3kweFhXQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdSemRDNTBlWEJsS0NrZ1BUMGdTVTFCUjBWZlJqTXlZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ1pDNWphR0Z1Ym1Wc2N5Z3BJRDA5SURGZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0J0WVhoZmFHVnBaMmgwSUQ0Z01HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdSemRGOTNhV1IwYUNBK0lEQmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCemFYcGxJRDRnTUdBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZSEI1Y21GdGFXUXRQbWx0WVdkbGN5Z3BMbk5wZW1Vb0tTQStJREJnSUdaaGFXeGxaQ0JwYmlBQVVHRm5aVnNsWkYwZ0lIQnlaVG9sTTJRc0lHRm1kRG9sTTJRc0lHVnljbTl5SUQwZ0pXWUtBQ1V6WkN3Z0pUTmtPaUJ0WVhoZmMybHRJRDBnSldZc0lDaHRZWGdzYldsdUtTQTlJQ1ZtTENBbFppd2djMlFnUFNBbFpnb0FJQ0JTWldGa0lFMWhjbXRsY2xObGRDNEtBRVZ5Y205eUlHeHZZV1JwYm1jZ1MxQk5JR1JoZEdFNklIVnVZV0pzWlNCMGJ5QnZjR1Z1SUdacGJHVWdKeVZ6SlhNbGN5Y2dabTl5SUhKbFlXUnBibWN1Q2dCUWVYSmhiV2xrSUdseklHVnRjSFI1QUVSbGMzUnBibUYwYVc5dUlHbHRZV2RsSUhOb2IzVnNaQ0JpWlNCaElHWnNiMkYwQUcxeWF3QnphWHBsSUcxMWMzUWdZbVVnY0c5emFYUnBkbVVBVFdGNGFXMTFiU0JpYVc0Z2MyaHZkV3hrSUdKbElIQnZjMmwwYVhabEFFOXViSGtnYzJsdVoyeGxJR05vWVc1dVpXd2dhVzFoWjJWeklITjFjSEJ2Y25SbFpBQkJjM05sY25ScGIyNGdZSEJiTUYwZ1BpQndXekZkWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdaSE4wWDNOMFpYQWdQaUF3WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdjMk5oYkdVZ1BqMGdNR0FnWm1GcGJHVmtJR2x1SUFCS1VFVkhJR1pwYkdVZ2FHRnpJSFZ1YzNWd2NHOXlkR1ZrSUNWa0xXTnZiWEJ2Ym1WdWRDQndhWGhsYkhNS0FFVnljbTl5SUd4dllXUnBibWNnUzFCTklHUmhkR0U2SUdWeWNtOXlJSEpsWVdScGJtY2daR0YwWVM0S0FHRnlWWFJwYkVkbGRGQnBlR1ZzUm05eWJXRjBUbUZ0WlRvZ1JYSnliM0lzSUhWdWNtVmpiMmR1YVhObFpDQndhWGhsYkNCbWIzSnRZWFFnS0NWa0tTNEtBRk5qWVd4bElHMTFjM1FnWW1VZ2NHOXphWFJwZG1VQVZXNXJibTkzYmlCcGJXRm5aU0IwZVhCbEFFRnpjMlZ5ZEdsdmJpQmdjRnN3WFNBK0lIQndNVnN0TVYxZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JvYVhOMElDRTlJRTVWVEV4Z0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0FvYzNKalgzZHBaSFJvSlRJcElEMDlJREZnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQnBiVEV1WTJoaGJtNWxiSE1vS1NBOVBTQXhZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2JWSmxaa2x0WVdkbFYybGtkR2dnUGlBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnY0hseVlXMXBaQzArYVcxaFoyVnpLQ2xiTUYwdWQybGtkR2dvS1NBOVBTQmtaWFJsWTNSdmNpMCtkMmxrZEdnb0tXQWdabUZwYkdWa0lHbHVJQUJQZFhRZ2IyWWdiV1Z0YjNKNUxnb0FhM0J0UTJoaGJtZGxVR0ZuWlU1dlQyWlNaV1pFWVhSaFUyVjBLQ2s2SUU1VlRFd2djbVZtUkdGMFlWTmxkQzRLQUVWeWNtOXlJRzl3Wlc1cGJtY2dabWxzWlNBbkpYTXViWEpySnk0S0FDVWxKVEF5ZUFCMlpXTjBiM0lBVUhseVlXMXBaQ0JoYm1RZ1pHVjBaV04wYjNJZ2MybDZaU0J0YVhOdFlYUmphQUF2YzNKakwyVnRjMk55YVhCMFpXNHZWMlZpUVZKTGFYUk1hV0l2YkdsaUwxTlNReTlMVUUwdlJuSmxZV3ROWVhSamFHVnlMMlJsZEdWamRHOXljeTl2Y21sbGJuUmhkR2x2Ymw5aGMzTnBaMjV0Wlc1MExtZ0FKV1lnSldZZ0pXWWdKV1lBZDJsa2RHZ2diWFZ6ZENCaVpTQndiM05wZEdsMlpRQlZibk4xY0hCdmNuUmxaQ0JwYldGblpTQjBlWEJsQUZOdmRYSmpaU0IzYVdSMGFDQnRkWE4wSUdKbElHOWtaQUJCYzNObGNuUnBiMjRnWUhOallXeGxJRHdnYlU1MWJWTmpZV3hsYzFCbGNrOWpkR0YyWldBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZSEJiTUYwZ1BpQndjREZiTUYxZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JwYlRJdVkyaGhibTVsYkhNb0tTQTlQU0F4WUNCbVlXbHNaV1FnYVc0Z0FDOXdjbTlqTDNObGJHWXZaWGhsQUZOallXeGxJRzExYzNRZ1ltVWdiR1Z6Y3lCMGFHRnVJRzUxYldKbGNpQnZaaUJ6WTJGc1pTQndaWElnYjJOMFlYWmxBRWhwYzNSdlozSmhiU0J3YjJsdWRHVnlJR2x6SUU1VlRFd0FRWE56WlhKMGFXOXVJR0J3V3pCZElENGdjSEF4V3pGZFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnS0dOb2RXNXJYM05wZW1VbE1pazlQVEJnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQnRVbVZtU1cxaFoyVklaV2xuYUhRZ1BpQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2NIbHlZVzFwWkMwK2FXMWhaMlZ6S0NsYk1GMHVhR1ZwWjJoMEtDa2dQVDBnWkdWMFpXTjBiM0l0UG1obGFXZG9kQ2dwWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdaQzUzYVdSMGFDZ3BJRDA5SUdsdE1pNTNhV1IwYUNncFlDQm1ZV2xzWldRZ2FXNGdBRlJ5WVc1elptOXliV0YwYVc5dUlHMWhkSEpwZUNCeVpXRmtJR1Z5Y205eUlTRUtBSFpsWTNSdmNnQkpiV0ZuWlhNZ2JYVnpkQ0JvWVhabElIUm9aU0J6WVcxbElIZHBaSFJvQUdwd1p3QlZiblJsYzNSbFpDQmlaV2hoZG1sdmNpQm1iM0lnYjJSa0lHTm9kVzVySUhOcGVtVUFhR1ZwWjJoMElHMTFjM1FnWW1VZ2NHOXphWFJwZG1VQVQyTjBZWFpsSUc5MWRDQnZaaUJ5WVc1blpRQkJjM05sY25ScGIyNGdZQ2htWW1sdUt6QXVOV1lwSUQ0Z01DQW1KaUFvWm1KcGJpMHdMalZtS1NBOElHNTFiVjlpYVc1ellDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWVhOemFXZHViV1Z1ZEM1emFYcGxLQ2tnUFQwZ2JuVnRYMmx1WkdsalpYTmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdBaGFYTnBibVlvZFZzd1hTbGdJR1poYVd4bFpDQnBiaUFBSlhNbGN3b0FWMmxrZEdnZ2FYTWdlbVZ5YndBdmMzSmpMMlZ0YzJOeWFYQjBaVzR2VjJWaVFWSkxhWFJNYVdJdmJHbGlMMU5TUXk5TFVFMHZSbkpsWVd0TllYUmphR1Z5TDIxaGRHTm9aWEp6TDJodmRXZG9YM05wYldsc1lYSnBkSGxmZG05MGFXNW5MbWdBTDNOeVl5OWxiWE5qY21sd2RHVnVMMWRsWWtGU1MybDBUR2xpTDJ4cFlpOVRVa012UzFCTkwwWnlaV0ZyVFdGMFkyaGxjaTl0WVhSamFHVnljeTlpYVc1aGNubGZhR2xsY21GeVkyaHBZMkZzWDJOc2RYTjBaWEpwYm1jdWFBQkVaV05wYldGc0lHSnBiaUJ3YjNOcGRHbHZiaUJwYm1SbGVDQnZkWFFnYjJZZ2NtRnVaMlVBVTJOaGJHVWdiM1YwSUc5bUlISmhibWRsQUVsT1JnQkJjM05sY25ScGIyNGdZR1F1YUdWcFoyaDBLQ2tnUFQwZ2FXMHlMbWhsYVdkb2RDZ3BZQ0JtWVdsc1pXUWdhVzRnQUVsdFlXZGxjeUJ0ZFhOMElHaGhkbVVnZEdobElITmhiV1VnYUdWcFoyaDBBQzh1TGk5emFHRnlaUzhsY3dCSVpXbG5hSFFnYVhNZ2VtVnlid0JCYzNOcFoyNXRaVzUwSUhOcGVtVWdkM0p2Ym1jQVFYTnpaWEowYVc5dUlHQW9hVzUwS1hOMFpEbzZabXh2YjNJb2VDa2dQVDBnS0dsdWRDbDRZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2FXNWtaWGdnUGowZ01HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUcxaFoyNXBkSFZrWlNBK1BTQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ0lXbHphVzVtS0hWYk1WMHBZQ0JtWVdsc1pXUWdhVzRnQUZOMFpYQWdhWE1nZW1WeWJ3QXZjM0pqTDJWdGMyTnlhWEIwWlc0dlYyVmlRVkpMYVhSTWFXSXZiR2xpTDFOU1F5OUxVRTB2Um5KbFlXdE5ZWFJqYUdWeUwyUmxkR1ZqZEc5eWN5OXBiblJsY25CdmJHRjBaUzVvQUUxaFoyNXBkSFZrWlNCallXNXViM1FnWW1VZ2JtVm5ZWFJwZG1VQWFXNWtaWGdnYjNWMElHOW1JSEpoYm1kbEFFaFBUVVVBUVhOelpYSjBhVzl1SUdCaGMzTnBaMjV0Wlc1MFcybGRJQ0U5SUMweFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnYVcweExuZHBaSFJvS0NrZ1BUMGdhVzB5TG5kcFpIUm9LQ2xnSUdaaGFXeGxaQ0JwYmlBQUwzTnlZeTlsYlhOamNtbHdkR1Z1TDFkbFlrRlNTMmwwVEdsaUwyeHBZaTlUVWtNdlMxQk5MMFp5WldGclRXRjBZMmhsY2k5a1pYUmxZM1J2Y25NdmFHRnljbWx6TFdsdWJHbHVaUzVvQUM5d2NtOWpMM05sYkdZdlkyMWtiR2x1WlFCbWJHOXZjaWdwSUdGdVpDQmpZWE4wSUc1dmRDQjBhR1VnYzJGdFpRQkJjM05wWjI1dFpXNTBJR2x6SUdsdWRtRnNhV1FBUVhOelpYSjBhVzl1SUdCdWRXMWZZbWx1Y3lBK1BTQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ1ltbHVXQ0ErUFNBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnS0drK1BqRXBJRHdnYzNSa09qcGpaV2xzS0NoemNtTmZhR1ZwWjJoMExURXBMekl1WmlsZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JwYlRFdWFHVnBaMmgwS0NrZ1BUMGdhVzB5TG1obGFXZG9kQ2dwWUNCbVlXbHNaV1FnYVc0Z0FFbHVaR1Y0SUdseklHOTFkQ0J2WmlCaWIzVnVaSE1BVG5WdFltVnlJR0pwYm5NZ2JYVnpkQ0JpWlNCd2IzTnBkR2wyWlFCaWFXNVlJRzkxZENCdlppQnlZVzVuWlFCUGRYUWdiMllnY21GdVoyVUFSRzlISUZCNWNtRnRhV1FBY21JQVFYTnpaWEowYVc5dUlHQW9hVzUwS1hOMFpEbzZabXh2YjNJb2VTa2dQVDBnS0dsdWRDbDVZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ1lYTnphV2R1YldWdWRGdHBYU0E4SUc1MWJWOXBibVJwWTJWellDQm1ZV2xzWldRZ2FXNGdBRTV2YmkxdFlYZ2djM1Z3Y0hKbGMzTnBiMjRBUVhOemFXZHViV1Z1ZENCdmRYUWdiMllnY21GdVoyVUFRWE56WlhKMGFXOXVJR0I1Y0NBK1BTQXdJQ1ltSUhsd0lEd2dhR1ZwWjJoMFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWW1sdVdDQThJRzFPZFcxWVFtbHVjMkFnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lHbHRZV2RsTG5SNWNHVW9LU0E5UFNCSlRVRkhSVjlWU1U1VU9HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUhjeElENDlJREJnSUdaaGFXeGxaQ0JwYmlBQUpYTTZJQ1Z6Q2dCNWNDQnZkWFFnYjJZZ1ltOTFibVJ6QUZOMVluQnBlR1ZzQUhjeElHMTFjM1FnWW1VZ2NHOXphWFJwZG1VQVZXNWhZbXhsSUhSdklHUmxkR1Z5YldsdVpTQndjbTlqWlhOeklHNWhiV1VBVDI1c2VTQm5jbUY1SUhOallXeGxJR2x0WVdkbGN5QmhjbVVnYzNWd2NHOXlkR1ZrQUVGemMyVnlkR2x2YmlCZ2FXNWthV05sYzF0aGMzTnBaMjV0Wlc1MFcybGRYU0E4SUc1MWJWOW1aV0YwZFhKbGMyQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdKcGJsa2dQajBnTUdBZ1ptRnBiR1ZrSUdsdUlBQndjblZ1WlVabFlYUjFjbVZ6QUNWekpYTUFZbWx1V1NCdmRYUWdiMllnY21GdVoyVUFRWE56WlhKMGFXOXVJR0I1Y0Y5d2JIVnpYekVnUGowZ01DQW1KaUI1Y0Y5d2JIVnpYekVnUENCb1pXbG5hSFJnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQnZZM1JoZG1VZ1BDQnRUblZ0VDJOMFlYWmxjMkFnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lIY3lJRDQ5SURCZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JwZEMwK2MyVmpiMjVrTG5OcGVtVW9LU0FoUFNBd1lDQm1ZV2xzWldRZ2FXNGdBRVpwYm1RZ1QzSnBaVzUwWVhScGIyNXpBSGx3WDNCc2RYTmZNU0J2ZFhRZ2IyWWdZbTkxYm1SekFDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdlpHVjBaV04wYjNKekwyZGhkWE56YVdGdVgzTmpZV3hsWDNOd1lXTmxYM0I1Y21GdGFXUXVhQUIzTWlCdGRYTjBJR0psSUhCdmMybDBhWFpsQUVOc2RYTjBaWElnYlhWemRDQm9ZWFpsSUdGMGJHVmhjMlYwSURFZ1ptVmhkSFZ5WlFBdmRtRnlMMk5oWTJobEFFRnpjMlZ5ZEdsdmJpQmdZbWx1V1NBOElHMU9kVzFaUW1sdWMyQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdSemRGdHBYU0ErUFNBdE1qVTRNRFkwWUNCbVlXbHNaV1FnYVc0Z0FDOHVZMkZqYUdVQVQyTjBZWFpsSUc5MWRDQnZaaUJ5WVc1blpRQkJjM05sY25ScGIyNGdZR0l4SUQ0OUlEQWdKaVlnWWpFZ1BDQnVkVzFmWW1sdWMyQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUhod0lENDlJREFnSmlZZ2VIQWdQQ0IzYVdSMGFHQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdSemRGdHBYU0E4UFNBeU5UZ3dOalJnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQmlhVzVCYm1kc1pTQStQU0F3WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdhVzB3TG1obGFXZG9kQ2dwSUQwOUlHbHRNUzVvWldsbmFIUW9LV0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lHMUxJRDA5SUcxRFpXNTBaWEp6TG5OcGVtVW9LV0FnWm1GcGJHVmtJR2x1SUFCSVpXbG5hSFFnYVhNZ2FXNWpiMjV6YVhOMFpXNTBBSGh3SUc5MWRDQnZaaUJpYjNWdVpITUFKWE12SlhNQUwzTnlZeTlsYlhOamNtbHdkR1Z1TDFkbFlrRlNTMmwwVEdsaUwyeHBZaTlUVWtNdlMxQk5MMFp5WldGclRXRjBZMmhsY2k5dFlYUmphR1Z5Y3k5cmJXVmtiMmxrY3k1b0FHSXhJR0pwYmlCcGJtUmxlQ0J2ZFhRZ2IyWWdjbUZ1WjJVQVltbHVRVzVuYkdVZ2IzVjBJRzltSUhKaGJtZGxBRUZ6YzJWeWRHbHZiaUJnYzJOaGJHVWdQQ0J0VG5WdFUyTmhiR1Z6VUdWeVQyTjBZWFpsWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdaSE4wVzJsZElEdzlJRFF4TWprd01qUmdJR1poYVd4bFpDQnBiaUFBYXlCemFHOTFiR1FnYldGMFkyZ2dkR2hsSUc1MWJXSmxjaUJ2WmlCamJIVnpkR1Z5SUdObGJuUmxjbk1BVTJOaGJHVWdiM1YwSUc5bUlISmhibWRsQUM5MllYSXZiR2xpQUVGemMyVnlkR2x2YmlCZ1lqSWdQajBnTUNBbUppQmlNaUE4SUc1MWJWOWlhVzV6WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdZbWx1UVc1bmJHVWdQQ0J0VG5WdFFXNW5iR1ZDYVc1ellDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnZUhCZmNHeDFjMTh4SUQ0OUlEQWdKaVlnZUhCZmNHeDFjMTh4SUR3Z2QybGtkR2hnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQmtjM1JiYVYwZ1BqMGdMVFF4TWprd01qUmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCcGJUQXVhR1ZwWjJoMEtDa2dQVDBnYVcweUxtaGxhV2RvZENncFlDQm1ZV2xzWldRZ2FXNGdBSGh3WDNCc2RYTmZNU0J2ZFhRZ2IyWWdZbTkxYm1SekFDOHVZMjl1Wm1sbkFHSXlJR0pwYmlCcGJtUmxlQ0J2ZFhRZ2IyWWdjbUZ1WjJVQVFYTnpaWEowYVc5dUlHQnVkVzFmWm1WaGRIVnlaWE1nUGlBd1lDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWW1sdVUyTmhiR1VnUGowZ01HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUNocGJURXVhR1ZwWjJoMEtDaytQakVwSUQwOUlHbHRNaTVvWldsbmFIUW9LV0FnWm1GcGJHVmtJR2x1SUFCMlpXTjBiM0lBVG5WdFltVnlJRzltSUdabFlYUjFjbVZ6SUcxMWMzUWdZbVVnY0c5emFYUnBkbVVBWW1sdVUyTmhiR1VnYjNWMElHOW1JSEpoYm1kbEFGUk5VRVJKVWdCQmMzTmxjblJwYjI0Z1lHZDRlQ0E4UFNBME1USTVNREkwWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdkekFnUGowZ01DQW1KaUIzTUNBOFBTQXhMakF3TURGZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0FvYVcwd0xtaGxhV2RvZENncFBqNHhLU0E5UFNCcGJURXVhR1ZwWjJoMEtDbGdJR1poYVd4bFpDQnBiaUFBZG1WamRHOXlBQzkwYlhBQVQzVjBJRzltSUhKaGJtZGxBRUZ6YzJWeWRHbHZiaUJnWW1sdVUyTmhiR1VnUENCdFRuVnRVMk5oYkdWQ2FXNXpZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2JuVnRYMmx1WkdsalpYTWdQRDBnYm5WdFgyWmxZWFIxY21WellDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWjNoNElENDlJREJnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQW9hVzB3TG1obGFXZG9kQ2dwUGo0eEtTQTlQU0JwYlRJdWFHVnBaMmgwS0NsZ0lHWmhhV3hsWkNCcGJpQUFUVzl5WlNCcGJtUnBZMlZ6SUhSb1lXNGdabVZoZEhWeVpYTUFSWEp5YjNJZ2JHOXZhMmx1WnlCbWIzSWdjbVZ6YjNWeVkyVnpJR1JwY21WamRHOXllU0J3WVhSb0FFRnpjMlZ5ZEdsdmJpQmdjbTkzSUR3Z2JVaGxhV2RvZEdBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZRzFDZFdOclpYUnpMbk5wZW1Vb0tTQTlQU0J0VG5WdFFuVmphMlYwYzFoZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JuZVhrZ1BEMGdOREV5T1RBeU5HQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUhjeElENDlJREFnSmlZZ2R6RWdQRDBnTVM0d01EQXhZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2FXNWtaWGdnUEQwZ0tHSnBibGdnS3lCaWFXNVpLbTFPZFcxWVFtbHVjeUFySUdKcGJrRnVaMnhsS20xT2RXMVlRbWx1Y3lwdFRuVnRXVUpwYm5NZ0t5QmlhVzVUWTJGc1pTcHRUblZ0V0VKcGJuTXFiVTUxYlZsQ2FXNXpLbTFPZFcxQmJtZHNaVUpwYm5NcFlDQm1ZV2xzWldRZ2FXNGdBRVZ5Y205eUlHTnlaV0YwYVc1bklISmxjMjkxY21ObGN5QmthWEpsWTNSdmNua2djR0YwYUFBdmMzSmpMMlZ0YzJOeWFYQjBaVzR2VjJWaVFWSkxhWFJNYVdJdmJHbGlMMU5TUXk5TFVFMHZSbkpsWVd0TllYUmphR1Z5TDJaeVlXMWxkMjl5YXk5cGJXRm5aUzVvQUVKMVkydGxkSE1nWVhKbElHNXZkQ0JoYkd4dlkyRjBaV1FBUVhOelpYSjBhVzl1SUdCdWRXMWZhVzVrYVdObGN5QStQU0J0UzJBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZSGN5SUQ0OUlEQWdKaVlnZHpJZ1BEMGdNUzR3TURBeFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWjNsNUlENDlJREJnSUdaaGFXeGxaQ0JwYmlBQVRtOTBJR1Z1YjNWbmFDQm1aV0YwZFhKbGN3QnliM2NnYjNWMElHOW1JR0p2ZFc1a2N3QjJaV04wYjNJQVFYTnpaWEowYVc5dUlHQnRRblZqYTJWMGMxc3dYUzV6YVhwbEtDa2dQVDBnYlU1MWJVSjFZMnRsZEhOWllDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWjNoNUlEdzlJRFF4TWprd01qUmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCM015QStQU0F3SUNZbUlIY3pJRHc5SURFdU1EQXdNV0FnWm1GcGJHVmtJR2x1SUFCRmNuSnZjam9nVlc1aFlteGxJSFJ2SUdOb1lXNW5aU0IzYjNKcmFXNW5JR1JwY21WamRHOXllU0IwYnlBbkpYTW5MZ29BUVhOemFXZHViV1Z1ZENCemFYcGxJR2x6SUdsdVkyOXljbVZqZEFCQmMzTmxjblJwYjI0Z1lHMUdaV0YwZFhKbFVHOXBiblJ6TG5OcGVtVW9LU0E4UFNCdFRXRjRUblZ0Um1WaGRIVnlaVkJ2YVc1MGMyQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUdkNGVTQStQU0F0TkRFeU9UQXlOR0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lDaDNNQ3QzTVN0M01pdDNNeWtnUEQwZ01TNHdNREF4WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdiaUErSURCZ0lHWmhhV3hsWkNCcGJpQUFXeVVnTGpObUlDVWdMak5tSUNVZ0xqTm1YU0JiSlNBMkxqRm1YUW9BQUFBQUF3QUFBQU1BQUFBRUFBQUFCQUFBQUFRQUFBQUJBQUFBQkFBQUFBSUFBQUFDQUFBQUFnQUFBQUlBQUFBQ0FBQUFBUUFBQUFFQUFBQUJBQUFBQUFBQUFBUUFBQUNJQUFBQUJRQUFBSkFBQUFBR0FBQUFtQUFBQUFrQUFBQ3dBQUFBR0FRQUFCZ0tBQUF6REFBQVVBNEFBQzVwYzJWMEFISmlBRTQyZG1semFXOXVNalZIWVhWemMybGhibE5qWVd4bFUzQmhZMlZRZVhKaGJXbGtSUUFBQUJUdkFBRDVUd0FBVkc5dklHMWhibmtnWm1WaGRIVnlaU0J3YjJsdWRITUFkbVZqZEc5eUFDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdmRYUnBiSE12Y0dGeWRHbGhiRjl6YjNKMExtZ0FRWE56WlhKMGFXOXVJR0J3YjNNZ1BUMGdOalkyWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdiblZ0WDJObGJuUmxjbk1nUGlBd1lDQm1ZV2xzWldRZ2FXNGdBRlJvWlhKbElHMTFjM1FnWW1VZ1lYUWdiR1ZoYzNRZ01TQmpaVzUwWlhJQWJpQnRkWE4wSUdKbElIQnZjMmwwYVhabEFGQnZjMmwwYVc5dUlHbHpJRzV2ZENCM2FYUm9hVzRnY21GdVoyVUFRWE56WlhKMGFXOXVJR0JyY0M1elkyRnNaU0E4SUcxTVlYQnNZV05wWVc1UWVYSmhiV2xrTG01MWJWTmpZV3hsVUdWeVQyTjBZWFpsS0NsZ0lHWmhhV3hsWkNCcGJpQUFXeVZ6WFNCYkpYTmRJRnNsYzEwZ09pQkdiM1Z1WkNBbFpDQm1aV0YwZFhKbGN5QnBiaUJ4ZFdWeWVRQkdaV0YwZFhKbElIQnZhVzUwSUhOallXeGxJR2x6SUc5MWRDQnZaaUJpYjNWdVpITUFRWE56WlhKMGFXOXVJR0JySUQ0Z01HQWdabUZwYkdWa0lHbHVJQUJySUcxMWMzUWdZbVVnY0c5emFYUnBkbVVBUm1sdVpDQk5ZWFJqYUdWeklDZ3hLUUJCYzNObGNuUnBiMjRnWUd0d0xuTmpiM0psSUQwOUlHeGhjREV1WjJWMFBHWnNiMkYwUGloNUtWdDRYV0FnWm1GcGJHVmtJR2x1SUFCVFkyOXlaU0JwY3lCdWIzUWdZMjl1YzJsemRHVnVkQ0IzYVhSb0lIUm9aU0JFYjBjZ2FXMWhaMlVBU0c5MVoyZ2dWbTkwYVc1bklDZ3hLUUJHYVc1a0lFaHZkV2RvSUUxaGRHTm9aWE1nS0RFcEFFRnpjMlZ5ZEdsdmJpQmdZblZqYTJWMFd6QmRMbVpwY25OMElENDlJR0oxWTJ0bGRGdHVYUzVtYVhKemRHQWdabUZwYkdWa0lHbHVJQUJ1ZEdoZlpXeGxiV1Z1ZENCbVlXbHNaV1FBUlhOMGFXMWhkR1VnU0c5dGIyZHlZWEJvZVNBb01Ta0FSbWx1WkNCSmJteHBaWEp6SUNneEtRQkJjM05sY25ScGIyNGdZRzlqZEdGMlpTQThJRzFPZFcxUFkzUmhkbVZ6WUNCbVlXbHNaV1FnYVc0Z0FDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdlpHVjBaV04wYjNKekwyZGhkWE56YVdGdVgzTmpZV3hsWDNOd1lXTmxYM0I1Y21GdGFXUXVhQUJHYVc1a0lFMWhkR05vWlhNZ0tESXBBRTlqZEdGMlpTQnZkWFFnYjJZZ2NtRnVaMlVBU0c5MVoyZ2dWbTkwYVc1bklDZ3lLUUJHYVc1a0lFaHZkV2RvSUUxaGRHTm9aWE1nS0RJcEFFRnpjMlZ5ZEdsdmJpQmdjMk5oYkdVZ1BDQnRUblZ0VTJOaGJHVnpVR1Z5VDJOMFlYWmxZQ0JtWVdsc1pXUWdhVzRnQUZOallXeGxJRzkxZENCdlppQnlZVzVuWlFCRmMzUnBiV0YwWlNCSWIyMXZaM0poY0doNUlDZ3lLUUJHYVc1a0lFbHViR2xsY25NZ0tESXBBRUZ6YzJWeWRHbHZiaUJnYVc1a1pYZ2dQQ0J0U1cxaFoyVnpMbk5wZW1Vb0tXQWdabUZwYkdWa0lHbHVJQUF2YzNKakwyVnRjMk55YVhCMFpXNHZWMlZpUVZKTGFYUk1hV0l2YkdsaUwxTlNReTlMVUUwdlJuSmxZV3ROWVhSamFHVnlMMlJsZEdWamRHOXljeTlFYjBkZmMyTmhiR1ZmYVc1MllYSnBZVzUwWDJSbGRHVmpkRzl5TG1nQVFYTnpaWEowYVc5dUlHQmlaWE4wWDJsdVpHVjRJQ0U5SUhOMFpEbzZiblZ0WlhKcFkxOXNhVzFwZEhNOGMybDZaVjkwUGpvNmJXRjRLQ2xnSUdaaGFXeGxaQ0JwYmlBQUwzTnlZeTlsYlhOamNtbHdkR1Z1TDFkbFlrRlNTMmwwVEdsaUwyeHBZaTlUVWtNdlMxQk5MMFp5WldGclRXRjBZMmhsY2k5dFlYUmphR1Z5Y3k5bVpXRjBkWEpsWDIxaGRHTm9aWEl0YVc1c2FXNWxMbWdBU1c1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbEFGTnZiV1YwYUdsdVp5QnpkSEpoYm1kbEFFRnpjMlZ5ZEdsdmJpQmdjMk5oYkdVZ1BqMGdNR0FnWm1GcGJHVmtJR2x1SUFCVFkyRnNaU0J0ZFhOMElHSmxJSEJ2YzJsMGFYWmxBRUZ6YzJWeWRHbHZiaUJnYlUxaGRHTm9aWE11YzJsNlpTZ3BJRHc5SUdabFlYUjFjbVZ6TVMwK2MybDZaU2dwWUNCbVlXbHNaV1FnYVc0Z0FFNTFiV0psY2lCdlppQnRZWFJqYUdWeklITm9iM1ZzWkNCaVpTQnNiM2RsY2dCVFkyRnNaU0J0ZFhOMElHSmxJR3hsYzNNZ2RHaGhiaUJ1ZFcxaVpYSWdiMllnYzJOaGJHVWdjR1Z5SUc5amRHRjJaUUJCYzNObGNuUnBiMjRnWUd4aGNEQXVhR1ZwWjJoMEtDa2dQVDBnYkdGd01TNW9aV2xuYUhRb0tTQTlQU0JzWVhBeUxtaGxhV2RvZENncFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnYlZKdmIzUXVaMlYwS0NsZ0lHWmhhV3hsWkNCcGJpQUFWMmxrZEdndmFHVnBaMmgwSUdGeVpTQnViM1FnWTI5dWMybHpkR1Z1ZEFCU2IyOTBJR05oYm01dmRDQmlaU0JPVlV4TUFFRnpjMlZ5ZEdsdmJpQmdiV2x1YVNBaFBTQXRNV0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lDaHNZWEF3TG1obGFXZG9kQ2dwSUQwOUlHeGhjREV1YUdWcFoyaDBLQ2twSUNZbUlDZ29iR0Z3TVM1b1pXbG5hSFFvS1Q0K01Ta2dQVDBnYkdGd01pNW9aV2xuYUhRb0tTbGdJR1poYVd4bFpDQnBiaUFBVFdsdWFXMTFiU0JwYm1SbGVDQnViM1FnYzJWMEFFRnpjMlZ5ZEdsdmJpQmdLQ2hzWVhBd0xuZHBaSFJvS0NrK1BqRXBJRDA5SUd4aGNERXVkMmxrZEdnb0tTa2dKaVlnS0d4aGNERXVkMmxrZEdnb0tTQTlQU0JzWVhBeUxuZHBaSFJvS0NrcFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnTUdBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZRzRnUEQwZ2FXNWZiV0YwWTJobGN5NXphWHBsS0NsZ0lHWmhhV3hsWkNCcGJpQUFTVzFoWjJVZ2MybDZaWE1nWVhKbElHbHVZMjl1YzJsemRHVnVkQUJUYUc5MWJHUWdZbVVnZEdobElITmhiV1VBUVhOelpYSjBhVzl1SUdCaWFXNVlJRDQ5SURCZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0FvZUMweEtTQStQU0F3SUNZbUlDaDRLekVwSUR3Z2JHRndNUzUzYVdSMGFDZ3BZQ0JtWVdsc1pXUWdhVzRnQUhnZ2IzVjBJRzltSUdKdmRXNWtjd0F2YzNKakwyVnRjMk55YVhCMFpXNHZWMlZpUVZKTGFYUk1hV0l2YkdsaUwxTlNReTlMVUUwdlJuSmxZV3ROWVhSamFHVnlMMjFoZEdOb1pYSnpMMmh2ZFdkb1gzTnBiV2xzWVhKcGRIbGZkbTkwYVc1bkxtZ0FZbWx1V0NCdmRYUWdiMllnY21GdVoyVUFRWE56WlhKMGFXOXVJR0FvZVMweEtTQStQU0F3SUNZbUlDaDVLekVwSUR3Z2JHRndNUzVvWldsbmFIUW9LV0FnWm1GcGJHVmtJR2x1SUFCNUlHOTFkQ0J2WmlCaWIzVnVaSE1BUVhOelpYSjBhVzl1SUdCaWFXNVlJRHdnYlU1MWJWaENhVzV6WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdZbWx1V1NBK1BTQXdZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ2JHRndNQzUzYVdSMGFDZ3BJRDA5SUd4aGNERXVkMmxrZEdnb0tXQWdabUZwYkdWa0lHbHVJQUJKYldGblpTQmthVzFsYm5OcGIyNXpJR2x1WTI5dWMybHpkR1Z1ZEFCaWFXNVpJRzkxZENCdlppQnlZVzVuWlFCQmMzTmxjblJwYjI0Z1lHSnBibGtnUENCdFRuVnRXVUpwYm5OZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JzWVhBd0xuZHBaSFJvS0NrZ1BUMGdiR0Z3TWk1M2FXUjBhQ2dwWUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdZbWx1UVc1bmJHVWdQajBnTUdBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZR3hoY0RBdWFHVnBaMmgwS0NrZ1BUMGdiR0Z3TVM1b1pXbG5hSFFvS1dBZ1ptRnBiR1ZrSUdsdUlBQmlhVzVCYm1kc1pTQnZkWFFnYjJZZ2NtRnVaMlVBUVhOelpYSjBhVzl1SUdCc1lYQXdMbWhsYVdkb2RDZ3BJRDA5SUd4aGNESXVhR1ZwWjJoMEtDbGdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCaWFXNUJibWRzWlNBOElHMU9kVzFCYm1kc1pVSnBibk5nSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQW9lQzB4S1NBK1BTQXdJQ1ltSUNoNEt6RXBJRHdnYVcwdWQybGtkR2dvS1dBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZR0pwYmxOallXeGxJRDQ5SURCZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0FvZVMweEtTQStQU0F3SUNZbUlDaDVLekVwSUR3Z2FXMHVhR1ZwWjJoMEtDbGdJR1poYVd4bFpDQnBiaUFBWW1sdVUyTmhiR1VnYjNWMElHOW1JSEpoYm1kbEFFRnpjMlZ5ZEdsdmJpQmdLR3hoY0RBdWQybGtkR2dvS1Q0K01Ta2dQVDBnYkdGd01pNTNhV1IwYUNncFlDQm1ZV2xzWldRZ2FXNGdBRUZ6YzJWeWRHbHZiaUJnWW1sdVUyTmhiR1VnUENCdFRuVnRVMk5oYkdWQ2FXNXpZQ0JtWVdsc1pXUWdhVzRnQUVGemMyVnlkR2x2YmlCZ0tHeGhjREF1YUdWcFoyaDBLQ2srUGpFcElEMDlJR3hoY0RJdWFHVnBaMmgwS0NsZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0I0WDJScGRsOHlMVEF1TldZZ1BqMGdNR0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lHUnBjM1JDYVc1QmJtZHNaU0ErUFNBd1lDQm1ZV2xzWldRZ2FXNGdBSGhmWkdsMlh6SWdiM1YwSUc5bUlHSnZkVzVrY3lCdmRYUWdiMllnWW05MWJtUnpJR1p2Y2lCcGJuUmxjbkJ2YkdGMGFXOXVBR1JwYzNSQ2FXNUJibWRzWlNCdGRYTjBJRzV2ZENCaVpTQnVaV2RoZEdsMlpRQkJjM05sY25ScGIyNGdZR2g1Y0M1emFYcGxLQ2tnUGowZ09TcHRZWGhmYm5WdFgyaDVjRzkwYUdWelpYTmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCNVgyUnBkbDh5TFRBdU5XWWdQajBnTUdBZ1ptRnBiR1ZrSUdsdUlBQjVYMlJwZGw4eUlHOTFkQ0J2WmlCaWIzVnVaSE1nYjNWMElHOW1JR0p2ZFc1a2N5Qm1iM0lnYVc1MFpYSndiMnhoZEdsdmJnQXZjM0pqTDJWdGMyTnlhWEIwWlc0dlYyVmlRVkpMYVhSTWFXSXZiR2xpTDFOU1F5OUxVRTB2Um5KbFlXdE5ZWFJqYUdWeUwyaHZiVzluY21Gd2FIbGZaWE4wYVcxaGRHbHZiaTl5YjJKMWMzUmZhRzl0YjJkeVlYQm9lUzVvQUdoNWNDQjJaV04wYjNJZ2MyaHZkV3hrSUdKbElHOW1JSE5wZW1VZ09TcHRZWGhmYm5WdFgyaDVjRzkwYUdWelpYTUFRWE56WlhKMGFXOXVJR0I0WDJScGRsOHlLekF1TldZZ1BDQnNZWEF5TG5kcFpIUm9LQ2xnSUdaaGFXeGxaQ0JwYmlBQVFYTnpaWEowYVc5dUlHQjBiWEJmYVM1emFYcGxLQ2tnUGowZ2JuVnRYM0J2YVc1MGMyQWdabUZwYkdWa0lHbHVJQUJCYzNObGNuUnBiMjRnWUhsZlpHbDJYeklyTUM0MVppQThJR3hoY0RJdWFHVnBaMmgwS0NsZ0lHWmhhV3hsWkNCcGJpQUFkRzF3WDJrZ2RtVmpkRzl5SUhOb2IzVnNaQ0JpWlNCdlppQnphWHBsSUc1MWJWOXdiMmx1ZEhNQVFYTnpaWEowYVc5dUlHQW9iR0Z3TUM1M2FXUjBhQ2dwUGo0eEtTQTlQU0JzWVhBeExuZHBaSFJvS0NsZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0JvZVhCZlkyOXpkSE11YzJsNlpTZ3BJRDQ5SUcxaGVGOXVkVzFmYUhsd2IzUm9aWE5sYzJBZ1ptRnBiR1ZrSUdsdUlBQkJjM05sY25ScGIyNGdZQ2hzWVhBd0xtaGxhV2RvZENncFBqNHhLU0E5UFNCc1lYQXhMbWhsYVdkb2RDZ3BZQ0JtWVdsc1pXUWdhVzRnQUhabFkzUnZjZ0JCYzNObGNuUnBiMjRnWUc0Z1BpQXdZQ0JtWVdsc1pXUWdhVzRnQUM5emNtTXZaVzF6WTNKcGNIUmxiaTlYWldKQlVrdHBkRXhwWWk5c2FXSXZVMUpETDB0UVRTOUdjbVZoYTAxaGRHTm9aWEl2ZFhScGJITXZjR0Z5ZEdsaGJGOXpiM0owTG1nQVFYTnpaWEowYVc5dUlHQnliM2NnUENCdFNHVnBaMmgwWUNCbVlXbHNaV1FnYVc0Z0FDOXpjbU12WlcxelkzSnBjSFJsYmk5WFpXSkJVa3RwZEV4cFlpOXNhV0l2VTFKREwwdFFUUzlHY21WaGEwMWhkR05vWlhJdlpuSmhiV1YzYjNKckwybHRZV2RsTG1nQWJpQnRkWE4wSUdKbElIQnZjMmwwYVhabEFISnZkeUJ2ZFhRZ2IyWWdZbTkxYm1SekFFRnpjMlZ5ZEdsdmJpQmdheUErSURCZ0lHWmhhV3hsWkNCcGJpQUFheUJ0ZFhOMElHSmxJSEJ2YzJsMGFYWmxBRUZ6YzJWeWRHbHZiaUJnS0dsdWRDbHpkR1E2T21ac2IyOXlLSGdwSUQwOUlDaHBiblFwZUdBZ1ptRnBiR1ZrSUdsdUlBQXZjM0pqTDJWdGMyTnlhWEIwWlc0dlYyVmlRVkpMYVhSTWFXSXZiR2xpTDFOU1F5OUxVRTB2Um5KbFlXdE5ZWFJqYUdWeUwyUmxkR1ZqZEc5eWN5OXBiblJsY25CdmJHRjBaUzVvQUVGemMyVnlkR2x2YmlCZ01HQWdabUZwYkdWa0lHbHVJQUJHWVdsc1pXUWdkRzhnWTI5dGNIVjBaU0J0WVhSeWFYZ2dhVzUyWlhKelpRQm1iRzl2Y2lncElHRnVaQ0JqWVhOMElHNXZkQ0IwYUdVZ2MyRnRaUUJCYzNObGNuUnBiMjRnWUNocGJuUXBjM1JrT2pwbWJHOXZjaWg1S1NBOVBTQW9hVzUwS1hsZ0lHWmhhV3hsWkNCcGJpQUFRWE56WlhKMGFXOXVJR0I1Y0NBK1BTQXdJQ1ltSUhsd0lEd2dhR1ZwWjJoMFlDQm1ZV2xzWldRZ2FXNGdBSGx3SUc5MWRDQnZaaUJpYjNWdVpITUFRWE56WlhKMGFXOXVJR0I1Y0Y5d2JIVnpYekVnUGowZ01DQW1KaUI1Y0Y5d2JIVnpYekVnUENCb1pXbG5hSFJnSUdaaGFXeGxaQ0JwYmlBQWVYQmZjR3gxYzE4eElHOTFkQ0J2WmlCaWIzVnVaSE1BUVhOelpYSjBhVzl1SUdCNGNDQStQU0F3SUNZbUlIaHdJRHdnZDJsa2RHaGdJR1poYVd4bFpDQnBiaUFBZUhBZ2IzVjBJRzltSUdKdmRXNWtjd0JCYzNObGNuUnBiMjRnWUhod1gzQnNkWE5mTVNBK1BTQXdJQ1ltSUhod1gzQnNkWE5mTVNBOElIZHBaSFJvWUNCbVlXbHNaV1FnYVc0Z0FIaHdYM0JzZFhOZk1TQnZkWFFnYjJZZ1ltOTFibVJ6QUVGemMyVnlkR2x2YmlCZ2R6QWdQajBnTUNBbUppQjNNQ0E4UFNBeExqQXdNREZnSUdaaGFXeGxaQ0JwYmlBQVQzVjBJRzltSUhKaGJtZGxBRUZ6YzJWeWRHbHZiaUJnZHpFZ1BqMGdNQ0FtSmlCM01TQThQU0F4TGpBd01ERmdJR1poYVd4bFpDQnBiaUFBUVhOelpYSjBhVzl1SUdCM01pQStQU0F3SUNZbUlIY3lJRHc5SURFdU1EQXdNV0FnWm1GcGJHVmtJR2x1SUFCQmMzTmxjblJwYjI0Z1lIY3pJRDQ5SURBZ0ppWWdkek1nUEQwZ01TNHdNREF4WUNCbVlXbHNaV1FnYVc0Z0FFRnpjMlZ5ZEdsdmJpQmdLSGN3SzNjeEszY3lLM2N6S1NBOFBTQXhMakF3TURGZ0lHWmhhV3hsWkNCcGJpQUFBQUFBQUFBQUFDQlFBQUFSQUFBQUVnQUFBQUFBQUFESVpBQUFFd0FBQUJRQUFBQk9OblpwYzJsdmJqbEZlR05sY0hScGIyNUZBRHp2QUFDSVpBQUFWUEFBQUU0MmRtbHphVzl1TVRoQ2FXNXZiV2xoYkZCNWNtRnRhV1F6TW1aRkFBQUFQTzhBQUtoa0FBQWdVQUFBQUFBQUFKeGtBQUFQQUFBQUZRQUFBQllBQUFDNVVvdytqbHJuUHJsU2pENEFBQUFBQUFBQUFKeGxBQUFYQUFBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUU1VGRETmZYekl5TUY5ZmMyaGhjbVZrWDNCMGNsOXdiMmx1ZEdWeVNWQk9OblpwYzJsdmJqaExaWGxtY21GdFpVbE1hVGsyUlVWRlRsTmZNVEJ6YUdGeVpXUmZjSFJ5U1ZNelgwVXlOMTlmYzJoaGNtVmtYM0IwY2w5a1pXWmhkV3gwWDJSbGJHVjBaVWxUTTE5VE0xOUZSVTVUWHpsaGJHeHZZMkYwYjNKSlV6TmZSVVZGUlFBODd3QUFGR1VBQUxUc0FBQk9VM1F6WDE4eU1UQnphR0Z5WldSZmNIUnlTVTQyZG1semFXOXVPRXRsZVdaeVlXMWxTVXhwT1RaRlJVVkZNamRmWDNOb1lYSmxaRjl3ZEhKZlpHVm1ZWFZzZEY5a1pXeGxkR1ZKVXpOZlV6TmZSVVVBWW05dmJDQjJhWE5wYjI0Nk9sWnBjM1ZoYkVSaGRHRmlZWE5sUEhacGMybHZiam82UmxKRlFVdEZlSFJ5WVdOMGIzSXNJSFpwYzJsdmJqbzZRbWx1WVhKNVJtVmhkSFZ5WlZOMGIzSmxMQ0IyYVhOcGIyNDZPa0pwYm1GeWVVWmxZWFIxY21WTllYUmphR1Z5UERrMlBqNDZPbkYxWlhKNUtHTnZibk4wSUVkaGRYTnphV0Z1VTJOaGJHVlRjR0ZqWlZCNWNtRnRhV1FnS2lrZ1cwWkZRVlJWVWtWZlJWaFVVa0ZEVkU5U0lEMGdkbWx6YVc5dU9qcEdVa1ZCUzBWNGRISmhZM1J2Y2l3Z1UxUlBVa1VnUFNCMmFYTnBiMjQ2T2tKcGJtRnllVVpsWVhSMWNtVlRkRzl5WlN3Z1RVRlVRMGhGVWlBOUlIWnBjMmx2YmpvNlFtbHVZWEo1Um1WaGRIVnlaVTFoZEdOb1pYSThPVFkrWFFCb2VYQmZZMjl6ZEhNZ2RtVmpkRzl5SUhOb2IzVnNaQ0JpWlNCdlppQnphWHBsSUcxaGVGOXVkVzFmYUhsd2IzUm9aWE5sY3dCQjFNNEJDL3hLc3I2NVBoTGNvTDZRdmprK0V0eWd2cEMrT2I0QUFBQ0FzcjY1dmhMY29ENlF2am0rRXR5Z1BwQytPVDdTY2hpL0FBQUFBTkp5bUw0NkJnUy8wbktZUGpvR0JML1NjaGcvQUFBQWdOSnltRDQ2QmdRLzBuS1l2am9HQkQ4QUFBQ0FWcmc5djJaTkpEOVd1TDIrWmswa1AxYTR2VDRBQUFBQVZyZzlQMlpOSkw5V3VMMCtaazBrdjFhNHZiNE02VmcvQUFBQWdBenAyRDZaMlRzL0RPbll2cG5aT3o4TTZWaS9BQUFBQUF6cDJMNloyVHUvRE9uWVBwblpPNzhBQUFBQS9GTnVQL0ZsVHI4TlZPNCs4V1ZPdncxVTdyNEFBQUNBL0ZOdXYvRmxUajhOVk82KzhXVk9QdzFVN2o0QUFJQy9BQUFBQUFBQUFML1FzMTIvQUFBQVA5Q3pYYjhBQUlBL0FBQUFnQUFBQUQvUXMxMC9BQUFBdjlDelhUOEFBQUFBMkdnQUFCY0FBQUFjQUFBQUhRQUFBQjRBQUFBZkFBQUFUbE4wTTE5Zk1qSXdYMTl6YUdGeVpXUmZjSFJ5WDNCdmFXNTBaWEpKVUdneE5rNTFiR3hCY25KaGVVUmxiR1YwWlhKSmFFVk9VMTg1WVd4c2IyTmhkRzl5U1doRlJVVkZBQUFBQUR6dkFBQ01hQUFBdE93QUFERTJUblZzYkVGeWNtRjVSR1ZzWlhSbGNrbG9SUUFBQUFBQUFBQ0FhUUFBRndBQUFDQUFBQUFoQUFBQUlnQUFBQ01BQUFCT1UzUXpYMTh5TWpCZlgzTm9ZWEpsWkY5d2RISmZjRzlwYm5SbGNrbFFhRTVUWHpFd2MyaGhjbVZrWDNCMGNrbG9SVEkzWDE5emFHRnlaV1JmY0hSeVgyUmxabUYxYkhSZlpHVnNaWFJsU1dob1JVVk9VMTg1WVd4c2IyTmhkRzl5U1doRlJVVkZBRHp2QUFBWWFRQUF0T3dBQUU1VGRETmZYekl4TUhOb1lYSmxaRjl3ZEhKSmFFVXlOMTlmYzJoaGNtVmtYM0IwY2w5a1pXWmhkV3gwWDJSbGJHVjBaVWxvYUVWRkFIWnBjMmx2YmpvNlUyTnZjR1ZrVkdsdFpYSTZPbjVUWTI5d1pXUlVhVzFsY2lncEFHbHBhUUJwYVdscEFHbHBhV2tBYVc1bWFXNXBkSGtBVFdsemMybHVaeUJJZFdabWJXRnVJR052WkdVZ2RHRmliR1VnWlc1MGNua0FSbVZpY25WaGNua0FTbUZ1ZFdGeWVRQktkV3g1QUZSb2RYSnpaR0Y1QUZSMVpYTmtZWGtBVjJWa2JtVnpaR0Y1QUZOaGRIVnlaR0Y1QUZOMWJtUmhlUUJOYjI1a1lYa0FSbkpwWkdGNUFFMWhlUUFsYlM4bFpDOGxlUUJOUVZoZlFVeE1UME5mUTBoVlRrc2dhWE1nZDNKdmJtY3NJSEJzWldGelpTQm1hWGdBUVV4SlIwNWZWRmxRUlNCcGN5QjNjbTl1Wnl3Z2NHeGxZWE5sSUdacGVBQk9iM1FnWVNCS1VFVkhJR1pwYkdVNklITjBZWEowY3lCM2FYUm9JREI0SlRBeWVDQXdlQ1V3TW5nQVEyOXljblZ3ZENCS1VFVkhJR1JoZEdFNklDVjFJR1Y0ZEhKaGJtVnZkWE1nWW5sMFpYTWdZbVZtYjNKbElHMWhjbXRsY2lBd2VDVXdNbmdBVlc1bGVIQmxZM1JsWkNCdFlYSnJaWElnTUhnbE1ESjRBRlZ1YzNWd2NHOXlkR1ZrSUcxaGNtdGxjaUIwZVhCbElEQjRKVEF5ZUFCVmJuTjFjSEJ2Y25SbFpDQktVRVZISUhCeWIyTmxjM002SUZOUFJpQjBlWEJsSURCNEpUQXllQUJFWldacGJtVWdTSFZtWm0xaGJpQlVZV0pzWlNBd2VDVXdNbmdBUkdWbWFXNWxJRUZ5YVhSb2JXVjBhV01nVkdGaWJHVWdNSGdsTURKNE9pQXdlQ1V3TW5nQUxTc2dJQ0F3V0RCNEFDMHdXQ3N3V0NBd1dDMHdlQ3N3ZUNBd2VBQkNiMmQxY3lCRVFVTWdkbUZzZFdVZ01IZ2xlQUJmWDI1bGVIUmZjSEpwYldVZ2IzWmxjbVpzYjNjQVNIVm1abTFoYmlCamIyUmxJSE5wZW1VZ2RHRmliR1VnYjNabGNtWnNiM2NBVG05MkFGUm9kUUFnSUNBZ0lDQWdJQ1UwZFNBbE5IVWdKVFIxSUNVMGRTQWxOSFVnSlRSMUlDVTBkU0FsTkhVQVNsQkZSeUJ3WVhKaGJXVjBaWElnYzNSeWRXTjBJRzFwYzIxaGRHTm9PaUJzYVdKeVlYSjVJSFJvYVc1cmN5QnphWHBsSUdseklDVjFMQ0JqWVd4c1pYSWdaWGh3WldOMGN5QWxkUUJFWldacGJtVWdVbVZ6ZEdGeWRDQkpiblJsY25aaGJDQWxkUUJYWVhKdWFXNW5PaUIwYUhWdFltNWhhV3dnYVcxaFoyVWdjMmw2WlNCa2IyVnpJRzV2ZENCdFlYUmphQ0JrWVhSaElHeGxibWQwYUNBbGRRQk5hWE5qWld4c1lXNWxiM1Z6SUcxaGNtdGxjaUF3ZUNVd01uZ3NJR3hsYm1kMGFDQWxkUUJLUmtsR0lHVjRkR1Z1YzJsdmJpQnRZWEpyWlhJNklIUjVjR1VnTUhnbE1ESjRMQ0JzWlc1bmRHZ2dKWFVBU2taSlJpQmxlSFJsYm5OcGIyNGdiV0Z5YTJWeU9pQndZV3hsZEhSbElIUm9kVzFpYm1GcGJDQnBiV0ZuWlN3Z2JHVnVaM1JvSUNWMUFFcEdTVVlnWlhoMFpXNXphVzl1SUcxaGNtdGxjam9nU2xCRlJ5MWpiMjF3Y21WemMyVmtJSFJvZFcxaWJtRnBiQ0JwYldGblpTd2diR1Z1WjNSb0lDVjFBRXBHU1VZZ1pYaDBaVzV6YVc5dUlHMWhjbXRsY2pvZ1VrZENJSFJvZFcxaWJtRnBiQ0JwYldGblpTd2diR1Z1WjNSb0lDVjFBRlZ1YTI1dmQyNGdRVkJRTVRRZ2JXRnlhMlZ5SUNodWIzUWdRV1J2WW1VcExDQnNaVzVuZEdnZ0pYVUFWVzVyYm05M2JpQkJVRkF3SUcxaGNtdGxjaUFvYm05MElFcEdTVVlwTENCc1pXNW5kR2dnSlhVQVQySjBZV2x1WldRZ1dFMVRJR2hoYm1Sc1pTQWxkUUJHY21WbFpDQllUVk1nYUdGdVpHeGxJQ1YxQUU5aWRHRnBibVZrSUVWTlV5Qm9ZVzVrYkdVZ0pYVUFSbkpsWldRZ1JVMVRJR2hoYm1Sc1pTQWxkUUIxYm5OMWNIQnZjblJsWkNCc2IyTmhiR1VnWm05eUlITjBZVzVrWVhKa0lHbHVjSFYwQUVGMVozVnpkQUJKYm5STWFYTjBBRk4wY21sdVoweHBjM1FBU1c1MllXeHBaQ0JqY205d0lISmxjWFZsYzNRQVZXNXpkWEJ3YjNKMFpXUWdZMjlzYjNJZ1kyOXVkbVZ5YzJsdmJpQnlaWEYxWlhOMEFIVnVjMmxuYm1Wa0lITm9iM0owQUhWdWMybG5ibVZrSUdsdWRBQkRiM0p5ZFhCMElFcFFSVWNnWkdGMFlUb2djSEpsYldGMGRYSmxJR1Z1WkNCdlppQmtZWFJoSUhObFoyMWxiblFBYUdWcFoyaDBBRVp5WVdOMGFXOXVZV3dnYzJGdGNHeHBibWNnYm05MElHbHRjR3hsYldWdWRHVmtJSGxsZEFCRFEwbFNOakF4SUhOaGJYQnNhVzVuSUc1dmRDQnBiWEJzWlcxbGJuUmxaQ0I1WlhRQVRtOTBJR2x0Y0d4bGJXVnVkR1ZrSUhsbGRBQkZjbkp2Y2lCeVpXRmthVzVuSUdSaGRHRWdabkp2YlNBbGN5NW1jMlYwQUZKbFlXUnBibWNnSlhNdVpuTmxkQUJuWlhRQVJYSnliM0k2SUd0d2JWTmxkRkpsWmtSaGRHRlRaWFFBUlhKeWIzSTZJR3R3YlVOb1lXNW5aVkJoWjJWT2IwOW1VbVZtUkdGMFlWTmxkQUJGY25KdmNqb2dhM0J0VFdWeVoyVlNaV1pFWVhSaFUyVjBBRTlqZEFCbWJHOWhkQUJUWVhRQWRXbHVkRFkwWDNRQVEyRnVibTkwSUhGMVlXNTBhWHBsSUcxdmNtVWdkR2hoYmlBbFpDQmpiMnh2Y2lCamIyMXdiMjVsYm5SekFGTjBZWEowSUU5bUlGTmpZVzQ2SUNWa0lHTnZiWEJ2Ym1WdWRITUFRbTluZFhNZ2RtbHlkSFZoYkNCaGNuSmhlU0JoWTJObGMzTUFRbTluZFhNZ2MyRnRjR3hwYm1jZ1ptRmpkRzl5Y3dCUmRXRnVkR2w2YVc1bklIUnZJQ1ZrSUQwZ0pXUXFKV1FxSldRZ1kyOXNiM0p6QUZGMVlXNTBhWHBwYm1jZ2RHOGdKV1FnWTI5c2IzSnpBRU5oYm01dmRDQnhkV0Z1ZEdsNlpTQjBieUJtWlhkbGNpQjBhR0Z1SUNWa0lHTnZiRzl5Y3dCRFlXNXViM1FnY1hWaGJuUnBlbVVnZEc4Z2JXOXlaU0IwYUdGdUlDVmtJR052Ykc5eWN3QkpiblpoYkdsa0lFcFFSVWNnWm1sc1pTQnpkSEoxWTNSMWNtVTZJSFIzYnlCVFQwa2diV0Z5YTJWeWN3QkpiblpoYkdsa0lFcFFSVWNnWm1sc1pTQnpkSEoxWTNSMWNtVTZJSFIzYnlCVFQwWWdiV0Z5YTJWeWN3QnVablJOWVhKclpYSnpBRjloWkdST1JsUk5ZWEpyWlhKekFGTnRiMjkwYUdsdVp5QnViM1FnYzNWd2NHOXlkR1ZrSUhkcGRHZ2dibTl1YzNSaGJtUmhjbVFnYzJGdGNHeHBibWNnY21GMGFXOXpBRTFoZUdsdGRXMGdjM1Z3Y0c5eWRHVmtJR2x0WVdkbElHUnBiV1Z1YzJsdmJpQnBjeUFsZFNCd2FYaGxiSE1BUVhCd2JHbGpZWFJwYjI0Z2RISmhibk5tWlhKeVpXUWdkRzl2SUcxaGJua2djMk5oYm14cGJtVnpBRUZ3Y0d4cFkyRjBhVzl1SUhSeVlXNXpabVZ5Y21Wa0lIUnZieUJtWlhjZ2MyTmhibXhwYm1WekFFUmxZblZuSUcxdlpHVWdjMlYwSUhSdklDVnpBRVpoYVd4bFpDQjBieUJqY21WaGRHVWdkR1Z0Y0c5eVlYSjVJR1pwYkdVZ0pYTUFRMnh2YzJWa0lIUmxiWEJ2Y21GeWVTQm1hV3hsSUNWekFFOXdaVzVsWkNCMFpXMXdiM0poY25rZ1ptbHNaU0FsY3dCQmNISUFkbVZqZEc5eUFFbHVjSFYwSUdacGJHVWdjbVZoWkNCbGNuSnZjZ0JKYm5aaGJHbGtJRXBRUlVjZ1ptbHNaU0J6ZEhKMVkzUjFjbVU2SUcxcGMzTnBibWNnVTA5VElHMWhjbXRsY2dCdVpuUk5ZWEpyWlhJQVpHVjBaV04wVFdGeWEyVnlBR2RsZEU1R1ZFMWhjbXRsY2dCa1pYUmxZM1JPUmxSTllYSnJaWElBVDJOMGIySmxjZ0JPYjNabGJXSmxjZ0JUWlhCMFpXMWlaWElBUkdWalpXMWlaWElBZFc1emFXZHVaV1FnWTJoaGNnQnBiM05mWW1GelpUbzZZMnhsWVhJQVRXRnlBRlZ1Y21WamIyZHVhWHBsWkNCamIyMXdiMjVsYm5RZ1NVUnpJQ1ZrSUNWa0lDVmtMQ0JoYzNOMWJXbHVaeUJaUTJKRGNnQnpaWFIxY0FCV2FYSjBkV0ZzSUdGeWNtRjVJR052Ym5SeWIyeHNaWElnYldWemMyVmtJSFZ3QUZObGNBQWxTVG9sVFRvbFV5QWxjQUIwWldGeVpHOTNiZ0JUZFc0QVNuVnVBSE4wWkRvNlpYaGpaWEIwYVc5dUFFSnZaM1Z6SUVoMVptWnRZVzRnZEdGaWJHVWdaR1ZtYVc1cGRHbHZiZ0JUWld4bFkzUmxaQ0FsWkNCamIyeHZjbk1nWm05eUlIRjFZVzUwYVhwaGRHbHZiZ0JKYldGblpTQjBiMjhnZDJsa1pTQm1iM0lnZEdocGN5QnBiWEJzWlcxbGJuUmhkR2x2YmdCTmIyNEFibUZ1QUVScFpHNG5kQ0JsZUhCbFkzUWdiVzl5WlNCMGFHRnVJRzl1WlNCelkyRnVBRk5oYlhCc2FXNW5JR1poWTNSdmNuTWdkRzl2SUd4aGNtZGxJR1p2Y2lCcGJuUmxjbXhsWVhabFpDQnpZMkZ1QUVwaGJnQktkV3dBWW05dmJBQkNkV1ptWlhJZ2NHRnpjMlZrSUhSdklFcFFSVWNnYkdsaWNtRnllU0JwY3lCMGIyOGdjMjFoYkd3QVFYQnlhV3dBYzJWMFRHOW5UR1YyWld3QVoyVjBURzluVEdWMlpXd0FaVzF6WTNKcGNIUmxiam82ZG1Gc0FIQjFjMmhmWW1GamF3QkdjbWtBWkhCcEFFNUdWQ0J0WVhKclpYSWdhR1ZwWjJoME9pQWxhUUJPUmxRZ2JuVnRMaUJ2WmlCSmJXRm5aVk5sZERvZ0pXa0FUa1pVSUcxaGNtdGxjaUJrY0drNklDVnBBRTVHVkNCdFlYSnJaWElnZDJsa2RHZzZJQ1ZwQUdSaGRHRnpaWFJRWVhSb2JtRnRaWE1nYzJsNlpUb2dKV2tBWW1Ga1gyRnljbUY1WDI1bGQxOXNaVzVuZEdnQVFtOW5kWE1nYldGeWEyVnlJR3hsYm1kMGFBQjNhV1IwYUFCTllYSmphQUJCZFdjQWRXNXphV2R1WldRZ2JHOXVad0J6ZEdRNk9uZHpkSEpwYm1jQVltRnphV05mYzNSeWFXNW5BSE4wWkRvNmMzUnlhVzVuQUhOMFpEbzZkVEUyYzNSeWFXNW5BSE4wWkRvNmRUTXljM1J5YVc1bkFFTnZjSGx5YVdkb2RDQW9ReWtnTWpBeE9Dd2dWR2h2YldGeklFY3VJRXhoYm1Vc0lFZDFhV1J2SUZadmJHeGlaV1JwYm1jQWFXNW1BQ1V1TUV4bUFDVk1aZ0J5WlhOcGVtVUFkSEoxWlFCVWRXVUFabUZzYzJVQVUzVnpjR1Z1YzJsdmJpQnViM1FnWVd4c2IzZGxaQ0JvWlhKbEFFcDFibVVBYzJWMFVISnZhbVZqZEdsdmJrNWxZWEpRYkdGdVpRQm5aWFJRY205cVpXTjBhVzl1VG1WaGNsQnNZVzVsQUhObGRGQnliMnBsWTNScGIyNUdZWEpRYkdGdVpRQm5aWFJRY205cVpXTjBhVzl1Um1GeVVHeGhibVVBVW1WeGRXVnpkR1ZrSUdabFlYUjFjbVVnZDJGeklHOXRhWFIwWldRZ1lYUWdZMjl0Y0dsc1pTQjBhVzFsQUZObFpXc2dabUZwYkdWa0lHOXVJSFJsYlhCdmNtRnllU0JtYVd4bEFGSmxZV1FnWm1GcGJHVmtJRzl1SUhSbGJYQnZjbUZ5ZVNCbWFXeGxBRVZ0Y0hSNUlHbHVjSFYwSUdacGJHVUFVSEpsYldGMGRYSmxJR1Z1WkNCdlppQnBibkIxZENCbWFXeGxBRkJ5WlcxaGRIVnlaU0JsYm1RZ2IyWWdTbEJGUnlCbWFXeGxBSE5sZEVOaGJXVnlZU2dwT2lCRmNuSnZjaUJqY21WaGRHbHVaeUF6UkNCb1lXNWtiR1VBWkc5MVlteGxBRVJEVkNCamIyVm1abWxqYVdWdWRDQnZkWFFnYjJZZ2NtRnVaMlVBU1c1MllXeHBaQ0JqYjJ4dmNpQnhkV0Z1ZEdsNllYUnBiMjRnYlc5a1pTQmphR0Z1WjJVQVNsQkZSeUJrWVhSaGMzUnlaV0Z0SUdOdmJuUmhhVzV6SUc1dklHbHRZV2RsQUNBZ0lDQjNhWFJvSUNWa0lIZ2dKV1FnZEdoMWJXSnVZV2xzSUdsdFlXZGxBR2RsZEZCeWIyTmxjM05wYm1kSmJXRm5aUUJUZEdGeWRDQnZaaUJKYldGblpRQkZibVFnVDJZZ1NXMWhaMlVBUW05bmRYTWdZblZtWm1WeUlHTnZiblJ5YjJ3Z2JXOWtaUUJEYjNKeWRYQjBJRXBRUlVjZ1pHRjBZVG9nWW1Ga0lFaDFabVp0WVc0Z1kyOWtaUUJEYjNKeWRYQjBJRXBRUlVjZ1pHRjBZVG9nWW1Ga0lHRnlhWFJvYldWMGFXTWdZMjlrWlFCelpYUkVaV0oxWjAxdlpHVUFaMlYwUkdWaWRXZE5iMlJsQUhObGRGUm9jbVZ6YUc5c1pFMXZaR1VBWjJWMFZHaHlaWE5vYjJ4a1RXOWtaUUJ6WlhSSmJXRm5aVkJ5YjJOTmIyUmxBR2RsZEVsdFlXZGxVSEp2WTAxdlpHVUFRbTluZFhNZ2FXNXdkWFFnWTI5c2IzSnpjR0ZqWlFCQ2IyZDFjeUJLVUVWSElHTnZiRzl5YzNCaFkyVUFjMlYwVkdoeVpYTm9iMnhrQUdkbGRGUm9jbVZ6YUc5c1pBQjJiMmxrQUVKaFkydHBibWNnYzNSdmNtVWdibTkwSUhOMWNIQnZjblJsWkFCRVExUWdjMk5oYkdWa0lHSnNiMk5ySUhOcGVtVWdKV1I0SldRZ2JtOTBJSE4xY0hCdmNuUmxaQUJSZFdGdWRHbDZZWFJwYjI0Z2RHRmliR1VnTUhnbE1ESjRJSGRoY3lCdWIzUWdaR1ZtYVc1bFpBQklkV1ptYldGdUlIUmhZbXhsSURCNEpUQXllQ0IzWVhNZ2JtOTBJR1JsWm1sdVpXUUFRWEpwZEdodFpYUnBZeUIwWVdKc1pTQXdlQ1V3TW5nZ2QyRnpJRzV2ZENCa1pXWnBibVZrQUZkeWFYUmxJSFJ2SUZoTlV5Qm1ZV2xzWldRQVVtVmhaQ0JtY205dElGaE5VeUJtWVdsc1pXUUFWM0pwZEdVZ2RHOGdSVTFUSUdaaGFXeGxaQUJTWldGa0lHWnliMjBnUlUxVElHWmhhV3hsWkFCWFpXUUFJQ0FnSUNBZ0lDQWxNMlFnSlROa0lDVXpaQ0FsTTJRZ0pUTmtJQ1V6WkNBbE0yUWdKVE5rQUZkaGNtNXBibWM2SUhWdWEyNXZkMjRnU2taSlJpQnlaWFpwYzJsdmJpQnVkVzFpWlhJZ0pXUXVKVEF5WkFCRGIzSnlkWEIwSUVwUVJVY2daR0YwWVRvZ1ptOTFibVFnYldGeWEyVnlJREI0SlRBeWVDQnBibk4wWldGa0lHOW1JRkpUVkNWa0FGTjBZWEowSUU5bUlFWnlZVzFsSURCNEpUQXllRG9nZDJsa2RHZzlKWFVzSUdobGFXZG9kRDBsZFN3Z1kyOXRjRzl1Wlc1MGN6MGxaQUFnSUNBZ1EyOXRjRzl1Wlc1MElDVmtPaUFsWkdoNEpXUjJJSEU5SldRQVNXNTJZV3hwWkNCd2NtOW5jbVZ6YzJsMlpTQndZWEpoYldWMFpYSnpJRk56UFNWa0lGTmxQU1ZrSUVGb1BTVmtJRUZzUFNWa0FDQWdVM005SldRc0lGTmxQU1ZrTENCQmFEMGxaQ3dnUVd3OUpXUUFJQ0FnSUVOdmJYQnZibVZ1ZENBbFpEb2daR005SldRZ1lXTTlKV1FBU1c1MllXeHBaQ0J3Y205bmNtVnpjMmwyWlNCd1lYSmhiV1YwWlhKeklHRjBJSE5qWVc0Z2MyTnlhWEIwSUdWdWRISjVJQ1ZrQUVsdWRtRnNhV1FnYzJOaGJpQnpZM0pwY0hRZ1lYUWdaVzUwY25rZ0pXUUFRbTluZFhNZ1JGRlVJR2x1WkdWNElDVmtBRUp2WjNWeklFUklWQ0JwYm1SbGVDQWxaQUJDYjJkMWN5QkVRVU1nYVc1a1pYZ2dKV1FBVkc5dklHMWhibmtnWTI5c2IzSWdZMjl0Y0c5dVpXNTBjem9nSldRc0lHMWhlQ0FsWkFCSmJtTnZibk5wYzNSbGJuUWdjSEp2WjNKbGMzTnBiMjRnYzJWeGRXVnVZMlVnWm05eUlHTnZiWEJ2Ym1WdWRDQWxaQ0JqYjJWbVptbGphV1Z1ZENBbFpBQlhjbTl1WnlCS1VFVkhJR3hwWW5KaGNua2dkbVZ5YzJsdmJqb2diR2xpY21GeWVTQnBjeUFsWkN3Z1kyRnNiR1Z5SUdWNGNHVmpkSE1nSldRQVZHaHlaWE5vYjJ4a0lHMXZaR1VnYzJWMElIUnZJQ1ZrQUZSb2NtVnphRzlzWkNCelpYUWdkRzhnSldRQVFYUWdiV0Z5YTJWeUlEQjRKVEF5ZUN3Z2NtVmpiM1psY25rZ1lXTjBhVzl1SUNWa0FGVnVjM1Z3Y0c5eWRHVmtJRXBRUlVjZ1pHRjBZU0J3Y21WamFYTnBiMjRnSldRQVJHVm1hVzVsSUZGMVlXNTBhWHBoZEdsdmJpQlVZV0pzWlNBbFpDQWdjSEpsWTJsemFXOXVJQ1ZrQUVGa2IySmxJRUZRVURFMElHMWhjbXRsY2pvZ2RtVnljMmx2YmlBbFpDd2dabXhoWjNNZ01IZ2xNRFI0SURCNEpUQTBlQ3dnZEhKaGJuTm1iM0p0SUNWa0FFRnNiRzlqWVhSbFpDQjJhV1JsYjBaeVlXMWxVMmw2WlNBbFpBQkpiWEJ5YjNCbGNpQmpZV3hzSUhSdklFcFFSVWNnYkdsaWNtRnllU0JwYmlCemRHRjBaU0FsWkFCRFlXNXViM1FnZEhKaGJuTmpiMlJsSUdSMVpTQjBieUJ0ZFd4MGFYQnNaU0IxYzJVZ2IyWWdjWFZoYm5ScGVtRjBhVzl1SUhSaFlteGxJQ1ZrQUZWdWEyNXZkMjRnUVdSdlltVWdZMjlzYjNJZ2RISmhibk5tYjNKdElHTnZaR1VnSldRQVNXNTJZV3hwWkNCdFpXMXZjbmtnY0c5dmJDQmpiMlJsSUNWa0FFSnZaM1Z6SUcxbGMzTmhaMlVnWTI5a1pTQWxaQUJVY21GamEybHVaeUJzYjNOMExpQWxaQUJLUmtsR0lFRlFVREFnYldGeWEyVnlPaUIyWlhKemFXOXVJQ1ZrTGlVd01tUXNJR1JsYm5OcGRIa2dKV1I0SldRZ0lDVmtBSE4wWkRvNlltRmtYMkZzYkc5akFFUmxZd0FsYkdRbFl3QkRiMjF3YjI1bGJuUWdhVzVrWlhnZ0pXUTZJRzFwYzIxaGRHTm9hVzVuSUhOaGJYQnNhVzVuSUhKaGRHbHZJQ1ZrT2lWa0xDQWxaRG9sWkN3Z0pXTUFSbVZpQUhKM1lRQlRZMkZ1SUhOamNtbHdkQ0JrYjJWeklHNXZkQ0IwY21GdWMyMXBkQ0JoYkd3Z1pHRjBZUUJuWlhST1JsUkVZWFJoQUY5c2IyRmtRMkZ0WlhKaEFDVmhJQ1ZpSUNWa0lDVklPaVZOT2lWVElDVlpBRkJQVTBsWUFFRlNYMHhCUWtWTVNVNUhYMVJJVWtWVFNGOU5UMFJGWDBGVlZFOWZUMVJUVlFCQlVsOU5RVkpMUlZKZlNVNUdUMTlEVlZSUFJrWmZVRWhCVTBWZlRVRlVRMGhmUTA5T1ZGSkJVMVFBUVZKZlRVRllYMHhQVDFCZlEwOVZUbFFBU1c1MllXeHBaQ0JqYjIxd2IyNWxiblFnU1VRZ0pXUWdhVzRnVTA5VEFFRlNYMDFCVWt0RlVsOUpUa1pQWDBOVlZFOUdSbDlRU0VGVFJWOUlSVlZTU1ZOVVNVTmZWRkpQVlVKTVJWTlBUVVZmVFVGVVVrbFlYME5QUkVWVEFFVlNVazlTWDAxQlVrdEZVbDlKVGtSRldGOVBWVlJmVDBaZlFrOVZUa1JUQUNWSU9pVk5PaVZUQUVGU1gweFBSMTlNUlZaRlRGOUZVbEpQVWdCQlVsOU5RVkpMUlZKZlNVNUdUMTlEVlZSUFJrWmZVRWhCVTBWZlVFOVRSVjlGVWxKUFVnQkJVbDlNVDBkZlRFVldSVXhmU1U1R1R3QkJVbDlNVDBkZlRFVldSVXhmVWtWTVgwbE9SazhBUVZKZlRFOUhYMHhGVmtWTVgxZEJVazRBUVZKZlRVRlNTMFZTWDBsT1JrOWZRMVZVVDBaR1gxQklRVk5GWDFCQlZGUkZVazVmUlZoVVVrRkRWRWxQVGdCT1FVNEFRVkpmVEVGQ1JVeEpUa2RmVkVoU1JWTklYMDFQUkVWZlFWVlVUMTlOUlVSSlFVNEFVRTBBU2xCRlIwMUZUUUJCVFFCTVExOUJURXdBUVZKZlRVRlNTMFZTWDBsT1JrOWZRMVZVVDBaR1gxQklRVk5GWDAxQlZFTklYMEpCVWtOUFJFVmZSVVJEWDBaQlNVd0FRVkpmVEVGQ1JVeEpUa2RmVkVoU1JWTklYMDFQUkVWZlRVRk9WVUZNQUVGU1gwMUJVa3RGVWw5SlRrWlBYME5WVkU5R1JsOVFTRUZUUlY5UVQxTkZYMFZTVWs5U1gwMVZURlJKQUVGU1gweFBUMUJmUWxKRlFVdGZWRWhTUlZOSUFFRlNYMFJGUmtGVlRGUmZURUZDUlV4SlRrZGZWRWhTUlZOSUFFRlNYMHhQUjE5TVJWWkZURjlFUlVKVlJ3Qk1RVTVIQUVsdWRtRnNhV1FnVTA5VElIQmhjbUZ0WlhSbGNuTWdabTl5SUhObGNYVmxiblJwWVd3Z1NsQkZSd0JEWVhWMGFXOXVPaUJ4ZFdGdWRHbDZZWFJwYjI0Z2RHRmliR1Z6SUdGeVpTQjBiMjhnWTI5aGNuTmxJR1p2Y2lCaVlYTmxiR2x1WlNCS1VFVkhBRWx1ZG1Gc2FXUWdTbEJGUnlCbWFXeGxJSE4wY25WamRIVnlaVG9nSlhNZ1ltVm1iM0psSUZOUFJnQkpUa1lBUVZKZlRFRkNSVXhKVGtkZlZFaFNSVk5JWDAxUFJFVmZRVlZVVDE5QlJFRlFWRWxXUlFCQlVsOU5RVkpMUlZKZlNVNUdUMTlEVlZSUFJrWmZVRWhCVTBWZlRrOU9SUUJCVWw5RVJVSlZSMTlFU1ZOQlFreEZBRUZTWDBSRlFsVkhYMFZPUVVKTVJRQkJVbDlKVFVGSFJWOVFVazlEWDBaU1FVMUZYMGxOUVVkRkFFRlNYMGxOUVVkRlgxQlNUME5mUmtsRlRFUmZTVTFCUjBVQVFWSmZSRVZHUVZWTVZGOUVSVUpWUjE5TlQwUkZBRUZTWDBSRlJrRlZURlJmU1UxQlIwVmZVRkpQUTE5TlQwUkZBRUZTWDAxQlVrdEZVbDlKVGtaUFgwTlZWRTlHUmw5UVNFRlRSVjlOUVZSRFNGOURUMDVHU1VSRlRrTkZBRVZTVWs5U1gwRlNRMDlPVkZKUFRFeEZVbDlPVDFSZlJrOVZUa1FBUlZKU1QxSmZUVlZNVkVsTlFWSkxSVkpmVGs5VVgwWlBWVTVFQUVGU1gwMUJVa3RGVWw5SlRrWlBYME5WVkU5R1JsOVFTRUZUUlY5TlFWUkRTRjlDUVZKRFQwUkZYMDVQVkY5R1QxVk9SQUJCVWw5TlFWSkxSVkpmU1U1R1QxOURWVlJQUmtaZlVFaEJVMFZmVFVGVVEwaGZSMFZPUlZKSlF3QlBkWFJ3ZFhRZ1ptbHNaU0IzY21sMFpTQmxjbkp2Y2lBdExTMGdiM1YwSUc5bUlHUnBjMnNnYzNCaFkyVS9BRmR5YVhSbElHWmhhV3hsWkNCdmJpQjBaVzF3YjNKaGNua2dabWxzWlNBdExTMGdiM1YwSUc5bUlHUnBjMnNnYzNCaFkyVS9BR1Z0YzJOeWFYQjBaVzQ2T20xbGJXOXllVjkyYVdWM1BITm9iM0owUGdCbGJYTmpjbWx3ZEdWdU9qcHRaVzF2Y25sZmRtbGxkengxYm5OcFoyNWxaQ0J6YUc5eWRENEFaVzF6WTNKcGNIUmxiam82YldWdGIzSjVYM1pwWlhjOGFXNTBQZ0JsYlhOamNtbHdkR1Z1T2pwdFpXMXZjbmxmZG1sbGR6eDFibk5wWjI1bFpDQnBiblErQUdWdGMyTnlhWEIwWlc0Nk9tMWxiVzl5ZVY5MmFXVjNQR1pzYjJGMFBnQmxiWE5qY21sd2RHVnVPanB0WlcxdmNubGZkbWxsZHp4MWFXNTBPRjkwUGdCbGJYTmpjbWx3ZEdWdU9qcHRaVzF2Y25sZmRtbGxkenhwYm5RNFgzUStBR1Z0YzJOeWFYQjBaVzQ2T20xbGJXOXllVjkyYVdWM1BIVnBiblF4Tmw5MFBnQmxiWE5qY21sd2RHVnVPanB0WlcxdmNubGZkbWxsZHp4cGJuUXhObDkwUGdCbGJYTmpjbWx3ZEdWdU9qcHRaVzF2Y25sZmRtbGxkengxYVc1ME16SmZkRDRBWlcxelkzSnBjSFJsYmpvNmJXVnRiM0o1WDNacFpYYzhhVzUwTXpKZmRENEFaVzF6WTNKcGNIUmxiam82YldWdGIzSjVYM1pwWlhjOFkyaGhjajRBWlcxelkzSnBjSFJsYmpvNmJXVnRiM0o1WDNacFpYYzhkVzV6YVdkdVpXUWdZMmhoY2o0QWMzUmtPanBpWVhOcFkxOXpkSEpwYm1jOGRXNXphV2R1WldRZ1kyaGhjajRBWlcxelkzSnBjSFJsYmpvNmJXVnRiM0o1WDNacFpYYzhjMmxuYm1Wa0lHTm9ZWEkrQUdWdGMyTnlhWEIwWlc0Nk9tMWxiVzl5ZVY5MmFXVjNQR3h2Ym1jK0FHVnRjMk55YVhCMFpXNDZPbTFsYlc5eWVWOTJhV1YzUEhWdWMybG5ibVZrSUd4dmJtYytBR1Z0YzJOeWFYQjBaVzQ2T20xbGJXOXllVjkyYVdWM1BHUnZkV0pzWlQ0QU1ERXlNelExTmpjNE9RQTVZeUFnTVRRdFNtRnVMVEl3TVRnQVF5NVZWRVl0T0FCRmNuSnZjaUJ5WldGa2FXNW5JRXRRVFNCa1lYUmhJR1p5YjIwZ0pYTXVabk5sZERNQVVtVmhaR2x1WnlBbGN5NW1jMlYwTXdCelpYUjFjRUZTTWdCRmNuSnZjaUJsZUdObFpXUWdiV0Y0YVcxMWJTQndZV2RsY3k0QWIyNHVBRzltWmk0QVRHOWhaR2x1WnlCdlppQk9SbFFnWkdGMFlTQmpiMjF3YkdWMFpTNEFjMlYwUTJGdFpYSmhLQ2s2SUVWeWNtOXlPaUJoY2xCaGNtRnRURlJEY21WaGRHVXVBRVJ2Ym1VdUFITmxkRU5oYldWeVlTZ3BPaUJGY25KdmNqb2dZWEpEY21WaGRHVklZVzVrYkdVdUFFVnljbTl5T2lCaGNqSkRjbVZoZEdWSVlXNWtiR1V1QUdGeVJtbHNkR1Z5VkhKaGJuTk5ZWFFnWlhKeWIzSWdkMmwwYUNCdFlYSnJaWElnSldRdUFFbHRZV2RsSUhCeWIyTXVJRzF2WkdVZ2MyVjBJSFJ2SUNWa0xnQkJjM05wWjI1bFpDQndZV2RsSUc1dkxpQWxaQzRBYkc5aFpFTmhiV1Z5WVNncE9pQkZjbkp2Y2lCc2IyRmthVzVuSUhCaGNtRnRaWFJsY2lCbWFXeGxJQ1Z6SUdadmNpQmpZVzFsY21FdUFDaHVkV3hzS1FCRmJYQjBlU0JLVUVWSElHbHRZV2RsSUNoRVRrd2dibTkwSUhOMWNIQnZjblJsWkNrQVNXNXpkV1ptYVdOcFpXNTBJRzFsYlc5eWVTQW9ZMkZ6WlNBbFpDa0FZV1JrSUU1R1ZDQnRZWEpyWlhJdFBpQW5KWE1uQUZCMWNtVWdkbWx5ZEhWaGJDQm1kVzVqZEdsdmJpQmpZV3hzWldRaEFDVnpDZ0JGY25KdmNqb2diV0ZzYkc5akNnQWpJeU1nUm1WaGRIVnlaU0JqWVc1a2FXUmhkR1Z6SUdadmNpQjBjbUZqYTJsdVp5QmhjbVVnYjNabGNtWnNiM2N1Q2dCVWNtRmphMlZrSUhCaFoyVWdKV1FnS0cxaGVDQWxaQ2t1Q2dBcUtpb2dRMkZ0WlhKaElGQmhjbUZ0WlhSbGNpQnlaWE5wZW1Wa0lHWnliMjBnSldRc0lDVmtMaUFxS2lvS0FFOTFkQ0J2WmlCdFpXMXZjbmtoSVFvQWFXUmtaR1JrWkdSa1pHUmtaR1FBYVFCcGFXbHBhV2tBVGxOME0xOWZNaloyWldOMGIzSkpUbE5mTVRKaVlYTnBZMTl6ZEhKcGJtZEpZMDVUWHpFeFkyaGhjbDkwY21GcGRITkpZMFZGVGxOZk9XRnNiRzlqWVhSdmNrbGpSVVZGUlU1VE5GOUpVelpmUlVWRlJRQUFBQlR2QUFEb2lnQUFVRTVUZEROZlh6STJkbVZqZEc5eVNVNVRYekV5WW1GemFXTmZjM1J5YVc1blNXTk9VMTh4TVdOb1lYSmZkSEpoYVhSelNXTkZSVTVUWHpsaGJHeHZZMkYwYjNKSlkwVkZSVVZPVXpSZlNWTTJYMFZGUlVVQUFQVHZBQUJJaXdBQUFBQUFBRUNMQUFCUVMwNVRkRE5mWHpJMmRtVmpkRzl5U1U1VFh6RXlZbUZ6YVdOZmMzUnlhVzVuU1dOT1UxOHhNV05vWVhKZmRISmhhWFJ6U1dORlJVNVRYemxoYkd4dlkyRjBiM0pKWTBWRlJVVk9VelJmU1ZNMlgwVkZSVVVBOU84QUFMQ0xBQUFCQUFBQVFJc0FBR2xwQUhZQWRta0FvSXNBQUZEdUFBQ2dpd0FBY0l3QUFFNVRkRE5mWHpJeE1tSmhjMmxqWDNOMGNtbHVaMGxqVGxOZk1URmphR0Z5WDNSeVlXbDBjMGxqUlVWT1UxODVZV3hzYjJOaGRHOXlTV05GUlVWRkFBQVU3d0FBTUl3QUFIWnBhV2tBQUFBQVVPNEFBS0NMQUFEVTdnQUFjSXdBQUhacGFXbHBBQUFBMU80QUFBaU1BQUJwYVdrQXhJd0FBRUNMQUFEVTdnQUFUakV3WlcxelkzSnBjSFJsYmpOMllXeEZBQUFVN3dBQXNJd0FBR2xwYVdrQVFlQ1pBZ3ZDQVdqdUFBQkFpd0FBMU80QUFIQ01BQUJwYVdscGFRQk9VM1F6WDE4eU5uWmxZM1J2Y2tscFRsTmZPV0ZzYkc5allYUnZja2xwUlVWRlJRQUFBQlR2QUFEMmpBQUFVRTVUZEROZlh6STJkbVZqZEc5eVNXbE9VMTg1WVd4c2IyTmhkRzl5U1dsRlJVVkZBQUFBQVBUdkFBQWtqUUFBQUFBQUFCeU5BQUJRUzA1VGRETmZYekkyZG1WamRHOXlTV2xPVTE4NVlXeHNiMk5oZEc5eVNXbEZSVVZGQUFBQTlPOEFBRnlOQUFBQkFBQUFISTBBQUV5TkFBQlE3Z0FBVEkwQUFMRHVBRUd3bXdJTElsRHVBQUJNalFBQTFPNEFBTER1QUFEVTdnQUFoSTBBQU1TTUFBQWNqUUFBMU80QVFlQ2JBZ3VTQW1qdUFBQWNqUUFBMU80QUFMRHVBQUJPVTNRelgxOHlOblpsWTNSdmNrazVibVowVFdGeWEyVnlUbE5mT1dGc2JHOWpZWFJ2Y2tsVE1WOUZSVVZGQUFBVTd3QUE4STBBQUZCT1UzUXpYMTh5Tm5abFkzUnZja2s1Ym1aMFRXRnlhMlZ5VGxOZk9XRnNiRzlqWVhSdmNrbFRNVjlGUlVWRkFQVHZBQUFvamdBQUFBQUFBQ0NPQUFCUVMwNVRkRE5mWHpJMmRtVmpkRzl5U1RsdVpuUk5ZWEpyWlhKT1UxODVZV3hzYjJOaGRHOXlTVk14WDBWRlJVVUFBQUFBOU84QUFHaU9BQUFCQUFBQUlJNEFBRmlPQUFCUTdnQUFXSTRBQU1pT0FBQTVibVowVFdGeWEyVnlBQUFVN3dBQXZJNEFBRkR1QUFCWWpnQUExTzRBQU1pT0FBRFU3Z0FBbkk0QUFNU01BQUFnamdBQTFPNEFRWUNlQWd1U0FXanVBQUFnamdBQTFPNEFBTWlPQUFDdzdnQUFzTzRBQUxEdUFBQ3c3Z0FBc080QUFMRHVBQUFjalFBQXNPNEFBRUNMQUFDdzdnQUFjSXdBQUxEdUFBQ3c3Z0FBc080QUFNaU9BQUN3N2dBQXNPNEFBR2tBQUFCUTdnQUFzTzRBQUhacGFRQ3c3Z0FBVU80QUFMRHVBQUFFN3dBQWRtbHBaQUFBQUFBRTd3QUFzTzRBQUdScGFRQlE3Z0FBc080QUFMRHVBRUdnbndJTHl3T0JBUjFhRGdLR0pSQURGQkVTQkFzSUZBWFlBeGNHMmdFWkIrVUFIQWh2QUI0Sk5nQWhDaG9BSXdzTkFBa01CZ0FLRFFNQURBMEJBSThQZjFva0VDVS9KaEh5TENjU2ZDQW9FN2tYS2hTQ0VTc1Y3d3d0RnFFSkxoY3ZCekFZWEFVeEdRWUVNeG9EQXpRYlFBSTJITEVCT0IxRUFUa2U5UUE3SDdjQVBDQ0tBRDRoYUFBL0lrNEFJQ003QUNFSkxBQ2xKZUZhUUNaTVNFRW5EVHBES1BFdVJDa2ZKa1VxTXg5R0s2Z1pTQ3dZRlVrdGR4RktMblFPU3kvN0MwMHcrQWxPTVdFSVR6SUdCekF6elFVeU5ONEVNalVQQkRNMll3TTBOOVFDTlRoY0FqWTUrQUUzT3FRQk9EdGdBVGs4SlFFNlBmWUFPejdMQUQwL3F3QTlJSThBd1VFU1cxQkNCRTFSUXl4QlVrVFlOMU5GNkM5VVJqd3BWa2Q1STFkSTN4NVhTYWthU0VwT0YwaExKQlJLVEp3UlNrMXJEMHRPVVExTlQ3WUxUVEJBQ3RCUk1saFlVaHhOV1ZPT1ExcFUzVHRiVmU0MFhGYXVMbDFYbWlsV1J4WWwyRmx3VlY5YXFVeGdXOWxFWVZ3aVBtTmRKRGhqWHJReVhWWVhMdDlncUZabFlVWlBabUxsUjJkanowRm9aRDA4WTExZU4ybG1NVkpxWnc5TWEyZzVSbWRqWGtIcGFpZFdiR3ZuVUcxbmhVdHViWmRWYjJ0UFVPNXZFRnB3YlNKVjhHL3JXWEZ4SFZwVFQxTUFRYm1qQWdzRFRGTkZBRUdScEFJTHlBRkF4VmlmVTBKTEFFQkpNcU1pcUJIRldDRjcvSE5pYU1WWXYwVUxNSDRZbjFQOGMwRnRWR0tmVTdOQlFTMFNGMEpMWW1oVVluNVlRa3NoTzdvb3d4UUFRTVZZbjFOQ1N3QkFTVEtqSXFnUlNUSy9SYk5CSVR0Sk1vSW5OeHZnRGFNaUN6QkJMYm9vb3lJM0c3OFNqZ21vRVg0WUVoZkRGS2dSNEEyT0NkOEVBQUFBQUFBQThEL3ZZVWl4VURIMlA4cHZUWkd1NS9RL3FoRnM3MkxROGo4QUFBQUFBQUR3UHp1L3A4QnBKT2svdXlESGUzcFI0VDlkcTNMZVZhalJQN0VBQUFDeUFBQUFzd0JCNUtVQ0N5MEJBQUFBQWdBQUFBTUFBQUFBQUFBQUFRQUFBQVVBQUFBQ0FBQUFCQUFBQUFZQUFBQURBQUFBQndBQUFBZ0FRYVNtQWd1ZEFRRUFBQUFGQUFBQUJnQUFBQUlBQUFBRUFBQUFCd0FBQUF3QUFBQURBQUFBQ0FBQUFBc0FBQUFOQUFBQUNRQUFBQW9BQUFBT0FBQUFEd0FBQUFBQUFBQUJBQUFBQlFBQUFBWUFBQUFPQUFBQUFnQUFBQVFBQUFBSEFBQUFEUUFBQUE4QUFBQURBQUFBQ0FBQUFBd0FBQUFRQUFBQUZRQUFBQWtBQUFBTEFBQUFFUUFBQUJRQUFBQVdBQUFBQ2dBQUFCSUFBQUFUQUFBQUZ3QUFBQmdBUWRTbkFndk5BZ0VBQUFBRkFBQUFCZ0FBQUE0QUFBQVBBQUFBQWdBQUFBUUFBQUFIQUFBQURRQUFBQkFBQUFBWkFBQUFBd0FBQUFnQUFBQU1BQUFBRVFBQUFCZ0FBQUFhQUFBQUNRQUFBQXNBQUFBU0FBQUFGd0FBQUJzQUFBQWdBQUFBQ2dBQUFCTUFBQUFXQUFBQUhBQUFBQjhBQUFBaEFBQUFGQUFBQUJVQUFBQWRBQUFBSGdBQUFDSUFBQUFqQUFBQUFBQUFBQUVBQUFBRkFBQUFCZ0FBQUE0QUFBQVBBQUFBR3dBQUFBSUFBQUFFQUFBQUJ3QUFBQTBBQUFBUUFBQUFHZ0FBQUJ3QUFBQURBQUFBQ0FBQUFBd0FBQUFSQUFBQUdRQUFBQjBBQUFBbUFBQUFDUUFBQUFzQUFBQVNBQUFBR0FBQUFCNEFBQUFsQUFBQUp3QUFBQW9BQUFBVEFBQUFGd0FBQUI4QUFBQWtBQUFBS0FBQUFDMEFBQUFVQUFBQUZnQUFBQ0FBQUFBakFBQUFLUUFBQUN3QUFBQXVBQUFBRlFBQUFDRUFBQUFpQUFBQUtnQUFBQ3NBQUFBdkFBQUFNQUJCdEtvQ0MvVUlBUUFBQUFVQUFBQUdBQUFBRGdBQUFBOEFBQUFiQUFBQUhBQUFBQUlBQUFBRUFBQUFCd0FBQUEwQUFBQVFBQUFBR2dBQUFCMEFBQUFxQUFBQUF3QUFBQWdBQUFBTUFBQUFFUUFBQUJrQUFBQWVBQUFBS1FBQUFDc0FBQUFKQUFBQUN3QUFBQklBQUFBWUFBQUFId0FBQUNnQUFBQXNBQUFBTlFBQUFBb0FBQUFUQUFBQUZ3QUFBQ0FBQUFBbkFBQUFMUUFBQURRQUFBQTJBQUFBRkFBQUFCWUFBQUFoQUFBQUpnQUFBQzRBQUFBekFBQUFOd0FBQUR3QUFBQVZBQUFBSWdBQUFDVUFBQUF2QUFBQU1nQUFBRGdBQUFBN0FBQUFQUUFBQUNNQUFBQWtBQUFBTUFBQUFERUFBQUE1QUFBQU9nQUFBRDRBQUFBL0FBQUFBQUFBQUFFQUFBQURBQUFBQndBQUFBOEFBQUFmQUFBQVB3QUFBSDhBQUFEL0FBQUEvd0VBQVA4REFBRC9Cd0FBL3c4QUFQOGZBQUQvUHdBQS8zOEFBQUVBQUFBREFBQUFBd0FBQUFRQUFBQUVBQUFBQXdBQUFBTUFBQUFBQUFBQWYzOEFBS0pxQUFCOWFnQUFKM2tBQVBXQUFBRCtiZ0FBY1hnQUFGSjZBQUQxZndBQWgzUUFBT3A1QUFBQmVnQUFTSFlBQUpwOUFBQWFkUUFBWTM4QUFDbCtBQUF3ZkFBQW9ud0FBUE53QUFEWmZBQUExWDRBQUdkc0FBRFljQUFBVjNVQUFCZDNBQUMwYndBQU1uMEFBQk52QUFBZmZRQUE2MnNBQUF4OUFBRDVmQUFBdUlrQUFEQjdBQUFjZXdBQStYUUFBRHB6QUFCTmhRQUFqRzhBQUJac0FBQUFhZ0FBUVhJQUFQeDNBQUFOZUFBQS8zNEFBRDJBQUFDT2VBQUEyVzhBQUpKM0FBRExlZ0FBTm5vQUFLWjZBQUMxZUFBQWZIb0FBTUpxQUFEZGlRQUFqWEFBQUVWeEFBQnRjUUFBallNQUFNRnhBQUJRY3dBQVlXc0FBSlJ4QUFEYWNnQUEzbmNBQU1CM0FBQjhoUUFBbTNJQUFFSnJBQUEwZEFBQXluUUFBQWQ3QUFEemVnQUF2bllBQUIySUFBQlBnd0FBZDM0QUFENXVBQUFTYmdBQXAyc0FBSXRyQUFCTWZnQUF0R3dBQUtwdUFBQ1RiZ0FBR25rQUFFbDdBQUNuZndBQXoyd0FBREp0QUFEWGVBQUFDMjBBQUNsckFBQS9iQUFBQ25FQUFDMXhBQUNtZEFBQUJINEFBTkY3QUFBSWNnQUExM3NBQUJGOEFBQUxlUUFBdTNBQUFJUjhBQUJuZkFBQS9YSUFBQlp6QUFDYWJRQUFZRzBBQU54dEFBRDZjd0FBZjI0QUFHaHVBQUE5ZndBQVpYa0FBRmg5QUFEdGFnQUFWRzhBQUVGNUFBQnhld0FBS1hnQUFKOTdBQUFrZ3dBQWNISUFBQUFBQUFCQUJnQUFnRDRBQUFBQUFBQ0lFd0FBQU1BdzhBek1QUHdEd3pQekQ4OC8vNEJBc0hDTVRMeDhnME96YzQ5UHYzOGc0QkRRTE93YzNDUGpFOU12N3gvZm9HQ1FVS3hzbkZ5alk1TlRyMitmWHdqSU9QZ0V4RFQwQzhzNyt3ZkhOL2VJU0xoNGhFUzBkSXRMdTN1SFI3ZDNLT2dZMkNUa0ZOUXI2eHZiSitjWDE2aG9tRmlrWkpSVXEydWJXNmRubDFjQ3dqTHlEczQrL2dIQk1mRU56VDM5Z2tLeWNvNU92bjZCUWJGeGpVMjlmU0xpRXRJdTdoN2VJZUVSMFMzdEhkMmlZcEpTcm02ZVhxRmhrVkd0YloxZENzbzYrZ2JHTnZZSnlUbjVCY1UxOVlwS3VucUdScloyaVVtNWVZVkZ0WFVxNmhyYUp1WVcxaW5wR2RrbDVSWFZxbXFhV3FabWxsYXBhWmxacFdXVlZRRUFBQUFBQUFBQUFnQkJ0TE1DQzcwRUFRQUFBQWdBQUFBUUFBQUFDUUFBQUFJQUFBQURBQUFBQ2dBQUFCRUFBQUFZQUFBQUlBQUFBQmtBQUFBU0FBQUFDd0FBQUFRQUFBQUZBQUFBREFBQUFCTUFBQUFhQUFBQUlRQUFBQ2dBQUFBd0FBQUFLUUFBQUNJQUFBQWJBQUFBRkFBQUFBMEFBQUFHQUFBQUJ3QUFBQTRBQUFBVkFBQUFIQUFBQUNNQUFBQXFBQUFBTVFBQUFEZ0FBQUE1QUFBQU1nQUFBQ3NBQUFBa0FBQUFIUUFBQUJZQUFBQVBBQUFBRndBQUFCNEFBQUFsQUFBQUxBQUFBRE1BQUFBNkFBQUFPd0FBQURRQUFBQXRBQUFBSmdBQUFCOEFBQUFuQUFBQUxnQUFBRFVBQUFBOEFBQUFQUUFBQURZQUFBQXZBQUFBTndBQUFENEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFBQUFBQUFCQUFBQUNBQUFBQkFBQUFBSkFBQUFBZ0FBQUFNQUFBQUtBQUFBRVFBQUFCZ0FBQUFnQUFBQUdRQUFBQklBQUFBTEFBQUFCQUFBQUFVQUFBQU1BQUFBRXdBQUFCb0FBQUFoQUFBQUtBQUFBREFBQUFBcEFBQUFJZ0FBQUJzQUFBQVVBQUFBRFFBQUFBWUFBQUFPQUFBQUZRQUFBQndBQUFBakFBQUFLZ0FBQURFQUFBQXlBQUFBS3dBQUFDUUFBQUFkQUFBQUZnQUFBQjRBQUFBbEFBQUFMQUFBQURNQUFBQTBBQUFBTFFBQUFDWUFBQUF1QUFBQU5RQUFBRFlBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUVHRXVBSUw3UUlCQUFBQUNBQUFBQkFBQUFBSkFBQUFBZ0FBQUFNQUFBQUtBQUFBRVFBQUFCZ0FBQUFnQUFBQUdRQUFBQklBQUFBTEFBQUFCQUFBQUFVQUFBQU1BQUFBRXdBQUFCb0FBQUFoQUFBQUtBQUFBQ2tBQUFBaUFBQUFHd0FBQUJRQUFBQU5BQUFBRlFBQUFCd0FBQUFqQUFBQUtnQUFBQ3NBQUFBa0FBQUFIUUFBQUNVQUFBQXNBQUFBTFFBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQUFBQUFBQVFBQUFBZ0FBQUFRQUFBQUNRQUFBQUlBQUFBREFBQUFDZ0FBQUJFQUFBQVlBQUFBSUFBQUFCa0FBQUFTQUFBQUN3QUFBQVFBQUFBTUFBQUFFd0FBQUJvQUFBQWhBQUFBSWdBQUFCc0FBQUFVQUFBQUhBQUFBQ01BQUFBa0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QkJoTHNDQzkwQkFRQUFBQWdBQUFBUUFBQUFDUUFBQUFJQUFBQURBQUFBQ2dBQUFCRUFBQUFZQUFBQUdRQUFBQklBQUFBTEFBQUFFd0FBQUJvQUFBQWJBQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUFBQUFBQUJBQUFBQ0FBQUFCQUFBQUFKQUFBQUFnQUFBQW9BQUFBUkFBQUFFZ0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBUWZTOEFndk1CZ0VBQUFBSUFBQUFDUUFBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFBL0FBQUFQd0FBQUQ4QUFBQS9BQUFBUHdBQUFEOEFBQUEvQUFBQVB3QUFBRDhBQUFCT1UzUXpYMTh5TVRKaVlYTnBZMTl6ZEhKcGJtZEphRTVUWHpFeFkyaGhjbDkwY21GcGRITkphRVZGVGxOZk9XRnNiRzlqWVhSdmNrbG9SVVZGUlFBQUZPOEFBTUNlQUFCT1UzUXpYMTh5TVRKaVlYTnBZMTl6ZEhKcGJtZEpkMDVUWHpFeFkyaGhjbDkwY21GcGRITkpkMFZGVGxOZk9XRnNiRzlqWVhSdmNrbDNSVVZGUlFBQUZPOEFBQWlmQUFCT1UzUXpYMTh5TVRKaVlYTnBZMTl6ZEhKcGJtZEpSSE5PVTE4eE1XTm9ZWEpmZEhKaGFYUnpTVVJ6UlVWT1UxODVZV3hzYjJOaGRHOXlTVVJ6UlVWRlJRQUFBQlR2QUFCUW53QUFUbE4wTTE5Zk1qRXlZbUZ6YVdOZmMzUnlhVzVuU1VScFRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsRWFVVkZUbE5mT1dGc2JHOWpZWFJ2Y2tsRWFVVkZSVVVBQUFBVTd3QUFuSjhBQUU0eE1HVnRjMk55YVhCMFpXNHhNVzFsYlc5eWVWOTJhV1YzU1dORlJRQUFGTzhBQU9pZkFBQk9NVEJsYlhOamNtbHdkR1Z1TVRGdFpXMXZjbmxmZG1sbGQwbGhSVVVBQUJUdkFBQVFvQUFBVGpFd1pXMXpZM0pwY0hSbGJqRXhiV1Z0YjNKNVgzWnBaWGRKYUVWRkFBQVU3d0FBT0tBQUFFNHhNR1Z0YzJOeWFYQjBaVzR4TVcxbGJXOXllVjkyYVdWM1NYTkZSUUFBRk84QUFHQ2dBQUJPTVRCbGJYTmpjbWx3ZEdWdU1URnRaVzF2Y25sZmRtbGxkMGwwUlVVQUFCVHZBQUNJb0FBQVRqRXdaVzF6WTNKcGNIUmxiakV4YldWdGIzSjVYM1pwWlhkSmFVVkZBQUFVN3dBQXNLQUFBRTR4TUdWdGMyTnlhWEIwWlc0eE1XMWxiVzl5ZVY5MmFXVjNTV3BGUlFBQUZPOEFBTmlnQUFCT01UQmxiWE5qY21sd2RHVnVNVEZ0WlcxdmNubGZkbWxsZDBsc1JVVUFBQlR2QUFBQW9RQUFUakV3WlcxelkzSnBjSFJsYmpFeGJXVnRiM0o1WDNacFpYZEpiVVZGQUFBVTd3QUFLS0VBQUU0eE1HVnRjMk55YVhCMFpXNHhNVzFsYlc5eWVWOTJhV1YzU1daRlJRQUFGTzhBQUZDaEFBQk9NVEJsYlhOamNtbHdkR1Z1TVRGdFpXMXZjbmxmZG1sbGQwbGtSVVVBQUJUdkFBQjRvUUFBQUFBQUFBQUE4RDhBQUFBQUFBRDRQd0FBQUFBQUFBQUFCdERQUSt2OVRENEFRY3ZEQWd1Y0ZrQUR1T0kvMnc5SlA5c1BTYi9reXhaQTVNc1d3QUFBQUFBQUFBQ0EydzlKUU5zUFNjQTRZKzArMmc5SlAxNlllei9hRDhrL2FUZXNNV2doSWpPMER4UXphQ0dpTXdNQUFBQUVBQUFBQkFBQUFBWUFBQUNEK2FJQVJFNXVBUHdwRlFEUlZ5Y0EzVFQxQUdMYndBQThtWlVBUVpCREFHTlIvZ0M3M3FzQXQySEZBRHB1SkFEU1RVSUFTUWJnQUFucUxnQWNrdEVBNngzK0FDbXhIQURvUHFjQTlUV0NBRVM3TGdDYzZZUUF0Q1p3QUVGK1h3RFdrVGtBVTRNNUFKejBPUUNMWDRRQUtQbTlBUGdmT3dEZS81Y0FENWdGQUJFdjd3QUtXb3NBYlI5dEFNOStOZ0FKeXljQVJrKzNBSjVtUHdBdDZsOEF1aWQxQU9Ycnh3QTllL0VBOXprSEFKSlNpZ0Q3YStvQUg3RmZBQWhkalFBd0ExWUFlL3hHQVBDcmF3QWd2TThBTnZTYUFPT3BIUUJlWVpFQUNCdm1BSVdaWlFDZ0ZGOEFqVUJvQUlEWS93QW5jMDBBQmdZeEFNcFdGUURKcUhNQWUrSmdBR3VNd0FBWnhFY0F6V2ZEQUFubzNBQlpneW9BaTNiRUFLWWNsZ0JFcjkwQUdWZlJBS1UrQlFBRkIvOEFNMzQvQU1JeTZBQ1lUOTRBdTMweUFDWTl3d0FlYSs4QW4vaGVBRFVmT2dCLzhzb0E4WWNkQUh5UUlRQnFKSHdBMVc3NkFEQXRkd0FWTzBNQXRSVEdBTU1ablFDdHhNSUFMRTFCQUF3QVhRQ0dmVVlBNDNFdEFKdkdtZ0F6WWdBQXROSjhBTFNubHdBM1ZkVUExejcyQUtNUUdBQk5kdndBWkowcUFIRFhxd0JqZlBnQWVyQlhBQmNWNXdEQVNWWUFPOWJaQUtlRU9BQWtJOHNBMW9wM0FGcFVJd0FBSDdrQThRb2JBQm5PM3dDZk1mOEFaaDVxQUpsWFlRQ3MrMGNBZm4vWUFDSmx0d0F5NklrQTVyOWdBTy9FelFCc05na0FYVC9VQUJiZTF3QllPOTRBM3B1U0FOSWlLQUFvaHVnQTRsaE5BTWJLTWdBSTR4WUE0SDNMQUJmQVVBRHpIYWNBR09CYkFDNFROQUNERW1JQWcwZ0JBUFdPV3dDdHNIOEFIdW55QUVoS1F3QVFaOU1BcXQzWUFLNWZRZ0JxWWM0QUNpaWtBTk9adEFBR3B2SUFYSGQvQUtQQ2d3QmhQSWdBaW5ONEFLK01XZ0J2MTcwQUxhWmpBUFMveXdDTmdlOEFKc0ZuQUZYS1JRREsyVFlBS0tqU0FNSmhqUUFTeVhjQUJDWVVBQkpHbXdERVdjUUF5TVZFQUUyeWtRQUFGL01BMUVPdEFDbEo1UUQ5MVJBQUFMNzhBQjZVekFCd3p1NEFFejcxQU96eGdBQ3o1OE1BeC9nb0FKTUZsQURCY1Q0QUxnbXpBQXRGOHdDSUVwd0FxeUI3QUM2MW53Qkhrc0lBZXpJdkFBeFZiUUJ5cDVBQWErY2ZBREhMbGdCNUZrb0FRWG5pQVBUZmlRRG9sSmNBNHVhRUFKa3hsd0NJN1dzQVgxODJBTHY5RGdCSW1yUUFaNlJzQUhGeVFnQ05YVElBbnhXNEFMemxDUUNOTVNVQTkzUTVBREFGSEFBTkRBRUFTd2hvQUN6dVdBQkhxcEFBZE9jQ0FMM1dKQUQzZmFZQWJraHlBSjhXN3dDT2xLWUF0SkgyQU5GVFVRRFBDdklBSUpnekFQVkxmZ0N5WTJnQTNUNWZBRUJkQXdDRmlYOEFWVklwQURka3dBQnQyQkFBTWtneUFGdE1kUUJPY2RRQVJWUnVBQXNKd1FBcTlXa0FGR2JWQUNjSG5RQmRCRkFBdER2YkFPcDJ4UUNIK1JjQVNXdDlBQjBudWdDV2FTa0F4c3lzQUswVVZBQ1E0bW9BaU5tSkFDeHlVQUFFcEw0QWR3ZVVBUE13Y0FBQS9DY0E2bkdvQUdiQ1NRQms0RDBBbDkyREFLTS9sd0JEbFAwQURZYU1BREZCM2dDU09aMEEzWENNQUJlMzV3QUkzenNBRlRjckFGeUFvQUJhZ0pNQUVCR1NBQS9vMkFCc2dLOEEyLzlMQURpUUR3QlpHSFlBWXFVVkFHSEx1d0RIaWJrQUVFQzlBTkx5QkFCSmRTY0E2N2IyQU5zaXV3QUtGS29BaVNZdkFHU0RkZ0FKT3pNQURwUWFBRkU2cWdBZG84SUFyKzJ1QUZ3bUVnQnR3azBBTFhxY0FNQldsd0FEUDRNQUNmRDJBQ3RBakFCdE1aa0FPYlFIQUF3Z0ZRRFl3MXNBOVpMRUFNYXRTd0JPeXFVQXB6Zk5BT2FwTmdDcmtwUUEzVUpvQUJsajNnQjJqTzhBYUl0U0FQemJOd0N1b2FzQTN4VXhBQUN1b1FBTSs5b0FaRTFtQU8wRnR3QXBaVEFBVjFhL0FFZi9PZ0JxK2JrQWRiN3pBQ2lUM3dDcmdEQUFab3oyQUFUTEZRRDZJZ1lBMmVRZEFEMnpwQUJYRzQ4QU5zMEpBRTVDNlFBVHZxUUFNeU8xQVBDcUdnQlBaYWdBMHNHbEFBcy9Ed0JiZU0wQUkvbDJBSHVMQkFDSkYzSUF4cVpUQUc5dTRnRHY2d0FBbTBwWUFNVGF0d0NxWnJvQWRzL1BBTkVDSFFDeDhTMEFqSm5CQU1PdGR3Q0dTTm9BOTEyZ0FNYUE5QUNzOEM4QTNleWFBRDljdkFEUTNtMEFrTWNmQUNyYnRnQ2pKVG9BQUsrYUFLMVRrd0MyVndRQUtTMjBBRXVBZmdEYUI2Y0FkcW9PQUh0Wm9RQVdFaW9BM0xjdEFQcmwvUUNKMi80QWliNzlBT1IyYkFBR3Fmd0FQb0J3QUlWdUZRRDloLzhBS0Q0SEFHRm5Nd0FxR0lZQVRiM3FBTFBucndDUGJXNEFsV2M1QURHL1d3Q0UxMGdBTU44V0FNY3RRd0FsWVRVQXlYRE9BRERMdUFDL2JQMEFwQUNpQUFWczVBQmEzYUFBSVc5SEFHSVMwZ0M1WElRQWNHRkpBR3RXNEFDWlVnRUFVRlUzQUI3VnR3QXo4Y1FBRTI1ZkFGMHc1QUNGTHFrQUhiTERBS0V5TmdBSXQ2UUE2ckhVQUJiM0lRQ1BhZVFBSi85M0FBd0RnQUNOUUMwQVQ4MmdBQ0NsbVFDem90TUFMMTBLQUxUNVFnQVIyc3NBZmI3UUFKdmJ3UUNyRjcwQXlxS0JBQWhxWEFBdVZSY0FKd0JWQUg4VThBRGhCNFlBRkF0a0FKWkJqUUNIdnQ0QTJ2MHFBR3NsdGdCN2lUUUFCZlArQUxtL25nQm9hazhBU2lxb0FFL0VXZ0F0K0x3QTExcVlBUFRIbFFBTlRZMEFJRHFtQUtSWFh3QVVQN0VBZ0RpVkFNd2dBUUJ4M1lZQXlkNjJBTDlnOVFCTlpSRUFBUWRyQUl5d3JBQ3l3TkFBVVZWSUFCNzdEZ0NWY3NNQW93WTdBTUJBTlFBRzNIc0E0RVhNQUU0cCtnRFd5c2dBNlBOQkFIeGszZ0NiWk5nQTJiNHhBS1NYd3dCM1dOUUFhZVBGQVBEYUV3QzZPandBUmhoR0FGVjFYd0RTdmZVQWJwTEdBS3d1WFFBT1JPMEFIRDVDQUdIRWh3QXAvZWtBNTliekFDSjh5Z0J2a1RVQUNPREZBUC9YalFCdWF1SUFzUDNHQUpNSXdRQjhYWFFBYTYyeUFNMXVuUUErY25zQXhoRnFBUGZQcVFBcGM5OEF0Y202QUxjQVVRRGlzZzBBZExva0FPVjlZQUIwMklvQURSVXNBSUVZREFCK1pwUUFBU2tXQUo5NmRnRDkvYjRBVmtYdkFObCtOZ0RzMlJNQWk3cTVBTVNYL0FBeHFDY0E4VzdEQUpURk5nRFlxRllBdEtpMUFNL01EZ0FTaVMwQWIxYzBBQ3hXaVFDWnp1TUExaUM1QUd0ZXFnQStLcHdBRVYvTUFQMExTZ0RoOVBzQWpqdHRBT0tHTEFEcDFJUUEvTFNwQU8vdTBRQXVOY2tBTHpsaEFEZ2hSQUFiMmNnQWdmd0tBUHRLYWdBdkhOZ0FVN1NFQUU2WmpBQlVJc3dBS2xYY0FNREcxZ0FMR1pZQUduQzRBR21WWkFBbVdtQUFQMUx1QUg4UkR3RDB0UkVBL012MUFEUzhMUUEwdk80QTZGM01BTjFlWUFCbmpwc0FralB2QU1rWHVBQmhXSnNBNFZlOEFGR0R4Z0RZUGhBQTNYRklBQzBjM1FDdkdLRUFJU3hHQUZuejF3RFplcGdBbmxUQUFFK0crZ0JXQnZ3QTVYbXVBSWtpTmdBNHJTSUFaNVBjQUZYb3FnQ0NKamdBeXVlYkFGRU5wQUNaTTdFQXFkY09BR2tGU0FCbHN2QUFmNGluQUloTWx3RDUwVFlBSVpLekFIdUNTZ0NZenlFQVFKL2NBTnhIVlFEaGREb0FaK3RDQVA2ZDN3QmUxRjhBZTJla0FMcXNlZ0JWOXFJQUs0Z2pBRUc2VlFCWmJnZ0FJU3FHQURsSGd3Q0o0K1lBNVo3VUFFbjdRQUQvVnVrQUhBL0tBTVZaaWdDVStpc0EwOEhGQUEvRnp3RGJXcTRBUjhXR0FJVkRZZ0FoaGpzQUxIbVVBQkJoaHdBcVRIc0FnQ3dhQUVPL0VnQ0lKcEFBZUR5SkFLakU1QURsMjNzQXhEckNBQ2IwNmdEM1o0b0FEWksvQUdXakt3QTlrN0VBdlh3TEFLUlIzQUFuM1dNQWFlSGRBSnFVR1FDb0taVUFhTTRvQUFudHRBQkVueUFBVHBqS0FIQ0NZd0IrZkNNQUQ3a3lBS2YxamdBVVZ1Y0FJZkVJQUxXZEtnQnZmazBBcFJsUkFMWDVxd0NDMzlZQWx0MWhBQlkyQWdERU9wOEFnNktoQUhMdGJRQTVqWG9BZ3JpcEFHc3lYQUJHSjFzQUFEVHRBTklBZHdEODlGVUFBVmxOQU9CeGdBQkI4OWtDQzVJV1FQc2grVDhBQUFBQUxVUjBQZ0FBQUlDWVJ2ZzhBQUFBWUZITWVEc0FBQUNBZ3h2d09RQUFBRUFnSlhvNEFBQUFnQ0tDNHpZQUFBQUFIZk5wTmI3eitIbnNZZlkvM3FxTWdQZDcxYjg5aUs5SzdYSDFQOXR0d0tmd3Z0Sy9zQkR3OERtVjlEOW5PbEYvcmg3UXY0VUR1TENWeWZNLzZTU0NwdGd4eTcrbFpJZ01HUTN6UDFoM3dBcFBWOGEvb0k0TGV5SmU4ajhBZ1p6SEs2ckJ2ejgwR2twS3UvRS9YZzZNem5aT3VyKzY1WXJ3V0NQeFA4d2NZVm84bDdHL3B3Q1pRVCtWOEQ4ZURPRTQ5RktpdndBQUFBQUFBUEEvQUFBQUFBQUFBQUNzUjVyOWpHRHVQNFJaOGwycXBhby9vR29DSDdPazdEKzBMamFxVTE2OFArYjhhbGMySU9zL0NOc2dkK1VteFQ4dHFxRmowY0xwUDNCSElnMkd3c3MvN1VGNEErYUc2RC9oZnFESWl3WFJQMkpJVS9YY1orYy9DZTYyVnpBRTFEL3ZPZnIrUWk3bVB6U0R1RWlqRHRDL2FndmdDMXRYMVQ4alFRcnkvdi9mdndBQUFBQUFBUEEvZElVVjA3RFo3ejhQaWZsc1dMWHZQMUZiRXRBQmsrOC9lMUY5UExoeTd6K3F1V2d4aDFUdlB6aGlkVzU2T084LzRkNGY5WjBlN3o4VnR6RUsvZ2J2UDh1cE9qZW44ZTQvSWpRU1RLYmU3ajh0aVdGZ0NNN3VQeWNxTnRYYXYrNC9naytkVml1MDdqOHBWRWpkQjZ2dVA0VlZPckIrcE80L3pUdC9acDZnN2o5MFgrem9kWi91UDRjQjYzTVVvZTQvRTg1TW1ZbWw3ai9ib0NwQzVhenVQK1hGemJBM3QrNC9rUENqZ3BIRTdqOWRKVDZ5QTlYdVA2M1RXcG1mNk80L1IxNzc4bmIvN2orY1VvWGRteG52UDJtUTc5d2dOKzgvaDZUNzNCaFk3ejlmbTNzemwzenZQOXFRcEtLdnBPOC9RRVZ1VzNiUTd6OEFBQUFBQUFEb1FwUWprVXY0YXF3Lzg4VDZVTTYvemovV1Vnei9RaTdtUHdBQUFBQUFBRGhEL29JclpVY1ZSMENVSTVGTCtHcThQdlBFK2xET3Z5NC8xbElNLzBJdWxqKys4L2g1N0dIMlB4a3dsbHZHL3Q2L1BZaXZTdTF4OVQray9OUXlhQXZidjdBUThQQTVsZlEvZTdjZkNvdEIxNytGQTdpd2xjbnpQM3ZQYlJycG5kTy9wV1NJREJrTjh6OHh0dkx6bXgzUXY2Q09DM3NpWHZJLzhIbzdHeDE4eWI4L05CcEtTcnZ4UDU4OHI1UGorY0svdXVXSzhGZ2o4VDljalhpL3kyQzV2NmNBbVVFL2xmQS96bDlIdHAxdnFyOEFBQUFBQUFEd1B3QUFBQUFBQUFBQXJFZWEvWXhnN2o4OTlTU2Z5aml6UDZCcUFoK3pwT3cvdXBFNFZLbDJ4RC9tL0dwWE5pRHJQOUxreEVvTGhNNC9MYXFoWTlIQzZUOGNaY2J3UlFiVVArMUJlQVBtaHVnLytKOGJMSnlPMkQ5aVNGUDEzR2ZuUDh4N3NVNms0TncvQzI1SnlSWjIwajk2eG5XZ2FSblh2OTI2cDJ3S3g5NC95UGErU0VjVjU3OHJ1Q3BsUnhYM1B3QUJGd0lkR0JNREhoc1pDeFFJQkEwZkZod1NHZ29IREJVUkNRWVFCUThPY1BFQUFBanlBQUJPYnlCbGNuSnZjaUJwYm1admNtMWhkR2x2YmdCSmJHeGxaMkZzSUdKNWRHVWdjMlZ4ZFdWdVkyVUFSRzl0WVdsdUlHVnljbTl5QUZKbGMzVnNkQ0J1YjNRZ2NtVndjbVZ6Wlc1MFlXSnNaUUJPYjNRZ1lTQjBkSGtBVUdWeWJXbHpjMmx2YmlCa1pXNXBaV1FBVDNCbGNtRjBhVzl1SUc1dmRDQndaWEp0YVhSMFpXUUFUbThnYzNWamFDQm1hV3hsSUc5eUlHUnBjbVZqZEc5eWVRQk9ieUJ6ZFdOb0lIQnliMk5sYzNNQVJtbHNaU0JsZUdsemRITUFWbUZzZFdVZ2RHOXZJR3hoY21kbElHWnZjaUJrWVhSaElIUjVjR1VBVG04Z2MzQmhZMlVnYkdWbWRDQnZiaUJrWlhacFkyVUFUM1YwSUc5bUlHMWxiVzl5ZVFCU1pYTnZkWEpqWlNCaWRYTjVBRWx1ZEdWeWNuVndkR1ZrSUhONWMzUmxiU0JqWVd4c0FGSmxjMjkxY21ObElIUmxiWEJ2Y21GeWFXeDVJSFZ1WVhaaGFXeGhZbXhsQUVsdWRtRnNhV1FnYzJWbGF3QkRjbTl6Y3kxa1pYWnBZMlVnYkdsdWF3QlNaV0ZrTFc5dWJIa2dabWxzWlNCemVYTjBaVzBBUkdseVpXTjBiM0o1SUc1dmRDQmxiWEIwZVFCRGIyNXVaV04wYVc5dUlISmxjMlYwSUdKNUlIQmxaWElBVDNCbGNtRjBhVzl1SUhScGJXVmtJRzkxZEFCRGIyNXVaV04wYVc5dUlISmxablZ6WldRQVNHOXpkQ0JwY3lCa2IzZHVBRWh2YzNRZ2FYTWdkVzV5WldGamFHRmliR1VBUVdSa2NtVnpjeUJwYmlCMWMyVUFRbkp2YTJWdUlIQnBjR1VBU1M5UElHVnljbTl5QUU1dklITjFZMmdnWkdWMmFXTmxJRzl5SUdGa1pISmxjM01BUW14dlkyc2daR1YyYVdObElISmxjWFZwY21Wa0FFNXZJSE4xWTJnZ1pHVjJhV05sQUU1dmRDQmhJR1JwY21WamRHOXllUUJKY3lCaElHUnBjbVZqZEc5eWVRQlVaWGgwSUdacGJHVWdZblZ6ZVFCRmVHVmpJR1p2Y20xaGRDQmxjbkp2Y2dCSmJuWmhiR2xrSUdGeVozVnRaVzUwQUVGeVozVnRaVzUwSUd4cGMzUWdkRzl2SUd4dmJtY0FVM2x0WW05c2FXTWdiR2x1YXlCc2IyOXdBRVpwYkdWdVlXMWxJSFJ2YnlCc2IyNW5BRlJ2YnlCdFlXNTVJRzl3Wlc0Z1ptbHNaWE1nYVc0Z2MzbHpkR1Z0QUU1dklHWnBiR1VnWkdWelkzSnBjSFJ2Y25NZ1lYWmhhV3hoWW14bEFFSmhaQ0JtYVd4bElHUmxjMk55YVhCMGIzSUFUbThnWTJocGJHUWdjSEp2WTJWemN3QkNZV1FnWVdSa2NtVnpjd0JHYVd4bElIUnZieUJzWVhKblpRQlViMjhnYldGdWVTQnNhVzVyY3dCT2J5QnNiMk5yY3lCaGRtRnBiR0ZpYkdVQVVtVnpiM1Z5WTJVZ1pHVmhaR3h2WTJzZ2QyOTFiR1FnYjJOamRYSUFVM1JoZEdVZ2JtOTBJSEpsWTI5MlpYSmhZbXhsQUZCeVpYWnBiM1Z6SUc5M2JtVnlJR1JwWldRQVQzQmxjbUYwYVc5dUlHTmhibU5sYkdWa0FFWjFibU4wYVc5dUlHNXZkQ0JwYlhCc1pXMWxiblJsWkFCT2J5QnRaWE56WVdkbElHOW1JR1JsYzJseVpXUWdkSGx3WlFCSlpHVnVkR2xtYVdWeUlISmxiVzkyWldRQVJHVjJhV05sSUc1dmRDQmhJSE4wY21WaGJRQk9ieUJrWVhSaElHRjJZV2xzWVdKc1pRQkVaWFpwWTJVZ2RHbHRaVzkxZEFCUGRYUWdiMllnYzNSeVpXRnRjeUJ5WlhOdmRYSmpaWE1BVEdsdWF5Qm9ZWE1nWW1WbGJpQnpaWFpsY21Wa0FGQnliM1J2WTI5c0lHVnljbTl5QUVKaFpDQnRaWE56WVdkbEFFWnBiR1VnWkdWelkzSnBjSFJ2Y2lCcGJpQmlZV1FnYzNSaGRHVUFUbTkwSUdFZ2MyOWphMlYwQUVSbGMzUnBibUYwYVc5dUlHRmtaSEpsYzNNZ2NtVnhkV2x5WldRQVRXVnpjMkZuWlNCMGIyOGdiR0Z5WjJVQVVISnZkRzlqYjJ3Z2QzSnZibWNnZEhsd1pTQm1iM0lnYzI5amEyVjBBRkJ5YjNSdlkyOXNJRzV2ZENCaGRtRnBiR0ZpYkdVQVVISnZkRzlqYjJ3Z2JtOTBJSE4xY0hCdmNuUmxaQUJUYjJOclpYUWdkSGx3WlNCdWIzUWdjM1Z3Y0c5eWRHVmtBRTV2ZENCemRYQndiM0owWldRQVVISnZkRzlqYjJ3Z1ptRnRhV3g1SUc1dmRDQnpkWEJ3YjNKMFpXUUFRV1JrY21WemN5Qm1ZVzFwYkhrZ2JtOTBJSE4xY0hCdmNuUmxaQ0JpZVNCd2NtOTBiMk52YkFCQlpHUnlaWE56SUc1dmRDQmhkbUZwYkdGaWJHVUFUbVYwZDI5eWF5QnBjeUJrYjNkdUFFNWxkSGR2Y21zZ2RXNXlaV0ZqYUdGaWJHVUFRMjl1Ym1WamRHbHZiaUJ5WlhObGRDQmllU0J1WlhSM2IzSnJBRU52Ym01bFkzUnBiMjRnWVdKdmNuUmxaQUJPYnlCaWRXWm1aWElnYzNCaFkyVWdZWFpoYVd4aFlteGxBRk52WTJ0bGRDQnBjeUJqYjI1dVpXTjBaV1FBVTI5amEyVjBJRzV2ZENCamIyNXVaV04wWldRQVEyRnVibTkwSUhObGJtUWdZV1owWlhJZ2MyOWphMlYwSUhOb2RYUmtiM2R1QUU5d1pYSmhkR2x2YmlCaGJISmxZV1I1SUdsdUlIQnliMmR5WlhOekFFOXdaWEpoZEdsdmJpQnBiaUJ3Y205bmNtVnpjd0JUZEdGc1pTQm1hV3hsSUdoaGJtUnNaUUJTWlcxdmRHVWdTUzlQSUdWeWNtOXlBRkYxYjNSaElHVjRZMlZsWkdWa0FFNXZJRzFsWkdsMWJTQm1iM1Z1WkFCWGNtOXVaeUJ0WldScGRXMGdkSGx3WlFCTmRXeDBhV2h2Y0NCaGRIUmxiWEIwWldRQVFaTHdBZ3VXQWFVQ1d3RHdBYlVGakFVbEFZTUdIUU9VQlA4QXh3TXhBd3NHdkFHUEFYOER5Z1FyQU5vR3J3QkNBMDREM0FFT0JCVUFvUVlOQVpRQ0N3STRCbVFDdkFML0FsMEQ1d1FMQjg4Q3l3WHZCZHNGNFFJZUJrVUNoUUNDQW13RGJ3VHhBUE1ER0FYWkFOb0RUQVpVQW5zQm5RTzlCQUFBVVFBVkFyc0Fzd050QVA4QmhRUXZCZmtFT0FCbEFVWUJud0MzQnFnQmN3SlRBUUJCMlBFQ0N3d2hCQUFBQUFBQUFBQUFMd0lBUWZqeEFnc0dOUVJIQkZZRUFFR084Z0lMQXFBRUFFR2k4Z0lMWDBZRllBVnVCV0VHQUFEUEFRQUFBQUFBQUFBQXlRYnBCdmtHQUFBQUFCa0FDZ0FaR1JrQUFBQUFCUUFBQUFBQUFBa0FBQUFBQ3dBQUFBQUFBQUFBR1FBUkNoa1pHUU1LQndBQkFBa0xHQUFBQ1FZTEFBQUxBQVlaQUFBQUdSa1pBRUdSOHdJTElRNEFBQUFBQUFBQUFCa0FDZzBaR1JrQURRQUFBZ0FKRGdBQUFBa0FEZ0FBRGdCQnkvTUNDd0VNQUVIWDh3SUxGUk1BQUFBQUV3QUFBQUFKREFBQUFBQUFEQUFBREFCQmhmUUNDd0VRQUVHUjlBSUxGUThBQUFBRUR3QUFBQUFKRUFBQUFBQUFFQUFBRUFCQnYvUUNDd0VTQUVITDlBSUxIaEVBQUFBQUVRQUFBQUFKRWdBQUFBQUFFZ0FBRWdBQUdnQUFBQm9hR2dCQmd2VUNDdzRhQUFBQUdob2FBQUFBQUFBQUNRQkJzL1VDQ3dFVUFFRy85UUlMRlJjQUFBQUFGd0FBQUFBSkZBQUFBQUFBRkFBQUZBQkI3ZlVDQ3dFV0FFSDU5UUlMSnhVQUFBQUFGUUFBQUFBSkZnQUFBQUFBRmdBQUZnQUFNREV5TXpRMU5qYzRPVUZDUTBSRlJnQkJ4UFlDQ3dJSUFRQkI3UFlDQ3dqLy8vLy8vLy8vL3dCQnNQY0NDNE1TMFhTZUFGZWR2U3FBY0ZJUC8vOCtKd29BQUFCa0FBQUE2QU1BQUJBbkFBQ2doZ0VBUUVJUEFJQ1dtQUFBNGZVRkdBQUFBRFVBQUFCeEFBQUFhLy8vLzg3Ny8vK1N2Ly8vQUFBQUFBQUFBQUQvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL0FBRUNBd1FGQmdjSUNmLy8vLy8vLy84S0N3d05EZzhRRVJJVEZCVVdGeGdaR2hzY0hSNGZJQ0VpSS8vLy8vLy8vd29MREEwT0R4QVJFaE1VRlJZWEdCa2FHeHdkSGg4Z0lTSWovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy93QUJBZ1FIQXdZRkFBQUFBQUFBQUFJQUFNQURBQURBQkFBQXdBVUFBTUFHQUFEQUJ3QUF3QWdBQU1BSkFBREFDZ0FBd0FzQUFNQU1BQURBRFFBQXdBNEFBTUFQQUFEQUVBQUF3QkVBQU1BU0FBREFFd0FBd0JRQUFNQVZBQURBRmdBQXdCY0FBTUFZQUFEQUdRQUF3Qm9BQU1BYkFBREFIQUFBd0IwQUFNQWVBQURBSHdBQXdBQUFBTE1CQUFEREFnQUF3d01BQU1NRUFBRERCUUFBd3dZQUFNTUhBQUREQ0FBQXd3a0FBTU1LQUFEREN3QUF3d3dBQU1NTkFBRFREZ0FBd3c4QUFNTUFBQXk3QVFBTXd3SUFETU1EQUF6REJBQU0yd0FBQUFBQUFBQUFBZ0FBQUFNQUFBQUZBQUFBQndBQUFBc0FBQUFOQUFBQUVRQUFBQk1BQUFBWEFBQUFIUUFBQUI4QUFBQWxBQUFBS1FBQUFDc0FBQUF2QUFBQU5RQUFBRHNBQUFBOUFBQUFRd0FBQUVjQUFBQkpBQUFBVHdBQUFGTUFBQUJaQUFBQVlRQUFBR1VBQUFCbkFBQUFhd0FBQUcwQUFBQnhBQUFBZndBQUFJTUFBQUNKQUFBQWl3QUFBSlVBQUFDWEFBQUFuUUFBQUtNQUFBQ25BQUFBclFBQUFMTUFBQUMxQUFBQXZ3QUFBTUVBQUFERkFBQUF4d0FBQU5NQUFBQUJBQUFBQ3dBQUFBMEFBQUFSQUFBQUV3QUFBQmNBQUFBZEFBQUFId0FBQUNVQUFBQXBBQUFBS3dBQUFDOEFBQUExQUFBQU93QUFBRDBBQUFCREFBQUFSd0FBQUVrQUFBQlBBQUFBVXdBQUFGa0FBQUJoQUFBQVpRQUFBR2NBQUFCckFBQUFiUUFBQUhFQUFBQjVBQUFBZndBQUFJTUFBQUNKQUFBQWl3QUFBSThBQUFDVkFBQUFsd0FBQUowQUFBQ2pBQUFBcHdBQUFLa0FBQUN0QUFBQXN3QUFBTFVBQUFDN0FBQUF2d0FBQU1FQUFBREZBQUFBeHdBQUFORUFBQUFBQUFBQUhNRUFBQW9CQUFBTEFRQUFEQUVBQUEwQkFBQU9BUUFBRHdFQUFCQUJBQUFSQVFBQUVnRUFBQk1CQUFBVUFRQUFGUUVBQUJZQkFBQVhBUUFBQ0FBQUFBQUFBQUJVd1FBQUdBRUFBQmtCQUFENC8vLy8rUC8vLzFUQkFBQWFBUUFBR3dFQUFLeS9BQURBdndBQUJBQUFBQUFBQUFDY3dRQUFIQUVBQUIwQkFBRDgvLy8vL1AvLy81ekJBQUFlQVFBQUh3RUFBTnkvQUFEd3Z3QUFBQUFBQUREQ0FBQWdBUUFBSVFFQUFDSUJBQUFqQVFBQUpBRUFBQ1VCQUFBbUFRQUFKd0VBQUNnQkFBQXBBUUFBS2dFQUFDc0JBQUFzQVFBQUxRRUFBQWdBQUFBQUFBQUFhTUlBQUM0QkFBQXZBUUFBK1AvLy8vai8vLzlvd2dBQU1BRUFBREVCQUFCTXdBQUFZTUFBQUFRQUFBQUFBQUFBc01JQUFESUJBQUF6QVFBQS9QLy8vL3ovLy8rd3dnQUFOQUVBQURVQkFBQjh3QUFBa01BQUFBQUFBQURjd0FBQU5nRUFBRGNCQUFCT1UzUXpYMTh5T1dKaGMybGpYMmx2YzBsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSUUFBQUR6dkFBQ3d3QUFBN01JQUFFNVRkRE5mWHpJeE5XSmhjMmxqWDNOMGNtVmhiV0oxWmtsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSUUFBQUFBVTd3QUE2TUFBQUU1VGRETmZYekl4TTJKaGMybGpYMmx6ZEhKbFlXMUpZMDVUWHpFeFkyaGhjbDkwY21GcGRITkpZMFZGUlVVQUFKanZBQUFrd1FBQUFBQUFBQUVBQUFEY3dBQUFBL1QvLzA1VGRETmZYekl4TTJKaGMybGpYMjl6ZEhKbFlXMUpZMDVUWHpFeFkyaGhjbDkwY21GcGRITkpZMFZGUlVVQUFKanZBQUJzd1FBQUFBQUFBQUVBQUFEY3dBQUFBL1QvL3dBQUFBRHd3UUFBT0FFQUFEa0JBQUJPVTNRelgxOHlPV0poYzJsalgybHZjMGwzVGxOZk1URmphR0Z5WDNSeVlXbDBjMGwzUlVWRlJRQUFBRHp2QUFERXdRQUE3TUlBQUU1VGRETmZYekl4TldKaGMybGpYM04wY21WaGJXSjFaa2wzVGxOZk1URmphR0Z5WDNSeVlXbDBjMGwzUlVWRlJRQUFBQUFVN3dBQS9NRUFBRTVUZEROZlh6SXhNMkpoYzJsalgybHpkSEpsWVcxSmQwNVRYekV4WTJoaGNsOTBjbUZwZEhOSmQwVkZSVVVBQUpqdkFBQTR3Z0FBQUFBQUFBRUFBQUR3d1FBQUEvVC8vMDVUZEROZlh6SXhNMkpoYzJsalgyOXpkSEpsWVcxSmQwNVRYekV4WTJoaGNsOTBjbUZwZEhOSmQwVkZSVVVBQUpqdkFBQ0F3Z0FBQUFBQUFBRUFBQUR3d1FBQUEvVC8vd0FBQUFEc3dnQUFPZ0VBQURzQkFBQk9VM1F6WDE4eU9HbHZjMTlpWVhObFJRQUFBQlR2QUFEWXdnQUFvUElBQUFBQUFBQlF3d0FBQ2dFQUFENEJBQUEvQVFBQURRRUFBQTRCQUFBUEFRQUFFQUVBQUJFQkFBQVNBUUFBUUFFQUFFRUJBQUJDQVFBQUZnRUFBQmNCQUFCT1UzUXpYMTh5TVRCZlgzTjBaR2x1WW5WbVNXTkZSUUE4N3dBQU9NTUFBQnpCQUFBQUFBQUF1TU1BQUFvQkFBQkRBUUFBUkFFQUFBMEJBQUFPQVFBQUR3RUFBRVVCQUFBUkFRQUFFZ0VBQUJNQkFBQVVBUUFBRlFFQUFFWUJBQUJIQVFBQVRsTjBNMTlmTWpFeFgxOXpkR1J2ZFhSaWRXWkpZMFZGQUFBQUFEenZBQUNjd3dBQUhNRUFBQUFBQUFBY3hBQUFJQUVBQUVnQkFBQkpBUUFBSXdFQUFDUUJBQUFsQVFBQUpnRUFBQ2NCQUFBb0FRQUFTZ0VBQUVzQkFBQk1BUUFBTEFFQUFDMEJBQUJPVTNRelgxOHlNVEJmWDNOMFpHbHVZblZtU1hkRlJRQTg3d0FBQk1RQUFERENBQUFBQUFBQWhNUUFBQ0FCQUFCTkFRQUFUZ0VBQUNNQkFBQWtBUUFBSlFFQUFFOEJBQUFuQVFBQUtBRUFBQ2tCQUFBcUFRQUFLd0VBQUZBQkFBQlJBUUFBVGxOME0xOWZNakV4WDE5emRHUnZkWFJpZFdaSmQwVkZBQUFBQUR6dkFBQm94QUFBTU1JQUFONFNCSlVBQUFBQS8vLy8vLy8vLy8vLy8vLy9rTVFBQUJRQUFBQkRMbFZVUmkwNEFFSGdpUU1MQXFURUFFR0FpZ01MU2t4RFgwTlVXVkJGQUFBQUFFeERYMDVWVFVWU1NVTUFBRXhEWDFSSlRVVUFBQUFBQUV4RFgwTlBURXhCVkVVQUFFeERYMDFQVGtWVVFWSlpBRXhEWDAxRlUxTkJSMFZUQUZESEFFSFVqZ01MK1FNQkFBQUFBZ0FBQUFNQUFBQUVBQUFBQlFBQUFBWUFBQUFIQUFBQUNBQUFBQWtBQUFBS0FBQUFDd0FBQUF3QUFBQU5BQUFBRGdBQUFBOEFBQUFRQUFBQUVRQUFBQklBQUFBVEFBQUFGQUFBQUJVQUFBQVdBQUFBRndBQUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFBY0FBQUFIUUFBQUI0QUFBQWZBQUFBSUFBQUFDRUFBQUFpQUFBQUl3QUFBQ1FBQUFBbEFBQUFKZ0FBQUNjQUFBQW9BQUFBS1FBQUFDb0FBQUFyQUFBQUxBQUFBQzBBQUFBdUFBQUFMd0FBQURBQUFBQXhBQUFBTWdBQUFETUFBQUEwQUFBQU5RQUFBRFlBQUFBM0FBQUFPQUFBQURrQUFBQTZBQUFBT3dBQUFEd0FBQUE5QUFBQVBnQUFBRDhBQUFCQUFBQUFRUUFBQUVJQUFBQkRBQUFBUkFBQUFFVUFBQUJHQUFBQVJ3QUFBRWdBQUFCSkFBQUFTZ0FBQUVzQUFBQk1BQUFBVFFBQUFFNEFBQUJQQUFBQVVBQUFBRkVBQUFCU0FBQUFVd0FBQUZRQUFBQlZBQUFBVmdBQUFGY0FBQUJZQUFBQVdRQUFBRm9BQUFCYkFBQUFYQUFBQUYwQUFBQmVBQUFBWHdBQUFHQUFBQUJCQUFBQVFnQUFBRU1BQUFCRUFBQUFSUUFBQUVZQUFBQkhBQUFBU0FBQUFFa0FBQUJLQUFBQVN3QUFBRXdBQUFCTkFBQUFUZ0FBQUU4QUFBQlFBQUFBVVFBQUFGSUFBQUJUQUFBQVZBQUFBRlVBQUFCV0FBQUFWd0FBQUZnQUFBQlpBQUFBV2dBQUFIc0FBQUI4QUFBQWZRQUFBSDRBQUFCL0FFSFFsZ01MQW1ETkFFSGttZ01MK1FNQkFBQUFBZ0FBQUFNQUFBQUVBQUFBQlFBQUFBWUFBQUFIQUFBQUNBQUFBQWtBQUFBS0FBQUFDd0FBQUF3QUFBQU5BQUFBRGdBQUFBOEFBQUFRQUFBQUVRQUFBQklBQUFBVEFBQUFGQUFBQUJVQUFBQVdBQUFBRndBQUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFBY0FBQUFIUUFBQUI0QUFBQWZBQUFBSUFBQUFDRUFBQUFpQUFBQUl3QUFBQ1FBQUFBbEFBQUFKZ0FBQUNjQUFBQW9BQUFBS1FBQUFDb0FBQUFyQUFBQUxBQUFBQzBBQUFBdUFBQUFMd0FBQURBQUFBQXhBQUFBTWdBQUFETUFBQUEwQUFBQU5RQUFBRFlBQUFBM0FBQUFPQUFBQURrQUFBQTZBQUFBT3dBQUFEd0FBQUE5QUFBQVBnQUFBRDhBQUFCQUFBQUFZUUFBQUdJQUFBQmpBQUFBWkFBQUFHVUFBQUJtQUFBQVp3QUFBR2dBQUFCcEFBQUFhZ0FBQUdzQUFBQnNBQUFBYlFBQUFHNEFBQUJ2QUFBQWNBQUFBSEVBQUFCeUFBQUFjd0FBQUhRQUFBQjFBQUFBZGdBQUFIY0FBQUI0QUFBQWVRQUFBSG9BQUFCYkFBQUFYQUFBQUYwQUFBQmVBQUFBWHdBQUFHQUFBQUJoQUFBQVlnQUFBR01BQUFCa0FBQUFaUUFBQUdZQUFBQm5BQUFBYUFBQUFHa0FBQUJxQUFBQWF3QUFBR3dBQUFCdEFBQUFiZ0FBQUc4QUFBQndBQUFBY1FBQUFISUFBQUJ6QUFBQWRBQUFBSFVBQUFCMkFBQUFkd0FBQUhnQUFBQjVBQUFBZWdBQUFIc0FBQUI4QUFBQWZRQUFBSDRBQUFCL0FFSGdvZ01MTVRBeE1qTTBOVFkzT0RsaFltTmtaV1pCUWtORVJVWjRXQ3N0Y0ZCcFNXNU9BQ1ZKT2lWTk9pVlRJQ1Z3SlVnNkpVMEFRYUNqQXd1QkFTVUFBQUJ0QUFBQUx3QUFBQ1VBQUFCa0FBQUFMd0FBQUNVQUFBQjVBQUFBSlFBQUFGa0FBQUF0QUFBQUpRQUFBRzBBQUFBdEFBQUFKUUFBQUdRQUFBQWxBQUFBU1FBQUFEb0FBQUFsQUFBQVRRQUFBRG9BQUFBbEFBQUFVd0FBQUNBQUFBQWxBQUFBY0FBQUFBQUFBQUFsQUFBQVNBQUFBRG9BQUFBbEFBQUFUUUJCc0tRREMyWWxBQUFBU0FBQUFEb0FBQUFsQUFBQVRRQUFBRG9BQUFBbEFBQUFVd0FBQUFBQUFBQ2syd0FBWkFFQUFHVUJBQUJtQVFBQUFBQUFBQVRjQUFCbkFRQUFhQUVBQUdZQkFBQnBBUUFBYWdFQUFHc0JBQUJzQVFBQWJRRUFBRzRCQUFCdkFRQUFjQUVBUWFDbEF3djlBd1FBQUFBRUFBQUFCQUFBQUFRQUFBQUVBQUFBQkFBQUFBUUFBQUFFQUFBQUJBQUFBQVVDQUFBRkFBQUFCUUFBQUFVQUFBQUZBQUFBQkFBQUFBUUFBQUFFQUFBQUJBQUFBQVFBQUFBRUFBQUFCQUFBQUFRQUFBQUVBQUFBQkFBQUFBUUFBQUFFQUFBQUJBQUFBQVFBQUFBRUFBQUFCQUFBQUFRQUFBQUVBQUFBQXdJQUFJSUFBQUNDQUFBQWdnQUFBSUlBQUFDQ0FBQUFnZ0FBQUlJQUFBQ0NBQUFBZ2dBQUFJSUFBQUNDQUFBQWdnQUFBSUlBQUFDQ0FBQUFnZ0FBQUVJQkFBQkNBUUFBUWdFQUFFSUJBQUJDQVFBQVFnRUFBRUlCQUFCQ0FRQUFRZ0VBQUVJQkFBQ0NBQUFBZ2dBQUFJSUFBQUNDQUFBQWdnQUFBSUlBQUFDQ0FBQUFLZ0VBQUNvQkFBQXFBUUFBS2dFQUFDb0JBQUFxQVFBQUtnQUFBQ29BQUFBcUFBQUFLZ0FBQUNvQUFBQXFBQUFBS2dBQUFDb0FBQUFxQUFBQUtnQUFBQ29BQUFBcUFBQUFLZ0FBQUNvQUFBQXFBQUFBS2dBQUFDb0FBQUFxQUFBQUtnQUFBQ29BQUFDQ0FBQUFnZ0FBQUlJQUFBQ0NBQUFBZ2dBQUFJSUFBQUF5QVFBQU1nRUFBRElCQUFBeUFRQUFNZ0VBQURJQkFBQXlBQUFBTWdBQUFESUFBQUF5QUFBQU1nQUFBRElBQUFBeUFBQUFNZ0FBQURJQUFBQXlBQUFBTWdBQUFESUFBQUF5QUFBQU1nQUFBRElBQUFBeUFBQUFNZ0FBQURJQUFBQXlBQUFBTWdBQUFJSUFBQUNDQUFBQWdnQUFBSUlBQUFBRUFFR2tyUU1MN1FKczJ3QUFjUUVBQUhJQkFBQm1BUUFBY3dFQUFIUUJBQUIxQVFBQWRnRUFBSGNCQUFCNEFRQUFlUUVBQUFBQUFBQTgzQUFBZWdFQUFIc0JBQUJtQVFBQWZBRUFBSDBCQUFCK0FRQUFmd0VBQUlBQkFBQUFBQUFBWU53QUFJRUJBQUNDQVFBQVpnRUFBSU1CQUFDRUFRQUFoUUVBQUlZQkFBQ0hBUUFBZEFBQUFISUFBQUIxQUFBQVpRQUFBQUFBQUFCbUFBQUFZUUFBQUd3QUFBQnpBQUFBWlFBQUFBQUFBQUFsQUFBQWJRQUFBQzhBQUFBbEFBQUFaQUFBQUM4QUFBQWxBQUFBZVFBQUFBQUFBQUFsQUFBQVNBQUFBRG9BQUFBbEFBQUFUUUFBQURvQUFBQWxBQUFBVXdBQUFBQUFBQUFsQUFBQVlRQUFBQ0FBQUFBbEFBQUFZZ0FBQUNBQUFBQWxBQUFBWkFBQUFDQUFBQUFsQUFBQVNBQUFBRG9BQUFBbEFBQUFUUUFBQURvQUFBQWxBQUFBVXdBQUFDQUFBQUFsQUFBQVdRQUFBQUFBQUFBbEFBQUFTUUFBQURvQUFBQWxBQUFBVFFBQUFEb0FBQUFsQUFBQVV3QUFBQ0FBQUFBbEFBQUFjQUJCbkxBREMvNEtSTmdBQUlnQkFBQ0pBUUFBWmdFQUFFNVRkRE5mWHpJMmJHOWpZV3hsTldaaFkyVjBSUUFBQUR6dkFBQXMyQUFBY093QUFBQUFBQURFMkFBQWlBRUFBSW9CQUFCbUFRQUFpd0VBQUl3QkFBQ05BUUFBamdFQUFJOEJBQUNRQVFBQWtRRUFBSklCQUFDVEFRQUFsQUVBQUpVQkFBQ1dBUUFBVGxOME0xOWZNalZqZEhsd1pVbDNSVVVBVGxOME0xOWZNakV3WTNSNWNHVmZZbUZ6WlVVQUFCVHZBQUNtMkFBQW1POEFBSlRZQUFBQUFBQUFBZ0FBQUVUWUFBQUNBQUFBdk5nQUFBSUFBQUFBQUFBQVdOa0FBSWdCQUFDWEFRQUFaZ0VBQUpnQkFBQ1pBUUFBbWdFQUFKc0JBQUNjQVFBQW5RRUFBSjRCQUFCT1UzUXpYMTh5TjJOdlpHVmpkblJKWTJNeE1WOWZiV0p6ZEdGMFpWOTBSVVVBVGxOME0xOWZNakV5WTI5a1pXTjJkRjlpWVhObFJRQUFBQUFVN3dBQU50a0FBSmp2QUFBVTJRQUFBQUFBQUFJQUFBQkUyQUFBQWdBQUFGRFpBQUFDQUFBQUFBQUFBTXpaQUFDSUFRQUFud0VBQUdZQkFBQ2dBUUFBb1FFQUFLSUJBQUNqQVFBQXBBRUFBS1VCQUFDbUFRQUFUbE4wTTE5Zk1qZGpiMlJsWTNaMFNVUnpZekV4WDE5dFluTjBZWFJsWDNSRlJRQUFtTzhBQUtqWkFBQUFBQUFBQWdBQUFFVFlBQUFDQUFBQVVOa0FBQUlBQUFBQUFBQUFRTm9BQUlnQkFBQ25BUUFBWmdFQUFLZ0JBQUNwQVFBQXFnRUFBS3NCQUFDc0FRQUFyUUVBQUs0QkFBQk9VM1F6WDE4eU4yTnZaR1ZqZG5SSlJITkVkVEV4WDE5dFluTjBZWFJsWDNSRlJRQ1k3d0FBSE5vQUFBQUFBQUFDQUFBQVJOZ0FBQUlBQUFCUTJRQUFBZ0FBQUFBQUFBQzAyZ0FBaUFFQUFLOEJBQUJtQVFBQXNBRUFBTEVCQUFDeUFRQUFzd0VBQUxRQkFBQzFBUUFBdGdFQUFFNVRkRE5mWHpJM1kyOWtaV04yZEVsRWFXTXhNVjlmYldKemRHRjBaVjkwUlVVQUFKanZBQUNRMmdBQUFBQUFBQUlBQUFCRTJBQUFBZ0FBQUZEWkFBQUNBQUFBQUFBQUFDamJBQUNJQVFBQXR3RUFBR1lCQUFDNEFRQUF1UUVBQUxvQkFBQzdBUUFBdkFFQUFMMEJBQUMrQVFBQVRsTjBNMTlmTWpkamIyUmxZM1owU1VScFJIVXhNVjlmYldKemRHRjBaVjkwUlVVQW1POEFBQVRiQUFBQUFBQUFBZ0FBQUVUWUFBQUNBQUFBVU5rQUFBSUFBQUJPVTNRelgxOHlOMk52WkdWamRuUkpkMk14TVY5ZmJXSnpkR0YwWlY5MFJVVUFBQUNZN3dBQVNOc0FBQUFBQUFBQ0FBQUFSTmdBQUFJQUFBQlEyUUFBQWdBQUFFNVRkRE5mWHpJMmJHOWpZV3hsTlY5ZmFXMXdSUUFBQUR6dkFBQ00yd0FBUk5nQUFFNVRkRE5mWHpJM1kyOXNiR0YwWlVsalJVVUFQTzhBQUxEYkFBQkUyQUFBVGxOME0xOWZNamRqYjJ4c1lYUmxTWGRGUlFBODd3QUEwTnNBQUVUWUFBQk9VM1F6WDE4eU5XTjBlWEJsU1dORlJRQUFBSmp2QUFEdzJ3QUFBQUFBQUFJQUFBQkUyQUFBQWdBQUFMellBQUFDQUFBQVRsTjBNMTlmTWpodWRXMXdkVzVqZEVsalJVVUFBQUFBUE84QUFDVGNBQUJFMkFBQVRsTjBNMTlmTWpodWRXMXdkVzVqZEVsM1JVVUFBQUFBUE84QUFFamNBQUJFMkFBQUFBQUFBTVRiQUFDL0FRQUF3QUVBQUdZQkFBREJBUUFBd2dFQUFNTUJBQUFBQUFBQTVOc0FBTVFCQUFERkFRQUFaZ0VBQU1ZQkFBREhBUUFBeUFFQUFBQUFBQUNBM1FBQWlBRUFBTWtCQUFCbUFRQUF5Z0VBQU1zQkFBRE1BUUFBelFFQUFNNEJBQURQQVFBQTBBRUFBTkVCQUFEU0FRQUEwd0VBQU5RQkFBQk9VM1F6WDE4eU4yNTFiVjluWlhSSlkwNVRYekU1YVhOMGNtVmhiV0oxWmw5cGRHVnlZWFJ2Y2tsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSVVZGQUU1VGRETmZYekk1WDE5dWRXMWZaMlYwU1dORlJRQk9VM1F6WDE4eU1UUmZYMjUxYlY5blpYUmZZbUZ6WlVVQUFCVHZBQUJHM1FBQW1POEFBRERkQUFBQUFBQUFBUUFBQUdEZEFBQUFBQUFBbU84QUFPemNBQUFBQUFBQUFnQUFBRVRZQUFBQ0FBQUFhTjBBUWFTN0F3dktBVlRlQUFDSUFRQUExUUVBQUdZQkFBRFdBUUFBMXdFQUFOZ0JBQURaQVFBQTJnRUFBTnNCQUFEY0FRQUEzUUVBQU40QkFBRGZBUUFBNEFFQUFFNVRkRE5mWHpJM2JuVnRYMmRsZEVsM1RsTmZNVGxwYzNSeVpXRnRZblZtWDJsMFpYSmhkRzl5U1hkT1UxOHhNV05vWVhKZmRISmhhWFJ6U1hkRlJVVkZSVVVBVGxOME0xOWZNamxmWDI1MWJWOW5aWFJKZDBWRkFBQUFtTzhBQUNUZUFBQUFBQUFBQVFBQUFHRGRBQUFBQUFBQW1POEFBT0RkQUFBQUFBQUFBZ0FBQUVUWUFBQUNBQUFBUE40QVFmaThBd3ZlQVR6ZkFBQ0lBUUFBNFFFQUFHWUJBQURpQVFBQTR3RUFBT1FCQUFEbEFRQUE1Z0VBQU9jQkFBRG9BUUFBNlFFQUFFNVRkRE5mWHpJM2JuVnRYM0IxZEVsalRsTmZNVGx2YzNSeVpXRnRZblZtWDJsMFpYSmhkRzl5U1dOT1UxOHhNV05vWVhKZmRISmhhWFJ6U1dORlJVVkZSVVVBVGxOME0xOWZNamxmWDI1MWJWOXdkWFJKWTBWRkFFNVRkRE5mWHpJeE5GOWZiblZ0WDNCMWRGOWlZWE5sUlFBQUZPOEFBQUxmQUFDWTd3QUE3TjRBQUFBQUFBQUJBQUFBSE44QUFBQUFBQUNZN3dBQXFONEFBQUFBQUFBQ0FBQUFSTmdBQUFJQUFBQWszd0JCNEw0REM3NEJCT0FBQUlnQkFBRHFBUUFBWmdFQUFPc0JBQURzQVFBQTdRRUFBTzRCQUFEdkFRQUE4QUVBQVBFQkFBRHlBUUFBVGxOME0xOWZNamR1ZFcxZmNIVjBTWGRPVTE4eE9XOXpkSEpsWVcxaWRXWmZhWFJsY21GMGIzSkpkMDVUWHpFeFkyaGhjbDkwY21GcGRITkpkMFZGUlVWRlJRQk9VM1F6WDE4eU9WOWZiblZ0WDNCMWRFbDNSVVVBQUFDWTd3QUExTjhBQUFBQUFBQUJBQUFBSE44QUFBQUFBQUNZN3dBQWtOOEFBQUFBQUFBQ0FBQUFSTmdBQUFJQUFBRHMzd0JCcU1BREM1b0xCT0VBQVBNQkFBRDBBUUFBWmdFQUFQVUJBQUQyQVFBQTl3RUFBUGdCQUFENUFRQUErZ0VBQVBzQkFBRDQvLy8vQk9FQUFQd0JBQUQ5QVFBQS9nRUFBUDhCQUFBQUFnQUFBUUlBQUFJQ0FBQk9VM1F6WDE4eU9IUnBiV1ZmWjJWMFNXTk9VMTh4T1dsemRISmxZVzFpZFdaZmFYUmxjbUYwYjNKSlkwNVRYekV4WTJoaGNsOTBjbUZwZEhOSlkwVkZSVVZGUlFCT1UzUXpYMTh5T1hScGJXVmZZbUZ6WlVVQUZPOEFBTDNnQUFCT1UzUXpYMTh5TWpCZlgzUnBiV1ZmWjJWMFgyTmZjM1J2Y21GblpVbGpSVVVBQUFBVTd3QUEyT0FBQUpqdkFBQjQ0QUFBQUFBQUFBTUFBQUJFMkFBQUFnQUFBTkRnQUFBQ0FBQUEvT0FBQUFBSUFBQUFBQUFBOE9FQUFBTUNBQUFFQWdBQVpnRUFBQVVDQUFBR0FnQUFCd0lBQUFnQ0FBQUpBZ0FBQ2dJQUFBc0NBQUQ0Ly8vLzhPRUFBQXdDQUFBTkFnQUFEZ0lBQUE4Q0FBQVFBZ0FBRVFJQUFCSUNBQUJPVTNRelgxOHlPSFJwYldWZloyVjBTWGRPVTE4eE9XbHpkSEpsWVcxaWRXWmZhWFJsY21GMGIzSkpkMDVUWHpFeFkyaGhjbDkwY21GcGRITkpkMFZGUlVWRlJRQk9VM1F6WDE4eU1qQmZYM1JwYldWZloyVjBYMk5mYzNSdmNtRm5aVWwzUlVVQUFCVHZBQURGNFFBQW1POEFBSURoQUFBQUFBQUFBd0FBQUVUWUFBQUNBQUFBME9BQUFBSUFBQURvNFFBQUFBZ0FBQUFBQUFDVTRnQUFFd0lBQUJRQ0FBQm1BUUFBRlFJQUFFNVRkRE5mWHpJNGRHbHRaVjl3ZFhSSlkwNVRYekU1YjNOMGNtVmhiV0oxWmw5cGRHVnlZWFJ2Y2tsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSVVZGQUU1VGRETmZYekl4TUY5ZmRHbHRaVjl3ZFhSRkFBQUFGTzhBQUhYaUFBQ1k3d0FBTU9JQUFBQUFBQUFDQUFBQVJOZ0FBQUlBQUFDTTRnQUFBQWdBQUFBQUFBQVU0d0FBRmdJQUFCY0NBQUJtQVFBQUdBSUFBRTVUZEROZlh6STRkR2x0WlY5d2RYUkpkMDVUWHpFNWIzTjBjbVZoYldKMVpsOXBkR1Z5WVhSdmNrbDNUbE5mTVRGamFHRnlYM1J5WVdsMGMwbDNSVVZGUlVWRkFBQUFBSmp2QUFETTRnQUFBQUFBQUFJQUFBQkUyQUFBQWdBQUFJemlBQUFBQ0FBQUFBQUFBS2pqQUFDSUFRQUFHUUlBQUdZQkFBQWFBZ0FBR3dJQUFCd0NBQUFkQWdBQUhnSUFBQjhDQUFBZ0FnQUFJUUlBQUNJQ0FBQk9VM1F6WDE4eU1UQnRiMjVsZVhCMWJtTjBTV05NWWpCRlJVVUFUbE4wTTE5Zk1qRXdiVzl1WlhsZlltRnpaVVVBQUFBQUZPOEFBSWpqQUFDWTd3QUFiT01BQUFBQUFBQUNBQUFBUk5nQUFBSUFBQUNnNHdBQUFnQUFBQUFBQUFBYzVBQUFpQUVBQUNNQ0FBQm1BUUFBSkFJQUFDVUNBQUFtQWdBQUp3SUFBQ2dDQUFBcEFnQUFLZ0lBQUNzQ0FBQXNBZ0FBVGxOME0xOWZNakV3Ylc5dVpYbHdkVzVqZEVsalRHSXhSVVZGQUpqdkFBQUE1QUFBQUFBQUFBSUFBQUJFMkFBQUFnQUFBS0RqQUFBQ0FBQUFBQUFBQUpEa0FBQ0lBUUFBTFFJQUFHWUJBQUF1QWdBQUx3SUFBREFDQUFBeEFnQUFNZ0lBQURNQ0FBQTBBZ0FBTlFJQUFEWUNBQUJPVTNRelgxOHlNVEJ0YjI1bGVYQjFibU4wU1hkTVlqQkZSVVVBbU84QUFIVGtBQUFBQUFBQUFnQUFBRVRZQUFBQ0FBQUFvT01BQUFJQUFBQUFBQUFBQk9VQUFJZ0JBQUEzQWdBQVpnRUFBRGdDQUFBNUFnQUFPZ0lBQURzQ0FBQThBZ0FBUFFJQUFENENBQUEvQWdBQVFBSUFBRTVUZEROZlh6SXhNRzF2Ym1WNWNIVnVZM1JKZDB4aU1VVkZSUUNZN3dBQTZPUUFBQUFBQUFBQ0FBQUFSTmdBQUFJQUFBQ2c0d0FBQWdBQUFBQUFBQUNvNVFBQWlBRUFBRUVDQUFCbUFRQUFRZ0lBQUVNQ0FBQk9VM1F6WDE4eU9XMXZibVY1WDJkbGRFbGpUbE5mTVRscGMzUnlaV0Z0WW5WbVgybDBaWEpoZEc5eVNXTk9VMTh4TVdOb1lYSmZkSEpoYVhSelNXTkZSVVZGUlVVQVRsTjBNMTlmTWpFeFgxOXRiMjVsZVY5blpYUkpZMFZGQUFBVTd3QUFodVVBQUpqdkFBQkE1UUFBQUFBQUFBSUFBQUJFMkFBQUFnQUFBS0RsQUVITXl3TUxtZ0ZNNWdBQWlBRUFBRVFDQUFCbUFRQUFSUUlBQUVZQ0FBQk9VM1F6WDE4eU9XMXZibVY1WDJkbGRFbDNUbE5mTVRscGMzUnlaV0Z0WW5WbVgybDBaWEpoZEc5eVNYZE9VMTh4TVdOb1lYSmZkSEpoYVhSelNYZEZSVVZGUlVVQVRsTjBNMTlmTWpFeFgxOXRiMjVsZVY5blpYUkpkMFZGQUFBVTd3QUFLdVlBQUpqdkFBRGs1UUFBQUFBQUFBSUFBQUJFMkFBQUFnQUFBRVRtQUVId3pBTUxtZ0h3NWdBQWlBRUFBRWNDQUFCbUFRQUFTQUlBQUVrQ0FBQk9VM1F6WDE4eU9XMXZibVY1WDNCMWRFbGpUbE5mTVRsdmMzUnlaV0Z0WW5WbVgybDBaWEpoZEc5eVNXTk9VMTh4TVdOb1lYSmZkSEpoYVhSelNXTkZSVVZGUlVVQVRsTjBNMTlmTWpFeFgxOXRiMjVsZVY5d2RYUkpZMFZGQUFBVTd3QUF6dVlBQUpqdkFBQ0k1Z0FBQUFBQUFBSUFBQUJFMkFBQUFnQUFBT2ptQUVHVXpnTUxtZ0dVNXdBQWlBRUFBRW9DQUFCbUFRQUFTd0lBQUV3Q0FBQk9VM1F6WDE4eU9XMXZibVY1WDNCMWRFbDNUbE5mTVRsdmMzUnlaV0Z0WW5WbVgybDBaWEpoZEc5eVNYZE9VMTh4TVdOb1lYSmZkSEpoYVhSelNYZEZSVVZGUlVVQVRsTjBNMTlmTWpFeFgxOXRiMjVsZVY5d2RYUkpkMFZGQUFBVTd3QUFjdWNBQUpqdkFBQXM1d0FBQUFBQUFBSUFBQUJFMkFBQUFnQUFBSXpuQUVHNHp3TUx1UWdNNkFBQWlBRUFBRTBDQUFCbUFRQUFUZ0lBQUU4Q0FBQlFBZ0FBVGxOME0xOWZNamh0WlhOellXZGxjMGxqUlVVQVRsTjBNMTlmTWpFemJXVnpjMkZuWlhOZlltRnpaVVVBQUFBQUZPOEFBT25uQUFDWTd3QUExT2NBQUFBQUFBQUNBQUFBUk5nQUFBSUFBQUFFNkFBQUFnQUFBQUFBQUFCazZBQUFpQUVBQUZFQ0FBQm1BUUFBVWdJQUFGTUNBQUJVQWdBQVRsTjBNMTlmTWpodFpYTnpZV2RsYzBsM1JVVUFBQUFBbU84QUFFem9BQUFBQUFBQUFnQUFBRVRZQUFBQ0FBQUFCT2dBQUFJQUFBQlRBQUFBZFFBQUFHNEFBQUJrQUFBQVlRQUFBSGtBQUFBQUFBQUFUUUFBQUc4QUFBQnVBQUFBWkFBQUFHRUFBQUI1QUFBQUFBQUFBRlFBQUFCMUFBQUFaUUFBQUhNQUFBQmtBQUFBWVFBQUFIa0FBQUFBQUFBQVZ3QUFBR1VBQUFCa0FBQUFiZ0FBQUdVQUFBQnpBQUFBWkFBQUFHRUFBQUI1QUFBQUFBQUFBRlFBQUFCb0FBQUFkUUFBQUhJQUFBQnpBQUFBWkFBQUFHRUFBQUI1QUFBQUFBQUFBRVlBQUFCeUFBQUFhUUFBQUdRQUFBQmhBQUFBZVFBQUFBQUFBQUJUQUFBQVlRQUFBSFFBQUFCMUFBQUFjZ0FBQUdRQUFBQmhBQUFBZVFBQUFBQUFBQUJUQUFBQWRRQUFBRzRBQUFBQUFBQUFUUUFBQUc4QUFBQnVBQUFBQUFBQUFGUUFBQUIxQUFBQVpRQUFBQUFBQUFCWEFBQUFaUUFBQUdRQUFBQUFBQUFBVkFBQUFHZ0FBQUIxQUFBQUFBQUFBRVlBQUFCeUFBQUFhUUFBQUFBQUFBQlRBQUFBWVFBQUFIUUFBQUFBQUFBQVNnQUFBR0VBQUFCdUFBQUFkUUFBQUdFQUFBQnlBQUFBZVFBQUFBQUFBQUJHQUFBQVpRQUFBR0lBQUFCeUFBQUFkUUFBQUdFQUFBQnlBQUFBZVFBQUFBQUFBQUJOQUFBQVlRQUFBSElBQUFCakFBQUFhQUFBQUFBQUFBQkJBQUFBY0FBQUFISUFBQUJwQUFBQWJBQUFBQUFBQUFCTkFBQUFZUUFBQUhrQUFBQUFBQUFBU2dBQUFIVUFBQUJ1QUFBQVpRQUFBQUFBQUFCS0FBQUFkUUFBQUd3QUFBQjVBQUFBQUFBQUFFRUFBQUIxQUFBQVp3QUFBSFVBQUFCekFBQUFkQUFBQUFBQUFBQlRBQUFBWlFBQUFIQUFBQUIwQUFBQVpRQUFBRzBBQUFCaUFBQUFaUUFBQUhJQUFBQUFBQUFBVHdBQUFHTUFBQUIwQUFBQWJ3QUFBR0lBQUFCbEFBQUFjZ0FBQUFBQUFBQk9BQUFBYndBQUFIWUFBQUJsQUFBQWJRQUFBR0lBQUFCbEFBQUFjZ0FBQUFBQUFBQkVBQUFBWlFBQUFHTUFBQUJsQUFBQWJRQUFBR0lBQUFCbEFBQUFjZ0FBQUFBQUFBQktBQUFBWVFBQUFHNEFBQUFBQUFBQVJnQUFBR1VBQUFCaUFBQUFBQUFBQUUwQUFBQmhBQUFBY2dBQUFBQUFBQUJCQUFBQWNBQUFBSElBQUFBQUFBQUFTZ0FBQUhVQUFBQnVBQUFBQUFBQUFFb0FBQUIxQUFBQWJBQUFBQUFBQUFCQkFBQUFkUUFBQUdjQUFBQUFBQUFBVXdBQUFHVUFBQUJ3QUFBQUFBQUFBRThBQUFCakFBQUFkQUFBQUFBQUFBQk9BQUFBYndBQUFIWUFBQUFBQUFBQVJBQUFBR1VBQUFCakFBQUFBQUFBQUVFQUFBQk5BQUFBQUFBQUFGQUFBQUJOQUVIODF3TUwwZ3I4NEFBQS9BRUFBUDBCQUFEK0FRQUEvd0VBQUFBQ0FBQUJBZ0FBQWdJQUFBQUFBQURvNFFBQURBSUFBQTBDQUFBT0FnQUFEd0lBQUJBQ0FBQVJBZ0FBRWdJQUFBQUFBQUJ3N0FBQUZ3QUFBRlVDQUFCV0FnQUFUbE4wTTE5Zk1qRTBYMTl6YUdGeVpXUmZZMjkxYm5SRkFBQUFBQlR2QUFCVTdBQUFBQUFBQUxUc0FBQVhBQUFBVndJQUFGWUNBQUJZQWdBQVZnSUFBRTVUZEROZlh6SXhPVjlmYzJoaGNtVmtYM2RsWVd0ZlkyOTFiblJGQUFBQW1POEFBSlRzQUFBQUFBQUFBUUFBQUhEc0FBQUFBQUFBVGpFd1gxOWplSGhoWW1sMk1URTJYMTl6YUdsdFgzUjVjR1ZmYVc1bWIwVUFBQUFBUE84QUFNenNBQUJJOFFBQVRqRXdYMTlqZUhoaFltbDJNVEUzWDE5amJHRnpjMTkwZVhCbFgybHVabTlGQUFBQVBPOEFBUHpzQUFEdzdBQUFUakV3WDE5amVIaGhZbWwyTVRFM1gxOXdZbUZ6WlY5MGVYQmxYMmx1Wm05RkFBQUFQTzhBQUN6dEFBRHc3QUFBVGpFd1gxOWplSGhoWW1sMk1URTVYMTl3YjJsdWRHVnlYM1I1Y0dWZmFXNW1iMFVBUE84QUFGenRBQUJRN1FBQVRqRXdYMTlqZUhoaFltbDJNVEl3WDE5bWRXNWpkR2x2Ymw5MGVYQmxYMmx1Wm05RkFBQUFBRHp2QUFDTTdRQUE4T3dBQUU0eE1GOWZZM2g0WVdKcGRqRXlPVjlmY0c5cGJuUmxjbDkwYjE5dFpXMWlaWEpmZEhsd1pWOXBibVp2UlFBQUFEenZBQURBN1FBQVVPMEFBQUFBQUFCQTdnQUFXUUlBQUZvQ0FBQmJBZ0FBWEFJQUFGMENBQUJPTVRCZlgyTjRlR0ZpYVhZeE1qTmZYMloxYm1SaGJXVnVkR0ZzWDNSNWNHVmZhVzVtYjBVQVBPOEFBQmp1QUFEdzdBQUFkZ0FBQUFUdUFBQk03Z0FBUkc0QUFBVHVBQUJZN2dBQVlnQUFBQVR1QUFCazdnQUFZd0FBQUFUdUFBQnc3Z0FBYUFBQUFBVHVBQUI4N2dBQVlRQUFBQVR1QUFDSTdnQUFjd0FBQUFUdUFBQ1U3Z0FBZEFBQUFBVHVBQUNnN2dBQWFRQUFBQVR1QUFDczdnQUFhZ0FBQUFUdUFBQzQ3Z0FBYkFBQUFBVHVBQURFN2dBQWJRQUFBQVR1QUFEUTdnQUFlQUFBQUFUdUFBRGM3Z0FBZVFBQUFBVHVBQURvN2dBQVpnQUFBQVR1QUFEMDdnQUFaQUFBQUFUdUFBQUE3d0FBQUFBQUFDRHRBQUJaQWdBQVhnSUFBRnNDQUFCY0FnQUFYd0lBQUdBQ0FBQmhBZ0FBWWdJQUFBQUFBQUNFN3dBQVdRSUFBR01DQUFCYkFnQUFYQUlBQUY4Q0FBQmtBZ0FBWlFJQUFHWUNBQUJPTVRCZlgyTjRlR0ZpYVhZeE1qQmZYM05wWDJOc1lYTnpYM1I1Y0dWZmFXNW1iMFVBQUFBQVBPOEFBRnp2QUFBZzdRQUFBQUFBQU9EdkFBQlpBZ0FBWndJQUFGc0NBQUJjQWdBQVh3SUFBR2dDQUFCcEFnQUFhZ0lBQUU0eE1GOWZZM2g0WVdKcGRqRXlNVjlmZG0xcFgyTnNZWE56WDNSNWNHVmZhVzVtYjBVQUFBQTg3d0FBdU84QUFDRHRBQUFBQUFBQWdPMEFBRmtDQUFCckFnQUFXd0lBQUZ3Q0FBQnNBZ0FBQUFBQUFHendBQUFOQUFBQWJRSUFBRzRDQUFBQUFBQUFsUEFBQUEwQUFBQnZBZ0FBY0FJQUFBQUFBQUJVOEFBQURRQUFBSEVDQUFCeUFnQUFVM1E1WlhoalpYQjBhVzl1QUFBQUFCVHZBQUJFOEFBQVUzUTVZbUZrWDJGc2JHOWpBQUFBQUR6dkFBQmM4QUFBVlBBQUFGTjBNakJpWVdSZllYSnlZWGxmYm1WM1gyeGxibWQwYUFBQUFBQTg3d0FBZVBBQUFHendBQUFBQUFBQXhQQUFBQXdBQUFCekFnQUFkQUlBQUZOME1URnNiMmRwWTE5bGNuSnZjZ0E4N3dBQXRQQUFBRlR3QUFBQUFBQUErUEFBQUF3QUFBQjFBZ0FBZEFJQUFGTjBNVEpzWlc1bmRHaGZaWEp5YjNJQUFBQUFQTzhBQU9Ud0FBREU4QUFBQUFBQUFDenhBQUFNQUFBQWRnSUFBSFFDQUFCVGRERXliM1YwWDI5bVgzSmhibWRsQUFBQUFEenZBQUFZOFFBQXhQQUFBRk4wT1hSNWNHVmZhVzVtYndBQUFBQVU3d0FBT1BFQVFkRGlBd3NoQVFBQUFDRUVBQUFLQndBQVdRd0FBQVFPQUFELy8vLy8vZi8vLy83Ly8vOEZBRUg4NGdNTEFnTUJBRUdVNHdNTEN3RUJBQUFBQVFBQU9BY0JBRUdzNHdNTEFRSUFRYnpqQXdzSS8vLy8vLy8vLy84QVFZRGtBd3NKY1BFQUFBQUFBQUFGQUVHVTVBTUxBZ1FCQUVHczVBTUxEZ0VCQUFBRkFRQUFTQWNCQUFBRUFFSEU1QU1MQVFFQVFkVGtBd3NGLy8vLy93b0FRWmpsQXdzSkNQSUFBTEFkVVFBSkFFR3M1UU1MQWdNQkFFSEE1UU1MRWdJQkFBQUFBQUFBQUFFQUFGZ05BUUFBQkFCQjdPVURDd1QvLy8vL1xcXCIpfHwoJD1fLF89QS5sb2NhdGVGaWxlP0EubG9jYXRlRmlsZSgkLHkpOnkrJCk7dmFyIEVBPXs2MjI1NjooQSxJLGcpPT57dmFyIEI9dShBKSxDPXUoSSksUT11KGcpO2NvbnNvbGUubG9nKEMrQixRKX0sNjIzOTU6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpLGk9dShCKTtjb25zb2xlLmxvZyhRK0MsRSxpKX0sNjI1NzM6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpLGk9dShCKTtjb25zb2xlLmxvZyhRK0MsRSxpKX0sNjI3NTE6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpLGk9dShCKTtjb25zb2xlLmxvZyhRK0MsRSxpKX0sNjI5Mjk6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpLGk9dShCKTtjb25zb2xlLmxvZyhRK0MsRSxpKX0sNjMxMDc6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpO2NvbnNvbGUubG9nKFErQyxFLEIpfSw2MzI1MDooQSxJLGcpPT57dmFyIEI9dShBKSxDPXUoSSksUT11KGcpO2NvbnNvbGUuZXJyb3IoQytCLFEpfSw2MzM5MzooQSxJLGcsQik9Pnt2YXIgQz11KEEpLFE9dShJKSxFPXUoZyksaT11KEIpO2NvbnNvbGUuZXJyb3IoUStDLEUsaSl9LDYzNTc1OihBLEksZyxCKT0+e3ZhciBDPXUoQSksUT11KEkpLEU9dShnKSxpPXUoQik7Y29uc29sZS5lcnJvcihRK0MsRSxpKX0sNjM3NTc6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpLGk9dShCKTtjb25zb2xlLmVycm9yKFErQyxFLGkpfSw2MzkzOTooQSxJLGcsQik9Pnt2YXIgQz11KEEpLFE9dShJKSxFPXUoZyksaT11KEIpO2NvbnNvbGUuZXJyb3IoUStDLEUsaSl9LDY0MTIxOihBLEksZyxCKT0+e3ZhciBDPXUoQSksUT11KEkpLEU9dShnKTtjb25zb2xlLmVycm9yKFErQyxFLEIpfSw2NDI2ODooQSxJLGcpPT57dmFyIEI9dShBKSxDPXUoSSksUT11KGcpO2NvbnNvbGUud2FybihDK0IsUSl9LDY0NDA4OihBLEksZyxCKT0+e3ZhciBDPXUoQSksUT11KEkpLEU9dShnKSxpPXUoQik7Y29uc29sZS53YXJuKFErQyxFLGkpfSw2NDU4OTooQSxJLGcsQik9Pnt2YXIgQz11KEEpLFE9dShJKSxFPXUoZyksaT11KEIpO2NvbnNvbGUud2FybihRK0MsRSxpKX0sNjQ3NzA6KEEsSSxnLEIpPT57dmFyIEM9dShBKSxRPXUoSSksRT11KGcpLGk9dShCKTtjb25zb2xlLndhcm4oUStDLEUsaSl9LDY0OTUxOihBLEksZyxCKT0+e3ZhciBDPXUoQSksUT11KEkpLEU9dShnKSxpPXUoQik7Y29uc29sZS53YXJuKFErQyxFLGkpfSw2NTEzMjooQSxJLGcsQik9Pnt2YXIgQz11KEEpLFE9dShJKSxFPXUoZyk7Y29uc29sZS53YXJuKFErQyxFLEIpfSw2NTI3ODpmdW5jdGlvbigpe3ZhciBBPWFyZ3VtZW50cyxJPTA7YXJ0b29sa2l0TkZULk5GVE1hcmtlckluZm98fChhcnRvb2xraXRORlQuTkZUTWFya2VySW5mbz17aWQ6MCxlcnJvcjotMSxmb3VuZDowLHBvc2U6WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwXX0pO3ZhciBnPWFydG9vbGtpdE5GVC5ORlRNYXJrZXJJbmZvO2cuaWQ9QVtJKytdLGcuZXJyb3I9QVtJKytdLGcuZm91bmQ9MSxnLnBvc2VbMF09QVtJKytdLGcucG9zZVsxXT1BW0krK10sZy5wb3NlWzJdPUFbSSsrXSxnLnBvc2VbM109QVtJKytdLGcucG9zZVs0XT1BW0krK10sZy5wb3NlWzVdPUFbSSsrXSxnLnBvc2VbNl09QVtJKytdLGcucG9zZVs3XT1BW0krK10sZy5wb3NlWzhdPUFbSSsrXSxnLnBvc2VbOV09QVtJKytdLGcucG9zZVsxMF09QVtJKytdLGcucG9zZVsxMV09QVtJKytdfSw2NTk4NDpmdW5jdGlvbigpe3ZhciBBPWFyZ3VtZW50cyxJPTA7YXJ0b29sa2l0TkZULk5GVE1hcmtlckluZm98fChhcnRvb2xraXRORlQuTkZUTWFya2VySW5mbz17aWQ6MCxlcnJvcjotMSxmb3VuZDowLHBvc2U6WzAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwXX0pO3ZhciBnPWFydG9vbGtpdE5GVC5ORlRNYXJrZXJJbmZvO2cuaWQ9QVtJKytdLGcuZXJyb3I9LTEsZy5mb3VuZD0wLGcucG9zZVswXT0wLGcucG9zZVsxXT0wLGcucG9zZVsyXT0wLGcucG9zZVszXT0wLGcucG9zZVs0XT0wLGcucG9zZVs1XT0wLGcucG9zZVs2XT0wLGcucG9zZVs3XT0wLGcucG9zZVs4XT0wLGcucG9zZVs5XT0wLGcucG9zZVsxMF09MCxnLnBvc2VbMTFdPTB9LDY2NjEzOihBLEksZyxCLEMsUSk9PnthcnRvb2xraXRORlQuZnJhbWVNYWxsb2N8fChhcnRvb2xraXRORlQuZnJhbWVNYWxsb2M9e30pO3ZhciBFPWFydG9vbGtpdE5GVC5mcmFtZU1hbGxvYztFLmZyYW1lcG9pbnRlcj1JLEUuZnJhbWVzaXplPWcsRS5jYW1lcmE9QixFLnRyYW5zZm9ybT1DLEUudmlkZW9MdW1hUG9pbnRlcj1RfX07ZnVuY3Rpb24gaUEoQSl7dGhpcy5uYW1lPVxcXCJFeGl0U3RhdHVzXFxcIix0aGlzLm1lc3NhZ2U9XFxcIlByb2dyYW0gdGVybWluYXRlZCB3aXRoIGV4aXQoXFxcIitBK1xcXCIpXFxcIix0aGlzLnN0YXR1cz1BfWZ1bmN0aW9uIG9BKEkpe2Zvcig7SS5sZW5ndGg+MDspSS5zaGlmdCgpKEEpfWZ1bmN0aW9uIERBKEEpe3RoaXMuZXhjUHRyPUEsdGhpcy5wdHI9QS0yNCx0aGlzLnNldF90eXBlPWZ1bmN0aW9uKEEpe2RbdGhpcy5wdHIrND4+Ml09QX0sdGhpcy5nZXRfdHlwZT1mdW5jdGlvbigpe3JldHVybiBkW3RoaXMucHRyKzQ+PjJdfSx0aGlzLnNldF9kZXN0cnVjdG9yPWZ1bmN0aW9uKEEpe2RbdGhpcy5wdHIrOD4+Ml09QX0sdGhpcy5nZXRfZGVzdHJ1Y3Rvcj1mdW5jdGlvbigpe3JldHVybiBkW3RoaXMucHRyKzg+PjJdfSx0aGlzLnNldF9yZWZjb3VudD1mdW5jdGlvbihBKXtMW3RoaXMucHRyPj4yXT1BfSx0aGlzLnNldF9jYXVnaHQ9ZnVuY3Rpb24oQSl7QT1BPzE6MCxVW3RoaXMucHRyKzEyPj4wXT1BfSx0aGlzLmdldF9jYXVnaHQ9ZnVuY3Rpb24oKXtyZXR1cm4gMCE9VVt0aGlzLnB0cisxMj4+MF19LHRoaXMuc2V0X3JldGhyb3duPWZ1bmN0aW9uKEEpe0E9QT8xOjAsVVt0aGlzLnB0cisxMz4+MF09QX0sdGhpcy5nZXRfcmV0aHJvd249ZnVuY3Rpb24oKXtyZXR1cm4gMCE9VVt0aGlzLnB0cisxMz4+MF19LHRoaXMuaW5pdD1mdW5jdGlvbihBLEkpe3RoaXMuc2V0X2FkanVzdGVkX3B0cigwKSx0aGlzLnNldF90eXBlKEEpLHRoaXMuc2V0X2Rlc3RydWN0b3IoSSksdGhpcy5zZXRfcmVmY291bnQoMCksdGhpcy5zZXRfY2F1Z2h0KCExKSx0aGlzLnNldF9yZXRocm93bighMSl9LHRoaXMuYWRkX3JlZj1mdW5jdGlvbigpe3ZhciBBPUxbdGhpcy5wdHI+PjJdO0xbdGhpcy5wdHI+PjJdPUErMX0sdGhpcy5yZWxlYXNlX3JlZj1mdW5jdGlvbigpe3ZhciBBPUxbdGhpcy5wdHI+PjJdO3JldHVybiBMW3RoaXMucHRyPj4yXT1BLTEsMT09PUF9LHRoaXMuc2V0X2FkanVzdGVkX3B0cj1mdW5jdGlvbihBKXtkW3RoaXMucHRyKzE2Pj4yXT1BfSx0aGlzLmdldF9hZGp1c3RlZF9wdHI9ZnVuY3Rpb24oKXtyZXR1cm4gZFt0aGlzLnB0cisxNj4+Ml19LHRoaXMuZ2V0X2V4Y2VwdGlvbl9wdHI9ZnVuY3Rpb24oKXtpZihqSSh0aGlzLmdldF90eXBlKCkpKXJldHVybiBkW3RoaXMuZXhjUHRyPj4yXTt2YXIgQT10aGlzLmdldF9hZGp1c3RlZF9wdHIoKTtyZXR1cm4gMCE9PUE/QTp0aGlzLmV4Y1B0cn19dmFyIGFBPXtpc0FiczpBPT5cXFwiL1xcXCI9PT1BLmNoYXJBdCgwKSxzcGxpdFBhdGg6QT0+L14oXFxcXC8/fCkoW1xcXFxzXFxcXFNdKj8pKCg/OlxcXFwuezEsMn18W15cXFxcL10rP3wpKFxcXFwuW14uXFxcXC9dKnwpKSg/OltcXFxcL10qKSQvLmV4ZWMoQSkuc2xpY2UoMSksbm9ybWFsaXplQXJyYXk6KEEsSSk9Pntmb3IodmFyIGc9MCxCPUEubGVuZ3RoLTE7Qj49MDtCLS0pe3ZhciBDPUFbQl07XFxcIi5cXFwiPT09Qz9BLnNwbGljZShCLDEpOlxcXCIuLlxcXCI9PT1DPyhBLnNwbGljZShCLDEpLGcrKyk6ZyYmKEEuc3BsaWNlKEIsMSksZy0tKX1pZihJKWZvcig7ZztnLS0pQS51bnNoaWZ0KFxcXCIuLlxcXCIpO3JldHVybiBBfSxub3JtYWxpemU6QT0+e3ZhciBJPWFBLmlzQWJzKEEpLGc9XFxcIi9cXFwiPT09QS5zdWJzdHIoLTEpO3JldHVybihBPWFBLm5vcm1hbGl6ZUFycmF5KEEuc3BsaXQoXFxcIi9cXFwiKS5maWx0ZXIoKEE9PiEhQSkpLCFJKS5qb2luKFxcXCIvXFxcIikpfHxJfHwoQT1cXFwiLlxcXCIpLEEmJmcmJihBKz1cXFwiL1xcXCIpLChJP1xcXCIvXFxcIjpcXFwiXFxcIikrQX0sZGlybmFtZTpBPT57dmFyIEk9YUEuc3BsaXRQYXRoKEEpLGc9SVswXSxCPUlbMV07cmV0dXJuIGd8fEI/KEImJihCPUIuc3Vic3RyKDAsQi5sZW5ndGgtMSkpLGcrQik6XFxcIi5cXFwifSxiYXNlbmFtZTpBPT57aWYoXFxcIi9cXFwiPT09QSlyZXR1cm5cXFwiL1xcXCI7dmFyIEk9KEE9KEE9YUEubm9ybWFsaXplKEEpKS5yZXBsYWNlKC9cXFxcLyQvLFxcXCJcXFwiKSkubGFzdEluZGV4T2YoXFxcIi9cXFwiKTtyZXR1cm4tMT09PUk/QTpBLnN1YnN0cihJKzEpfSxqb2luOmZ1bmN0aW9uKCl7dmFyIEE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtyZXR1cm4gYUEubm9ybWFsaXplKEEuam9pbihcXFwiL1xcXCIpKX0sam9pbjI6KEEsSSk9PmFBLm5vcm1hbGl6ZShBK1xcXCIvXFxcIitJKX0sd0E9e3Jlc29sdmU6ZnVuY3Rpb24oKXtmb3IodmFyIEE9XFxcIlxcXCIsST0hMSxnPWFyZ3VtZW50cy5sZW5ndGgtMTtnPj0tMSYmIUk7Zy0tKXt2YXIgQj1nPj0wP2FyZ3VtZW50c1tnXTpSQS5jd2QoKTtpZihcXFwic3RyaW5nXFxcIiE9dHlwZW9mIEIpdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiQXJndW1lbnRzIHRvIHBhdGgucmVzb2x2ZSBtdXN0IGJlIHN0cmluZ3NcXFwiKTtpZighQilyZXR1cm5cXFwiXFxcIjtBPUIrXFxcIi9cXFwiK0EsST1hQS5pc0FicyhCKX1yZXR1cm4oST9cXFwiL1xcXCI6XFxcIlxcXCIpKyhBPWFBLm5vcm1hbGl6ZUFycmF5KEEuc3BsaXQoXFxcIi9cXFwiKS5maWx0ZXIoKEE9PiEhQSkpLCFJKS5qb2luKFxcXCIvXFxcIikpfHxcXFwiLlxcXCJ9LHJlbGF0aXZlOihBLEkpPT57ZnVuY3Rpb24gZyhBKXtmb3IodmFyIEk9MDtJPEEubGVuZ3RoJiZcXFwiXFxcIj09PUFbSV07SSsrKTtmb3IodmFyIGc9QS5sZW5ndGgtMTtnPj0wJiZcXFwiXFxcIj09PUFbZ107Zy0tKTtyZXR1cm4gST5nP1tdOkEuc2xpY2UoSSxnLUkrMSl9QT13QS5yZXNvbHZlKEEpLnN1YnN0cigxKSxJPXdBLnJlc29sdmUoSSkuc3Vic3RyKDEpO2Zvcih2YXIgQj1nKEEuc3BsaXQoXFxcIi9cXFwiKSksQz1nKEkuc3BsaXQoXFxcIi9cXFwiKSksUT1NYXRoLm1pbihCLmxlbmd0aCxDLmxlbmd0aCksRT1RLGk9MDtpPFE7aSsrKWlmKEJbaV0hPT1DW2ldKXtFPWk7YnJlYWt9dmFyIG89W107Zm9yKGk9RTtpPEIubGVuZ3RoO2krKylvLnB1c2goXFxcIi4uXFxcIik7cmV0dXJuKG89by5jb25jYXQoQy5zbGljZShFKSkpLmpvaW4oXFxcIi9cXFwiKX19O2Z1bmN0aW9uIHNBKEEsSSxnKXt2YXIgQj1nPjA/ZzpXKEEpKzEsQz1uZXcgQXJyYXkoQiksUT1wKEEsQywwLEMubGVuZ3RoKTtyZXR1cm4gSSYmKEMubGVuZ3RoPVEpLEN9dmFyIEdBPXt0dHlzOltdLGluaXQ6ZnVuY3Rpb24oKXt9LHNodXRkb3duOmZ1bmN0aW9uKCl7fSxyZWdpc3RlcjpmdW5jdGlvbihBLEkpe0dBLnR0eXNbQV09e2lucHV0OltdLG91dHB1dDpbXSxvcHM6SX0sUkEucmVnaXN0ZXJEZXZpY2UoQSxHQS5zdHJlYW1fb3BzKX0sc3RyZWFtX29wczp7b3BlbjpmdW5jdGlvbihBKXt2YXIgST1HQS50dHlzW0Eubm9kZS5yZGV2XTtpZighSSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig0Myk7QS50dHk9SSxBLnNlZWthYmxlPSExfSxjbG9zZTpmdW5jdGlvbihBKXtBLnR0eS5vcHMuZnN5bmMoQS50dHkpfSxmc3luYzpmdW5jdGlvbihBKXtBLnR0eS5vcHMuZnN5bmMoQS50dHkpfSxyZWFkOmZ1bmN0aW9uKEEsSSxnLEIsQyl7aWYoIUEudHR5fHwhQS50dHkub3BzLmdldF9jaGFyKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDYwKTtmb3IodmFyIFE9MCxFPTA7RTxCO0UrKyl7dmFyIGk7dHJ5e2k9QS50dHkub3BzLmdldF9jaGFyKEEudHR5KX1jYXRjaChBKXt0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOSl9aWYodm9pZCAwPT09aSYmMD09PVEpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNik7aWYobnVsbD09aSlicmVhaztRKyssSVtnK0VdPWl9cmV0dXJuIFEmJihBLm5vZGUudGltZXN0YW1wPURhdGUubm93KCkpLFF9LHdyaXRlOmZ1bmN0aW9uKEEsSSxnLEIsQyl7aWYoIUEudHR5fHwhQS50dHkub3BzLnB1dF9jaGFyKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDYwKTt0cnl7Zm9yKHZhciBRPTA7UTxCO1ErKylBLnR0eS5vcHMucHV0X2NoYXIoQS50dHksSVtnK1FdKX1jYXRjaChBKXt0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOSl9cmV0dXJuIEImJihBLm5vZGUudGltZXN0YW1wPURhdGUubm93KCkpLFF9fSxkZWZhdWx0X3R0eV9vcHM6e2dldF9jaGFyOmZ1bmN0aW9uKEEpe2lmKCFBLmlucHV0Lmxlbmd0aCl7dmFyIEk9bnVsbDtpZihGKXt2YXIgZz1CdWZmZXIuYWxsb2MoMjU2KSxCPTA7dHJ5e0I9aS5yZWFkU3luYyhwcm9jZXNzLnN0ZGluLmZkLGcsMCwyNTYsLTEpfWNhdGNoKEEpe2lmKCFBLnRvU3RyaW5nKCkuaW5jbHVkZXMoXFxcIkVPRlxcXCIpKXRocm93IEE7Qj0wfUk9Qj4wP2cuc2xpY2UoMCxCKS50b1N0cmluZyhcXFwidXRmLThcXFwiKTpudWxsfWVsc2VcXFwidW5kZWZpbmVkXFxcIiE9dHlwZW9mIHdpbmRvdyYmXFxcImZ1bmN0aW9uXFxcIj09dHlwZW9mIHdpbmRvdy5wcm9tcHQ/bnVsbCE9PShJPXdpbmRvdy5wcm9tcHQoXFxcIklucHV0OiBcXFwiKSkmJihJKz1cXFwiXFxcXG5cXFwiKTpcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgcmVhZGxpbmUmJm51bGwhPT0oST1yZWFkbGluZSgpKSYmKEkrPVxcXCJcXFxcblxcXCIpO2lmKCFJKXJldHVybiBudWxsO0EuaW5wdXQ9c0EoSSwhMCl9cmV0dXJuIEEuaW5wdXQuc2hpZnQoKX0scHV0X2NoYXI6ZnVuY3Rpb24oQSxJKXtudWxsPT09SXx8MTA9PT1JPyhNKGYoQS5vdXRwdXQsMCkpLEEub3V0cHV0PVtdKTowIT1JJiZBLm91dHB1dC5wdXNoKEkpfSxmc3luYzpmdW5jdGlvbihBKXtBLm91dHB1dCYmQS5vdXRwdXQubGVuZ3RoPjAmJihNKGYoQS5vdXRwdXQsMCkpLEEub3V0cHV0PVtdKX19LGRlZmF1bHRfdHR5MV9vcHM6e3B1dF9jaGFyOmZ1bmN0aW9uKEEsSSl7bnVsbD09PUl8fDEwPT09ST8oZShmKEEub3V0cHV0LDApKSxBLm91dHB1dD1bXSk6MCE9SSYmQS5vdXRwdXQucHVzaChJKX0sZnN5bmM6ZnVuY3Rpb24oQSl7QS5vdXRwdXQmJkEub3V0cHV0Lmxlbmd0aD4wJiYoZShmKEEub3V0cHV0LDApKSxBLm91dHB1dD1bXSl9fX07ZnVuY3Rpb24gaEEoQSl7eigpfXZhciB0QT17b3BzX3RhYmxlOm51bGwsbW91bnQ6ZnVuY3Rpb24oQSl7cmV0dXJuIHRBLmNyZWF0ZU5vZGUobnVsbCxcXFwiL1xcXCIsMTY4OTUsMCl9LGNyZWF0ZU5vZGU6ZnVuY3Rpb24oQSxJLGcsQil7aWYoUkEuaXNCbGtkZXYoZyl8fFJBLmlzRklGTyhnKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig2Myk7dEEub3BzX3RhYmxlfHwodEEub3BzX3RhYmxlPXtkaXI6e25vZGU6e2dldGF0dHI6dEEubm9kZV9vcHMuZ2V0YXR0cixzZXRhdHRyOnRBLm5vZGVfb3BzLnNldGF0dHIsbG9va3VwOnRBLm5vZGVfb3BzLmxvb2t1cCxta25vZDp0QS5ub2RlX29wcy5ta25vZCxyZW5hbWU6dEEubm9kZV9vcHMucmVuYW1lLHVubGluazp0QS5ub2RlX29wcy51bmxpbmsscm1kaXI6dEEubm9kZV9vcHMucm1kaXIscmVhZGRpcjp0QS5ub2RlX29wcy5yZWFkZGlyLHN5bWxpbms6dEEubm9kZV9vcHMuc3ltbGlua30sc3RyZWFtOntsbHNlZWs6dEEuc3RyZWFtX29wcy5sbHNlZWt9fSxmaWxlOntub2RlOntnZXRhdHRyOnRBLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjp0QS5ub2RlX29wcy5zZXRhdHRyfSxzdHJlYW06e2xsc2Vlazp0QS5zdHJlYW1fb3BzLmxsc2VlayxyZWFkOnRBLnN0cmVhbV9vcHMucmVhZCx3cml0ZTp0QS5zdHJlYW1fb3BzLndyaXRlLGFsbG9jYXRlOnRBLnN0cmVhbV9vcHMuYWxsb2NhdGUsbW1hcDp0QS5zdHJlYW1fb3BzLm1tYXAsbXN5bmM6dEEuc3RyZWFtX29wcy5tc3luY319LGxpbms6e25vZGU6e2dldGF0dHI6dEEubm9kZV9vcHMuZ2V0YXR0cixzZXRhdHRyOnRBLm5vZGVfb3BzLnNldGF0dHIscmVhZGxpbms6dEEubm9kZV9vcHMucmVhZGxpbmt9LHN0cmVhbTp7fX0sY2hyZGV2Ontub2RlOntnZXRhdHRyOnRBLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjp0QS5ub2RlX29wcy5zZXRhdHRyfSxzdHJlYW06UkEuY2hyZGV2X3N0cmVhbV9vcHN9fSk7dmFyIEM9UkEuY3JlYXRlTm9kZShBLEksZyxCKTtyZXR1cm4gUkEuaXNEaXIoQy5tb2RlKT8oQy5ub2RlX29wcz10QS5vcHNfdGFibGUuZGlyLm5vZGUsQy5zdHJlYW1fb3BzPXRBLm9wc190YWJsZS5kaXIuc3RyZWFtLEMuY29udGVudHM9e30pOlJBLmlzRmlsZShDLm1vZGUpPyhDLm5vZGVfb3BzPXRBLm9wc190YWJsZS5maWxlLm5vZGUsQy5zdHJlYW1fb3BzPXRBLm9wc190YWJsZS5maWxlLnN0cmVhbSxDLnVzZWRCeXRlcz0wLEMuY29udGVudHM9bnVsbCk6UkEuaXNMaW5rKEMubW9kZSk/KEMubm9kZV9vcHM9dEEub3BzX3RhYmxlLmxpbmsubm9kZSxDLnN0cmVhbV9vcHM9dEEub3BzX3RhYmxlLmxpbmsuc3RyZWFtKTpSQS5pc0NocmRldihDLm1vZGUpJiYoQy5ub2RlX29wcz10QS5vcHNfdGFibGUuY2hyZGV2Lm5vZGUsQy5zdHJlYW1fb3BzPXRBLm9wc190YWJsZS5jaHJkZXYuc3RyZWFtKSxDLnRpbWVzdGFtcD1EYXRlLm5vdygpLEEmJihBLmNvbnRlbnRzW0ldPUMsQS50aW1lc3RhbXA9Qy50aW1lc3RhbXApLEN9LGdldEZpbGVEYXRhQXNUeXBlZEFycmF5OmZ1bmN0aW9uKEEpe3JldHVybiBBLmNvbnRlbnRzP0EuY29udGVudHMuc3ViYXJyYXk/QS5jb250ZW50cy5zdWJhcnJheSgwLEEudXNlZEJ5dGVzKTpuZXcgVWludDhBcnJheShBLmNvbnRlbnRzKTpuZXcgVWludDhBcnJheSgwKX0sZXhwYW5kRmlsZVN0b3JhZ2U6ZnVuY3Rpb24oQSxJKXt2YXIgZz1BLmNvbnRlbnRzP0EuY29udGVudHMubGVuZ3RoOjA7aWYoIShnPj1JKSl7ST1NYXRoLm1heChJLGcqKGc8MTA0ODU3Nj8yOjEuMTI1KT4+PjApLDAhPWcmJihJPU1hdGgubWF4KEksMjU2KSk7dmFyIEI9QS5jb250ZW50cztBLmNvbnRlbnRzPW5ldyBVaW50OEFycmF5KEkpLEEudXNlZEJ5dGVzPjAmJkEuY29udGVudHMuc2V0KEIuc3ViYXJyYXkoMCxBLnVzZWRCeXRlcyksMCl9fSxyZXNpemVGaWxlU3RvcmFnZTpmdW5jdGlvbihBLEkpe2lmKEEudXNlZEJ5dGVzIT1JKWlmKDA9PUkpQS5jb250ZW50cz1udWxsLEEudXNlZEJ5dGVzPTA7ZWxzZXt2YXIgZz1BLmNvbnRlbnRzO0EuY29udGVudHM9bmV3IFVpbnQ4QXJyYXkoSSksZyYmQS5jb250ZW50cy5zZXQoZy5zdWJhcnJheSgwLE1hdGgubWluKEksQS51c2VkQnl0ZXMpKSksQS51c2VkQnl0ZXM9SX19LG5vZGVfb3BzOntnZXRhdHRyOmZ1bmN0aW9uKEEpe3ZhciBJPXt9O3JldHVybiBJLmRldj1SQS5pc0NocmRldihBLm1vZGUpP0EuaWQ6MSxJLmlubz1BLmlkLEkubW9kZT1BLm1vZGUsSS5ubGluaz0xLEkudWlkPTAsSS5naWQ9MCxJLnJkZXY9QS5yZGV2LFJBLmlzRGlyKEEubW9kZSk/SS5zaXplPTQwOTY6UkEuaXNGaWxlKEEubW9kZSk/SS5zaXplPUEudXNlZEJ5dGVzOlJBLmlzTGluayhBLm1vZGUpP0kuc2l6ZT1BLmxpbmsubGVuZ3RoOkkuc2l6ZT0wLEkuYXRpbWU9bmV3IERhdGUoQS50aW1lc3RhbXApLEkubXRpbWU9bmV3IERhdGUoQS50aW1lc3RhbXApLEkuY3RpbWU9bmV3IERhdGUoQS50aW1lc3RhbXApLEkuYmxrc2l6ZT00MDk2LEkuYmxvY2tzPU1hdGguY2VpbChJLnNpemUvSS5ibGtzaXplKSxJfSxzZXRhdHRyOmZ1bmN0aW9uKEEsSSl7dm9pZCAwIT09SS5tb2RlJiYoQS5tb2RlPUkubW9kZSksdm9pZCAwIT09SS50aW1lc3RhbXAmJihBLnRpbWVzdGFtcD1JLnRpbWVzdGFtcCksdm9pZCAwIT09SS5zaXplJiZ0QS5yZXNpemVGaWxlU3RvcmFnZShBLEkuc2l6ZSl9LGxvb2t1cDpmdW5jdGlvbihBLEkpe3Rocm93IFJBLmdlbmVyaWNFcnJvcnNbNDRdfSxta25vZDpmdW5jdGlvbihBLEksZyxCKXtyZXR1cm4gdEEuY3JlYXRlTm9kZShBLEksZyxCKX0scmVuYW1lOmZ1bmN0aW9uKEEsSSxnKXtpZihSQS5pc0RpcihBLm1vZGUpKXt2YXIgQjt0cnl7Qj1SQS5sb29rdXBOb2RlKEksZyl9Y2F0Y2goQSl7fWlmKEIpZm9yKHZhciBDIGluIEIuY29udGVudHMpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNTUpfWRlbGV0ZSBBLnBhcmVudC5jb250ZW50c1tBLm5hbWVdLEEucGFyZW50LnRpbWVzdGFtcD1EYXRlLm5vdygpLEEubmFtZT1nLEkuY29udGVudHNbZ109QSxJLnRpbWVzdGFtcD1BLnBhcmVudC50aW1lc3RhbXAsQS5wYXJlbnQ9SX0sdW5saW5rOmZ1bmN0aW9uKEEsSSl7ZGVsZXRlIEEuY29udGVudHNbSV0sQS50aW1lc3RhbXA9RGF0ZS5ub3coKX0scm1kaXI6ZnVuY3Rpb24oQSxJKXt2YXIgZz1SQS5sb29rdXBOb2RlKEEsSSk7Zm9yKHZhciBCIGluIGcuY29udGVudHMpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNTUpO2RlbGV0ZSBBLmNvbnRlbnRzW0ldLEEudGltZXN0YW1wPURhdGUubm93KCl9LHJlYWRkaXI6ZnVuY3Rpb24oQSl7dmFyIEk9W1xcXCIuXFxcIixcXFwiLi5cXFwiXTtmb3IodmFyIGcgaW4gQS5jb250ZW50cylBLmNvbnRlbnRzLmhhc093blByb3BlcnR5KGcpJiZJLnB1c2goZyk7cmV0dXJuIEl9LHN5bWxpbms6ZnVuY3Rpb24oQSxJLGcpe3ZhciBCPXRBLmNyZWF0ZU5vZGUoQSxJLDQxNDcxLDApO3JldHVybiBCLmxpbms9ZyxCfSxyZWFkbGluazpmdW5jdGlvbihBKXtpZighUkEuaXNMaW5rKEEubW9kZSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMjgpO3JldHVybiBBLmxpbmt9fSxzdHJlYW1fb3BzOntyZWFkOmZ1bmN0aW9uKEEsSSxnLEIsQyl7dmFyIFE9QS5ub2RlLmNvbnRlbnRzO2lmKEM+PUEubm9kZS51c2VkQnl0ZXMpcmV0dXJuIDA7dmFyIEU9TWF0aC5taW4oQS5ub2RlLnVzZWRCeXRlcy1DLEIpO2lmKEU+OCYmUS5zdWJhcnJheSlJLnNldChRLnN1YmFycmF5KEMsQytFKSxnKTtlbHNlIGZvcih2YXIgaT0wO2k8RTtpKyspSVtnK2ldPVFbQytpXTtyZXR1cm4gRX0sd3JpdGU6ZnVuY3Rpb24oQSxJLGcsQixDLFEpe2lmKEkuYnVmZmVyPT09VS5idWZmZXImJihRPSExKSwhQilyZXR1cm4gMDt2YXIgRT1BLm5vZGU7aWYoRS50aW1lc3RhbXA9RGF0ZS5ub3coKSxJLnN1YmFycmF5JiYoIUUuY29udGVudHN8fEUuY29udGVudHMuc3ViYXJyYXkpKXtpZihRKXJldHVybiBFLmNvbnRlbnRzPUkuc3ViYXJyYXkoZyxnK0IpLEUudXNlZEJ5dGVzPUIsQjtpZigwPT09RS51c2VkQnl0ZXMmJjA9PT1DKXJldHVybiBFLmNvbnRlbnRzPUkuc2xpY2UoZyxnK0IpLEUudXNlZEJ5dGVzPUIsQjtpZihDK0I8PUUudXNlZEJ5dGVzKXJldHVybiBFLmNvbnRlbnRzLnNldChJLnN1YmFycmF5KGcsZytCKSxDKSxCfWlmKHRBLmV4cGFuZEZpbGVTdG9yYWdlKEUsQytCKSxFLmNvbnRlbnRzLnN1YmFycmF5JiZJLnN1YmFycmF5KUUuY29udGVudHMuc2V0KEkuc3ViYXJyYXkoZyxnK0IpLEMpO2Vsc2UgZm9yKHZhciBpPTA7aTxCO2krKylFLmNvbnRlbnRzW0MraV09SVtnK2ldO3JldHVybiBFLnVzZWRCeXRlcz1NYXRoLm1heChFLnVzZWRCeXRlcyxDK0IpLEJ9LGxsc2VlazpmdW5jdGlvbihBLEksZyl7dmFyIEI9STtpZigxPT09Zz9CKz1BLnBvc2l0aW9uOjI9PT1nJiZSQS5pc0ZpbGUoQS5ub2RlLm1vZGUpJiYoQis9QS5ub2RlLnVzZWRCeXRlcyksQjwwKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDI4KTtyZXR1cm4gQn0sYWxsb2NhdGU6ZnVuY3Rpb24oQSxJLGcpe3RBLmV4cGFuZEZpbGVTdG9yYWdlKEEubm9kZSxJK2cpLEEubm9kZS51c2VkQnl0ZXM9TWF0aC5tYXgoQS5ub2RlLnVzZWRCeXRlcyxJK2cpfSxtbWFwOmZ1bmN0aW9uKEEsSSxnLEIsQyl7aWYoIVJBLmlzRmlsZShBLm5vZGUubW9kZSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNDMpO3ZhciBRLEUsaT1BLm5vZGUuY29udGVudHM7aWYoMiZDfHxpLmJ1ZmZlciE9PWspe2lmKChnPjB8fGcrSTxpLmxlbmd0aCkmJihpPWkuc3ViYXJyYXk/aS5zdWJhcnJheShnLGcrSSk6QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoaSxnLGcrSSkpLEU9ITAsIShRPWhBKCkpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ4KTtVLnNldChpLFEpfWVsc2UgRT0hMSxRPWkuYnl0ZU9mZnNldDtyZXR1cm57cHRyOlEsYWxsb2NhdGVkOkV9fSxtc3luYzpmdW5jdGlvbihBLEksZyxCLEMpe2lmKCFSQS5pc0ZpbGUoQS5ub2RlLm1vZGUpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQzKTtyZXR1cm4gMiZDfHx0QS5zdHJlYW1fb3BzLndyaXRlKEEsSSwwLEIsZywhMSksMH19fSxSQT17cm9vdDpudWxsLG1vdW50czpbXSxkZXZpY2VzOnt9LHN0cmVhbXM6W10sbmV4dElub2RlOjEsbmFtZVRhYmxlOm51bGwsY3VycmVudFBhdGg6XFxcIi9cXFwiLGluaXRpYWxpemVkOiExLGlnbm9yZVBlcm1pc3Npb25zOiEwLEVycm5vRXJyb3I6bnVsbCxnZW5lcmljRXJyb3JzOnt9LGZpbGVzeXN0ZW1zOm51bGwsc3luY0ZTUmVxdWVzdHM6MCxsb29rdXBQYXRoOihBLEk9e30pPT57aWYoIShBPXdBLnJlc29sdmUoUkEuY3dkKCksQSkpKXJldHVybntwYXRoOlxcXCJcXFwiLG5vZGU6bnVsbH07aWYoKEk9T2JqZWN0LmFzc2lnbih7Zm9sbG93X21vdW50OiEwLHJlY3Vyc2VfY291bnQ6MH0sSSkpLnJlY3Vyc2VfY291bnQ+OCl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigzMik7Zm9yKHZhciBnPWFBLm5vcm1hbGl6ZUFycmF5KEEuc3BsaXQoXFxcIi9cXFwiKS5maWx0ZXIoKEE9PiEhQSkpLCExKSxCPVJBLnJvb3QsQz1cXFwiL1xcXCIsUT0wO1E8Zy5sZW5ndGg7USsrKXt2YXIgRT1RPT09Zy5sZW5ndGgtMTtpZihFJiZJLnBhcmVudClicmVhaztpZihCPVJBLmxvb2t1cE5vZGUoQixnW1FdKSxDPWFBLmpvaW4yKEMsZ1tRXSksUkEuaXNNb3VudHBvaW50KEIpJiYoIUV8fEUmJkkuZm9sbG93X21vdW50KSYmKEI9Qi5tb3VudGVkLnJvb3QpLCFFfHxJLmZvbGxvdylmb3IodmFyIGk9MDtSQS5pc0xpbmsoQi5tb2RlKTspe3ZhciBvPVJBLnJlYWRsaW5rKEMpO2lmKEM9d0EucmVzb2x2ZShhQS5kaXJuYW1lKEMpLG8pLEI9UkEubG9va3VwUGF0aChDLHtyZWN1cnNlX2NvdW50OkkucmVjdXJzZV9jb3VudCsxfSkubm9kZSxpKys+NDApdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMzIpfX1yZXR1cm57cGF0aDpDLG5vZGU6Qn19LGdldFBhdGg6QT0+e2Zvcih2YXIgSTs7KXtpZihSQS5pc1Jvb3QoQSkpe3ZhciBnPUEubW91bnQubW91bnRwb2ludDtyZXR1cm4gST9cXFwiL1xcXCIhPT1nW2cubGVuZ3RoLTFdP2crXFxcIi9cXFwiK0k6ZytJOmd9ST1JP0EubmFtZStcXFwiL1xcXCIrSTpBLm5hbWUsQT1BLnBhcmVudH19LGhhc2hOYW1lOihBLEkpPT57Zm9yKHZhciBnPTAsQj0wO0I8SS5sZW5ndGg7QisrKWc9KGc8PDUpLWcrSS5jaGFyQ29kZUF0KEIpfDA7cmV0dXJuKEErZz4+PjApJVJBLm5hbWVUYWJsZS5sZW5ndGh9LGhhc2hBZGROb2RlOkE9Pnt2YXIgST1SQS5oYXNoTmFtZShBLnBhcmVudC5pZCxBLm5hbWUpO0EubmFtZV9uZXh0PVJBLm5hbWVUYWJsZVtJXSxSQS5uYW1lVGFibGVbSV09QX0saGFzaFJlbW92ZU5vZGU6QT0+e3ZhciBJPVJBLmhhc2hOYW1lKEEucGFyZW50LmlkLEEubmFtZSk7aWYoUkEubmFtZVRhYmxlW0ldPT09QSlSQS5uYW1lVGFibGVbSV09QS5uYW1lX25leHQ7ZWxzZSBmb3IodmFyIGc9UkEubmFtZVRhYmxlW0ldO2c7KXtpZihnLm5hbWVfbmV4dD09PUEpe2cubmFtZV9uZXh0PUEubmFtZV9uZXh0O2JyZWFrfWc9Zy5uYW1lX25leHR9fSxsb29rdXBOb2RlOihBLEkpPT57dmFyIGc9UkEubWF5TG9va3VwKEEpO2lmKGcpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoZyxBKTtmb3IodmFyIEI9UkEuaGFzaE5hbWUoQS5pZCxJKSxDPVJBLm5hbWVUYWJsZVtCXTtDO0M9Qy5uYW1lX25leHQpe3ZhciBRPUMubmFtZTtpZihDLnBhcmVudC5pZD09PUEuaWQmJlE9PT1JKXJldHVybiBDfXJldHVybiBSQS5sb29rdXAoQSxJKX0sY3JlYXRlTm9kZTooQSxJLGcsQik9Pnt2YXIgQz1uZXcgUkEuRlNOb2RlKEEsSSxnLEIpO3JldHVybiBSQS5oYXNoQWRkTm9kZShDKSxDfSxkZXN0cm95Tm9kZTpBPT57UkEuaGFzaFJlbW92ZU5vZGUoQSl9LGlzUm9vdDpBPT5BPT09QS5wYXJlbnQsaXNNb3VudHBvaW50OkE9PiEhQS5tb3VudGVkLGlzRmlsZTpBPT4zMjc2OD09KDYxNDQwJkEpLGlzRGlyOkE9PjE2Mzg0PT0oNjE0NDAmQSksaXNMaW5rOkE9PjQwOTYwPT0oNjE0NDAmQSksaXNDaHJkZXY6QT0+ODE5Mj09KDYxNDQwJkEpLGlzQmxrZGV2OkE9PjI0NTc2PT0oNjE0NDAmQSksaXNGSUZPOkE9PjQwOTY9PSg2MTQ0MCZBKSxpc1NvY2tldDpBPT40OTE1Mj09KDQ5MTUyJkEpLGZsYWdNb2Rlczp7cjowLFxcXCJyK1xcXCI6Mix3OjU3NyxcXFwidytcXFwiOjU3OCxhOjEwODksXFxcImErXFxcIjoxMDkwfSxtb2RlU3RyaW5nVG9GbGFnczpBPT57dmFyIEk9UkEuZmxhZ01vZGVzW0FdO2lmKHZvaWQgMD09PUkpdGhyb3cgbmV3IEVycm9yKFxcXCJVbmtub3duIGZpbGUgb3BlbiBtb2RlOiBcXFwiK0EpO3JldHVybiBJfSxmbGFnc1RvUGVybWlzc2lvblN0cmluZzpBPT57dmFyIEk9W1xcXCJyXFxcIixcXFwid1xcXCIsXFxcInJ3XFxcIl1bMyZBXTtyZXR1cm4gNTEyJkEmJihJKz1cXFwid1xcXCIpLEl9LG5vZGVQZXJtaXNzaW9uczooQSxJKT0+UkEuaWdub3JlUGVybWlzc2lvbnN8fCghSS5pbmNsdWRlcyhcXFwiclxcXCIpfHwyOTImQS5tb2RlKSYmKCFJLmluY2x1ZGVzKFxcXCJ3XFxcIil8fDE0NiZBLm1vZGUpJiYoIUkuaW5jbHVkZXMoXFxcInhcXFwiKXx8NzMmQS5tb2RlKT8wOjIsbWF5TG9va3VwOkE9PlJBLm5vZGVQZXJtaXNzaW9ucyhBLFxcXCJ4XFxcIil8fChBLm5vZGVfb3BzLmxvb2t1cD8wOjIpLG1heUNyZWF0ZTooQSxJKT0+e3RyeXtyZXR1cm4gUkEubG9va3VwTm9kZShBLEkpLDIwfWNhdGNoKEEpe31yZXR1cm4gUkEubm9kZVBlcm1pc3Npb25zKEEsXFxcInd4XFxcIil9LG1heURlbGV0ZTooQSxJLGcpPT57dmFyIEI7dHJ5e0I9UkEubG9va3VwTm9kZShBLEkpfWNhdGNoKEEpe3JldHVybiBBLmVycm5vfXZhciBDPVJBLm5vZGVQZXJtaXNzaW9ucyhBLFxcXCJ3eFxcXCIpO2lmKEMpcmV0dXJuIEM7aWYoZyl7aWYoIVJBLmlzRGlyKEIubW9kZSkpcmV0dXJuIDU0O2lmKFJBLmlzUm9vdChCKXx8UkEuZ2V0UGF0aChCKT09PVJBLmN3ZCgpKXJldHVybiAxMH1lbHNlIGlmKFJBLmlzRGlyKEIubW9kZSkpcmV0dXJuIDMxO3JldHVybiAwfSxtYXlPcGVuOihBLEkpPT5BP1JBLmlzTGluayhBLm1vZGUpPzMyOlJBLmlzRGlyKEEubW9kZSkmJihcXFwiclxcXCIhPT1SQS5mbGFnc1RvUGVybWlzc2lvblN0cmluZyhJKXx8NTEyJkkpPzMxOlJBLm5vZGVQZXJtaXNzaW9ucyhBLFJBLmZsYWdzVG9QZXJtaXNzaW9uU3RyaW5nKEkpKTo0NCxNQVhfT1BFTl9GRFM6NDA5NixuZXh0ZmQ6KEE9MCxJPVJBLk1BWF9PUEVOX0ZEUyk9Pntmb3IodmFyIGc9QTtnPD1JO2crKylpZighUkEuc3RyZWFtc1tnXSlyZXR1cm4gZzt0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigzMyl9LGdldFN0cmVhbTpBPT5SQS5zdHJlYW1zW0FdLGNyZWF0ZVN0cmVhbTooQSxJLGcpPT57UkEuRlNTdHJlYW18fChSQS5GU1N0cmVhbT1mdW5jdGlvbigpe3RoaXMuc2hhcmVkPXt9fSxSQS5GU1N0cmVhbS5wcm90b3R5cGU9e30sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoUkEuRlNTdHJlYW0ucHJvdG90eXBlLHtvYmplY3Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5vZGV9LHNldDpmdW5jdGlvbihBKXt0aGlzLm5vZGU9QX19LGlzUmVhZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDEhPSgyMDk3MTU1JnRoaXMuZmxhZ3MpfX0saXNXcml0ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDAhPSgyMDk3MTU1JnRoaXMuZmxhZ3MpfX0saXNBcHBlbmQ6e2dldDpmdW5jdGlvbigpe3JldHVybiAxMDI0JnRoaXMuZmxhZ3N9fSxmbGFnczp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2hhcmVkLmZsYWdzfSxzZXQ6ZnVuY3Rpb24oQSl7dGhpcy5zaGFyZWQuZmxhZ3M9QX19LHBvc2l0aW9uOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zaGFyZWQucG9zaXRpb259LHNldDpmdW5jdGlvbihBKXt0aGlzLnNoYXJlZC5wb3NpdGlvbj1BfX19KSksQT1PYmplY3QuYXNzaWduKG5ldyBSQS5GU1N0cmVhbSxBKTt2YXIgQj1SQS5uZXh0ZmQoSSxnKTtyZXR1cm4gQS5mZD1CLFJBLnN0cmVhbXNbQl09QSxBfSxjbG9zZVN0cmVhbTpBPT57UkEuc3RyZWFtc1tBXT1udWxsfSxjaHJkZXZfc3RyZWFtX29wczp7b3BlbjpBPT57dmFyIEk9UkEuZ2V0RGV2aWNlKEEubm9kZS5yZGV2KTtBLnN0cmVhbV9vcHM9SS5zdHJlYW1fb3BzLEEuc3RyZWFtX29wcy5vcGVuJiZBLnN0cmVhbV9vcHMub3BlbihBKX0sbGxzZWVrOigpPT57dGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNzApfX0sbWFqb3I6QT0+QT4+OCxtaW5vcjpBPT4yNTUmQSxtYWtlZGV2OihBLEkpPT5BPDw4fEkscmVnaXN0ZXJEZXZpY2U6KEEsSSk9PntSQS5kZXZpY2VzW0FdPXtzdHJlYW1fb3BzOkl9fSxnZXREZXZpY2U6QT0+UkEuZGV2aWNlc1tBXSxnZXRNb3VudHM6QT0+e2Zvcih2YXIgST1bXSxnPVtBXTtnLmxlbmd0aDspe3ZhciBCPWcucG9wKCk7SS5wdXNoKEIpLGcucHVzaC5hcHBseShnLEIubW91bnRzKX1yZXR1cm4gSX0sc3luY2ZzOihBLEkpPT57XFxcImZ1bmN0aW9uXFxcIj09dHlwZW9mIEEmJihJPUEsQT0hMSksUkEuc3luY0ZTUmVxdWVzdHMrKyxSQS5zeW5jRlNSZXF1ZXN0cz4xJiZlKFxcXCJ3YXJuaW5nOiBcXFwiK1JBLnN5bmNGU1JlcXVlc3RzK1xcXCIgRlMuc3luY2ZzIG9wZXJhdGlvbnMgaW4gZmxpZ2h0IGF0IG9uY2UsIHByb2JhYmx5IGp1c3QgZG9pbmcgZXh0cmEgd29ya1xcXCIpO3ZhciBnPVJBLmdldE1vdW50cyhSQS5yb290Lm1vdW50KSxCPTA7ZnVuY3Rpb24gQyhBKXtyZXR1cm4gUkEuc3luY0ZTUmVxdWVzdHMtLSxJKEEpfWZ1bmN0aW9uIFEoQSl7aWYoQSlyZXR1cm4gUS5lcnJvcmVkP3ZvaWQgMDooUS5lcnJvcmVkPSEwLEMoQSkpOysrQj49Zy5sZW5ndGgmJkMobnVsbCl9Zy5mb3JFYWNoKChJPT57aWYoIUkudHlwZS5zeW5jZnMpcmV0dXJuIFEobnVsbCk7SS50eXBlLnN5bmNmcyhJLEEsUSl9KSl9LG1vdW50OihBLEksZyk9Pnt2YXIgQixDPVxcXCIvXFxcIj09PWcsUT0hZztpZihDJiZSQS5yb290KXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDEwKTtpZighQyYmIVEpe3ZhciBFPVJBLmxvb2t1cFBhdGgoZyx7Zm9sbG93X21vdW50OiExfSk7aWYoZz1FLnBhdGgsQj1FLm5vZGUsUkEuaXNNb3VudHBvaW50KEIpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDEwKTtpZighUkEuaXNEaXIoQi5tb2RlKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig1NCl9dmFyIGk9e3R5cGU6QSxvcHRzOkksbW91bnRwb2ludDpnLG1vdW50czpbXX0sbz1BLm1vdW50KGkpO3JldHVybiBvLm1vdW50PWksaS5yb290PW8sQz9SQS5yb290PW86QiYmKEIubW91bnRlZD1pLEIubW91bnQmJkIubW91bnQubW91bnRzLnB1c2goaSkpLG99LHVubW91bnQ6QT0+e3ZhciBJPVJBLmxvb2t1cFBhdGgoQSx7Zm9sbG93X21vdW50OiExfSk7aWYoIVJBLmlzTW91bnRwb2ludChJLm5vZGUpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDI4KTt2YXIgZz1JLm5vZGUsQj1nLm1vdW50ZWQsQz1SQS5nZXRNb3VudHMoQik7T2JqZWN0LmtleXMoUkEubmFtZVRhYmxlKS5mb3JFYWNoKChBPT57Zm9yKHZhciBJPVJBLm5hbWVUYWJsZVtBXTtJOyl7dmFyIGc9SS5uYW1lX25leHQ7Qy5pbmNsdWRlcyhJLm1vdW50KSYmUkEuZGVzdHJveU5vZGUoSSksST1nfX0pKSxnLm1vdW50ZWQ9bnVsbDt2YXIgUT1nLm1vdW50Lm1vdW50cy5pbmRleE9mKEIpO2cubW91bnQubW91bnRzLnNwbGljZShRLDEpfSxsb29rdXA6KEEsSSk9PkEubm9kZV9vcHMubG9va3VwKEEsSSksbWtub2Q6KEEsSSxnKT0+e3ZhciBCPVJBLmxvb2t1cFBhdGgoQSx7cGFyZW50OiEwfSkubm9kZSxDPWFBLmJhc2VuYW1lKEEpO2lmKCFDfHxcXFwiLlxcXCI9PT1DfHxcXFwiLi5cXFwiPT09Qyl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOCk7dmFyIFE9UkEubWF5Q3JlYXRlKEIsQyk7aWYoUSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcihRKTtpZighQi5ub2RlX29wcy5ta25vZCl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig2Myk7cmV0dXJuIEIubm9kZV9vcHMubWtub2QoQixDLEksZyl9LGNyZWF0ZTooQSxJKT0+KEk9dm9pZCAwIT09ST9JOjQzOCxJJj00MDk1LEl8PTMyNzY4LFJBLm1rbm9kKEEsSSwwKSksbWtkaXI6KEEsSSk9PihJPXZvaWQgMCE9PUk/STo1MTEsSSY9MTAyMyxJfD0xNjM4NCxSQS5ta25vZChBLEksMCkpLG1rZGlyVHJlZTooQSxJKT0+e2Zvcih2YXIgZz1BLnNwbGl0KFxcXCIvXFxcIiksQj1cXFwiXFxcIixDPTA7QzxnLmxlbmd0aDsrK0MpaWYoZ1tDXSl7Qis9XFxcIi9cXFwiK2dbQ107dHJ5e1JBLm1rZGlyKEIsSSl9Y2F0Y2goQSl7aWYoMjAhPUEuZXJybm8pdGhyb3cgQX19fSxta2RldjooQSxJLGcpPT4odm9pZCAwPT09ZyYmKGc9SSxJPTQzOCksSXw9ODE5MixSQS5ta25vZChBLEksZykpLHN5bWxpbms6KEEsSSk9PntpZighd0EucmVzb2x2ZShBKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig0NCk7dmFyIGc9UkEubG9va3VwUGF0aChJLHtwYXJlbnQ6ITB9KS5ub2RlO2lmKCFnKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ0KTt2YXIgQj1hQS5iYXNlbmFtZShJKSxDPVJBLm1heUNyZWF0ZShnLEIpO2lmKEMpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoQyk7aWYoIWcubm9kZV9vcHMuc3ltbGluayl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig2Myk7cmV0dXJuIGcubm9kZV9vcHMuc3ltbGluayhnLEIsQSl9LHJlbmFtZTooQSxJKT0+e3ZhciBnLEIsQz1hQS5kaXJuYW1lKEEpLFE9YUEuZGlybmFtZShJKSxFPWFBLmJhc2VuYW1lKEEpLGk9YUEuYmFzZW5hbWUoSSk7aWYoZz1SQS5sb29rdXBQYXRoKEEse3BhcmVudDohMH0pLm5vZGUsQj1SQS5sb29rdXBQYXRoKEkse3BhcmVudDohMH0pLm5vZGUsIWd8fCFCKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ0KTtpZihnLm1vdW50IT09Qi5tb3VudCl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig3NSk7dmFyIG8sRD1SQS5sb29rdXBOb2RlKGcsRSksYT13QS5yZWxhdGl2ZShBLFEpO2lmKFxcXCIuXFxcIiE9PWEuY2hhckF0KDApKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDI4KTtpZihcXFwiLlxcXCIhPT0oYT13QS5yZWxhdGl2ZShJLEMpKS5jaGFyQXQoMCkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNTUpO3RyeXtvPVJBLmxvb2t1cE5vZGUoQixpKX1jYXRjaChBKXt9aWYoRCE9PW8pe3ZhciB3PVJBLmlzRGlyKEQubW9kZSkscz1SQS5tYXlEZWxldGUoZyxFLHcpO2lmKHMpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3Iocyk7aWYocz1vP1JBLm1heURlbGV0ZShCLGksdyk6UkEubWF5Q3JlYXRlKEIsaSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3Iocyk7aWYoIWcubm9kZV9vcHMucmVuYW1lKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDYzKTtpZihSQS5pc01vdW50cG9pbnQoRCl8fG8mJlJBLmlzTW91bnRwb2ludChvKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigxMCk7aWYoQiE9PWcmJihzPVJBLm5vZGVQZXJtaXNzaW9ucyhnLFxcXCJ3XFxcIikpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKHMpO1JBLmhhc2hSZW1vdmVOb2RlKEQpO3RyeXtnLm5vZGVfb3BzLnJlbmFtZShELEIsaSl9Y2F0Y2goQSl7dGhyb3cgQX1maW5hbGx5e1JBLmhhc2hBZGROb2RlKEQpfX19LHJtZGlyOkE9Pnt2YXIgST1SQS5sb29rdXBQYXRoKEEse3BhcmVudDohMH0pLm5vZGUsZz1hQS5iYXNlbmFtZShBKSxCPVJBLmxvb2t1cE5vZGUoSSxnKSxDPVJBLm1heURlbGV0ZShJLGcsITApO2lmKEMpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoQyk7aWYoIUkubm9kZV9vcHMucm1kaXIpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNjMpO2lmKFJBLmlzTW91bnRwb2ludChCKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigxMCk7SS5ub2RlX29wcy5ybWRpcihJLGcpLFJBLmRlc3Ryb3lOb2RlKEIpfSxyZWFkZGlyOkE9Pnt2YXIgST1SQS5sb29rdXBQYXRoKEEse2ZvbGxvdzohMH0pLm5vZGU7aWYoIUkubm9kZV9vcHMucmVhZGRpcil0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig1NCk7cmV0dXJuIEkubm9kZV9vcHMucmVhZGRpcihJKX0sdW5saW5rOkE9Pnt2YXIgST1SQS5sb29rdXBQYXRoKEEse3BhcmVudDohMH0pLm5vZGU7aWYoIUkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNDQpO3ZhciBnPWFBLmJhc2VuYW1lKEEpLEI9UkEubG9va3VwTm9kZShJLGcpLEM9UkEubWF5RGVsZXRlKEksZywhMSk7aWYoQyl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcihDKTtpZighSS5ub2RlX29wcy51bmxpbmspdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNjMpO2lmKFJBLmlzTW91bnRwb2ludChCKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigxMCk7SS5ub2RlX29wcy51bmxpbmsoSSxnKSxSQS5kZXN0cm95Tm9kZShCKX0scmVhZGxpbms6QT0+e3ZhciBJPVJBLmxvb2t1cFBhdGgoQSkubm9kZTtpZighSSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig0NCk7aWYoIUkubm9kZV9vcHMucmVhZGxpbmspdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMjgpO3JldHVybiB3QS5yZXNvbHZlKFJBLmdldFBhdGgoSS5wYXJlbnQpLEkubm9kZV9vcHMucmVhZGxpbmsoSSkpfSxzdGF0OihBLEkpPT57dmFyIGc9UkEubG9va3VwUGF0aChBLHtmb2xsb3c6IUl9KS5ub2RlO2lmKCFnKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ0KTtpZighZy5ub2RlX29wcy5nZXRhdHRyKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDYzKTtyZXR1cm4gZy5ub2RlX29wcy5nZXRhdHRyKGcpfSxsc3RhdDpBPT5SQS5zdGF0KEEsITApLGNobW9kOihBLEksZyk9Pnt2YXIgQjtpZighKEI9XFxcInN0cmluZ1xcXCI9PXR5cGVvZiBBP1JBLmxvb2t1cFBhdGgoQSx7Zm9sbG93OiFnfSkubm9kZTpBKS5ub2RlX29wcy5zZXRhdHRyKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDYzKTtCLm5vZGVfb3BzLnNldGF0dHIoQix7bW9kZTo0MDk1Jkl8LTQwOTYmQi5tb2RlLHRpbWVzdGFtcDpEYXRlLm5vdygpfSl9LGxjaG1vZDooQSxJKT0+e1JBLmNobW9kKEEsSSwhMCl9LGZjaG1vZDooQSxJKT0+e3ZhciBnPVJBLmdldFN0cmVhbShBKTtpZighZyl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtSQS5jaG1vZChnLm5vZGUsSSl9LGNob3duOihBLEksZyxCKT0+e3ZhciBDO2lmKCEoQz1cXFwic3RyaW5nXFxcIj09dHlwZW9mIEE/UkEubG9va3VwUGF0aChBLHtmb2xsb3c6IUJ9KS5ub2RlOkEpLm5vZGVfb3BzLnNldGF0dHIpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNjMpO0Mubm9kZV9vcHMuc2V0YXR0cihDLHt0aW1lc3RhbXA6RGF0ZS5ub3coKX0pfSxsY2hvd246KEEsSSxnKT0+e1JBLmNob3duKEEsSSxnLCEwKX0sZmNob3duOihBLEksZyk9Pnt2YXIgQj1SQS5nZXRTdHJlYW0oQSk7aWYoIUIpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoOCk7UkEuY2hvd24oQi5ub2RlLEksZyl9LHRydW5jYXRlOihBLEkpPT57aWYoSTwwKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDI4KTt2YXIgZztpZighKGc9XFxcInN0cmluZ1xcXCI9PXR5cGVvZiBBP1JBLmxvb2t1cFBhdGgoQSx7Zm9sbG93OiEwfSkubm9kZTpBKS5ub2RlX29wcy5zZXRhdHRyKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDYzKTtpZihSQS5pc0RpcihnLm1vZGUpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDMxKTtpZighUkEuaXNGaWxlKGcubW9kZSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMjgpO3ZhciBCPVJBLm5vZGVQZXJtaXNzaW9ucyhnLFxcXCJ3XFxcIik7aWYoQil0aHJvdyBuZXcgUkEuRXJybm9FcnJvcihCKTtnLm5vZGVfb3BzLnNldGF0dHIoZyx7c2l6ZTpJLHRpbWVzdGFtcDpEYXRlLm5vdygpfSl9LGZ0cnVuY2F0ZTooQSxJKT0+e3ZhciBnPVJBLmdldFN0cmVhbShBKTtpZighZyl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtpZigwPT0oMjA5NzE1NSZnLmZsYWdzKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOCk7UkEudHJ1bmNhdGUoZy5ub2RlLEkpfSx1dGltZTooQSxJLGcpPT57dmFyIEI9UkEubG9va3VwUGF0aChBLHtmb2xsb3c6ITB9KS5ub2RlO0Iubm9kZV9vcHMuc2V0YXR0cihCLHt0aW1lc3RhbXA6TWF0aC5tYXgoSSxnKX0pfSxvcGVuOihJLGcsQik9PntpZihcXFwiXFxcIj09PUkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNDQpO3ZhciBDO2lmKEI9dm9pZCAwPT09Qj80Mzg6QixCPTY0JihnPVxcXCJzdHJpbmdcXFwiPT10eXBlb2YgZz9SQS5tb2RlU3RyaW5nVG9GbGFncyhnKTpnKT80MDk1JkJ8MzI3Njg6MCxcXFwib2JqZWN0XFxcIj09dHlwZW9mIEkpQz1JO2Vsc2V7ST1hQS5ub3JtYWxpemUoSSk7dHJ5e0M9UkEubG9va3VwUGF0aChJLHtmb2xsb3c6ISgxMzEwNzImZyl9KS5ub2RlfWNhdGNoKEEpe319dmFyIFE9ITE7aWYoNjQmZylpZihDKXtpZigxMjgmZyl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyMCl9ZWxzZSBDPVJBLm1rbm9kKEksQiwwKSxRPSEwO2lmKCFDKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ0KTtpZihSQS5pc0NocmRldihDLm1vZGUpJiYoZyY9LTUxMyksNjU1MzYmZyYmIVJBLmlzRGlyKEMubW9kZSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNTQpO2lmKCFRKXt2YXIgRT1SQS5tYXlPcGVuKEMsZyk7aWYoRSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcihFKX01MTImZyYmIVEmJlJBLnRydW5jYXRlKEMsMCksZyY9LTEzMTcxMzt2YXIgaT1SQS5jcmVhdGVTdHJlYW0oe25vZGU6QyxwYXRoOlJBLmdldFBhdGgoQyksZmxhZ3M6ZyxzZWVrYWJsZTohMCxwb3NpdGlvbjowLHN0cmVhbV9vcHM6Qy5zdHJlYW1fb3BzLHVuZ290dGVuOltdLGVycm9yOiExfSk7cmV0dXJuIGkuc3RyZWFtX29wcy5vcGVuJiZpLnN0cmVhbV9vcHMub3BlbihpKSwhQS5sb2dSZWFkRmlsZXN8fDEmZ3x8KFJBLnJlYWRGaWxlc3x8KFJBLnJlYWRGaWxlcz17fSksSSBpbiBSQS5yZWFkRmlsZXN8fChSQS5yZWFkRmlsZXNbSV09MSkpLGl9LGNsb3NlOkE9PntpZihSQS5pc0Nsb3NlZChBKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtBLmdldGRlbnRzJiYoQS5nZXRkZW50cz1udWxsKTt0cnl7QS5zdHJlYW1fb3BzLmNsb3NlJiZBLnN0cmVhbV9vcHMuY2xvc2UoQSl9Y2F0Y2goQSl7dGhyb3cgQX1maW5hbGx5e1JBLmNsb3NlU3RyZWFtKEEuZmQpfUEuZmQ9bnVsbH0saXNDbG9zZWQ6QT0+bnVsbD09PUEuZmQsbGxzZWVrOihBLEksZyk9PntpZihSQS5pc0Nsb3NlZChBKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtpZighQS5zZWVrYWJsZXx8IUEuc3RyZWFtX29wcy5sbHNlZWspdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNzApO2lmKDAhPWcmJjEhPWcmJjIhPWcpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMjgpO3JldHVybiBBLnBvc2l0aW9uPUEuc3RyZWFtX29wcy5sbHNlZWsoQSxJLGcpLEEudW5nb3R0ZW49W10sQS5wb3NpdGlvbn0scmVhZDooQSxJLGcsQixDKT0+e2lmKEI8MHx8QzwwKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDI4KTtpZihSQS5pc0Nsb3NlZChBKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtpZigxPT0oMjA5NzE1NSZBLmZsYWdzKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtpZihSQS5pc0RpcihBLm5vZGUubW9kZSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMzEpO2lmKCFBLnN0cmVhbV9vcHMucmVhZCl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOCk7dmFyIFE9dm9pZCAwIT09QztpZihRKXtpZighQS5zZWVrYWJsZSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig3MCl9ZWxzZSBDPUEucG9zaXRpb247dmFyIEU9QS5zdHJlYW1fb3BzLnJlYWQoQSxJLGcsQixDKTtyZXR1cm4gUXx8KEEucG9zaXRpb24rPUUpLEV9LHdyaXRlOihBLEksZyxCLEMsUSk9PntpZihCPDB8fEM8MCl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOCk7aWYoUkEuaXNDbG9zZWQoQSkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoOCk7aWYoMD09KDIwOTcxNTUmQS5mbGFncykpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoOCk7aWYoUkEuaXNEaXIoQS5ub2RlLm1vZGUpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDMxKTtpZighQS5zdHJlYW1fb3BzLndyaXRlKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDI4KTtBLnNlZWthYmxlJiYxMDI0JkEuZmxhZ3MmJlJBLmxsc2VlayhBLDAsMik7dmFyIEU9dm9pZCAwIT09QztpZihFKXtpZighQS5zZWVrYWJsZSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig3MCl9ZWxzZSBDPUEucG9zaXRpb247dmFyIGk9QS5zdHJlYW1fb3BzLndyaXRlKEEsSSxnLEIsQyxRKTtyZXR1cm4gRXx8KEEucG9zaXRpb24rPWkpLGl9LGFsbG9jYXRlOihBLEksZyk9PntpZihSQS5pc0Nsb3NlZChBKSl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTtpZihJPDB8fGc8PTApdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMjgpO2lmKDA9PSgyMDk3MTU1JkEuZmxhZ3MpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDgpO2lmKCFSQS5pc0ZpbGUoQS5ub2RlLm1vZGUpJiYhUkEuaXNEaXIoQS5ub2RlLm1vZGUpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQzKTtpZighQS5zdHJlYW1fb3BzLmFsbG9jYXRlKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDEzOCk7QS5zdHJlYW1fb3BzLmFsbG9jYXRlKEEsSSxnKX0sbW1hcDooQSxJLGcsQixDKT0+e2lmKDAhPSgyJkIpJiYwPT0oMiZDKSYmMiE9KDIwOTcxNTUmQS5mbGFncykpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMik7aWYoMT09KDIwOTcxNTUmQS5mbGFncykpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMik7aWYoIUEuc3RyZWFtX29wcy5tbWFwKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQzKTtyZXR1cm4gQS5zdHJlYW1fb3BzLm1tYXAoQSxJLGcsQixDKX0sbXN5bmM6KEEsSSxnLEIsQyk9PkEmJkEuc3RyZWFtX29wcy5tc3luYz9BLnN0cmVhbV9vcHMubXN5bmMoQSxJLGcsQixDKTowLG11bm1hcDpBPT4wLGlvY3RsOihBLEksZyk9PntpZighQS5zdHJlYW1fb3BzLmlvY3RsKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDU5KTtyZXR1cm4gQS5zdHJlYW1fb3BzLmlvY3RsKEEsSSxnKX0scmVhZEZpbGU6KEEsST17fSk9PntpZihJLmZsYWdzPUkuZmxhZ3N8fDAsSS5lbmNvZGluZz1JLmVuY29kaW5nfHxcXFwiYmluYXJ5XFxcIixcXFwidXRmOFxcXCIhPT1JLmVuY29kaW5nJiZcXFwiYmluYXJ5XFxcIiE9PUkuZW5jb2RpbmcpdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVuY29kaW5nIHR5cGUgXFxcIicrSS5lbmNvZGluZysnXFxcIicpO3ZhciBnLEI9UkEub3BlbihBLEkuZmxhZ3MpLEM9UkEuc3RhdChBKS5zaXplLFE9bmV3IFVpbnQ4QXJyYXkoQyk7cmV0dXJuIFJBLnJlYWQoQixRLDAsQywwKSxcXFwidXRmOFxcXCI9PT1JLmVuY29kaW5nP2c9ZihRLDApOlxcXCJiaW5hcnlcXFwiPT09SS5lbmNvZGluZyYmKGc9USksUkEuY2xvc2UoQiksZ30sd3JpdGVGaWxlOihBLEksZz17fSk9PntnLmZsYWdzPWcuZmxhZ3N8fDU3Nzt2YXIgQj1SQS5vcGVuKEEsZy5mbGFncyxnLm1vZGUpO2lmKFxcXCJzdHJpbmdcXFwiPT10eXBlb2YgSSl7dmFyIEM9bmV3IFVpbnQ4QXJyYXkoVyhJKSsxKSxRPXAoSSxDLDAsQy5sZW5ndGgpO1JBLndyaXRlKEIsQywwLFEsdm9pZCAwLGcuY2FuT3duKX1lbHNle2lmKCFBcnJheUJ1ZmZlci5pc1ZpZXcoSSkpdGhyb3cgbmV3IEVycm9yKFxcXCJVbnN1cHBvcnRlZCBkYXRhIHR5cGVcXFwiKTtSQS53cml0ZShCLEksMCxJLmJ5dGVMZW5ndGgsdm9pZCAwLGcuY2FuT3duKX1SQS5jbG9zZShCKX0sY3dkOigpPT5SQS5jdXJyZW50UGF0aCxjaGRpcjpBPT57dmFyIEk9UkEubG9va3VwUGF0aChBLHtmb2xsb3c6ITB9KTtpZihudWxsPT09SS5ub2RlKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ0KTtpZighUkEuaXNEaXIoSS5ub2RlLm1vZGUpKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDU0KTt2YXIgZz1SQS5ub2RlUGVybWlzc2lvbnMoSS5ub2RlLFxcXCJ4XFxcIik7aWYoZyl0aHJvdyBuZXcgUkEuRXJybm9FcnJvcihnKTtSQS5jdXJyZW50UGF0aD1JLnBhdGh9LGNyZWF0ZURlZmF1bHREaXJlY3RvcmllczooKT0+e1JBLm1rZGlyKFxcXCIvdG1wXFxcIiksUkEubWtkaXIoXFxcIi9ob21lXFxcIiksUkEubWtkaXIoXFxcIi9ob21lL3dlYl91c2VyXFxcIil9LGNyZWF0ZURlZmF1bHREZXZpY2VzOigpPT57UkEubWtkaXIoXFxcIi9kZXZcXFwiKSxSQS5yZWdpc3RlckRldmljZShSQS5tYWtlZGV2KDEsMykse3JlYWQ6KCk9PjAsd3JpdGU6KEEsSSxnLEIsQyk9PkJ9KSxSQS5ta2RldihcXFwiL2Rldi9udWxsXFxcIixSQS5tYWtlZGV2KDEsMykpLEdBLnJlZ2lzdGVyKFJBLm1ha2VkZXYoNSwwKSxHQS5kZWZhdWx0X3R0eV9vcHMpLEdBLnJlZ2lzdGVyKFJBLm1ha2VkZXYoNiwwKSxHQS5kZWZhdWx0X3R0eTFfb3BzKSxSQS5ta2RldihcXFwiL2Rldi90dHlcXFwiLFJBLm1ha2VkZXYoNSwwKSksUkEubWtkZXYoXFxcIi9kZXYvdHR5MVxcXCIsUkEubWFrZWRldig2LDApKTt2YXIgQT1mdW5jdGlvbigpe2lmKFxcXCJvYmplY3RcXFwiPT10eXBlb2YgY3J5cHRvJiZcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyl7dmFyIEE9bmV3IFVpbnQ4QXJyYXkoMSk7cmV0dXJuKCk9PihjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKEEpLEFbMF0pfWlmKEYpdHJ5e3ZhciBJPWcoNTY3KTtyZXR1cm4oKT0+SS5yYW5kb21CeXRlcygxKVswXX1jYXRjaChBKXt9cmV0dXJuKCk9PnooXFxcInJhbmRvbURldmljZVxcXCIpfSgpO1JBLmNyZWF0ZURldmljZShcXFwiL2RldlxcXCIsXFxcInJhbmRvbVxcXCIsQSksUkEuY3JlYXRlRGV2aWNlKFxcXCIvZGV2XFxcIixcXFwidXJhbmRvbVxcXCIsQSksUkEubWtkaXIoXFxcIi9kZXYvc2htXFxcIiksUkEubWtkaXIoXFxcIi9kZXYvc2htL3RtcFxcXCIpfSxjcmVhdGVTcGVjaWFsRGlyZWN0b3JpZXM6KCk9PntSQS5ta2RpcihcXFwiL3Byb2NcXFwiKTt2YXIgQT1SQS5ta2RpcihcXFwiL3Byb2Mvc2VsZlxcXCIpO1JBLm1rZGlyKFxcXCIvcHJvYy9zZWxmL2ZkXFxcIiksUkEubW91bnQoe21vdW50OigpPT57dmFyIEk9UkEuY3JlYXRlTm9kZShBLFxcXCJmZFxcXCIsMTY4OTUsNzMpO3JldHVybiBJLm5vZGVfb3BzPXtsb29rdXA6KEEsSSk9Pnt2YXIgZz0rSSxCPVJBLmdldFN0cmVhbShnKTtpZighQil0aHJvdyBuZXcgUkEuRXJybm9FcnJvcig4KTt2YXIgQz17cGFyZW50Om51bGwsbW91bnQ6e21vdW50cG9pbnQ6XFxcImZha2VcXFwifSxub2RlX29wczp7cmVhZGxpbms6KCk9PkIucGF0aH19O3JldHVybiBDLnBhcmVudD1DLEN9fSxJfX0se30sXFxcIi9wcm9jL3NlbGYvZmRcXFwiKX0sY3JlYXRlU3RhbmRhcmRTdHJlYW1zOigpPT57QS5zdGRpbj9SQS5jcmVhdGVEZXZpY2UoXFxcIi9kZXZcXFwiLFxcXCJzdGRpblxcXCIsQS5zdGRpbik6UkEuc3ltbGluayhcXFwiL2Rldi90dHlcXFwiLFxcXCIvZGV2L3N0ZGluXFxcIiksQS5zdGRvdXQ/UkEuY3JlYXRlRGV2aWNlKFxcXCIvZGV2XFxcIixcXFwic3Rkb3V0XFxcIixudWxsLEEuc3Rkb3V0KTpSQS5zeW1saW5rKFxcXCIvZGV2L3R0eVxcXCIsXFxcIi9kZXYvc3Rkb3V0XFxcIiksQS5zdGRlcnI/UkEuY3JlYXRlRGV2aWNlKFxcXCIvZGV2XFxcIixcXFwic3RkZXJyXFxcIixudWxsLEEuc3RkZXJyKTpSQS5zeW1saW5rKFxcXCIvZGV2L3R0eTFcXFwiLFxcXCIvZGV2L3N0ZGVyclxcXCIpLFJBLm9wZW4oXFxcIi9kZXYvc3RkaW5cXFwiLDApLFJBLm9wZW4oXFxcIi9kZXYvc3Rkb3V0XFxcIiwxKSxSQS5vcGVuKFxcXCIvZGV2L3N0ZGVyclxcXCIsMSl9LGVuc3VyZUVycm5vRXJyb3I6KCk9PntSQS5FcnJub0Vycm9yfHwoUkEuRXJybm9FcnJvcj1mdW5jdGlvbihBLEkpe3RoaXMubm9kZT1JLHRoaXMuc2V0RXJybm89ZnVuY3Rpb24oQSl7dGhpcy5lcnJubz1BfSx0aGlzLnNldEVycm5vKEEpLHRoaXMubWVzc2FnZT1cXFwiRlMgZXJyb3JcXFwifSxSQS5FcnJub0Vycm9yLnByb3RvdHlwZT1uZXcgRXJyb3IsUkEuRXJybm9FcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3I9UkEuRXJybm9FcnJvcixbNDRdLmZvckVhY2goKEE9PntSQS5nZW5lcmljRXJyb3JzW0FdPW5ldyBSQS5FcnJub0Vycm9yKEEpLFJBLmdlbmVyaWNFcnJvcnNbQV0uc3RhY2s9XFxcIjxnZW5lcmljIGVycm9yLCBubyBzdGFjaz5cXFwifSkpKX0sc3RhdGljSW5pdDooKT0+e1JBLmVuc3VyZUVycm5vRXJyb3IoKSxSQS5uYW1lVGFibGU9bmV3IEFycmF5KDQwOTYpLFJBLm1vdW50KHRBLHt9LFxcXCIvXFxcIiksUkEuY3JlYXRlRGVmYXVsdERpcmVjdG9yaWVzKCksUkEuY3JlYXRlRGVmYXVsdERldmljZXMoKSxSQS5jcmVhdGVTcGVjaWFsRGlyZWN0b3JpZXMoKSxSQS5maWxlc3lzdGVtcz17TUVNRlM6dEF9fSxpbml0OihJLGcsQik9PntSQS5pbml0LmluaXRpYWxpemVkPSEwLFJBLmVuc3VyZUVycm5vRXJyb3IoKSxBLnN0ZGluPUl8fEEuc3RkaW4sQS5zdGRvdXQ9Z3x8QS5zdGRvdXQsQS5zdGRlcnI9Qnx8QS5zdGRlcnIsUkEuY3JlYXRlU3RhbmRhcmRTdHJlYW1zKCl9LHF1aXQ6KCk9PntSQS5pbml0LmluaXRpYWxpemVkPSExO2Zvcih2YXIgQT0wO0E8UkEuc3RyZWFtcy5sZW5ndGg7QSsrKXt2YXIgST1SQS5zdHJlYW1zW0FdO0kmJlJBLmNsb3NlKEkpfX0sZ2V0TW9kZTooQSxJKT0+e3ZhciBnPTA7cmV0dXJuIEEmJihnfD0zNjUpLEkmJihnfD0xNDYpLGd9LGZpbmRPYmplY3Q6KEEsSSk9Pnt2YXIgZz1SQS5hbmFseXplUGF0aChBLEkpO3JldHVybiBnLmV4aXN0cz9nLm9iamVjdDpudWxsfSxhbmFseXplUGF0aDooQSxJKT0+e3RyeXtBPShCPVJBLmxvb2t1cFBhdGgoQSx7Zm9sbG93OiFJfSkpLnBhdGh9Y2F0Y2goQSl7fXZhciBnPXtpc1Jvb3Q6ITEsZXhpc3RzOiExLGVycm9yOjAsbmFtZTpudWxsLHBhdGg6bnVsbCxvYmplY3Q6bnVsbCxwYXJlbnRFeGlzdHM6ITEscGFyZW50UGF0aDpudWxsLHBhcmVudE9iamVjdDpudWxsfTt0cnl7dmFyIEI9UkEubG9va3VwUGF0aChBLHtwYXJlbnQ6ITB9KTtnLnBhcmVudEV4aXN0cz0hMCxnLnBhcmVudFBhdGg9Qi5wYXRoLGcucGFyZW50T2JqZWN0PUIubm9kZSxnLm5hbWU9YUEuYmFzZW5hbWUoQSksQj1SQS5sb29rdXBQYXRoKEEse2ZvbGxvdzohSX0pLGcuZXhpc3RzPSEwLGcucGF0aD1CLnBhdGgsZy5vYmplY3Q9Qi5ub2RlLGcubmFtZT1CLm5vZGUubmFtZSxnLmlzUm9vdD1cXFwiL1xcXCI9PT1CLnBhdGh9Y2F0Y2goQSl7Zy5lcnJvcj1BLmVycm5vfXJldHVybiBnfSxjcmVhdGVQYXRoOihBLEksZyxCKT0+e0E9XFxcInN0cmluZ1xcXCI9PXR5cGVvZiBBP0E6UkEuZ2V0UGF0aChBKTtmb3IodmFyIEM9SS5zcGxpdChcXFwiL1xcXCIpLnJldmVyc2UoKTtDLmxlbmd0aDspe3ZhciBRPUMucG9wKCk7aWYoUSl7dmFyIEU9YUEuam9pbjIoQSxRKTt0cnl7UkEubWtkaXIoRSl9Y2F0Y2goQSl7fUE9RX19cmV0dXJuIEV9LGNyZWF0ZUZpbGU6KEEsSSxnLEIsQyk9Pnt2YXIgUT1hQS5qb2luMihcXFwic3RyaW5nXFxcIj09dHlwZW9mIEE/QTpSQS5nZXRQYXRoKEEpLEkpLEU9UkEuZ2V0TW9kZShCLEMpO3JldHVybiBSQS5jcmVhdGUoUSxFKX0sY3JlYXRlRGF0YUZpbGU6KEEsSSxnLEIsQyxRKT0+e3ZhciBFPUk7QSYmKEE9XFxcInN0cmluZ1xcXCI9PXR5cGVvZiBBP0E6UkEuZ2V0UGF0aChBKSxFPUk/YUEuam9pbjIoQSxJKTpBKTt2YXIgaT1SQS5nZXRNb2RlKEIsQyksbz1SQS5jcmVhdGUoRSxpKTtpZihnKXtpZihcXFwic3RyaW5nXFxcIj09dHlwZW9mIGcpe2Zvcih2YXIgRD1uZXcgQXJyYXkoZy5sZW5ndGgpLGE9MCx3PWcubGVuZ3RoO2E8dzsrK2EpRFthXT1nLmNoYXJDb2RlQXQoYSk7Zz1EfVJBLmNobW9kKG8sMTQ2fGkpO3ZhciBzPVJBLm9wZW4obyw1NzcpO1JBLndyaXRlKHMsZywwLGcubGVuZ3RoLDAsUSksUkEuY2xvc2UocyksUkEuY2htb2QobyxpKX1yZXR1cm4gb30sY3JlYXRlRGV2aWNlOihBLEksZyxCKT0+e3ZhciBDPWFBLmpvaW4yKFxcXCJzdHJpbmdcXFwiPT10eXBlb2YgQT9BOlJBLmdldFBhdGgoQSksSSksUT1SQS5nZXRNb2RlKCEhZywhIUIpO1JBLmNyZWF0ZURldmljZS5tYWpvcnx8KFJBLmNyZWF0ZURldmljZS5tYWpvcj02NCk7dmFyIEU9UkEubWFrZWRldihSQS5jcmVhdGVEZXZpY2UubWFqb3IrKywwKTtyZXR1cm4gUkEucmVnaXN0ZXJEZXZpY2UoRSx7b3BlbjpBPT57QS5zZWVrYWJsZT0hMX0sY2xvc2U6QT0+e0ImJkIuYnVmZmVyJiZCLmJ1ZmZlci5sZW5ndGgmJkIoMTApfSxyZWFkOihBLEksQixDLFEpPT57Zm9yKHZhciBFPTAsaT0wO2k8QztpKyspe3ZhciBvO3RyeXtvPWcoKX1jYXRjaChBKXt0aHJvdyBuZXcgUkEuRXJybm9FcnJvcigyOSl9aWYodm9pZCAwPT09byYmMD09PUUpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoNik7aWYobnVsbD09bylicmVhaztFKyssSVtCK2ldPW99cmV0dXJuIEUmJihBLm5vZGUudGltZXN0YW1wPURhdGUubm93KCkpLEV9LHdyaXRlOihBLEksZyxDLFEpPT57Zm9yKHZhciBFPTA7RTxDO0UrKyl0cnl7QihJW2crRV0pfWNhdGNoKEEpe3Rocm93IG5ldyBSQS5FcnJub0Vycm9yKDI5KX1yZXR1cm4gQyYmKEEubm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKSksRX19KSxSQS5ta2RldihDLFEsRSl9LGZvcmNlTG9hZEZpbGU6QT0+e2lmKEEuaXNEZXZpY2V8fEEuaXNGb2xkZXJ8fEEubGlua3x8QS5jb250ZW50cylyZXR1cm4hMDtpZihcXFwidW5kZWZpbmVkXFxcIiE9dHlwZW9mIFhNTEh0dHBSZXF1ZXN0KXRocm93IG5ldyBFcnJvcihcXFwiTGF6eSBsb2FkaW5nIHNob3VsZCBoYXZlIGJlZW4gcGVyZm9ybWVkIChjb250ZW50cyBzZXQpIGluIGNyZWF0ZUxhenlGaWxlLCBidXQgaXQgd2FzIG5vdC4gTGF6eSBsb2FkaW5nIG9ubHkgd29ya3MgaW4gd2ViIHdvcmtlcnMuIFVzZSAtLWVtYmVkLWZpbGUgb3IgLS1wcmVsb2FkLWZpbGUgaW4gZW1jYyBvbiB0aGUgbWFpbiB0aHJlYWQuXFxcIik7aWYoIUMpdGhyb3cgbmV3IEVycm9yKFxcXCJDYW5ub3QgbG9hZCB3aXRob3V0IHJlYWQoKSBvciBYTUxIdHRwUmVxdWVzdC5cXFwiKTt0cnl7QS5jb250ZW50cz1zQShDKEEudXJsKSwhMCksQS51c2VkQnl0ZXM9QS5jb250ZW50cy5sZW5ndGh9Y2F0Y2goQSl7dGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoMjkpfX0sY3JlYXRlTGF6eUZpbGU6KEEsSSxnLEIsQyk9PntmdW5jdGlvbiBRKCl7dGhpcy5sZW5ndGhLbm93bj0hMSx0aGlzLmNodW5rcz1bXX1pZihRLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oQSl7aWYoIShBPnRoaXMubGVuZ3RoLTF8fEE8MCkpe3ZhciBJPUEldGhpcy5jaHVua1NpemUsZz1BL3RoaXMuY2h1bmtTaXplfDA7cmV0dXJuIHRoaXMuZ2V0dGVyKGcpW0ldfX0sUS5wcm90b3R5cGUuc2V0RGF0YUdldHRlcj1mdW5jdGlvbihBKXt0aGlzLmdldHRlcj1BfSxRLnByb3RvdHlwZS5jYWNoZUxlbmd0aD1mdW5jdGlvbigpe3ZhciBBPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihBLm9wZW4oXFxcIkhFQURcXFwiLGcsITEpLEEuc2VuZChudWxsKSwhKEEuc3RhdHVzPj0yMDAmJkEuc3RhdHVzPDMwMHx8MzA0PT09QS5zdGF0dXMpKXRocm93IG5ldyBFcnJvcihcXFwiQ291bGRuJ3QgbG9hZCBcXFwiK2crXFxcIi4gU3RhdHVzOiBcXFwiK0Euc3RhdHVzKTt2YXIgSSxCPU51bWJlcihBLmdldFJlc3BvbnNlSGVhZGVyKFxcXCJDb250ZW50LWxlbmd0aFxcXCIpKSxDPShJPUEuZ2V0UmVzcG9uc2VIZWFkZXIoXFxcIkFjY2VwdC1SYW5nZXNcXFwiKSkmJlxcXCJieXRlc1xcXCI9PT1JLFE9KEk9QS5nZXRSZXNwb25zZUhlYWRlcihcXFwiQ29udGVudC1FbmNvZGluZ1xcXCIpKSYmXFxcImd6aXBcXFwiPT09SSxFPTEwNDg1NzY7Q3x8KEU9Qik7dmFyIGk9dGhpcztpLnNldERhdGFHZXR0ZXIoKEE9Pnt2YXIgST1BKkUsQz0oQSsxKSpFLTE7aWYoQz1NYXRoLm1pbihDLEItMSksdm9pZCAwPT09aS5jaHVua3NbQV0mJihpLmNodW5rc1tBXT0oKEEsSSk9PntpZihBPkkpdGhyb3cgbmV3IEVycm9yKFxcXCJpbnZhbGlkIHJhbmdlIChcXFwiK0ErXFxcIiwgXFxcIitJK1xcXCIpIG9yIG5vIGJ5dGVzIHJlcXVlc3RlZCFcXFwiKTtpZihJPkItMSl0aHJvdyBuZXcgRXJyb3IoXFxcIm9ubHkgXFxcIitCK1xcXCIgYnl0ZXMgYXZhaWxhYmxlISBwcm9ncmFtbWVyIGVycm9yIVxcXCIpO3ZhciBDPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihDLm9wZW4oXFxcIkdFVFxcXCIsZywhMSksQiE9PUUmJkMuc2V0UmVxdWVzdEhlYWRlcihcXFwiUmFuZ2VcXFwiLFxcXCJieXRlcz1cXFwiK0ErXFxcIi1cXFwiK0kpLEMucmVzcG9uc2VUeXBlPVxcXCJhcnJheWJ1ZmZlclxcXCIsQy5vdmVycmlkZU1pbWVUeXBlJiZDLm92ZXJyaWRlTWltZVR5cGUoXFxcInRleHQvcGxhaW47IGNoYXJzZXQ9eC11c2VyLWRlZmluZWRcXFwiKSxDLnNlbmQobnVsbCksIShDLnN0YXR1cz49MjAwJiZDLnN0YXR1czwzMDB8fDMwND09PUMuc3RhdHVzKSl0aHJvdyBuZXcgRXJyb3IoXFxcIkNvdWxkbid0IGxvYWQgXFxcIitnK1xcXCIuIFN0YXR1czogXFxcIitDLnN0YXR1cyk7cmV0dXJuIHZvaWQgMCE9PUMucmVzcG9uc2U/bmV3IFVpbnQ4QXJyYXkoQy5yZXNwb25zZXx8W10pOnNBKEMucmVzcG9uc2VUZXh0fHxcXFwiXFxcIiwhMCl9KShJLEMpKSx2b2lkIDA9PT1pLmNodW5rc1tBXSl0aHJvdyBuZXcgRXJyb3IoXFxcImRvWEhSIGZhaWxlZCFcXFwiKTtyZXR1cm4gaS5jaHVua3NbQV19KSksIVEmJkJ8fChFPUI9MSxCPXRoaXMuZ2V0dGVyKDApLmxlbmd0aCxFPUIsTShcXFwiTGF6eUZpbGVzIG9uIGd6aXAgZm9yY2VzIGRvd25sb2FkIG9mIHRoZSB3aG9sZSBmaWxlIHdoZW4gbGVuZ3RoIGlzIGFjY2Vzc2VkXFxcIikpLHRoaXMuX2xlbmd0aD1CLHRoaXMuX2NodW5rU2l6ZT1FLHRoaXMubGVuZ3RoS25vd249ITB9LFxcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2YgWE1MSHR0cFJlcXVlc3Qpe2lmKCFSKXRocm93XFxcIkNhbm5vdCBkbyBzeW5jaHJvbm91cyBiaW5hcnkgWEhScyBvdXRzaWRlIHdlYndvcmtlcnMgaW4gbW9kZXJuIGJyb3dzZXJzLiBVc2UgLS1lbWJlZC1maWxlIG9yIC0tcHJlbG9hZC1maWxlIGluIGVtY2NcXFwiO3ZhciBFPW5ldyBRO09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEUse2xlbmd0aDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RoS25vd258fHRoaXMuY2FjaGVMZW5ndGgoKSx0aGlzLl9sZW5ndGh9fSxjaHVua1NpemU6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxlbmd0aEtub3dufHx0aGlzLmNhY2hlTGVuZ3RoKCksdGhpcy5fY2h1bmtTaXplfX19KTt2YXIgaT17aXNEZXZpY2U6ITEsY29udGVudHM6RX19ZWxzZSBpPXtpc0RldmljZTohMSx1cmw6Z307dmFyIG89UkEuY3JlYXRlRmlsZShBLEksaSxCLEMpO2kuY29udGVudHM/by5jb250ZW50cz1pLmNvbnRlbnRzOmkudXJsJiYoby5jb250ZW50cz1udWxsLG8udXJsPWkudXJsKSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhvLHt1c2VkQnl0ZXM6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbnRlbnRzLmxlbmd0aH19fSk7dmFyIEQ9e307ZnVuY3Rpb24gYShBLEksZyxCLEMpe3ZhciBRPUEubm9kZS5jb250ZW50cztpZihDPj1RLmxlbmd0aClyZXR1cm4gMDt2YXIgRT1NYXRoLm1pbihRLmxlbmd0aC1DLEIpO2lmKFEuc2xpY2UpZm9yKHZhciBpPTA7aTxFO2krKylJW2craV09UVtDK2ldO2Vsc2UgZm9yKGk9MDtpPEU7aSsrKUlbZytpXT1RLmdldChDK2kpO3JldHVybiBFfXJldHVybiBPYmplY3Qua2V5cyhvLnN0cmVhbV9vcHMpLmZvckVhY2goKEE9Pnt2YXIgST1vLnN0cmVhbV9vcHNbQV07RFtBXT1mdW5jdGlvbigpe3JldHVybiBSQS5mb3JjZUxvYWRGaWxlKG8pLEkuYXBwbHkobnVsbCxhcmd1bWVudHMpfX0pKSxELnJlYWQ9KEEsSSxnLEIsQyk9PihSQS5mb3JjZUxvYWRGaWxlKG8pLGEoQSxJLGcsQixDKSksRC5tbWFwPShBLEksZyxCLEMpPT57UkEuZm9yY2VMb2FkRmlsZShvKTt2YXIgUT1oQSgpO2lmKCFRKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ4KTtyZXR1cm4gYShBLFUsUSxJLGcpLHtwdHI6USxhbGxvY2F0ZWQ6ITB9fSxvLnN0cmVhbV9vcHM9RCxvfSxjcmVhdGVQcmVsb2FkZWRGaWxlOihBLEksZyxCLEMsRSxpLG8sRCxhKT0+e3ZhciB3PUk/d0EucmVzb2x2ZShhQS5qb2luMihBLEkpKTpBO2Z1bmN0aW9uIHMoZyl7ZnVuY3Rpb24gUShnKXthJiZhKCksb3x8UkEuY3JlYXRlRGF0YUZpbGUoQSxJLGcsQixDLEQpLEUmJkUoKSxQKCl9QnJvd3Nlci5oYW5kbGVkQnlQcmVsb2FkUGx1Z2luKGcsdyxRLCgoKT0+e2kmJmkoKSxQKCl9KSl8fFEoZyl9digpLFxcXCJzdHJpbmdcXFwiPT10eXBlb2YgZz9mdW5jdGlvbihBLEksZyxCKXt2YXIgQz1cXFwiYWwgXFxcIitBO1EoQSwoST0+e2MoSSwnTG9hZGluZyBkYXRhIGZpbGUgXFxcIicrQSsnXFxcIiBmYWlsZWQgKG5vIGFycmF5QnVmZmVyKS4nKSxzKG5ldyBVaW50OEFycmF5KEkpKSxDJiZQKCl9KSwoST0+e2lmKCFnKXRocm93J0xvYWRpbmcgZGF0YSBmaWxlIFxcXCInK0ErJ1xcXCIgZmFpbGVkLic7ZygpfSkpLEMmJnYoKX0oZywwLGkpOnMoZyl9LGluZGV4ZWREQjooKT0+d2luZG93LmluZGV4ZWREQnx8d2luZG93Lm1vekluZGV4ZWREQnx8d2luZG93LndlYmtpdEluZGV4ZWREQnx8d2luZG93Lm1zSW5kZXhlZERCLERCX05BTUU6KCk9PlxcXCJFTV9GU19cXFwiK3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSxEQl9WRVJTSU9OOjIwLERCX1NUT1JFX05BTUU6XFxcIkZJTEVfREFUQVxcXCIsc2F2ZUZpbGVzVG9EQjooQSxJLGcpPT57ST1JfHwoKCk9Pnt9KSxnPWd8fCgoKT0+e30pO3ZhciBCPVJBLmluZGV4ZWREQigpO3RyeXt2YXIgQz1CLm9wZW4oUkEuREJfTkFNRSgpLFJBLkRCX1ZFUlNJT04pfWNhdGNoKEEpe3JldHVybiBnKEEpfUMub251cGdyYWRlbmVlZGVkPSgpPT57TShcXFwiY3JlYXRpbmcgZGJcXFwiKSxDLnJlc3VsdC5jcmVhdGVPYmplY3RTdG9yZShSQS5EQl9TVE9SRV9OQU1FKX0sQy5vbnN1Y2Nlc3M9KCk9Pnt2YXIgQj1DLnJlc3VsdC50cmFuc2FjdGlvbihbUkEuREJfU1RPUkVfTkFNRV0sXFxcInJlYWR3cml0ZVxcXCIpLFE9Qi5vYmplY3RTdG9yZShSQS5EQl9TVE9SRV9OQU1FKSxFPTAsaT0wLG89QS5sZW5ndGg7ZnVuY3Rpb24gRCgpezA9PWk/SSgpOmcoKX1BLmZvckVhY2goKEE9Pnt2YXIgST1RLnB1dChSQS5hbmFseXplUGF0aChBKS5vYmplY3QuY29udGVudHMsQSk7SS5vbnN1Y2Nlc3M9KCk9PnsrK0UraT09byYmRCgpfSxJLm9uZXJyb3I9KCk9PntpKyssRStpPT1vJiZEKCl9fSkpLEIub25lcnJvcj1nfSxDLm9uZXJyb3I9Z30sbG9hZEZpbGVzRnJvbURCOihBLEksZyk9PntJPUl8fCgoKT0+e30pLGc9Z3x8KCgpPT57fSk7dmFyIEI9UkEuaW5kZXhlZERCKCk7dHJ5e3ZhciBDPUIub3BlbihSQS5EQl9OQU1FKCksUkEuREJfVkVSU0lPTil9Y2F0Y2goQSl7cmV0dXJuIGcoQSl9Qy5vbnVwZ3JhZGVuZWVkZWQ9ZyxDLm9uc3VjY2Vzcz0oKT0+e3ZhciBCPUMucmVzdWx0O3RyeXt2YXIgUT1CLnRyYW5zYWN0aW9uKFtSQS5EQl9TVE9SRV9OQU1FXSxcXFwicmVhZG9ubHlcXFwiKX1jYXRjaChBKXtyZXR1cm4gdm9pZCBnKEEpfXZhciBFPVEub2JqZWN0U3RvcmUoUkEuREJfU1RPUkVfTkFNRSksaT0wLG89MCxEPUEubGVuZ3RoO2Z1bmN0aW9uIGEoKXswPT1vP0koKTpnKCl9QS5mb3JFYWNoKChBPT57dmFyIEk9RS5nZXQoQSk7SS5vbnN1Y2Nlc3M9KCk9PntSQS5hbmFseXplUGF0aChBKS5leGlzdHMmJlJBLnVubGluayhBKSxSQS5jcmVhdGVEYXRhRmlsZShhQS5kaXJuYW1lKEEpLGFBLmJhc2VuYW1lKEEpLEkucmVzdWx0LCEwLCEwLCEwKSwrK2krbz09RCYmYSgpfSxJLm9uZXJyb3I9KCk9PntvKyssaStvPT1EJiZhKCl9fSkpLFEub25lcnJvcj1nfSxDLm9uZXJyb3I9Z319LEZBPXtERUZBVUxUX1BPTExNQVNLOjUsY2FsY3VsYXRlQXQ6ZnVuY3Rpb24oQSxJLGcpe2lmKGFBLmlzQWJzKEkpKXJldHVybiBJO3ZhciBCO2lmKEI9LTEwMD09PUE/UkEuY3dkKCk6RkEuZ2V0U3RyZWFtRnJvbUZEKEEpLnBhdGgsMD09SS5sZW5ndGgpe2lmKCFnKXRocm93IG5ldyBSQS5FcnJub0Vycm9yKDQ0KTtyZXR1cm4gQn1yZXR1cm4gYUEuam9pbjIoQixJKX0sZG9TdGF0OmZ1bmN0aW9uKEEsSSxnKXt0cnl7dmFyIEI9QShJKX1jYXRjaChBKXtpZihBJiZBLm5vZGUmJmFBLm5vcm1hbGl6ZShJKSE9PWFBLm5vcm1hbGl6ZShSQS5nZXRQYXRoKEEubm9kZSkpKXJldHVybi01NDt0aHJvdyBBfXJldHVybiBMW2c+PjJdPUIuZGV2LExbZys4Pj4yXT1CLmlubyxMW2crMTI+PjJdPUIubW9kZSxkW2crMTY+PjJdPUIubmxpbmssTFtnKzIwPj4yXT1CLnVpZCxMW2crMjQ+PjJdPUIuZ2lkLExbZysyOD4+Ml09Qi5yZGV2LElBPVtCLnNpemU+Pj4wLChBQT1CLnNpemUsK01hdGguYWJzKEFBKT49MT9BQT4wPygwfE1hdGgubWluKCtNYXRoLmZsb29yKEFBLzQyOTQ5NjcyOTYpLDQyOTQ5NjcyOTUpKT4+PjA6fn4rTWF0aC5jZWlsKChBQS0rKH5+QUE+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSxMW2crNDA+PjJdPUlBWzBdLExbZys0ND4+Ml09SUFbMV0sTFtnKzQ4Pj4yXT00MDk2LExbZys1Mj4+Ml09Qi5ibG9ja3MsSUE9W01hdGguZmxvb3IoQi5hdGltZS5nZXRUaW1lKCkvMWUzKT4+PjAsKEFBPU1hdGguZmxvb3IoQi5hdGltZS5nZXRUaW1lKCkvMWUzKSwrTWF0aC5hYnMoQUEpPj0xP0FBPjA/KDB8TWF0aC5taW4oK01hdGguZmxvb3IoQUEvNDI5NDk2NzI5NiksNDI5NDk2NzI5NSkpPj4+MDp+fitNYXRoLmNlaWwoKEFBLSsofn5BQT4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLExbZys1Nj4+Ml09SUFbMF0sTFtnKzYwPj4yXT1JQVsxXSxkW2crNjQ+PjJdPTAsSUE9W01hdGguZmxvb3IoQi5tdGltZS5nZXRUaW1lKCkvMWUzKT4+PjAsKEFBPU1hdGguZmxvb3IoQi5tdGltZS5nZXRUaW1lKCkvMWUzKSwrTWF0aC5hYnMoQUEpPj0xP0FBPjA/KDB8TWF0aC5taW4oK01hdGguZmxvb3IoQUEvNDI5NDk2NzI5NiksNDI5NDk2NzI5NSkpPj4+MDp+fitNYXRoLmNlaWwoKEFBLSsofn5BQT4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLExbZys3Mj4+Ml09SUFbMF0sTFtnKzc2Pj4yXT1JQVsxXSxkW2crODA+PjJdPTAsSUE9W01hdGguZmxvb3IoQi5jdGltZS5nZXRUaW1lKCkvMWUzKT4+PjAsKEFBPU1hdGguZmxvb3IoQi5jdGltZS5nZXRUaW1lKCkvMWUzKSwrTWF0aC5hYnMoQUEpPj0xP0FBPjA/KDB8TWF0aC5taW4oK01hdGguZmxvb3IoQUEvNDI5NDk2NzI5NiksNDI5NDk2NzI5NSkpPj4+MDp+fitNYXRoLmNlaWwoKEFBLSsofn5BQT4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLExbZys4OD4+Ml09SUFbMF0sTFtnKzkyPj4yXT1JQVsxXSxkW2crOTY+PjJdPTAsSUE9W0IuaW5vPj4+MCwoQUE9Qi5pbm8sK01hdGguYWJzKEFBKT49MT9BQT4wPygwfE1hdGgubWluKCtNYXRoLmZsb29yKEFBLzQyOTQ5NjcyOTYpLDQyOTQ5NjcyOTUpKT4+PjA6fn4rTWF0aC5jZWlsKChBQS0rKH5+QUE+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSxMW2crMTA0Pj4yXT1JQVswXSxMW2crMTA4Pj4yXT1JQVsxXSwwfSxkb01zeW5jOmZ1bmN0aW9uKEEsSSxnLEIsQyl7dmFyIFE9Si5zbGljZShBLEErZyk7UkEubXN5bmMoSSxRLEMsZyxCKX0sdmFyYXJnczp2b2lkIDAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEZBLnZhcmFyZ3MrPTQsTFtGQS52YXJhcmdzLTQ+PjJdfSxnZXRTdHI6ZnVuY3Rpb24oQSl7cmV0dXJuIHUoQSl9LGdldFN0cmVhbUZyb21GRDpmdW5jdGlvbihBKXt2YXIgST1SQS5nZXRTdHJlYW0oQSk7aWYoIUkpdGhyb3cgbmV3IFJBLkVycm5vRXJyb3IoOCk7cmV0dXJuIEl9fSx5QT17fTtmdW5jdGlvbiByQShBKXtmb3IoO0EubGVuZ3RoOyl7dmFyIEk9QS5wb3AoKTtBLnBvcCgpKEkpfX1mdW5jdGlvbiBNQShBKXtyZXR1cm4gdGhpcy5mcm9tV2lyZVR5cGUoTFtBPj4yXSl9dmFyIGVBPXt9LFNBPXt9LE5BPXt9O2Z1bmN0aW9uIG5BKEEpe2lmKHZvaWQgMD09PUEpcmV0dXJuXFxcIl91bmtub3duXFxcIjt2YXIgST0oQT1BLnJlcGxhY2UoL1teYS16QS1aMC05X10vZyxcXFwiJFxcXCIpKS5jaGFyQ29kZUF0KDApO3JldHVybiBJPj00OCYmSTw9NTc/XFxcIl9cXFwiK0E6QX1mdW5jdGlvbiBjQShBLEkpe3JldHVybiBBPW5BKEEpLG5ldyBGdW5jdGlvbihcXFwiYm9keVxcXCIsXFxcInJldHVybiBmdW5jdGlvbiBcXFwiK0ErJygpIHtcXFxcbiAgICBcXFwidXNlIHN0cmljdFxcXCI7ICAgIHJldHVybiBib2R5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XFxcXG59O1xcXFxuJykoSSl9ZnVuY3Rpb24ga0EoQSxJKXt2YXIgZz1jQShJLChmdW5jdGlvbihBKXt0aGlzLm5hbWU9SSx0aGlzLm1lc3NhZ2U9QTt2YXIgZz1uZXcgRXJyb3IoQSkuc3RhY2s7dm9pZCAwIT09ZyYmKHRoaXMuc3RhY2s9dGhpcy50b1N0cmluZygpK1xcXCJcXFxcblxcXCIrZy5yZXBsYWNlKC9eRXJyb3IoOlteXFxcXG5dKik/XFxcXG4vLFxcXCJcXFwiKSl9KSk7cmV0dXJuIGcucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoQS5wcm90b3R5cGUpLGcucHJvdG90eXBlLmNvbnN0cnVjdG9yPWcsZy5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09dGhpcy5tZXNzYWdlP3RoaXMubmFtZTp0aGlzLm5hbWUrXFxcIjogXFxcIit0aGlzLm1lc3NhZ2V9LGd9dmFyIFVBPXZvaWQgMDtmdW5jdGlvbiBKQShBKXt0aHJvdyBuZXcgVUEoQSl9ZnVuY3Rpb24gS0EoQSxJLGcpe2Z1bmN0aW9uIEIoSSl7dmFyIEI9ZyhJKTtCLmxlbmd0aCE9PUEubGVuZ3RoJiZKQShcXFwiTWlzbWF0Y2hlZCB0eXBlIGNvbnZlcnRlciBjb3VudFxcXCIpO2Zvcih2YXIgQz0wO0M8QS5sZW5ndGg7KytDKUhBKEFbQ10sQltDXSl9QS5mb3JFYWNoKChmdW5jdGlvbihBKXtOQVtBXT1JfSkpO3ZhciBDPW5ldyBBcnJheShJLmxlbmd0aCksUT1bXSxFPTA7SS5mb3JFYWNoKCgoQSxJKT0+e1NBLmhhc093blByb3BlcnR5KEEpP0NbSV09U0FbQV06KFEucHVzaChBKSxlQS5oYXNPd25Qcm9wZXJ0eShBKXx8KGVBW0FdPVtdKSxlQVtBXS5wdXNoKCgoKT0+e0NbSV09U0FbQV0sKytFPT09US5sZW5ndGgmJkIoQyl9KSkpfSkpLDA9PT1RLmxlbmd0aCYmQihDKX1mdW5jdGlvbiBZQShBKXtzd2l0Y2goQSl7Y2FzZSAxOnJldHVybiAwO2Nhc2UgMjpyZXR1cm4gMTtjYXNlIDQ6cmV0dXJuIDI7Y2FzZSA4OnJldHVybiAzO2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiVW5rbm93biB0eXBlIHNpemU6IFxcXCIrQSl9fXZhciBMQT12b2lkIDA7ZnVuY3Rpb24gZEEoQSl7Zm9yKHZhciBJPVxcXCJcXFwiLGc9QTtKW2ddOylJKz1MQVtKW2crK11dO3JldHVybiBJfXZhciBsQT12b2lkIDA7ZnVuY3Rpb24gcUEoQSl7dGhyb3cgbmV3IGxBKEEpfWZ1bmN0aW9uIEhBKEEsSSxnPXt9KXtpZighKFxcXCJhcmdQYWNrQWR2YW5jZVxcXCJpbiBJKSl0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJyZWdpc3RlclR5cGUgcmVnaXN0ZXJlZEluc3RhbmNlIHJlcXVpcmVzIGFyZ1BhY2tBZHZhbmNlXFxcIik7dmFyIEI9SS5uYW1lO2lmKEF8fHFBKCd0eXBlIFxcXCInK0IrJ1xcXCIgbXVzdCBoYXZlIGEgcG9zaXRpdmUgaW50ZWdlciB0eXBlaWQgcG9pbnRlcicpLFNBLmhhc093blByb3BlcnR5KEEpKXtpZihnLmlnbm9yZUR1cGxpY2F0ZVJlZ2lzdHJhdGlvbnMpcmV0dXJuO3FBKFxcXCJDYW5ub3QgcmVnaXN0ZXIgdHlwZSAnXFxcIitCK1xcXCInIHR3aWNlXFxcIil9aWYoU0FbQV09SSxkZWxldGUgTkFbQV0sZUEuaGFzT3duUHJvcGVydHkoQSkpe3ZhciBDPWVBW0FdO2RlbGV0ZSBlQVtBXSxDLmZvckVhY2goKEE9PkEoKSkpfX1mdW5jdGlvbiBmQShBKXtxQShBLiQkLnB0clR5cGUucmVnaXN0ZXJlZENsYXNzLm5hbWUrXFxcIiBpbnN0YW5jZSBhbHJlYWR5IGRlbGV0ZWRcXFwiKX12YXIgdUE9ITE7ZnVuY3Rpb24gcEEoQSl7fWZ1bmN0aW9uIFdBKEEpe0EuY291bnQudmFsdWUtPTEsMD09PUEuY291bnQudmFsdWUmJmZ1bmN0aW9uKEEpe0Euc21hcnRQdHI/QS5zbWFydFB0clR5cGUucmF3RGVzdHJ1Y3RvcihBLnNtYXJ0UHRyKTpBLnB0clR5cGUucmVnaXN0ZXJlZENsYXNzLnJhd0Rlc3RydWN0b3IoQS5wdHIpfShBKX1mdW5jdGlvbiBiQShBLEksZyl7aWYoST09PWcpcmV0dXJuIEE7aWYodm9pZCAwPT09Zy5iYXNlQ2xhc3MpcmV0dXJuIG51bGw7dmFyIEI9YkEoQSxJLGcuYmFzZUNsYXNzKTtyZXR1cm4gbnVsbD09PUI/bnVsbDpnLmRvd25jYXN0KEIpfXZhciBtQT17fSxaQT1bXTtmdW5jdGlvbiB4QSgpe2Zvcig7WkEubGVuZ3RoOyl7dmFyIEE9WkEucG9wKCk7QS4kJC5kZWxldGVTY2hlZHVsZWQ9ITEsQS5kZWxldGUoKX19dmFyIFZBPXZvaWQgMCxUQT17fTtmdW5jdGlvbiBYQShBLEkpe3JldHVybiBJLnB0clR5cGUmJkkucHRyfHxKQShcXFwibWFrZUNsYXNzSGFuZGxlIHJlcXVpcmVzIHB0ciBhbmQgcHRyVHlwZVxcXCIpLCEhSS5zbWFydFB0clR5cGUhPSEhSS5zbWFydFB0ciYmSkEoXFxcIkJvdGggc21hcnRQdHJUeXBlIGFuZCBzbWFydFB0ciBtdXN0IGJlIHNwZWNpZmllZFxcXCIpLEkuY291bnQ9e3ZhbHVlOjF9LE9BKE9iamVjdC5jcmVhdGUoQSx7JCQ6e3ZhbHVlOkl9fSkpfWZ1bmN0aW9uIE9BKEEpe3JldHVyblxcXCJ1bmRlZmluZWRcXFwiPT10eXBlb2YgRmluYWxpemF0aW9uUmVnaXN0cnk/KE9BPUE9PkEsQSk6KHVBPW5ldyBGaW5hbGl6YXRpb25SZWdpc3RyeSgoQT0+e1dBKEEuJCQpfSkpLE9BPUE9Pnt2YXIgST1BLiQkO2lmKEkuc21hcnRQdHIpe3ZhciBnPXskJDpJfTt1QS5yZWdpc3RlcihBLGcsQSl9cmV0dXJuIEF9LHBBPUE9PnVBLnVucmVnaXN0ZXIoQSksT0EoQSkpfWZ1bmN0aW9uIGpBKCl7fWZ1bmN0aW9uIHZBKEEsSSxnKXtpZih2b2lkIDA9PT1BW0ldLm92ZXJsb2FkVGFibGUpe3ZhciBCPUFbSV07QVtJXT1mdW5jdGlvbigpe3JldHVybiBBW0ldLm92ZXJsb2FkVGFibGUuaGFzT3duUHJvcGVydHkoYXJndW1lbnRzLmxlbmd0aCl8fHFBKFxcXCJGdW5jdGlvbiAnXFxcIitnK1xcXCInIGNhbGxlZCB3aXRoIGFuIGludmFsaWQgbnVtYmVyIG9mIGFyZ3VtZW50cyAoXFxcIithcmd1bWVudHMubGVuZ3RoK1xcXCIpIC0gZXhwZWN0cyBvbmUgb2YgKFxcXCIrQVtJXS5vdmVybG9hZFRhYmxlK1xcXCIpIVxcXCIpLEFbSV0ub3ZlcmxvYWRUYWJsZVthcmd1bWVudHMubGVuZ3RoXS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LEFbSV0ub3ZlcmxvYWRUYWJsZT1bXSxBW0ldLm92ZXJsb2FkVGFibGVbQi5hcmdDb3VudF09Qn19ZnVuY3Rpb24gUEEoSSxnLEIpe0EuaGFzT3duUHJvcGVydHkoSSk/KCh2b2lkIDA9PT1CfHx2b2lkIDAhPT1BW0ldLm92ZXJsb2FkVGFibGUmJnZvaWQgMCE9PUFbSV0ub3ZlcmxvYWRUYWJsZVtCXSkmJnFBKFxcXCJDYW5ub3QgcmVnaXN0ZXIgcHVibGljIG5hbWUgJ1xcXCIrSStcXFwiJyB0d2ljZVxcXCIpLHZBKEEsSSxJKSxBLmhhc093blByb3BlcnR5KEIpJiZxQShcXFwiQ2Fubm90IHJlZ2lzdGVyIG11bHRpcGxlIG92ZXJsb2FkcyBvZiBhIGZ1bmN0aW9uIHdpdGggdGhlIHNhbWUgbnVtYmVyIG9mIGFyZ3VtZW50cyAoXFxcIitCK1xcXCIpIVxcXCIpLEFbSV0ub3ZlcmxvYWRUYWJsZVtCXT1nKTooQVtJXT1nLHZvaWQgMCE9PUImJihBW0ldLm51bUFyZ3VtZW50cz1CKSl9ZnVuY3Rpb24gekEoQSxJLGcsQixDLFEsRSxpKXt0aGlzLm5hbWU9QSx0aGlzLmNvbnN0cnVjdG9yPUksdGhpcy5pbnN0YW5jZVByb3RvdHlwZT1nLHRoaXMucmF3RGVzdHJ1Y3Rvcj1CLHRoaXMuYmFzZUNsYXNzPUMsdGhpcy5nZXRBY3R1YWxUeXBlPVEsdGhpcy51cGNhc3Q9RSx0aGlzLmRvd25jYXN0PWksdGhpcy5wdXJlVmlydHVhbEZ1bmN0aW9ucz1bXX1mdW5jdGlvbiBfQShBLEksZyl7Zm9yKDtJIT09ZzspSS51cGNhc3R8fHFBKFxcXCJFeHBlY3RlZCBudWxsIG9yIGluc3RhbmNlIG9mIFxcXCIrZy5uYW1lK1xcXCIsIGdvdCBhbiBpbnN0YW5jZSBvZiBcXFwiK0kubmFtZSksQT1JLnVwY2FzdChBKSxJPUkuYmFzZUNsYXNzO3JldHVybiBBfWZ1bmN0aW9uICRBKEEsSSl7aWYobnVsbD09PUkpcmV0dXJuIHRoaXMuaXNSZWZlcmVuY2UmJnFBKFxcXCJudWxsIGlzIG5vdCBhIHZhbGlkIFxcXCIrdGhpcy5uYW1lKSwwO0kuJCR8fHFBKCdDYW5ub3QgcGFzcyBcXFwiJytSSShJKSsnXFxcIiBhcyBhICcrdGhpcy5uYW1lKSxJLiQkLnB0cnx8cUEoXFxcIkNhbm5vdCBwYXNzIGRlbGV0ZWQgb2JqZWN0IGFzIGEgcG9pbnRlciBvZiB0eXBlIFxcXCIrdGhpcy5uYW1lKTt2YXIgZz1JLiQkLnB0clR5cGUucmVnaXN0ZXJlZENsYXNzO3JldHVybiBfQShJLiQkLnB0cixnLHRoaXMucmVnaXN0ZXJlZENsYXNzKX1mdW5jdGlvbiBBSShBLEkpe3ZhciBnO2lmKG51bGw9PT1JKXJldHVybiB0aGlzLmlzUmVmZXJlbmNlJiZxQShcXFwibnVsbCBpcyBub3QgYSB2YWxpZCBcXFwiK3RoaXMubmFtZSksdGhpcy5pc1NtYXJ0UG9pbnRlcj8oZz10aGlzLnJhd0NvbnN0cnVjdG9yKCksbnVsbCE9PUEmJkEucHVzaCh0aGlzLnJhd0Rlc3RydWN0b3IsZyksZyk6MDtJLiQkfHxxQSgnQ2Fubm90IHBhc3MgXFxcIicrUkkoSSkrJ1xcXCIgYXMgYSAnK3RoaXMubmFtZSksSS4kJC5wdHJ8fHFBKFxcXCJDYW5ub3QgcGFzcyBkZWxldGVkIG9iamVjdCBhcyBhIHBvaW50ZXIgb2YgdHlwZSBcXFwiK3RoaXMubmFtZSksIXRoaXMuaXNDb25zdCYmSS4kJC5wdHJUeXBlLmlzQ29uc3QmJnFBKFxcXCJDYW5ub3QgY29udmVydCBhcmd1bWVudCBvZiB0eXBlIFxcXCIrKEkuJCQuc21hcnRQdHJUeXBlP0kuJCQuc21hcnRQdHJUeXBlLm5hbWU6SS4kJC5wdHJUeXBlLm5hbWUpK1xcXCIgdG8gcGFyYW1ldGVyIHR5cGUgXFxcIit0aGlzLm5hbWUpO3ZhciBCPUkuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3M7aWYoZz1fQShJLiQkLnB0cixCLHRoaXMucmVnaXN0ZXJlZENsYXNzKSx0aGlzLmlzU21hcnRQb2ludGVyKXN3aXRjaCh2b2lkIDA9PT1JLiQkLnNtYXJ0UHRyJiZxQShcXFwiUGFzc2luZyByYXcgcG9pbnRlciB0byBzbWFydCBwb2ludGVyIGlzIGlsbGVnYWxcXFwiKSx0aGlzLnNoYXJpbmdQb2xpY3kpe2Nhc2UgMDpJLiQkLnNtYXJ0UHRyVHlwZT09PXRoaXM/Zz1JLiQkLnNtYXJ0UHRyOnFBKFxcXCJDYW5ub3QgY29udmVydCBhcmd1bWVudCBvZiB0eXBlIFxcXCIrKEkuJCQuc21hcnRQdHJUeXBlP0kuJCQuc21hcnRQdHJUeXBlLm5hbWU6SS4kJC5wdHJUeXBlLm5hbWUpK1xcXCIgdG8gcGFyYW1ldGVyIHR5cGUgXFxcIit0aGlzLm5hbWUpO2JyZWFrO2Nhc2UgMTpnPUkuJCQuc21hcnRQdHI7YnJlYWs7Y2FzZSAyOmlmKEkuJCQuc21hcnRQdHJUeXBlPT09dGhpcylnPUkuJCQuc21hcnRQdHI7ZWxzZXt2YXIgQz1JLmNsb25lKCk7Zz10aGlzLnJhd1NoYXJlKGcsdEkudG9IYW5kbGUoKGZ1bmN0aW9uKCl7Qy5kZWxldGUoKX0pKSksbnVsbCE9PUEmJkEucHVzaCh0aGlzLnJhd0Rlc3RydWN0b3IsZyl9YnJlYWs7ZGVmYXVsdDpxQShcXFwiVW5zdXBwb3J0aW5nIHNoYXJpbmcgcG9saWN5XFxcIil9cmV0dXJuIGd9ZnVuY3Rpb24gSUkoQSxJKXtpZihudWxsPT09SSlyZXR1cm4gdGhpcy5pc1JlZmVyZW5jZSYmcUEoXFxcIm51bGwgaXMgbm90IGEgdmFsaWQgXFxcIit0aGlzLm5hbWUpLDA7SS4kJHx8cUEoJ0Nhbm5vdCBwYXNzIFxcXCInK1JJKEkpKydcXFwiIGFzIGEgJyt0aGlzLm5hbWUpLEkuJCQucHRyfHxxQShcXFwiQ2Fubm90IHBhc3MgZGVsZXRlZCBvYmplY3QgYXMgYSBwb2ludGVyIG9mIHR5cGUgXFxcIit0aGlzLm5hbWUpLEkuJCQucHRyVHlwZS5pc0NvbnN0JiZxQShcXFwiQ2Fubm90IGNvbnZlcnQgYXJndW1lbnQgb2YgdHlwZSBcXFwiK0kuJCQucHRyVHlwZS5uYW1lK1xcXCIgdG8gcGFyYW1ldGVyIHR5cGUgXFxcIit0aGlzLm5hbWUpO3ZhciBnPUkuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3M7cmV0dXJuIF9BKEkuJCQucHRyLGcsdGhpcy5yZWdpc3RlcmVkQ2xhc3MpfWZ1bmN0aW9uIGdJKEEsSSxnLEIsQyxRLEUsaSxvLEQsYSl7dGhpcy5uYW1lPUEsdGhpcy5yZWdpc3RlcmVkQ2xhc3M9SSx0aGlzLmlzUmVmZXJlbmNlPWcsdGhpcy5pc0NvbnN0PUIsdGhpcy5pc1NtYXJ0UG9pbnRlcj1DLHRoaXMucG9pbnRlZVR5cGU9USx0aGlzLnNoYXJpbmdQb2xpY3k9RSx0aGlzLnJhd0dldFBvaW50ZWU9aSx0aGlzLnJhd0NvbnN0cnVjdG9yPW8sdGhpcy5yYXdTaGFyZT1ELHRoaXMucmF3RGVzdHJ1Y3Rvcj1hLEN8fHZvaWQgMCE9PUkuYmFzZUNsYXNzP3RoaXMudG9XaXJlVHlwZT1BSTpCPyh0aGlzLnRvV2lyZVR5cGU9JEEsdGhpcy5kZXN0cnVjdG9yRnVuY3Rpb249bnVsbCk6KHRoaXMudG9XaXJlVHlwZT1JSSx0aGlzLmRlc3RydWN0b3JGdW5jdGlvbj1udWxsKX1mdW5jdGlvbiBCSShJLGcsQil7QS5oYXNPd25Qcm9wZXJ0eShJKXx8SkEoXFxcIlJlcGxhY2luZyBub25leGlzdGFudCBwdWJsaWMgc3ltYm9sXFxcIiksdm9pZCAwIT09QVtJXS5vdmVybG9hZFRhYmxlJiZ2b2lkIDAhPT1CP0FbSV0ub3ZlcmxvYWRUYWJsZVtCXT1nOihBW0ldPWcsQVtJXS5hcmdDb3VudD1CKX1mdW5jdGlvbiBDSShBKXtyZXR1cm4gbS5nZXQoQSl9ZnVuY3Rpb24gUUkoSSxnLEIpe3JldHVybiBJLmluY2x1ZGVzKFxcXCJqXFxcIik/ZnVuY3Rpb24oSSxnLEIpe3ZhciBDPUFbXFxcImR5bkNhbGxfXFxcIitJXTtyZXR1cm4gQiYmQi5sZW5ndGg/Qy5hcHBseShudWxsLFtnXS5jb25jYXQoQikpOkMuY2FsbChudWxsLGcpfShJLGcsQik6Q0koZykuYXBwbHkobnVsbCxCKX1mdW5jdGlvbiBFSShBLEkpe3ZhciBnLEIsQyxRPShBPWRBKEEpKS5pbmNsdWRlcyhcXFwialxcXCIpPyhnPUEsQj1JLEM9W10sZnVuY3Rpb24oKXtyZXR1cm4gQy5sZW5ndGg9MCxPYmplY3QuYXNzaWduKEMsYXJndW1lbnRzKSxRSShnLEIsQyl9KTpDSShJKTtyZXR1cm5cXFwiZnVuY3Rpb25cXFwiIT10eXBlb2YgUSYmcUEoXFxcInVua25vd24gZnVuY3Rpb24gcG9pbnRlciB3aXRoIHNpZ25hdHVyZSBcXFwiK0ErXFxcIjogXFxcIitJKSxRfXZhciBpST12b2lkIDA7ZnVuY3Rpb24gb0koQSl7dmFyIEk9VkkoQSksZz1kQShJKTtyZXR1cm4gWkkoSSksZ31mdW5jdGlvbiBESShBLEkpe3ZhciBnPVtdLEI9e307dGhyb3cgSS5mb3JFYWNoKChmdW5jdGlvbiBBKEkpe0JbSV18fFNBW0ldfHwoTkFbSV0/TkFbSV0uZm9yRWFjaChBKTooZy5wdXNoKEkpLEJbSV09ITApKX0pKSxuZXcgaUkoQStcXFwiOiBcXFwiK2cubWFwKG9JKS5qb2luKFtcXFwiLCBcXFwiXSkpfWZ1bmN0aW9uIGFJKEEsSSl7Zm9yKHZhciBnPVtdLEI9MDtCPEE7QisrKWcucHVzaChkW0krNCpCPj4yXSk7cmV0dXJuIGd9ZnVuY3Rpb24gd0koQSxJLGcsQixDKXt2YXIgUT1JLmxlbmd0aDtRPDImJnFBKFxcXCJhcmdUeXBlcyBhcnJheSBzaXplIG1pc21hdGNoISBNdXN0IGF0IGxlYXN0IGdldCByZXR1cm4gdmFsdWUgYW5kICd0aGlzJyB0eXBlcyFcXFwiKTtmb3IodmFyIEU9bnVsbCE9PUlbMV0mJm51bGwhPT1nLGk9ITEsbz0xO288SS5sZW5ndGg7KytvKWlmKG51bGwhPT1JW29dJiZ2b2lkIDA9PT1JW29dLmRlc3RydWN0b3JGdW5jdGlvbil7aT0hMDticmVha312YXIgRD1cXFwidm9pZFxcXCIhPT1JWzBdLm5hbWUsYT1cXFwiXFxcIix3PVxcXCJcXFwiO2ZvcihvPTA7bzxRLTI7KytvKWErPSgwIT09bz9cXFwiLCBcXFwiOlxcXCJcXFwiKStcXFwiYXJnXFxcIitvLHcrPSgwIT09bz9cXFwiLCBcXFwiOlxcXCJcXFwiKStcXFwiYXJnXFxcIitvK1xcXCJXaXJlZFxcXCI7dmFyIHM9XFxcInJldHVybiBmdW5jdGlvbiBcXFwiK25BKEEpK1xcXCIoXFxcIithK1xcXCIpIHtcXFxcbmlmIChhcmd1bWVudHMubGVuZ3RoICE9PSBcXFwiKyhRLTIpK1xcXCIpIHtcXFxcbnRocm93QmluZGluZ0Vycm9yKCdmdW5jdGlvbiBcXFwiK0ErXFxcIiBjYWxsZWQgd2l0aCAnICsgYXJndW1lbnRzLmxlbmd0aCArICcgYXJndW1lbnRzLCBleHBlY3RlZCBcXFwiKyhRLTIpK1xcXCIgYXJncyEnKTtcXFxcbn1cXFxcblxcXCI7aSYmKHMrPVxcXCJ2YXIgZGVzdHJ1Y3RvcnMgPSBbXTtcXFxcblxcXCIpO3ZhciBHPWk/XFxcImRlc3RydWN0b3JzXFxcIjpcXFwibnVsbFxcXCIsaD1bXFxcInRocm93QmluZGluZ0Vycm9yXFxcIixcXFwiaW52b2tlclxcXCIsXFxcImZuXFxcIixcXFwicnVuRGVzdHJ1Y3RvcnNcXFwiLFxcXCJyZXRUeXBlXFxcIixcXFwiY2xhc3NQYXJhbVxcXCJdLHQ9W3FBLEIsQyxyQSxJWzBdLElbMV1dO2ZvcihFJiYocys9XFxcInZhciB0aGlzV2lyZWQgPSBjbGFzc1BhcmFtLnRvV2lyZVR5cGUoXFxcIitHK1xcXCIsIHRoaXMpO1xcXFxuXFxcIiksbz0wO288US0yOysrbylzKz1cXFwidmFyIGFyZ1xcXCIrbytcXFwiV2lyZWQgPSBhcmdUeXBlXFxcIitvK1xcXCIudG9XaXJlVHlwZShcXFwiK0crXFxcIiwgYXJnXFxcIitvK1xcXCIpOyAvLyBcXFwiK0lbbysyXS5uYW1lK1xcXCJcXFxcblxcXCIsaC5wdXNoKFxcXCJhcmdUeXBlXFxcIitvKSx0LnB1c2goSVtvKzJdKTtpZihFJiYodz1cXFwidGhpc1dpcmVkXFxcIisody5sZW5ndGg+MD9cXFwiLCBcXFwiOlxcXCJcXFwiKSt3KSxzKz0oRD9cXFwidmFyIHJ2ID0gXFxcIjpcXFwiXFxcIikrXFxcImludm9rZXIoZm5cXFwiKyh3Lmxlbmd0aD4wP1xcXCIsIFxcXCI6XFxcIlxcXCIpK3crXFxcIik7XFxcXG5cXFwiLGkpcys9XFxcInJ1bkRlc3RydWN0b3JzKGRlc3RydWN0b3JzKTtcXFxcblxcXCI7ZWxzZSBmb3Iobz1FPzE6MjtvPEkubGVuZ3RoOysrbyl7dmFyIFI9MT09PW8/XFxcInRoaXNXaXJlZFxcXCI6XFxcImFyZ1xcXCIrKG8tMikrXFxcIldpcmVkXFxcIjtudWxsIT09SVtvXS5kZXN0cnVjdG9yRnVuY3Rpb24mJihzKz1SK1xcXCJfZHRvcihcXFwiK1IrXFxcIik7IC8vIFxcXCIrSVtvXS5uYW1lK1xcXCJcXFxcblxcXCIsaC5wdXNoKFIrXFxcIl9kdG9yXFxcIiksdC5wdXNoKElbb10uZGVzdHJ1Y3RvckZ1bmN0aW9uKSl9cmV0dXJuIEQmJihzKz1cXFwidmFyIHJldCA9IHJldFR5cGUuZnJvbVdpcmVUeXBlKHJ2KTtcXFxcbnJldHVybiByZXQ7XFxcXG5cXFwiKSxzKz1cXFwifVxcXFxuXFxcIixoLnB1c2gocyksZnVuY3Rpb24oQSxJKXtpZighKEEgaW5zdGFuY2VvZiBGdW5jdGlvbikpdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwibmV3XyBjYWxsZWQgd2l0aCBjb25zdHJ1Y3RvciB0eXBlIFxcXCIrdHlwZW9mIEErXFxcIiB3aGljaCBpcyBub3QgYSBmdW5jdGlvblxcXCIpO3ZhciBnPWNBKEEubmFtZXx8XFxcInVua25vd25GdW5jdGlvbk5hbWVcXFwiLChmdW5jdGlvbigpe30pKTtnLnByb3RvdHlwZT1BLnByb3RvdHlwZTt2YXIgQj1uZXcgZyxDPUEuYXBwbHkoQixJKTtyZXR1cm4gQyBpbnN0YW5jZW9mIE9iamVjdD9DOkJ9KEZ1bmN0aW9uLGgpLmFwcGx5KG51bGwsdCl9dmFyIHNJPVtdLEdJPVt7fSx7dmFsdWU6dm9pZCAwfSx7dmFsdWU6bnVsbH0se3ZhbHVlOiEwfSx7dmFsdWU6ITF9XTtmdW5jdGlvbiBoSShBKXtBPjQmJjA9PS0tR0lbQV0ucmVmY291bnQmJihHSVtBXT12b2lkIDAsc0kucHVzaChBKSl9dmFyIHRJPXt0b1ZhbHVlOkE9PihBfHxxQShcXFwiQ2Fubm90IHVzZSBkZWxldGVkIHZhbC4gaGFuZGxlID0gXFxcIitBKSxHSVtBXS52YWx1ZSksdG9IYW5kbGU6QT0+e3N3aXRjaChBKXtjYXNlIHZvaWQgMDpyZXR1cm4gMTtjYXNlIG51bGw6cmV0dXJuIDI7Y2FzZSEwOnJldHVybiAzO2Nhc2UhMTpyZXR1cm4gNDtkZWZhdWx0OnZhciBJPXNJLmxlbmd0aD9zSS5wb3AoKTpHSS5sZW5ndGg7cmV0dXJuIEdJW0ldPXtyZWZjb3VudDoxLHZhbHVlOkF9LEl9fX07ZnVuY3Rpb24gUkkoQSl7aWYobnVsbD09PUEpcmV0dXJuXFxcIm51bGxcXFwiO3ZhciBJPXR5cGVvZiBBO3JldHVyblxcXCJvYmplY3RcXFwiPT09SXx8XFxcImFycmF5XFxcIj09PUl8fFxcXCJmdW5jdGlvblxcXCI9PT1JP0EudG9TdHJpbmcoKTpcXFwiXFxcIitBfWZ1bmN0aW9uIEZJKEEsSSl7c3dpdGNoKEkpe2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24oQSl7cmV0dXJuIHRoaXMuZnJvbVdpcmVUeXBlKGxbQT4+Ml0pfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKEEpe3JldHVybiB0aGlzLmZyb21XaXJlVHlwZShxW0E+PjNdKX07ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJVbmtub3duIGZsb2F0IHR5cGU6IFxcXCIrQSl9fWZ1bmN0aW9uIHlJKEEsSSxnKXtzd2l0Y2goSSl7Y2FzZSAwOnJldHVybiBnP2Z1bmN0aW9uKEEpe3JldHVybiBVW0FdfTpmdW5jdGlvbihBKXtyZXR1cm4gSltBXX07Y2FzZSAxOnJldHVybiBnP2Z1bmN0aW9uKEEpe3JldHVybiBLW0E+PjFdfTpmdW5jdGlvbihBKXtyZXR1cm4gWVtBPj4xXX07Y2FzZSAyOnJldHVybiBnP2Z1bmN0aW9uKEEpe3JldHVybiBMW0E+PjJdfTpmdW5jdGlvbihBKXtyZXR1cm4gZFtBPj4yXX07ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJVbmtub3duIGludGVnZXIgdHlwZTogXFxcIitBKX19dmFyIHJJPVxcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2YgVGV4dERlY29kZXI/bmV3IFRleHREZWNvZGVyKFxcXCJ1dGYtMTZsZVxcXCIpOnZvaWQgMDtmdW5jdGlvbiBNSShBLEkpe2Zvcih2YXIgZz1BLEI9Zz4+MSxDPUIrSS8yOyEoQj49QykmJllbQl07KSsrQjtpZigoZz1CPDwxKS1BPjMyJiZySSlyZXR1cm4gckkuZGVjb2RlKEouc3ViYXJyYXkoQSxnKSk7Zm9yKHZhciBRPVxcXCJcXFwiLEU9MDshKEU+PUkvMik7KytFKXt2YXIgaT1LW0ErMipFPj4xXTtpZigwPT1pKWJyZWFrO1ErPVN0cmluZy5mcm9tQ2hhckNvZGUoaSl9cmV0dXJuIFF9ZnVuY3Rpb24gZUkoQSxJLGcpe2lmKHZvaWQgMD09PWcmJihnPTIxNDc0ODM2NDcpLGc8MilyZXR1cm4gMDtmb3IodmFyIEI9SSxDPShnLT0yKTwyKkEubGVuZ3RoP2cvMjpBLmxlbmd0aCxRPTA7UTxDOysrUSl7dmFyIEU9QS5jaGFyQ29kZUF0KFEpO0tbST4+MV09RSxJKz0yfXJldHVybiBLW0k+PjFdPTAsSS1CfWZ1bmN0aW9uIFNJKEEpe3JldHVybiAyKkEubGVuZ3RofWZ1bmN0aW9uIE5JKEEsSSl7Zm9yKHZhciBnPTAsQj1cXFwiXFxcIjshKGc+PUkvNCk7KXt2YXIgQz1MW0ErNCpnPj4yXTtpZigwPT1DKWJyZWFrO2lmKCsrZyxDPj02NTUzNil7dmFyIFE9Qy02NTUzNjtCKz1TdHJpbmcuZnJvbUNoYXJDb2RlKDU1Mjk2fFE+PjEwLDU2MzIwfDEwMjMmUSl9ZWxzZSBCKz1TdHJpbmcuZnJvbUNoYXJDb2RlKEMpfXJldHVybiBCfWZ1bmN0aW9uIG5JKEEsSSxnKXtpZih2b2lkIDA9PT1nJiYoZz0yMTQ3NDgzNjQ3KSxnPDQpcmV0dXJuIDA7Zm9yKHZhciBCPUksQz1CK2ctNCxRPTA7UTxBLmxlbmd0aDsrK1Epe3ZhciBFPUEuY2hhckNvZGVBdChRKTtpZihFPj01NTI5NiYmRTw9NTczNDMmJihFPTY1NTM2KygoMTAyMyZFKTw8MTApfDEwMjMmQS5jaGFyQ29kZUF0KCsrUSkpLExbST4+Ml09RSwoSSs9NCkrND5DKWJyZWFrfXJldHVybiBMW0k+PjJdPTAsSS1CfWZ1bmN0aW9uIGNJKEEpe2Zvcih2YXIgST0wLGc9MDtnPEEubGVuZ3RoOysrZyl7dmFyIEI9QS5jaGFyQ29kZUF0KGcpO0I+PTU1Mjk2JiZCPD01NzM0MyYmKytnLEkrPTR9cmV0dXJuIEl9ZnVuY3Rpb24ga0koQSl7dmFyIEk9VyhBKSsxLGc9bUkoSSk7cmV0dXJuIGcmJnAoQSxVLGcsSSksZ312YXIgVUk9W107ZnVuY3Rpb24gSkkoQSl7dHJ5e3JldHVybiBTLmdyb3coQS1rLmJ5dGVMZW5ndGgrNjU1MzU+Pj4xNiksYihTLmJ1ZmZlciksMX1jYXRjaChBKXt9fXZhciBLST17fTtmdW5jdGlvbiBZSSgpe2lmKCFZSS5zdHJpbmdzKXt2YXIgQT17VVNFUjpcXFwid2ViX3VzZXJcXFwiLExPR05BTUU6XFxcIndlYl91c2VyXFxcIixQQVRIOlxcXCIvXFxcIixQV0Q6XFxcIi9cXFwiLEhPTUU6XFxcIi9ob21lL3dlYl91c2VyXFxcIixMQU5HOihcXFwib2JqZWN0XFxcIj09dHlwZW9mIG5hdmlnYXRvciYmbmF2aWdhdG9yLmxhbmd1YWdlcyYmbmF2aWdhdG9yLmxhbmd1YWdlc1swXXx8XFxcIkNcXFwiKS5yZXBsYWNlKFxcXCItXFxcIixcXFwiX1xcXCIpK1xcXCIuVVRGLThcXFwiLF86R3x8XFxcIi4vdGhpcy5wcm9ncmFtXFxcIn07Zm9yKHZhciBJIGluIEtJKXZvaWQgMD09PUtJW0ldP2RlbGV0ZSBBW0ldOkFbSV09S0lbSV07dmFyIGc9W107Zm9yKHZhciBJIGluIEEpZy5wdXNoKEkrXFxcIj1cXFwiK0FbSV0pO1lJLnN0cmluZ3M9Z31yZXR1cm4gWUkuc3RyaW5nc31mdW5jdGlvbiBMSShBKXtyZXR1cm4gQSU0PT0wJiYoQSUxMDAhPTB8fEElNDAwPT0wKX12YXIgZEk9WzMxLDI5LDMxLDMwLDMxLDMwLDMxLDMxLDMwLDMxLDMwLDMxXSxsST1bMzEsMjgsMzEsMzAsMzEsMzAsMzEsMzEsMzAsMzEsMzAsMzFdO2Z1bmN0aW9uIHFJKEEsSSxnLEIpe3ZhciBDPUxbQis0MD4+Ml0sUT17dG1fc2VjOkxbQj4+Ml0sdG1fbWluOkxbQis0Pj4yXSx0bV9ob3VyOkxbQis4Pj4yXSx0bV9tZGF5OkxbQisxMj4+Ml0sdG1fbW9uOkxbQisxNj4+Ml0sdG1feWVhcjpMW0IrMjA+PjJdLHRtX3dkYXk6TFtCKzI0Pj4yXSx0bV95ZGF5OkxbQisyOD4+Ml0sdG1faXNkc3Q6TFtCKzMyPj4yXSx0bV9nbXRvZmY6TFtCKzM2Pj4yXSx0bV96b25lOkM/dShDKTpcXFwiXFxcIn0sRT11KGcpLGk9e1xcXCIlY1xcXCI6XFxcIiVhICViICVkICVIOiVNOiVTICVZXFxcIixcXFwiJURcXFwiOlxcXCIlbS8lZC8leVxcXCIsXFxcIiVGXFxcIjpcXFwiJVktJW0tJWRcXFwiLFxcXCIlaFxcXCI6XFxcIiViXFxcIixcXFwiJXJcXFwiOlxcXCIlSTolTTolUyAlcFxcXCIsXFxcIiVSXFxcIjpcXFwiJUg6JU1cXFwiLFxcXCIlVFxcXCI6XFxcIiVIOiVNOiVTXFxcIixcXFwiJXhcXFwiOlxcXCIlbS8lZC8leVxcXCIsXFxcIiVYXFxcIjpcXFwiJUg6JU06JVNcXFwiLFxcXCIlRWNcXFwiOlxcXCIlY1xcXCIsXFxcIiVFQ1xcXCI6XFxcIiVDXFxcIixcXFwiJUV4XFxcIjpcXFwiJW0vJWQvJXlcXFwiLFxcXCIlRVhcXFwiOlxcXCIlSDolTTolU1xcXCIsXFxcIiVFeVxcXCI6XFxcIiV5XFxcIixcXFwiJUVZXFxcIjpcXFwiJVlcXFwiLFxcXCIlT2RcXFwiOlxcXCIlZFxcXCIsXFxcIiVPZVxcXCI6XFxcIiVlXFxcIixcXFwiJU9IXFxcIjpcXFwiJUhcXFwiLFxcXCIlT0lcXFwiOlxcXCIlSVxcXCIsXFxcIiVPbVxcXCI6XFxcIiVtXFxcIixcXFwiJU9NXFxcIjpcXFwiJU1cXFwiLFxcXCIlT1NcXFwiOlxcXCIlU1xcXCIsXFxcIiVPdVxcXCI6XFxcIiV1XFxcIixcXFwiJU9VXFxcIjpcXFwiJVVcXFwiLFxcXCIlT1ZcXFwiOlxcXCIlVlxcXCIsXFxcIiVPd1xcXCI6XFxcIiV3XFxcIixcXFwiJU9XXFxcIjpcXFwiJVdcXFwiLFxcXCIlT3lcXFwiOlxcXCIleVxcXCJ9O2Zvcih2YXIgbyBpbiBpKUU9RS5yZXBsYWNlKG5ldyBSZWdFeHAobyxcXFwiZ1xcXCIpLGlbb10pO3ZhciBEPVtcXFwiU3VuZGF5XFxcIixcXFwiTW9uZGF5XFxcIixcXFwiVHVlc2RheVxcXCIsXFxcIldlZG5lc2RheVxcXCIsXFxcIlRodXJzZGF5XFxcIixcXFwiRnJpZGF5XFxcIixcXFwiU2F0dXJkYXlcXFwiXSxhPVtcXFwiSmFudWFyeVxcXCIsXFxcIkZlYnJ1YXJ5XFxcIixcXFwiTWFyY2hcXFwiLFxcXCJBcHJpbFxcXCIsXFxcIk1heVxcXCIsXFxcIkp1bmVcXFwiLFxcXCJKdWx5XFxcIixcXFwiQXVndXN0XFxcIixcXFwiU2VwdGVtYmVyXFxcIixcXFwiT2N0b2JlclxcXCIsXFxcIk5vdmVtYmVyXFxcIixcXFwiRGVjZW1iZXJcXFwiXTtmdW5jdGlvbiB3KEEsSSxnKXtmb3IodmFyIEI9XFxcIm51bWJlclxcXCI9PXR5cGVvZiBBP0EudG9TdHJpbmcoKTpBfHxcXFwiXFxcIjtCLmxlbmd0aDxJOylCPWdbMF0rQjtyZXR1cm4gQn1mdW5jdGlvbiBzKEEsSSl7cmV0dXJuIHcoQSxJLFxcXCIwXFxcIil9ZnVuY3Rpb24gRyhBLEkpe2Z1bmN0aW9uIGcoQSl7cmV0dXJuIEE8MD8tMTpBPjA/MTowfXZhciBCO3JldHVybiAwPT09KEI9ZyhBLmdldEZ1bGxZZWFyKCktSS5nZXRGdWxsWWVhcigpKSkmJjA9PT0oQj1nKEEuZ2V0TW9udGgoKS1JLmdldE1vbnRoKCkpKSYmKEI9ZyhBLmdldERhdGUoKS1JLmdldERhdGUoKSkpLEJ9ZnVuY3Rpb24gaChBKXtzd2l0Y2goQS5nZXREYXkoKSl7Y2FzZSAwOnJldHVybiBuZXcgRGF0ZShBLmdldEZ1bGxZZWFyKCktMSwxMSwyOSk7Y2FzZSAxOnJldHVybiBBO2Nhc2UgMjpyZXR1cm4gbmV3IERhdGUoQS5nZXRGdWxsWWVhcigpLDAsMyk7Y2FzZSAzOnJldHVybiBuZXcgRGF0ZShBLmdldEZ1bGxZZWFyKCksMCwyKTtjYXNlIDQ6cmV0dXJuIG5ldyBEYXRlKEEuZ2V0RnVsbFllYXIoKSwwLDEpO2Nhc2UgNTpyZXR1cm4gbmV3IERhdGUoQS5nZXRGdWxsWWVhcigpLTEsMTEsMzEpO2Nhc2UgNjpyZXR1cm4gbmV3IERhdGUoQS5nZXRGdWxsWWVhcigpLTEsMTEsMzApfX1mdW5jdGlvbiB0KEEpe3ZhciBJPWZ1bmN0aW9uKEEsSSl7Zm9yKHZhciBnPW5ldyBEYXRlKEEuZ2V0VGltZSgpKTtJPjA7KXt2YXIgQj1MSShnLmdldEZ1bGxZZWFyKCkpLEM9Zy5nZXRNb250aCgpLFE9KEI/ZEk6bEkpW0NdO2lmKCEoST5RLWcuZ2V0RGF0ZSgpKSlyZXR1cm4gZy5zZXREYXRlKGcuZ2V0RGF0ZSgpK0kpLGc7SS09US1nLmdldERhdGUoKSsxLGcuc2V0RGF0ZSgxKSxDPDExP2cuc2V0TW9udGgoQysxKTooZy5zZXRNb250aCgwKSxnLnNldEZ1bGxZZWFyKGcuZ2V0RnVsbFllYXIoKSsxKSl9cmV0dXJuIGd9KG5ldyBEYXRlKEEudG1feWVhcisxOTAwLDAsMSksQS50bV95ZGF5KSxnPW5ldyBEYXRlKEkuZ2V0RnVsbFllYXIoKSwwLDQpLEI9bmV3IERhdGUoSS5nZXRGdWxsWWVhcigpKzEsMCw0KSxDPWgoZyksUT1oKEIpO3JldHVybiBHKEMsSSk8PTA/RyhRLEkpPD0wP0kuZ2V0RnVsbFllYXIoKSsxOkkuZ2V0RnVsbFllYXIoKTpJLmdldEZ1bGxZZWFyKCktMX12YXIgUj17XFxcIiVhXFxcIjpmdW5jdGlvbihBKXtyZXR1cm4gRFtBLnRtX3dkYXldLnN1YnN0cmluZygwLDMpfSxcXFwiJUFcXFwiOmZ1bmN0aW9uKEEpe3JldHVybiBEW0EudG1fd2RheV19LFxcXCIlYlxcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIGFbQS50bV9tb25dLnN1YnN0cmluZygwLDMpfSxcXFwiJUJcXFwiOmZ1bmN0aW9uKEEpe3JldHVybiBhW0EudG1fbW9uXX0sXFxcIiVDXFxcIjpmdW5jdGlvbihBKXtyZXR1cm4gcygoQS50bV95ZWFyKzE5MDApLzEwMHwwLDIpfSxcXFwiJWRcXFwiOmZ1bmN0aW9uKEEpe3JldHVybiBzKEEudG1fbWRheSwyKX0sXFxcIiVlXFxcIjpmdW5jdGlvbihBKXtyZXR1cm4gdyhBLnRtX21kYXksMixcXFwiIFxcXCIpfSxcXFwiJWdcXFwiOmZ1bmN0aW9uKEEpe3JldHVybiB0KEEpLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDIpfSxcXFwiJUdcXFwiOmZ1bmN0aW9uKEEpe3JldHVybiB0KEEpfSxcXFwiJUhcXFwiOmZ1bmN0aW9uKEEpe3JldHVybiBzKEEudG1faG91ciwyKX0sXFxcIiVJXFxcIjpmdW5jdGlvbihBKXt2YXIgST1BLnRtX2hvdXI7cmV0dXJuIDA9PUk/ST0xMjpJPjEyJiYoSS09MTIpLHMoSSwyKX0sXFxcIiVqXFxcIjpmdW5jdGlvbihBKXtyZXR1cm4gcyhBLnRtX21kYXkrZnVuY3Rpb24oQSxJKXtmb3IodmFyIGc9MCxCPTA7Qjw9STtnKz1BW0IrK10pO3JldHVybiBnfShMSShBLnRtX3llYXIrMTkwMCk/ZEk6bEksQS50bV9tb24tMSksMyl9LFxcXCIlbVxcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIHMoQS50bV9tb24rMSwyKX0sXFxcIiVNXFxcIjpmdW5jdGlvbihBKXtyZXR1cm4gcyhBLnRtX21pbiwyKX0sXFxcIiVuXFxcIjpmdW5jdGlvbigpe3JldHVyblxcXCJcXFxcblxcXCJ9LFxcXCIlcFxcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIEEudG1faG91cj49MCYmQS50bV9ob3VyPDEyP1xcXCJBTVxcXCI6XFxcIlBNXFxcIn0sXFxcIiVTXFxcIjpmdW5jdGlvbihBKXtyZXR1cm4gcyhBLnRtX3NlYywyKX0sXFxcIiV0XFxcIjpmdW5jdGlvbigpe3JldHVyblxcXCJcXFxcdFxcXCJ9LFxcXCIldVxcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIEEudG1fd2RheXx8N30sXFxcIiVVXFxcIjpmdW5jdGlvbihBKXt2YXIgST1BLnRtX3lkYXkrNy1BLnRtX3dkYXk7cmV0dXJuIHMoTWF0aC5mbG9vcihJLzcpLDIpfSxcXFwiJVZcXFwiOmZ1bmN0aW9uKEEpe3ZhciBJPU1hdGguZmxvb3IoKEEudG1feWRheSs3LShBLnRtX3dkYXkrNiklNykvNyk7aWYoKEEudG1fd2RheSszNzEtQS50bV95ZGF5LTIpJTc8PTImJkkrKyxJKXtpZig1Mz09SSl7dmFyIGc9KEEudG1fd2RheSszNzEtQS50bV95ZGF5KSU3OzQ9PWd8fDM9PWcmJkxJKEEudG1feWVhcil8fChJPTEpfX1lbHNle0k9NTI7dmFyIEI9KEEudG1fd2RheSs3LUEudG1feWRheS0xKSU3Oyg0PT1CfHw1PT1CJiZMSShBLnRtX3llYXIlNDAwLTEpKSYmSSsrfXJldHVybiBzKEksMil9LFxcXCIld1xcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIEEudG1fd2RheX0sXFxcIiVXXFxcIjpmdW5jdGlvbihBKXt2YXIgST1BLnRtX3lkYXkrNy0oQS50bV93ZGF5KzYpJTc7cmV0dXJuIHMoTWF0aC5mbG9vcihJLzcpLDIpfSxcXFwiJXlcXFwiOmZ1bmN0aW9uKEEpe3JldHVybihBLnRtX3llYXIrMTkwMCkudG9TdHJpbmcoKS5zdWJzdHJpbmcoMil9LFxcXCIlWVxcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIEEudG1feWVhcisxOTAwfSxcXFwiJXpcXFwiOmZ1bmN0aW9uKEEpe3ZhciBJPUEudG1fZ210b2ZmLGc9ST49MDtyZXR1cm4gST0oST1NYXRoLmFicyhJKS82MCkvNjAqMTAwK0klNjAsKGc/XFxcIitcXFwiOlxcXCItXFxcIikrU3RyaW5nKFxcXCIwMDAwXFxcIitJKS5zbGljZSgtNCl9LFxcXCIlWlxcXCI6ZnVuY3Rpb24oQSl7cmV0dXJuIEEudG1fem9uZX0sXFxcIiUlXFxcIjpmdW5jdGlvbigpe3JldHVyblxcXCIlXFxcIn19O2Zvcih2YXIgbyBpbiBFPUUucmVwbGFjZSgvJSUvZyxcXFwiXFxcXDBcXFxcMFxcXCIpLFIpRS5pbmNsdWRlcyhvKSYmKEU9RS5yZXBsYWNlKG5ldyBSZWdFeHAobyxcXFwiZ1xcXCIpLFJbb10oUSkpKTt2YXIgRj1zQShFPUUucmVwbGFjZSgvXFxcXDBcXFxcMC9nLFxcXCIlXFxcIiksITEpO3JldHVybiBGLmxlbmd0aD5JPzA6KGZ1bmN0aW9uKEEsSSl7VS5zZXQoQSxJKX0oRixBKSxGLmxlbmd0aC0xKX12YXIgSEk9ZnVuY3Rpb24oQSxJLGcsQil7QXx8KEE9dGhpcyksdGhpcy5wYXJlbnQ9QSx0aGlzLm1vdW50PUEubW91bnQsdGhpcy5tb3VudGVkPW51bGwsdGhpcy5pZD1SQS5uZXh0SW5vZGUrKyx0aGlzLm5hbWU9SSx0aGlzLm1vZGU9Zyx0aGlzLm5vZGVfb3BzPXt9LHRoaXMuc3RyZWFtX29wcz17fSx0aGlzLnJkZXY9Qn07T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoSEkucHJvdG90eXBlLHtyZWFkOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMzY1PT0oMzY1JnRoaXMubW9kZSl9LHNldDpmdW5jdGlvbihBKXtBP3RoaXMubW9kZXw9MzY1OnRoaXMubW9kZSY9LTM2Nn19LHdyaXRlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMTQ2PT0oMTQ2JnRoaXMubW9kZSl9LHNldDpmdW5jdGlvbihBKXtBP3RoaXMubW9kZXw9MTQ2OnRoaXMubW9kZSY9LTE0N319LGlzRm9sZGVyOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUkEuaXNEaXIodGhpcy5tb2RlKX19LGlzRGV2aWNlOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gUkEuaXNDaHJkZXYodGhpcy5tb2RlKX19fSksUkEuRlNOb2RlPUhJLFJBLnN0YXRpY0luaXQoKSxVQT1BLkludGVybmFsRXJyb3I9a0EoRXJyb3IsXFxcIkludGVybmFsRXJyb3JcXFwiKSxmdW5jdGlvbigpe2Zvcih2YXIgQT1uZXcgQXJyYXkoMjU2KSxJPTA7STwyNTY7KytJKUFbSV09U3RyaW5nLmZyb21DaGFyQ29kZShJKTtMQT1BfSgpLGxBPUEuQmluZGluZ0Vycm9yPWtBKEVycm9yLFxcXCJCaW5kaW5nRXJyb3JcXFwiKSxqQS5wcm90b3R5cGUuaXNBbGlhc09mPWZ1bmN0aW9uKEEpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGpBKSlyZXR1cm4hMTtpZighKEEgaW5zdGFuY2VvZiBqQSkpcmV0dXJuITE7Zm9yKHZhciBJPXRoaXMuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3MsZz10aGlzLiQkLnB0cixCPUEuJCQucHRyVHlwZS5yZWdpc3RlcmVkQ2xhc3MsQz1BLiQkLnB0cjtJLmJhc2VDbGFzczspZz1JLnVwY2FzdChnKSxJPUkuYmFzZUNsYXNzO2Zvcig7Qi5iYXNlQ2xhc3M7KUM9Qi51cGNhc3QoQyksQj1CLmJhc2VDbGFzcztyZXR1cm4gST09PUImJmc9PT1DfSxqQS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXtpZih0aGlzLiQkLnB0cnx8ZkEodGhpcyksdGhpcy4kJC5wcmVzZXJ2ZVBvaW50ZXJPbkRlbGV0ZSlyZXR1cm4gdGhpcy4kJC5jb3VudC52YWx1ZSs9MSx0aGlzO3ZhciBBLEk9T0EoT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykseyQkOnt2YWx1ZTooQT10aGlzLiQkLHtjb3VudDpBLmNvdW50LGRlbGV0ZVNjaGVkdWxlZDpBLmRlbGV0ZVNjaGVkdWxlZCxwcmVzZXJ2ZVBvaW50ZXJPbkRlbGV0ZTpBLnByZXNlcnZlUG9pbnRlck9uRGVsZXRlLHB0cjpBLnB0cixwdHJUeXBlOkEucHRyVHlwZSxzbWFydFB0cjpBLnNtYXJ0UHRyLHNtYXJ0UHRyVHlwZTpBLnNtYXJ0UHRyVHlwZX0pfX0pKTtyZXR1cm4gSS4kJC5jb3VudC52YWx1ZSs9MSxJLiQkLmRlbGV0ZVNjaGVkdWxlZD0hMSxJfSxqQS5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKCl7dGhpcy4kJC5wdHJ8fGZBKHRoaXMpLHRoaXMuJCQuZGVsZXRlU2NoZWR1bGVkJiYhdGhpcy4kJC5wcmVzZXJ2ZVBvaW50ZXJPbkRlbGV0ZSYmcUEoXFxcIk9iamVjdCBhbHJlYWR5IHNjaGVkdWxlZCBmb3IgZGVsZXRpb25cXFwiKSxwQSh0aGlzKSxXQSh0aGlzLiQkKSx0aGlzLiQkLnByZXNlcnZlUG9pbnRlck9uRGVsZXRlfHwodGhpcy4kJC5zbWFydFB0cj12b2lkIDAsdGhpcy4kJC5wdHI9dm9pZCAwKX0sakEucHJvdG90eXBlLmlzRGVsZXRlZD1mdW5jdGlvbigpe3JldHVybiF0aGlzLiQkLnB0cn0sakEucHJvdG90eXBlLmRlbGV0ZUxhdGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJCQucHRyfHxmQSh0aGlzKSx0aGlzLiQkLmRlbGV0ZVNjaGVkdWxlZCYmIXRoaXMuJCQucHJlc2VydmVQb2ludGVyT25EZWxldGUmJnFBKFxcXCJPYmplY3QgYWxyZWFkeSBzY2hlZHVsZWQgZm9yIGRlbGV0aW9uXFxcIiksWkEucHVzaCh0aGlzKSwxPT09WkEubGVuZ3RoJiZWQSYmVkEoeEEpLHRoaXMuJCQuZGVsZXRlU2NoZWR1bGVkPSEwLHRoaXN9LEEuZ2V0SW5oZXJpdGVkSW5zdGFuY2VDb3VudD1mdW5jdGlvbigpe3JldHVybiBPYmplY3Qua2V5cyhUQSkubGVuZ3RofSxBLmdldExpdmVJbmhlcml0ZWRJbnN0YW5jZXM9ZnVuY3Rpb24oKXt2YXIgQT1bXTtmb3IodmFyIEkgaW4gVEEpVEEuaGFzT3duUHJvcGVydHkoSSkmJkEucHVzaChUQVtJXSk7cmV0dXJuIEF9LEEuZmx1c2hQZW5kaW5nRGVsZXRlcz14QSxBLnNldERlbGF5RnVuY3Rpb249ZnVuY3Rpb24oQSl7VkE9QSxaQS5sZW5ndGgmJlZBJiZWQSh4QSl9LGdJLnByb3RvdHlwZS5nZXRQb2ludGVlPWZ1bmN0aW9uKEEpe3JldHVybiB0aGlzLnJhd0dldFBvaW50ZWUmJihBPXRoaXMucmF3R2V0UG9pbnRlZShBKSksQX0sZ0kucHJvdG90eXBlLmRlc3RydWN0b3I9ZnVuY3Rpb24oQSl7dGhpcy5yYXdEZXN0cnVjdG9yJiZ0aGlzLnJhd0Rlc3RydWN0b3IoQSl9LGdJLnByb3RvdHlwZS5hcmdQYWNrQWR2YW5jZT04LGdJLnByb3RvdHlwZS5yZWFkVmFsdWVGcm9tUG9pbnRlcj1NQSxnSS5wcm90b3R5cGUuZGVsZXRlT2JqZWN0PWZ1bmN0aW9uKEEpe251bGwhPT1BJiZBLmRlbGV0ZSgpfSxnSS5wcm90b3R5cGUuZnJvbVdpcmVUeXBlPWZ1bmN0aW9uKEEpe3ZhciBJPXRoaXMuZ2V0UG9pbnRlZShBKTtpZighSSlyZXR1cm4gdGhpcy5kZXN0cnVjdG9yKEEpLG51bGw7dmFyIGc9ZnVuY3Rpb24oQSxJKXtyZXR1cm4gST1mdW5jdGlvbihBLEkpe2Zvcih2b2lkIDA9PT1JJiZxQShcXFwicHRyIHNob3VsZCBub3QgYmUgdW5kZWZpbmVkXFxcIik7QS5iYXNlQ2xhc3M7KUk9QS51cGNhc3QoSSksQT1BLmJhc2VDbGFzcztyZXR1cm4gSX0oQSxJKSxUQVtJXX0odGhpcy5yZWdpc3RlcmVkQ2xhc3MsSSk7aWYodm9pZCAwIT09Zyl7aWYoMD09PWcuJCQuY291bnQudmFsdWUpcmV0dXJuIGcuJCQucHRyPUksZy4kJC5zbWFydFB0cj1BLGcuY2xvbmUoKTt2YXIgQj1nLmNsb25lKCk7cmV0dXJuIHRoaXMuZGVzdHJ1Y3RvcihBKSxCfWZ1bmN0aW9uIEMoKXtyZXR1cm4gdGhpcy5pc1NtYXJ0UG9pbnRlcj9YQSh0aGlzLnJlZ2lzdGVyZWRDbGFzcy5pbnN0YW5jZVByb3RvdHlwZSx7cHRyVHlwZTp0aGlzLnBvaW50ZWVUeXBlLHB0cjpJLHNtYXJ0UHRyVHlwZTp0aGlzLHNtYXJ0UHRyOkF9KTpYQSh0aGlzLnJlZ2lzdGVyZWRDbGFzcy5pbnN0YW5jZVByb3RvdHlwZSx7cHRyVHlwZTp0aGlzLHB0cjpBfSl9dmFyIFEsRT10aGlzLnJlZ2lzdGVyZWRDbGFzcy5nZXRBY3R1YWxUeXBlKEkpLGk9bUFbRV07aWYoIWkpcmV0dXJuIEMuY2FsbCh0aGlzKTtRPXRoaXMuaXNDb25zdD9pLmNvbnN0UG9pbnRlclR5cGU6aS5wb2ludGVyVHlwZTt2YXIgbz1iQShJLHRoaXMucmVnaXN0ZXJlZENsYXNzLFEucmVnaXN0ZXJlZENsYXNzKTtyZXR1cm4gbnVsbD09PW8/Qy5jYWxsKHRoaXMpOnRoaXMuaXNTbWFydFBvaW50ZXI/WEEoUS5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUse3B0clR5cGU6USxwdHI6byxzbWFydFB0clR5cGU6dGhpcyxzbWFydFB0cjpBfSk6WEEoUS5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUse3B0clR5cGU6USxwdHI6b30pfSxpST1BLlVuYm91bmRUeXBlRXJyb3I9a0EoRXJyb3IsXFxcIlVuYm91bmRUeXBlRXJyb3JcXFwiKSxBLmNvdW50X2VtdmFsX2hhbmRsZXM9ZnVuY3Rpb24oKXtmb3IodmFyIEE9MCxJPTU7STxHSS5sZW5ndGg7KytJKXZvaWQgMCE9PUdJW0ldJiYrK0E7cmV0dXJuIEF9LEEuZ2V0X2ZpcnN0X2VtdmFsPWZ1bmN0aW9uKCl7Zm9yKHZhciBBPTU7QTxHSS5sZW5ndGg7KytBKWlmKHZvaWQgMCE9PUdJW0FdKXJldHVybiBHSVtBXTtyZXR1cm4gbnVsbH07dmFyIGZJPSExLHVJPVxcXCJmdW5jdGlvblxcXCI9PXR5cGVvZiBhdG9iP2F0b2I6ZnVuY3Rpb24oQSl7dmFyIEksZyxCLEMsUSxFLGk9XFxcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89XFxcIixvPVxcXCJcXFwiLEQ9MDtBPUEucmVwbGFjZSgvW15BLVphLXowLTlcXFxcK1xcXFwvXFxcXD1dL2csXFxcIlxcXCIpO2Rve0k9aS5pbmRleE9mKEEuY2hhckF0KEQrKykpPDwyfChDPWkuaW5kZXhPZihBLmNoYXJBdChEKyspKSk+PjQsZz0oMTUmQyk8PDR8KFE9aS5pbmRleE9mKEEuY2hhckF0KEQrKykpKT4+MixCPSgzJlEpPDw2fChFPWkuaW5kZXhPZihBLmNoYXJBdChEKyspKSksbys9U3RyaW5nLmZyb21DaGFyQ29kZShJKSw2NCE9PVEmJihvKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGcpKSw2NCE9PUUmJihvKz1TdHJpbmcuZnJvbUNoYXJDb2RlKEIpKX13aGlsZShEPEEubGVuZ3RoKTtyZXR1cm4gb307ZnVuY3Rpb24gcEkoQSl7aWYoQkEoQSkpcmV0dXJuIGZ1bmN0aW9uKEEpe2lmKFxcXCJib29sZWFuXFxcIj09dHlwZW9mIEYmJkYpe3ZhciBJPUJ1ZmZlci5mcm9tKEEsXFxcImJhc2U2NFxcXCIpO3JldHVybiBuZXcgVWludDhBcnJheShJLmJ1ZmZlcixJLmJ5dGVPZmZzZXQsSS5ieXRlTGVuZ3RoKX10cnl7Zm9yKHZhciBnPXVJKEEpLEI9bmV3IFVpbnQ4QXJyYXkoZy5sZW5ndGgpLEM9MDtDPGcubGVuZ3RoOysrQylCW0NdPWcuY2hhckNvZGVBdChDKTtyZXR1cm4gQn1jYXRjaChBKXt0aHJvdyBuZXcgRXJyb3IoXFxcIkNvbnZlcnRpbmcgYmFzZTY0IHN0cmluZyB0byBieXRlcyBmYWlsZWQuXFxcIil9fShBLnNsaWNlKGdBLmxlbmd0aCkpfXZhciBXSSxiST17aDpmdW5jdGlvbihBKXtyZXR1cm4gbUkoQSsyNCkrMjR9LGc6ZnVuY3Rpb24oQSxJLGcpe3Rocm93IG5ldyBEQShBKS5pbml0KEksZyksQX0scjpmdW5jdGlvbihBLEksZyl7RkEudmFyYXJncz1nO3RyeXt2YXIgQj1GQS5nZXRTdHJlYW1Gcm9tRkQoQSk7c3dpdGNoKEkpe2Nhc2UgMDpyZXR1cm4oQz1GQS5nZXQoKSk8MD8tMjg6UkEuY3JlYXRlU3RyZWFtKEIsQykuZmQ7Y2FzZSAxOmNhc2UgMjpjYXNlIDY6Y2FzZSA3OnJldHVybiAwO2Nhc2UgMzpyZXR1cm4gQi5mbGFncztjYXNlIDQ6dmFyIEM9RkEuZ2V0KCk7cmV0dXJuIEIuZmxhZ3N8PUMsMDtjYXNlIDU6cmV0dXJuIEM9RkEuZ2V0KCksS1tDKzA+PjFdPTIsMDtjYXNlIDE2OmNhc2UgODpkZWZhdWx0OnJldHVybi0yODtjYXNlIDk6cmV0dXJuIExbeEkoKT4+Ml09MjgsLTF9fWNhdGNoKEEpe2lmKHZvaWQgMD09PVJBfHwhKEEgaW5zdGFuY2VvZiBSQS5FcnJub0Vycm9yKSl0aHJvdyBBO3JldHVybi1BLmVycm5vfX0sSjpmdW5jdGlvbihBLEksZyl7RkEudmFyYXJncz1nO3RyeXt2YXIgQj1GQS5nZXRTdHJlYW1Gcm9tRkQoQSk7c3dpdGNoKEkpe2Nhc2UgMjE1MDk6Y2FzZSAyMTUwNTpjYXNlIDIxNTEwOmNhc2UgMjE1MTE6Y2FzZSAyMTUxMjpjYXNlIDIxNTA2OmNhc2UgMjE1MDc6Y2FzZSAyMTUwODpjYXNlIDIxNTIzOmNhc2UgMjE1MjQ6cmV0dXJuIEIudHR5PzA6LTU5O2Nhc2UgMjE1MTk6aWYoIUIudHR5KXJldHVybi01OTt2YXIgQz1GQS5nZXQoKTtyZXR1cm4gTFtDPj4yXT0wLDA7Y2FzZSAyMTUyMDpyZXR1cm4gQi50dHk/LTI4Oi01OTtjYXNlIDIxNTMxOnJldHVybiBDPUZBLmdldCgpLFJBLmlvY3RsKEIsSSxDKTtkZWZhdWx0OnJldHVybi0yOH19Y2F0Y2goQSl7aWYodm9pZCAwPT09UkF8fCEoQSBpbnN0YW5jZW9mIFJBLkVycm5vRXJyb3IpKXRocm93IEE7cmV0dXJuLUEuZXJybm99fSxLOmZ1bmN0aW9uKEEsSSxnLEIpe0ZBLnZhcmFyZ3M9Qjt0cnl7ST1GQS5nZXRTdHIoSSksST1GQS5jYWxjdWxhdGVBdChBLEkpO3ZhciBDPUI/RkEuZ2V0KCk6MDtyZXR1cm4gUkEub3BlbihJLGcsQykuZmR9Y2F0Y2goQSl7aWYodm9pZCAwPT09UkF8fCEoQSBpbnN0YW5jZW9mIFJBLkVycm5vRXJyb3IpKXRocm93IEE7cmV0dXJuLUEuZXJybm99fSxTOmZ1bmN0aW9uKEEpe3ZhciBJPXlBW0FdO2RlbGV0ZSB5QVtBXTt2YXIgZz1JLnJhd0NvbnN0cnVjdG9yLEI9SS5yYXdEZXN0cnVjdG9yLEM9SS5maWVsZHM7S0EoW0FdLEMubWFwKChBPT5BLmdldHRlclJldHVyblR5cGUpKS5jb25jYXQoQy5tYXAoKEE9PkEuc2V0dGVyQXJndW1lbnRUeXBlKSkpLChBPT57dmFyIFE9e307cmV0dXJuIEMuZm9yRWFjaCgoKEksZyk9Pnt2YXIgQj1JLmZpZWxkTmFtZSxFPUFbZ10saT1JLmdldHRlcixvPUkuZ2V0dGVyQ29udGV4dCxEPUFbZytDLmxlbmd0aF0sYT1JLnNldHRlcix3PUkuc2V0dGVyQ29udGV4dDtRW0JdPXtyZWFkOkE9PkUuZnJvbVdpcmVUeXBlKGkobyxBKSksd3JpdGU6KEEsSSk9Pnt2YXIgZz1bXTthKHcsQSxELnRvV2lyZVR5cGUoZyxJKSksckEoZyl9fX0pKSxbe25hbWU6SS5uYW1lLGZyb21XaXJlVHlwZTpmdW5jdGlvbihBKXt2YXIgST17fTtmb3IodmFyIGcgaW4gUSlJW2ddPVFbZ10ucmVhZChBKTtyZXR1cm4gQihBKSxJfSx0b1dpcmVUeXBlOmZ1bmN0aW9uKEEsSSl7Zm9yKHZhciBDIGluIFEpaWYoIShDIGluIEkpKXRocm93IG5ldyBUeXBlRXJyb3IoJ01pc3NpbmcgZmllbGQ6ICBcXFwiJytDKydcXFwiJyk7dmFyIEU9ZygpO2ZvcihDIGluIFEpUVtDXS53cml0ZShFLElbQ10pO3JldHVybiBudWxsIT09QSYmQS5wdXNoKEIsRSksRX0sYXJnUGFja0FkdmFuY2U6OCxyZWFkVmFsdWVGcm9tUG9pbnRlcjpNQSxkZXN0cnVjdG9yRnVuY3Rpb246Qn1dfSkpfSxCOmZ1bmN0aW9uKEEsSSxnLEIsQyl7fSxPOmZ1bmN0aW9uKEEsSSxnLEIsQyl7dmFyIFE9WUEoZyk7SEEoQSx7bmFtZTpJPWRBKEkpLGZyb21XaXJlVHlwZTpmdW5jdGlvbihBKXtyZXR1cm4hIUF9LHRvV2lyZVR5cGU6ZnVuY3Rpb24oQSxJKXtyZXR1cm4gST9COkN9LGFyZ1BhY2tBZHZhbmNlOjgscmVhZFZhbHVlRnJvbVBvaW50ZXI6ZnVuY3Rpb24oQSl7dmFyIEI7aWYoMT09PWcpQj1VO2Vsc2UgaWYoMj09PWcpQj1LO2Vsc2V7aWYoNCE9PWcpdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwiVW5rbm93biBib29sZWFuIHR5cGUgc2l6ZTogXFxcIitJKTtCPUx9cmV0dXJuIHRoaXMuZnJvbVdpcmVUeXBlKEJbQT4+UV0pfSxkZXN0cnVjdG9yRnVuY3Rpb246bnVsbH0pfSxvOmZ1bmN0aW9uKEEsSSxnLEIsQyxRLEUsaSxvLEQsYSx3LHMpe2E9ZEEoYSksUT1FSShDLFEpLGkmJihpPUVJKEUsaSkpLEQmJihEPUVJKG8sRCkpLHM9RUkodyxzKTt2YXIgRz1uQShhKTtQQShHLChmdW5jdGlvbigpe0RJKFxcXCJDYW5ub3QgY29uc3RydWN0IFxcXCIrYStcXFwiIGR1ZSB0byB1bmJvdW5kIHR5cGVzXFxcIixbQl0pfSkpLEtBKFtBLEksZ10sQj9bQl06W10sKGZ1bmN0aW9uKEkpe3ZhciBnLEM7ST1JWzBdLEM9Qj8oZz1JLnJlZ2lzdGVyZWRDbGFzcykuaW5zdGFuY2VQcm90b3R5cGU6akEucHJvdG90eXBlO3ZhciBFPWNBKEcsKGZ1bmN0aW9uKCl7aWYoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpIT09byl0aHJvdyBuZXcgbEEoXFxcIlVzZSAnbmV3JyB0byBjb25zdHJ1Y3QgXFxcIithKTtpZih2b2lkIDA9PT13LmNvbnN0cnVjdG9yX2JvZHkpdGhyb3cgbmV3IGxBKGErXFxcIiBoYXMgbm8gYWNjZXNzaWJsZSBjb25zdHJ1Y3RvclxcXCIpO3ZhciBBPXcuY29uc3RydWN0b3JfYm9keVthcmd1bWVudHMubGVuZ3RoXTtpZih2b2lkIDA9PT1BKXRocm93IG5ldyBsQShcXFwiVHJpZWQgdG8gaW52b2tlIGN0b3Igb2YgXFxcIithK1xcXCIgd2l0aCBpbnZhbGlkIG51bWJlciBvZiBwYXJhbWV0ZXJzIChcXFwiK2FyZ3VtZW50cy5sZW5ndGgrXFxcIikgLSBleHBlY3RlZCAoXFxcIitPYmplY3Qua2V5cyh3LmNvbnN0cnVjdG9yX2JvZHkpLnRvU3RyaW5nKCkrXFxcIikgcGFyYW1ldGVycyBpbnN0ZWFkIVxcXCIpO3JldHVybiBBLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pKSxvPU9iamVjdC5jcmVhdGUoQyx7Y29uc3RydWN0b3I6e3ZhbHVlOkV9fSk7RS5wcm90b3R5cGU9bzt2YXIgdz1uZXcgekEoYSxFLG8scyxnLFEsaSxEKSxoPW5ldyBnSShhLHcsITAsITEsITEpLHQ9bmV3IGdJKGErXFxcIipcXFwiLHcsITEsITEsITEpLFI9bmV3IGdJKGErXFxcIiBjb25zdCpcXFwiLHcsITEsITAsITEpO3JldHVybiBtQVtBXT17cG9pbnRlclR5cGU6dCxjb25zdFBvaW50ZXJUeXBlOlJ9LEJJKEcsRSksW2gsdCxSXX0pKX0sbjpmdW5jdGlvbihBLEksZyxCLEMsUSl7YyhJPjApO3ZhciBFPWFJKEksZyk7Qz1FSShCLEMpLEtBKFtdLFtBXSwoZnVuY3Rpb24oQSl7dmFyIGc9XFxcImNvbnN0cnVjdG9yIFxcXCIrKEE9QVswXSkubmFtZTtpZih2b2lkIDA9PT1BLnJlZ2lzdGVyZWRDbGFzcy5jb25zdHJ1Y3Rvcl9ib2R5JiYoQS5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keT1bXSksdm9pZCAwIT09QS5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keVtJLTFdKXRocm93IG5ldyBsQShcXFwiQ2Fubm90IHJlZ2lzdGVyIG11bHRpcGxlIGNvbnN0cnVjdG9ycyB3aXRoIGlkZW50aWNhbCBudW1iZXIgb2YgcGFyYW1ldGVycyAoXFxcIisoSS0xKStcXFwiKSBmb3IgY2xhc3MgJ1xcXCIrQS5uYW1lK1xcXCInISBPdmVybG9hZCByZXNvbHV0aW9uIGlzIGN1cnJlbnRseSBvbmx5IHBlcmZvcm1lZCB1c2luZyB0aGUgcGFyYW1ldGVyIGNvdW50LCBub3QgYWN0dWFsIHR5cGUgaW5mbyFcXFwiKTtyZXR1cm4gQS5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keVtJLTFdPSgpPT57REkoXFxcIkNhbm5vdCBjb25zdHJ1Y3QgXFxcIitBLm5hbWUrXFxcIiBkdWUgdG8gdW5ib3VuZCB0eXBlc1xcXCIsRSl9LEtBKFtdLEUsKGZ1bmN0aW9uKEIpe3JldHVybiBCLnNwbGljZSgxLDAsbnVsbCksQS5yZWdpc3RlcmVkQ2xhc3MuY29uc3RydWN0b3JfYm9keVtJLTFdPXdJKGcsQixudWxsLEMsUSksW119KSksW119KSl9LGQ6ZnVuY3Rpb24oQSxJLGcsQixDLFEsRSxpKXt2YXIgbz1hSShnLEIpO0k9ZEEoSSksUT1FSShDLFEpLEtBKFtdLFtBXSwoZnVuY3Rpb24oQSl7dmFyIEI9KEE9QVswXSkubmFtZStcXFwiLlxcXCIrSTtmdW5jdGlvbiBDKCl7REkoXFxcIkNhbm5vdCBjYWxsIFxcXCIrQitcXFwiIGR1ZSB0byB1bmJvdW5kIHR5cGVzXFxcIixvKX1JLnN0YXJ0c1dpdGgoXFxcIkBAXFxcIikmJihJPVN5bWJvbFtJLnN1YnN0cmluZygyKV0pLGkmJkEucmVnaXN0ZXJlZENsYXNzLnB1cmVWaXJ0dWFsRnVuY3Rpb25zLnB1c2goSSk7dmFyIEQ9QS5yZWdpc3RlcmVkQ2xhc3MuaW5zdGFuY2VQcm90b3R5cGUsYT1EW0ldO3JldHVybiB2b2lkIDA9PT1hfHx2b2lkIDA9PT1hLm92ZXJsb2FkVGFibGUmJmEuY2xhc3NOYW1lIT09QS5uYW1lJiZhLmFyZ0NvdW50PT09Zy0yPyhDLmFyZ0NvdW50PWctMixDLmNsYXNzTmFtZT1BLm5hbWUsRFtJXT1DKToodkEoRCxJLEIpLERbSV0ub3ZlcmxvYWRUYWJsZVtnLTJdPUMpLEtBKFtdLG8sKGZ1bmN0aW9uKEMpe3ZhciBpPXdJKEIsQyxBLFEsRSk7cmV0dXJuIHZvaWQgMD09PURbSV0ub3ZlcmxvYWRUYWJsZT8oaS5hcmdDb3VudD1nLTIsRFtJXT1pKTpEW0ldLm92ZXJsb2FkVGFibGVbZy0yXT1pLFtdfSkpLFtdfSkpfSx2OmZ1bmN0aW9uKEksZyxCKXtJPWRBKEkpLEtBKFtdLFtnXSwoZnVuY3Rpb24oZyl7cmV0dXJuIGc9Z1swXSxBW0ldPWcuZnJvbVdpcmVUeXBlKEIpLFtdfSkpfSxOOmZ1bmN0aW9uKEEsSSl7SEEoQSx7bmFtZTpJPWRBKEkpLGZyb21XaXJlVHlwZTpmdW5jdGlvbihBKXt2YXIgST10SS50b1ZhbHVlKEEpO3JldHVybiBoSShBKSxJfSx0b1dpcmVUeXBlOmZ1bmN0aW9uKEEsSSl7cmV0dXJuIHRJLnRvSGFuZGxlKEkpfSxhcmdQYWNrQWR2YW5jZTo4LHJlYWRWYWx1ZUZyb21Qb2ludGVyOk1BLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9LHU6ZnVuY3Rpb24oQSxJLGcpe3ZhciBCPVlBKGcpO0hBKEEse25hbWU6ST1kQShJKSxmcm9tV2lyZVR5cGU6ZnVuY3Rpb24oQSl7cmV0dXJuIEF9LHRvV2lyZVR5cGU6ZnVuY3Rpb24oQSxJKXtyZXR1cm4gSX0sYXJnUGFja0FkdmFuY2U6OCxyZWFkVmFsdWVGcm9tUG9pbnRlcjpGSShJLEIpLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9LGU6ZnVuY3Rpb24oQSxJLGcsQixDLFEpe3ZhciBFPWFJKEksZyk7QT1kQShBKSxDPUVJKEIsQyksUEEoQSwoZnVuY3Rpb24oKXtESShcXFwiQ2Fubm90IGNhbGwgXFxcIitBK1xcXCIgZHVlIHRvIHVuYm91bmQgdHlwZXNcXFwiLEUpfSksSS0xKSxLQShbXSxFLChmdW5jdGlvbihnKXt2YXIgQj1bZ1swXSxudWxsXS5jb25jYXQoZy5zbGljZSgxKSk7cmV0dXJuIEJJKEEsd0koQSxCLG51bGwsQyxRKSxJLTEpLFtdfSkpfSxmOmZ1bmN0aW9uKEEsSSxnLEIsQyl7ST1kQShJKSwtMT09PUMmJihDPTQyOTQ5NjcyOTUpO3ZhciBRPVlBKGcpLEU9QT0+QTtpZigwPT09Qil7dmFyIGk9MzItOCpnO0U9QT0+QTw8aT4+Pml9dmFyIG89SS5pbmNsdWRlcyhcXFwidW5zaWduZWRcXFwiKTtIQShBLHtuYW1lOkksZnJvbVdpcmVUeXBlOkUsdG9XaXJlVHlwZTpvP2Z1bmN0aW9uKEEsSSl7cmV0dXJuIHRoaXMubmFtZSxJPj4+MH06ZnVuY3Rpb24oQSxJKXtyZXR1cm4gdGhpcy5uYW1lLEl9LGFyZ1BhY2tBZHZhbmNlOjgscmVhZFZhbHVlRnJvbVBvaW50ZXI6eUkoSSxRLDAhPT1CKSxkZXN0cnVjdG9yRnVuY3Rpb246bnVsbH0pfSxiOmZ1bmN0aW9uKEEsSSxnKXt2YXIgQj1bSW50OEFycmF5LFVpbnQ4QXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXldW0ldO2Z1bmN0aW9uIEMoQSl7dmFyIEk9ZCxnPUlbQT4+PTJdLEM9SVtBKzFdO3JldHVybiBuZXcgQihrLEMsZyl9SEEoQSx7bmFtZTpnPWRBKGcpLGZyb21XaXJlVHlwZTpDLGFyZ1BhY2tBZHZhbmNlOjgscmVhZFZhbHVlRnJvbVBvaW50ZXI6Q30se2lnbm9yZUR1cGxpY2F0ZVJlZ2lzdHJhdGlvbnM6ITB9KX0sdDpmdW5jdGlvbihBLEkpe3ZhciBnPVxcXCJzdGQ6OnN0cmluZ1xcXCI9PT0oST1kQShJKSk7SEEoQSx7bmFtZTpJLGZyb21XaXJlVHlwZTpmdW5jdGlvbihBKXt2YXIgSSxCPWRbQT4+Ml0sQz1BKzQ7aWYoZylmb3IodmFyIFE9QyxFPTA7RTw9QjsrK0Upe3ZhciBpPUMrRTtpZihFPT1CfHwwPT1KW2ldKXt2YXIgbz11KFEsaS1RKTt2b2lkIDA9PT1JP0k9bzooSSs9U3RyaW5nLmZyb21DaGFyQ29kZSgwKSxJKz1vKSxRPWkrMX19ZWxzZXt2YXIgRD1uZXcgQXJyYXkoQik7Zm9yKEU9MDtFPEI7KytFKURbRV09U3RyaW5nLmZyb21DaGFyQ29kZShKW0MrRV0pO0k9RC5qb2luKFxcXCJcXFwiKX1yZXR1cm4gWkkoQSksSX0sdG9XaXJlVHlwZTpmdW5jdGlvbihBLEkpe3ZhciBCO0kgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlciYmKEk9bmV3IFVpbnQ4QXJyYXkoSSkpO3ZhciBDPVxcXCJzdHJpbmdcXFwiPT10eXBlb2YgSTtDfHxJIGluc3RhbmNlb2YgVWludDhBcnJheXx8SSBpbnN0YW5jZW9mIFVpbnQ4Q2xhbXBlZEFycmF5fHxJIGluc3RhbmNlb2YgSW50OEFycmF5fHxxQShcXFwiQ2Fubm90IHBhc3Mgbm9uLXN0cmluZyB0byBzdGQ6OnN0cmluZ1xcXCIpLEI9ZyYmQz9XKEkpOkkubGVuZ3RoO3ZhciBRPW1JKDQrQisxKSxFPVErNDtpZihkW1E+PjJdPUIsZyYmQylwKEksSixFLEIrMSk7ZWxzZSBpZihDKWZvcih2YXIgaT0wO2k8QjsrK2kpe3ZhciBvPUkuY2hhckNvZGVBdChpKTtvPjI1NSYmKFpJKEUpLHFBKFxcXCJTdHJpbmcgaGFzIFVURi0xNiBjb2RlIHVuaXRzIHRoYXQgZG8gbm90IGZpdCBpbiA4IGJpdHNcXFwiKSksSltFK2ldPW99ZWxzZSBmb3IoaT0wO2k8QjsrK2kpSltFK2ldPUlbaV07cmV0dXJuIG51bGwhPT1BJiZBLnB1c2goWkksUSksUX0sYXJnUGFja0FkdmFuY2U6OCxyZWFkVmFsdWVGcm9tUG9pbnRlcjpNQSxkZXN0cnVjdG9yRnVuY3Rpb246ZnVuY3Rpb24oQSl7WkkoQSl9fSl9LGw6ZnVuY3Rpb24oQSxJLGcpe3ZhciBCLEMsUSxFLGk7Zz1kQShnKSwyPT09ST8oQj1NSSxDPWVJLEU9U0ksUT0oKT0+WSxpPTEpOjQ9PT1JJiYoQj1OSSxDPW5JLEU9Y0ksUT0oKT0+ZCxpPTIpLEhBKEEse25hbWU6Zyxmcm9tV2lyZVR5cGU6ZnVuY3Rpb24oQSl7Zm9yKHZhciBnLEM9ZFtBPj4yXSxFPVEoKSxvPUErNCxEPTA7RDw9QzsrK0Qpe3ZhciBhPUErNCtEKkk7aWYoRD09Q3x8MD09RVthPj5pXSl7dmFyIHc9QihvLGEtbyk7dm9pZCAwPT09Zz9nPXc6KGcrPVN0cmluZy5mcm9tQ2hhckNvZGUoMCksZys9dyksbz1hK0l9fXJldHVybiBaSShBKSxnfSx0b1dpcmVUeXBlOmZ1bmN0aW9uKEEsQil7XFxcInN0cmluZ1xcXCIhPXR5cGVvZiBCJiZxQShcXFwiQ2Fubm90IHBhc3Mgbm9uLXN0cmluZyB0byBDKysgc3RyaW5nIHR5cGUgXFxcIitnKTt2YXIgUT1FKEIpLG89bUkoNCtRK0kpO3JldHVybiBkW28+PjJdPVE+PmksQyhCLG8rNCxRK0kpLG51bGwhPT1BJiZBLnB1c2goWkksbyksb30sYXJnUGFja0FkdmFuY2U6OCxyZWFkVmFsdWVGcm9tUG9pbnRlcjpNQSxkZXN0cnVjdG9yRnVuY3Rpb246ZnVuY3Rpb24oQSl7WkkoQSl9fSl9LFU6ZnVuY3Rpb24oQSxJLGcsQixDLFEpe3lBW0FdPXtuYW1lOmRBKEkpLHJhd0NvbnN0cnVjdG9yOkVJKGcsQikscmF3RGVzdHJ1Y3RvcjpFSShDLFEpLGZpZWxkczpbXX19LFQ6ZnVuY3Rpb24oQSxJLGcsQixDLFEsRSxpLG8sRCl7eUFbQV0uZmllbGRzLnB1c2goe2ZpZWxkTmFtZTpkQShJKSxnZXR0ZXJSZXR1cm5UeXBlOmcsZ2V0dGVyOkVJKEIsQyksZ2V0dGVyQ29udGV4dDpRLHNldHRlckFyZ3VtZW50VHlwZTpFLHNldHRlcjpFSShpLG8pLHNldHRlckNvbnRleHQ6RH0pfSxQOmZ1bmN0aW9uKEEsSSl7SEEoQSx7aXNWb2lkOiEwLG5hbWU6ST1kQShJKSxhcmdQYWNrQWR2YW5jZTowLGZyb21XaXJlVHlwZTpmdW5jdGlvbigpe30sdG9XaXJlVHlwZTpmdW5jdGlvbihBLEkpe319KX0sczpmdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpfSxEOmZ1bmN0aW9uKCl7dGhyb3cgMS8wfSxROmhJLFI6ZnVuY3Rpb24oQSl7QT40JiYoR0lbQV0ucmVmY291bnQrPTEpfSxtOmZ1bmN0aW9uKEEsSSl7dmFyIGcsQjt2b2lkIDA9PT0oQj1TQVtnPUFdKSYmcUEoXFxcIl9lbXZhbF90YWtlX3ZhbHVlIGhhcyB1bmtub3duIHR5cGUgXFxcIitvSShnKSk7dmFyIEM9KEE9QikucmVhZFZhbHVlRnJvbVBvaW50ZXIoSSk7cmV0dXJuIHRJLnRvSGFuZGxlKEMpfSxMOmZ1bmN0aW9uKEEsSSl7dmFyIGcsQj1uZXcgRGF0ZSgxZTMqKGRbKGc9QSk+PjJdKzQyOTQ5NjcyOTYqTFtnKzQ+PjJdKSk7TFtJPj4yXT1CLmdldFNlY29uZHMoKSxMW0krND4+Ml09Qi5nZXRNaW51dGVzKCksTFtJKzg+PjJdPUIuZ2V0SG91cnMoKSxMW0krMTI+PjJdPUIuZ2V0RGF0ZSgpLExbSSsxNj4+Ml09Qi5nZXRNb250aCgpLExbSSsyMD4+Ml09Qi5nZXRGdWxsWWVhcigpLTE5MDAsTFtJKzI0Pj4yXT1CLmdldERheSgpO3ZhciBDPW5ldyBEYXRlKEIuZ2V0RnVsbFllYXIoKSwwLDEpLFE9KEIuZ2V0VGltZSgpLUMuZ2V0VGltZSgpKS84NjRlNXwwO0xbSSsyOD4+Ml09USxMW0krMzY+PjJdPS02MCpCLmdldFRpbWV6b25lT2Zmc2V0KCk7dmFyIEU9bmV3IERhdGUoQi5nZXRGdWxsWWVhcigpLDYsMSkuZ2V0VGltZXpvbmVPZmZzZXQoKSxpPUMuZ2V0VGltZXpvbmVPZmZzZXQoKSxvPTB8KEUhPWkmJkIuZ2V0VGltZXpvbmVPZmZzZXQoKT09TWF0aC5taW4oaSxFKSk7TFtJKzMyPj4yXT1vfSxNOmZ1bmN0aW9uIEEoSSxnLEIpe0EuY2FsbGVkfHwoQS5jYWxsZWQ9ITAsZnVuY3Rpb24oQSxJLGcpe3ZhciBCPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSxDPW5ldyBEYXRlKEIsMCwxKSxRPW5ldyBEYXRlKEIsNiwxKSxFPUMuZ2V0VGltZXpvbmVPZmZzZXQoKSxpPVEuZ2V0VGltZXpvbmVPZmZzZXQoKSxvPU1hdGgubWF4KEUsaSk7ZnVuY3Rpb24gRChBKXt2YXIgST1BLnRvVGltZVN0cmluZygpLm1hdGNoKC9cXFxcKChbQS1aYS16IF0rKVxcXFwpJC8pO3JldHVybiBJP0lbMV06XFxcIkdNVFxcXCJ9TFtBPj4yXT02MCpvLExbST4+Ml09TnVtYmVyKEUhPWkpO3ZhciBhPUQoQyksdz1EKFEpLHM9a0koYSksRz1rSSh3KTtpPEU/KGRbZz4+Ml09cyxkW2crND4+Ml09Ryk6KGRbZz4+Ml09RyxkW2crND4+Ml09cyl9KEksZyxCKSl9LGE6ZnVuY3Rpb24oKXt6KFxcXCJcXFwiKX0saTpmdW5jdGlvbihBLEksZyl7dmFyIEI9ZnVuY3Rpb24oQSxJKXt2YXIgZztmb3IoVUkubGVuZ3RoPTAsST4+PTI7Zz1KW0ErK107KUkrPTEwNSE9ZyZJLFVJLnB1c2goMTA1PT1nP0xbSV06cVtJKys+PjFdKSwrK0k7cmV0dXJuIFVJfShJLGcpO3JldHVybiBFQVtBXS5hcHBseShudWxsLEIpfSxFOmZ1bmN0aW9uKEEpe3ZhciBJLGc9Si5sZW5ndGgsQj0yMTQ3NDgzNjQ4O2lmKChBPj4+PTApPkIpcmV0dXJuITE7Zm9yKHZhciBDPTE7Qzw9NDtDKj0yKXt2YXIgUT1nKigxKy4yL0MpO2lmKFE9TWF0aC5taW4oUSxBKzEwMDY2MzI5NiksSkkoTWF0aC5taW4oQiwoST1NYXRoLm1heChBLFEpKSsoNjU1MzYtSSU2NTUzNiklNjU1MzYpKSlyZXR1cm4hMH1yZXR1cm4hMX0sRjpmdW5jdGlvbihBLEkpe3ZhciBnPTA7cmV0dXJuIFlJKCkuZm9yRWFjaCgoZnVuY3Rpb24oQixDKXt2YXIgUT1JK2c7ZFtBKzQqQz4+Ml09USxmdW5jdGlvbihBLEksZyl7Zm9yKHZhciBCPTA7QjxBLmxlbmd0aDsrK0IpVVtJKys+PjBdPUEuY2hhckNvZGVBdChCKTtVW0k+PjBdPTB9KEIsUSksZys9Qi5sZW5ndGgrMX0pKSwwfSxHOmZ1bmN0aW9uKEEsSSl7dmFyIGc9WUkoKTtkW0E+PjJdPWcubGVuZ3RoO3ZhciBCPTA7cmV0dXJuIGcuZm9yRWFjaCgoZnVuY3Rpb24oQSl7Qis9QS5sZW5ndGgrMX0pKSxkW0k+PjJdPUIsMH0sYzpmdW5jdGlvbihJLGcpe3ZhciBCO0I9SSxUKCl8fChBLm9uRXhpdCYmQS5vbkV4aXQoQiksbj0hMCksaChCLG5ldyBpQShCKSl9LHA6ZnVuY3Rpb24oQSl7dHJ5e3ZhciBJPUZBLmdldFN0cmVhbUZyb21GRChBKTtyZXR1cm4gUkEuY2xvc2UoSSksMH1jYXRjaChBKXtpZih2b2lkIDA9PT1SQXx8IShBIGluc3RhbmNlb2YgUkEuRXJybm9FcnJvcikpdGhyb3cgQTtyZXR1cm4gQS5lcnJub319LEk6ZnVuY3Rpb24oQSxJLGcsQil7dHJ5e3ZhciBDPWZ1bmN0aW9uKEEsSSxnLEIpe2Zvcih2YXIgQz0wLFE9MDtRPGc7USsrKXt2YXIgRT1kW0k+PjJdLGk9ZFtJKzQ+PjJdO0krPTg7dmFyIG89UkEucmVhZChBLFUsRSxpLHZvaWQgMCk7aWYobzwwKXJldHVybi0xO2lmKEMrPW8sbzxpKWJyZWFrfXJldHVybiBDfShGQS5nZXRTdHJlYW1Gcm9tRkQoQSksSSxnKTtyZXR1cm4gZFtCPj4yXT1DLDB9Y2F0Y2goQSl7aWYodm9pZCAwPT09UkF8fCEoQSBpbnN0YW5jZW9mIFJBLkVycm5vRXJyb3IpKXRocm93IEE7cmV0dXJuIEEuZXJybm99fSxBOmZ1bmN0aW9uKEEsSSxnLEIsQyl7dHJ5e3ZhciBRPShvPWcpKzIwOTcxNTI+Pj4wPDQxOTQzMDUtISEoaT1JKT8oaT4+PjApKzQyOTQ5NjcyOTYqbzpOYU47aWYoaXNOYU4oUSkpcmV0dXJuIDYxO3ZhciBFPUZBLmdldFN0cmVhbUZyb21GRChBKTtyZXR1cm4gUkEubGxzZWVrKEUsUSxCKSxJQT1bRS5wb3NpdGlvbj4+PjAsKEFBPUUucG9zaXRpb24sK01hdGguYWJzKEFBKT49MT9BQT4wPygwfE1hdGgubWluKCtNYXRoLmZsb29yKEFBLzQyOTQ5NjcyOTYpLDQyOTQ5NjcyOTUpKT4+PjA6fn4rTWF0aC5jZWlsKChBQS0rKH5+QUE+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSxMW0M+PjJdPUlBWzBdLExbQys0Pj4yXT1JQVsxXSxFLmdldGRlbnRzJiYwPT09USYmMD09PUImJihFLmdldGRlbnRzPW51bGwpLDB9Y2F0Y2goQSl7aWYodm9pZCAwPT09UkF8fCEoQSBpbnN0YW5jZW9mIFJBLkVycm5vRXJyb3IpKXRocm93IEE7cmV0dXJuIEEuZXJybm99dmFyIGksb30scTpmdW5jdGlvbihBLEksZyxCKXt0cnl7dmFyIEM9ZnVuY3Rpb24oQSxJLGcsQil7Zm9yKHZhciBDPTAsUT0wO1E8ZztRKyspe3ZhciBFPWRbST4+Ml0saT1kW0krND4+Ml07SSs9ODt2YXIgbz1SQS53cml0ZShBLFUsRSxpLHZvaWQgMCk7aWYobzwwKXJldHVybi0xO0MrPW99cmV0dXJuIEN9KEZBLmdldFN0cmVhbUZyb21GRChBKSxJLGcpO3JldHVybiBkW0I+PjJdPUMsMH1jYXRjaChBKXtpZih2b2lkIDA9PT1SQXx8IShBIGluc3RhbmNlb2YgUkEuRXJybm9FcnJvcikpdGhyb3cgQTtyZXR1cm4gQS5lcnJub319LHc6ZnVuY3Rpb24oQSxJKXt2YXIgZz1YSSgpO3RyeXtyZXR1cm4gQ0koQSkoSSl9Y2F0Y2goQSl7aWYoT0koZyksQSE9PUErMCl0aHJvdyBBO1RJKDEsMCl9fSx5OmZ1bmN0aW9uKEEsSSxnKXt2YXIgQj1YSSgpO3RyeXtyZXR1cm4gQ0koQSkoSSxnKX1jYXRjaChBKXtpZihPSShCKSxBIT09QSswKXRocm93IEE7VEkoMSwwKX19LHg6ZnVuY3Rpb24oQSxJLGcsQil7dmFyIEM9WEkoKTt0cnl7cmV0dXJuIENJKEEpKEksZyxCKX1jYXRjaChBKXtpZihPSShDKSxBIT09QSswKXRocm93IEE7VEkoMSwwKX19LGo6ZnVuY3Rpb24oQSxJKXt2YXIgZz1YSSgpO3RyeXtDSShBKShJKX1jYXRjaChBKXtpZihPSShnKSxBIT09QSswKXRocm93IEE7VEkoMSwwKX19LHo6ZnVuY3Rpb24oQSxJLGcpe3ZhciBCPVhJKCk7dHJ5e0NJKEEpKEksZyl9Y2F0Y2goQSl7aWYoT0koQiksQSE9PUErMCl0aHJvdyBBO1RJKDEsMCl9fSxIOmZ1bmN0aW9uKEEsSSxnLEIpe3ZhciBDPVhJKCk7dHJ5e0NJKEEpKEksZyxCKX1jYXRjaChBKXtpZihPSShDKSxBIT09QSswKXRocm93IEE7VEkoMSwwKX19LGs6ZnVuY3Rpb24oQSxJLGcsQixDKXt2YXIgUT1YSSgpO3RyeXtDSShBKShJLGcsQixDKX1jYXRjaChBKXtpZihPSShRKSxBIT09QSswKXRocm93IEE7VEkoMSwwKX19LFY6cUksQzpmdW5jdGlvbihBLEksZyxCKXtyZXR1cm4gcUkoQSxJLGcsQil9fSxtST0oZnVuY3Rpb24oKXt2YXIgST17YTpiSX07ZnVuY3Rpb24gZyhJLGcpe3ZhciBCLEM9SS5leHBvcnRzO0EuYXNtPUMsYigoUz1BLmFzbS5XKS5idWZmZXIpLG09QS5hc20uJCxCPUEuYXNtLlgseC51bnNoaWZ0KEIpLFAoKX1mdW5jdGlvbiBDKEEpe2coQS5pbnN0YW5jZSl9ZnVuY3Rpb24gRShBKXtyZXR1cm4gZnVuY3Rpb24oKXtpZighciYmKHR8fFIpKXtpZihcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgZmV0Y2gmJiFDQShfKSlyZXR1cm4gZmV0Y2goXyx7Y3JlZGVudGlhbHM6XFxcInNhbWUtb3JpZ2luXFxcIn0pLnRoZW4oKGZ1bmN0aW9uKEEpe2lmKCFBLm9rKXRocm93XFxcImZhaWxlZCB0byBsb2FkIHdhc20gYmluYXJ5IGZpbGUgYXQgJ1xcXCIrXytcXFwiJ1xcXCI7cmV0dXJuIEEuYXJyYXlCdWZmZXIoKX0pKS5jYXRjaCgoZnVuY3Rpb24oKXtyZXR1cm4gUUEoXyl9KSk7aWYoUSlyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKEEsSSl7UShfLChmdW5jdGlvbihJKXtBKG5ldyBVaW50OEFycmF5KEkpKX0pLEkpfSkpfXJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKChmdW5jdGlvbigpe3JldHVybiBRQShfKX0pKX0oKS50aGVuKChmdW5jdGlvbihBKXtyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoQSxJKX0pKS50aGVuKChmdW5jdGlvbihBKXtyZXR1cm4gQX0pKS50aGVuKEEsKGZ1bmN0aW9uKEEpe2UoXFxcImZhaWxlZCB0byBhc3luY2hyb25vdXNseSBwcmVwYXJlIHdhc206IFxcXCIrQSkseihBKX0pKX1pZih2KCksQS5pbnN0YW50aWF0ZVdhc20pdHJ5e3JldHVybiBBLmluc3RhbnRpYXRlV2FzbShJLGcpfWNhdGNoKEEpe3JldHVybiBlKFxcXCJNb2R1bGUuaW5zdGFudGlhdGVXYXNtIGNhbGxiYWNrIGZhaWxlZCB3aXRoIGVycm9yOiBcXFwiK0EpLCExfShyfHxcXFwiZnVuY3Rpb25cXFwiIT10eXBlb2YgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGVTdHJlYW1pbmd8fEJBKF8pfHxDQShfKXx8Rnx8XFxcImZ1bmN0aW9uXFxcIiE9dHlwZW9mIGZldGNoP0UoQyk6ZmV0Y2goXyx7Y3JlZGVudGlhbHM6XFxcInNhbWUtb3JpZ2luXFxcIn0pLnRoZW4oKGZ1bmN0aW9uKEEpe3JldHVybiBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZyhBLEkpLnRoZW4oQywoZnVuY3Rpb24oQSl7cmV0dXJuIGUoXFxcIndhc20gc3RyZWFtaW5nIGNvbXBpbGUgZmFpbGVkOiBcXFwiK0EpLGUoXFxcImZhbGxpbmcgYmFjayB0byBBcnJheUJ1ZmZlciBpbnN0YW50aWF0aW9uXFxcIiksRShDKX0pKX0pKSkuY2F0Y2goQil9KCksQS5fX193YXNtX2NhbGxfY3RvcnM9ZnVuY3Rpb24oKXtyZXR1cm4oQS5fX193YXNtX2NhbGxfY3RvcnM9QS5hc20uWCkuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxBLl9tYWxsb2M9ZnVuY3Rpb24oKXtyZXR1cm4obUk9QS5fbWFsbG9jPUEuYXNtLlkpLmFwcGx5KG51bGwsYXJndW1lbnRzKX0pLFpJPUEuX2ZyZWU9ZnVuY3Rpb24oKXtyZXR1cm4oWkk9QS5fZnJlZT1BLmFzbS5aKS5hcHBseShudWxsLGFyZ3VtZW50cyl9LHhJPUEuX19fZXJybm9fbG9jYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4oeEk9QS5fX19lcnJub19sb2NhdGlvbj1BLmFzbS5fKS5hcHBseShudWxsLGFyZ3VtZW50cyl9LFZJPUEuX19fZ2V0VHlwZU5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4oVkk9QS5fX19nZXRUeXBlTmFtZT1BLmFzbS5hYSkuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxUST0oQS5fX2VtYmluZF9pbml0aWFsaXplX2JpbmRpbmdzPWZ1bmN0aW9uKCl7cmV0dXJuKEEuX19lbWJpbmRfaW5pdGlhbGl6ZV9iaW5kaW5ncz1BLmFzbS5iYSkuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxBLl9zZXRUaHJldz1mdW5jdGlvbigpe3JldHVybihUST1BLl9zZXRUaHJldz1BLmFzbS5jYSkuYXBwbHkobnVsbCxhcmd1bWVudHMpfSksWEk9QS5zdGFja1NhdmU9ZnVuY3Rpb24oKXtyZXR1cm4oWEk9QS5zdGFja1NhdmU9QS5hc20uZGEpLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sT0k9QS5zdGFja1Jlc3RvcmU9ZnVuY3Rpb24oKXtyZXR1cm4oT0k9QS5zdGFja1Jlc3RvcmU9QS5hc20uZWEpLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sakk9QS5fX19jeGFfaXNfcG9pbnRlcl90eXBlPWZ1bmN0aW9uKCl7cmV0dXJuKGpJPUEuX19fY3hhX2lzX3BvaW50ZXJfdHlwZT1BLmFzbS5mYSkuYXBwbHkobnVsbCxhcmd1bWVudHMpfTtmdW5jdGlvbiB2SShnKXtmdW5jdGlvbiBCKCl7V0l8fChXST0hMCxBLmNhbGxlZFJ1bj0hMCxufHwoQS5ub0ZTSW5pdHx8UkEuaW5pdC5pbml0aWFsaXplZHx8UkEuaW5pdCgpLFJBLmlnbm9yZVBlcm1pc3Npb25zPSExLEdBLmluaXQoKSxvQSh4KSxJKEEpLEEub25SdW50aW1lSW5pdGlhbGl6ZWQmJkEub25SdW50aW1lSW5pdGlhbGl6ZWQoKSxmdW5jdGlvbigpe2lmKEEucG9zdFJ1bilmb3IoXFxcImZ1bmN0aW9uXFxcIj09dHlwZW9mIEEucG9zdFJ1biYmKEEucG9zdFJ1bj1bQS5wb3N0UnVuXSk7QS5wb3N0UnVuLmxlbmd0aDspST1BLnBvc3RSdW4uc2hpZnQoKSxWLnVuc2hpZnQoSSk7dmFyIEk7b0EoVil9KCkpKX1nPWd8fHMsWD4wfHwoZnVuY3Rpb24oKXtpZihBLnByZVJ1bilmb3IoXFxcImZ1bmN0aW9uXFxcIj09dHlwZW9mIEEucHJlUnVuJiYoQS5wcmVSdW49W0EucHJlUnVuXSk7QS5wcmVSdW4ubGVuZ3RoOylJPUEucHJlUnVuLnNoaWZ0KCksWi51bnNoaWZ0KEkpO3ZhciBJO29BKFopfSgpLFg+MHx8KEEuc2V0U3RhdHVzPyhBLnNldFN0YXR1cyhcXFwiUnVubmluZy4uLlxcXCIpLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7c2V0VGltZW91dCgoZnVuY3Rpb24oKXtBLnNldFN0YXR1cyhcXFwiXFxcIil9KSwxKSxCKCl9KSwxKSk6QigpKSl9aWYoQS5keW5DYWxsX2ppamk9ZnVuY3Rpb24oKXtyZXR1cm4oQS5keW5DYWxsX2ppamk9QS5hc20uZ2EpLmFwcGx5KG51bGwsYXJndW1lbnRzKX0sQS5keW5DYWxsX3ZpaWppaT1mdW5jdGlvbigpe3JldHVybihBLmR5bkNhbGxfdmlpamlpPUEuYXNtLmhhKS5hcHBseShudWxsLGFyZ3VtZW50cyl9LEEuZHluQ2FsbF9paWlpaWo9ZnVuY3Rpb24oKXtyZXR1cm4oQS5keW5DYWxsX2lpaWlpaj1BLmFzbS5pYSkuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxBLmR5bkNhbGxfaWlpaWlqaj1mdW5jdGlvbigpe3JldHVybihBLmR5bkNhbGxfaWlpaWlqaj1BLmFzbS5qYSkuYXBwbHkobnVsbCxhcmd1bWVudHMpfSxBLmR5bkNhbGxfaWlpaWlpamo9ZnVuY3Rpb24oKXtyZXR1cm4oQS5keW5DYWxsX2lpaWlpaWpqPUEuYXNtLmthKS5hcHBseShudWxsLGFyZ3VtZW50cyl9LEEuRlM9UkEsaj1mdW5jdGlvbiBBKCl7V0l8fHZJKCksV0l8fChqPUEpfSxBLnByZUluaXQpZm9yKFxcXCJmdW5jdGlvblxcXCI9PXR5cGVvZiBBLnByZUluaXQmJihBLnByZUluaXQ9W0EucHJlSW5pdF0pO0EucHJlSW5pdC5sZW5ndGg+MDspQS5wcmVJbml0LnBvcCgpKCk7cmV0dXJuIHZJKCksQS5yZWFkeX0pO2Z1bmN0aW9uIHMoQSxJKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gQS5hcHBseShJLGFyZ3VtZW50cyl9fWNvbnN0e3RvU3RyaW5nOkd9PU9iamVjdC5wcm90b3R5cGUse2dldFByb3RvdHlwZU9mOmh9PU9iamVjdCx0PShSPU9iamVjdC5jcmVhdGUobnVsbCksQT0+e2NvbnN0IEk9Ry5jYWxsKEEpO3JldHVybiBSW0ldfHwoUltJXT1JLnNsaWNlKDgsLTEpLnRvTG93ZXJDYXNlKCkpfSk7dmFyIFI7Y29uc3QgRj1BPT4oQT1BLnRvTG93ZXJDYXNlKCksST0+dChJKT09PUEpLHk9QT0+ST0+dHlwZW9mIEk9PT1BLHtpc0FycmF5OnJ9PUFycmF5LE09eShcXFwidW5kZWZpbmVkXFxcIiksZT1GKFxcXCJBcnJheUJ1ZmZlclxcXCIpLFM9eShcXFwic3RyaW5nXFxcIiksTj15KFxcXCJmdW5jdGlvblxcXCIpLG49eShcXFwibnVtYmVyXFxcIiksYz1BPT5udWxsIT09QSYmXFxcIm9iamVjdFxcXCI9PXR5cGVvZiBBLGs9QT0+e2lmKFxcXCJvYmplY3RcXFwiIT09dChBKSlyZXR1cm4hMTtjb25zdCBJPWgoQSk7cmV0dXJuIShudWxsIT09SSYmSSE9PU9iamVjdC5wcm90b3R5cGUmJm51bGwhPT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoSSl8fFN5bWJvbC50b1N0cmluZ1RhZyBpbiBBfHxTeW1ib2wuaXRlcmF0b3IgaW4gQSl9LFU9RihcXFwiRGF0ZVxcXCIpLEo9RihcXFwiRmlsZVxcXCIpLEs9RihcXFwiQmxvYlxcXCIpLFk9RihcXFwiRmlsZUxpc3RcXFwiKSxMPUYoXFxcIlVSTFNlYXJjaFBhcmFtc1xcXCIpO2Z1bmN0aW9uIGQoQSxJLHthbGxPd25LZXlzOmc9ITF9PXt9KXtpZihudWxsPT1BKXJldHVybjtsZXQgQixDO2lmKFxcXCJvYmplY3RcXFwiIT10eXBlb2YgQSYmKEE9W0FdKSxyKEEpKWZvcihCPTAsQz1BLmxlbmd0aDtCPEM7QisrKUkuY2FsbChudWxsLEFbQl0sQixBKTtlbHNle2NvbnN0IEM9Zz9PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhBKTpPYmplY3Qua2V5cyhBKSxRPUMubGVuZ3RoO2xldCBFO2ZvcihCPTA7QjxRO0IrKylFPUNbQl0sSS5jYWxsKG51bGwsQVtFXSxFLEEpfX1jb25zdCBsPShxPVxcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2YgVWludDhBcnJheSYmaChVaW50OEFycmF5KSxBPT5xJiZBIGluc3RhbmNlb2YgcSk7dmFyIHE7Y29uc3QgSD1GKFxcXCJIVE1MRm9ybUVsZW1lbnRcXFwiKSxmPSgoe2hhc093blByb3BlcnR5OkF9KT0+KEksZyk9PkEuY2FsbChJLGcpKShPYmplY3QucHJvdG90eXBlKSx1PUYoXFxcIlJlZ0V4cFxcXCIpLHA9KEEsSSk9Pntjb25zdCBnPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKEEpLEI9e307ZChnLCgoZyxDKT0+eyExIT09SShnLEMsQSkmJihCW0NdPWcpfSkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEEsQil9LFc9e2lzQXJyYXk6cixpc0FycmF5QnVmZmVyOmUsaXNCdWZmZXI6ZnVuY3Rpb24oQSl7cmV0dXJuIG51bGwhPT1BJiYhTShBKSYmbnVsbCE9PUEuY29uc3RydWN0b3ImJiFNKEEuY29uc3RydWN0b3IpJiZOKEEuY29uc3RydWN0b3IuaXNCdWZmZXIpJiZBLmNvbnN0cnVjdG9yLmlzQnVmZmVyKEEpfSxpc0Zvcm1EYXRhOkE9Pntjb25zdCBJPVxcXCJbb2JqZWN0IEZvcm1EYXRhXVxcXCI7cmV0dXJuIEEmJihcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgRm9ybURhdGEmJkEgaW5zdGFuY2VvZiBGb3JtRGF0YXx8Ry5jYWxsKEEpPT09SXx8TihBLnRvU3RyaW5nKSYmQS50b1N0cmluZygpPT09SSl9LGlzQXJyYXlCdWZmZXJWaWV3OmZ1bmN0aW9uKEEpe2xldCBJO3JldHVybiBJPVxcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2YgQXJyYXlCdWZmZXImJkFycmF5QnVmZmVyLmlzVmlldz9BcnJheUJ1ZmZlci5pc1ZpZXcoQSk6QSYmQS5idWZmZXImJmUoQS5idWZmZXIpLEl9LGlzU3RyaW5nOlMsaXNOdW1iZXI6bixpc0Jvb2xlYW46QT0+ITA9PT1BfHwhMT09PUEsaXNPYmplY3Q6Yyxpc1BsYWluT2JqZWN0OmssaXNVbmRlZmluZWQ6TSxpc0RhdGU6VSxpc0ZpbGU6Sixpc0Jsb2I6Syxpc1JlZ0V4cDp1LGlzRnVuY3Rpb246Tixpc1N0cmVhbTpBPT5jKEEpJiZOKEEucGlwZSksaXNVUkxTZWFyY2hQYXJhbXM6TCxpc1R5cGVkQXJyYXk6bCxpc0ZpbGVMaXN0OlksZm9yRWFjaDpkLG1lcmdlOmZ1bmN0aW9uIEEoKXtjb25zdCBJPXt9LGc9KGcsQik9PntrKElbQl0pJiZrKGcpP0lbQl09QShJW0JdLGcpOmsoZyk/SVtCXT1BKHt9LGcpOnIoZyk/SVtCXT1nLnNsaWNlKCk6SVtCXT1nfTtmb3IobGV0IEE9MCxJPWFyZ3VtZW50cy5sZW5ndGg7QTxJO0ErKylhcmd1bWVudHNbQV0mJmQoYXJndW1lbnRzW0FdLGcpO3JldHVybiBJfSxleHRlbmQ6KEEsSSxnLHthbGxPd25LZXlzOkJ9PXt9KT0+KGQoSSwoKEksQik9PntnJiZOKEkpP0FbQl09cyhJLGcpOkFbQl09SX0pLHthbGxPd25LZXlzOkJ9KSxBKSx0cmltOkE9PkEudHJpbT9BLnRyaW0oKTpBLnJlcGxhY2UoL15bXFxcXHNcXFxcdUZFRkZcXFxceEEwXSt8W1xcXFxzXFxcXHVGRUZGXFxcXHhBMF0rJC9nLFxcXCJcXFwiKSxzdHJpcEJPTTpBPT4oNjUyNzk9PT1BLmNoYXJDb2RlQXQoMCkmJihBPUEuc2xpY2UoMSkpLEEpLGluaGVyaXRzOihBLEksZyxCKT0+e0EucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoSS5wcm90b3R5cGUsQiksQS5wcm90b3R5cGUuY29uc3RydWN0b3I9QSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQSxcXFwic3VwZXJcXFwiLHt2YWx1ZTpJLnByb3RvdHlwZX0pLGcmJk9iamVjdC5hc3NpZ24oQS5wcm90b3R5cGUsZyl9LHRvRmxhdE9iamVjdDooQSxJLGcsQik9PntsZXQgQyxRLEU7Y29uc3QgaT17fTtpZihJPUl8fHt9LG51bGw9PUEpcmV0dXJuIEk7ZG97Zm9yKEM9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoQSksUT1DLmxlbmd0aDtRLS0gPjA7KUU9Q1tRXSxCJiYhQihFLEEsSSl8fGlbRV18fChJW0VdPUFbRV0saVtFXT0hMCk7QT0hMSE9PWcmJmgoQSl9d2hpbGUoQSYmKCFnfHxnKEEsSSkpJiZBIT09T2JqZWN0LnByb3RvdHlwZSk7cmV0dXJuIEl9LGtpbmRPZjp0LGtpbmRPZlRlc3Q6RixlbmRzV2l0aDooQSxJLGcpPT57QT1TdHJpbmcoQSksKHZvaWQgMD09PWd8fGc+QS5sZW5ndGgpJiYoZz1BLmxlbmd0aCksZy09SS5sZW5ndGg7Y29uc3QgQj1BLmluZGV4T2YoSSxnKTtyZXR1cm4tMSE9PUImJkI9PT1nfSx0b0FycmF5OkE9PntpZighQSlyZXR1cm4gbnVsbDtpZihyKEEpKXJldHVybiBBO2xldCBJPUEubGVuZ3RoO2lmKCFuKEkpKXJldHVybiBudWxsO2NvbnN0IGc9bmV3IEFycmF5KEkpO2Zvcig7SS0tID4wOylnW0ldPUFbSV07cmV0dXJuIGd9LGZvckVhY2hFbnRyeTooQSxJKT0+e2NvbnN0IGc9KEEmJkFbU3ltYm9sLml0ZXJhdG9yXSkuY2FsbChBKTtsZXQgQjtmb3IoOyhCPWcubmV4dCgpKSYmIUIuZG9uZTspe2NvbnN0IGc9Qi52YWx1ZTtJLmNhbGwoQSxnWzBdLGdbMV0pfX0sbWF0Y2hBbGw6KEEsSSk9PntsZXQgZztjb25zdCBCPVtdO2Zvcig7bnVsbCE9PShnPUEuZXhlYyhJKSk7KUIucHVzaChnKTtyZXR1cm4gQn0saXNIVE1MRm9ybTpILGhhc093blByb3BlcnR5OmYsaGFzT3duUHJvcDpmLHJlZHVjZURlc2NyaXB0b3JzOnAsZnJlZXplTWV0aG9kczpBPT57cChBLCgoSSxnKT0+e2NvbnN0IEI9QVtnXTtOKEIpJiYoSS5lbnVtZXJhYmxlPSExLFxcXCJ3cml0YWJsZVxcXCJpbiBJP0kud3JpdGFibGU9ITE6SS5zZXR8fChJLnNldD0oKT0+e3Rocm93IEVycm9yKFxcXCJDYW4gbm90IHJlYWQtb25seSBtZXRob2QgJ1xcXCIrZytcXFwiJ1xcXCIpfSkpfSkpfSx0b09iamVjdFNldDooQSxJKT0+e2NvbnN0IGc9e30sQj1BPT57QS5mb3JFYWNoKChBPT57Z1tBXT0hMH0pKX07cmV0dXJuIHIoQSk/QihBKTpCKFN0cmluZyhBKS5zcGxpdChJKSksZ30sdG9DYW1lbENhc2U6QT0+QS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1tfLVxcXFxzXShbYS16XFxcXGRdKShcXFxcdyopL2csKGZ1bmN0aW9uKEEsSSxnKXtyZXR1cm4gSS50b1VwcGVyQ2FzZSgpK2d9KSksbm9vcDooKT0+e30sdG9GaW5pdGVOdW1iZXI6KEEsSSk9PihBPStBLE51bWJlci5pc0Zpbml0ZShBKT9BOkkpfTtmdW5jdGlvbiBiKEEsSSxnLEIsQyl7RXJyb3IuY2FsbCh0aGlzKSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZT9FcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLHRoaXMuY29uc3RydWN0b3IpOnRoaXMuc3RhY2s9KG5ldyBFcnJvcikuc3RhY2ssdGhpcy5tZXNzYWdlPUEsdGhpcy5uYW1lPVxcXCJBeGlvc0Vycm9yXFxcIixJJiYodGhpcy5jb2RlPUkpLGcmJih0aGlzLmNvbmZpZz1nKSxCJiYodGhpcy5yZXF1ZXN0PUIpLEMmJih0aGlzLnJlc3BvbnNlPUMpfVcuaW5oZXJpdHMoYixFcnJvcix7dG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJue21lc3NhZ2U6dGhpcy5tZXNzYWdlLG5hbWU6dGhpcy5uYW1lLGRlc2NyaXB0aW9uOnRoaXMuZGVzY3JpcHRpb24sbnVtYmVyOnRoaXMubnVtYmVyLGZpbGVOYW1lOnRoaXMuZmlsZU5hbWUsbGluZU51bWJlcjp0aGlzLmxpbmVOdW1iZXIsY29sdW1uTnVtYmVyOnRoaXMuY29sdW1uTnVtYmVyLHN0YWNrOnRoaXMuc3RhY2ssY29uZmlnOnRoaXMuY29uZmlnLGNvZGU6dGhpcy5jb2RlLHN0YXR1czp0aGlzLnJlc3BvbnNlJiZ0aGlzLnJlc3BvbnNlLnN0YXR1cz90aGlzLnJlc3BvbnNlLnN0YXR1czpudWxsfX19KTtjb25zdCBtPWIucHJvdG90eXBlLFo9e307W1xcXCJFUlJfQkFEX09QVElPTl9WQUxVRVxcXCIsXFxcIkVSUl9CQURfT1BUSU9OXFxcIixcXFwiRUNPTk5BQk9SVEVEXFxcIixcXFwiRVRJTUVET1VUXFxcIixcXFwiRVJSX05FVFdPUktcXFwiLFxcXCJFUlJfRlJfVE9PX01BTllfUkVESVJFQ1RTXFxcIixcXFwiRVJSX0RFUFJFQ0FURURcXFwiLFxcXCJFUlJfQkFEX1JFU1BPTlNFXFxcIixcXFwiRVJSX0JBRF9SRVFVRVNUXFxcIixcXFwiRVJSX0NBTkNFTEVEXFxcIixcXFwiRVJSX05PVF9TVVBQT1JUXFxcIixcXFwiRVJSX0lOVkFMSURfVVJMXFxcIl0uZm9yRWFjaCgoQT0+e1pbQV09e3ZhbHVlOkF9fSkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGIsWiksT2JqZWN0LmRlZmluZVByb3BlcnR5KG0sXFxcImlzQXhpb3NFcnJvclxcXCIse3ZhbHVlOiEwfSksYi5mcm9tPShBLEksZyxCLEMsUSk9Pntjb25zdCBFPU9iamVjdC5jcmVhdGUobSk7cmV0dXJuIFcudG9GbGF0T2JqZWN0KEEsRSwoZnVuY3Rpb24oQSl7cmV0dXJuIEEhPT1FcnJvci5wcm90b3R5cGV9KSwoQT0+XFxcImlzQXhpb3NFcnJvclxcXCIhPT1BKSksYi5jYWxsKEUsQS5tZXNzYWdlLEksZyxCLEMpLEUuY2F1c2U9QSxFLm5hbWU9QS5uYW1lLFEmJk9iamVjdC5hc3NpZ24oRSxRKSxFfTtjb25zdCB4PWIsVj1nKDIzMCk7ZnVuY3Rpb24gVChBKXtyZXR1cm4gVy5pc1BsYWluT2JqZWN0KEEpfHxXLmlzQXJyYXkoQSl9ZnVuY3Rpb24gWChBKXtyZXR1cm4gVy5lbmRzV2l0aChBLFxcXCJbXVxcXCIpP0Euc2xpY2UoMCwtMik6QX1mdW5jdGlvbiBPKEEsSSxnKXtyZXR1cm4gQT9BLmNvbmNhdChJKS5tYXAoKGZ1bmN0aW9uKEEsSSl7cmV0dXJuIEE9WChBKSwhZyYmST9cXFwiW1xcXCIrQStcXFwiXVxcXCI6QX0pKS5qb2luKGc/XFxcIi5cXFwiOlxcXCJcXFwiKTpJfWNvbnN0IGo9Vy50b0ZsYXRPYmplY3QoVyx7fSxudWxsLChmdW5jdGlvbihBKXtyZXR1cm4vXmlzW0EtWl0vLnRlc3QoQSl9KSksdj1mdW5jdGlvbihBLEksZyl7aWYoIVcuaXNPYmplY3QoQSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcXFwidGFyZ2V0IG11c3QgYmUgYW4gb2JqZWN0XFxcIik7ST1JfHxuZXcoVnx8Rm9ybURhdGEpO2NvbnN0IEI9KGc9Vy50b0ZsYXRPYmplY3QoZyx7bWV0YVRva2VuczohMCxkb3RzOiExLGluZGV4ZXM6ITF9LCExLChmdW5jdGlvbihBLEkpe3JldHVybiFXLmlzVW5kZWZpbmVkKElbQV0pfSkpKS5tZXRhVG9rZW5zLEM9Zy52aXNpdG9yfHxhLFE9Zy5kb3RzLEU9Zy5pbmRleGVzLGk9KGcuQmxvYnx8XFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiBCbG9iJiZCbG9iKSYmKG89SSkmJlcuaXNGdW5jdGlvbihvLmFwcGVuZCkmJlxcXCJGb3JtRGF0YVxcXCI9PT1vW1N5bWJvbC50b1N0cmluZ1RhZ10mJm9bU3ltYm9sLml0ZXJhdG9yXTt2YXIgbztpZighVy5pc0Z1bmN0aW9uKEMpKXRocm93IG5ldyBUeXBlRXJyb3IoXFxcInZpc2l0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uXFxcIik7ZnVuY3Rpb24gRChBKXtpZihudWxsPT09QSlyZXR1cm5cXFwiXFxcIjtpZihXLmlzRGF0ZShBKSlyZXR1cm4gQS50b0lTT1N0cmluZygpO2lmKCFpJiZXLmlzQmxvYihBKSl0aHJvdyBuZXcgeChcXFwiQmxvYiBpcyBub3Qgc3VwcG9ydGVkLiBVc2UgYSBCdWZmZXIgaW5zdGVhZC5cXFwiKTtyZXR1cm4gVy5pc0FycmF5QnVmZmVyKEEpfHxXLmlzVHlwZWRBcnJheShBKT9pJiZcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgQmxvYj9uZXcgQmxvYihbQV0pOkJ1ZmZlci5mcm9tKEEpOkF9ZnVuY3Rpb24gYShBLGcsQyl7bGV0IGk9QTtpZihBJiYhQyYmXFxcIm9iamVjdFxcXCI9PXR5cGVvZiBBKWlmKFcuZW5kc1dpdGgoZyxcXFwie31cXFwiKSlnPUI/ZzpnLnNsaWNlKDAsLTIpLEE9SlNPTi5zdHJpbmdpZnkoQSk7ZWxzZSBpZihXLmlzQXJyYXkoQSkmJmZ1bmN0aW9uKEEpe3JldHVybiBXLmlzQXJyYXkoQSkmJiFBLnNvbWUoVCl9KEEpfHxXLmlzRmlsZUxpc3QoQSl8fFcuZW5kc1dpdGgoZyxcXFwiW11cXFwiKSYmKGk9Vy50b0FycmF5KEEpKSlyZXR1cm4gZz1YKGcpLGkuZm9yRWFjaCgoZnVuY3Rpb24oQSxCKXshVy5pc1VuZGVmaW5lZChBKSYmbnVsbCE9PUEmJkkuYXBwZW5kKCEwPT09RT9PKFtnXSxCLFEpOm51bGw9PT1FP2c6ZytcXFwiW11cXFwiLEQoQSkpfSkpLCExO3JldHVybiEhVChBKXx8KEkuYXBwZW5kKE8oQyxnLFEpLEQoQSkpLCExKX1jb25zdCB3PVtdLHM9T2JqZWN0LmFzc2lnbihqLHtkZWZhdWx0VmlzaXRvcjphLGNvbnZlcnRWYWx1ZTpELGlzVmlzaXRhYmxlOlR9KTtpZighVy5pc09iamVjdChBKSl0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJkYXRhIG11c3QgYmUgYW4gb2JqZWN0XFxcIik7cmV0dXJuIGZ1bmN0aW9uIEEoZyxCKXtpZighVy5pc1VuZGVmaW5lZChnKSl7aWYoLTEhPT13LmluZGV4T2YoZykpdGhyb3cgRXJyb3IoXFxcIkNpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZCBpbiBcXFwiK0Iuam9pbihcXFwiLlxcXCIpKTt3LnB1c2goZyksVy5mb3JFYWNoKGcsKGZ1bmN0aW9uKGcsUSl7ITA9PT0oIShXLmlzVW5kZWZpbmVkKGcpfHxudWxsPT09ZykmJkMuY2FsbChJLGcsVy5pc1N0cmluZyhRKT9RLnRyaW0oKTpRLEIscykpJiZBKGcsQj9CLmNvbmNhdChRKTpbUV0pfSkpLHcucG9wKCl9fShBKSxJfTtmdW5jdGlvbiBQKEEpe2NvbnN0IEk9e1xcXCIhXFxcIjpcXFwiJTIxXFxcIixcXFwiJ1xcXCI6XFxcIiUyN1xcXCIsXFxcIihcXFwiOlxcXCIlMjhcXFwiLFxcXCIpXFxcIjpcXFwiJTI5XFxcIixcXFwiflxcXCI6XFxcIiU3RVxcXCIsXFxcIiUyMFxcXCI6XFxcIitcXFwiLFxcXCIlMDBcXFwiOlxcXCJcXFxcMFxcXCJ9O3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoQSkucmVwbGFjZSgvWyEnKCl+XXwlMjB8JTAwL2csKGZ1bmN0aW9uKEEpe3JldHVybiBJW0FdfSkpfWZ1bmN0aW9uIHooQSxJKXt0aGlzLl9wYWlycz1bXSxBJiZ2KEEsdGhpcyxJKX1jb25zdCBfPXoucHJvdG90eXBlO18uYXBwZW5kPWZ1bmN0aW9uKEEsSSl7dGhpcy5fcGFpcnMucHVzaChbQSxJXSl9LF8udG9TdHJpbmc9ZnVuY3Rpb24oQSl7Y29uc3QgST1BP2Z1bmN0aW9uKEkpe3JldHVybiBBLmNhbGwodGhpcyxJLFApfTpQO3JldHVybiB0aGlzLl9wYWlycy5tYXAoKGZ1bmN0aW9uKEEpe3JldHVybiBJKEFbMF0pK1xcXCI9XFxcIitJKEFbMV0pfSksXFxcIlxcXCIpLmpvaW4oXFxcIiZcXFwiKX07Y29uc3QgJD16O2Z1bmN0aW9uIEFBKEEpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoQSkucmVwbGFjZSgvJTNBL2dpLFxcXCI6XFxcIikucmVwbGFjZSgvJTI0L2csXFxcIiRcXFwiKS5yZXBsYWNlKC8lMkMvZ2ksXFxcIixcXFwiKS5yZXBsYWNlKC8lMjAvZyxcXFwiK1xcXCIpLnJlcGxhY2UoLyU1Qi9naSxcXFwiW1xcXCIpLnJlcGxhY2UoLyU1RC9naSxcXFwiXVxcXCIpfWZ1bmN0aW9uIElBKEEsSSxnKXtpZighSSlyZXR1cm4gQTtjb25zdCBCPWcmJmcuZW5jb2RlfHxBQSxDPWcmJmcuc2VyaWFsaXplO2xldCBRO2lmKFE9Qz9DKEksZyk6Vy5pc1VSTFNlYXJjaFBhcmFtcyhJKT9JLnRvU3RyaW5nKCk6bmV3ICQoSSxnKS50b1N0cmluZyhCKSxRKXtjb25zdCBJPUEuaW5kZXhPZihcXFwiI1xcXCIpOy0xIT09SSYmKEE9QS5zbGljZSgwLEkpKSxBKz0oLTE9PT1BLmluZGV4T2YoXFxcIj9cXFwiKT9cXFwiP1xcXCI6XFxcIiZcXFwiKStRfXJldHVybiBBfWNvbnN0IGdBPWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5oYW5kbGVycz1bXX11c2UoQSxJLGcpe3JldHVybiB0aGlzLmhhbmRsZXJzLnB1c2goe2Z1bGZpbGxlZDpBLHJlamVjdGVkOkksc3luY2hyb25vdXM6ISFnJiZnLnN5bmNocm9ub3VzLHJ1bldoZW46Zz9nLnJ1bldoZW46bnVsbH0pLHRoaXMuaGFuZGxlcnMubGVuZ3RoLTF9ZWplY3QoQSl7dGhpcy5oYW5kbGVyc1tBXSYmKHRoaXMuaGFuZGxlcnNbQV09bnVsbCl9Y2xlYXIoKXt0aGlzLmhhbmRsZXJzJiYodGhpcy5oYW5kbGVycz1bXSl9Zm9yRWFjaChBKXtXLmZvckVhY2godGhpcy5oYW5kbGVycywoZnVuY3Rpb24oSSl7bnVsbCE9PUkmJkEoSSl9KSl9fSxCQT17c2lsZW50SlNPTlBhcnNpbmc6ITAsZm9yY2VkSlNPTlBhcnNpbmc6ITAsY2xhcmlmeVRpbWVvdXRFcnJvcjohMX0sQ0E9XFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiBVUkxTZWFyY2hQYXJhbXM/VVJMU2VhcmNoUGFyYW1zOiQsUUE9Rm9ybURhdGEsRUE9KCgpPT57bGV0IEE7cmV0dXJuKFxcXCJ1bmRlZmluZWRcXFwiPT10eXBlb2YgbmF2aWdhdG9yfHxcXFwiUmVhY3ROYXRpdmVcXFwiIT09KEE9bmF2aWdhdG9yLnByb2R1Y3QpJiZcXFwiTmF0aXZlU2NyaXB0XFxcIiE9PUEmJlxcXCJOU1xcXCIhPT1BKSYmXFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiB3aW5kb3cmJlxcXCJ1bmRlZmluZWRcXFwiIT10eXBlb2YgZG9jdW1lbnR9KSgpLGlBPXtpc0Jyb3dzZXI6ITAsY2xhc3Nlczp7VVJMU2VhcmNoUGFyYW1zOkNBLEZvcm1EYXRhOlFBLEJsb2J9LGlzU3RhbmRhcmRCcm93c2VyRW52OkVBLHByb3RvY29sczpbXFxcImh0dHBcXFwiLFxcXCJodHRwc1xcXCIsXFxcImZpbGVcXFwiLFxcXCJibG9iXFxcIixcXFwidXJsXFxcIixcXFwiZGF0YVxcXCJdfSxvQT1mdW5jdGlvbihBKXtmdW5jdGlvbiBJKEEsZyxCLEMpe2xldCBRPUFbQysrXTtjb25zdCBFPU51bWJlci5pc0Zpbml0ZSgrUSksaT1DPj1BLmxlbmd0aDtyZXR1cm4gUT0hUSYmVy5pc0FycmF5KEIpP0IubGVuZ3RoOlEsaT8oVy5oYXNPd25Qcm9wKEIsUSk/QltRXT1bQltRXSxnXTpCW1FdPWcsIUUpOihCW1FdJiZXLmlzT2JqZWN0KEJbUV0pfHwoQltRXT1bXSksSShBLGcsQltRXSxDKSYmVy5pc0FycmF5KEJbUV0pJiYoQltRXT1mdW5jdGlvbihBKXtjb25zdCBJPXt9LGc9T2JqZWN0LmtleXMoQSk7bGV0IEI7Y29uc3QgQz1nLmxlbmd0aDtsZXQgUTtmb3IoQj0wO0I8QztCKyspUT1nW0JdLElbUV09QVtRXTtyZXR1cm4gSX0oQltRXSkpLCFFKX1pZihXLmlzRm9ybURhdGEoQSkmJlcuaXNGdW5jdGlvbihBLmVudHJpZXMpKXtjb25zdCBnPXt9O3JldHVybiBXLmZvckVhY2hFbnRyeShBLCgoQSxCKT0+e0koZnVuY3Rpb24oQSl7cmV0dXJuIFcubWF0Y2hBbGwoL1xcXFx3K3xcXFxcWyhcXFxcdyopXS9nLEEpLm1hcCgoQT0+XFxcIltdXFxcIj09PUFbMF0/XFxcIlxcXCI6QVsxXXx8QVswXSkpfShBKSxCLGcsMCl9KSksZ31yZXR1cm4gbnVsbH0sREE9aUEuaXNTdGFuZGFyZEJyb3dzZXJFbnY/e3dyaXRlOmZ1bmN0aW9uKEEsSSxnLEIsQyxRKXtjb25zdCBFPVtdO0UucHVzaChBK1xcXCI9XFxcIitlbmNvZGVVUklDb21wb25lbnQoSSkpLFcuaXNOdW1iZXIoZykmJkUucHVzaChcXFwiZXhwaXJlcz1cXFwiK25ldyBEYXRlKGcpLnRvR01UU3RyaW5nKCkpLFcuaXNTdHJpbmcoQikmJkUucHVzaChcXFwicGF0aD1cXFwiK0IpLFcuaXNTdHJpbmcoQykmJkUucHVzaChcXFwiZG9tYWluPVxcXCIrQyksITA9PT1RJiZFLnB1c2goXFxcInNlY3VyZVxcXCIpLGRvY3VtZW50LmNvb2tpZT1FLmpvaW4oXFxcIjsgXFxcIil9LHJlYWQ6ZnVuY3Rpb24oQSl7Y29uc3QgST1kb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cChcXFwiKF58O1xcXFxcXFxccyopKFxcXCIrQStcXFwiKT0oW147XSopXFxcIikpO3JldHVybiBJP2RlY29kZVVSSUNvbXBvbmVudChJWzNdKTpudWxsfSxyZW1vdmU6ZnVuY3Rpb24oQSl7dGhpcy53cml0ZShBLFxcXCJcXFwiLERhdGUubm93KCktODY0ZTUpfX06e3dyaXRlOmZ1bmN0aW9uKCl7fSxyZWFkOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LHJlbW92ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIGFBKEEsSSl7cmV0dXJuIEEmJiEvXihbYS16XVthLXpcXFxcZCtcXFxcLS5dKjopP1xcXFwvXFxcXC8vaS50ZXN0KEkpP2Z1bmN0aW9uKEEsSSl7cmV0dXJuIEk/QS5yZXBsYWNlKC9cXFxcLyskLyxcXFwiXFxcIikrXFxcIi9cXFwiK0kucmVwbGFjZSgvXlxcXFwvKy8sXFxcIlxcXCIpOkF9KEEsSSk6SX1jb25zdCB3QT1pQS5pc1N0YW5kYXJkQnJvd3NlckVudj9mdW5jdGlvbigpe2NvbnN0IEE9Lyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSxJPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXFxcImFcXFwiKTtsZXQgZztmdW5jdGlvbiBCKGcpe2xldCBCPWc7cmV0dXJuIEEmJihJLnNldEF0dHJpYnV0ZShcXFwiaHJlZlxcXCIsQiksQj1JLmhyZWYpLEkuc2V0QXR0cmlidXRlKFxcXCJocmVmXFxcIixCKSx7aHJlZjpJLmhyZWYscHJvdG9jb2w6SS5wcm90b2NvbD9JLnByb3RvY29sLnJlcGxhY2UoLzokLyxcXFwiXFxcIik6XFxcIlxcXCIsaG9zdDpJLmhvc3Qsc2VhcmNoOkkuc2VhcmNoP0kuc2VhcmNoLnJlcGxhY2UoL15cXFxcPy8sXFxcIlxcXCIpOlxcXCJcXFwiLGhhc2g6SS5oYXNoP0kuaGFzaC5yZXBsYWNlKC9eIy8sXFxcIlxcXCIpOlxcXCJcXFwiLGhvc3RuYW1lOkkuaG9zdG5hbWUscG9ydDpJLnBvcnQscGF0aG5hbWU6XFxcIi9cXFwiPT09SS5wYXRobmFtZS5jaGFyQXQoMCk/SS5wYXRobmFtZTpcXFwiL1xcXCIrSS5wYXRobmFtZX19cmV0dXJuIGc9Qih3aW5kb3cubG9jYXRpb24uaHJlZiksZnVuY3Rpb24oQSl7Y29uc3QgST1XLmlzU3RyaW5nKEEpP0IoQSk6QTtyZXR1cm4gSS5wcm90b2NvbD09PWcucHJvdG9jb2wmJkkuaG9zdD09PWcuaG9zdH19KCk6ZnVuY3Rpb24oKXtyZXR1cm4hMH07ZnVuY3Rpb24gc0EoQSxJLGcpe3guY2FsbCh0aGlzLG51bGw9PUE/XFxcImNhbmNlbGVkXFxcIjpBLHguRVJSX0NBTkNFTEVELEksZyksdGhpcy5uYW1lPVxcXCJDYW5jZWxlZEVycm9yXFxcIn1XLmluaGVyaXRzKHNBLHgse19fQ0FOQ0VMX186ITB9KTtjb25zdCBHQT1zQSxoQT1XLnRvT2JqZWN0U2V0KFtcXFwiYWdlXFxcIixcXFwiYXV0aG9yaXphdGlvblxcXCIsXFxcImNvbnRlbnQtbGVuZ3RoXFxcIixcXFwiY29udGVudC10eXBlXFxcIixcXFwiZXRhZ1xcXCIsXFxcImV4cGlyZXNcXFwiLFxcXCJmcm9tXFxcIixcXFwiaG9zdFxcXCIsXFxcImlmLW1vZGlmaWVkLXNpbmNlXFxcIixcXFwiaWYtdW5tb2RpZmllZC1zaW5jZVxcXCIsXFxcImxhc3QtbW9kaWZpZWRcXFwiLFxcXCJsb2NhdGlvblxcXCIsXFxcIm1heC1mb3J3YXJkc1xcXCIsXFxcInByb3h5LWF1dGhvcml6YXRpb25cXFwiLFxcXCJyZWZlcmVyXFxcIixcXFwicmV0cnktYWZ0ZXJcXFwiLFxcXCJ1c2VyLWFnZW50XFxcIl0pLHRBPVN5bWJvbChcXFwiaW50ZXJuYWxzXFxcIiksUkE9U3ltYm9sKFxcXCJkZWZhdWx0c1xcXCIpO2Z1bmN0aW9uIEZBKEEpe3JldHVybiBBJiZTdHJpbmcoQSkudHJpbSgpLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24geUEoQSl7cmV0dXJuITE9PT1BfHxudWxsPT1BP0E6Vy5pc0FycmF5KEEpP0EubWFwKHlBKTpTdHJpbmcoQSl9ZnVuY3Rpb24gckEoQSxJLGcsQil7cmV0dXJuIFcuaXNGdW5jdGlvbihCKT9CLmNhbGwodGhpcyxJLGcpOlcuaXNTdHJpbmcoSSk/Vy5pc1N0cmluZyhCKT8tMSE9PUkuaW5kZXhPZihCKTpXLmlzUmVnRXhwKEIpP0IudGVzdChJKTp2b2lkIDA6dm9pZCAwfWZ1bmN0aW9uIE1BKEEsSSl7ST1JLnRvTG93ZXJDYXNlKCk7Y29uc3QgZz1PYmplY3Qua2V5cyhBKTtsZXQgQixDPWcubGVuZ3RoO2Zvcig7Qy0tID4wOylpZihCPWdbQ10sST09PUIudG9Mb3dlckNhc2UoKSlyZXR1cm4gQjtyZXR1cm4gbnVsbH1mdW5jdGlvbiBlQShBLEkpe0EmJnRoaXMuc2V0KEEpLHRoaXNbUkFdPUl8fG51bGx9T2JqZWN0LmFzc2lnbihlQS5wcm90b3R5cGUse3NldDpmdW5jdGlvbihBLEksZyl7Y29uc3QgQj10aGlzO2Z1bmN0aW9uIEMoQSxJLGcpe2NvbnN0IEM9RkEoSSk7aWYoIUMpdGhyb3cgbmV3IEVycm9yKFxcXCJoZWFkZXIgbmFtZSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZ1xcXCIpO2NvbnN0IFE9TUEoQixDKTsoIVF8fCEwPT09Z3x8ITEhPT1CW1FdJiYhMSE9PWcpJiYoQltRfHxJXT15QShBKSl9cmV0dXJuIFcuaXNQbGFpbk9iamVjdChBKT9XLmZvckVhY2goQSwoKEEsZyk9PntDKEEsZyxJKX0pKTpDKEksQSxnKSx0aGlzfSxnZXQ6ZnVuY3Rpb24oQSxJKXtpZighKEE9RkEoQSkpKXJldHVybjtjb25zdCBnPU1BKHRoaXMsQSk7aWYoZyl7Y29uc3QgQT10aGlzW2ddO2lmKCFJKXJldHVybiBBO2lmKCEwPT09SSlyZXR1cm4gZnVuY3Rpb24oQSl7Y29uc3QgST1PYmplY3QuY3JlYXRlKG51bGwpLGc9LyhbXlxcXFxzLDs9XSspXFxcXHMqKD86PVxcXFxzKihbXiw7XSspKT8vZztsZXQgQjtmb3IoO0I9Zy5leGVjKEEpOylJW0JbMV1dPUJbMl07cmV0dXJuIEl9KEEpO2lmKFcuaXNGdW5jdGlvbihJKSlyZXR1cm4gSS5jYWxsKHRoaXMsQSxnKTtpZihXLmlzUmVnRXhwKEkpKXJldHVybiBJLmV4ZWMoQSk7dGhyb3cgbmV3IFR5cGVFcnJvcihcXFwicGFyc2VyIG11c3QgYmUgYm9vbGVhbnxyZWdleHB8ZnVuY3Rpb25cXFwiKX19LGhhczpmdW5jdGlvbihBLEkpe2lmKEE9RkEoQSkpe2NvbnN0IGc9TUEodGhpcyxBKTtyZXR1cm4hKCFnfHxJJiYhckEoMCx0aGlzW2ddLGcsSSkpfXJldHVybiExfSxkZWxldGU6ZnVuY3Rpb24oQSxJKXtjb25zdCBnPXRoaXM7bGV0IEI9ITE7ZnVuY3Rpb24gQyhBKXtpZihBPUZBKEEpKXtjb25zdCBDPU1BKGcsQSk7IUN8fEkmJiFyQSgwLGdbQ10sQyxJKXx8KGRlbGV0ZSBnW0NdLEI9ITApfX1yZXR1cm4gVy5pc0FycmF5KEEpP0EuZm9yRWFjaChDKTpDKEEpLEJ9LGNsZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMpLmZvckVhY2godGhpcy5kZWxldGUuYmluZCh0aGlzKSl9LG5vcm1hbGl6ZTpmdW5jdGlvbihBKXtjb25zdCBJPXRoaXMsZz17fTtyZXR1cm4gVy5mb3JFYWNoKHRoaXMsKChCLEMpPT57Y29uc3QgUT1NQShnLEMpO2lmKFEpcmV0dXJuIElbUV09eUEoQiksdm9pZCBkZWxldGUgSVtDXTtjb25zdCBFPUE/ZnVuY3Rpb24oQSl7cmV0dXJuIEEudHJpbSgpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvKFthLXpcXFxcZF0pKFxcXFx3KikvZywoKEEsSSxnKT0+SS50b1VwcGVyQ2FzZSgpK2cpKX0oQyk6U3RyaW5nKEMpLnRyaW0oKTtFIT09QyYmZGVsZXRlIElbQ10sSVtFXT15QShCKSxnW0VdPSEwfSkpLHRoaXN9LHRvSlNPTjpmdW5jdGlvbihBKXtjb25zdCBJPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIFcuZm9yRWFjaChPYmplY3QuYXNzaWduKHt9LHRoaXNbUkFdfHxudWxsLHRoaXMpLCgoZyxCKT0+e251bGwhPWcmJiExIT09ZyYmKElbQl09QSYmVy5pc0FycmF5KGcpP2cuam9pbihcXFwiLCBcXFwiKTpnKX0pKSxJfX0pLE9iamVjdC5hc3NpZ24oZUEse2Zyb206ZnVuY3Rpb24oQSl7cmV0dXJuIFcuaXNTdHJpbmcoQSk/bmV3IHRoaXMoKEE9Pntjb25zdCBJPXt9O2xldCBnLEIsQztyZXR1cm4gQSYmQS5zcGxpdChcXFwiXFxcXG5cXFwiKS5mb3JFYWNoKChmdW5jdGlvbihBKXtDPUEuaW5kZXhPZihcXFwiOlxcXCIpLGc9QS5zdWJzdHJpbmcoMCxDKS50cmltKCkudG9Mb3dlckNhc2UoKSxCPUEuc3Vic3RyaW5nKEMrMSkudHJpbSgpLCFnfHxJW2ddJiZoQVtnXXx8KFxcXCJzZXQtY29va2llXFxcIj09PWc/SVtnXT9JW2ddLnB1c2goQik6SVtnXT1bQl06SVtnXT1JW2ddP0lbZ10rXFxcIiwgXFxcIitCOkIpfSkpLEl9KShBKSk6QSBpbnN0YW5jZW9mIHRoaXM/QTpuZXcgdGhpcyhBKX0sYWNjZXNzb3I6ZnVuY3Rpb24oQSl7Y29uc3QgST0odGhpc1t0QV09dGhpc1t0QV09e2FjY2Vzc29yczp7fX0pLmFjY2Vzc29ycyxnPXRoaXMucHJvdG90eXBlO2Z1bmN0aW9uIEIoQSl7Y29uc3QgQj1GQShBKTtJW0JdfHwoZnVuY3Rpb24oQSxJKXtjb25zdCBnPVcudG9DYW1lbENhc2UoXFxcIiBcXFwiK0kpO1tcXFwiZ2V0XFxcIixcXFwic2V0XFxcIixcXFwiaGFzXFxcIl0uZm9yRWFjaCgoQj0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShBLEIrZyx7dmFsdWU6ZnVuY3Rpb24oQSxnLEMpe3JldHVybiB0aGlzW0JdLmNhbGwodGhpcyxJLEEsZyxDKX0sY29uZmlndXJhYmxlOiEwfSl9KSl9KGcsQSksSVtCXT0hMCl9cmV0dXJuIFcuaXNBcnJheShBKT9BLmZvckVhY2goQik6QihBKSx0aGlzfX0pLGVBLmFjY2Vzc29yKFtcXFwiQ29udGVudC1UeXBlXFxcIixcXFwiQ29udGVudC1MZW5ndGhcXFwiLFxcXCJBY2NlcHRcXFwiLFxcXCJBY2NlcHQtRW5jb2RpbmdcXFwiLFxcXCJVc2VyLUFnZW50XFxcIl0pLFcuZnJlZXplTWV0aG9kcyhlQS5wcm90b3R5cGUpLFcuZnJlZXplTWV0aG9kcyhlQSk7Y29uc3QgU0E9ZUE7ZnVuY3Rpb24gTkEoQSxJKXtsZXQgZz0wO2NvbnN0IEI9ZnVuY3Rpb24oQSxJKXtBPUF8fDEwO2NvbnN0IGc9bmV3IEFycmF5KEEpLEI9bmV3IEFycmF5KEEpO2xldCBDLFE9MCxFPTA7cmV0dXJuIEk9dm9pZCAwIT09ST9JOjFlMyxmdW5jdGlvbihpKXtjb25zdCBvPURhdGUubm93KCksRD1CW0VdO0N8fChDPW8pLGdbUV09aSxCW1FdPW87bGV0IGE9RSx3PTA7Zm9yKDthIT09UTspdys9Z1thKytdLGElPUE7aWYoUT0oUSsxKSVBLFE9PT1FJiYoRT0oRSsxKSVBKSxvLUM8SSlyZXR1cm47Y29uc3Qgcz1EJiZvLUQ7cmV0dXJuIHM/TWF0aC5yb3VuZCgxZTMqdy9zKTp2b2lkIDB9fSg1MCwyNTApO3JldHVybiBDPT57Y29uc3QgUT1DLmxvYWRlZCxFPUMubGVuZ3RoQ29tcHV0YWJsZT9DLnRvdGFsOnZvaWQgMCxpPVEtZyxvPUIoaSk7Zz1RO2NvbnN0IEQ9e2xvYWRlZDpRLHRvdGFsOkUscHJvZ3Jlc3M6RT9RL0U6dm9pZCAwLGJ5dGVzOmkscmF0ZTpvfHx2b2lkIDAsZXN0aW1hdGVkOm8mJkUmJlE8PUU/KEUtUSkvbzp2b2lkIDB9O0RbST9cXFwiZG93bmxvYWRcXFwiOlxcXCJ1cGxvYWRcXFwiXT0hMCxBKEQpfX1mdW5jdGlvbiBuQShBKXtyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKEksZyl7bGV0IEI9QS5kYXRhO2NvbnN0IEM9U0EuZnJvbShBLmhlYWRlcnMpLm5vcm1hbGl6ZSgpLFE9QS5yZXNwb25zZVR5cGU7bGV0IEU7ZnVuY3Rpb24gaSgpe0EuY2FuY2VsVG9rZW4mJkEuY2FuY2VsVG9rZW4udW5zdWJzY3JpYmUoRSksQS5zaWduYWwmJkEuc2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXFxcImFib3J0XFxcIixFKX1XLmlzRm9ybURhdGEoQikmJmlBLmlzU3RhbmRhcmRCcm93c2VyRW52JiZDLnNldENvbnRlbnRUeXBlKCExKTtsZXQgbz1uZXcgWE1MSHR0cFJlcXVlc3Q7aWYoQS5hdXRoKXtjb25zdCBJPUEuYXV0aC51c2VybmFtZXx8XFxcIlxcXCIsZz1BLmF1dGgucGFzc3dvcmQ/dW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEEuYXV0aC5wYXNzd29yZCkpOlxcXCJcXFwiO0Muc2V0KFxcXCJBdXRob3JpemF0aW9uXFxcIixcXFwiQmFzaWMgXFxcIitidG9hKEkrXFxcIjpcXFwiK2cpKX1jb25zdCBEPWFBKEEuYmFzZVVSTCxBLnVybCk7ZnVuY3Rpb24gYSgpe2lmKCFvKXJldHVybjtjb25zdCBCPVNBLmZyb20oXFxcImdldEFsbFJlc3BvbnNlSGVhZGVyc1xcXCJpbiBvJiZvLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKTshZnVuY3Rpb24oQSxJLGcpe2NvbnN0IEI9Zy5jb25maWcudmFsaWRhdGVTdGF0dXM7Zy5zdGF0dXMmJkImJiFCKGcuc3RhdHVzKT9JKG5ldyB4KFxcXCJSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlIFxcXCIrZy5zdGF0dXMsW3guRVJSX0JBRF9SRVFVRVNULHguRVJSX0JBRF9SRVNQT05TRV1bTWF0aC5mbG9vcihnLnN0YXR1cy8xMDApLTRdLGcuY29uZmlnLGcucmVxdWVzdCxnKSk6QShnKX0oKGZ1bmN0aW9uKEEpe0koQSksaSgpfSksKGZ1bmN0aW9uKEEpe2coQSksaSgpfSkse2RhdGE6USYmXFxcInRleHRcXFwiIT09USYmXFxcImpzb25cXFwiIT09UT9vLnJlc3BvbnNlOm8ucmVzcG9uc2VUZXh0LHN0YXR1czpvLnN0YXR1cyxzdGF0dXNUZXh0Om8uc3RhdHVzVGV4dCxoZWFkZXJzOkIsY29uZmlnOkEscmVxdWVzdDpvfSksbz1udWxsfWlmKG8ub3BlbihBLm1ldGhvZC50b1VwcGVyQ2FzZSgpLElBKEQsQS5wYXJhbXMsQS5wYXJhbXNTZXJpYWxpemVyKSwhMCksby50aW1lb3V0PUEudGltZW91dCxcXFwib25sb2FkZW5kXFxcImluIG8/by5vbmxvYWRlbmQ9YTpvLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe28mJjQ9PT1vLnJlYWR5U3RhdGUmJigwIT09by5zdGF0dXN8fG8ucmVzcG9uc2VVUkwmJjA9PT1vLnJlc3BvbnNlVVJMLmluZGV4T2YoXFxcImZpbGU6XFxcIikpJiZzZXRUaW1lb3V0KGEpfSxvLm9uYWJvcnQ9ZnVuY3Rpb24oKXtvJiYoZyhuZXcgeChcXFwiUmVxdWVzdCBhYm9ydGVkXFxcIix4LkVDT05OQUJPUlRFRCxBLG8pKSxvPW51bGwpfSxvLm9uZXJyb3I9ZnVuY3Rpb24oKXtnKG5ldyB4KFxcXCJOZXR3b3JrIEVycm9yXFxcIix4LkVSUl9ORVRXT1JLLEEsbykpLG89bnVsbH0sby5vbnRpbWVvdXQ9ZnVuY3Rpb24oKXtsZXQgST1BLnRpbWVvdXQ/XFxcInRpbWVvdXQgb2YgXFxcIitBLnRpbWVvdXQrXFxcIm1zIGV4Y2VlZGVkXFxcIjpcXFwidGltZW91dCBleGNlZWRlZFxcXCI7Y29uc3QgQj1BLnRyYW5zaXRpb25hbHx8QkE7QS50aW1lb3V0RXJyb3JNZXNzYWdlJiYoST1BLnRpbWVvdXRFcnJvck1lc3NhZ2UpLGcobmV3IHgoSSxCLmNsYXJpZnlUaW1lb3V0RXJyb3I/eC5FVElNRURPVVQ6eC5FQ09OTkFCT1JURUQsQSxvKSksbz1udWxsfSxpQS5pc1N0YW5kYXJkQnJvd3NlckVudil7Y29uc3QgST0oQS53aXRoQ3JlZGVudGlhbHN8fHdBKEQpKSYmQS54c3JmQ29va2llTmFtZSYmREEucmVhZChBLnhzcmZDb29raWVOYW1lKTtJJiZDLnNldChBLnhzcmZIZWFkZXJOYW1lLEkpfXZvaWQgMD09PUImJkMuc2V0Q29udGVudFR5cGUobnVsbCksXFxcInNldFJlcXVlc3RIZWFkZXJcXFwiaW4gbyYmVy5mb3JFYWNoKEMudG9KU09OKCksKGZ1bmN0aW9uKEEsSSl7by5zZXRSZXF1ZXN0SGVhZGVyKEksQSl9KSksVy5pc1VuZGVmaW5lZChBLndpdGhDcmVkZW50aWFscyl8fChvLndpdGhDcmVkZW50aWFscz0hIUEud2l0aENyZWRlbnRpYWxzKSxRJiZcXFwianNvblxcXCIhPT1RJiYoby5yZXNwb25zZVR5cGU9QS5yZXNwb25zZVR5cGUpLFxcXCJmdW5jdGlvblxcXCI9PXR5cGVvZiBBLm9uRG93bmxvYWRQcm9ncmVzcyYmby5hZGRFdmVudExpc3RlbmVyKFxcXCJwcm9ncmVzc1xcXCIsTkEoQS5vbkRvd25sb2FkUHJvZ3Jlc3MsITApKSxcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgQS5vblVwbG9hZFByb2dyZXNzJiZvLnVwbG9hZCYmby51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcihcXFwicHJvZ3Jlc3NcXFwiLE5BKEEub25VcGxvYWRQcm9ncmVzcykpLChBLmNhbmNlbFRva2VufHxBLnNpZ25hbCkmJihFPUk9PntvJiYoZyghSXx8SS50eXBlP25ldyBHQShudWxsLEEsbyk6SSksby5hYm9ydCgpLG89bnVsbCl9LEEuY2FuY2VsVG9rZW4mJkEuY2FuY2VsVG9rZW4uc3Vic2NyaWJlKEUpLEEuc2lnbmFsJiYoQS5zaWduYWwuYWJvcnRlZD9FKCk6QS5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcXFwiYWJvcnRcXFwiLEUpKSk7Y29uc3Qgdz1mdW5jdGlvbihBKXtjb25zdCBJPS9eKFstK1xcXFx3XXsxLDI1fSkoOj9cXFxcL1xcXFwvfDopLy5leGVjKEEpO3JldHVybiBJJiZJWzFdfHxcXFwiXFxcIn0oRCk7dyYmLTE9PT1pQS5wcm90b2NvbHMuaW5kZXhPZih3KT9nKG5ldyB4KFxcXCJVbnN1cHBvcnRlZCBwcm90b2NvbCBcXFwiK3crXFxcIjpcXFwiLHguRVJSX0JBRF9SRVFVRVNULEEpKTpvLnNlbmQoQnx8bnVsbCl9KSl9Y29uc3QgY0E9e2h0dHA6bkEseGhyOm5BfSxrQT1BPT57aWYoVy5pc1N0cmluZyhBKSl7Y29uc3QgST1jQVtBXTtpZighQSl0aHJvdyBFcnJvcihXLmhhc093blByb3AoQSk/YEFkYXB0ZXIgJyR7QX0nIGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkYDpgQ2FuIG5vdCByZXNvbHZlIGFkYXB0ZXIgJyR7QX0nYCk7cmV0dXJuIEl9aWYoIVcuaXNGdW5jdGlvbihBKSl0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJhZGFwdGVyIGlzIG5vdCBhIGZ1bmN0aW9uXFxcIik7cmV0dXJuIEF9LFVBPXtcXFwiQ29udGVudC1UeXBlXFxcIjpcXFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXFxcIn0sSkE9e3RyYW5zaXRpb25hbDpCQSxhZGFwdGVyOmZ1bmN0aW9uKCl7bGV0IEE7cmV0dXJuXFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiBYTUxIdHRwUmVxdWVzdD9BPWtBKFxcXCJ4aHJcXFwiKTpcXFwidW5kZWZpbmVkXFxcIiE9dHlwZW9mIHByb2Nlc3MmJlxcXCJwcm9jZXNzXFxcIj09PVcua2luZE9mKHByb2Nlc3MpJiYoQT1rQShcXFwiaHR0cFxcXCIpKSxBfSgpLHRyYW5zZm9ybVJlcXVlc3Q6W2Z1bmN0aW9uKEEsSSl7Y29uc3QgZz1JLmdldENvbnRlbnRUeXBlKCl8fFxcXCJcXFwiLEI9Zy5pbmRleE9mKFxcXCJhcHBsaWNhdGlvbi9qc29uXFxcIik+LTEsQz1XLmlzT2JqZWN0KEEpO2lmKEMmJlcuaXNIVE1MRm9ybShBKSYmKEE9bmV3IEZvcm1EYXRhKEEpKSxXLmlzRm9ybURhdGEoQSkpcmV0dXJuIEImJkI/SlNPTi5zdHJpbmdpZnkob0EoQSkpOkE7aWYoVy5pc0FycmF5QnVmZmVyKEEpfHxXLmlzQnVmZmVyKEEpfHxXLmlzU3RyZWFtKEEpfHxXLmlzRmlsZShBKXx8Vy5pc0Jsb2IoQSkpcmV0dXJuIEE7aWYoVy5pc0FycmF5QnVmZmVyVmlldyhBKSlyZXR1cm4gQS5idWZmZXI7aWYoVy5pc1VSTFNlYXJjaFBhcmFtcyhBKSlyZXR1cm4gSS5zZXRDb250ZW50VHlwZShcXFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLThcXFwiLCExKSxBLnRvU3RyaW5nKCk7bGV0IFE7aWYoQyl7aWYoZy5pbmRleE9mKFxcXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcXFwiKT4tMSlyZXR1cm4gZnVuY3Rpb24oQSxJKXtyZXR1cm4gdihBLG5ldyBpQS5jbGFzc2VzLlVSTFNlYXJjaFBhcmFtcyxPYmplY3QuYXNzaWduKHt2aXNpdG9yOmZ1bmN0aW9uKEEsSSxnLEIpe3JldHVybiBpQS5pc05vZGUmJlcuaXNCdWZmZXIoQSk/KHRoaXMuYXBwZW5kKEksQS50b1N0cmluZyhcXFwiYmFzZTY0XFxcIikpLCExKTpCLmRlZmF1bHRWaXNpdG9yLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LEkpKX0oQSx0aGlzLmZvcm1TZXJpYWxpemVyKS50b1N0cmluZygpO2lmKChRPVcuaXNGaWxlTGlzdChBKSl8fGcuaW5kZXhPZihcXFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVxcXCIpPi0xKXtjb25zdCBJPXRoaXMuZW52JiZ0aGlzLmVudi5Gb3JtRGF0YTtyZXR1cm4gdihRP3tcXFwiZmlsZXNbXVxcXCI6QX06QSxJJiZuZXcgSSx0aGlzLmZvcm1TZXJpYWxpemVyKX19cmV0dXJuIEN8fEI/KEkuc2V0Q29udGVudFR5cGUoXFxcImFwcGxpY2F0aW9uL2pzb25cXFwiLCExKSxmdW5jdGlvbihBLEksZyl7aWYoVy5pc1N0cmluZyhBKSl0cnl7cmV0dXJuKDAsSlNPTi5wYXJzZSkoQSksVy50cmltKEEpfWNhdGNoKEEpe2lmKFxcXCJTeW50YXhFcnJvclxcXCIhPT1BLm5hbWUpdGhyb3cgQX1yZXR1cm4oMCxKU09OLnN0cmluZ2lmeSkoQSl9KEEpKTpBfV0sdHJhbnNmb3JtUmVzcG9uc2U6W2Z1bmN0aW9uKEEpe2NvbnN0IEk9dGhpcy50cmFuc2l0aW9uYWx8fEpBLnRyYW5zaXRpb25hbCxnPUkmJkkuZm9yY2VkSlNPTlBhcnNpbmcsQj1cXFwianNvblxcXCI9PT10aGlzLnJlc3BvbnNlVHlwZTtpZihBJiZXLmlzU3RyaW5nKEEpJiYoZyYmIXRoaXMucmVzcG9uc2VUeXBlfHxCKSl7Y29uc3QgZz0hKEkmJkkuc2lsZW50SlNPTlBhcnNpbmcpJiZCO3RyeXtyZXR1cm4gSlNPTi5wYXJzZShBKX1jYXRjaChBKXtpZihnKXtpZihcXFwiU3ludGF4RXJyb3JcXFwiPT09QS5uYW1lKXRocm93IHguZnJvbShBLHguRVJSX0JBRF9SRVNQT05TRSx0aGlzLG51bGwsdGhpcy5yZXNwb25zZSk7dGhyb3cgQX19fXJldHVybiBBfV0sdGltZW91dDowLHhzcmZDb29raWVOYW1lOlxcXCJYU1JGLVRPS0VOXFxcIix4c3JmSGVhZGVyTmFtZTpcXFwiWC1YU1JGLVRPS0VOXFxcIixtYXhDb250ZW50TGVuZ3RoOi0xLG1heEJvZHlMZW5ndGg6LTEsZW52OntGb3JtRGF0YTppQS5jbGFzc2VzLkZvcm1EYXRhLEJsb2I6aUEuY2xhc3Nlcy5CbG9ifSx2YWxpZGF0ZVN0YXR1czpmdW5jdGlvbihBKXtyZXR1cm4gQT49MjAwJiZBPDMwMH0saGVhZGVyczp7Y29tbW9uOntBY2NlcHQ6XFxcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKlxcXCJ9fX07Vy5mb3JFYWNoKFtcXFwiZGVsZXRlXFxcIixcXFwiZ2V0XFxcIixcXFwiaGVhZFxcXCJdLChmdW5jdGlvbihBKXtKQS5oZWFkZXJzW0FdPXt9fSkpLFcuZm9yRWFjaChbXFxcInBvc3RcXFwiLFxcXCJwdXRcXFwiLFxcXCJwYXRjaFxcXCJdLChmdW5jdGlvbihBKXtKQS5oZWFkZXJzW0FdPVcubWVyZ2UoVUEpfSkpO2NvbnN0IEtBPUpBO2Z1bmN0aW9uIFlBKEEsSSl7Y29uc3QgZz10aGlzfHxLQSxCPUl8fGcsQz1TQS5mcm9tKEIuaGVhZGVycyk7bGV0IFE9Qi5kYXRhO3JldHVybiBXLmZvckVhY2goQSwoZnVuY3Rpb24oQSl7UT1BLmNhbGwoZyxRLEMubm9ybWFsaXplKCksST9JLnN0YXR1czp2b2lkIDApfSkpLEMubm9ybWFsaXplKCksUX1mdW5jdGlvbiBMQShBKXtyZXR1cm4hKCFBfHwhQS5fX0NBTkNFTF9fKX1mdW5jdGlvbiBkQShBKXtpZihBLmNhbmNlbFRva2VuJiZBLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKSxBLnNpZ25hbCYmQS5zaWduYWwuYWJvcnRlZCl0aHJvdyBuZXcgR0F9ZnVuY3Rpb24gbEEoQSl7cmV0dXJuIGRBKEEpLEEuaGVhZGVycz1TQS5mcm9tKEEuaGVhZGVycyksQS5kYXRhPVlBLmNhbGwoQSxBLnRyYW5zZm9ybVJlcXVlc3QpLChBLmFkYXB0ZXJ8fEtBLmFkYXB0ZXIpKEEpLnRoZW4oKGZ1bmN0aW9uKEkpe3JldHVybiBkQShBKSxJLmRhdGE9WUEuY2FsbChBLEEudHJhbnNmb3JtUmVzcG9uc2UsSSksSS5oZWFkZXJzPVNBLmZyb20oSS5oZWFkZXJzKSxJfSksKGZ1bmN0aW9uKEkpe3JldHVybiBMQShJKXx8KGRBKEEpLEkmJkkucmVzcG9uc2UmJihJLnJlc3BvbnNlLmRhdGE9WUEuY2FsbChBLEEudHJhbnNmb3JtUmVzcG9uc2UsSS5yZXNwb25zZSksSS5yZXNwb25zZS5oZWFkZXJzPVNBLmZyb20oSS5yZXNwb25zZS5oZWFkZXJzKSkpLFByb21pc2UucmVqZWN0KEkpfSkpfWZ1bmN0aW9uIHFBKEEsSSl7ST1JfHx7fTtjb25zdCBnPXt9O2Z1bmN0aW9uIEIoQSxJKXtyZXR1cm4gVy5pc1BsYWluT2JqZWN0KEEpJiZXLmlzUGxhaW5PYmplY3QoSSk/Vy5tZXJnZShBLEkpOlcuaXNQbGFpbk9iamVjdChJKT9XLm1lcmdlKHt9LEkpOlcuaXNBcnJheShJKT9JLnNsaWNlKCk6SX1mdW5jdGlvbiBDKGcpe3JldHVybiBXLmlzVW5kZWZpbmVkKElbZ10pP1cuaXNVbmRlZmluZWQoQVtnXSk/dm9pZCAwOkIodm9pZCAwLEFbZ10pOkIoQVtnXSxJW2ddKX1mdW5jdGlvbiBRKEEpe2lmKCFXLmlzVW5kZWZpbmVkKElbQV0pKXJldHVybiBCKHZvaWQgMCxJW0FdKX1mdW5jdGlvbiBFKGcpe3JldHVybiBXLmlzVW5kZWZpbmVkKElbZ10pP1cuaXNVbmRlZmluZWQoQVtnXSk/dm9pZCAwOkIodm9pZCAwLEFbZ10pOkIodm9pZCAwLElbZ10pfWZ1bmN0aW9uIGkoZyl7cmV0dXJuIGcgaW4gST9CKEFbZ10sSVtnXSk6ZyBpbiBBP0Iodm9pZCAwLEFbZ10pOnZvaWQgMH1jb25zdCBvPXt1cmw6USxtZXRob2Q6USxkYXRhOlEsYmFzZVVSTDpFLHRyYW5zZm9ybVJlcXVlc3Q6RSx0cmFuc2Zvcm1SZXNwb25zZTpFLHBhcmFtc1NlcmlhbGl6ZXI6RSx0aW1lb3V0OkUsdGltZW91dE1lc3NhZ2U6RSx3aXRoQ3JlZGVudGlhbHM6RSxhZGFwdGVyOkUscmVzcG9uc2VUeXBlOkUseHNyZkNvb2tpZU5hbWU6RSx4c3JmSGVhZGVyTmFtZTpFLG9uVXBsb2FkUHJvZ3Jlc3M6RSxvbkRvd25sb2FkUHJvZ3Jlc3M6RSxkZWNvbXByZXNzOkUsbWF4Q29udGVudExlbmd0aDpFLG1heEJvZHlMZW5ndGg6RSxiZWZvcmVSZWRpcmVjdDpFLHRyYW5zcG9ydDpFLGh0dHBBZ2VudDpFLGh0dHBzQWdlbnQ6RSxjYW5jZWxUb2tlbjpFLHNvY2tldFBhdGg6RSxyZXNwb25zZUVuY29kaW5nOkUsdmFsaWRhdGVTdGF0dXM6aX07cmV0dXJuIFcuZm9yRWFjaChPYmplY3Qua2V5cyhBKS5jb25jYXQoT2JqZWN0LmtleXMoSSkpLChmdW5jdGlvbihBKXtjb25zdCBJPW9bQV18fEMsQj1JKEEpO1cuaXNVbmRlZmluZWQoQikmJkkhPT1pfHwoZ1tBXT1CKX0pKSxnfWNvbnN0IEhBPXt9O1tcXFwib2JqZWN0XFxcIixcXFwiYm9vbGVhblxcXCIsXFxcIm51bWJlclxcXCIsXFxcImZ1bmN0aW9uXFxcIixcXFwic3RyaW5nXFxcIixcXFwic3ltYm9sXFxcIl0uZm9yRWFjaCgoKEEsSSk9PntIQVtBXT1mdW5jdGlvbihnKXtyZXR1cm4gdHlwZW9mIGc9PT1BfHxcXFwiYVxcXCIrKEk8MT9cXFwibiBcXFwiOlxcXCIgXFxcIikrQX19KSk7Y29uc3QgZkE9e307SEEudHJhbnNpdGlvbmFsPWZ1bmN0aW9uKEEsSSxnKXtmdW5jdGlvbiBCKEEsSSl7cmV0dXJuXFxcIltBeGlvcyB2MS4xLjNdIFRyYW5zaXRpb25hbCBvcHRpb24gJ1xcXCIrQStcXFwiJ1xcXCIrSSsoZz9cXFwiLiBcXFwiK2c6XFxcIlxcXCIpfXJldHVybihnLEMsUSk9PntpZighMT09PUEpdGhyb3cgbmV3IHgoQihDLFxcXCIgaGFzIGJlZW4gcmVtb3ZlZFxcXCIrKEk/XFxcIiBpbiBcXFwiK0k6XFxcIlxcXCIpKSx4LkVSUl9ERVBSRUNBVEVEKTtyZXR1cm4gSSYmIWZBW0NdJiYoZkFbQ109ITAsY29uc29sZS53YXJuKEIoQyxcXFwiIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdlxcXCIrSStcXFwiIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5lYXIgZnV0dXJlXFxcIikpKSwhQXx8QShnLEMsUSl9fTtjb25zdCB1QT17YXNzZXJ0T3B0aW9uczpmdW5jdGlvbihBLEksZyl7aWYoXFxcIm9iamVjdFxcXCIhPXR5cGVvZiBBKXRocm93IG5ldyB4KFxcXCJvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0XFxcIix4LkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtjb25zdCBCPU9iamVjdC5rZXlzKEEpO2xldCBDPUIubGVuZ3RoO2Zvcig7Qy0tID4wOyl7Y29uc3QgUT1CW0NdLEU9SVtRXTtpZihFKXtjb25zdCBJPUFbUV0sZz12b2lkIDA9PT1JfHxFKEksUSxBKTtpZighMCE9PWcpdGhyb3cgbmV3IHgoXFxcIm9wdGlvbiBcXFwiK1ErXFxcIiBtdXN0IGJlIFxcXCIrZyx4LkVSUl9CQURfT1BUSU9OX1ZBTFVFKX1lbHNlIGlmKCEwIT09Zyl0aHJvdyBuZXcgeChcXFwiVW5rbm93biBvcHRpb24gXFxcIitRLHguRVJSX0JBRF9PUFRJT04pfX0sdmFsaWRhdG9yczpIQX0scEE9dUEudmFsaWRhdG9ycztjbGFzcyBXQXtjb25zdHJ1Y3RvcihBKXt0aGlzLmRlZmF1bHRzPUEsdGhpcy5pbnRlcmNlcHRvcnM9e3JlcXVlc3Q6bmV3IGdBLHJlc3BvbnNlOm5ldyBnQX19cmVxdWVzdChBLEkpe1xcXCJzdHJpbmdcXFwiPT10eXBlb2YgQT8oST1JfHx7fSkudXJsPUE6ST1BfHx7fSxJPXFBKHRoaXMuZGVmYXVsdHMsSSk7Y29uc3R7dHJhbnNpdGlvbmFsOmcscGFyYW1zU2VyaWFsaXplcjpCfT1JO3ZvaWQgMCE9PWcmJnVBLmFzc2VydE9wdGlvbnMoZyx7c2lsZW50SlNPTlBhcnNpbmc6cEEudHJhbnNpdGlvbmFsKHBBLmJvb2xlYW4pLGZvcmNlZEpTT05QYXJzaW5nOnBBLnRyYW5zaXRpb25hbChwQS5ib29sZWFuKSxjbGFyaWZ5VGltZW91dEVycm9yOnBBLnRyYW5zaXRpb25hbChwQS5ib29sZWFuKX0sITEpLHZvaWQgMCE9PUImJnVBLmFzc2VydE9wdGlvbnMoQix7ZW5jb2RlOnBBLmZ1bmN0aW9uLHNlcmlhbGl6ZTpwQS5mdW5jdGlvbn0sITApLEkubWV0aG9kPShJLm1ldGhvZHx8dGhpcy5kZWZhdWx0cy5tZXRob2R8fFxcXCJnZXRcXFwiKS50b0xvd2VyQ2FzZSgpO2NvbnN0IEM9SS5oZWFkZXJzJiZXLm1lcmdlKEkuaGVhZGVycy5jb21tb24sSS5oZWFkZXJzW0kubWV0aG9kXSk7QyYmVy5mb3JFYWNoKFtcXFwiZGVsZXRlXFxcIixcXFwiZ2V0XFxcIixcXFwiaGVhZFxcXCIsXFxcInBvc3RcXFwiLFxcXCJwdXRcXFwiLFxcXCJwYXRjaFxcXCIsXFxcImNvbW1vblxcXCJdLChmdW5jdGlvbihBKXtkZWxldGUgSS5oZWFkZXJzW0FdfSkpLEkuaGVhZGVycz1uZXcgU0EoSS5oZWFkZXJzLEMpO2NvbnN0IFE9W107bGV0IEU9ITA7dGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKChmdW5jdGlvbihBKXtcXFwiZnVuY3Rpb25cXFwiPT10eXBlb2YgQS5ydW5XaGVuJiYhMT09PUEucnVuV2hlbihJKXx8KEU9RSYmQS5zeW5jaHJvbm91cyxRLnVuc2hpZnQoQS5mdWxmaWxsZWQsQS5yZWplY3RlZCkpfSkpO2NvbnN0IGk9W107bGV0IG87dGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaCgoZnVuY3Rpb24oQSl7aS5wdXNoKEEuZnVsZmlsbGVkLEEucmVqZWN0ZWQpfSkpO2xldCBELGE9MDtpZighRSl7Y29uc3QgQT1bbEEuYmluZCh0aGlzKSx2b2lkIDBdO2ZvcihBLnVuc2hpZnQuYXBwbHkoQSxRKSxBLnB1c2guYXBwbHkoQSxpKSxEPUEubGVuZ3RoLG89UHJvbWlzZS5yZXNvbHZlKEkpO2E8RDspbz1vLnRoZW4oQVthKytdLEFbYSsrXSk7cmV0dXJuIG99RD1RLmxlbmd0aDtsZXQgdz1JO2ZvcihhPTA7YTxEOyl7Y29uc3QgST1RW2ErK10sZz1RW2ErK107dHJ5e3c9SSh3KX1jYXRjaChBKXtnLmNhbGwodGhpcyxBKTticmVha319dHJ5e289bEEuY2FsbCh0aGlzLHcpfWNhdGNoKEEpe3JldHVybiBQcm9taXNlLnJlamVjdChBKX1mb3IoYT0wLEQ9aS5sZW5ndGg7YTxEOylvPW8udGhlbihpW2ErK10saVthKytdKTtyZXR1cm4gb31nZXRVcmkoQSl7cmV0dXJuIElBKGFBKChBPXFBKHRoaXMuZGVmYXVsdHMsQSkpLmJhc2VVUkwsQS51cmwpLEEucGFyYW1zLEEucGFyYW1zU2VyaWFsaXplcil9fVcuZm9yRWFjaChbXFxcImRlbGV0ZVxcXCIsXFxcImdldFxcXCIsXFxcImhlYWRcXFwiLFxcXCJvcHRpb25zXFxcIl0sKGZ1bmN0aW9uKEEpe1dBLnByb3RvdHlwZVtBXT1mdW5jdGlvbihJLGcpe3JldHVybiB0aGlzLnJlcXVlc3QocUEoZ3x8e30se21ldGhvZDpBLHVybDpJLGRhdGE6KGd8fHt9KS5kYXRhfSkpfX0pKSxXLmZvckVhY2goW1xcXCJwb3N0XFxcIixcXFwicHV0XFxcIixcXFwicGF0Y2hcXFwiXSwoZnVuY3Rpb24oQSl7ZnVuY3Rpb24gSShJKXtyZXR1cm4gZnVuY3Rpb24oZyxCLEMpe3JldHVybiB0aGlzLnJlcXVlc3QocUEoQ3x8e30se21ldGhvZDpBLGhlYWRlcnM6ST97XFxcIkNvbnRlbnQtVHlwZVxcXCI6XFxcIm11bHRpcGFydC9mb3JtLWRhdGFcXFwifTp7fSx1cmw6ZyxkYXRhOkJ9KSl9fVdBLnByb3RvdHlwZVtBXT1JKCksV0EucHJvdG90eXBlW0ErXFxcIkZvcm1cXFwiXT1JKCEwKX0pKTtjb25zdCBiQT1XQTtjbGFzcyBtQXtjb25zdHJ1Y3RvcihBKXtpZihcXFwiZnVuY3Rpb25cXFwiIT10eXBlb2YgQSl0aHJvdyBuZXcgVHlwZUVycm9yKFxcXCJleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uXFxcIik7bGV0IEk7dGhpcy5wcm9taXNlPW5ldyBQcm9taXNlKChmdW5jdGlvbihBKXtJPUF9KSk7Y29uc3QgZz10aGlzO3RoaXMucHJvbWlzZS50aGVuKChBPT57aWYoIWcuX2xpc3RlbmVycylyZXR1cm47bGV0IEk9Zy5fbGlzdGVuZXJzLmxlbmd0aDtmb3IoO0ktLSA+MDspZy5fbGlzdGVuZXJzW0ldKEEpO2cuX2xpc3RlbmVycz1udWxsfSkpLHRoaXMucHJvbWlzZS50aGVuPUE9PntsZXQgSTtjb25zdCBCPW5ldyBQcm9taXNlKChBPT57Zy5zdWJzY3JpYmUoQSksST1BfSkpLnRoZW4oQSk7cmV0dXJuIEIuY2FuY2VsPWZ1bmN0aW9uKCl7Zy51bnN1YnNjcmliZShJKX0sQn0sQSgoZnVuY3Rpb24oQSxCLEMpe2cucmVhc29ufHwoZy5yZWFzb249bmV3IEdBKEEsQixDKSxJKGcucmVhc29uKSl9KSl9dGhyb3dJZlJlcXVlc3RlZCgpe2lmKHRoaXMucmVhc29uKXRocm93IHRoaXMucmVhc29ufXN1YnNjcmliZShBKXt0aGlzLnJlYXNvbj9BKHRoaXMucmVhc29uKTp0aGlzLl9saXN0ZW5lcnM/dGhpcy5fbGlzdGVuZXJzLnB1c2goQSk6dGhpcy5fbGlzdGVuZXJzPVtBXX11bnN1YnNjcmliZShBKXtpZighdGhpcy5fbGlzdGVuZXJzKXJldHVybjtjb25zdCBJPXRoaXMuX2xpc3RlbmVycy5pbmRleE9mKEEpOy0xIT09SSYmdGhpcy5fbGlzdGVuZXJzLnNwbGljZShJLDEpfXN0YXRpYyBzb3VyY2UoKXtsZXQgQTtyZXR1cm57dG9rZW46bmV3IG1BKChmdW5jdGlvbihJKXtBPUl9KSksY2FuY2VsOkF9fX1jb25zdCBaQT1tQSx4QT1mdW5jdGlvbiBBKEkpe2NvbnN0IGc9bmV3IGJBKEkpLEI9cyhiQS5wcm90b3R5cGUucmVxdWVzdCxnKTtyZXR1cm4gVy5leHRlbmQoQixiQS5wcm90b3R5cGUsZyx7YWxsT3duS2V5czohMH0pLFcuZXh0ZW5kKEIsZyxudWxsLHthbGxPd25LZXlzOiEwfSksQi5jcmVhdGU9ZnVuY3Rpb24oZyl7cmV0dXJuIEEocUEoSSxnKSl9LEJ9KEtBKTt4QS5BeGlvcz1iQSx4QS5DYW5jZWxlZEVycm9yPUdBLHhBLkNhbmNlbFRva2VuPVpBLHhBLmlzQ2FuY2VsPUxBLHhBLlZFUlNJT049XFxcIjEuMS4zXFxcIix4QS50b0Zvcm1EYXRhPXYseEEuQXhpb3NFcnJvcj14LHhBLkNhbmNlbD14QS5DYW5jZWxlZEVycm9yLHhBLmFsbD1mdW5jdGlvbihBKXtyZXR1cm4gUHJvbWlzZS5hbGwoQSl9LHhBLnNwcmVhZD1mdW5jdGlvbihBKXtyZXR1cm4gZnVuY3Rpb24oSSl7cmV0dXJuIEEuYXBwbHkobnVsbCxJKX19LHhBLmlzQXhpb3NFcnJvcj1mdW5jdGlvbihBKXtyZXR1cm4gVy5pc09iamVjdChBKSYmITA9PT1BLmlzQXhpb3NFcnJvcn0seEEuZm9ybVRvSlNPTj1BPT5vQShXLmlzSFRNTEZvcm0oQSk/bmV3IEZvcm1EYXRhKEEpOkEpO2NvbnN0IFZBPXhBLHtBeGlvczpUQSxBeGlvc0Vycm9yOlhBLENhbmNlbGVkRXJyb3I6T0EsaXNDYW5jZWw6akEsQ2FuY2VsVG9rZW46dkEsVkVSU0lPTjpQQSxhbGw6ekEsQ2FuY2VsOl9BLGlzQXhpb3NFcnJvcjokQSxzcHJlYWQ6QUksdG9Gb3JtRGF0YTpJSX09VkEsZ0k9VkE7dmFyIEJJPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gQSgpe0ModGhpcyxBKX12YXIgZyxCO3JldHVybiBFKEEsbnVsbCxbe2tleTpcXFwiZmV0Y2hSZW1vdGVEYXRhXFxcIix2YWx1ZTooQj1JKGEoKS5tYXJrKChmdW5jdGlvbiBBKEkpe3ZhciBnO3JldHVybiBhKCkud3JhcCgoZnVuY3Rpb24oQSl7Zm9yKDs7KXN3aXRjaChBLnByZXY9QS5uZXh0KXtjYXNlIDA6cmV0dXJuIEEucHJldj0wLEEubmV4dD0zLGdJLmdldChJLHtyZXNwb25zZVR5cGU6XFxcImFycmF5YnVmZmVyXFxcIn0pO2Nhc2UgMzpyZXR1cm4gZz1BLnNlbnQsQS5hYnJ1cHQoXFxcInJldHVyblxcXCIsbmV3IFVpbnQ4QXJyYXkoZy5kYXRhKSk7Y2FzZSA3OnRocm93IEEucHJldj03LEEudDA9QS5jYXRjaCgwKSxBLnQwO2Nhc2UgMTA6Y2FzZVxcXCJlbmRcXFwiOnJldHVybiBBLnN0b3AoKX19KSxBLG51bGwsW1swLDddXSl9KSkpLGZ1bmN0aW9uKEEpe3JldHVybiBCLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSx7a2V5OlxcXCJmZXRjaFJlbW90ZURhdGFDYWxsYmFja1xcXCIsdmFsdWU6KGc9SShhKCkubWFyaygoZnVuY3Rpb24gQShJLGcpe3ZhciBCO3JldHVybiBhKCkud3JhcCgoZnVuY3Rpb24oQSl7Zm9yKDs7KXN3aXRjaChBLnByZXY9QS5uZXh0KXtjYXNlIDA6cmV0dXJuIEEucHJldj0wLEEubmV4dD0zLGdJLmdldChJLHtyZXNwb25zZVR5cGU6XFxcImFycmF5YnVmZmVyXFxcIn0pLnRoZW4oKGZ1bmN0aW9uKEEpe3ZhciBJPW5ldyBVaW50OEFycmF5KEEuZGF0YSk7Y29uc29sZS5sb2coSSksZyhBKX0pKTtjYXNlIDM6cmV0dXJuIEI9QS5zZW50LEEuYWJydXB0KFxcXCJyZXR1cm5cXFwiLEIpO2Nhc2UgNzp0aHJvdyBBLnByZXY9NyxBLnQwPUEuY2F0Y2goMCksQS50MDtjYXNlIDEwOmNhc2VcXFwiZW5kXFxcIjpyZXR1cm4gQS5zdG9wKCl9fSksQSxudWxsLFtbMCw3XV0pfSkpKSxmdW5jdGlvbihBLEkpe3JldHVybiBnLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSx7a2V5OlxcXCJzdHJpbmcyVWludDhEYXRhXFxcIix2YWx1ZTpmdW5jdGlvbihBKXtmb3IodmFyIEk9bmV3IFVpbnQ4QXJyYXkoQS5sZW5ndGgpLGc9MDtnPEkubGVuZ3RoO2crKylJW2ddPTI1NSZBLmNoYXJDb2RlQXQoZyk7cmV0dXJuIEl9fV0pLEF9KCksQ0k9ZnVuY3Rpb24oKXtmdW5jdGlvbiBBKCl7Qyh0aGlzLEEpLGkodGhpcyxcXFwiaW5zdGFuY2VcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJtYXJrZXJORlRDb3VudFxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImNhbWVyYUNvdW50XFxcIix2b2lkIDApLGkodGhpcyxcXFwidmVyc2lvblxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInNldHVwXFxcIix2b2lkIDApLGkodGhpcyxcXFwidGVhcmRvd25cXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJzZXR1cEFSMlxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInNldERlYnVnTW9kZVxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldERlYnVnTW9kZVxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldFByb2Nlc3NpbmdJbWFnZVxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImRldGVjdE1hcmtlclxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImRldGVjdE5GVE1hcmtlclxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldE5GVE1hcmtlclxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldE5GVERhdGFcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJzZXRMb2dMZXZlbFxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldExvZ0xldmVsXFxcIix2b2lkIDApLGkodGhpcyxcXFwiZnJhbWVNYWxsb2NcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJORlRNYXJrZXJJbmZvXFxcIix2b2lkIDApLGkodGhpcyxcXFwic2V0UHJvamVjdGlvbk5lYXJQbGFuZVxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldFByb2plY3Rpb25OZWFyUGxhbmVcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJzZXRQcm9qZWN0aW9uRmFyUGxhbmVcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJnZXRQcm9qZWN0aW9uRmFyUGxhbmVcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJzZXRUaHJlc2hvbGRNb2RlXFxcIix2b2lkIDApLGkodGhpcyxcXFwiZ2V0VGhyZXNob2xkTW9kZVxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInNldFRocmVzaG9sZFxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImdldFRocmVzaG9sZFxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInNldEltYWdlUHJvY01vZGVcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJnZXRJbWFnZVByb2NNb2RlXFxcIix2b2lkIDApLHRoaXMuaW5zdGFuY2UsdGhpcy5tYXJrZXJORlRDb3VudD0wLHRoaXMuY2FtZXJhQ291bnQ9MCx0aGlzLnZlcnNpb249XFxcIjEuMS42XFxcIixjb25zb2xlLmluZm8oXFxcIkFSVG9vbGtpdE5GVCBcXFwiLHRoaXMudmVyc2lvbil9dmFyIEIsUTtyZXR1cm4gRShBLFt7a2V5OlxcXCJpbml0XFxcIix2YWx1ZTooUT1JKGEoKS5tYXJrKChmdW5jdGlvbiBBKCl7cmV0dXJuIGEoKS53cmFwKChmdW5jdGlvbihBKXtmb3IoOzspc3dpdGNoKEEucHJldj1BLm5leHQpe2Nhc2UgMDpyZXR1cm4gQS5uZXh0PTIsdygpO2Nhc2UgMjpyZXR1cm4gdGhpcy5pbnN0YW5jZT1BLnNlbnQsdGhpcy5fZGVjb3JhdGUoKSwoXFxcInVuZGVmaW5lZFxcXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OmcuZykuYXJ0b29sa2l0TkZUPXRoaXMsQS5hYnJ1cHQoXFxcInJldHVyblxcXCIsdGhpcyk7Y2FzZSA3OmNhc2VcXFwiZW5kXFxcIjpyZXR1cm4gQS5zdG9wKCl9fSksQSx0aGlzKX0pKSksZnVuY3Rpb24oKXtyZXR1cm4gUS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0se2tleTpcXFwiX2RlY29yYXRlXFxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBBPXRoaXM7Zm9yKHZhciBJIGluW1xcXCJzZXR1cFxcXCIsXFxcInRlYXJkb3duXFxcIixcXFwic2V0dXBBUjJcXFwiLFxcXCJzZXRMb2dMZXZlbFxcXCIsXFxcImdldExvZ0xldmVsXFxcIixcXFwic2V0RGVidWdNb2RlXFxcIixcXFwiZ2V0RGVidWdNb2RlXFxcIixcXFwiZ2V0UHJvY2Vzc2luZ0ltYWdlXFxcIixcXFwiZGV0ZWN0TWFya2VyXFxcIixcXFwiZGV0ZWN0TkZUTWFya2VyXFxcIixcXFwiZ2V0TkZUTWFya2VyXFxcIixcXFwiZ2V0TkZURGF0YVxcXCIsXFxcImZyYW1lTWFsbG9jXFxcIixcXFwiTkZUTWFya2VySW5mb1xcXCIsXFxcInNldFByb2plY3Rpb25OZWFyUGxhbmVcXFwiLFxcXCJnZXRQcm9qZWN0aW9uTmVhclBsYW5lXFxcIixcXFwic2V0UHJvamVjdGlvbkZhclBsYW5lXFxcIixcXFwiZ2V0UHJvamVjdGlvbkZhclBsYW5lXFxcIixcXFwic2V0VGhyZXNob2xkTW9kZVxcXCIsXFxcImdldFRocmVzaG9sZE1vZGVcXFwiLFxcXCJzZXRUaHJlc2hvbGRcXFwiLFxcXCJnZXRUaHJlc2hvbGRcXFwiLFxcXCJzZXRJbWFnZVByb2NNb2RlXFxcIixcXFwiZ2V0SW1hZ2VQcm9jTW9kZVxcXCIsXFxcIlN0cmluZ0xpc3RcXFwiXS5mb3JFYWNoKChmdW5jdGlvbihJKXtBLmNvbnZlcnRlcigpW0ldPUEuaW5zdGFuY2VbSV19KSksdGhpcy5pbnN0YW5jZSlJLm1hdGNoKC9eQVIvKSYmKHRoaXMuY29udmVydGVyKClbSV09dGhpcy5pbnN0YW5jZVtJXSl9fSx7a2V5OlxcXCJjb252ZXJ0ZXJcXFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9fSx7a2V5OlxcXCJsb2FkQ2FtZXJhXFxcIix2YWx1ZTooQj1JKGEoKS5tYXJrKChmdW5jdGlvbiBBKEkpe3ZhciBnLEI7cmV0dXJuIGEoKS53cmFwKChmdW5jdGlvbihBKXtmb3IoOzspc3dpdGNoKEEucHJldj1BLm5leHQpe2Nhc2UgMDppZihnPVxcXCIvY2FtZXJhX3BhcmFtX1xcXCIrdGhpcy5jYW1lcmFDb3VudCsrLCEoSSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKXtBLm5leHQ9NTticmVha31CPUksQS5uZXh0PTE0O2JyZWFrO2Nhc2UgNTpyZXR1cm4gQS5wcmV2PTUsQS5uZXh0PTgsQkkuZmV0Y2hSZW1vdGVEYXRhKEkpO2Nhc2UgODpCPUEuc2VudCxBLm5leHQ9MTQ7YnJlYWs7Y2FzZSAxMTp0aHJvdyBBLnByZXY9MTEsQS50MD1BLmNhdGNoKDUpLEEudDA7Y2FzZSAxNDpyZXR1cm4gdGhpcy5fc3RvcmVEYXRhRmlsZShCLGcpLEEuYWJydXB0KFxcXCJyZXR1cm5cXFwiLHRoaXMuaW5zdGFuY2UuX2xvYWRDYW1lcmEoZykpO2Nhc2UgMTY6Y2FzZVxcXCJlbmRcXFwiOnJldHVybiBBLnN0b3AoKX19KSxBLHRoaXMsW1s1LDExXV0pfSkpKSxmdW5jdGlvbihBKXtyZXR1cm4gQi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0se2tleTpcXFwiYWRkTkZUTWFya2Vyc1xcXCIsdmFsdWU6ZnVuY3Rpb24oQSxJLGcsQil7dmFyIEM9dGhpcyxRPVtdLEU9MypJLmxlbmd0aCxpPWZ1bmN0aW9uKEkpe2lmKDA9PShFLT0xKSl7Zm9yKHZhciBCPW5ldyBDLmluc3RhbmNlLlN0cmluZ0xpc3QsaT1bXSxvPTA7bzxRLmxlbmd0aDtvKyspQi5wdXNoX2JhY2soUVtvXSk7Zm9yKHZhciBEPUMuaW5zdGFuY2UuX2FkZE5GVE1hcmtlcnMoQSxCKSxhPTA7YTxELnNpemUoKTthKyspaS5wdXNoKEQuZ2V0KGEpKTtjb25zb2xlLmxvZyhcXFwiYWRkIG5mdCBtYXJrZXIgaWRzOiBcXFwiLGkpLGcmJmcoaSl9fSxvPWZ1bmN0aW9uKEEsSSl7Y29uc29sZS5sb2coXFxcImZhaWxlZCB0byBsb2FkOiBcXFwiLEEpLEIoSSl9LEQ9W107cmV0dXJuIEkuZm9yRWFjaCgoZnVuY3Rpb24oQSxJKXt2YXIgZz1cXFwiL21hcmtlck5GVF9cXFwiK0MubWFya2VyTkZUQ291bnQ7aWYoUS5wdXNoKGcpLEFycmF5LmlzQXJyYXkoQSkpQS5mb3JFYWNoKChmdW5jdGlvbihBKXt2YXIgST1nK1xcXCIuXFxcIitBLnNwbGl0KFxcXCIuXFxcIikucG9wKCk7Qy5hamF4KEEsSSxpLmJpbmQoSSksby5iaW5kKEkpKX0pKSxDLm1hcmtlck5GVENvdW50Kz0xO2Vsc2V7dmFyIEI9ZytcXFwiLmZzZXRcXFwiLEU9ZytcXFwiLmlzZXRcXFwiLGE9ZytcXFwiLmZzZXQzXFxcIjtDLmFqYXgoQStcXFwiLmZzZXRcXFwiLEIsaS5iaW5kKEIpLG8uYmluZChCKSksQy5hamF4KEErXFxcIi5pc2V0XFxcIixFLGkuYmluZChFKSxvLmJpbmQoRSkpLEMuYWpheChBK1xcXCIuZnNldDNcXFwiLGEsaS5iaW5kKGEpLG8uYmluZChhKSksQy5tYXJrZXJORlRDb3VudCs9MX1ELnB1c2goSSl9KSksRH19LHtrZXk6XFxcIl9zdG9yZURhdGFGaWxlXFxcIix2YWx1ZTpmdW5jdGlvbihBLEkpe3RoaXMuaW5zdGFuY2UuRlMud3JpdGVGaWxlKEksQSx7ZW5jb2Rpbmc6XFxcImJpbmFyeVxcXCJ9KX19LHtrZXk6XFxcImFqYXhcXFwiLHZhbHVlOmZ1bmN0aW9uKEEsSSxnLEIpe3ZhciBDPXRoaXMsUT1uZXcgWE1MSHR0cFJlcXVlc3Q7US5vcGVuKFxcXCJHRVRcXFwiLEEsITApLFEucmVzcG9uc2VUeXBlPVxcXCJhcnJheWJ1ZmZlclxcXCIsUS5vbmxvYWQ9ZnVuY3Rpb24oKXtpZigyMDA9PXRoaXMuc3RhdHVzKXt2YXIgQT1RLnJlc3BvbnNlLEU9bmV3IFVpbnQ4QXJyYXkoQSk7IWZ1bmN0aW9uKEEsSSxnKXtDLmluc3RhbmNlLkZTLndyaXRlRmlsZShBLEkse2VuY29kaW5nOlxcXCJiaW5hcnlcXFwifSksZyhJKX0oSSxFLGcpfWVsc2UgQih0aGlzLnN0YXR1cyl9LFEuc2VuZCgpfX1dLFt7a2V5OlxcXCJVTktOT1dOX01BUktFUlxcXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuLTF9fSx7a2V5OlxcXCJORlRfTUFSS0VSXFxcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMH19XSksQX0oKSxRST1mdW5jdGlvbigpe2Z1bmN0aW9uIEEoSSxnLEIpe0ModGhpcyxBKSxpKHRoaXMsXFxcImlkXFxcIix2b2lkIDApLGkodGhpcyxcXFwid2lkdGhcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJoZWlnaHRcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJjYW1lcmFQYXJhbVxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcImNhbWVyYUlkXFxcIix2b2lkIDApLGkodGhpcyxcXFwiY2FtZXJhTG9hZGVkXFxcIix2b2lkIDApLGkodGhpcyxcXFwiYXJ0b29sa2l0TkZUXFxcIix2b2lkIDApLGkodGhpcyxcXFwibGlzdGVuZXJzXFxcIix2b2lkIDApLGkodGhpcyxcXFwibmZ0TWFya2Vyc1xcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInRyYW5zZm9ybV9tYXRcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJtYXJrZXJfdHJhbnNmb3JtX21hdFxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInRyYW5zZm9ybUdMX1JIXFxcIix2b2lkIDApLGkodGhpcyxcXFwidmlkZW9XaWR0aFxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcInZpZGVvSGVpZ2h0XFxcIix2b2lkIDApLGkodGhpcyxcXFwidmlkZW9TaXplXFxcIix2b2lkIDApLGkodGhpcyxcXFwiZnJhbWVwb2ludGVyXFxcIix2b2lkIDApLGkodGhpcyxcXFwiZnJhbWVzaXplXFxcIix2b2lkIDApLGkodGhpcyxcXFwiZGF0YUhlYXBcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJ2aWRlb0x1bWFcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJjYW1lcmFfbWF0XFxcIix2b2lkIDApLGkodGhpcyxcXFwidmlkZW9MdW1hUG9pbnRlclxcXCIsdm9pZCAwKSxpKHRoaXMsXFxcIm5mdE1hcmtlckZvdW5kXFxcIix2b2lkIDApLGkodGhpcyxcXFwibmZ0TWFya2VyRm91bmRUaW1lXFxcIix2b2lkIDApLGkodGhpcyxcXFwibmZ0TWFya2VyQ291bnRcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJkZWZhdWx0TWFya2VyV2lkdGhcXFwiLHZvaWQgMCksaSh0aGlzLFxcXCJfYndwb2ludGVyXFxcIix2b2lkIDApLHRoaXMuaWQ9LTEsdGhpcy53aWR0aD1JLHRoaXMuaGVpZ2h0PWcsdGhpcy5jYW1lcmFQYXJhbT1CLHRoaXMuY2FtZXJhSWQ9LTEsdGhpcy5jYW1lcmFMb2FkZWQ9ITEsdGhpcy5hcnRvb2xraXRORlQsdGhpcy5saXN0ZW5lcnM9e30sdGhpcy5uZnRNYXJrZXJzPXt9LHRoaXMudHJhbnNmb3JtX21hdD1uZXcgRmxvYXQ2NEFycmF5KDE2KSx0aGlzLnRyYW5zZm9ybUdMX1JIPW5ldyBGbG9hdDY0QXJyYXkoMTYpLHRoaXMubWFya2VyX3RyYW5zZm9ybV9tYXQ9bnVsbCx0aGlzLnZpZGVvV2lkdGg9SSx0aGlzLnZpZGVvSGVpZ2h0PWcsdGhpcy52aWRlb1NpemU9dGhpcy52aWRlb1dpZHRoKnRoaXMudmlkZW9IZWlnaHQsdGhpcy5mcmFtZXBvaW50ZXI9bnVsbCx0aGlzLmZyYW1lc2l6ZT1udWxsLHRoaXMuZGF0YUhlYXA9bnVsbCx0aGlzLnZpZGVvTHVtYT1udWxsLHRoaXMuY2FtZXJhX21hdD1udWxsLHRoaXMudmlkZW9MdW1hUG9pbnRlcj1udWxsLHRoaXMubmZ0TWFya2VyRm91bmQ9ITEsdGhpcy5uZnRNYXJrZXJGb3VuZFRpbWU9MCx0aGlzLm5mdE1hcmtlckNvdW50PTAsdGhpcy5fYndwb2ludGVyPW51bGwsdGhpcy5kZWZhdWx0TWFya2VyV2lkdGg9MX12YXIgZyxCLFEsbyxEO3JldHVybiBFKEEsW3trZXk6XFxcInByb2Nlc3NcXFwiLHZhbHVlOmZ1bmN0aW9uKEEpe3ZhciBJLGcsQj10aGlzLmRldGVjdE1hcmtlcihBKTtmb3IoSSBpbiAwIT1CJiZjb25zb2xlLmVycm9yKFxcXCJbQVJDb250cm9sbGVyTkZUXVxcXCIsXFxcImRldGVjdE1hcmtlciBlcnJvcjpcXFwiLEIpLHRoaXMubmZ0TWFya2VycykoZz10aGlzLmNvbnZlcnRlcigpLm5mdE1hcmtlcnNbSV0pLmluUHJldmlvdXM9Zy5pbkN1cnJlbnQsZy5pbkN1cnJlbnQ9ITE7dmFyIEM9dGhpcy5uZnRNYXJrZXJDb3VudDt0aGlzLmRldGVjdE5GVE1hcmtlcigpO2Zvcih2YXIgUT0wO1E8QztRKyspe3ZhciBFPXRoaXMuZ2V0TkZUTWFya2VyKFEpLGk9Q0kuTkZUX01BUktFUjtpZihFLmZvdW5kKXt0aGlzLm5mdE1hcmtlckZvdW5kPVEsdGhpcy5uZnRNYXJrZXJGb3VuZFRpbWU9RGF0ZS5ub3coKTt2YXIgbz10aGlzLnRyYWNrTkZUTWFya2VySWQoUSk7by5tYXRyaXguc2V0KEUucG9zZSksby5pbkN1cnJlbnQ9ITAsdGhpcy50cmFuc01hdFRvR0xNYXQoby5tYXRyaXgsdGhpcy50cmFuc2Zvcm1fbWF0KSx0aGlzLnRyYW5zZm9ybUdMX1JIPXRoaXMuYXJnbENhbWVyYVZpZXdSSGYodGhpcy50cmFuc2Zvcm1fbWF0KSx0aGlzLmRpc3BhdGNoRXZlbnQoe25hbWU6XFxcImdldE5GVE1hcmtlclxcXCIsdGFyZ2V0OnRoaXMsZGF0YTp7aW5kZXg6USx0eXBlOmksbWFya2VyOkUsbWF0cml4OnRoaXMudHJhbnNmb3JtX21hdCxtYXRyaXhHTF9SSDp0aGlzLnRyYW5zZm9ybUdMX1JIfX0pfWVsc2UgdGhpcy5uZnRNYXJrZXJGb3VuZD09PVEmJkRhdGUubm93KCktdGhpcy5uZnRNYXJrZXJGb3VuZFRpbWU+MjAwJiYodGhpcy5uZnRNYXJrZXJGb3VuZD0hMSx0aGlzLmRpc3BhdGNoRXZlbnQoe25hbWU6XFxcImxvc3RORlRNYXJrZXJcXFwiLHRhcmdldDp0aGlzLGRhdGE6e2luZGV4OlEsdHlwZTppLG1hcmtlcjpFLG1hdHJpeDp0aGlzLnRyYW5zZm9ybV9tYXQsbWF0cml4R0xfUkg6dGhpcy50cmFuc2Zvcm1HTF9SSH19KSl9fX0se2tleTpcXFwiZGV0ZWN0TkZUTWFya2VyXFxcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuYXJ0b29sa2l0TkZULmRldGVjdE5GVE1hcmtlcih0aGlzLmlkKX19LHtrZXk6XFxcInRyYWNrTkZUTWFya2VySWRcXFwiLHZhbHVlOmZ1bmN0aW9uKEEsSSl7dmFyIGc9dGhpcy5jb252ZXJ0ZXIoKS5uZnRNYXJrZXJzW0FdO3JldHVybiBnfHwodGhpcy5jb252ZXJ0ZXIoKS5uZnRNYXJrZXJzW0FdPWc9e2luUHJldmlvdXM6ITEsaW5DdXJyZW50OiExLG1hdHJpeDpuZXcgRmxvYXQ2NEFycmF5KDEyKSxtYXRyaXhHTF9SSDpuZXcgRmxvYXQ2NEFycmF5KDEyKSxtYXJrZXJXaWR0aDpJfHx0aGlzLmRlZmF1bHRNYXJrZXJXaWR0aH0pLEkmJihnLm1hcmtlcldpZHRoPUkpLGd9fSx7a2V5OlxcXCJkZXRlY3RNYXJrZXJcXFwiLHZhbHVlOmZ1bmN0aW9uKEEpe3JldHVybiB0aGlzLl9jb3B5SW1hZ2VUb0hlYXAoQSk/dGhpcy5hcnRvb2xraXRORlQuZGV0ZWN0TWFya2VyKHRoaXMuaWQpOi05OX19LHtrZXk6XFxcImdldE5GVE1hcmtlclxcXCIsdmFsdWU6ZnVuY3Rpb24oQSl7aWYoMD09PXRoaXMuYXJ0b29sa2l0TkZULmdldE5GVE1hcmtlcih0aGlzLmlkLEEpKXJldHVybiB0aGlzLmFydG9vbGtpdE5GVC5ORlRNYXJrZXJJbmZvfX0se2tleTpcXFwiZ2V0TkZURGF0YVxcXCIsdmFsdWU6ZnVuY3Rpb24oQSxJKXtyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQuZ2V0TkZURGF0YShBLEkpfX0se2tleTpcXFwiYWRkRXZlbnRMaXN0ZW5lclxcXCIsdmFsdWU6ZnVuY3Rpb24oQSxJKXt0aGlzLmNvbnZlcnRlcigpLmxpc3RlbmVyc1tBXXx8KHRoaXMuY29udmVydGVyKCkubGlzdGVuZXJzW0FdPVtdKSx0aGlzLmNvbnZlcnRlcigpLmxpc3RlbmVyc1tBXS5wdXNoKEkpfX0se2tleTpcXFwicmVtb3ZlRXZlbnRMaXN0ZW5lclxcXCIsdmFsdWU6ZnVuY3Rpb24oQSxJKXtpZih0aGlzLmNvbnZlcnRlcigpLmxpc3RlbmVyc1tBXSl7dmFyIGc9dGhpcy5jb252ZXJ0ZXIoKS5saXN0ZW5lcnNbQV0uaW5kZXhPZihJKTtnPi0xJiZ0aGlzLmNvbnZlcnRlcigpLmxpc3RlbmVyc1tBXS5zcGxpY2UoZywxKX19fSx7a2V5OlxcXCJkaXNwYXRjaEV2ZW50XFxcIix2YWx1ZTpmdW5jdGlvbihBKXt2YXIgST10aGlzLmNvbnZlcnRlcigpLmxpc3RlbmVyc1tBLm5hbWVdO2lmKEkpZm9yKHZhciBnPTA7ZzxJLmxlbmd0aDtnKyspSVtnXS5jYWxsKHRoaXMsQSl9fSx7a2V5OlxcXCJkZWJ1Z1NldHVwXFxcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuc2V0RGVidWdNb2RlKCEwKSx0aGlzLl9id3BvaW50ZXI9dGhpcy5nZXRQcm9jZXNzaW5nSW1hZ2UoKX19LHtrZXk6XFxcInRyYW5zTWF0VG9HTE1hdFxcXCIsdmFsdWU6ZnVuY3Rpb24oQSxJLGcpe3JldHVybiBudWxsPT1JJiYoST1uZXcgRmxvYXQ2NEFycmF5KDE2KSksSVswXT1BWzBdLElbNF09QVsxXSxJWzhdPUFbMl0sSVsxMl09QVszXSxJWzFdPUFbNF0sSVs1XT1BWzVdLElbOV09QVs2XSxJWzEzXT1BWzddLElbMl09QVs4XSxJWzZdPUFbOV0sSVsxMF09QVsxMF0sSVsxNF09QVsxMV0sSVszXT0wLElbN109MCxJWzExXT0wLElbMTVdPTEsbnVsbCE9ZyYmMCE9PWcmJihJWzEyXSo9ZyxJWzEzXSo9ZyxJWzE0XSo9ZyksSX19LHtrZXk6XFxcImFyZ2xDYW1lcmFWaWV3UkhmXFxcIix2YWx1ZTpmdW5jdGlvbihBLEksZyl7dmFyIEI7cmV0dXJuKEI9bnVsbD09ST9uZXcgRmxvYXQ2NEFycmF5KDE2KTpJKVswXT1BWzBdLEJbNF09QVs0XSxCWzhdPUFbOF0sQlsxMl09QVsxMl0sQlsxXT0tQVsxXSxCWzVdPS1BWzVdLEJbOV09LUFbOV0sQlsxM109LUFbMTNdLEJbMl09LUFbMl0sQls2XT0tQVs2XSxCWzEwXT0tQVsxMF0sQlsxNF09LUFbMTRdLEJbM109MCxCWzddPTAsQlsxMV09MCxCWzE1XT0xLG51bGwhPWcmJjAhPT1nJiYoQlsxMl0qPWcsQlsxM10qPWcsQlsxNF0qPWcpLEJ9fSx7a2V5OlxcXCJnZXRUcmFuc2Zvcm1hdGlvbk1hdHJpeFxcXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmFuc2Zvcm1fbWF0fX0se2tleTpcXFwiZ2V0Q2FtZXJhTWF0cml4XFxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNhbWVyYV9tYXR9fSx7a2V5OlxcXCJzZXREZWJ1Z01vZGVcXFwiLHZhbHVlOmZ1bmN0aW9uKEEpe3JldHVybiB0aGlzLmFydG9vbGtpdE5GVC5zZXREZWJ1Z01vZGUodGhpcy5pZCxBKX19LHtrZXk6XFxcImdldERlYnVnTW9kZVxcXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQuZ2V0RGVidWdNb2RlKHRoaXMuaWQpfX0se2tleTpcXFwiZ2V0UHJvY2Vzc2luZ0ltYWdlXFxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFydG9vbGtpdE5GVC5nZXRQcm9jZXNzaW5nSW1hZ2UodGhpcy5pZCl9fSx7a2V5OlxcXCJzZXRMb2dMZXZlbFxcXCIsdmFsdWU6ZnVuY3Rpb24oQSl7cmV0dXJuIHRoaXMuYXJ0b29sa2l0TkZULnNldExvZ0xldmVsKEEpfX0se2tleTpcXFwiZ2V0TG9nTGV2ZWxcXFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXJ0b29sa2l0TkZULmdldExvZ0xldmVsKCl9fSx7a2V5OlxcXCJzZXRQcm9qZWN0aW9uTmVhclBsYW5lXFxcIix2YWx1ZTpmdW5jdGlvbihBKXtyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQuc2V0UHJvamVjdGlvbk5lYXJQbGFuZSh0aGlzLmlkLEEpfX0se2tleTpcXFwiZ2V0UHJvamVjdGlvbk5lYXJQbGFuZVxcXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQuZ2V0UHJvamVjdGlvbk5lYXJQbGFuZSh0aGlzLmlkKX19LHtrZXk6XFxcInNldFByb2plY3Rpb25GYXJQbGFuZVxcXCIsdmFsdWU6ZnVuY3Rpb24oQSl7cmV0dXJuIHRoaXMuYXJ0b29sa2l0TkZULnNldFByb2plY3Rpb25GYXJQbGFuZSh0aGlzLmlkLEEpfX0se2tleTpcXFwiZ2V0UHJvamVjdGlvbkZhclBsYW5lXFxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFydG9vbGtpdE5GVC5nZXRQcm9qZWN0aW9uRmFyUGxhbmUodGhpcy5pZCl9fSx7a2V5OlxcXCJzZXRUaHJlc2hvbGRNb2RlXFxcIix2YWx1ZTpmdW5jdGlvbihBKXtyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQuc2V0VGhyZXNob2xkTW9kZSh0aGlzLmlkLEEpfX0se2tleTpcXFwiZ2V0VGhyZXNob2xkTW9kZVxcXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQuZ2V0VGhyZXNob2xkTW9kZSh0aGlzLmlkKX19LHtrZXk6XFxcInNldFRocmVzaG9sZFxcXCIsdmFsdWU6ZnVuY3Rpb24oQSl7cmV0dXJuIHRoaXMuYXJ0b29sa2l0TkZULnNldFRocmVzaG9sZCh0aGlzLmlkLEEpfX0se2tleTpcXFwiZ2V0VGhyZXNob2xkXFxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFydG9vbGtpdE5GVC5nZXRUaHJlc2hvbGQodGhpcy5pZCl9fSx7a2V5OlxcXCJsb2FkTkZUTWFya2VyXFxcIix2YWx1ZTooRD1JKGEoKS5tYXJrKChmdW5jdGlvbiBBKEksZyxCKXt2YXIgQyxRPXRoaXM7cmV0dXJuIGEoKS53cmFwKChmdW5jdGlvbihBKXtmb3IoOzspc3dpdGNoKEEucHJldj1BLm5leHQpe2Nhc2UgMDpyZXR1cm4gQS5uZXh0PTIsdGhpcy5hcnRvb2xraXRORlQuYWRkTkZUTWFya2Vycyh0aGlzLmlkLFtJXSwoZnVuY3Rpb24oQSl7US5uZnRNYXJrZXJDb3VudCs9QS5sZW5ndGgsZyhBKX0pLEIpO2Nhc2UgMjpyZXR1cm4gQz1BLnNlbnQsQS5hYnJ1cHQoXFxcInJldHVyblxcXCIsQyk7Y2FzZSA0OmNhc2VcXFwiZW5kXFxcIjpyZXR1cm4gQS5zdG9wKCl9fSksQSx0aGlzKX0pKSksZnVuY3Rpb24oQSxJLGcpe3JldHVybiBELmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSx7a2V5OlxcXCJsb2FkTkZUTWFya2Vyc1xcXCIsdmFsdWU6KG89SShhKCkubWFyaygoZnVuY3Rpb24gQShJLGcsQil7dmFyIEMsUT10aGlzO3JldHVybiBhKCkud3JhcCgoZnVuY3Rpb24oQSl7Zm9yKDs7KXN3aXRjaChBLnByZXY9QS5uZXh0KXtjYXNlIDA6cmV0dXJuIEEubmV4dD0yLHRoaXMuYXJ0b29sa2l0TkZULmFkZE5GVE1hcmtlcnModGhpcy5pZCxJLChmdW5jdGlvbihBKXtRLm5mdE1hcmtlckNvdW50Kz1BLmxlbmd0aCxnKEEpfSksQik7Y2FzZSAyOnJldHVybiBDPUEuc2VudCxBLmFicnVwdChcXFwicmV0dXJuXFxcIixDKTtjYXNlIDQ6Y2FzZVxcXCJlbmRcXFwiOnJldHVybiBBLnN0b3AoKX19KSxBLHRoaXMpfSkpKSxmdW5jdGlvbihBLEksZyl7cmV0dXJuIG8uYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9LHtrZXk6XFxcInNldEltYWdlUHJvY01vZGVcXFwiLHZhbHVlOmZ1bmN0aW9uKEEpe3JldHVybiB0aGlzLmFydG9vbGtpdE5GVC5zZXRJbWFnZVByb2NNb2RlKHRoaXMuaWQsQSl9fSx7a2V5OlxcXCJnZXRJbWFnZVByb2NNb2RlXFxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFydG9vbGtpdE5GVC5nZXRJbWFnZVByb2NNb2RlKHRoaXMuaWQpfX0se2tleTpcXFwiY29udmVydGVyXFxcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzfX0se2tleTpcXFwiX2luaXRpYWxpemVcXFwiLHZhbHVlOihRPUkoYSgpLm1hcmsoKGZ1bmN0aW9uIEEoKXt2YXIgSSxnPXRoaXM7cmV0dXJuIGEoKS53cmFwKChmdW5jdGlvbihBKXtmb3IoOzspc3dpdGNoKEEucHJldj1BLm5leHQpe2Nhc2UgMDpyZXR1cm4gQS5uZXh0PTIsKG5ldyBDSSkuaW5pdCgpO2Nhc2UgMjpyZXR1cm4gdGhpcy5hcnRvb2xraXRORlQ9QS5zZW50LGNvbnNvbGUubG9nKFxcXCJbQVJDb250cm9sbGVyTkZUXVxcXCIsXFxcIkFSVG9vbGtpdE5GVCBpbml0aWFsaXplZFxcXCIpLEEubmV4dD02LHRoaXMuYXJ0b29sa2l0TkZULmxvYWRDYW1lcmEodGhpcy5jYW1lcmFQYXJhbSk7Y2FzZSA2OnJldHVybiB0aGlzLmNhbWVyYUlkPUEuc2VudCxjb25zb2xlLmxvZyhcXFwiW0FSQ29udHJvbGxlck5GVF1cXFwiLFxcXCJDYW1lcmEgcGFyYW1zIGxvYWRlZCB3aXRoIElEXFxcIix0aGlzLmNhbWVyYUlkKSx0aGlzLmlkPXRoaXMuYXJ0b29sa2l0TkZULnNldHVwKHRoaXMud2lkdGgsdGhpcy5oZWlnaHQsdGhpcy5jYW1lcmFJZCksY29uc29sZS5sb2coXFxcIltBUkNvbnRyb2xsZXJORlRdXFxcIixcXFwiR290IElEIGZyb20gc2V0dXBcXFwiLHRoaXMuaWQpLHRoaXMuX2luaXRORlQoKSxJPXRoaXMuYXJ0b29sa2l0TkZULmZyYW1lTWFsbG9jLHRoaXMuZnJhbWVwb2ludGVyPUkuZnJhbWVwb2ludGVyLHRoaXMuZnJhbWVzaXplPUkuZnJhbWVzaXplLHRoaXMudmlkZW9MdW1hUG9pbnRlcj1JLnZpZGVvTHVtYVBvaW50ZXIsdGhpcy5kYXRhSGVhcD1uZXcgVWludDhBcnJheSh0aGlzLmFydG9vbGtpdE5GVC5pbnN0YW5jZS5IRUFQVTguYnVmZmVyLHRoaXMuZnJhbWVwb2ludGVyLHRoaXMuZnJhbWVzaXplKSx0aGlzLnZpZGVvTHVtYT1uZXcgVWludDhBcnJheSh0aGlzLmFydG9vbGtpdE5GVC5pbnN0YW5jZS5IRUFQVTguYnVmZmVyLHRoaXMudmlkZW9MdW1hUG9pbnRlcix0aGlzLmZyYW1lc2l6ZS80KSx0aGlzLmNhbWVyYV9tYXQ9bmV3IEZsb2F0NjRBcnJheSh0aGlzLmFydG9vbGtpdE5GVC5pbnN0YW5jZS5IRUFQVTguYnVmZmVyLEkuY2FtZXJhLDE2KSx0aGlzLm1hcmtlcl90cmFuc2Zvcm1fbWF0PW5ldyBGbG9hdDY0QXJyYXkodGhpcy5hcnRvb2xraXRORlQuaW5zdGFuY2UuSEVBUFU4LmJ1ZmZlcixJLnRyYW5zZm9ybSwxMiksdGhpcy5zZXRQcm9qZWN0aW9uTmVhclBsYW5lKC4xKSx0aGlzLnNldFByb2plY3Rpb25GYXJQbGFuZSgxZTMpLHNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7Zy5kaXNwYXRjaEV2ZW50KHtuYW1lOlxcXCJsb2FkXFxcIix0YXJnZXQ6Z30pfSksMSksQS5hYnJ1cHQoXFxcInJldHVyblxcXCIsdGhpcyk7Y2FzZSAyMzpjYXNlXFxcImVuZFxcXCI6cmV0dXJuIEEuc3RvcCgpfX0pLEEsdGhpcyl9KSkpLGZ1bmN0aW9uKCl7cmV0dXJuIFEuYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9LHtrZXk6XFxcIl9pbml0TkZUXFxcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuYXJ0b29sa2l0TkZULnNldHVwQVIyKHRoaXMuaWQpfX0se2tleTpcXFwiX2NvcHlJbWFnZVRvSGVhcFxcXCIsdmFsdWU6ZnVuY3Rpb24oQSl7aWYoQSl7dmFyIEk7aWYoQS5kYXRhJiYoST1BLmRhdGEpLHRoaXMudmlkZW9MdW1hKWZvcih2YXIgZz0wLEI9MDtCPHRoaXMudmlkZW9TaXplO0IrKyl7dmFyIEM9SVtnKzBdLFE9SVtnKzFdLEU9SVtnKzJdO3RoaXMudmlkZW9MdW1hW0JdPUMrQytDK0UrUStRK1ErUT4+MyxnKz00fXJldHVybiEhdGhpcy5kYXRhSGVhcCYmKHRoaXMuZGF0YUhlYXAuc2V0KEkpLCEwKX1jb25zb2xlLmVycm9yKFxcXCJFcnJvcjogbm8gcHJvdmlkZWQgaW1hZ2VEYXRhIHRvIEFSQ29udHJvbGxlck5GVFxcXCIpfX1dLFt7a2V5OlxcXCJpbml0V2l0aERpbWVuc2lvbnNcXFwiLHZhbHVlOihCPUkoYSgpLm1hcmsoKGZ1bmN0aW9uIEkoZyxCLEMpe3ZhciBRO3JldHVybiBhKCkud3JhcCgoZnVuY3Rpb24oSSl7Zm9yKDs7KXN3aXRjaChJLnByZXY9SS5uZXh0KXtjYXNlIDA6cmV0dXJuIFE9bmV3IEEoZyxCLEMpLEkubmV4dD0zLFEuX2luaXRpYWxpemUoKTtjYXNlIDM6cmV0dXJuIEkuYWJydXB0KFxcXCJyZXR1cm5cXFwiLEkuc2VudCk7Y2FzZSA0OmNhc2VcXFwiZW5kXFxcIjpyZXR1cm4gSS5zdG9wKCl9fSksSSl9KSkpLGZ1bmN0aW9uKEEsSSxnKXtyZXR1cm4gQi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0se2tleTpcXFwiaW5pdFdpdGhJbWFnZVxcXCIsdmFsdWU6KGc9SShhKCkubWFyaygoZnVuY3Rpb24gSShnLEIpe3ZhciBDLFEsRTtyZXR1cm4gYSgpLndyYXAoKGZ1bmN0aW9uKEkpe2Zvcig7Oylzd2l0Y2goSS5wcmV2PUkubmV4dCl7Y2FzZSAwOnJldHVybiBDPWcudmlkZW9XaWR0aHx8Zy53aWR0aCxRPWcudmlkZW9IZWlnaHR8fGcuaGVpZ2h0LEU9bmV3IEEoQyxRLEIpLEkubmV4dD01LEUuX2luaXRpYWxpemUoKTtjYXNlIDU6cmV0dXJuIEkuYWJydXB0KFxcXCJyZXR1cm5cXFwiLEkuc2VudCk7Y2FzZSA2OmNhc2VcXFwiZW5kXFxcIjpyZXR1cm4gSS5zdG9wKCl9fSksSSl9KSkpLGZ1bmN0aW9uKEEsSSl7cmV0dXJuIGcuYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9XSksQX0oKTtjb25zdCBFST17QVJUb29sa2l0TkZUOkNJLEFSQ29udHJvbGxlck5GVDpRSX19KSgpLEIuZGVmYXVsdH0pKCksQS5leHBvcnRzPUkoKX19LEk9e307ZnVuY3Rpb24gZyhCKXt2YXIgQz1JW0JdO2lmKHZvaWQgMCE9PUMpcmV0dXJuIEMuZXhwb3J0czt2YXIgUT1JW0JdPXtleHBvcnRzOnt9fTtyZXR1cm4gQVtCXS5jYWxsKFEuZXhwb3J0cyxRLFEuZXhwb3J0cyxnKSxRLmV4cG9ydHN9Zy5uPUE9Pnt2YXIgST1BJiZBLl9fZXNNb2R1bGU/KCk9PkEuZGVmYXVsdDooKT0+QTtyZXR1cm4gZy5kKEkse2E6SX0pLEl9LGcuZD0oQSxJKT0+e2Zvcih2YXIgQiBpbiBJKWcubyhJLEIpJiYhZy5vKEEsQikmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShBLEIse2VudW1lcmFibGU6ITAsZ2V0OklbQl19KX0sZy5vPShBLEkpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoQSxJKSwoKCk9PntcXFwidXNlIHN0cmljdFxcXCI7dmFyIEE9Zyg4MDEpLEk9Zy5uKEEpO2NvbnN0e0FSQ29udHJvbGxlck5GVDpCfT1JKCksQz1zZWxmO0Mub25tZXNzYWdlPUE9Pntjb25zdCBJPUEuZGF0YTtzd2l0Y2goSS50eXBlKXtjYXNlXFxcImxvYWRcXFwiOnJldHVybiB2b2lkIEQoSSk7Y2FzZVxcXCJzdG9wXFxcIjppPW51bGw7YnJlYWs7Y2FzZVxcXCJwcm9jZXNzXFxcIjpRPUkuaW1hZ2VkYXRhLGEoUSxJLmZyYW1lKX19O2xldCBRPW51bGwsRT0wLGk9bnVsbCxvPW51bGw7Y29uc3QgRD1BPT57Y29uc3QgST1zZWxmLm9yaWdpbjtsZXQgZyxRPVtdLEU9QS5tYXJrZXIubGVuZ3RoO2NvbnNvbGUuZGVidWcoXFxcIkJhc2UgcGF0aDpcXFwiLEkpO2NvbnN0IEQ9L2h0dHBzPzpcXFxcL1xcXFwvKHd3d1xcXFwuKT9bLWEtekEtWjAtOUA6JS5fXFxcXCt+Iz1dezIsMjU2fVxcXFwuW2Etel17Miw2fVxcXFxiKFstYS16QS1aMC05QDolX1xcXFwrLn4jKCk/Ji8vPV0qKS9naW0udGVzdChBLmNhbWVyYV9wYXJhKTsxPT1EP2c9QS5hZGRQYXRoP0krXFxcIi9cXFwiK0EuYWRkUGF0aCtcXFwiL1xcXCIrQS5jYW1lcmFfcGFyYTpBLmNhbWVyYV9wYXJhOjA9PUQmJihnPUEuYWRkUGF0aD9JK1xcXCIvXFxcIitBLmFkZFBhdGgrXFxcIi9cXFwiK0EuY2FtZXJhX3BhcmE6SStcXFwiL1xcXCIrQS5jYW1lcmFfcGFyYSksY29uc29sZS5kZWJ1ZyhcXFwiTG9hZGluZyBjYW1lcmEgYXQ6XFxcIixnKSxCLmluaXRXaXRoRGltZW5zaW9ucyhBLnB3LEEucGgsZykudGhlbigoZz0+e2k9Zztjb25zdCBCPWkuZ2V0Q2FtZXJhTWF0cml4KCk7aS5hZGRFdmVudExpc3RlbmVyKFxcXCJnZXRORlRNYXJrZXJcXFwiLChBPT57bz17dHlwZTpcXFwiZm91bmRcXFwiLG1hdHJpeEdMX1JIOkpTT04uc3RyaW5naWZ5KEEuZGF0YS5tYXRyaXhHTF9SSCl9fSkpO2NvbnN0IEQ9L2h0dHBzPzpcXFxcL1xcXFwvKHd3d1xcXFwuKT9bLWEtekEtWjAtOUA6JS5fXFxcXCt+Iz1dezIsMjU2fVxcXFwuW2Etel17Miw2fVxcXFxiKFstYS16QS1aMC05QDolX1xcXFwrLn4jKCk/Ji8vPV0qKS9naW0udGVzdChBLm1hcmtlcik7Zm9yKHZhciBhPTA7YTxFO2ErKyl7bGV0IGc7MT09RD9BLmFkZFBhdGg/Zz1JK1xcXCIvXFxcIitBLmFkZFBhdGgrXFxcIi9cXFwiK0EubWFya2VyW2FdOlE9QS5tYXJrZXJbYV06MD09RCYmKGc9QS5hZGRQYXRoP0krXFxcIi9cXFwiK0EuYWRkUGF0aCtcXFwiL1xcXCIrQS5tYXJrZXJbYV06SStcXFwiL1xcXCIrQS5tYXJrZXJbYV0pLFEucHVzaChnKX1jb25zb2xlLmRlYnVnKFxcXCJMb2FkaW5nIE5GVCBtYXJrZXIgYXQ6IFxcXCIsUSksaS5sb2FkTkZUTWFya2VycyhRLChBPT57bGV0IEk9aS5nZXRORlREYXRhKGkuaWQsMCk7Qy5wb3N0TWVzc2FnZSh7dHlwZTpcXFwibWFya2VySW5mb3NcXFwiLG1hcmtlcjpJfSksaS50cmFja05GVE1hcmtlcklkKEEpLGNvbnNvbGUubG9nKFxcXCJsb2FkTkZUTWFya2VyIC0+IFxcXCIsQSksY29uc29sZS5sb2coQSksQy5wb3N0TWVzc2FnZSh7dHlwZTpcXFwiZW5kTG9hZGluZ1xcXCIsZW5kOiEwfSl9KSkuY2F0Y2goKEE9Pntjb25zb2xlLmVycm9yKFxcXCJFcnJvciBpbiBsb2FkaW5nIG1hcmtlciBvbiBXb3JrZXJcXFwiLEEpfSkpLEMucG9zdE1lc3NhZ2Uoe3R5cGU6XFxcImxvYWRlZFxcXCIscHJvajpKU09OLnN0cmluZ2lmeShCKX0pfSkpLmNhdGNoKChBPT57Y29uc29sZS5lcnJvcihBKX0pKX0sYT0oQSxJKT0+e0khPT1FJiYobz1udWxsLGkmJmkucHJvY2VzcyYmaS5wcm9jZXNzKEEpLEU9SSksbnVsbCE9bz9DLnBvc3RNZXNzYWdlKG8pOkMucG9zdE1lc3NhZ2Uoe3R5cGU6XFxcIm5vdCBmb3VuZFxcXCJ9KSxBPW51bGx9fSkoKX0pKCk7XFxuXCIsIFwiV29ya2VyXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTtcbn1cbiIsIi8qXG4gKiAgTkZUV29ya2VyLnRzXG4gKiAgQVJuZnRcbiAqXG4gKiAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgQVJuZnQgLSBXZWJBUktpdC5cbiAqXG4gKiAgQVJuZnQgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiAgQVJuZnQgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiAgYWxvbmcgd2l0aCBBUm5mdC4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKiAgQXMgYSBzcGVjaWFsIGV4Y2VwdGlvbiwgdGhlIGNvcHlyaWdodCBob2xkZXJzIG9mIHRoaXMgbGlicmFyeSBnaXZlIHlvdVxuICogIHBlcm1pc3Npb24gdG8gbGluayB0aGlzIGxpYnJhcnkgd2l0aCBpbmRlcGVuZGVudCBtb2R1bGVzIHRvIHByb2R1Y2UgYW5cbiAqICBleGVjdXRhYmxlLCByZWdhcmRsZXNzIG9mIHRoZSBsaWNlbnNlIHRlcm1zIG9mIHRoZXNlIGluZGVwZW5kZW50IG1vZHVsZXMsIGFuZCB0b1xuICogIGNvcHkgYW5kIGRpc3RyaWJ1dGUgdGhlIHJlc3VsdGluZyBleGVjdXRhYmxlIHVuZGVyIHRlcm1zIG9mIHlvdXIgY2hvaWNlLFxuICogIHByb3ZpZGVkIHRoYXQgeW91IGFsc28gbWVldCwgZm9yIGVhY2ggbGlua2VkIGluZGVwZW5kZW50IG1vZHVsZSwgdGhlIHRlcm1zIGFuZFxuICogIGNvbmRpdGlvbnMgb2YgdGhlIGxpY2Vuc2Ugb2YgdGhhdCBtb2R1bGUuIEFuIGluZGVwZW5kZW50IG1vZHVsZSBpcyBhIG1vZHVsZVxuICogIHdoaWNoIGlzIG5laXRoZXIgZGVyaXZlZCBmcm9tIG5vciBiYXNlZCBvbiB0aGlzIGxpYnJhcnkuIElmIHlvdSBtb2RpZnkgdGhpc1xuICogIGxpYnJhcnksIHlvdSBtYXkgZXh0ZW5kIHRoaXMgZXhjZXB0aW9uIHRvIHlvdXIgdmVyc2lvbiBvZiB0aGUgbGlicmFyeSwgYnV0IHlvdVxuICogIGFyZSBub3Qgb2JsaWdhdGVkIHRvIGRvIHNvLiBJZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gc28sIGRlbGV0ZSB0aGlzIGV4Y2VwdGlvblxuICogIHN0YXRlbWVudCBmcm9tIHlvdXIgdmVyc2lvbi5cbiAqXG4gKiAgQ29weXJpZ2h0IDIwMjEgV2ViQVJLaXQuXG4gKlxuICogIEF1dGhvcihzKTogV2FsdGVyIFBlcmRhbiBAa2Fsd2FsdCBodHRwczovL2dpdGh1Yi5jb20va2Fsd2FsdFxuICpcbiAqL1xuaW1wb3J0IFdvcmtlciBmcm9tIFwid29ya2VyLWxvYWRlcj9pbmxpbmU9bm8tZmFsbGJhY2shLi9Xb3JrZXJcIjtcbmltcG9ydCB7IGdldFdpbmRvd1NpemUgfSBmcm9tIFwiLi91dGlscy9BUm5mdFV0aWxzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5GVFdvcmtlciB7XG4gICAgcHJpdmF0ZSB3b3JrZXI6IFdvcmtlcjtcblxuICAgIHByaXZhdGUgbWFya2VyVVJMOiBhbnk7XG5cbiAgICBwcml2YXRlIF9wcm9jZXNzaW5nOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBwcml2YXRlIHZ3OiBudW1iZXI7XG4gICAgcHJpdmF0ZSB2aDogbnVtYmVyO1xuXG4gICAgcHJpdmF0ZSB0YXJnZXQ6IEV2ZW50VGFyZ2V0O1xuXG4gICAgcHJpdmF0ZSB1dWlkOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBuYW1lOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBhZGRQYXRoOiBzdHJpbmc7XG5cbiAgICBwcm90ZWN0ZWQgcmVhZHk6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBUaGUgTkZUV29ya2VyIGNvbnN0cnVjdG9yLCB0byBjcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgdGhlIE5GVFdvcmtlciBjbGFzcy5cbiAgICAgKiBAcGFyYW0gbWFya2VyVVJMIHRoZSBtYXJrZXIgdXJsIG9mIHRoZSBORlQgbWFya2VyLlxuICAgICAqIEBwYXJhbSB3IHRoZSB3aWR0aCBvZiB0aGUgY2FtZXJhLlxuICAgICAqIEBwYXJhbSBoIHRoZSBoZWlnaHQgb2YgdGhlIGNhbWVyYS5cbiAgICAgKiBAcGFyYW0gdXVpZCB0aGUgdXVpZCBvZiB0aGUgbWFya2VyIGFzc2lnbmVkIGJ5IHRoZSBBUm5mdCBjb25zdHJ1Y3Rvci5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtYXJrZXJVUkw6IEFycmF5PHN0cmluZz4sIHc6IG51bWJlciwgaDogbnVtYmVyLCB1dWlkOiBzdHJpbmcsIG5hbWU6IHN0cmluZywgYWRkUGF0aDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMubWFya2VyVVJMID0gbWFya2VyVVJMO1xuICAgICAgICB0aGlzLnZ3ID0gdztcbiAgICAgICAgdGhpcy52aCA9IGg7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gd2luZG93IHx8IGdsb2JhbDtcbiAgICAgICAgdGhpcy51dWlkID0gdXVpZDtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5yZWFkeSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmFkZFBhdGggPSBhZGRQYXRoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemUgdGhlIE5GVFdvcmtlciBpbnN0YW5jZSwgeW91IG5lZWQgdG8gcHJvdmlkZSB0aGUgY2FtZXJhX3BhcmEuZGF0IFVybCxcbiAgICAgKiB0aGUgSW1hZ2VEYXRhIGZyb20gdGhlIHZpZGVvIHN0cmVhbSBhbmQgdGhlIHJlbmRlclVwZGF0ZSBhbmQgdHJhY2tVcGRhdGUgZnVuY3Rpb25zIGZvciB0aGUgc3RhdHMuXG4gICAgICogQHBhcmFtIGNhbWVyYVVSTFxuICAgICAqIEBwYXJhbSBpbWFnZURhdGFcbiAgICAgKiBAcGFyYW0gcmVuZGVyVXBkYXRlXG4gICAgICogQHBhcmFtIHRyYWNrVXBkYXRlXG4gICAgICogQHJldHVybnMgdHJ1ZSBpZiBzdWNjZXNmdWxsLlxuICAgICAqL1xuICAgIHB1YmxpYyBhc3luYyBpbml0aWFsaXplKGNhbWVyYVVSTDogc3RyaW5nLCByZW5kZXJVcGRhdGU6ICgpID0+IHZvaWQsIHRyYWNrVXBkYXRlOiAoKSA9PiB2b2lkKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIHRoaXMud29ya2VyID0gbmV3IFdvcmtlcigpO1xuICAgICAgICBjb25zdCB3b3JrZXIgPSB0aGlzLndvcmtlcjtcblxuICAgICAgICB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwidGVybWluYXRlV29ya2VyLVwiICsgdGhpcy5uYW1lLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB3b3JrZXIucG9zdE1lc3NhZ2UoeyB0eXBlOiBcInN0b3BcIiB9KTtcbiAgICAgICAgICAgIHdvcmtlci50ZXJtaW5hdGUoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmxvYWQoY2FtZXJhVVJMLCByZW5kZXJVcGRhdGUsIHRyYWNrVXBkYXRlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIGlzIHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgcGFzcyB0aGUgdmlkZW8gc3RyZWFtIHRvIHRoZSB3b3JrZXIuXG4gICAgICogQHBhcmFtIGltYWdlRGF0YSB0aGUgaW1hZ2UgZGF0YSBmcm9tIHRoZSB2aWRlbyBzdHJlYW0uXG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIHB1YmxpYyBwcm9jZXNzKGltYWdlZGF0YTogSW1hZ2VEYXRhLCBmcmFtZTogbnVtYmVyKSB7XG4gICAgICAgIGlmICh0aGlzLl9wcm9jZXNzaW5nKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcHJvY2Vzc2luZyA9IHRydWU7XG5cbiAgICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2UoeyB0eXBlOiBcInByb2Nlc3NcIiwgaW1hZ2VkYXRhLCBmcmFtZSB9LCBbaW1hZ2VkYXRhLmRhdGEuYnVmZmVyXSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogTG9hZCB0aGUgcmVzb3VyY2VzIGZyb20gdGhlIEFSbmZ0IGluc3RhbmNlIGludG8gdGhlIHdvcmtlci5cbiAgICAgKiBAcGFyYW0gY2FtZXJhVVJMIGNhbWVyYV9wYXJhLmRhdCB1cmxcbiAgICAgKiBAcGFyYW0gaW1hZ2VEYXRhIGltYWdlIGRhdGEgZnJvbSB0aGUgdmlkZW8gc3RyZWFtLlxuICAgICAqIEBwYXJhbSByZW5kZXJVcGRhdGUgcmVuZGVyVXBkYXRlIGZ1bmN0aW9uIGZvciB0aGUgc3RhdHMuXG4gICAgICogQHBhcmFtIHRyYWNrVXBkYXRlIHRyYWNrVXBkYXRlIGZvciB0aGUgc3RhdHMuXG4gICAgICogQHJldHVybnMgdHJ1ZSBpZiBzdWNjZXNmdWxsLlxuICAgICAqL1xuICAgIHByb3RlY3RlZCBsb2FkKGNhbWVyYVVSTDogc3RyaW5nLCByZW5kZXJVcGRhdGU6ICgpID0+IHZvaWQsIHRyYWNrVXBkYXRlOiAoKSA9PiB2b2lkKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIGxldCBbc3csIHNoLCBwdywgcGgsIHcsIGhdID0gZ2V0V2luZG93U2l6ZSh0aGlzLnZ3LCB0aGlzLnZoKTtcblxuICAgICAgICBjb25zdCBzZXRXaW5kb3dTaXplRXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQ8b2JqZWN0PihcImdldFdpbmRvd1NpemVcIiwgeyBkZXRhaWw6IHsgc3c6IHN3LCBzaDogc2ggfSB9KTtcbiAgICAgICAgdGhpcy50YXJnZXQuZGlzcGF0Y2hFdmVudChzZXRXaW5kb3dTaXplRXZlbnQpO1xuXG4gICAgICAgIHRoaXMud29ya2VyLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgIHR5cGU6IFwibG9hZFwiLFxuICAgICAgICAgICAgcHc6IHB3LFxuICAgICAgICAgICAgcGg6IHBoLFxuICAgICAgICAgICAgY2FtZXJhX3BhcmE6IGNhbWVyYVVSTCxcbiAgICAgICAgICAgIG1hcmtlcjogdGhpcy5tYXJrZXJVUkwsXG4gICAgICAgICAgICBhZGRQYXRoOiB0aGlzLmFkZFBhdGgsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMud29ya2VyLm9ubWVzc2FnZSA9IChldjogYW55KSA9PiB7XG4gICAgICAgICAgICB2YXIgbXNnID0gZXYuZGF0YTtcbiAgICAgICAgICAgIHN3aXRjaCAobXNnLnR5cGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwibG9hZGVkXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb2ogPSBKU09OLnBhcnNlKG1zZy5wcm9qKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmF0aW9XID0gcHcgLyB3O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByYXRpb0ggPSBwaCAvIGg7XG4gICAgICAgICAgICAgICAgICAgIHByb2pbMF0gKj0gcmF0aW9XO1xuICAgICAgICAgICAgICAgICAgICBwcm9qWzRdICo9IHJhdGlvVztcbiAgICAgICAgICAgICAgICAgICAgcHJvals4XSAqPSByYXRpb1c7XG4gICAgICAgICAgICAgICAgICAgIHByb2pbMTJdICo9IHJhdGlvVztcbiAgICAgICAgICAgICAgICAgICAgcHJvalsxXSAqPSByYXRpb0g7XG4gICAgICAgICAgICAgICAgICAgIHByb2pbNV0gKj0gcmF0aW9IO1xuICAgICAgICAgICAgICAgICAgICBwcm9qWzldICo9IHJhdGlvSDtcbiAgICAgICAgICAgICAgICAgICAgcHJvalsxM10gKj0gcmF0aW9IO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9qZWN0aW9uTWF0cml4RXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQ8b2JqZWN0PihcImdldFByb2plY3Rpb25NYXRyaXhcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiB7IHByb2o6IHByb2ogfSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0LmRpc3BhdGNoRXZlbnQocHJvamVjdGlvbk1hdHJpeEV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgXCJlbmRMb2FkaW5nXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1zZy5lbmQgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZpbmcgbG9hZGVyIHBhZ2UgaWYgcHJlc2VudFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbG9hZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2FkaW5nXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvYWRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PihcIi5sb2FkaW5nLXRleHRcIikuaW5uZXJUZXh0ID0gXCJTdGFydCB0aGUgdHJhY2tpbmchXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsb2FkZXIucGFyZW50RWxlbWVudCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvYWRlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGVyLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQobG9hZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVhZHkgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRhcmdldC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudDxvYmplY3Q+KFwibmZ0TG9hZGVkLVwiICsgdGhpcy51dWlkKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlIFwibWFya2VySW5mb3NcIjoge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXJrZXIgPSBtc2cubWFya2VyO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZnRFdmVudCA9IG5ldyBDdXN0b21FdmVudDxvYmplY3Q+KFwiZ2V0TkZURGF0YS1cIiArIHRoaXMudXVpZCArIFwiLVwiICsgdGhpcy5uYW1lLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWw6IHsgZHBpOiBtYXJrZXIuZHBpLCB3aWR0aDogbWFya2VyLndpZHRoLCBoZWlnaHQ6IG1hcmtlci5oZWlnaHQgfSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGFyZ2V0LmRpc3BhdGNoRXZlbnQobmZ0RXZlbnQpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcImZvdW5kXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3VuZChtc2cpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSBcIm5vdCBmb3VuZFwiOiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZm91bmQobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRyYWNrVXBkYXRlKCk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMud29ya2VyLm9uZXJyb3IgPSAoZXJyOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJXb3JrZXIgZXJyb3IgZnJvbSBORlRXb3JrZXI6IFwiLCBlcnIpO1xuICAgICAgICB9O1xuICAgICAgICBsZXQgcmVuZGVyVSA9ICgpID0+IHtcbiAgICAgICAgICAgIHJlbmRlclVwZGF0ZSgpO1xuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXJVKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmVuZGVyVSgpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIGRpc3BhdGNoIGFuIGV2ZW50IGxpc3RlbmVyIGlmIHRoZSBtYXJrZXIgaXMgbG9zdCBvciB0aGUgbWF0cml4IG9mIHRoZSBtYXJrZXJcbiAgICAgKiBpZiBmb3VuZC5cbiAgICAgKiBAcGFyYW0gbXNnIG1lc3NhZ2UgZnJvbSB0aGUgd29ya2VyLlxuICAgICAqL1xuICAgIHB1YmxpYyBmb3VuZChtc2c6IGFueSkge1xuICAgICAgICBsZXQgd29ybGQ6IGFueTtcbiAgICAgICAgaWYgKCFtc2cpIHtcbiAgICAgICAgICAgIC8vIGNvbW1lbnRpbmcgb3V0IHRoaXMgcm91dGluZSBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYmFya2l0L0FSbmZ0L3B1bGwvMTg0I2lzc3VlY29tbWVudC04NTM0MDA5MDNcbiAgICAgICAgICAgIC8vaWYgKHdvcmxkKSB7XG4gICAgICAgICAgICB3b3JsZCA9IG51bGw7XG4gICAgICAgICAgICBjb25zdCBuZnRUcmFja2luZ0xvc3RFdmVudCA9IG5ldyBDdXN0b21FdmVudDxvYmplY3Q+KFwibmZ0VHJhY2tpbmdMb3N0LVwiICsgdGhpcy51dWlkICsgXCItXCIgKyB0aGlzLm5hbWUsIHtcbiAgICAgICAgICAgICAgICBkZXRhaWw6IHsgbmFtZTogdGhpcy5uYW1lIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0LmRpc3BhdGNoRXZlbnQobmZ0VHJhY2tpbmdMb3N0RXZlbnQpO1xuICAgICAgICAgICAgLy99XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB3b3JsZCA9IEpTT04ucGFyc2UobXNnLm1hdHJpeEdMX1JIKTtcbiAgICAgICAgICAgIGNvbnN0IG1hdHJpeEdMcmhFdmVudCA9IG5ldyBDdXN0b21FdmVudDxvYmplY3Q+KFwiZ2V0TWF0cml4R0xfUkgtXCIgKyB0aGlzLnV1aWQgKyBcIi1cIiArIHRoaXMubmFtZSwge1xuICAgICAgICAgICAgICAgIGRldGFpbDogeyBtYXRyaXhHTF9SSDogd29ybGQsIG5hbWU6IHRoaXMubmFtZSB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnRhcmdldC5kaXNwYXRjaEV2ZW50KG1hdHJpeEdMcmhFdmVudCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgaXNSZWFkeSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZHk7XG4gICAgfVxuICAgIHB1YmxpYyBnZXRVdWlkKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLnV1aWQ7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE5hbWUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0TWFya2VyVXJsKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcmtlclVSTDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0RXZlbnRUYXJnZXQoKTogRXZlbnRUYXJnZXQge1xuICAgICAgICByZXR1cm4gdGhpcy50YXJnZXQ7XG4gICAgfVxuXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7fVxufVxuXG4vL2V4cG9ydCBkZWZhdWx0IG51bGwgYXMgYW55O1xuIiwiY29uc3QgcmFuZG9tVVVJRCA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5yYW5kb21VVUlEICYmIGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmFuZG9tVVVJRFxufTsiLCIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbmxldCBnZXRSYW5kb21WYWx1ZXM7XG5jb25zdCBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJuZygpIHtcbiAgLy8gbGF6eSBsb2FkIHNvIHRoYXQgZW52aXJvbm1lbnRzIHRoYXQgbmVlZCB0byBwb2x5ZmlsbCBoYXZlIGEgY2hhbmNlIHRvIGRvIHNvXG4gIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgLy8gZ2V0UmFuZG9tVmFsdWVzIG5lZWRzIHRvIGJlIGludm9rZWQgaW4gYSBjb250ZXh0IHdoZXJlIFwidGhpc1wiIGlzIGEgQ3J5cHRvIGltcGxlbWVudGF0aW9uLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0byk7XG5cbiAgICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBnZXRSYW5kb21WYWx1ZXMocm5kczgpO1xufSIsImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG5jb25zdCBieXRlVG9IZXggPSBbXTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXgucHVzaCgoaSArIDB4MTAwKS50b1N0cmluZygxNikuc2xpY2UoMSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICAvLyBOb3RlOiBCZSBjYXJlZnVsIGVkaXRpbmcgdGhpcyBjb2RlISAgSXQncyBiZWVuIHR1bmVkIGZvciBwZXJmb3JtYW5jZVxuICAvLyBhbmQgd29ya3MgaW4gd2F5cyB5b3UgbWF5IG5vdCBleHBlY3QuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvcHVsbC80MzRcbiAgcmV0dXJuIChieXRlVG9IZXhbYXJyW29mZnNldCArIDBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDNdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA1XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDZdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgN11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA4XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDldXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTNdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTVdXSkudG9Mb3dlckNhc2UoKTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICBjb25zdCB1dWlkID0gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0KTsgLy8gQ29uc2lzdGVuY3kgY2hlY2sgZm9yIHZhbGlkIFVVSUQuICBJZiB0aGlzIHRocm93cywgaXQncyBsaWtlbHkgZHVlIHRvIG9uZVxuICAvLyBvZiB0aGUgZm9sbG93aW5nOlxuICAvLyAtIE9uZSBvciBtb3JlIGlucHV0IGFycmF5IHZhbHVlcyBkb24ndCBtYXAgdG8gYSBoZXggb2N0ZXQgKGxlYWRpbmcgdG9cbiAgLy8gXCJ1bmRlZmluZWRcIiBpbiB0aGUgdXVpZClcbiAgLy8gLSBJbnZhbGlkIGlucHV0IHZhbHVlcyBmb3IgdGhlIFJGQyBgdmVyc2lvbmAgb3IgYHZhcmlhbnRgIGZpZWxkc1xuXG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgcmV0dXJuIHV1aWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeTsiLCJpbXBvcnQgbmF0aXZlIGZyb20gJy4vbmF0aXZlLmpzJztcbmltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHsgdW5zYWZlU3RyaW5naWZ5IH0gZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICBpZiAobmF0aXZlLnJhbmRvbVVVSUQgJiYgIWJ1ZiAmJiAhb3B0aW9ucykge1xuICAgIHJldHVybiBuYXRpdmUucmFuZG9tVVVJRCgpO1xuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGNvbnN0IHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpOyAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG5cbiAgcm5kc1s2XSA9IHJuZHNbNl0gJiAweDBmIHwgMHg0MDtcbiAgcm5kc1s4XSA9IHJuZHNbOF0gJiAweDNmIHwgMHg4MDsgLy8gQ29weSBieXRlcyB0byBidWZmZXIsIGlmIHByb3ZpZGVkXG5cbiAgaWYgKGJ1Zikge1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICBidWZbb2Zmc2V0ICsgaV0gPSBybmRzW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBidWY7XG4gIH1cblxuICByZXR1cm4gdW5zYWZlU3RyaW5naWZ5KHJuZHMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2NDsiLCIvKlxuICogIEFSbmZ0LnRzXG4gKiAgQVJuZnRcbiAqXG4gKiAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgQVJuZnQgLSBXZWJBUktpdC5cbiAqXG4gKiAgQVJuZnQgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiAgQVJuZnQgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiAgYWxvbmcgd2l0aCBBUm5mdC4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKiAgQXMgYSBzcGVjaWFsIGV4Y2VwdGlvbiwgdGhlIGNvcHlyaWdodCBob2xkZXJzIG9mIHRoaXMgbGlicmFyeSBnaXZlIHlvdVxuICogIHBlcm1pc3Npb24gdG8gbGluayB0aGlzIGxpYnJhcnkgd2l0aCBpbmRlcGVuZGVudCBtb2R1bGVzIHRvIHByb2R1Y2UgYW5cbiAqICBleGVjdXRhYmxlLCByZWdhcmRsZXNzIG9mIHRoZSBsaWNlbnNlIHRlcm1zIG9mIHRoZXNlIGluZGVwZW5kZW50IG1vZHVsZXMsIGFuZCB0b1xuICogIGNvcHkgYW5kIGRpc3RyaWJ1dGUgdGhlIHJlc3VsdGluZyBleGVjdXRhYmxlIHVuZGVyIHRlcm1zIG9mIHlvdXIgY2hvaWNlLFxuICogIHByb3ZpZGVkIHRoYXQgeW91IGFsc28gbWVldCwgZm9yIGVhY2ggbGlua2VkIGluZGVwZW5kZW50IG1vZHVsZSwgdGhlIHRlcm1zIGFuZFxuICogIGNvbmRpdGlvbnMgb2YgdGhlIGxpY2Vuc2Ugb2YgdGhhdCBtb2R1bGUuIEFuIGluZGVwZW5kZW50IG1vZHVsZSBpcyBhIG1vZHVsZVxuICogIHdoaWNoIGlzIG5laXRoZXIgZGVyaXZlZCBmcm9tIG5vciBiYXNlZCBvbiB0aGlzIGxpYnJhcnkuIElmIHlvdSBtb2RpZnkgdGhpc1xuICogIGxpYnJhcnksIHlvdSBtYXkgZXh0ZW5kIHRoaXMgZXhjZXB0aW9uIHRvIHlvdXIgdmVyc2lvbiBvZiB0aGUgbGlicmFyeSwgYnV0IHlvdVxuICogIGFyZSBub3Qgb2JsaWdhdGVkIHRvIGRvIHNvLiBJZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gc28sIGRlbGV0ZSB0aGlzIGV4Y2VwdGlvblxuICogIHN0YXRlbWVudCBmcm9tIHlvdXIgdmVyc2lvbi5cbiAqXG4gKiAgQ29weXJpZ2h0IDIwMjEgV2ViQVJLaXQuXG4gKlxuICogIEF1dGhvcihzKTogV2FsdGVyIFBlcmRhbiBAa2Fsd2FsdCBodHRwczovL2dpdGh1Yi5jb20va2Fsd2FsdFxuICpcbiAqL1xuaW1wb3J0IENvbnRhaW5lciBmcm9tIFwiLi91dGlscy9odG1sL0NvbnRhaW5lclwiO1xuaW1wb3J0IHsgQ29uZmlnRGF0YSB9IGZyb20gXCIuL2NvbmZpZy9Db25maWdEYXRhXCI7XG5pbXBvcnQgU3RhdHMgZnJvbSBcInN0YXRzLmpzXCI7XG5pbXBvcnQgeyBDYW1lcmFWaWV3UmVuZGVyZXIsIElDYW1lcmFWaWV3UmVuZGVyZXIgfSBmcm9tIFwiLi9yZW5kZXJlcnMvQ2FtZXJhVmlld1JlbmRlcmVyXCI7XG5pbXBvcnQgeyBnZXRDb25maWcgfSBmcm9tIFwiLi91dGlscy9BUm5mdFV0aWxzXCI7XG5pbXBvcnQgTkZUV29ya2VyIGZyb20gXCIuL05GVFdvcmtlclwiO1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSBcInV1aWRcIjtcbmltcG9ydCBwYWNrYWdlSnNvbiBmcm9tIFwiLi4vcGFja2FnZS5qc29uXCI7XG5jb25zdCB7IHZlcnNpb24gfSA9IHBhY2thZ2VKc29uO1xuXG4vKipcbiAqIEJhc2ljIGludGVyZmFjZSBmb3IgYW4gRW50aXR5LlxuICogQHBhcmFtIG5hbWUgdGhlIG5hbWUgb2YgIGh0ZSBFbnRpdHlcbiAqIEBwYXJhbSBtYXJrZXJVcmwgdGhlIG1hcmtlciB1cmwgYXNzY29jaWF0ZWRcbiAqL1xuaW50ZXJmYWNlIElFbnRpdHkge1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBtYXJrZXJVcmw6IHN0cmluZztcbn1cblxuLyoqXG4gKiBJSW5pdENvbmZpZyBpbnRlcmZhY2UgZm9yIHRoZSBiYXNlIGNvbmZpZ3VyYXRpb24uXG4gKiBAcGFyYW0gd2lkdGggdGhlIHdpZHRoIGluIHBpeGVscyBvZiB0aGUgdmlkZW8gY2FtZXJhLlxuICogQHBhcmFtIGhlaWdodCB0aGUgaGVpZ2h0IGluIHBpeGVscyBvZiB0aGUgdmlkZW8gY2FtZXJhLlxuICogQHBhcmFtIGNvbmZpZ1VybCB0aGUgdXJsIG9mIHRoZSBjb25maWcuanNvbiBmaWxlLlxuICogQHBhcmFtIHN0YXRzIHRydWUgaWYgeW91IHdhbnQgdGhlIHN0YXRzLlxuICogQHBhcmFtIGF1dG9VcGRhdGUgZmFsc2UgaWYgeW91IHdhbnQgdG8gbWFpbnRhaW4gaXQgeW91cnNlbGZcbiAqL1xuaW50ZXJmYWNlIElJbml0Q29uZmlnIHtcbiAgICAvKiogdGhlIHdpZHRoIGluIHBpeGVscyBvZiB0aGUgdmlkZW8gY2FtZXJhLiAqL1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgLyoqIHRoZSBoZWlnaHQgaW4gcGl4ZWxzIG9mIHRoZSB2aWRlbyBjYW1lcmEuICovXG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgLyoqIHRoZSB1cmwgb2YgdGhlIGNvbmZpZy5qc29uIGZpbGUuICovXG4gICAgY29uZmlnVXJsOiBzdHJpbmc7XG4gICAgLyoqIHRydWUgaWYgeW91IHdhbnQgdGhlIHN0YXRzLiAqL1xuICAgIHN0YXRzPzogYm9vbGVhbjtcbiAgICAvKiogZmFsc2UgaWYgeW91IHdhbnQgdG8gbWFpbnRhaW4gaXQgeW91cnNlbGYgKi9cbiAgICBhdXRvVXBkYXRlPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBJTmFtZUluaXRDb25maWcgZXh0ZW5kcyBJSW5pdENvbmZpZyBhbmQgaXQgaXMgdXNlZCBieSB0aGUgaW5pdFdpdGhDb25maWcgbWV0aG9kLlxuICogQHBhcmFtIG1hcmtlclVybHMgYW4gQXJyYXkgb2YgQXJyYXkgb2YgbWFya2VyIHVybHMuXG4gKiBAcGFyYW0gbmFtZXMgYW4gQXJyYXkgb2YgQXJyYXkgb2YgZW50aXR5IG5hbWVzLlxuICovXG5pbnRlcmZhY2UgSU5hbWVJbml0Q29uZmlnIGV4dGVuZHMgSUluaXRDb25maWcge1xuICAgIC8qKiB0aGUgQXJyYXkgb2YgdXJsIG9mIHRoZSBtYXJrZXJzICh3aXRob3V0IHRoZSBleHRlbnNpb24pICovXG4gICAgbWFya2VyVXJsczogQXJyYXk8QXJyYXk8c3RyaW5nPj47XG4gICAgLyoqIHRoZSBuYW1lcyBvZiB0aGUgbWFya2VycyAqL1xuICAgIG5hbWVzOiBBcnJheTxBcnJheTxzdHJpbmc+Pjtcbn1cblxuLyoqXG4gKiBJRW50aXR5SW5pdENvbmZpZyB1c2VkIGJ5IHRoZSBpbml0V2l0aEVudGl0aWVzIG1ldGhvZFxuICogQHBhcmFtIGVudGl0aWVzIGFuIEFycmF5IG9mIEVudGl0eVxuICovXG5pbnRlcmZhY2UgSUVudGl0eUluaXRDb25maWcgZXh0ZW5kcyBJSW5pdENvbmZpZyB7XG4gICAgLyoqIHRoZSBBcnJheSBvZiBFbnRpdHkuICovXG4gICAgZW50aXRpZXM6IElFbnRpdHlbXTtcbn1cblxuLyoqXG4gKiBJVmlld3MgaXMgdXNlZCBpbnRlcm5hbGx5IGJ5IEFSbmZ0XG4gKi9cbmludGVyZmFjZSBJVmlld3Mge1xuICAgIGNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gICAgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcbiAgICB2aWRlbzogSFRNTFZpZGVvRWxlbWVudDtcbiAgICBsb2FkaW5nPzogSFRNTEVsZW1lbnQ7XG4gICAgc3RhdHM/OiBIVE1MRWxlbWVudDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQVJuZnQge1xuICAgIHB1YmxpYyBjYW1lcmFWaWV3OiBDYW1lcmFWaWV3UmVuZGVyZXI7XG4gICAgcHVibGljIGFwcERhdGE6IENvbmZpZ0RhdGE7XG4gICAgcHVibGljIGFkZFBhdGg6IHN0cmluZztcbiAgICBwdWJsaWMgd2lkdGg6IG51bWJlcjtcbiAgICBwdWJsaWMgaGVpZ2h0OiBudW1iZXI7XG4gICAgcHVibGljIGNvbmZpZ1VybDogc3RyaW5nO1xuICAgIHB1YmxpYyBtYXJrZXJVcmw6IHN0cmluZztcbiAgICBwdWJsaWMgY2FtRGF0YTogc3RyaW5nO1xuICAgIHB1YmxpYyBhdXRvVXBkYXRlOiBib29sZWFuID0gdHJ1ZTtcbiAgICBwcml2YXRlIGNvbnRyb2xsZXJzOiBORlRXb3JrZXJbXTtcbiAgICBwcml2YXRlIHN0YXRpYyBlbnRpdGllczogSUVudGl0eVtdO1xuICAgIHByaXZhdGUgdGFyZ2V0OiBFdmVudFRhcmdldDtcbiAgICBwcml2YXRlIHV1aWQ6IHN0cmluZztcbiAgICBwcml2YXRlIHZlcnNpb246IHN0cmluZztcbiAgICBwcml2YXRlIGluaXRpYWxpemVkOiBib29sZWFuO1xuICAgIHByaXZhdGUgX3ZpZXdzOiBJVmlld3M7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgKipBUm5mdCoqIGNvbnN0cnVjdG9yIHRvIGNyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgQVJuZnQgY2xhc3MuXG4gICAgICogRXhhbXBsZSBjb2RlOlxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBjb25zdCBuZnQgPSBuZXcgQVJuZnQoNjQwLCA0ODAsICdjb25maWcuanNvbicpO1xuICAgICAqIGBgYFxuICAgICAqIEBwYXJhbSB3aWR0aCAobnVtYmVyKSB0aGUgd2lkdGggaW4gcGl4ZWxzIG9mIHRoZSB2aWRlbyBjYW1lcmEuXG4gICAgICogQHBhcmFtIGhlaWdodCAobnVtYmVyKSB0aGUgaGVpZ2h0IGluIHBpeGVscyBvZiB0aGUgdmlkZW8gY2FtZXJhLlxuICAgICAqIEBwYXJhbSBjb25maWdVcmwgKHN0cmluZykgdGhlIHVybCBvZiB0aGUgY29uZmlnLmpzb24gZmlsZVxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBjb25maWdVcmw6IHN0cmluZykge1xuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLmNvbmZpZ1VybCA9IGNvbmZpZ1VybDtcbiAgICAgICAgdGhpcy50YXJnZXQgPSB3aW5kb3cgfHwgZ2xvYmFsO1xuICAgICAgICB0aGlzLnV1aWQgPSB1dWlkdjQoKTtcbiAgICAgICAgdGhpcy52ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgY29uc29sZS5sb2coXCJBUm5mdCBcIiwgdGhpcy52ZXJzaW9uKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgaW5pdCBmdW5jdGlvbiBsZXQgZGVmaW5lIHRoZSBiYXNpYyBzZXQtdXAgZm9yIHRoZSBORlQgbWFya2VyLlxuICAgICAqIEludGVybmFsbHkgdXNlIHRoZSBpbml0aWFsaXplIGZ1bmN0aW9uLCB0aGF0IGlzIHJlc3BvbnNpYmxlIHRvIGxvYWQgYWxsIHRoZSByZXNvdXJjZXMuXG4gICAgICogQHBhcmFtIHdpZHRoIChudW1iZXIpIHRoZSB3aWR0aCBpbiBwaXhlbHMgb2YgdGhlIHZpZGVvIGNhbWVyYS5cbiAgICAgKiBAcGFyYW0gaGVpZ2h0IChudW1iZXIpIHRoZSBoZWlnaHQgaW4gcGl4ZWxzIG9mIHRoZSB2aWRlbyBjYW1lcmEuXG4gICAgICogQHBhcmFtIG1hcmtlclVybHMgKEFycmF5PHN0cmluZz4pIHRoZSBBcnJheSBvZiB1cmwgb2YgdGhlIG1hcmtlcnMgKHdpdGhvdXQgdGhlIGV4dGVuc2lvbilcbiAgICAgKiBAcGFyYW0gbmFtZXMgdGhlIG5hbWVzIG9mIHRoZSBtYXJrZXJzXG4gICAgICogQHBhcmFtIGNvbmZpZ1VybCAoc3RyaW5nKSB0aGUgdXJsIG9mIHRoZSBjb25maWcuanNvbiBmaWxlXG4gICAgICogQHBhcmFtIHN0YXRzIChib29sZWFuKSB0cnVlIGlmIHlvdSB3YW50IHRoZSBzdGF0cy5cbiAgICAgKiBAcmV0dXJucyAob2JqZWN0KSB0aGUgbmZ0IG9iamVjdC5cbiAgICAgKi9cblxuICAgIHN0YXRpYyBhc3luYyBpbml0KFxuICAgICAgICB3aWR0aDogbnVtYmVyLFxuICAgICAgICBoZWlnaHQ6IG51bWJlcixcbiAgICAgICAgbWFya2VyVXJsczogQXJyYXk8QXJyYXk8c3RyaW5nPj4sXG4gICAgICAgIG5hbWVzOiBBcnJheTxBcnJheTxzdHJpbmc+PixcbiAgICAgICAgY29uZmlnVXJsOiBzdHJpbmcsXG4gICAgICAgIHN0YXRzOiBib29sZWFuXG4gICAgKTogUHJvbWlzZTxvYmplY3Q+IHtcbiAgICAgICAgcmV0dXJuIEFSbmZ0LmluaXRXaXRoQ29uZmlnKHsgd2lkdGgsIGhlaWdodCwgbWFya2VyVXJscywgbmFtZXMsIGNvbmZpZ1VybCwgc3RhdHMgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIGluaXRXaXRoRW50aXRpZXMgZnVuY3Rpb24gbGV0IHNldC11cCB0aGUgTkZUIG1hcmtlcnMgd2l0aCBhIEVudGl0eSBvYmplY3QuXG4gICAgICogV2Ugc2V0IGFuIEFycmF5IG9mIEVudGl0eSBmb3IgbXVsdGlwbGUgTkZUIG1hcmtlcnMuIEFuIEVudGl0eSBpcyBjb21wb3NlZCBvZiBhIHVuaXF1ZSBuYW1lIGFuZFxuICAgICAqIGEgbWFya2VyVXJsLlxuICAgICAqIEludGVybmFsbHkgdXNlIHRoZSBpbml0aWFsaXplIGZ1bmN0aW9uLCB0aGF0IGlzIHJlc3BvbnNpYmxlIHRvIGxvYWQgYWxsIHRoZSByZXNvdXJjZXMuXG4gICAgICogQHBhcmFtIHdpZHRoIChudW1iZXIpIHRoZSB3aWR0aCBpbiBwaXhlbHMgb2YgdGhlIHZpZGVvIGNhbWVyYS5cbiAgICAgKiBAcGFyYW0gaGVpZ2h0IChudW1iZXIpIHRoZSBoZWlnaHQgaW4gcGl4ZWxzIG9mIHRoZSB2aWRlbyBjYW1lcmEuXG4gICAgICogQHBhcmFtIGVudGl0aWVzIChFbnRpdHlbXSkgdGhlIEFycmF5IG9mIEVudGl0eVxuICAgICAqIEBwYXJhbSBjb25maWdVcmwgKHN0cmluZykgdGhlIHVybCBvZiB0aGUgY29uZmlnLmpzb24gZmlsZVxuICAgICAqIEBwYXJhbSBzdGF0cyAoYm9vbGVhbikgdHJ1ZSBpZiB5b3Ugd2FudCB0aGUgc3RhdHMuXG4gICAgICogQHJldHVybnMgKG9iamVjdCkgdGhlIG5mdCBvYmplY3QuXG4gICAgICovXG5cbiAgICBzdGF0aWMgYXN5bmMgaW5pdFdpdGhFbnRpdGllcyhcbiAgICAgICAgd2lkdGg6IG51bWJlcixcbiAgICAgICAgaGVpZ2h0OiBudW1iZXIsXG4gICAgICAgIGVudGl0aWVzOiBBcnJheTxJRW50aXR5PixcbiAgICAgICAgY29uZmlnVXJsOiBzdHJpbmcsXG4gICAgICAgIHN0YXRzOiBib29sZWFuXG4gICAgKTogUHJvbWlzZTxvYmplY3Q+IHtcbiAgICAgICAgcmV0dXJuIEFSbmZ0LmluaXRXaXRoQ29uZmlnKHsgd2lkdGgsIGhlaWdodCwgZW50aXRpZXMsIGNvbmZpZ1VybCwgc3RhdHMgfSk7XG4gICAgfVxuXG4gICAgc3RhdGljIGFzeW5jIGluaXRXaXRoQ29uZmlnKHBhcmFtczogSU5hbWVJbml0Q29uZmlnIHwgSUVudGl0eUluaXRDb25maWcpIHtcbiAgICAgICAgY29uc3QgX2FybmZ0ID0gbmV3IEFSbmZ0KHBhcmFtcy53aWR0aCwgcGFyYW1zLmhlaWdodCwgcGFyYW1zLmNvbmZpZ1VybCk7XG4gICAgICAgIGlmIChwYXJhbXMuYXV0b1VwZGF0ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBfYXJuZnQuYXV0b1VwZGF0ZSA9IHBhcmFtcy5hdXRvVXBkYXRlO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsZXQgbWFya2VyVXJsczogc3RyaW5nW11bXSA9IFtdO1xuICAgICAgICAgICAgbGV0IG5hbWVzO1xuICAgICAgICAgICAgY29uc3QgbmFtZVBhcmFtcyA9IHBhcmFtcyBhcyBJTmFtZUluaXRDb25maWc7XG4gICAgICAgICAgICBjb25zdCBlbnRpdHlQYXJhbXMgPSBwYXJhbXMgYXMgSUVudGl0eUluaXRDb25maWc7XG4gICAgICAgICAgICBpZiAobmFtZVBhcmFtcy5tYXJrZXJVcmxzICE9IG51bGwgJiYgbmFtZVBhcmFtcy5uYW1lcyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVudGl0eVBhcmFtcy5lbnRpdGllcyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmtlclVybHMgPSBuYW1lUGFyYW1zLm1hcmtlclVybHM7XG4gICAgICAgICAgICAgICAgICAgIG5hbWVzID0gbmFtZVBhcmFtcy5uYW1lcztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbnRpdGllcyA9IG5hbWVzLm1hcChmdW5jdGlvbiAodiwgaywgYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogdlswXSwgbWFya2VyVXJsOiBtYXJrZXJVcmxzW2tdWzBdIH07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZW50aXR5UGFyYW1zLmVudGl0aWVzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVudGl0aWVzID0gZW50aXR5UGFyYW1zLmVudGl0aWVzO1xuICAgICAgICAgICAgICAgIG1hcmtlclVybHMgPSB0aGlzLmVudGl0aWVzLm1hcCgoeCkgPT4gW3gubWFya2VyVXJsXSk7XG4gICAgICAgICAgICAgICAgbmFtZXMgPSB0aGlzLmVudGl0aWVzLm1hcCgoeCkgPT4gW3gubmFtZV0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBcIm1hcmtlclVybHMgb3IgZW50aXRpZXMgY2FuJ3QgYmUgdW5kZWZpbmVkXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgX2FybmZ0Ll9pbml0aWFsaXplKG1hcmtlclVybHMsIG5hbWVzLCBwYXJhbXMuc3RhdHMpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgaWYgKChlcnJvciBhcyB7IGNvZGU6IHN0cmluZyB9KS5jb2RlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVzZWQgaW50ZXJuYWxseSBieSB0aGUgaW5pdCBzdGF0aWMgZnVuY3Rpb24uIEl0IGNyZWF0ZSB0aGUgaHRtbCBDb250YWluZXIsXG4gICAgICogc3RhdHMsIGluaXRpYWxpemUgdGhlIENhbWVyYVJlbmRlcmVyIGZvciB0aGUgdmlkZW8gc3RyZWFtLCAgYW5kIHRoZSBORlRXb3JrZXIuXG4gICAgICogQHBhcmFtIG1hcmtlclVybHMgdGhlIHVybCBBcnJheSBvZiB0aGUgbWFya2Vycy5cbiAgICAgKiBAcGFyYW0gbmFtZXMgdGhlIG5hbWVzIG9mIHRoZSBtYXJrZXJzXG4gICAgICogQHBhcmFtIHN0YXRzIGNob29zZSBpZiB5b3Ugd2FudCB0aGUgc3RhdHMuXG4gICAgICogQHJldHVybnMgdGhlIEFSbmZ0IG9iamVjdC5cbiAgICAgKi9cbiAgICBwcml2YXRlIGFzeW5jIF9pbml0aWFsaXplKFxuICAgICAgICBtYXJrZXJVcmxzOiBBcnJheTxBcnJheTxzdHJpbmc+PixcbiAgICAgICAgbmFtZXM6IEFycmF5PEFycmF5PHN0cmluZz4+LFxuICAgICAgICBzdGF0czogYm9vbGVhblxuICAgICk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBpbml0RXZlbnQgPSBuZXcgRXZlbnQoXCJpbml0QVJuZnRcIik7XG4gICAgICAgIHRoaXMudGFyZ2V0LmRpc3BhdGNoRXZlbnQoaW5pdEV2ZW50KTtcbiAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICBcIkFSbmZ0IGluaXQoKSAlY3N0YXJ0Li4uXCIsXG4gICAgICAgICAgICBcImNvbG9yOiB5ZWxsb3c7IGJhY2tncm91bmQtY29sb3I6IGJsdWU7IGJvcmRlci1yYWRpdXM6IDRweDsgcGFkZGluZzogMnB4XCJcbiAgICAgICAgKTtcblxuICAgICAgICBsZXQgc3RhdHNNYWluOiBhbnksIHN0YXRzV29ya2VyOiBhbnk7XG4gICAgICAgIGdldENvbmZpZyh0aGlzLmNvbmZpZ1VybClcbiAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5hcHBEYXRhID0gZGF0YTtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFBhdGggPSBkYXRhLmFkZFBhdGg7XG5cbiAgICAgICAgICAgICAgICAvLyB2aWV3c1xuICAgICAgICAgICAgICAgIHRoaXMuX3ZpZXdzID0gQ29udGFpbmVyLmNyZWF0ZUNvbnRhaW5lcih0aGlzLmFwcERhdGEpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3ZpZXdzLmxvYWRpbmcgPSBDb250YWluZXIuY3JlYXRlTG9hZGluZyh0aGlzLmFwcERhdGEpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3ZpZXdzLnN0YXRzID0gQ29udGFpbmVyLmNyZWF0ZVN0YXRzKHRoaXMuYXBwRGF0YS5zdGF0cy5jcmVhdGVIdG1sLCB0aGlzLmFwcERhdGEpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHN0YXRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRzTWFpbiA9IG5ldyBTdGF0cygpO1xuICAgICAgICAgICAgICAgICAgICBzdGF0c01haW4uc2hvd1BhbmVsKDApOyAvLyAwOiBmcHMsIDE6IG1zLCAyOiBtYiwgMys6IGN1c3RvbVxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXRzMVwiKS5hcHBlbmRDaGlsZChzdGF0c01haW4uZG9tKTtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHNXb3JrZXIgPSBuZXcgU3RhdHMoKTtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHNXb3JrZXIuc2hvd1BhbmVsKDApOyAvLyAwOiBmcHMsIDE6IG1zLCAyOiBtYiwgMys6IGN1c3RvbVxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXRzMlwiKS5hcHBlbmRDaGlsZChzdGF0c1dvcmtlci5kb20pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBjb250YWluZXJFdmVudCA9IG5ldyBFdmVudChcImNvbnRhaW5lckV2ZW50XCIpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoY29udGFpbmVyRXZlbnQpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVycyA9IFtdO1xuICAgICAgICAgICAgICAgIHRoaXMuY2FtZXJhVmlldyA9IG5ldyBDYW1lcmFWaWV3UmVuZGVyZXIodGhpcy5fdmlld3MudmlkZW8pO1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNhbWVyYVZpZXcuaW5pdGlhbGl6ZSh0aGlzLmFwcERhdGEudmlkZW9TZXR0aW5ncyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlbmRlclVwZGF0ZSA9ICgpID0+IChzdGF0cyA/IHN0YXRzTWFpbi51cGRhdGUoKSA6IG51bGwpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRyYWNrVXBkYXRlID0gKCkgPT4gKHN0YXRzID8gc3RhdHNXb3JrZXIudXBkYXRlKCkgOiBudWxsKTtcbiAgICAgICAgICAgICAgICBtYXJrZXJVcmxzLmZvckVhY2goKG1hcmtlclVybDogQXJyYXk8c3RyaW5nPiwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXJzLnB1c2goXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgTkZUV29ya2VyKG1hcmtlclVybCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQsIHRoaXMudXVpZCwgbmFtZXNbaW5kZXhdWzBdLCB0aGlzLmFkZFBhdGgpXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlcnNbaW5kZXhdLmluaXRpYWxpemUodGhpcy5hcHBEYXRhLmNhbWVyYVBhcmEsIHJlbmRlclVwZGF0ZSwgdHJhY2tVcGRhdGUpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcjogYW55KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJuZnRMb2FkZWQtXCIgKyB0aGlzLnV1aWQsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5mdFdvcmtlcnNOb3RSZWFkeSA9IHRoaXMuY29udHJvbGxlcnMuZmlsdGVyKChuZnRXb3JrZXIpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmZ0V29ya2VyLmlzUmVhZHkoKSA9PT0gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKG5mdFdvcmtlcnNOb3RSZWFkeS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRhcmdldC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudDxvYmplY3Q+KFwiQVJuZnRJc1JlYWR5XCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IF91cGRhdGUgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5pbml0aWFsaXplZCAmJiB0aGlzLmF1dG9VcGRhdGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXJzLmZvckVhY2goKGNvbnRyb2xsZXIpID0+XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIucHJvY2Vzcyh0aGlzLmNhbWVyYVZpZXcuaW1hZ2UsIHRoaXMuY2FtZXJhVmlldy5mcmFtZSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKF91cGRhdGUpO1xuICAgICAgICB9O1xuICAgICAgICBfdXBkYXRlKCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVzZWQgZm9yIGEgY3VzdG9tIGluaXRpYWxpemF0aW9uIG9mIHRoZSBjYW1lcmEgYW5kIG1lZGlhU3RyZWFtLiBJdCBjcmVhdGUgdGhlIGh0bWwgQ29udGFpbmVyLFxuICAgICAqIHN0YXRzLCBpbml0aWFsaXplIHRoZSBDYW1lcmFSZW5kZXJlciBmb3IgdGhlIHZpZGVvIHN0cmVhbSwgIGFuZCB0aGUgTkZUV29ya2VyLiBZb3UgbXVzdCBwcm92aWRlXG4gICAgICogeW91ciBvd24gY2FtZXJhVmlldyBiYXNlZCBvbiB0aGUgSUNhbWVyYVZpZXdSZW5kZXJlciBpbnRlcmZhY2UuXG4gICAgICogQHBhcmFtIG1hcmtlclVybHMgdGhlIHVybCBBcnJheSBvZiB0aGUgbWFya2Vycy5cbiAgICAgKiBAcGFyYW0gbmFtZXMgdGhlIG5hbWVzIG9mIHRoZSBtYXJrZXJzLlxuICAgICAqIEBwYXJhbSBjYW1lcmFWaWV3IHRoZSBvd24gQ2FtZXJhVmlld1JlbmRlcmVyIGNsYXNzIGluc3RhbmNlLlxuICAgICAqIEBwYXJhbSBzdGF0cyBjaG9vc2UgaWYgeW91IHdhbnQgdGhlIHN0YXRzLlxuICAgICAqIEByZXR1cm5zIHRoZSBBUm5mdCBvYmplY3QuXG4gICAgICovXG4gICAgcHVibGljIGFzeW5jIGluaXRpYWxpemVSYXcoXG4gICAgICAgIG1hcmtlclVybHM6IEFycmF5PEFycmF5PHN0cmluZz4+LFxuICAgICAgICBuYW1lczogQXJyYXk8c3RyaW5nPixcbiAgICAgICAgY2FtZXJhVmlldzogSUNhbWVyYVZpZXdSZW5kZXJlcixcbiAgICAgICAgc3RhdHM6IGJvb2xlYW5cbiAgICApOiBQcm9taXNlPHRoaXM+IHtcbiAgICAgICAgY29uc3QgaW5pdEV2ZW50ID0gbmV3IEV2ZW50KFwiaW5pdEFSbmZ0XCIpO1xuICAgICAgICB0aGlzLnRhcmdldC5kaXNwYXRjaEV2ZW50KGluaXRFdmVudCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgXCJBUm5mdCBpbml0KCkgJWNzdGFydC4uLlwiLFxuICAgICAgICAgICAgXCJjb2xvcjogeWVsbG93OyBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOyBib3JkZXItcmFkaXVzOiA0cHg7IHBhZGRpbmc6IDJweFwiXG4gICAgICAgICk7XG5cbiAgICAgICAgbGV0IHN0YXRzTWFpbjogYW55LCBzdGF0c1dvcmtlcjogYW55O1xuICAgICAgICBnZXRDb25maWcodGhpcy5jb25maWdVcmwpXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYXBwRGF0YSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRQYXRoID0gZGF0YS5hZGRQYXRoO1xuXG4gICAgICAgICAgICAgICAgLy8gdmlld3NcbiAgICAgICAgICAgICAgICB0aGlzLl92aWV3cyA9IENvbnRhaW5lci5jcmVhdGVDb250YWluZXIodGhpcy5hcHBEYXRhKTtcbiAgICAgICAgICAgICAgICB0aGlzLl92aWV3cy5sb2FkaW5nID0gQ29udGFpbmVyLmNyZWF0ZUxvYWRpbmcodGhpcy5hcHBEYXRhKTtcbiAgICAgICAgICAgICAgICB0aGlzLl92aWV3cy5zdGF0cyA9IENvbnRhaW5lci5jcmVhdGVTdGF0cyh0aGlzLmFwcERhdGEuc3RhdHMuY3JlYXRlSHRtbCwgdGhpcy5hcHBEYXRhKTtcblxuICAgICAgICAgICAgICAgIGlmIChzdGF0cykge1xuICAgICAgICAgICAgICAgICAgICBzdGF0c01haW4gPSBuZXcgU3RhdHMoKTtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHNNYWluLnNob3dQYW5lbCgwKTsgLy8gMDogZnBzLCAxOiBtcywgMjogbWIsIDMrOiBjdXN0b21cbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdGF0czFcIikuYXBwZW5kQ2hpbGQoc3RhdHNNYWluLmRvbSk7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRzV29ya2VyID0gbmV3IFN0YXRzKCk7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRzV29ya2VyLnNob3dQYW5lbCgwKTsgLy8gMDogZnBzLCAxOiBtcywgMjogbWIsIDMrOiBjdXN0b21cbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdGF0czJcIikuYXBwZW5kQ2hpbGQoc3RhdHNXb3JrZXIuZG9tKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgY29udGFpbmVyRXZlbnQgPSBuZXcgRXZlbnQoXCJjb250YWluZXJFdmVudFwiKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGNvbnRhaW5lckV2ZW50KTtcblxuICAgICAgICAgICAgICAgIHRoaXMuY29udHJvbGxlcnMgPSBbXTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBjYW1lcmFWaWV3LmluaXRpYWxpemUodGhpcy5hcHBEYXRhLnZpZGVvU2V0dGluZ3MpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZW5kZXJVcGRhdGUgPSAoKSA9PiAoc3RhdHMgPyBzdGF0c01haW4udXBkYXRlKCkgOiBudWxsKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFja1VwZGF0ZSA9ICgpID0+IChzdGF0cyA/IHN0YXRzV29ya2VyLnVwZGF0ZSgpIDogbnVsbCk7XG4gICAgICAgICAgICAgICAgbWFya2VyVXJscy5mb3JFYWNoKChtYXJrZXJVcmw6IEFycmF5PHN0cmluZz4sIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVycy5wdXNoKFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IE5GVFdvcmtlcihtYXJrZXJVcmwsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCB0aGlzLnV1aWQsIG5hbWVzW2luZGV4XSwgdGhpcy5hZGRQYXRoKVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXJzW2luZGV4XS5pbml0aWFsaXplKHRoaXMuYXBwRGF0YS5jYW1lcmFQYXJhLCByZW5kZXJVcGRhdGUsIHRyYWNrVXBkYXRlKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3I6IGFueSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwibmZ0TG9hZGVkLVwiICsgdGhpcy51dWlkLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZnRXb3JrZXJzTm90UmVhZHkgPSB0aGlzLmNvbnRyb2xsZXJzLmZpbHRlcigobmZ0V29ya2VyKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5mdFdvcmtlci5pc1JlYWR5KCkgPT09IGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChuZnRXb3JrZXJzTm90UmVhZHkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50YXJnZXQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQ8b2JqZWN0PihcIkFSbmZ0SXNSZWFkeVwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxldCBfdXBkYXRlID0gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuaW5pdGlhbGl6ZWQgJiYgdGhpcy5hdXRvVXBkYXRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250cm9sbGVycy5mb3JFYWNoKChjb250cm9sbGVyKSA9PlxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLnByb2Nlc3MoY2FtZXJhVmlldy5nZXRJbWFnZSgpLCBjYW1lcmFWaWV3LmdldEZyYW1lKCkpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShfdXBkYXRlKTtcbiAgICAgICAgfTtcbiAgICAgICAgX3VwZGF0ZSgpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IGF1dG9VcGRhdGUgdHJ1ZS4gSWYgc2V0LCBkb24ndCBjYWxsIHRoaXMgZnVuY3Rpb24uIFdoZW4gaXQgaXNuJ3QsIHRoZW4geW91IGhhdmUgdG8gbWFpbnRhaW4gaXQgeW91cnNlbGYuXG4gICAgICovXG4gICAgcHVibGljIHVwZGF0ZSgpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLmluaXRpYWxpemVkIHx8IHRoaXMuYXV0b1VwZGF0ZSkgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5jYW1lcmFWaWV3ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuY29udHJvbGxlcnMuZm9yRWFjaCgoY29udHJvbGxlcikgPT4gY29udHJvbGxlci5wcm9jZXNzKHRoaXMuY2FtZXJhVmlldy5pbWFnZSwgdGhpcy5jYW1lcmFWaWV3LmZyYW1lKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldEVudGl0aWVzKCk6IElFbnRpdHlbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudGl0aWVzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIGV2ZW50IHRhcmdldFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRFdmVudFRhcmdldCgpOiBFdmVudFRhcmdldCB7XG4gICAgICAgIHJldHVybiB0aGlzLnRhcmdldDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IHZpZXdzKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZSh0aGlzLl92aWV3cyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGlzcG9zZSB0aGUgVmlkZW8gc3RyZWFtIGFuZCB0aGUgTkZUV29ya2VyLlxuICAgICAqL1xuICAgIHB1YmxpYyBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmRpc3Bvc2VWaWRlb1N0cmVhbSgpO1xuICAgICAgICB0aGlzLmRpc3Bvc2VBbGxORlRzKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGlzcG9zZSBvbmx5IHRoZSBORlRXb3JrZXIuXG4gICAgICovXG4gICAgcHVibGljIGRpc3Bvc2VORlQobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGxldCB0ZXJtaW5hdGVXb3JrZXIgPSBcInRlcm1pbmF0ZVdvcmtlci1cIiArIG5hbWU7XG4gICAgICAgIHZhciBldmVudCA9IG5ldyBFdmVudCh0ZXJtaW5hdGVXb3JrZXIpO1xuICAgICAgICB0aGlzLnRhcmdldC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEaXNwb3NlIHRoZSBBcnJheSBvZiBORlRXb3JrZXJzLlxuICAgICAqL1xuICAgIHB1YmxpYyBkaXNwb3NlQWxsTkZUcygpIHtcbiAgICAgICAgY29uc3QgZW50aXRpZXMgPSBBUm5mdC5nZXRFbnRpdGllcygpO1xuICAgICAgICBlbnRpdGllcy5mb3JFYWNoKChlbnRpdHkpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZGlzcG9zZU5GVChlbnRpdHkubmFtZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERpc3Bvc2Ugb25seSB0aGUgdmlkZW8gc3RyZWFtLlxuICAgICAqL1xuICAgIHB1YmxpYyBkaXNwb3NlVmlkZW9TdHJlYW0oKSB7XG4gICAgICAgIHRoaXMuY2FtZXJhVmlldy5kZXN0cm95KCk7XG4gICAgICAgIHZhciBldmVudCA9IG5ldyBFdmVudChcInN0b3BWaWRlb1N0cmVhbWluZ1wiKTtcbiAgICAgICAgdGhpcy50YXJnZXQuZGlzcGF0Y2hFdmVudChldmVudCk7XG4gICAgfVxufVxuIiwiLypcbiAqICBpbmRleC50c1xuICogIEFSbmZ0XG4gKlxuICogIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEFSbmZ0IC0gV2ViQVJLaXQuXG4gKlxuICogIEFSbmZ0IGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogIEFSbmZ0IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiAgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogIGFsb25nIHdpdGggQVJuZnQuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICogIEFzIGEgc3BlY2lhbCBleGNlcHRpb24sIHRoZSBjb3B5cmlnaHQgaG9sZGVycyBvZiB0aGlzIGxpYnJhcnkgZ2l2ZSB5b3VcbiAqICBwZXJtaXNzaW9uIHRvIGxpbmsgdGhpcyBsaWJyYXJ5IHdpdGggaW5kZXBlbmRlbnQgbW9kdWxlcyB0byBwcm9kdWNlIGFuXG4gKiAgZXhlY3V0YWJsZSwgcmVnYXJkbGVzcyBvZiB0aGUgbGljZW5zZSB0ZXJtcyBvZiB0aGVzZSBpbmRlcGVuZGVudCBtb2R1bGVzLCBhbmQgdG9cbiAqICBjb3B5IGFuZCBkaXN0cmlidXRlIHRoZSByZXN1bHRpbmcgZXhlY3V0YWJsZSB1bmRlciB0ZXJtcyBvZiB5b3VyIGNob2ljZSxcbiAqICBwcm92aWRlZCB0aGF0IHlvdSBhbHNvIG1lZXQsIGZvciBlYWNoIGxpbmtlZCBpbmRlcGVuZGVudCBtb2R1bGUsIHRoZSB0ZXJtcyBhbmRcbiAqICBjb25kaXRpb25zIG9mIHRoZSBsaWNlbnNlIG9mIHRoYXQgbW9kdWxlLiBBbiBpbmRlcGVuZGVudCBtb2R1bGUgaXMgYSBtb2R1bGVcbiAqICB3aGljaCBpcyBuZWl0aGVyIGRlcml2ZWQgZnJvbSBub3IgYmFzZWQgb24gdGhpcyBsaWJyYXJ5LiBJZiB5b3UgbW9kaWZ5IHRoaXNcbiAqICBsaWJyYXJ5LCB5b3UgbWF5IGV4dGVuZCB0aGlzIGV4Y2VwdGlvbiB0byB5b3VyIHZlcnNpb24gb2YgdGhlIGxpYnJhcnksIGJ1dCB5b3VcbiAqICBhcmUgbm90IG9ibGlnYXRlZCB0byBkbyBzby4gSWYgeW91IGRvIG5vdCB3aXNoIHRvIGRvIHNvLCBkZWxldGUgdGhpcyBleGNlcHRpb25cbiAqICBzdGF0ZW1lbnQgZnJvbSB5b3VyIHZlcnNpb24uXG4gKlxuICogIENvcHlyaWdodCAyMDIxIFdlYkFSS2l0LlxuICpcbiAqICBBdXRob3Iocyk6IFdhbHRlciBQZXJkYW4gQGthbHdhbHQgaHR0cHM6Ly9naXRodWIuY29tL2thbHdhbHRcbiAqXG4gKi9cbmltcG9ydCBBUm5mdCBmcm9tIFwiLi9BUm5mdFwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgQVJuZnQsXG59O1xuIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJ0aGlzIiwiZiIsImUiLCJhIiwiYyIsImFwcGVuZENoaWxkIiwiZG9tIiwidSIsImQiLCJjaGlsZHJlbiIsImxlbmd0aCIsInN0eWxlIiwiZGlzcGxheSIsImwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjc3NUZXh0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwiayIsInBlcmZvcm1hbmNlIiwiRGF0ZSIsIm5vdyIsImciLCJyIiwiUGFuZWwiLCJoIiwibWVtb3J5IiwidCIsIlJFVklTSU9OIiwiYWRkUGFuZWwiLCJzaG93UGFuZWwiLCJiZWdpbiIsImVuZCIsInVwZGF0ZSIsInVzZWRKU0hlYXBTaXplIiwianNIZWFwU2l6ZUxpbWl0IiwiZG9tRWxlbWVudCIsInNldE1vZGUiLCJJbmZpbml0eSIsIk1hdGgiLCJyb3VuZCIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJ2IiwibSIsIm4iLCJwIiwicSIsIndpZHRoIiwiaGVpZ2h0IiwiYiIsImdldENvbnRleHQiLCJmb250IiwidGV4dEJhc2VsaW5lIiwiZmlsbFN0eWxlIiwiZmlsbFJlY3QiLCJmaWxsVGV4dCIsImdsb2JhbEFscGhhIiwidyIsIm1pbiIsIm1heCIsImRyYXdJbWFnZSIsImNvbnRlbnQiLCJ3b3JrZXJDb25zdHJ1Y3RvciIsIndvcmtlck9wdGlvbnMiLCJ1cmwiLCJnbG9iYWxTY29wZSIsImJsb2IiLCJCbG9iIiwiQmxvYkJ1aWxkZXIiLCJXZWJLaXRCbG9iQnVpbGRlciIsIk1vekJsb2JCdWlsZGVyIiwiTVNCbG9iQnVpbGRlciIsImFwcGVuZCIsImdldEJsb2IiLCJVUkwiLCJ3ZWJraXRVUkwiLCJvYmplY3RVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJ3b3JrZXIiLCJyZXZva2VPYmplY3RVUkwiLCJjb25jYXQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJFcnJvciIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiQ29udGFpbmVyIiwic3RhdGljIiwiY29uZmlnRGF0YSIsImNvbnRhaW5lciIsImNyZWF0ZSIsImlkIiwiY2FudmFzIiwidmlkZW8iLCJzZXRBdHRyaWJ1dGUiLCJsb2FkaW5nIiwiZ2V0RWxlbWVudEJ5SWQiLCJib2R5IiwiaW5zZXJ0QmVmb3JlIiwiY29udGFpbmVyTmFtZSIsImNhbnZhc05hbWUiLCJzdGF0cyIsImNyZWF0ZUh0bWwiLCJjbGFzc05hbWUiLCJzdGF0czEiLCJzdGF0czFwIiwiaW5uZXJUZXh0Iiwic3RhdHMyIiwic3RhdHMycCIsImxvYWRlciIsImxvZ28iLCJzcmMiLCJhbHQiLCJsb2FkaW5nTWVzc2FnZSIsImZpcnN0Q2hpbGQiLCJDYW1lcmFWaWV3UmVuZGVyZXIiLCJjYW52YXNfcHJvY2VzcyIsImNvbnRleHRfcHJvY2VzcyIsIl92aWRlbyIsIl9mYWNpbmciLCJ2dyIsInZoIiwicHciLCJwaCIsIm94Iiwib3kiLCJ0YXJnZXQiLCJ0YXJnZXRGcmFtZVJhdGUiLCJpbWFnZURhdGFDYWNoZSIsIl9mcmFtZSIsImxhc3RDYWNoZSIsImNvbnN0cnVjdG9yIiwiYWxwaGEiLCJmYWNpbmciLCJmcmFtZSIsImNhbnZhc1Byb2Nlc3MiLCJjb250ZXh0UHJvY2VzcyIsImdldEZyYW1lIiwiZ2V0SW1hZ2UiLCJpbWFnZURhdGEiLCJnZXRJbWFnZURhdGEiLCJkYXRhIiwic2V0IiwiSW1hZ2VEYXRhIiwic2xpY2UiLCJpbWFnZSIsInByZXBhcmVJbWFnZSIsInZpZGVvV2lkdGgiLCJ2aWRlb0hlaWdodCIsInBzY2FsZSIsImZsb29yIiwiYXN5bmMiLCJ2aWRlb1NldHRpbmdzIiwiZmFjaW5nTW9kZSIsIm5hdmlnYXRvciIsIm1lZGlhRGV2aWNlcyIsImdldFVzZXJNZWRpYSIsIlByb21pc2UiLCJyZWplY3QiLCJoaW50IiwiYXVkaW8iLCJlbnVtZXJhdGVEZXZpY2VzIiwiZGV2aWNlcyIsInZpZGVvRGV2aWNlcyIsInZpZGVvRGV2aWNlSW5kZXgiLCJmb3JFYWNoIiwiZGV2aWNlIiwia2luZCIsImRldmljZUlkIiwiZXhhY3QiLCJzdHJlYW0iLCJzcmNPYmplY3QiLCJyZXNvbHZlIiwib25sb2FkZWRtZXRhZGF0YSIsImVycm9yIiwiZGVzdHJveSIsImNvbnNvbGUiLCJsb2ciLCJnZXRUcmFja3MiLCJ0cmFjayIsInN0b3AiLCJjdXJyZW50QVIiLCJyZW1vdmUiLCJnZXRXaW5kb3dTaXplIiwic3NjYWxlIiwidGVzdCIsInVzZXJBZ2VudCIsIm91dGVyV2lkdGgiLCJnZXRDb25maWciLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJzdGF0dXMiLCJqc29uIiwiV29ya2VyX2ZuIiwiTkZUV29ya2VyIiwibWFya2VyVVJMIiwiX3Byb2Nlc3NpbmciLCJ1dWlkIiwibmFtZSIsImFkZFBhdGgiLCJyZWFkeSIsImNhbWVyYVVSTCIsInJlbmRlclVwZGF0ZSIsInRyYWNrVXBkYXRlIiwicG9zdE1lc3NhZ2UiLCJ0eXBlIiwidGVybWluYXRlIiwibG9hZCIsInByb2Nlc3MiLCJpbWFnZWRhdGEiLCJidWZmZXIiLCJzdyIsInNoIiwic2V0V2luZG93U2l6ZUV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJkZXRhaWwiLCJkaXNwYXRjaEV2ZW50IiwiY2FtZXJhX3BhcmEiLCJtYXJrZXIiLCJvbm1lc3NhZ2UiLCJldiIsIm1zZyIsInByb2oiLCJKU09OIiwicGFyc2UiLCJyYXRpb1ciLCJyYXRpb0giLCJwcm9qZWN0aW9uTWF0cml4RXZlbnQiLCJxdWVyeVNlbGVjdG9yIiwic2V0VGltZW91dCIsInBhcmVudEVsZW1lbnQiLCJyZW1vdmVDaGlsZCIsIm5mdEV2ZW50IiwiZHBpIiwiZm91bmQiLCJvbmVycm9yIiwiZXJyIiwicmVuZGVyVSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndvcmxkIiwibWF0cml4R0xfUkgiLCJtYXRyaXhHTHJoRXZlbnQiLCJuZnRUcmFja2luZ0xvc3RFdmVudCIsImlzUmVhZHkiLCJnZXRVdWlkIiwiZ2V0TmFtZSIsImdldE1hcmtlclVybCIsImdldEV2ZW50VGFyZ2V0IiwicmFuZG9tVVVJRCIsImNyeXB0byIsImJpbmQiLCJnZXRSYW5kb21WYWx1ZXMiLCJybmRzOCIsIlVpbnQ4QXJyYXkiLCJybmciLCJieXRlVG9IZXgiLCJpIiwicHVzaCIsInRvU3RyaW5nIiwidW5zYWZlU3RyaW5naWZ5IiwiYXJyIiwib2Zmc2V0IiwidG9Mb3dlckNhc2UiLCJvcHRpb25zIiwiYnVmIiwicm5kcyIsInJhbmRvbSIsInZlcnNpb24iLCJBUm5mdCIsImNhbWVyYVZpZXciLCJhcHBEYXRhIiwiY29uZmlnVXJsIiwibWFya2VyVXJsIiwiY2FtRGF0YSIsImF1dG9VcGRhdGUiLCJjb250cm9sbGVycyIsImluaXRpYWxpemVkIiwiX3ZpZXdzIiwibWFya2VyVXJscyIsIm5hbWVzIiwiaW5pdFdpdGhDb25maWciLCJlbnRpdGllcyIsInBhcmFtcyIsIl9hcm5mdCIsIm5hbWVQYXJhbXMiLCJlbnRpdHlQYXJhbXMiLCJtYXAiLCJ4IiwiX2luaXRpYWxpemUiLCJjb2RlIiwiaW5pdEV2ZW50IiwiRXZlbnQiLCJzdGF0c01haW4iLCJzdGF0c1dvcmtlciIsInRoZW4iLCJjcmVhdGVDb250YWluZXIiLCJjcmVhdGVMb2FkaW5nIiwiY3JlYXRlU3RhdHMiLCJjb250YWluZXJFdmVudCIsImluaXRpYWxpemUiLCJpbmRleCIsImNhbWVyYVBhcmEiLCJjYXRjaCIsImZpbHRlciIsIm5mdFdvcmtlciIsIl91cGRhdGUiLCJjb250cm9sbGVyIiwidmlld3MiLCJmcmVlemUiLCJkaXNwb3NlIiwiZGlzcG9zZVZpZGVvU3RyZWFtIiwiZGlzcG9zZUFsbE5GVHMiLCJkaXNwb3NlTkZUIiwiZXZlbnQiLCJnZXRFbnRpdGllcyIsImVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=
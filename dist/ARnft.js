!function(A,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.ARnft=I():A.ARnft=I()}("undefined"!=typeof self?self:this,(()=>(()=>{var A={571:function(A){var I;A.exports=((I=function(){function A(A){return C.appendChild(A.dom),A}function g(A){for(var I=0;I<C.children.length;I++)C.children[I].style.display=I===A?"block":"none";B=A}var B=0,C=document.createElement("div");C.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",C.addEventListener("click",(function(A){A.preventDefault(),g(++B%C.children.length)}),!1);var Q=(performance||Date).now(),E=Q,i=0,o=A(new I.Panel("FPS","#0ff","#002")),D=A(new I.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var a=A(new I.Panel("MB","#f08","#201"));return g(0),{REVISION:16,dom:C,addPanel:A,showPanel:g,begin:function(){Q=(performance||Date).now()},end:function(){i++;var A=(performance||Date).now();if(D.update(A-Q,200),A>E+1e3&&(o.update(1e3*i/(A-E),100),E=A,i=0,a)){var I=performance.memory;a.update(I.usedJSHeapSize/1048576,I.jsHeapSizeLimit/1048576)}return A},update:function(){Q=this.end()},domElement:C,setMode:g}}).Panel=function(A,I,g){var B=1/0,C=0,Q=Math.round,E=Q(window.devicePixelRatio||1),i=80*E,o=48*E,D=3*E,a=2*E,t=3*E,s=15*E,w=74*E,e=30*E,G=document.createElement("canvas");G.width=i,G.height=o,G.style.cssText="width:80px;height:48px";var h=G.getContext("2d");return h.font="bold "+9*E+"px Helvetica,Arial,sans-serif",h.textBaseline="top",h.fillStyle=g,h.fillRect(0,0,i,o),h.fillStyle=I,h.fillText(A,D,a),h.fillRect(t,s,w,e),h.fillStyle=g,h.globalAlpha=.9,h.fillRect(t,s,w,e),{dom:G,update:function(o,r){B=Math.min(B,o),C=Math.max(C,o),h.fillStyle=g,h.globalAlpha=1,h.fillRect(0,0,i,s),h.fillStyle=I,h.fillText(Q(o)+" "+A+" ("+Q(B)+"-"+Q(C)+")",D,a),h.drawImage(G,t+E,s,w-E,e,t,s,w-E,e),h.fillRect(t+w-E,s,E,e),h.fillStyle=g,h.globalAlpha=.9,h.fillRect(t+w-E,s,E,Q((1-o/r)*e))}}},I)},512:A=>{"use strict";A.exports=function(A,I,g,B){var C=self||window;try{try{var Q;try{Q=new C.Blob([A])}catch(I){(Q=new(C.BlobBuilder||C.WebKitBlobBuilder||C.MozBlobBuilder||C.MSBlobBuilder)).append(A),Q=Q.getBlob()}var E=C.URL||C.webkitURL,i=E.createObjectURL(Q),o=new C[I](i,g);return E.revokeObjectURL(i),o}catch(B){return new C[I]("data:application/javascript,".concat(encodeURIComponent(A)),g)}}catch(A){if(!B)throw Error("Inline worker is not supported");return new C[I](B,g)}}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";g.d(B,{default:()=>n});class A{static createContainer(A){if(A.container.create){const A=document.createElement("div");A.id="app";const I=document.createElement("canvas");I.id="canvas";const g=document.createElement("video");g.id="video",g.setAttribute("autoplay",""),g.setAttribute("muted",""),g.setAttribute("playsinline",""),A.appendChild(g),A.appendChild(I);const B=document.getElementById("loading");return document.body.insertBefore(A,B),{container:A,canvas:I,video:g}}return{container:document.getElementById(A.container.containerName),canvas:document.getElementById(A.container.canvasName),video:document.getElementById("video")}}static createStats(A,I){if(A&&I.stats.createHtml){const A=document.createElement("div");A.id="stats",A.className="ui stats";const I=document.createElement("div");I.id="stats1",I.className="stats-item";const g=document.createElement("p");g.className="stats-item-title",g.innerText="Main",I.appendChild(g),A.appendChild(I);const B=document.createElement("div");B.id="stats2",B.className="stats-item";const C=document.createElement("p");C.className="stats-item-title",C.innerText="Worker",B.appendChild(C),A.appendChild(B);const Q=document.getElementById("loading");return document.body.insertBefore(A,Q),A}}static createLoading(A){if(A.loading.create){const I=document.createElement("div");I.id="loading";const g=document.createElement("img");g.src=A.loading.logo.src,g.alt=A.loading.logo.alt;const B=document.createElement("span");return B.setAttribute("class","loading-text"),B.innerText=A.loading.loadingMessage,I.appendChild(g),I.appendChild(B),document.body.insertBefore(I,document.body.firstChild),I}}}var I=g(571),C=g.n(I);class Q{canvas_process;context_process;_video;_facing;vw;vh;w;h;pw;ph;ox;oy;target;targetFrameRate=60;imageDataCache;_frame;lastCache=0;constructor(A){this.canvas_process=document.createElement("canvas"),this.context_process=this.canvas_process.getContext("2d",{alpha:!1,willReadFrequently:!0}),this._video=A,this.target=window||g.g,this._frame=0}get facing(){return this._facing}get height(){return this.vh}get width(){return this.vw}get video(){return this._video}get frame(){return this._frame}get canvasProcess(){return this.canvas_process}get contextProcess(){return this.context_process}getFrame(){return this._frame}getImage(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}get image(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}prepareImage(){this.vw=this._video.videoWidth,this.vh=this._video.videoHeight;var A=320/Math.max(this.vw,this.vh/3*4);this.w=Math.floor(this.vw*A),this.h=Math.floor(this.vh*A),this.pw=Math.floor(Math.max(this.w,this.h/3*4)),this.ph=Math.floor(Math.max(this.h,this.w/4*3)),this.ox=Math.floor((this.pw-this.w)/2),this.oy=Math.floor((this.ph-this.h)/2),this.canvas_process.width=this.pw,this.canvas_process.height=this.ph,this.context_process.fillStyle="black",this.context_process.fillRect(0,0,this.pw,this.ph)}async initialize(A){if(this._facing=A.facingMode||"environment",null!=A.targetFrameRate&&(this.targetFrameRate=A.targetFrameRate),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return Promise.reject("Sorry, Your device does not support this experience.");try{const I={audio:!1,video:{facingMode:this._facing,width:{min:A.width.min,max:A.width.max}}};if(navigator.mediaDevices.enumerateDevices){const A=await navigator.mediaDevices.enumerateDevices(),g=[];let B=0;A.forEach((function(A){"videoinput"==A.kind&&(g[B++]=A.deviceId)})),g.length>1&&(I.video.deviceId={exact:g[g.length-1]})}const g=await navigator.mediaDevices.getUserMedia(I);return this._video.srcObject=g,this._video=await new Promise((A=>{this._video.onloadedmetadata=()=>A(this._video)})),this.prepareImage(),!0}catch(A){return Promise.reject(A)}}destroy(){const A=this._video;this.target.addEventListener("stopVideoStreaming",(function(){const I=A.srcObject;if(console.log("stop streaming"),null!=I){I.getTracks().forEach((function(A){A.stop()})),A.srcObject=null;let g=document.getElementById("app");null!=g&&g.remove()}}))}}function E(A,I){var g=320/Math.max(A,I/3*4),B=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?window.outerWidth/A:1;let C=A*g,Q=I*g;return[A*B,I*B,Math.max(C,Q/3*4),Math.max(Q,C/4*3),C,Q]}async function i(A){try{const I=await fetch(A);if(!I.ok)throw new Error("HTTP error, status = "+I.status);return I.json()}catch(A){return Promise.reject(A)}}var o=g(512),D=g.n(o);function a(){return D()('(()=>{var A={564:function(A,I,g){var B;"undefined"!=typeof self&&self,B=()=>(()=>{var A={633:(A,I,g)=>{var B=g(738).default;function C(){"use strict";A.exports=C=function(){return g},A.exports.__esModule=!0,A.exports.default=A.exports;var I,g={},Q=Object.prototype,E=Q.hasOwnProperty,i=Object.defineProperty||function(A,I,g){A[I]=g.value},o="function"==typeof Symbol?Symbol:{},D=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function t(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{t({},"")}catch(I){t=function(A,I,g){return A[I]=g}}function w(A,I,g,B){var C=I&&I.prototype instanceof y?I:y,Q=Object.create(C.prototype),E=new d(B||[]);return i(Q,"_invoke",{value:K(A,g,E)}),Q}function G(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}g.wrap=w;var h="suspendedStart",F="suspendedYield",R="executing",r="completed",e={};function y(){}function S(){}function c(){}var N={};t(N,D,(function(){return this}));var n=Object.getPrototypeOf,U=n&&n(n(H([])));U&&U!==Q&&E.call(U,D)&&(N=U);var M=c.prototype=y.prototype=Object.create(N);function k(A){["next","throw","return"].forEach((function(I){t(A,I,(function(A){return this._invoke(I,A)}))}))}function J(A,I){function g(C,Q,i,o){var D=G(A[C],A,Q);if("throw"!==D.type){var a=D.arg,s=a.value;return s&&"object"==B(s)&&E.call(s,"__await")?I.resolve(s.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(s).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;i(this,"_invoke",{value:function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}})}function K(A,g,B){var C=h;return function(Q,E){if(C===R)throw Error("Generator is already running");if(C===r){if("throw"===Q)throw E;return{value:I,done:!0}}for(B.method=Q,B.arg=E;;){var i=B.delegate;if(i){var o=Y(i,B);if(o){if(o===e)continue;return o}}if("next"===B.method)B.sent=B._sent=B.arg;else if("throw"===B.method){if(C===h)throw C=r,B.arg;B.dispatchException(B.arg)}else"return"===B.method&&B.abrupt("return",B.arg);C=R;var D=G(A,g,B);if("normal"===D.type){if(C=B.done?r:F,D.arg===e)continue;return{value:D.arg,done:B.done}}"throw"===D.type&&(C=r,B.method="throw",B.arg=D.arg)}}}function Y(A,g){var B=g.method,C=A.iterator[B];if(C===I)return g.delegate=null,"throw"===B&&A.iterator.return&&(g.method="return",g.arg=I,Y(A,g),"throw"===g.method)||"return"!==B&&(g.method="throw",g.arg=new TypeError("The iterator does not provide a \'"+B+"\' method")),e;var Q=G(C,A.iterator,g.arg);if("throw"===Q.type)return g.method="throw",g.arg=Q.arg,g.delegate=null,e;var E=Q.arg;return E?E.done?(g[A.resultName]=E.value,g.next=A.nextLoc,"return"!==g.method&&(g.method="next",g.arg=I),g.delegate=null,e):E:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,e)}function l(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function L(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function d(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(l,this),this.reset(!0)}function H(A){if(A||""===A){var g=A[D];if(g)return g.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var C=-1,Q=function g(){for(;++C<A.length;)if(E.call(A,C))return g.value=A[C],g.done=!1,g;return g.value=I,g.done=!0,g};return Q.next=Q}}throw new TypeError(B(A)+" is not iterable")}return S.prototype=c,i(M,"constructor",{value:c,configurable:!0}),i(c,"constructor",{value:S,configurable:!0}),S.displayName=t(c,s,"GeneratorFunction"),g.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===S||"GeneratorFunction"===(I.displayName||I.name))},g.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,c):(A.__proto__=c,t(A,s,"GeneratorFunction")),A.prototype=Object.create(M),A},g.awrap=function(A){return{__await:A}},k(J.prototype),t(J.prototype,a,(function(){return this})),g.AsyncIterator=J,g.async=function(A,I,B,C,Q){void 0===Q&&(Q=Promise);var E=new J(w(A,I,B,C),Q);return g.isGeneratorFunction(I)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},k(M),t(M,s,"Generator"),t(M,D,(function(){return this})),t(M,"toString",(function(){return"[object Generator]"})),g.keys=function(A){var I=Object(A),g=[];for(var B in I)g.push(B);return g.reverse(),function A(){for(;g.length;){var B=g.pop();if(B in I)return A.value=B,A.done=!1,A}return A.done=!0,A}},g.values=H,d.prototype={constructor:d,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=I,this.done=!1,this.delegate=null,this.method="next",this.arg=I,this.tryEntries.forEach(L),!A)for(var g in this)"t"===g.charAt(0)&&E.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=I)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var g=this;function B(B,C){return i.type="throw",i.arg=A,g.next=B,C&&(g.method="next",g.arg=I),!!C}for(var C=this.tryEntries.length-1;C>=0;--C){var Q=this.tryEntries[C],i=Q.completion;if("root"===Q.tryLoc)return B("end");if(Q.tryLoc<=this.prev){var o=E.call(Q,"catchLoc"),D=E.call(Q,"finallyLoc");if(o&&D){if(this.prev<Q.catchLoc)return B(Q.catchLoc,!0);if(this.prev<Q.finallyLoc)return B(Q.finallyLoc)}else if(o){if(this.prev<Q.catchLoc)return B(Q.catchLoc,!0)}else{if(!D)throw Error("try statement without catch or finally");if(this.prev<Q.finallyLoc)return B(Q.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&E.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var Q=C?C.completion:{};return Q.type=A,Q.arg=I,C?(this.method="next",this.next=C.finallyLoc,e):this.complete(Q)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),e},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),L(g),e}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;L(g)}return C}}throw Error("illegal catch attempt")},delegateYield:function(A,g,B){return this.delegate={iterator:H(A),resultName:g,nextLoc:B},"next"===this.method&&(this.arg=I),e}},g}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},738:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},756:(A,I,g)=>{var B=g(633)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function B(g){var C=I[g];if(void 0!==C)return C.exports;var Q=I[g]={exports:{}};return A[g](Q,Q.exports,B),Q.exports}B.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return B.d(I,{a:I}),I},B.d=(A,I)=>{for(var g in I)B.o(I,g)&&!B.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},B.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),B.r=A=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})};var C={};return(()=>{"use strict";B.r(C),B.d(C,{ARControllerNFT:()=>fI,ARToolkitNFT:()=>pI});var A={};function I(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function Q(A){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=A.apply(g,B);function i(A){I(E,C,Q,i,o,"next",A)}function o(A){I(E,C,Q,i,o,"throw",A)}i(void 0)}))}}function E(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function i(A){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},i(A)}function o(A){var I=function(A){if("object"!=i(A)||!A)return A;var I=A[Symbol.toPrimitive];if(void 0!==I){var g=I.call(A,"string");if("object"!=i(g))return g;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(A)}(A);return"symbol"==i(I)?I:I+""}function D(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,o(B.key),B)}}function a(A,I,g){return I&&D(A.prototype,I),g&&D(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}function s(A,I,g){return(I=o(I))in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}B.r(A),B.d(A,{hasBrowserEnv:()=>JA,hasStandardBrowserEnv:()=>YA,hasStandardBrowserWebWorkerEnv:()=>lA,navigator:()=>KA,origin:()=>LA});var t,w=B(756),G=B.n(w),h=(t="undefined"!=typeof document?document.currentScript?.src:void 0,function(A={}){var I,g,B,C=A,Q=new Promise(((A,B)=>{I=A,g=B})),E=Object.assign({},C),i="./this.program",o="";"undefined"!=typeof document&&document.currentScript&&(o=document.currentScript.src),t&&(o=t),o=o.startsWith("blob:")?"":o.substr(0,o.replace(/[?#].*/,"").lastIndexOf("/")+1),B=A=>fetch(A,{credentials:"same-origin"}).then((A=>A.ok?A.arrayBuffer():Promise.reject(new Error(A.status+" : "+A.url))));var D=C.print||console.log.bind(console),a=C.printErr||console.error.bind(console);Object.assign(C,E),E=null,C.arguments&&C.arguments,C.thisProgram&&(i=C.thisProgram);var s,w,G,h,F,R,r,e,y,S=C.wasmBinary,c=!1;function N(){var A=s.buffer;C.HEAP8=w=new Int8Array(A),C.HEAP16=h=new Int16Array(A),C.HEAPU8=G=new Uint8Array(A),C.HEAPU16=F=new Uint16Array(A),C.HEAP32=R=new Int32Array(A),C.HEAPU32=r=new Uint32Array(A),C.HEAPF32=e=new Float32Array(A),C.HEAPF64=y=new Float64Array(A)}var n=[],U=[],M=[];function k(A){n.unshift(A)}function J(A){M.unshift(A)}var K=0,Y=null,l=null;function L(A){K++,C.monitorRunDependencies?.(K)}function d(A){if(K--,C.monitorRunDependencies?.(K),0==K&&(null!==Y&&(clearInterval(Y),Y=null),l)){var I=l;l=null,I()}}function H(A){C.onAbort?.(A),a(A="Aborted("+A+")"),c=!0,A+=". Build with -sASSERTIONS for more info.";var I=new WebAssembly.RuntimeError(A);throw g(I),I}var q,p,f,W="data:application/octet-stream;base64,";function u(A){return Promise.resolve().then((()=>function(A){if(A==q&&S)return new Uint8Array(S);var I=function(A){if((A=>A.startsWith(W))(A))return function(A){for(var I=atob(A),g=new Uint8Array(I.length),B=0;B<I.length;++B)g[B]=I.charCodeAt(B);return g}(A.slice(37))}(A);if(I)return I;throw"both async and sync fetching of the wasm failed"}(A)))}var b={61848:(A,I,g)=>{var B=DA(A),C=DA(I),Q=DA(g);console.log(C+B,Q)},61987:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.log(Q+C,E,i)},62165:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.log(Q+C,E,i)},62343:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.log(Q+C,E,i)},62521:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.log(Q+C,E,i)},62699:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g);console.log(Q+C,E,B)},62842:(A,I,g)=>{var B=DA(A),C=DA(I),Q=DA(g);console.error(C+B,Q)},62985:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.error(Q+C,E,i)},63167:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.error(Q+C,E,i)},63349:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.error(Q+C,E,i)},63531:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.error(Q+C,E,i)},63713:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g);console.error(Q+C,E,B)},63860:(A,I,g)=>{var B=DA(A),C=DA(I),Q=DA(g);console.warn(C+B,Q)},64e3:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.warn(Q+C,E,i)},64181:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.warn(Q+C,E,i)},64362:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.warn(Q+C,E,i)},64543:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g),i=DA(B);console.warn(Q+C,E,i)},64724:(A,I,g,B)=>{var C=DA(A),Q=DA(I),E=DA(g);console.warn(Q+C,E,B)}};function m(A){this.name="ExitStatus",this.message=`Program terminated with exit(${A})`,this.status=A}var Z=A=>{A.forEach((A=>A(C)))},V=C.noExitRuntime||!0,O=A=>uI(A),T=()=>bI();class x{constructor(A){this.excPtr=A,this.ptr=A-24}set_type(A){r[this.ptr+4>>2]=A}get_type(){return r[this.ptr+4>>2]}set_destructor(A){r[this.ptr+8>>2]=A}get_destructor(){return r[this.ptr+8>>2]}set_caught(A){A=A?1:0,w[this.ptr+12]=A}get_caught(){return 0!=w[this.ptr+12]}set_rethrown(A){A=A?1:0,w[this.ptr+13]=A}get_rethrown(){return 0!=w[this.ptr+13]}init(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I)}set_adjusted_ptr(A){r[this.ptr+16>>2]=A}get_adjusted_ptr(){return r[this.ptr+16>>2]}}function X(){var A=R[+aA.varargs>>2];return aA.varargs+=4,A}var v=X,j={isAbs:A=>"/"===A.charAt(0),splitPath:A=>/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1),normalizeArray:(A,I)=>{for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:A=>{var I=j.isAbs(A),g="/"===A.substr(-1);return(A=j.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:A=>{var I=j.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:A=>{if("/"===A)return"/";var I=(A=(A=j.normalize(A)).replace(/\\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:(...A)=>j.normalize(A.join("/")),join2:(A,I)=>j.normalize(A+"/"+I)},P=A=>(P=(()=>{if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues)return A=>crypto.getRandomValues(A);H("initRandomDevice")})())(A),z={resolve:(...A)=>{for(var I="",g=!1,B=A.length-1;B>=-1&&!g;B--){var C=B>=0?A[B]:oA.cwd();if("string"!=typeof C)throw new TypeError("Arguments to path.resolve must be strings");if(!C)return"";I=C+"/"+I,g=j.isAbs(C)}return(g?"/":"")+(I=j.normalizeArray(I.split("/").filter((A=>!!A)),!g).join("/"))||"."},relative:(A,I)=>{function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=z.resolve(A).substr(1),I=z.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}},_="undefined"!=typeof TextDecoder?new TextDecoder:void 0,$=(A,I=0,g=NaN)=>{for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&_)return _.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q},AA=[],IA=A=>{for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I},gA=(A,I,g,B)=>{if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C},BA={ttys:[],init(){},shutdown(){},register(A,I){BA.ttys[A]={input:[],output:[],ops:I},oA.registerDevice(A,BA.stream_ops)},stream_ops:{open(A){var I=BA.ttys[A.node.rdev];if(!I)throw new oA.ErrnoError(43);A.tty=I,A.seekable=!1},close(A){A.tty.ops.fsync(A.tty)},fsync(A){A.tty.ops.fsync(A.tty)},read(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new oA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new oA.ErrnoError(29)}if(void 0===i&&0===Q)throw new oA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new oA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new oA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:A=>(()=>{if(!AA.length){var A=null;if("undefined"!=typeof window&&"function"==typeof window.prompt&&null!==(A=window.prompt("Input: "))&&(A+="\\n"),!A)return null;g=IA(I=A)+1,B=new Array(g),C=gA(I,B,0,B.length),B.length=C,AA=B}var I,g,B,C;return AA.shift()})(),put_char(A,I){null===I||10===I?(D($(A.output)),A.output=[]):0!=I&&A.output.push(I)},fsync(A){A.output&&A.output.length>0&&(D($(A.output)),A.output=[])},ioctl_tcgets:A=>({c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}),ioctl_tcsets:(A,I,g)=>0,ioctl_tiocgwinsz:A=>[24,80]},default_tty1_ops:{put_char(A,I){null===I||10===I?(a($(A.output)),A.output=[]):0!=I&&A.output.push(I)},fsync(A){A.output&&A.output.length>0&&(a($(A.output)),A.output=[])}}},CA=A=>{H()},QA={ops_table:null,mount:A=>QA.createNode(null,"/",16895,0),createNode(A,I,g,B){if(oA.isBlkdev(g)||oA.isFIFO(g))throw new oA.ErrnoError(63);QA.ops_table||={dir:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr,lookup:QA.node_ops.lookup,mknod:QA.node_ops.mknod,rename:QA.node_ops.rename,unlink:QA.node_ops.unlink,rmdir:QA.node_ops.rmdir,readdir:QA.node_ops.readdir,symlink:QA.node_ops.symlink},stream:{llseek:QA.stream_ops.llseek}},file:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr},stream:{llseek:QA.stream_ops.llseek,read:QA.stream_ops.read,write:QA.stream_ops.write,allocate:QA.stream_ops.allocate,mmap:QA.stream_ops.mmap,msync:QA.stream_ops.msync}},link:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr,readlink:QA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr},stream:oA.chrdev_stream_ops}};var C=oA.createNode(A,I,g,B);return oA.isDir(C.mode)?(C.node_ops=QA.ops_table.dir.node,C.stream_ops=QA.ops_table.dir.stream,C.contents={}):oA.isFile(C.mode)?(C.node_ops=QA.ops_table.file.node,C.stream_ops=QA.ops_table.file.stream,C.usedBytes=0,C.contents=null):oA.isLink(C.mode)?(C.node_ops=QA.ops_table.link.node,C.stream_ops=QA.ops_table.link.stream):oA.isChrdev(C.mode)&&(C.node_ops=QA.ops_table.chrdev.node,C.stream_ops=QA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:A=>A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0),expandFileStorage(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr(A){var I={};return I.dev=oA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,oA.isDir(A.mode)?I.size=4096:oA.isFile(A.mode)?I.size=A.usedBytes:oA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&QA.resizeFileStorage(A,I.size)},lookup(A,I){throw oA.genericErrors[44]},mknod:(A,I,g,B)=>QA.createNode(A,I,g,B),rename(A,I,g){if(oA.isDir(A.mode)){var B;try{B=oA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new oA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp},unlink(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir(A,I){var g=oA.lookupNode(A,I);for(var B in g.contents)throw new oA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir(A){var I=[".",".."];for(var g of Object.keys(A.contents))I.push(g);return I},symlink(A,I,g){var B=QA.createNode(A,I,41471,0);return B.link=g,B},readlink(A){if(!oA.isLink(A.mode))throw new oA.ErrnoError(28);return A.link}},stream_ops:{read(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write(A,I,g,B,C,Q){if(I.buffer===w.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(QA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&oA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new oA.ErrnoError(28);return B},allocate(A,I,g){QA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap(A,I,g,B,C){if(!oA.isFile(A.node.mode))throw new oA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||!i||i.buffer!==w.buffer){if(E=!0,!(Q=CA()))throw new oA.ErrnoError(48);i&&((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),w.set(i,Q))}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:(A,I,g,B,C)=>(QA.stream_ops.write(A,I,0,B,g,!1),0)}},EA=C.preloadPlugins||[],iA=(A,I)=>{var g=0;return A&&(g|=365),I&&(g|=146),g},oA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:class{constructor(A){this.name="ErrnoError",this.errno=A}},genericErrors:{},filesystems:null,syncFSRequests:0,readFiles:{},FSStream:class{constructor(){this.shared={}}get object(){return this.node}set object(A){this.node=A}get isRead(){return 1!=(2097155&this.flags)}get isWrite(){return!!(2097155&this.flags)}get isAppend(){return 1024&this.flags}get flags(){return this.shared.flags}set flags(A){this.shared.flags=A}get position(){return this.shared.position}set position(A){this.shared.position=A}},FSNode:class{constructor(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=oA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B,this.readMode=365,this.writeMode=146}get read(){return(this.mode&this.readMode)===this.readMode}set read(A){A?this.mode|=this.readMode:this.mode&=~this.readMode}get write(){return(this.mode&this.writeMode)===this.writeMode}set write(A){A?this.mode|=this.writeMode:this.mode&=~this.writeMode}get isFolder(){return oA.isDir(this.mode)}get isDevice(){return oA.isChrdev(this.mode)}},lookupPath(A,I={}){if(!(A=z.resolve(A)))return{path:"",node:null};if((I=Object.assign({follow_mount:!0,recurse_count:0},I)).recurse_count>8)throw new oA.ErrnoError(32);for(var g=A.split("/").filter((A=>!!A)),B=oA.root,C="/",Q=0;Q<g.length;Q++){var E=Q===g.length-1;if(E&&I.parent)break;if(B=oA.lookupNode(B,g[Q]),C=j.join2(C,g[Q]),oA.isMountpoint(B)&&(!E||E&&I.follow_mount)&&(B=B.mounted.root),!E||I.follow)for(var i=0;oA.isLink(B.mode);){var o=oA.readlink(C);if(C=z.resolve(j.dirname(C),o),B=oA.lookupPath(C,{recurse_count:I.recurse_count+1}).node,i++>40)throw new oA.ErrnoError(32)}}return{path:C,node:B}},getPath(A){for(var I;;){if(oA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?`${g}/${I}`:g+I:g}I=I?`${A.name}/${I}`:A.name,A=A.parent}},hashName(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%oA.nameTable.length},hashAddNode(A){var I=oA.hashName(A.parent.id,A.name);A.name_next=oA.nameTable[I],oA.nameTable[I]=A},hashRemoveNode(A){var I=oA.hashName(A.parent.id,A.name);if(oA.nameTable[I]===A)oA.nameTable[I]=A.name_next;else for(var g=oA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode(A,I){var g=oA.mayLookup(A);if(g)throw new oA.ErrnoError(g);for(var B=oA.hashName(A.id,I),C=oA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return oA.lookup(A,I)},createNode(A,I,g,B){var C=new oA.FSNode(A,I,g,B);return oA.hashAddNode(C),C},destroyNode(A){oA.hashRemoveNode(A)},isRoot:A=>A===A.parent,isMountpoint:A=>!!A.mounted,isFile:A=>32768==(61440&A),isDir:A=>16384==(61440&A),isLink:A=>40960==(61440&A),isChrdev:A=>8192==(61440&A),isBlkdev:A=>24576==(61440&A),isFIFO:A=>4096==(61440&A),isSocket:A=>!(49152&~A),flagsToPermissionString(A){var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:(A,I)=>oA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2,mayLookup:A=>oA.isDir(A.mode)?oA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2):54,mayCreate(A,I){try{return oA.lookupNode(A,I),20}catch(A){}return oA.nodePermissions(A,"wx")},mayDelete(A,I,g){var B;try{B=oA.lookupNode(A,I)}catch(A){return A.errno}var C=oA.nodePermissions(A,"wx");if(C)return C;if(g){if(!oA.isDir(B.mode))return 54;if(oA.isRoot(B)||oA.getPath(B)===oA.cwd())return 10}else if(oA.isDir(B.mode))return 31;return 0},mayOpen:(A,I)=>A?oA.isLink(A.mode)?32:oA.isDir(A.mode)&&("r"!==oA.flagsToPermissionString(I)||512&I)?31:oA.nodePermissions(A,oA.flagsToPermissionString(I)):44,MAX_OPEN_FDS:4096,nextfd(){for(var A=0;A<=oA.MAX_OPEN_FDS;A++)if(!oA.streams[A])return A;throw new oA.ErrnoError(33)},getStreamChecked(A){var I=oA.getStream(A);if(!I)throw new oA.ErrnoError(8);return I},getStream:A=>oA.streams[A],createStream:(A,I=-1)=>(A=Object.assign(new oA.FSStream,A),-1==I&&(I=oA.nextfd()),A.fd=I,oA.streams[I]=A,A),closeStream(A){oA.streams[A]=null},dupStream(A,I=-1){var g=oA.createStream(A,I);return g.stream_ops?.dup?.(g),g},chrdev_stream_ops:{open(A){var I=oA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open?.(A)},llseek(){throw new oA.ErrnoError(70)}},major:A=>A>>8,minor:A=>255&A,makedev:(A,I)=>A<<8|I,registerDevice(A,I){oA.devices[A]={stream_ops:I}},getDevice:A=>oA.devices[A],getMounts(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push(...B.mounts)}return I},syncfs(A,I){"function"==typeof A&&(I=A,A=!1),oA.syncFSRequests++,oA.syncFSRequests>1&&a(`warning: ${oA.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var g=oA.getMounts(oA.root.mount),B=0;function C(A){return oA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((I=>{if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount(A,I,g){var B,C="/"===g,Q=!g;if(C&&oA.root)throw new oA.ErrnoError(10);if(!C&&!Q){var E=oA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,oA.isMountpoint(B))throw new oA.ErrnoError(10);if(!oA.isDir(B.mode))throw new oA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?oA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount(A){var I=oA.lookupPath(A,{follow_mount:!1});if(!oA.isMountpoint(I.node))throw new oA.ErrnoError(28);var g=I.node,B=g.mounted,C=oA.getMounts(B);Object.keys(oA.nameTable).forEach((A=>{for(var I=oA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&oA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:(A,I)=>A.node_ops.lookup(A,I),mknod(A,I,g){var B=oA.lookupPath(A,{parent:!0}).node,C=j.basename(A);if(!C||"."===C||".."===C)throw new oA.ErrnoError(28);var Q=oA.mayCreate(B,C);if(Q)throw new oA.ErrnoError(Q);if(!B.node_ops.mknod)throw new oA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:(A,I)=>(I=void 0!==I?I:438,I&=4095,I|=32768,oA.mknod(A,I,0)),mkdir:(A,I)=>(I=void 0!==I?I:511,I&=1023,I|=16384,oA.mknod(A,I,0)),mkdirTree(A,I){for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{oA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:(A,I,g)=>(void 0===g&&(g=I,I=438),I|=8192,oA.mknod(A,I,g)),symlink(A,I){if(!z.resolve(A))throw new oA.ErrnoError(44);var g=oA.lookupPath(I,{parent:!0}).node;if(!g)throw new oA.ErrnoError(44);var B=j.basename(I),C=oA.mayCreate(g,B);if(C)throw new oA.ErrnoError(C);if(!g.node_ops.symlink)throw new oA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename(A,I){var g,B,C=j.dirname(A),Q=j.dirname(I),E=j.basename(A),i=j.basename(I);if(g=oA.lookupPath(A,{parent:!0}).node,B=oA.lookupPath(I,{parent:!0}).node,!g||!B)throw new oA.ErrnoError(44);if(g.mount!==B.mount)throw new oA.ErrnoError(75);var o,D=oA.lookupNode(g,E),a=z.relative(A,Q);if("."!==a.charAt(0))throw new oA.ErrnoError(28);if("."!==(a=z.relative(I,C)).charAt(0))throw new oA.ErrnoError(55);try{o=oA.lookupNode(B,i)}catch(A){}if(D!==o){var s=oA.isDir(D.mode),t=oA.mayDelete(g,E,s);if(t)throw new oA.ErrnoError(t);if(t=o?oA.mayDelete(B,i,s):oA.mayCreate(B,i))throw new oA.ErrnoError(t);if(!g.node_ops.rename)throw new oA.ErrnoError(63);if(oA.isMountpoint(D)||o&&oA.isMountpoint(o))throw new oA.ErrnoError(10);if(B!==g&&(t=oA.nodePermissions(g,"w")))throw new oA.ErrnoError(t);oA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i),D.parent=B}catch(A){throw A}finally{oA.hashAddNode(D)}}},rmdir(A){var I=oA.lookupPath(A,{parent:!0}).node,g=j.basename(A),B=oA.lookupNode(I,g),C=oA.mayDelete(I,g,!0);if(C)throw new oA.ErrnoError(C);if(!I.node_ops.rmdir)throw new oA.ErrnoError(63);if(oA.isMountpoint(B))throw new oA.ErrnoError(10);I.node_ops.rmdir(I,g),oA.destroyNode(B)},readdir(A){var I=oA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new oA.ErrnoError(54);return I.node_ops.readdir(I)},unlink(A){var I=oA.lookupPath(A,{parent:!0}).node;if(!I)throw new oA.ErrnoError(44);var g=j.basename(A),B=oA.lookupNode(I,g),C=oA.mayDelete(I,g,!1);if(C)throw new oA.ErrnoError(C);if(!I.node_ops.unlink)throw new oA.ErrnoError(63);if(oA.isMountpoint(B))throw new oA.ErrnoError(10);I.node_ops.unlink(I,g),oA.destroyNode(B)},readlink(A){var I=oA.lookupPath(A).node;if(!I)throw new oA.ErrnoError(44);if(!I.node_ops.readlink)throw new oA.ErrnoError(28);return z.resolve(oA.getPath(I.parent),I.node_ops.readlink(I))},stat(A,I){var g=oA.lookupPath(A,{follow:!I}).node;if(!g)throw new oA.ErrnoError(44);if(!g.node_ops.getattr)throw new oA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:A=>oA.stat(A,!0),chmod(A,I,g){var B;if(!(B="string"==typeof A?oA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new oA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod(A,I){oA.chmod(A,I,!0)},fchmod(A,I){var g=oA.getStreamChecked(A);oA.chmod(g.node,I)},chown(A,I,g,B){var C;if(!(C="string"==typeof A?oA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new oA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown(A,I,g){oA.chown(A,I,g,!0)},fchown(A,I,g){var B=oA.getStreamChecked(A);oA.chown(B.node,I,g)},truncate(A,I){if(I<0)throw new oA.ErrnoError(28);var g;if(!(g="string"==typeof A?oA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new oA.ErrnoError(63);if(oA.isDir(g.mode))throw new oA.ErrnoError(31);if(!oA.isFile(g.mode))throw new oA.ErrnoError(28);var B=oA.nodePermissions(g,"w");if(B)throw new oA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate(A,I){var g=oA.getStreamChecked(A);if(!(2097155&g.flags))throw new oA.ErrnoError(28);oA.truncate(g.node,I)},utime(A,I,g){var B=oA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open(A,I,g){if(""===A)throw new oA.ErrnoError(44);var B;if(g=64&(I="string"==typeof I?(A=>{var I={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[A];if(void 0===I)throw new Error(`Unknown file open mode: ${A}`);return I})(I):I)?4095&(g=void 0===g?438:g)|32768:0,"object"==typeof A)B=A;else{A=j.normalize(A);try{B=oA.lookupPath(A,{follow:!(131072&I)}).node}catch(A){}}var Q=!1;if(64&I)if(B){if(128&I)throw new oA.ErrnoError(20)}else B=oA.mknod(A,g,0),Q=!0;if(!B)throw new oA.ErrnoError(44);if(oA.isChrdev(B.mode)&&(I&=-513),65536&I&&!oA.isDir(B.mode))throw new oA.ErrnoError(54);if(!Q){var E=oA.mayOpen(B,I);if(E)throw new oA.ErrnoError(E)}512&I&&!Q&&oA.truncate(B,0),I&=-131713;var i=oA.createStream({node:B,path:oA.getPath(B),flags:I,seekable:!0,position:0,stream_ops:B.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!C.logReadFiles||1&I||A in oA.readFiles||(oA.readFiles[A]=1),i},close(A){if(oA.isClosed(A))throw new oA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{oA.closeStream(A.fd)}A.fd=null},isClosed:A=>null===A.fd,llseek(A,I,g){if(oA.isClosed(A))throw new oA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new oA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new oA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read(A,I,g,B,C){if(B<0||C<0)throw new oA.ErrnoError(28);if(oA.isClosed(A))throw new oA.ErrnoError(8);if(1==(2097155&A.flags))throw new oA.ErrnoError(8);if(oA.isDir(A.node.mode))throw new oA.ErrnoError(31);if(!A.stream_ops.read)throw new oA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new oA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write(A,I,g,B,C,Q){if(B<0||C<0)throw new oA.ErrnoError(28);if(oA.isClosed(A))throw new oA.ErrnoError(8);if(!(2097155&A.flags))throw new oA.ErrnoError(8);if(oA.isDir(A.node.mode))throw new oA.ErrnoError(31);if(!A.stream_ops.write)throw new oA.ErrnoError(28);A.seekable&&1024&A.flags&&oA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new oA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate(A,I,g){if(oA.isClosed(A))throw new oA.ErrnoError(8);if(I<0||g<=0)throw new oA.ErrnoError(28);if(!(2097155&A.flags))throw new oA.ErrnoError(8);if(!oA.isFile(A.node.mode)&&!oA.isDir(A.node.mode))throw new oA.ErrnoError(43);if(!A.stream_ops.allocate)throw new oA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap(A,I,g,B,C){if(2&B&&!(2&C)&&2!=(2097155&A.flags))throw new oA.ErrnoError(2);if(1==(2097155&A.flags))throw new oA.ErrnoError(2);if(!A.stream_ops.mmap)throw new oA.ErrnoError(43);if(!I)throw new oA.ErrnoError(28);return A.stream_ops.mmap(A,I,g,B,C)},msync:(A,I,g,B,C)=>A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0,ioctl(A,I,g){if(!A.stream_ops.ioctl)throw new oA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile(A,I={}){if(I.flags=I.flags||0,I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error(`Invalid encoding type "${I.encoding}"`);var g,B=oA.open(A,I.flags),C=oA.stat(A).size,Q=new Uint8Array(C);return oA.read(B,Q,0,C,0),"utf8"===I.encoding?g=$(Q):"binary"===I.encoding&&(g=Q),oA.close(B),g},writeFile(A,I,g={}){g.flags=g.flags||577;var B=oA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(IA(I)+1),Q=gA(I,C,0,C.length);oA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");oA.write(B,I,0,I.byteLength,void 0,g.canOwn)}oA.close(B)},cwd:()=>oA.currentPath,chdir(A){var I=oA.lookupPath(A,{follow:!0});if(null===I.node)throw new oA.ErrnoError(44);if(!oA.isDir(I.node.mode))throw new oA.ErrnoError(54);var g=oA.nodePermissions(I.node,"x");if(g)throw new oA.ErrnoError(g);oA.currentPath=I.path},createDefaultDirectories(){oA.mkdir("/tmp"),oA.mkdir("/home"),oA.mkdir("/home/web_user")},createDefaultDevices(){oA.mkdir("/dev"),oA.registerDevice(oA.makedev(1,3),{read:()=>0,write:(A,I,g,B,C)=>B}),oA.mkdev("/dev/null",oA.makedev(1,3)),BA.register(oA.makedev(5,0),BA.default_tty_ops),BA.register(oA.makedev(6,0),BA.default_tty1_ops),oA.mkdev("/dev/tty",oA.makedev(5,0)),oA.mkdev("/dev/tty1",oA.makedev(6,0));var A=new Uint8Array(1024),I=0,g=()=>(0===I&&(I=P(A).byteLength),A[--I]);oA.createDevice("/dev","random",g),oA.createDevice("/dev","urandom",g),oA.mkdir("/dev/shm"),oA.mkdir("/dev/shm/tmp")},createSpecialDirectories(){oA.mkdir("/proc");var A=oA.mkdir("/proc/self");oA.mkdir("/proc/self/fd"),oA.mount({mount(){var I=oA.createNode(A,"fd",16895,73);return I.node_ops={lookup(A,I){var g=+I,B=oA.getStreamChecked(g),C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>B.path}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams(A,I,g){A?oA.createDevice("/dev","stdin",A):oA.symlink("/dev/tty","/dev/stdin"),I?oA.createDevice("/dev","stdout",null,I):oA.symlink("/dev/tty","/dev/stdout"),g?oA.createDevice("/dev","stderr",null,g):oA.symlink("/dev/tty1","/dev/stderr"),oA.open("/dev/stdin",0),oA.open("/dev/stdout",1),oA.open("/dev/stderr",1)},staticInit(){[44].forEach((A=>{oA.genericErrors[A]=new oA.ErrnoError(A),oA.genericErrors[A].stack="<generic error, no stack>"})),oA.nameTable=new Array(4096),oA.mount(QA,{},"/"),oA.createDefaultDirectories(),oA.createDefaultDevices(),oA.createSpecialDirectories(),oA.filesystems={MEMFS:QA}},init(A,I,g){oA.initialized=!0,A??=C.stdin,I??=C.stdout,g??=C.stderr,oA.createStandardStreams(A,I,g)},quit(){oA.initialized=!1;for(var A=0;A<oA.streams.length;A++){var I=oA.streams[A];I&&oA.close(I)}},findObject(A,I){var g=oA.analyzePath(A,I);return g.exists?g.object:null},analyzePath(A,I){try{A=(B=oA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=oA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=j.basename(A),B=oA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath(A,I,g,B){A="string"==typeof A?A:oA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=j.join2(A,Q);try{oA.mkdir(E)}catch(A){}A=E}}return E},createFile(A,I,g,B,C){var Q=j.join2("string"==typeof A?A:oA.getPath(A),I),E=iA(B,C);return oA.create(Q,E)},createDataFile(A,I,g,B,C,Q){var E=I;A&&(A="string"==typeof A?A:oA.getPath(A),E=I?j.join2(A,I):A);var i=iA(B,C),o=oA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,s=g.length;a<s;++a)D[a]=g.charCodeAt(a);g=D}oA.chmod(o,146|i);var t=oA.open(o,577);oA.write(t,g,0,g.length,0,Q),oA.close(t),oA.chmod(o,i)}},createDevice(A,I,g,B){var C=j.join2("string"==typeof A?A:oA.getPath(A),I),Q=iA(!!g,!!B);oA.createDevice.major??=64;var E=oA.makedev(oA.createDevice.major++,0);return oA.registerDevice(E,{open(A){A.seekable=!1},close(A){B?.buffer?.length&&B(10)},read(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new oA.ErrnoError(29)}if(void 0===o&&0===E)throw new oA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new oA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),oA.mkdev(C,Q,E)},forceLoadFile(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");try{A.contents=(void 0)(A.url),A.usedBytes=A.contents.length}catch(A){throw new oA.ErrnoError(29)}},createLazyFile(A,I,g,B,C){if("undefined"!=typeof XMLHttpRequest)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var Q={isDevice:!1,url:g},E=oA.createFile(A,I,Q,B,C);Q.contents?E.contents=Q.contents:Q.url&&(E.contents=null,E.url=Q.url),Object.defineProperties(E,{usedBytes:{get:function(){return this.contents.length}}});var i={};function o(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(E.stream_ops).forEach((A=>{var I=E.stream_ops[A];i[A]=(...A)=>(oA.forceLoadFile(E),I(...A))})),i.read=(A,I,g,B,C)=>(oA.forceLoadFile(E),o(A,I,g,B,C)),i.mmap=(A,I,g,B,C)=>{oA.forceLoadFile(E);var Q=CA();if(!Q)throw new oA.ErrnoError(48);return o(A,w,Q,I,g),{ptr:Q,allocated:!0}},E.stream_ops=i,E}},DA=(A,I)=>A?$(G,A,I):"",aA={DEFAULT_POLLMASK:5,calculateAt(A,I,g){if(j.isAbs(I))return I;var B;if(B=-100===A?oA.cwd():aA.getStreamFromFD(A).path,0==I.length){if(!g)throw new oA.ErrnoError(44);return B}return j.join2(B,I)},doStat(A,I,g){var B=A(I);R[g>>2]=B.dev,R[g+4>>2]=B.mode,r[g+8>>2]=B.nlink,R[g+12>>2]=B.uid,R[g+16>>2]=B.gid,R[g+20>>2]=B.rdev,f=[B.size>>>0,(p=B.size,+Math.abs(p)>=1?p>0?+Math.floor(p/4294967296)>>>0:~~+Math.ceil((p-+(~~p>>>0))/4294967296)>>>0:0)],R[g+24>>2]=f[0],R[g+28>>2]=f[1],R[g+32>>2]=4096,R[g+36>>2]=B.blocks;var C=B.atime.getTime(),Q=B.mtime.getTime(),E=B.ctime.getTime();return f=[Math.floor(C/1e3)>>>0,(p=Math.floor(C/1e3),+Math.abs(p)>=1?p>0?+Math.floor(p/4294967296)>>>0:~~+Math.ceil((p-+(~~p>>>0))/4294967296)>>>0:0)],R[g+40>>2]=f[0],R[g+44>>2]=f[1],r[g+48>>2]=C%1e3*1e3*1e3,f=[Math.floor(Q/1e3)>>>0,(p=Math.floor(Q/1e3),+Math.abs(p)>=1?p>0?+Math.floor(p/4294967296)>>>0:~~+Math.ceil((p-+(~~p>>>0))/4294967296)>>>0:0)],R[g+56>>2]=f[0],R[g+60>>2]=f[1],r[g+64>>2]=Q%1e3*1e3*1e3,f=[Math.floor(E/1e3)>>>0,(p=Math.floor(E/1e3),+Math.abs(p)>=1?p>0?+Math.floor(p/4294967296)>>>0:~~+Math.ceil((p-+(~~p>>>0))/4294967296)>>>0:0)],R[g+72>>2]=f[0],R[g+76>>2]=f[1],r[g+80>>2]=E%1e3*1e3*1e3,f=[B.ino>>>0,(p=B.ino,+Math.abs(p)>=1?p>0?+Math.floor(p/4294967296)>>>0:~~+Math.ceil((p-+(~~p>>>0))/4294967296)>>>0:0)],R[g+88>>2]=f[0],R[g+92>>2]=f[1],0},doMsync(A,I,g,B,C){if(!oA.isFile(I.node.mode))throw new oA.ErrnoError(43);if(2&B)return 0;var Q=G.slice(A,A+g);oA.msync(I,Q,C,g,B)},getStreamFromFD:A=>oA.getStreamChecked(A),varargs:void 0,getStr:A=>DA(A)},sA={},tA=A=>{for(;A.length;){var I=A.pop();A.pop()(I)}};function wA(A){return this.fromWireType(r[A>>2])}var GA,hA,FA,RA={},rA={},eA={},yA=A=>{throw new GA(A)},SA=(A,I,g)=>{function B(I){var B=g(I);B.length!==A.length&&yA("Mismatched type converter count");for(var C=0;C<A.length;++C)nA(A[C],B[C])}A.forEach((A=>eA[A]=I));var C=new Array(I.length),Q=[],E=0;I.forEach(((A,I)=>{rA.hasOwnProperty(A)?C[I]=rA[A]:(Q.push(A),RA.hasOwnProperty(A)||(RA[A]=[]),RA[A].push((()=>{C[I]=rA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)},cA=A=>{for(var I="",g=A;G[g];)I+=hA[G[g++]];return I},NA=A=>{throw new FA(A)};function nA(A,I,g={}){return function(A,I,g={}){var B=I.name;if(A||NA(`type "${B}" must have a positive integer typeid pointer`),rA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;NA(`Cannot register type \'${B}\' twice`)}if(rA[A]=I,delete eA[A],RA.hasOwnProperty(A)){var C=RA[A];delete RA[A],C.forEach((A=>A()))}}(A,I,g)}var UA=A=>{NA(A.$$.ptrType.registeredClass.name+" instance already deleted")},MA=!1,kA=A=>{},JA=A=>{A.count.value-=1,0===A.count.value&&(A=>{A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)})(A)},KA=(A,I,g)=>{if(I===g)return A;if(void 0===g.baseClass)return null;var B=KA(A,I,g.baseClass);return null===B?null:g.downcast(B)},YA={},lA={},LA=(A,I)=>(I.ptrType&&I.ptr||yA("makeClassHandle requires ptr and ptrType"),!!I.smartPtrType!=!!I.smartPtr&&yA("Both smartPtrType and smartPtr must be specified"),I.count={value:1},dA(Object.create(A,{$$:{value:I,writable:!0}}))),dA=A=>"undefined"==typeof FinalizationRegistry?(dA=A=>A,A):(MA=new FinalizationRegistry((A=>{JA(A.$$)})),dA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};MA.register(A,g,A)}return A},kA=A=>MA.unregister(A),dA(A)),HA=[];function qA(){}var pA=(A,I)=>Object.defineProperty(I,"name",{value:A}),fA=(A,I,g)=>{if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(...B){return A[I].overloadTable.hasOwnProperty(B.length)||NA(`Function \'${g}\' called with an invalid number of arguments (${B.length}) - expects one of (${A[I].overloadTable})!`),A[I].overloadTable[B.length].apply(this,B)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}};function WA(A,I,g,B,C,Q,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=C,this.getActualType=Q,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}var uA=(A,I,g)=>{for(;I!==g;)I.upcast||NA(`Expected null or instance of ${g.name}, got an instance of ${I.name}`),A=I.upcast(A),I=I.baseClass;return A};function bA(A,I){if(null===I)return this.isReference&&NA(`null is not a valid ${this.name}`),0;I.$$||NA(`Cannot pass "${iI(I)}" as a ${this.name}`),I.$$.ptr||NA(`Cannot pass deleted object as a pointer of type ${this.name}`);var g=I.$$.ptrType.registeredClass;return uA(I.$$.ptr,g,this.registeredClass)}function mA(A,I){var g;if(null===I)return this.isReference&&NA(`null is not a valid ${this.name}`),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I&&I.$$||NA(`Cannot pass "${iI(I)}" as a ${this.name}`),I.$$.ptr||NA(`Cannot pass deleted object as a pointer of type ${this.name}`),!this.isConst&&I.$$.ptrType.isConst&&NA(`Cannot convert argument of type ${I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name} to parameter type ${this.name}`);var B=I.$$.ptrType.registeredClass;if(g=uA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&NA("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:NA(`Cannot convert argument of type ${I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name} to parameter type ${this.name}`);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var C=I.clone();g=this.rawShare(g,QI.toHandle((()=>C.delete()))),null!==A&&A.push(this.rawDestructor,g)}break;default:NA("Unsupporting sharing policy")}return g}function ZA(A,I){if(null===I)return this.isReference&&NA(`null is not a valid ${this.name}`),0;I.$$||NA(`Cannot pass "${iI(I)}" as a ${this.name}`),I.$$.ptr||NA(`Cannot pass deleted object as a pointer of type ${this.name}`),I.$$.ptrType.isConst&&NA(`Cannot convert argument of type ${I.$$.ptrType.name} to parameter type ${this.name}`);var g=I.$$.ptrType.registeredClass;return uA(I.$$.ptr,g,this.registeredClass)}function VA(A,I,g,B,C,Q,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=C,this.pointeeType=Q,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,C||void 0!==I.baseClass?this.toWireType=mA:B?(this.toWireType=bA,this.destructorFunction=null):(this.toWireType=ZA,this.destructorFunction=null)}var OA,TA,xA=A=>OA.get(A),XA=(A,I)=>{var g,B,Q=(A=cA(A)).includes("j")?(g=A,B=I,(...A)=>((A,I,g=[])=>A.includes("j")?((A,I,g)=>(A=A.replace(/p/g,"i"),(0,C["dynCall_"+A])(I,...g)))(A,I,g):xA(I)(...g))(g,B,A)):xA(I);return"function"!=typeof Q&&NA(`unknown function pointer with signature ${A}: ${I}`),Q},vA=A=>{var I=fI(A),g=cA(I);return pI(I),g},jA=(A,I)=>{var g=[],B={};throw I.forEach((function A(I){B[I]||rA[I]||(eA[I]?eA[I].forEach(A):(g.push(I),B[I]=!0))})),new TA(`${A}: `+g.map(vA).join([", "]))},PA=(A,I)=>{for(var g=[],B=0;B<A;B++)g.push(r[I+4*B>>2]);return g};function zA(A){for(var I=1;I<A.length;++I)if(null!==A[I]&&void 0===A[I].destructorFunction)return!0;return!1}function _A(A,I){if(!(A instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof A} which is not a function`);var g=pA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}function $A(A,I,g,B,C,Q){var E=I.length;E<2&&NA("argTypes array size mismatch! Must at least get return value and \'this\' types!");for(var i=null!==I[1]&&null!==g,o=zA(I),D="void"!==I[0].name,a=[A,NA,B,C,tA,I[0],I[1]],s=0;s<E-2;++s)a.push(I[s+2]);if(!o)for(s=i?1:2;s<I.length;++s)null!==I[s].destructorFunction&&a.push(I[s].destructorFunction);let[t,w]=function(A,I,g,B){var C=zA(A),Q=A.length-2,E=[],i=["fn"];I&&i.push("thisWired");for(var o=0;o<Q;++o)E.push(`arg${o}`),i.push(`arg${o}Wired`);E=E.join(","),i=i.join(",");var D=`return function (${E}) {\\n`;C&&(D+="var destructors = [];\\n");var a=C?"destructors":"null",s=["humanName","throwBindingError","invoker","fn","runDestructors","retType","classParam"];for(I&&(D+=`var thisWired = classParam[\'toWireType\'](${a}, this);\\n`),o=0;o<Q;++o)D+=`var arg${o}Wired = argType${o}[\'toWireType\'](${a}, arg${o});\\n`,s.push(`argType${o}`);if(D+=(g||B?"var rv = ":"")+`invoker(${i});\\n`,C)D+="runDestructors(destructors);\\n";else for(o=I?1:2;o<A.length;++o){var t=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==A[o].destructorFunction&&(D+=`${t}_dtor(${t});\\n`,s.push(`${t}_dtor`))}return g&&(D+="var ret = retType[\'fromWireType\'](rv);\\nreturn ret;\\n"),[s,D+="}\\n"]}(I,i,D,Q);t.push(w);var G=_A(Function,t)(...a);return pA(A,G)}var AI,II,gI=[],BI=[],CI=A=>{A>9&&0==--BI[A+1]&&(BI[A]=void 0,gI.push(A))},QI={toValue:A=>(A||NA("Cannot use deleted val. handle = "+A),BI[A]),toHandle:A=>{switch(A){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:{const I=gI.pop()||BI.length;return BI[I]=A,BI[I+1]=1,I}}}},EI={name:"emscripten::val",fromWireType:A=>{var I=QI.toValue(A);return CI(A),I},toWireType:(A,I)=>QI.toHandle(I),argPackAdvance:8,readValueFromPointer:wA,destructorFunction:null},iI=A=>{if(null===A)return"null";var I=typeof A;return"object"===I||"array"===I||"function"===I?A.toString():""+A},oI=(A,I)=>{switch(I){case 4:return function(A){return this.fromWireType(e[A>>2])};case 8:return function(A){return this.fromWireType(y[A>>3])};default:throw new TypeError(`invalid float width (${I}): ${A}`)}},DI=(A,I,g)=>{switch(I){case 1:return g?A=>w[A]:A=>G[A];case 2:return g?A=>h[A>>1]:A=>F[A>>1];case 4:return g?A=>R[A>>2]:A=>r[A>>2];default:throw new TypeError(`invalid integer width (${I}): ${A}`)}},aI=Object.assign({optional:!0},EI),sI=(A,I,g)=>gA(A,G,I,g),tI="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0,wI=(A,I)=>{for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&F[B];)++B;if((g=B<<1)-A>32&&tI)return tI.decode(G.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=h[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q},GI=(A,I,g)=>{if(g??=2147483647,g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);h[I>>1]=E,I+=2}return h[I>>1]=0,I-B},hI=A=>2*A.length,FI=(A,I)=>{for(var g=0,B="";!(g>=I/4);){var C=R[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B},RI=(A,I,g)=>{if(g??=2147483647,g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),R[I>>2]=E,(I+=4)+4>C)break}return R[I>>2]=0,I-B},rI=A=>{for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I},eI=(A,I)=>{var g=rA[A];return void 0===g&&NA(`${I} has unknown type ${vA(A)}`),g},yI=(A,I,g)=>{var B=[],C=A.toWireType(B,g);return B.length&&(r[I>>2]=QI.toHandle(B)),C},SI={},cI=A=>{var I=SI[A];return void 0===I?cA(A):I},NI=[],nI=(Reflect.construct,[0,31,60,91,121,152,182,213,244,274,305,335]),UI=[0,31,59,90,120,151,181,212,243,273,304,334],MI=(A,I)=>I+2097152>>>0<4194305-!!A?(A>>>0)+4294967296*I:NaN,kI=[],JI=A=>{var I=(A-s.buffer.byteLength+65535)/65536|0;try{return s.grow(I),N(),1}catch(A){}},KI={},YI=()=>{if(!YI.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:i||"./this.program"};for(var I in KI)void 0===KI[I]?delete A[I]:A[I]=KI[I];var g=[];for(var I in A)g.push(`${I}=${A[I]}`);YI.strings=g}return YI.strings};oA.createPreloadedFile=(A,I,g,C,Q,E,i,o,D,a)=>{var s=I?z.resolve(j.join2(A,I)):A;function t(g){function B(g){a?.(),o||((A,I,g,B,C,Q)=>{oA.createDataFile(A,I,g,B,C,Q)})(A,I,g,C,Q,D),E?.(),d()}((A,I,g,B)=>{"undefined"!=typeof Browser&&Browser.init();var C=!1;return EA.forEach((Q=>{C||Q.canHandle(I)&&(Q.handle(A,I,g,B),C=!0)})),C})(g,s,B,(()=>{i?.(),d()}))||B(g)}L(),"string"==typeof g?((A,I,g)=>{var C=`al ${A}`;B(A).then((A=>{I(new Uint8Array(A)),C&&d()}),(I=>{if(!g)throw`Loading data file "${A}" failed.`;g()})),C&&L()})(g,t,i):t(g)},oA.staticInit(),GA=C.InternalError=class extends Error{constructor(A){super(A),this.name="InternalError"}},(()=>{for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);hA=A})(),FA=C.BindingError=class extends Error{constructor(A){super(A),this.name="BindingError"}},Object.assign(qA.prototype,{isAliasOf(A){if(!(this instanceof qA))return!1;if(!(A instanceof qA))return!1;var I=this.$$.ptrType.registeredClass,g=this.$$.ptr;A.$$=A.$$;for(var B=A.$$.ptrType.registeredClass,C=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)C=B.upcast(C),B=B.baseClass;return I===B&&g===C},clone(){if(this.$$.ptr||UA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=dA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},delete(){this.$$.ptr||UA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&NA("Object already scheduled for deletion"),kA(this),JA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},isDeleted(){return!this.$$.ptr},deleteLater(){return this.$$.ptr||UA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&NA("Object already scheduled for deletion"),HA.push(this),HA.length,this.$$.deleteScheduled=!0,this}}),Object.assign(VA.prototype,{getPointee(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},destructor(A){this.rawDestructor?.(A)},argPackAdvance:8,readValueFromPointer:wA,fromWireType:function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=((A,I)=>(I=((A,I)=>{for(void 0===I&&NA("ptr should not be undefined");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I})(A,I),lA[I]))(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function C(){return this.isSmartPointer?LA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):LA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var Q,E=this.registeredClass.getActualType(I),i=YA[E];if(!i)return C.call(this);Q=this.isConst?i.constPointerType:i.pointerType;var o=KA(I,this.registeredClass,Q.registeredClass);return null===o?C.call(this):this.isSmartPointer?LA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o,smartPtrType:this,smartPtr:A}):LA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o})}}),TA=C.UnboundTypeError=(AI=Error,(II=pA("UnboundTypeError",(function(A){this.name="UnboundTypeError",this.message=A;var I=new Error(A).stack;void 0!==I&&(this.stack=this.toString()+"\\n"+I.replace(/^Error(:[^\\n]*)?\\n/,""))}))).prototype=Object.create(AI.prototype),II.prototype.constructor=II,II.prototype.toString=function(){return void 0===this.message?this.name:`${this.name}: ${this.message}`},II),BI.push(0,1,void 0,1,null,1,!0,1,!1,1),C.count_emval_handles=()=>BI.length/2-5-gI.length;var lI,LI,dI={e:(A,I,g)=>{throw new x(A).init(I,g),A},s:function(A,I,g){aA.varargs=g;try{var B=aA.getStreamFromFD(A);switch(I){case 0:if((C=X())<0)return-28;for(;oA.streams[C];)C++;return oA.dupStream(B,C).fd;case 1:case 2:case 13:case 14:return 0;case 3:return B.flags;case 4:var C=X();return B.flags|=C,0;case 12:return C=v(),h[C+0>>1]=2,0}return-28}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return-A.errno}},L:function(A,I,g){aA.varargs=g;try{var B=aA.getStreamFromFD(A);switch(I){case 21509:case 21510:case 21511:case 21512:case 21524:case 21515:return B.tty?0:-59;case 21505:if(!B.tty)return-59;if(B.tty.ops.ioctl_tcgets){var C=B.tty.ops.ioctl_tcgets(B),Q=v();R[Q>>2]=C.c_iflag||0,R[Q+4>>2]=C.c_oflag||0,R[Q+8>>2]=C.c_cflag||0,R[Q+12>>2]=C.c_lflag||0;for(var E=0;E<32;E++)w[Q+E+17]=C.c_cc[E]||0;return 0}return 0;case 21506:case 21507:case 21508:if(!B.tty)return-59;if(B.tty.ops.ioctl_tcsets){Q=v();var i=R[Q>>2],o=R[Q+4>>2],D=R[Q+8>>2],a=R[Q+12>>2],s=[];for(E=0;E<32;E++)s.push(w[Q+E+17]);return B.tty.ops.ioctl_tcsets(B.tty,I,{c_iflag:i,c_oflag:o,c_cflag:D,c_lflag:a,c_cc:s})}return 0;case 21519:return B.tty?(Q=v(),R[Q>>2]=0,0):-59;case 21520:return B.tty?-28:-59;case 21531:return Q=v(),oA.ioctl(B,I,Q);case 21523:if(!B.tty)return-59;if(B.tty.ops.ioctl_tiocgwinsz){var t=B.tty.ops.ioctl_tiocgwinsz(B.tty);Q=v(),h[Q>>1]=t[0],h[Q+2>>1]=t[1]}return 0;default:return-28}}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return-A.errno}},M:function(A,I,g,B){aA.varargs=B;try{I=aA.getStr(I),I=aA.calculateAt(A,I);var C=B?X():0;return oA.open(I,g,C).fd}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return-A.errno}},N:()=>{H("")},Z:A=>{var I=sA[A];delete sA[A];var g=I.rawConstructor,B=I.rawDestructor,C=I.fields,Q=C.map((A=>A.getterReturnType)).concat(C.map((A=>A.setterArgumentType)));SA([A],Q,(A=>{var Q={};return C.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+C.length],a=I.setter,s=I.setterContext;Q[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];a(s,A,D.toWireType(g,I)),tA(g)}}})),[{name:I.name,fromWireType:A=>{var I={};for(var g in Q)I[g]=Q[g].read(A);return B(A),I},toWireType:(A,I)=>{for(var C in Q)if(!(C in I))throw new TypeError(`Missing field: "${C}"`);var E=g();for(C in Q)Q[C].write(E,I[C]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:wA,destructorFunction:B}]}))},E:(A,I,g,B,C)=>{},P:(A,I,g,B)=>{nA(A,{name:I=cA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?g:B},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(G[A])},destructorFunction:null})},i:(A,I,g,B,Q,E,i,o,D,a,s,t,w)=>{s=cA(s),E=XA(Q,E),o&&=XA(i,o),a&&=XA(D,a),w=XA(t,w);var G=(A=>{var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?`_${A}`:A})(s);((A,I)=>{C.hasOwnProperty(A)?(NA(`Cannot register public name \'${A}\' twice`),fA(C,A,A),C.hasOwnProperty(void 0)&&NA("Cannot register multiple overloads of a function with the same number of arguments (undefined)!"),C[A].overloadTable[void 0]=I):C[A]=I})(G,(function(){jA(`Cannot construct ${s} due to unbound types`,[B])})),SA([A,I,g],B?[B]:[],(I=>{var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:qA.prototype;var i=pA(s,(function(...A){if(Object.getPrototypeOf(this)!==D)throw new FA("Use \'new\' to construct "+s);if(void 0===t.constructor_body)throw new FA(s+" has no accessible constructor");var I=t.constructor_body[A.length];if(void 0===I)throw new FA(`Tried to invoke ctor of ${s} with invalid number of parameters (${A.length}) - expected (${Object.keys(t.constructor_body).toString()}) parameters instead!`);return I.apply(this,A)})),D=Object.create(Q,{constructor:{value:i}});i.prototype=D;var t=new WA(s,i,D,w,g,E,o,a);t.baseClass&&(t.baseClass.__derivedClasses??=[],t.baseClass.__derivedClasses.push(t));var h=new VA(s,t,!0,!1,!1),F=new VA(s+"*",t,!1,!1,!1),R=new VA(s+" const*",t,!1,!0,!1);return YA[A]={pointerType:F,constPointerType:R},((A,I)=>{C.hasOwnProperty(A)||yA("Replacing nonexistent public symbol"),C[A].overloadTable,C[A]=I,C[A].argCount=void 0})(G,i),[h,F,R]}))},h:(A,I,g,B,C,Q)=>{var E=PA(I,g);C=XA(B,C),SA([],[A],(A=>{var g=`constructor ${(A=A[0]).name}`;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new FA(`Cannot register multiple constructors with identical number of parameters (${I-1}) for class \'${A.name}\'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return A.registeredClass.constructor_body[I-1]=()=>{jA(`Cannot construct ${A.name} due to unbound types`,E)},SA([],E,(B=>(B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=$A(g,B,null,C,Q),[]))),[]}))},a:(A,I,g,B,C,Q,E,i,o,D)=>{var a=PA(g,B);I=(A=>{const I=(A=A.trim()).indexOf("(");return-1!==I?A.substr(0,I):A})(I=cA(I)),Q=XA(C,Q),SA([],[A],(A=>{var B=`${(A=A[0]).name}.${I}`;function C(){jA(`Cannot call ${B} due to unbound types`,a)}I.startsWith("@@")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,s=D[I];return void 0===s||void 0===s.overloadTable&&s.className!==A.name&&s.argCount===g-2?(C.argCount=g-2,C.className=A.name,D[I]=C):(fA(D,I,B),D[I].overloadTable[g-2]=C),SA([],a,(C=>{var i=$A(B,C,A,Q,E,o);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},x:(A,I,g)=>{A=cA(A),SA([],[I],(I=>(I=I[0],C[A]=I.fromWireType(g),[])))},O:A=>nA(A,EI),v:(A,I,g)=>{nA(A,{name:I=cA(I),fromWireType:A=>A,toWireType:(A,I)=>I,argPackAdvance:8,readValueFromPointer:oI(I,g),destructorFunction:null})},d:(A,I,g,B,C)=>{I=cA(I),-1===C&&(C=4294967295);var Q=A=>A;if(0===B){var E=32-8*g;Q=A=>A<<E>>>E}var i=I.includes("unsigned");nA(A,{name:I,fromWireType:Q,toWireType:i?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:DI(I,g,0!==B),destructorFunction:null})},b:(A,I,g)=>{var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=r[A>>2],g=r[A+4>>2];return new B(w.buffer,g,I)}nA(A,{name:g=cA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},n:(A,I)=>{nA(A,aI)},u:(A,I)=>{var g="std::string"===(I=cA(I));nA(A,{name:I,fromWireType(A){var I,B=r[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==G[i]){var o=DA(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(G[C+E]);I=D.join("")}return pI(A),I},toWireType(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||NA("Cannot pass non-string to std::string"),B=g&&C?IA(I):I.length;var Q=qI(4+B+1),E=Q+4;if(r[Q>>2]=B,g&&C)sI(I,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(pI(E),NA("String has UTF-16 code units that do not fit in 8 bits")),G[E+i]=o}else for(i=0;i<B;++i)G[E+i]=I[i];return null!==A&&A.push(pI,Q),Q},argPackAdvance:8,readValueFromPointer:wA,destructorFunction(A){pI(A)}})},k:(A,I,g)=>{var B,C,Q,E;g=cA(g),2===I?(B=wI,C=GI,E=hI,Q=A=>F[A>>1]):4===I&&(B=FI,C=RI,E=rI,Q=A=>r[A>>2]),nA(A,{name:g,fromWireType:A=>{for(var g,C=r[A>>2],E=A+4,i=0;i<=C;++i){var o=A+4+i*I;if(i==C||0==Q(o)){var D=B(E,o-E);void 0===g?g=D:(g+=String.fromCharCode(0),g+=D),E=o+I}}return pI(A),g},toWireType:(A,B)=>{"string"!=typeof B&&NA(`Cannot pass non-string to C++ string type ${g}`);var Q=E(B),i=qI(4+Q+I);return r[i>>2]=Q/I,C(B,i+4,Q+I),null!==A&&A.push(pI,i),i},argPackAdvance:8,readValueFromPointer:wA,destructorFunction(A){pI(A)}})},Y:(A,I,g,B,C,Q)=>{sA[A]={name:cA(I),rawConstructor:XA(g,B),rawDestructor:XA(C,Q),fields:[]}},W:(A,I,g,B,C,Q,E,i,o,D)=>{sA[A].fields.push({fieldName:cA(I),getterReturnType:g,getter:XA(B,C),getterContext:Q,setterArgumentType:E,setter:XA(i,o),setterContext:D})},Q:(A,I)=>{nA(A,{isVoid:!0,name:I=cA(I),argPackAdvance:0,fromWireType:()=>{},toWireType:(A,I)=>{}})},F:()=>{throw 1/0},U:(A,I,g)=>(A=QI.toValue(A),I=eI(I,"emval::as"),yI(I,g,A)),m:(A,I,g,B,C)=>(A=NI[A])(I=QI.toValue(I),I[g=cI(g)],B,C),_:CI,l:(A,I,g)=>{var B=((A,I)=>{for(var g=new Array(A),B=0;B<A;++B)g[B]=eI(r[I+4*B>>2],"parameter "+B);return g})(A,I),C=B.shift();A--;var Q="return function (obj, func, destructorsRef, args) {\\n",E=0,i=[];0===g&&i.push("obj");for(var o=["retType"],D=[C],a=0;a<A;++a)i.push("arg"+a),o.push("argType"+a),D.push(B[a]),Q+=`  var arg${a} = argType${a}.readValueFromPointer(args${E?"+"+E:""});\\n`,E+=B[a].argPackAdvance;Q+=`  var rv = ${1===g?"new func":"func.call"}(${i.join(", ")});\\n`,C.isVoid||(o.push("emval_returnValue"),D.push(yI),Q+="  return emval_returnValue(retType, destructorsRef, rv);\\n"),Q+="};\\n",o.push(Q);var s,t,w=_A(Function,o)(...D),G=`methodCaller<(${B.map((A=>A.name)).join(", ")}) => ${C.name}>`;return s=pA(G,w),t=NI.length,NI.push(s),t},V:(A,I)=>(A=QI.toValue(A),I=QI.toValue(I),QI.toHandle(A[I])),R:A=>{A>9&&(BI[A+1]+=1)},$:()=>QI.toHandle([]),T:A=>QI.toHandle(cI(A)),aa:()=>QI.toHandle({}),S:A=>{var I=QI.toValue(A);tA(I),CI(A)},o:(A,I,g)=>{A=QI.toValue(A),I=QI.toValue(I),g=QI.toValue(g),A[I]=g},f:(A,I)=>{var g=(A=eI(A,"_emval_take_value")).readValueFromPointer(I);return QI.toHandle(g)},C:function(A,I,g){var B=MI(A,I),C=new Date(1e3*B);R[g>>2]=C.getSeconds(),R[g+4>>2]=C.getMinutes(),R[g+8>>2]=C.getHours(),R[g+12>>2]=C.getDate(),R[g+16>>2]=C.getMonth(),R[g+20>>2]=C.getFullYear()-1900,R[g+24>>2]=C.getDay();var Q=0|(A=>{var I;return((I=A.getFullYear())%4!=0||I%100==0&&I%400!=0?UI:nI)[A.getMonth()]+A.getDate()-1})(C);R[g+28>>2]=Q,R[g+36>>2]=-60*C.getTimezoneOffset();var E=new Date(C.getFullYear(),0,1),i=new Date(C.getFullYear(),6,1).getTimezoneOffset(),o=E.getTimezoneOffset(),D=0|(i!=o&&C.getTimezoneOffset()==Math.min(o,i));R[g+32>>2]=D},H:(A,I,g,B)=>{var C=(new Date).getFullYear(),Q=new Date(C,0,1),E=new Date(C,6,1),i=Q.getTimezoneOffset(),o=E.getTimezoneOffset(),D=Math.max(i,o);r[A>>2]=60*D,R[I>>2]=Number(i!=o);var a=A=>{var I=A>=0?"-":"+",g=Math.abs(A);return`UTC${I}${String(Math.floor(g/60)).padStart(2,"0")}${String(g%60).padStart(2,"0")}`},s=a(i),t=a(o);o<i?(sI(s,g,17),sI(t,B,17)):(sI(s,B,17),sI(t,g,17))},p:(A,I,g)=>((A,I,g)=>{var B=((A,I)=>{var g;for(kI.length=0;g=G[A++];){var B=105!=g;I+=(B&=112!=g)&&I%8?4:0,kI.push(112==g?r[I>>2]:105==g?R[I>>2]:y[I>>3]),I+=B?8:4}return kI})(I,g);return b[A](...B)})(A,I,g),ba:A=>{console.error(DA(A))},X:A=>{console.warn(DA(A))},t:()=>Date.now(),G:A=>{var I,g=G.length,B=2147483648;if((A>>>=0)>B)return!1;for(var C=1;C<=4;C*=2){var Q=g*(1+.2/C);Q=Math.min(Q,A+100663296);var E=Math.min(B,(I=Math.max(A,Q),65536*Math.ceil(I/65536)));if(JI(E))return!0}return!1},I:(A,I)=>{var g=0;return YI().forEach(((B,C)=>{var Q=I+g;r[A+4*C>>2]=Q,((A,I)=>{for(var g=0;g<A.length;++g)w[I++]=A.charCodeAt(g);w[I]=0})(B,Q),g+=B.length+1})),0},J:(A,I)=>{var g=YI();r[A>>2]=g.length;var B=0;return g.forEach((A=>B+=A.length+1)),r[I>>2]=B,0},c:(A,I)=>{var g;g=A,V||(C.onExit?.(g),c=!0),((A,I)=>{throw I})(0,new m(g))},q:function(A){try{var I=aA.getStreamFromFD(A);return oA.close(I),0}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return A.errno}},K:function(A,I,g,B){try{var C=((A,I,g,B)=>{for(var C=0,Q=0;Q<g;Q++){var E=r[I>>2],i=r[I+4>>2];I+=8;var o=oA.read(A,w,E,i,B);if(o<0)return-1;if(C+=o,o<i)break;void 0!==B&&(B+=o)}return C})(aA.getStreamFromFD(A),I,g);return r[B>>2]=C,0}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return A.errno}},D:function(A,I,g,B,C){var Q=MI(I,g);try{if(isNaN(Q))return 61;var E=aA.getStreamFromFD(A);return oA.llseek(E,Q,B),f=[E.position>>>0,(p=E.position,+Math.abs(p)>=1?p>0?+Math.floor(p/4294967296)>>>0:~~+Math.ceil((p-+(~~p>>>0))/4294967296)>>>0:0)],R[C>>2]=f[0],R[C+4>>2]=f[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return A.errno}},r:function(A,I,g,B){try{var C=((A,I,g,B)=>{for(var C=0,Q=0;Q<g;Q++){var E=r[I>>2],i=r[I+4>>2];I+=8;var o=oA.write(A,w,E,i,B);if(o<0)return-1;if(C+=o,o<i)break;void 0!==B&&(B+=o)}return C})(aA.getStreamFromFD(A),I,g);return r[B>>2]=C,0}catch(A){if(void 0===oA||"ErrnoError"!==A.name)throw A;return A.errno}},w:function(A,I){var g=T();try{return xA(A)(I)}catch(A){if(O(g),A!==A+0)throw A;WI(1,0)}},z:function(A,I,g){var B=T();try{return xA(A)(I,g)}catch(A){if(O(B),A!==A+0)throw A;WI(1,0)}},y:function(A,I,g,B){var C=T();try{return xA(A)(I,g,B)}catch(A){if(O(C),A!==A+0)throw A;WI(1,0)}},g:function(A,I){var g=T();try{xA(A)(I)}catch(A){if(O(g),A!==A+0)throw A;WI(1,0)}},A:function(A,I,g){var B=T();try{xA(A)(I,g)}catch(A){if(O(B),A!==A+0)throw A;WI(1,0)}},B:function(A,I,g,B){var C=T();try{xA(A)(I,g,B)}catch(A){if(O(C),A!==A+0)throw A;WI(1,0)}},j:function(A,I,g,B,C){var Q=T();try{xA(A)(I,g,B,C)}catch(A){if(O(Q),A!==A+0)throw A;WI(1,0)}}},HI=function(){var A,I,B,Q={a:dI};function E(A,I){var g;return HI=A.exports,s=HI.ca,N(),OA=HI.ga,g=HI.da,U.unshift(g),d(),HI}if(L(),C.instantiateWasm)try{return C.instantiateWasm(Q,E)}catch(A){a(`Module.instantiateWasm callback failed with error: ${A}`),g(A)}return q??="data:application/octet-stream;base64,",(A=q,I=Q,B=function(A){E(A.instance)},function(A,I,g){return u(A).then((A=>WebAssembly.instantiate(A,I))).then(g,(A=>{a(`failed to asynchronously prepare wasm: ${A}`),H(A)}))}(A,I,B)).catch(g),{}}(),qI=A=>(qI=HI.ea)(A),pI=A=>(pI=HI.fa)(A),fI=A=>(fI=HI.ha)(A),WI=(A,I)=>(WI=HI.ia)(A,I),uI=A=>(uI=HI.ja)(A),bI=()=>(bI=HI.ka)();function mI(){var A;function g(){var A;lI||(lI=1,C.calledRun=1,c||(C.noFSInit||oA.initialized||oA.init(),oA.ignorePermissions=!1,BA.init(),Z(U),I(C),C.onRuntimeInitialized?.(),(A=C.postRun)&&("function"==typeof A&&(A=[A]),A.forEach(J)),Z(M)))}K>0||!LI&&(LI=1,(A=C.preRun)&&("function"==typeof A&&(A=[A]),A.forEach(k)),Z(n),K>0)||(C.setStatus?(C.setStatus("Running..."),setTimeout((()=>{setTimeout((()=>C.setStatus("")),1),g()}),1)):g())}if(C.dynCall_jiji=(A,I,g,B,Q)=>(C.dynCall_jiji=HI.la)(A,I,g,B,Q),C.dynCall_viijii=(A,I,g,B,Q,E,i)=>(C.dynCall_viijii=HI.ma)(A,I,g,B,Q,E,i),C.dynCall_iiiiij=(A,I,g,B,Q,E,i)=>(C.dynCall_iiiiij=HI.na)(A,I,g,B,Q,E,i),C.dynCall_iiiiijj=(A,I,g,B,Q,E,i,o,D)=>(C.dynCall_iiiiijj=HI.oa)(A,I,g,B,Q,E,i,o,D),C.dynCall_iiiiiijj=(A,I,g,B,Q,E,i,o,D,a)=>(C.dynCall_iiiiiijj=HI.pa)(A,I,g,B,Q,E,i,o,D,a),C.FS=oA,l=function A(){lI||mI(),lI||(l=A)},C.preInit)for("function"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return mI(),Q});const F=h;function R(){return r.apply(this,arguments)}function r(){return(r=Q(G().mark((function A(){return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,F();case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A)})))).apply(this,arguments)}function e(A,I){return function(){return A.apply(I,arguments)}}const{toString:y}=Object.prototype,{getPrototypeOf:S}=Object,c=(N=Object.create(null),A=>{const I=y.call(A);return N[I]||(N[I]=I.slice(8,-1).toLowerCase())});var N;const n=A=>(A=A.toLowerCase(),I=>c(I)===A),U=A=>I=>typeof I===A,{isArray:M}=Array,k=U("undefined"),J=n("ArrayBuffer"),K=U("string"),Y=U("function"),l=U("number"),L=A=>null!==A&&"object"==typeof A,d=A=>{if("object"!==c(A))return!1;const I=S(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},H=n("Date"),q=n("File"),p=n("Blob"),f=n("FileList"),W=n("URLSearchParams"),[u,b,m,Z]=["ReadableStream","Request","Response","Headers"].map(n);function V(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),M(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}function O(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}const T="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:g.g,x=A=>!k(A)&&A!==T,X=(v="undefined"!=typeof Uint8Array&&S(Uint8Array),A=>v&&A instanceof v);var v;const j=n("HTMLFormElement"),P=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),z=n("RegExp"),_=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};V(g,((g,C)=>{let Q;!1!==(Q=I(g,C,A))&&(B[C]=Q||g)})),Object.defineProperties(A,B)},$="abcdefghijklmnopqrstuvwxyz",AA="0123456789",IA={DIGIT:AA,ALPHA:$,ALPHA_DIGIT:$+$.toUpperCase()+AA},gA=n("AsyncFunction"),BA=(CA="function"==typeof setImmediate,QA=Y(T.postMessage),CA?setImmediate:QA?(EA=`axios@${Math.random()}`,iA=[],T.addEventListener("message",(({source:A,data:I})=>{A===T&&I===EA&&iA.length&&iA.shift()()}),!1),A=>{iA.push(A),T.postMessage(EA,"*")}):A=>setTimeout(A));var CA,QA,EA,iA;const oA="undefined"!=typeof queueMicrotask?queueMicrotask.bind(T):"undefined"!=typeof process&&process.nextTick||BA,DA={isArray:M,isArrayBuffer:J,isBuffer:function(A){return null!==A&&!k(A)&&null!==A.constructor&&!k(A.constructor)&&Y(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{let I;return A&&("function"==typeof FormData&&A instanceof FormData||Y(A.append)&&("formdata"===(I=c(A))||"object"===I&&Y(A.toString)&&"[object FormData]"===A.toString()))},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&J(A.buffer),I},isString:K,isNumber:l,isBoolean:A=>!0===A||!1===A,isObject:L,isPlainObject:d,isReadableStream:u,isRequest:b,isResponse:m,isHeaders:Z,isUndefined:k,isDate:H,isFile:q,isBlob:p,isRegExp:z,isFunction:Y,isStream:A=>L(A)&&Y(A.pipe),isURLSearchParams:W,isTypedArray:X,isFileList:f,forEach:V,merge:function A(){const{caseless:I}=x(this)&&this||{},g={},B=(B,C)=>{const Q=I&&O(g,C)||C;d(g[Q])&&d(B)?g[Q]=A(g[Q],B):d(B)?g[Q]=A({},B):M(B)?g[Q]=B.slice():g[Q]=B};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&V(arguments[A],B);return g},extend:(A,I,g,{allOwnKeys:B}={})=>(V(I,((I,B)=>{g&&Y(I)?A[B]=e(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&S(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:c,kindOfTest:n,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(M(A))return A;let I=A.length;if(!l(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:j,hasOwnProperty:P,hasOwnProp:P,reduceDescriptors:_,freezeMethods:A=>{_(A,((I,g)=>{if(Y(A)&&-1!==["arguments","caller","callee"].indexOf(g))return!1;const B=A[g];Y(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not rewrite read-only method \'"+g+"\'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return M(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>null!=A&&Number.isFinite(A=+A)?A:I,findKey:O,global:T,isContextDefined:x,ALPHABET:IA,generateString:(A=16,I=IA.ALPHA_DIGIT)=>{let g="";const{length:B}=I;for(;A--;)g+=I[Math.random()*B|0];return g},isSpecCompliantForm:function(A){return!!(A&&Y(A.append)&&"FormData"===A[Symbol.toStringTag]&&A[Symbol.iterator])},toJSONObject:A=>{const I=new Array(10),g=(A,B)=>{if(L(A)){if(I.indexOf(A)>=0)return;if(!("toJSON"in A)){I[B]=A;const C=M(A)?[]:{};return V(A,((A,I)=>{const Q=g(A,B+1);!k(Q)&&(C[I]=Q)})),I[B]=void 0,C}}return A};return g(A,0)},isAsyncFn:gA,isThenable:A=>A&&(L(A)||Y(A))&&Y(A.then)&&Y(A.catch),setImmediate:BA,asap:oA};function aA(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C,this.status=C.status?C.status:null)}DA.inherits(aA,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:DA.toJSONObject(this.config),code:this.code,status:this.status}}});const sA=aA.prototype,tA={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{tA[A]={value:A}})),Object.defineProperties(aA,tA),Object.defineProperty(sA,"isAxiosError",{value:!0}),aA.from=(A,I,g,B,C,Q)=>{const E=Object.create(sA);return DA.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),aA.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const wA=aA;function GA(A){return DA.isPlainObject(A)||DA.isArray(A)}function hA(A){return DA.endsWith(A,"[]")?A.slice(0,-2):A}function FA(A,I,g){return A?A.concat(I).map((function(A,I){return A=hA(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const RA=DA.toFlatObject(DA,{},null,(function(A){return/^is[A-Z]/.test(A)})),rA=function(A,I,g){if(!DA.isObject(A))throw new TypeError("target must be an object");I=I||new FormData;const B=(g=DA.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!DA.isUndefined(I[A])}))).metaTokens,C=g.visitor||D,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&DA.isSpecCompliantForm(I);if(!DA.isFunction(C))throw new TypeError("visitor must be a function");function o(A){if(null===A)return"";if(DA.isDate(A))return A.toISOString();if(!i&&DA.isBlob(A))throw new wA("Blob is not supported. Use a Buffer instead.");return DA.isArrayBuffer(A)||DA.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function D(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(DA.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(DA.isArray(A)&&function(A){return DA.isArray(A)&&!A.some(GA)}(A)||(DA.isFileList(A)||DA.endsWith(g,"[]"))&&(i=DA.toArray(A)))return g=hA(g),i.forEach((function(A,B){!DA.isUndefined(A)&&null!==A&&I.append(!0===E?FA([g],B,Q):null===E?g:g+"[]",o(A))})),!1;return!!GA(A)||(I.append(FA(C,g,Q),o(A)),!1)}const a=[],s=Object.assign(RA,{defaultVisitor:D,convertValue:o,isVisitable:GA});if(!DA.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!DA.isUndefined(g)){if(-1!==a.indexOf(g))throw Error("Circular reference detected in "+B.join("."));a.push(g),DA.forEach(g,(function(g,Q){!0===(!(DA.isUndefined(g)||null===g)&&C.call(I,g,DA.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),a.pop()}}(A),I};function eA(A){const I={"!":"%21","\'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%20|%00/g,(function(A){return I[A]}))}function yA(A,I){this._pairs=[],A&&rA(A,this,I)}const SA=yA.prototype;SA.append=function(A,I){this._pairs.push([A,I])},SA.toString=function(A){const I=A?function(I){return A.call(this,I,eA)}:eA;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const cA=yA;function NA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function nA(A,I,g){if(!I)return A;const B=g&&g.encode||NA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):DA.isURLSearchParams(I)?I.toString():new cA(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const UA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){DA.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},MA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},kA={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:cA,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},protocols:["http","https","file","blob","url","data"]},JA="undefined"!=typeof window&&"undefined"!=typeof document,KA="object"==typeof navigator&&navigator||void 0,YA=JA&&(!KA||["ReactNative","NativeScript","NS"].indexOf(KA.product)<0),lA="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,LA=JA&&window.location.href||"http://localhost",dA={...A,...kA},HA=function(A){function I(A,g,B,C){let Q=A[C++];if("__proto__"===Q)return!0;const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&DA.isArray(B)?B.length:Q,i?(DA.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&DA.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&DA.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(DA.isFormData(A)&&DA.isFunction(A.entries)){const g={};return DA.forEachEntry(A,((A,B)=>{I(function(A){return DA.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},qA={transitional:MA,adapter:["xhr","http","fetch"],transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=DA.isObject(A);if(C&&DA.isHTMLForm(A)&&(A=new FormData(A)),DA.isFormData(A))return B?JSON.stringify(HA(A)):A;if(DA.isArrayBuffer(A)||DA.isBuffer(A)||DA.isStream(A)||DA.isFile(A)||DA.isBlob(A)||DA.isReadableStream(A))return A;if(DA.isArrayBufferView(A))return A.buffer;if(DA.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return rA(A,new dA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return dA.isNode&&DA.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=DA.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return rA(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A){if(DA.isString(A))try{return(0,JSON.parse)(A),DA.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||qA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(DA.isResponse(A)||DA.isReadableStream(A))return A;if(A&&DA.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw wA.from(A,wA.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:dA.classes.FormData,Blob:dA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};DA.forEach(["delete","get","head","post","put","patch"],(A=>{qA.headers[A]={}}));const pA=qA,fA=DA.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),WA=Symbol("internals");function uA(A){return A&&String(A).trim().toLowerCase()}function bA(A){return!1===A||null==A?A:DA.isArray(A)?A.map(bA):String(A)}function mA(A,I,g,B,C){return DA.isFunction(B)?B.call(this,I,g):(C&&(I=g),DA.isString(I)?DA.isString(B)?-1!==I.indexOf(B):DA.isRegExp(B)?B.test(I):void 0:void 0)}class ZA{constructor(A){A&&this.set(A)}set(A,I,g){const B=this;function C(A,I,g){const C=uA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=DA.findKey(B,C);(!Q||void 0===B[Q]||!0===g||void 0===g&&!1!==B[Q])&&(B[Q||I]=bA(A))}const Q=(A,I)=>DA.forEach(A,((A,g)=>C(A,g,I)));if(DA.isPlainObject(A)||A instanceof this.constructor)Q(A,I);else if(DA.isString(A)&&(A=A.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&\'*+.]+$/.test(A.trim()))Q((A=>{const I={};let g,B,C;return A&&A.split("\\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&fA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A),I);else if(DA.isHeaders(A))for(const[I,B]of A.entries())C(B,I,g);else null!=A&&C(I,A,g);return this}get(A,I){if(A=uA(A)){const g=DA.findKey(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(DA.isFunction(I))return I.call(this,A,g);if(DA.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,I){if(A=uA(A)){const g=DA.findKey(this,A);return!(!g||void 0===this[g]||I&&!mA(0,this[g],g,I))}return!1}delete(A,I){const g=this;let B=!1;function C(A){if(A=uA(A)){const C=DA.findKey(g,A);!C||I&&!mA(0,g[C],C,I)||(delete g[C],B=!0)}}return DA.isArray(A)?A.forEach(C):C(A),B}clear(A){const I=Object.keys(this);let g=I.length,B=!1;for(;g--;){const C=I[g];A&&!mA(0,this[C],C,A,!0)||(delete this[C],B=!0)}return B}normalize(A){const I=this,g={};return DA.forEach(this,((B,C)=>{const Q=DA.findKey(g,C);if(Q)return I[Q]=bA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=bA(B),g[E]=!0})),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){const I=Object.create(null);return DA.forEach(this,((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&DA.isArray(g)?g.join(", "):g)})),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([A,I])=>A+": "+I)).join("\\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...I){const g=new this(A);return I.forEach((A=>g.set(A))),g}static accessor(A){const I=(this[WA]=this[WA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=uA(A);I[B]||(function(A,I){const g=DA.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return DA.isArray(A)?A.forEach(B):B(A),this}}ZA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),DA.reduceDescriptors(ZA.prototype,(({value:A},I)=>{let g=I[0].toUpperCase()+I.slice(1);return{get:()=>A,set(A){this[g]=A}}})),DA.freezeMethods(ZA);const VA=ZA;function OA(A,I){const g=this||pA,B=I||g,C=VA.from(B.headers);let Q=B.data;return DA.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function TA(A){return!(!A||!A.__CANCEL__)}function xA(A,I,g){wA.call(this,null==A?"canceled":A,wA.ERR_CANCELED,I,g),this.name="CanceledError"}DA.inherits(xA,wA,{__CANCEL__:!0});const XA=xA;function vA(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new wA("Request failed with status code "+g.status,[wA.ERR_BAD_REQUEST,wA.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}const jA=(A,I,g=3)=>{let B=0;const C=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,s=0;for(;a!==Q;)s+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const t=D&&o-D;return t?Math.round(1e3*s/t):void 0}}(50,250);return function(A,I){let g,B,C=0,Q=1e3/I;const E=(I,Q=Date.now())=>{C=Q,g=null,B&&(clearTimeout(B),B=null),A.apply(null,I)};return[(...A)=>{const I=Date.now(),i=I-C;i>=Q?E(A,I):(g=A,B||(B=setTimeout((()=>{B=null,E(g)}),Q-i)))},()=>g&&E(g)]}((g=>{const Q=g.loaded,E=g.lengthComputable?g.total:void 0,i=Q-B,o=C(i);B=Q,A({loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0,event:g,lengthComputable:null!=E,[I?"download":"upload"]:!0})}),g)},PA=(A,I)=>{const g=null!=A;return[B=>I[0]({lengthComputable:g,total:A,loaded:B}),I[1]]},zA=A=>(...I)=>DA.asap((()=>A(...I))),_A=dA.hasStandardBrowserEnv?function(){const A=dA.navigator&&/(msie|trident)/i.test(dA.navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=DA.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0},$A=dA.hasStandardBrowserEnv?{write(A,I,g,B,C,Q){const E=[A+"="+encodeURIComponent(I)];DA.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),DA.isString(B)&&E.push("path="+B),DA.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read(A){const I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function AI(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/?\\/$/,"")+"/"+I.replace(/^\\/+/,""):A}(A,I):I}const II=A=>A instanceof VA?{...A}:A;function gI(A,I){I=I||{};const g={};function B(A,I,g){return DA.isPlainObject(A)&&DA.isPlainObject(I)?DA.merge.call({caseless:g},A,I):DA.isPlainObject(I)?DA.merge({},I):DA.isArray(I)?I.slice():I}function C(A,I,g){return DA.isUndefined(I)?DA.isUndefined(A)?void 0:B(void 0,A,g):B(A,I,g)}function Q(A,I){if(!DA.isUndefined(I))return B(void 0,I)}function E(A,I){return DA.isUndefined(I)?DA.isUndefined(A)?void 0:B(void 0,A):B(void 0,I)}function i(g,C,Q){return Q in I?B(g,C):Q in A?B(void 0,g):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,withXSRFToken:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i,headers:(A,I)=>C(II(A),II(I),!0)};return DA.forEach(Object.keys(Object.assign({},A,I)),(function(B){const Q=o[B]||C,E=Q(A[B],I[B],B);DA.isUndefined(E)&&Q!==i||(g[B]=E)})),g}const BI=A=>{const I=gI({},A);let g,{data:B,withXSRFToken:C,xsrfHeaderName:Q,xsrfCookieName:E,headers:i,auth:o}=I;if(I.headers=i=VA.from(i),I.url=nA(AI(I.baseURL,I.url),A.params,A.paramsSerializer),o&&i.set("Authorization","Basic "+btoa((o.username||"")+":"+(o.password?unescape(encodeURIComponent(o.password)):""))),DA.isFormData(B))if(dA.hasStandardBrowserEnv||dA.hasStandardBrowserWebWorkerEnv)i.setContentType(void 0);else if(!1!==(g=i.getContentType())){const[A,...I]=g?g.split(";").map((A=>A.trim())).filter(Boolean):[];i.setContentType([A||"multipart/form-data",...I].join("; "))}if(dA.hasStandardBrowserEnv&&(C&&DA.isFunction(C)&&(C=C(I)),C||!1!==C&&_A(I.url))){const A=Q&&E&&$A.read(E);A&&i.set(Q,A)}return I},CI="undefined"!=typeof XMLHttpRequest&&function(A){return new Promise((function(I,g){const B=BI(A);let C=B.data;const Q=VA.from(B.headers).normalize();let E,i,o,D,a,{responseType:s,onUploadProgress:t,onDownloadProgress:w}=B;function G(){D&&D(),a&&a(),B.cancelToken&&B.cancelToken.unsubscribe(E),B.signal&&B.signal.removeEventListener("abort",E)}let h=new XMLHttpRequest;function F(){if(!h)return;const B=VA.from("getAllResponseHeaders"in h&&h.getAllResponseHeaders());vA((function(A){I(A),G()}),(function(A){g(A),G()}),{data:s&&"text"!==s&&"json"!==s?h.response:h.responseText,status:h.status,statusText:h.statusText,headers:B,config:A,request:h}),h=null}h.open(B.method.toUpperCase(),B.url,!0),h.timeout=B.timeout,"onloadend"in h?h.onloadend=F:h.onreadystatechange=function(){h&&4===h.readyState&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))&&setTimeout(F)},h.onabort=function(){h&&(g(new wA("Request aborted",wA.ECONNABORTED,A,h)),h=null)},h.onerror=function(){g(new wA("Network Error",wA.ERR_NETWORK,A,h)),h=null},h.ontimeout=function(){let I=B.timeout?"timeout of "+B.timeout+"ms exceeded":"timeout exceeded";const C=B.transitional||MA;B.timeoutErrorMessage&&(I=B.timeoutErrorMessage),g(new wA(I,C.clarifyTimeoutError?wA.ETIMEDOUT:wA.ECONNABORTED,A,h)),h=null},void 0===C&&Q.setContentType(null),"setRequestHeader"in h&&DA.forEach(Q.toJSON(),(function(A,I){h.setRequestHeader(I,A)})),DA.isUndefined(B.withCredentials)||(h.withCredentials=!!B.withCredentials),s&&"json"!==s&&(h.responseType=B.responseType),w&&([o,a]=jA(w,!0),h.addEventListener("progress",o)),t&&h.upload&&([i,D]=jA(t),h.upload.addEventListener("progress",i),h.upload.addEventListener("loadend",D)),(B.cancelToken||B.signal)&&(E=I=>{h&&(g(!I||I.type?new XA(null,A,h):I),h.abort(),h=null)},B.cancelToken&&B.cancelToken.subscribe(E),B.signal&&(B.signal.aborted?E():B.signal.addEventListener("abort",E)));const R=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}(B.url);R&&-1===dA.protocols.indexOf(R)?g(new wA("Unsupported protocol "+R+":",wA.ERR_BAD_REQUEST,A)):h.send(C||null)}))},QI=(A,I)=>{const{length:g}=A=A?A.filter(Boolean):[];if(I||g){let g,B=new AbortController;const C=function(A){if(!g){g=!0,E();const I=A instanceof Error?A:this.reason;B.abort(I instanceof wA?I:new XA(I instanceof Error?I.message:I))}};let Q=I&&setTimeout((()=>{Q=null,C(new wA(`timeout ${I} of ms exceeded`,wA.ETIMEDOUT))}),I);const E=()=>{A&&(Q&&clearTimeout(Q),Q=null,A.forEach((A=>{A.unsubscribe?A.unsubscribe(C):A.removeEventListener("abort",C)})),A=null)};A.forEach((A=>A.addEventListener("abort",C)));const{signal:i}=B;return i.unsubscribe=()=>DA.asap(E),i}},EI=function*(A,I){let g=A.byteLength;if(!I||g<I)return void(yield A);let B,C=0;for(;C<g;)B=C+I,yield A.slice(C,B),C=B},iI=(A,I,g,B)=>{const C=async function*(A,I){for await(const g of async function*(A){if(A[Symbol.asyncIterator])return void(yield*A);const I=A.getReader();try{for(;;){const{done:A,value:g}=await I.read();if(A)break;yield g}}finally{await I.cancel()}}(A))yield*EI(g,I)}(A,I);let Q,E=0,i=A=>{Q||(Q=!0,B&&B(A))};return new ReadableStream({async pull(A){try{const{done:I,value:B}=await C.next();if(I)return i(),void A.close();let Q=B.byteLength;if(g){let A=E+=Q;g(A)}A.enqueue(new Uint8Array(B))}catch(A){throw i(A),A}},cancel:A=>(i(A),C.return())},{highWaterMark:2})},oI="function"==typeof fetch&&"function"==typeof Request&&"function"==typeof Response,DI=oI&&"function"==typeof ReadableStream,aI=oI&&("function"==typeof TextEncoder?(sI=new TextEncoder,A=>sI.encode(A)):async A=>new Uint8Array(await new Response(A).arrayBuffer()));var sI;const tI=(A,...I)=>{try{return!!A(...I)}catch(A){return!1}},wI=DI&&tI((()=>{let A=!1;const I=new Request(dA.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!I})),GI=DI&&tI((()=>DA.isReadableStream(new Response("").body))),hI={stream:GI&&(A=>A.body)};var FI;oI&&(FI=new Response,["text","arrayBuffer","blob","formData","stream"].forEach((A=>{!hI[A]&&(hI[A]=DA.isFunction(FI[A])?I=>I[A]():(I,g)=>{throw new wA(`Response type \'${A}\' is not supported`,wA.ERR_NOT_SUPPORT,g)})})));const RI={http:null,xhr:CI,fetch:oI&&(async A=>{let{url:I,method:g,data:B,signal:C,cancelToken:Q,timeout:E,onDownloadProgress:i,onUploadProgress:o,responseType:D,headers:a,withCredentials:s="same-origin",fetchOptions:t}=BI(A);D=D?(D+"").toLowerCase():"text";let w,G=QI([C,Q&&Q.toAbortSignal()],E);const h=G&&G.unsubscribe&&(()=>{G.unsubscribe()});let F;try{if(o&&wI&&"get"!==g&&"head"!==g&&0!==(F=await(async(A,I)=>{const g=DA.toFiniteNumber(A.getContentLength());return null==g?(async A=>{if(null==A)return 0;if(DA.isBlob(A))return A.size;if(DA.isSpecCompliantForm(A)){const I=new Request(dA.origin,{method:"POST",body:A});return(await I.arrayBuffer()).byteLength}return DA.isArrayBufferView(A)||DA.isArrayBuffer(A)?A.byteLength:(DA.isURLSearchParams(A)&&(A+=""),DA.isString(A)?(await aI(A)).byteLength:void 0)})(I):g})(a,B))){let A,g=new Request(I,{method:"POST",body:B,duplex:"half"});if(DA.isFormData(B)&&(A=g.headers.get("content-type"))&&a.setContentType(A),g.body){const[A,I]=PA(F,jA(zA(o)));B=iI(g.body,65536,A,I)}}DA.isString(s)||(s=s?"include":"omit");const C="credentials"in Request.prototype;w=new Request(I,{...t,signal:G,method:g.toUpperCase(),headers:a.normalize().toJSON(),body:B,duplex:"half",credentials:C?s:void 0});let Q=await fetch(w);const E=GI&&("stream"===D||"response"===D);if(GI&&(i||E&&h)){const A={};["status","statusText","headers"].forEach((I=>{A[I]=Q[I]}));const I=DA.toFiniteNumber(Q.headers.get("content-length")),[g,B]=i&&PA(I,jA(zA(i),!0))||[];Q=new Response(iI(Q.body,65536,g,(()=>{B&&B(),h&&h()})),A)}D=D||"text";let R=await hI[DA.findKey(hI,D)||"text"](Q,A);return!E&&h&&h(),await new Promise(((I,g)=>{vA(I,g,{data:R,headers:VA.from(Q.headers),status:Q.status,statusText:Q.statusText,config:A,request:w})}))}catch(I){if(h&&h(),I&&"TypeError"===I.name&&/fetch/i.test(I.message))throw Object.assign(new wA("Network Error",wA.ERR_NETWORK,A,w),{cause:I.cause||I});throw wA.from(I,I&&I.code,A,w)}})};DA.forEach(RI,((A,I)=>{if(A){try{Object.defineProperty(A,"name",{value:I})}catch(A){}Object.defineProperty(A,"adapterName",{value:I})}}));const rI=A=>`- ${A}`,eI=A=>DA.isFunction(A)||null===A||!1===A,yI=A=>{A=DA.isArray(A)?A:[A];const{length:I}=A;let g,B;const C={};for(let Q=0;Q<I;Q++){let I;if(g=A[Q],B=g,!eI(g)&&(B=RI[(I=String(g)).toLowerCase()],void 0===B))throw new wA(`Unknown adapter \'${I}\'`);if(B)break;C[I||"#"+Q]=B}if(!B){const A=Object.entries(C).map((([A,I])=>`adapter ${A} `+(!1===I?"is not supported by the environment":"is not available in the build")));let g=I?A.length>1?"since :\\n"+A.map(rI).join("\\n"):" "+rI(A[0]):"as no adapter specified";throw new wA("There is no suitable adapter to dispatch the request "+g,"ERR_NOT_SUPPORT")}return B};function SI(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new XA(null,A)}function cI(A){return SI(A),A.headers=VA.from(A.headers),A.data=OA.call(A,A.transformRequest),-1!==["post","put","patch"].indexOf(A.method)&&A.headers.setContentType("application/x-www-form-urlencoded",!1),yI(A.adapter||pA.adapter)(A).then((function(I){return SI(A),I.data=OA.call(A,A.transformResponse,I),I.headers=VA.from(I.headers),I}),(function(I){return TA(I)||(SI(A),I&&I.response&&(I.response.data=OA.call(A,A.transformResponse,I.response),I.response.headers=VA.from(I.response.headers))),Promise.reject(I)}))}const NI={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{NI[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const nI={};NI.transitional=function(A,I,g){function B(A,I){return"[Axios v1.7.7] Transitional option \'"+A+"\'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new wA(B(C," has been removed"+(I?" in "+I:"")),wA.ERR_DEPRECATED);return I&&!nI[C]&&(nI[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const UI={assertOptions:function(A,I,g){if("object"!=typeof A)throw new wA("options must be an object",wA.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new wA("option "+Q+" must be "+g,wA.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new wA("Unknown option "+Q,wA.ERR_BAD_OPTION)}},validators:NI},MI=UI.validators;class kI{constructor(A){this.defaults=A,this.interceptors={request:new UA,response:new UA}}async request(A,I){try{return await this._request(A,I)}catch(A){if(A instanceof Error){let I;Error.captureStackTrace?Error.captureStackTrace(I={}):I=new Error;const g=I.stack?I.stack.replace(/^.+\\n/,""):"";try{A.stack?g&&!String(A.stack).endsWith(g.replace(/^.+\\n.+\\n/,""))&&(A.stack+="\\n"+g):A.stack=g}catch(A){}}throw A}}_request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=gI(this.defaults,I);const{transitional:g,paramsSerializer:B,headers:C}=I;void 0!==g&&UI.assertOptions(g,{silentJSONParsing:MI.transitional(MI.boolean),forcedJSONParsing:MI.transitional(MI.boolean),clarifyTimeoutError:MI.transitional(MI.boolean)},!1),null!=B&&(DA.isFunction(B)?I.paramsSerializer={serialize:B}:UI.assertOptions(B,{encode:MI.function,serialize:MI.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let Q=C&&DA.merge(C.common,C[I.method]);C&&DA.forEach(["delete","get","head","post","put","patch","common"],(A=>{delete C[A]})),I.headers=VA.concat(Q,C);const E=[];let i=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(i=i&&A.synchronous,E.unshift(A.fulfilled,A.rejected))}));const o=[];let D;this.interceptors.response.forEach((function(A){o.push(A.fulfilled,A.rejected)}));let a,s=0;if(!i){const A=[cI.bind(this),void 0];for(A.unshift.apply(A,E),A.push.apply(A,o),a=A.length,D=Promise.resolve(I);s<a;)D=D.then(A[s++],A[s++]);return D}a=E.length;let t=I;for(s=0;s<a;){const I=E[s++],g=E[s++];try{t=I(t)}catch(A){g.call(this,A);break}}try{D=cI.call(this,t)}catch(A){return Promise.reject(A)}for(s=0,a=o.length;s<a;)D=D.then(o[s++],o[s++]);return D}getUri(A){return nA(AI((A=gI(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}DA.forEach(["delete","get","head","options"],(function(A){kI.prototype[A]=function(I,g){return this.request(gI(g||{},{method:A,url:I,data:(g||{}).data}))}})),DA.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(gI(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}kI.prototype[A]=I(),kI.prototype[A+"Form"]=I(!0)}));const JI=kI;class KI{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new XA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}toAbortSignal(){const A=new AbortController,I=I=>{A.abort(I)};return this.subscribe(I),A.signal.unsubscribe=()=>this.unsubscribe(I),A.signal}static source(){let A;return{token:new KI((function(I){A=I})),cancel:A}}}const YI=KI,lI={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(lI).forEach((([A,I])=>{lI[I]=A}));const LI=lI,dI=function A(I){const g=new JI(I),B=e(JI.prototype.request,g);return DA.extend(B,JI.prototype,g,{allOwnKeys:!0}),DA.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(gI(I,g))},B}(pA);dI.Axios=JI,dI.CanceledError=XA,dI.CancelToken=YI,dI.isCancel=TA,dI.VERSION="1.7.7",dI.toFormData=rA,dI.AxiosError=wA,dI.Cancel=dI.CanceledError,dI.all=function(A){return Promise.all(A)},dI.spread=function(A){return function(I){return A.apply(null,I)}},dI.isAxiosError=function(A){return DA.isObject(A)&&!0===A.isAxiosError},dI.mergeConfig=gI,dI.AxiosHeaders=VA,dI.formToJSON=A=>HA(DA.isHTMLForm(A)?new FormData(A):A),dI.getAdapter=yI,dI.HttpStatusCode=LI,dI.default=dI;const HI=dI;var qI=function(){return a((function A(){E(this,A)}),null,[{key:"fetchRemoteData",value:(I=Q(G().mark((function A(I){var g;return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,HI.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),new Error("Error in Utils.fetchRemoteData: ",A.t0);case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return I.apply(this,arguments)})},{key:"fetchRemoteDataCallback",value:(A=Q(G().mark((function A(I,g){var B;return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,HI.get(I,{responseType:"arraybuffer"}).then((function(A){var I=new Uint8Array(A.data);console.log(I),g(A)}));case 3:return B=A.sent,A.abrupt("return",B);case 7:throw A.prev=7,A.t0=A.catch(0),new Error("Error in Utils.fetchRemoteDataCallback: ",A.t0);case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(I,g){return A.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}}]);var A,I}(),pI=function(){function A(){E(this,A),s(this,"instance",void 0),s(this,"markerNFTCount",void 0),s(this,"cameraCount",void 0),s(this,"version",void 0),s(this,"NFTMarkerInfo",void 0),s(this,"FS",void 0),s(this,"StringList",void 0),s(this,"nftMarkers",void 0),this.instance,this.markerNFTCount=0,this.cameraCount=0,this.version="1.7.1",console.info("ARToolkitNFT ",this.version)}return a(A,[{key:"init",value:(g=Q(G().mark((function I(){var g;return G().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,R();case 2:return g=I.sent,this.instance=new g.ARToolKitNFT,this.FS=g.FS,this.StringList=g.StringList,this.nftMarkers=g.nftMarkers,A.ERROR_MARKER_INDEX_OUT_OF_BOUNDS=g.ERROR_MARKER_INDEX_OUT_OF_BOUNDS,A.AR_DEBUG_DISABLE=g.AR_DEBUG_DISABLE,A.AR_DEBUG_ENABLE=g.AR_DEBUG_ENABLE,A.AR_DEFAULT_DEBUG_MODE=g.AR_DEFAULT_DEBUG_MODE,A.AR_DEFAULT_LABELING_THRESH=g.AR_DEFAULT_LABELING_THRESH,A.AR_IMAGE_PROC_FRAME_IMAGE=g.AR_IMAGE_PROC_FRAME_IMAGE,A.AR_IMAGE_PROC_FIELD_IMAGE=g.AR_IMAGE_PROC_FIELD_IMAGE,A.AR_DEFAULT_IMAGE_PROC_MODE=g.AR_DEFAULT_IMAGE_PROC_MODE,A.AR_MAX_LOOP_COUNT=g.AR_MAX_LOOP_COUNT,A.AR_LOOP_BREAK_THRESH=g.AR_LOOP_BREAK_THRESH,A.AR_LOG_LEVEL_DEBUG=g.AR_LOG_LEVEL_DEBUG,A.AR_LOG_LEVEL_INFO=g.AR_LOG_LEVEL_INFO,A.AR_LOG_LEVEL_WARN=g.AR_LOG_LEVEL_WARN,A.AR_LOG_LEVEL_ERROR=g.AR_LOG_LEVEL_ERROR,A.AR_LOG_LEVEL_REL_INFO=g.AR_LOG_LEVEL_REL_INFO,A.AR_LABELING_THRESH_MODE_MANUAL=g.AR_LABELING_THRESH_MODE_MANUAL,A.AR_LABELING_THRESH_MODE_AUTO_MEDIAN=g.AR_LABELING_THRESH_MODE_AUTO_MEDIAN,A.AR_LABELING_THRESH_MODE_AUTO_OTSU=g.AR_LABELING_THRESH_MODE_AUTO_OTSU,A.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE=g.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE,A.AR_MARKER_INFO_CUTOFF_PHASE_NONE=g.AR_MARKER_INFO_CUTOFF_PHASE_NONE,A.AR_MARKER_INFO_CUTOFF_PHASE_PATTERN_EXTRACTION=g.AR_MARKER_INFO_CUTOFF_PHASE_PATTERN_EXTRACTION,A.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_GENERIC=g.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_GENERIC,A.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONTRAST=g.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONTRAST,A.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_NOT_FOUND=g.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_NOT_FOUND,A.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_EDC_FAIL=g.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_EDC_FAIL,A.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONFIDENCE=g.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONFIDENCE,A.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR=g.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR,A.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR_MULTI=g.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR_MULTI,A.AR_MARKER_INFO_CUTOFF_PHASE_HEURISTIC_TROUBLESOME_MATRIX_CODES=g.AR_MARKER_INFO_CUTOFF_PHASE_HEURISTIC_TROUBLESOME_MATRIX_CODES,I.abrupt("return",this);case 37:case"end":return I.stop()}}),I,this)}))),function(){return g.apply(this,arguments)})},{key:"setup",value:function(A,I,g){return this.instance.setup(A,I,g)}},{key:"teardown",value:function(){this.instance.teardown()}},{key:"setupAR2",value:function(){this.instance.setupAR2()}},{key:"setDebugMode",value:function(A){return this.instance.setDebugMode(A)}},{key:"getDebugMode",value:function(){return this.instance.getDebugMode()}},{key:"getProcessingImage",value:function(){return this.instance.getProcessingImage()}},{key:"detectNFTMarker",value:function(){return this.instance.detectNFTMarker()}},{key:"getNFTMarker",value:function(A){return this.instance.getNFTMarker(A)}},{key:"getNFTData",value:function(A){return this.instance.getNFTData(A)}},{key:"setLogLevel",value:function(A){return this.instance.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.instance.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){this.instance.setProjectionNearPlane(A)}},{key:"getProjectionNearPlane",value:function(){return this.instance.getProjectionNearPlane()}},{key:"setProjectionFarPlane",value:function(A){this.instance.setProjectionFarPlane(A)}},{key:"getProjectionFarPlane",value:function(){return this.instance.getProjectionFarPlane()}},{key:"setThresholdMode",value:function(A){return this.instance.setThresholdMode(A)}},{key:"getThresholdMode",value:function(){return this.instance.getThresholdMode()}},{key:"setThreshold",value:function(A){return this.instance.setThreshold(A)}},{key:"getThreshold",value:function(){return this.instance.getThreshold()}},{key:"setImageProcMode",value:function(A){return this.instance.setImageProcMode(A)}},{key:"getImageProcMode",value:function(){return this.instance.getImageProcMode()}},{key:"getCameraLens",value:function(){return this.instance.getCameraLens()}},{key:"passVideoData",value:function(A,I){this.instance.passVideoData(A,I)}},{key:"loadCamera",value:(I=Q(G().mark((function A(I){var g,B;return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,qI.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),new Error("Error in loadCamera function: ",A.t0);case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return I.apply(this,arguments)})},{key:"addNFTMarkers",value:function(A,I,g){var B=this,C=[],Q=3*A.length,E=function(A){if(0==(Q-=1)){for(var g=new B.StringList,E=[],i=0;i<C.length;i++)g.push_back(C[i]);for(var o=B.instance._addNFTMarkers(g),D=0;D<o.size();D++)E.push(o.get(D));console.log("add nft marker ids: ",E),I&&I(E)}},i=function(A,I){console.log("failed to load: ",A),g(I)},o=[];return A.forEach((function(A,I){var g="/markerNFT_"+B.markerNFTCount;if(C.push(g),Array.isArray(A))A.forEach((function(A){var I=g+"."+A.split(".").pop();B.ajax(A,I,E.bind(I),i.bind(I))})),B.markerNFTCount+=1;else{var Q=g+".fset",D=g+".iset",a=g+".fset3";B.ajax(A+".fset",Q,E.bind(Q),i.bind(Q)),B.ajax(A+".iset",D,E.bind(D),i.bind(D)),B.ajax(A+".fset3",a,E.bind(a),i.bind(a)),B.markerNFTCount+=1}o.push(I)})),o}},{key:"_storeDataFile",value:function(A,I){this.FS.writeFile(I,A,{encoding:"binary"})}},{key:"ajax",value:function(A,I,g,B){var C=this,Q=new XMLHttpRequest;Q.open("GET",A,!0),Q.responseType="arraybuffer",Q.onload=function(){if(200==this.status){var E=Q.response,i=new Uint8Array(E);!function(A,I,g){C.FS.writeFile(A,I,{encoding:"binary"}),g(I)}(I,i,g)}else B(A,this.status)},Q.send()}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"NFT_MARKER",get:function(){return 0}}]);var I,g}();s(pI,"ERROR_MARKER_INDEX_OUT_OF_BOUNDS",void 0),s(pI,"AR_DEBUG_DISABLE",void 0),s(pI,"AR_DEBUG_ENABLE",void 0),s(pI,"AR_DEFAULT_DEBUG_MODE",void 0),s(pI,"AR_DEFAULT_LABELING_THRESH",void 0),s(pI,"AR_IMAGE_PROC_FRAME_IMAGE",void 0),s(pI,"AR_IMAGE_PROC_FIELD_IMAGE",void 0),s(pI,"AR_DEFAULT_IMAGE_PROC_MODE",void 0),s(pI,"AR_MAX_LOOP_COUNT",void 0),s(pI,"AR_LOOP_BREAK_THRESH",void 0),s(pI,"AR_LOG_LEVEL_DEBUG",void 0),s(pI,"AR_LOG_LEVEL_INFO",void 0),s(pI,"AR_LOG_LEVEL_WARN",void 0),s(pI,"AR_LOG_LEVEL_ERROR",void 0),s(pI,"AR_LOG_LEVEL_REL_INFO",void 0),s(pI,"AR_LABELING_THRESH_MODE_MANUAL",void 0),s(pI,"AR_LABELING_THRESH_MODE_AUTO_MEDIAN",void 0),s(pI,"AR_LABELING_THRESH_MODE_AUTO_OTSU",void 0),s(pI,"AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_NONE",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_PATTERN_EXTRACTION",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_GENERIC",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONTRAST",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_NOT_FOUND",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_EDC_FAIL",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONFIDENCE",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR_MULTI",void 0),s(pI,"AR_MARKER_INFO_CUTOFF_PHASE_HEURISTIC_TROUBLESOME_MATRIX_CODES",void 0);var fI=function(){function A(I,g,B){E(this,A),s(this,"id",void 0),s(this,"_width",void 0),s(this,"_height",void 0),s(this,"_cameraParam",void 0),s(this,"cameraId",void 0),s(this,"artoolkitNFT",void 0),s(this,"FS",void 0),s(this,"StringList",void 0),s(this,"listeners",void 0),s(this,"nftMarkers",void 0),s(this,"transform_mat",void 0),s(this,"transformGL_RH",void 0),s(this,"camera_mat",void 0),s(this,"videoWidth",void 0),s(this,"videoHeight",void 0),s(this,"videoSize",void 0),s(this,"framesize",void 0),s(this,"videoLuma",void 0),s(this,"grayscaleEnabled",void 0),s(this,"grayscaleSource",void 0),s(this,"nftMarkerFound",void 0),s(this,"nftMarkerFoundTime",void 0),s(this,"nftMarkerCount",void 0),s(this,"defaultMarkerWidth",void 0),s(this,"_bwpointer",void 0),this.id=-1,this._width=I,this._height=g,this._cameraParam=B,this.cameraId=-1,this.artoolkitNFT,this.listeners={},this.nftMarkers=[],this.transform_mat=new Float64Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framesize=null,this.videoLuma=null,this.grayscaleEnabled=!1,this.camera_mat=null,this.nftMarkerFound=!1,this.nftMarkerFoundTime=0,this.nftMarkerCount=0,this._bwpointer=null,this.defaultMarkerWidth=1}return a(A,[{key:"width",get:function(){return this._width},set:function(A){this._width=A}},{key:"height",get:function(){return this._height},set:function(A){this._height=A}},{key:"cameraParam",get:function(){return this._cameraParam},set:function(A){this._cameraParam=A}},{key:"process",value:function(A){var I,g;for(I in this._copyImageToHeap(A),this.converter().nftMarkers)(g=this.converter().nftMarkers[I]).inPrevious=g.inCurrent,g.inCurrent=!1;var B=this.nftMarkerCount;this.detectNFTMarker();for(var C=0;C<B;C++){var Q=this.getNFTMarker(C),E=pI.NFT_MARKER;if(Q.found){this.nftMarkerFound=C,this.nftMarkerFoundTime=Date.now();var i=this.trackNFTMarkerId(C);i.matrix.set(Q.pose),i.inCurrent=!0,this.transMatToGLMat(i.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:C,type:E,marker:Q,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else this.nftMarkerFound===C&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:C,type:E,marker:Q,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}}},{key:"detectNFTMarker",value:function(){return this.artoolkitNFT.detectNFTMarker()}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.converter().nftMarkers[A];return g||(this.converter().nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"getNFTMarker",value:function(A){return this.artoolkitNFT.getNFTMarker(A)}},{key:"getNFTData",value:function(A){return this.artoolkitNFT.getNFTData(A)}},{key:"addEventListener",value:function(A,I){this.converter().listeners[A]||(this.converter().listeners[A]=[]),this.converter().listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.converter().listeners[A]){var g=this.converter().listeners[A].indexOf(I);g>-1&&this.converter().listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.converter().listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"setDebugMode",value:function(A){return this.artoolkitNFT.setDebugMode(A)}},{key:"getDebugMode",value:function(){return this.artoolkitNFT.getDebugMode()}},{key:"getProcessingImage",value:function(){return this.artoolkitNFT.getProcessingImage()}},{key:"setLogLevel",value:function(A){return this.artoolkitNFT.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkitNFT.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkitNFT.setProjectionNearPlane(A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkitNFT.getProjectionNearPlane()}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkitNFT.setProjectionFarPlane(A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkitNFT.getProjectionFarPlane()}},{key:"setThresholdMode",value:function(A){return this.artoolkitNFT.setThresholdMode(A)}},{key:"getThresholdMode",value:function(){return this.artoolkitNFT.getThresholdMode()}},{key:"setThreshold",value:function(A){return this.artoolkitNFT.setThreshold(A)}},{key:"getThreshold",value:function(){return this.artoolkitNFT.getThreshold()}},{key:"loadNFTMarker",value:(o=Q(G().mark((function A(I,g,B){var C,Q=this;return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers([I],(function(A){Q.nftMarkerCount+=A.length,g(A[0])}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return o.apply(this,arguments)})},{key:"loadNFTMarkers",value:(i=Q(G().mark((function A(I,g,B){var C,Q=this;return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(I,(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return i.apply(this,arguments)})},{key:"setImageProcMode",value:function(A){return this.artoolkitNFT.setImageProcMode(A)}},{key:"getImageProcMode",value:function(){return this.artoolkitNFT.getImageProcMode()}},{key:"setGrayData",value:function(A){this.grayscaleEnabled=!0,this.grayscaleSource=A}},{key:"converter",value:function(){return this}},{key:"_initialize",value:(C=Q(G().mark((function A(){var I=this;return G().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new pI).init();case 2:return this.artoolkitNFT=A.sent,this.FS=this.artoolkitNFT.FS,this.StringList=this.artoolkitNFT.StringList,console.log("[ARControllerNFT]","ARToolkitNFT initialized"),A.next=8,this.artoolkitNFT.loadCamera(this.cameraParam);case 8:return this.cameraId=A.sent,console.log("[ARControllerNFT]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkitNFT.setup(this.width,this.height,this.cameraId),console.log("[ARControllerNFT]","Got ID from setup",this.id),this._initNFT(),this.framesize=this._width*this._height,this.videoLuma=new Uint8Array(this.framesize),this.camera_mat=this.artoolkitNFT.getCameraLens(),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){I.dispatchEvent({name:"load",target:I})}),1),A.abrupt("return",this);case 20:case"end":return A.stop()}}),A,this)}))),function(){return C.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkitNFT.setupAR2()}},{key:"_copyImageToHeap",value:function(A){if(A){var I;if(A.data&&(I=A.data),this.videoLuma)if(0==this.grayscaleEnabled)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}else 1==this.grayscaleEnabled&&(this.videoLuma=this.grayscaleSource);return!!this.videoLuma&&(this.artoolkitNFT.passVideoData(I,this.videoLuma),!0)}console.error("Error: no provided imageData to ARControllerNFT")}}],[{key:"initWithDimensions",value:(B=Q(G().mark((function I(g,B,C){var Q;return G().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=new A(g,B,C),I.next=3,Q._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=Q(G().mark((function I(g,B){var C,Q,E;return G().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.videoWidth||g.width,Q=g.videoHeight||g.height,E=new A(C,Q,B),I.next=5,E._initialize();case 5:return I.abrupt("return",I.sent);case 6:case"end":return I.stop()}}),I)}))),function(A,I){return g.apply(this,arguments)})},{key:"customInit",value:(I=Q(G().mark((function I(g,B,C,Q){var E;return G().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C),Q(),I.next=4,E._initialize();case 4:return I.abrupt("return",I.sent);case 5:case"end":return I.stop()}}),I)}))),function(A,g,B,C){return I.apply(this,arguments)})}]);var I,g,B,C,i,o}()})(),C})(),A.exports=B()}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),(()=>{"use strict";var A=g(564),I={d:(A,g)=>{for(var B in g)I.o(g,B)&&!I.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:g[B]})},o:(A,I)=>Object.prototype.hasOwnProperty.call(A,I)},B={};I.d(B,{L:()=>C});class C{minCutOff;beta;dCutOff;xPrev;dxPrev;tPrev;initialized;constructor(A,I){this.minCutOff=A,this.beta=I,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}smoothingFactor(A,I){const g=2*Math.PI*I*A;return g/(g+1)}exponentialSmoothing(A,I,g){return A*I+(1-A)*g}reset(){this.initialized=!1}filter(A,I){if(!this.initialized)return this.initialized=!0,this.xPrev=I,this.dxPrev=I.map((()=>0)),this.tPrev=A,I;const{xPrev:g,tPrev:B,dxPrev:C}=this,Q=A-B,E=this.smoothingFactor(Q,this.dCutOff),i=[],o=[],D=[];for(let A=0;A<I.length;A++){i[A]=(I[A]-g[A])/Q,o[A]=this.exponentialSmoothing(E,i[A],C[A]);const B=this.minCutOff+this.beta*Math.abs(o[A]),a=this.smoothingFactor(Q,B);D[A]=this.exponentialSmoothing(a,I[A],g[A])}return this.xPrev=D,this.dxPrev=o,this.tPrev=A,D}}var Q=B.L;const E=self;E.onmessage=A=>{const I=A.data;switch(I.type){case"load":return void G(I);case"stop":D=null;break;case"process":i=I.imagedata,h(i,I.frame)}};let i=null,o=0,D=null,a=null;let s,t=0;const w=new Q(1e-4,.01),G=async I=>{const g=self.origin;let B,C=[],Q=I.marker.length;s=I.oef,console.debug("Base path:",g);const i=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(I.camera_para);1==i?B=I.addPath?g+"/"+I.addPath+"/"+I.camera_para:I.camera_para:0==i&&(B=I.addPath?g+"/"+I.addPath+"/"+I.camera_para:g+"/"+I.camera_para),console.debug("Loading camera at:",B),A.ARControllerNFT.initWithDimensions(I.pw,I.ph,B).then((async A=>{D=A;const B=D.getCameraMatrix();D.addEventListener("getNFTMarker",(A=>{let I;var g;1==s?(g=A.data.matrixGL_RH,t+=1,I=t>5?w.filter(Date.now(),g):g):I=A.data.matrixGL_RH,a={type:"found",matrixGL_RH:JSON.stringify(I)}}));const i=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(I.marker);for(var o=0;o<Q;o++){let A;1==i?I.addPath?A=g+"/"+I.addPath+"/"+I.marker[o]:C=I.marker[o]:0==i&&(A=I.addPath?g+"/"+I.addPath+"/"+I.marker[o]:g+"/"+I.marker[o]),C.push(A)}console.debug("Loading NFT marker at: ",C),await D.loadNFTMarkers(C,(A=>{var I=0;let g=D.getNFTData(A[I],0);E.postMessage({type:"markerInfos",marker:g}),D.trackNFTMarkerId(A[I]),console.log("loadNFTMarker -> ",A[I]),E.postMessage({type:"endLoading",end:!0}),I++}),(A=>{console.error("Error: ",A," loading marker in loadNFTMarkers!")})).catch((A=>{console.error("Error in loading marker on Worker",A)})),E.postMessage({type:"loaded",proj:JSON.stringify(B)})})).catch((A=>{console.error(A)}))},h=(A,I)=>{I!==o&&(a=null,D&&D.process&&D.process(A),o=I),null!=a?E.postMessage(a):E.postMessage({type:"not found"}),A=null}})()})();\n',"Worker",void 0,void 0)}class t{worker;markerURL;_processing=!1;vw;vh;target;uuid;name;addPath;ready;constructor(A,I,B,C,Q,E){this.markerURL=A,this.vw=I,this.vh=B,this.target=window||g.g,this.uuid=C,this.name=Q,this.ready=!1,this.addPath=E}async initialize(A,I,g,B){this.worker=new a;const C=this.worker;return this.target.addEventListener("terminateWorker-"+this.name,(function(){C.postMessage({type:"stop"}),C.terminate()})),await this.load(A,I,g,B)}process(A,I){this._processing||(this._processing=!0,this.worker.postMessage({type:"process",imagedata:A,frame:I},[A.data.buffer]))}load(A,I,g,B){let[C,Q,i,o,D,a]=E(this.vw,this.vh);const t=new CustomEvent("getWindowSize",{detail:{sw:C,sh:Q}});this.target.dispatchEvent(t),this.worker.postMessage({type:"load",pw:i,ph:o,camera_para:A,marker:this.markerURL,addPath:this.addPath,oef:B}),this.worker.onmessage=A=>{var I=A.data;switch(I.type){case"loaded":{var B=JSON.parse(I.proj);const A=i/D,g=o/a;B[0]*=A,B[4]*=A,B[8]*=A,B[12]*=A,B[1]*=g,B[5]*=g,B[9]*=g,B[13]*=g;const C=new CustomEvent("getProjectionMatrix",{detail:{proj:B}});this.target.dispatchEvent(C);break}case"endLoading":if(1==I.end){const A=document.getElementById("loading");A&&(A.querySelector(".loading-text").innerText="Start the tracking!",setTimeout((function(){null!=A.parentElement&&A&&A.parentElement.removeChild(A)}),2e3))}this.ready=!0,this.target.dispatchEvent(new CustomEvent("nftLoaded-"+this.uuid));break;case"markerInfos":{const A=I.marker,g=new CustomEvent("getNFTData-"+this.uuid+"-"+this.name,{detail:{dpi:A.dpi,width:A.width,height:A.height}});this.target.dispatchEvent(g);break}case"found":this.found(I);break;case"not found":this.found(null)}this._processing=!1,g()},this.worker.onerror=A=>{console.error("Worker error from NFTWorker: ",A)};let s=()=>{I(),window.requestAnimationFrame(s)};return s(),Promise.resolve(!0)}found(A){let I;if(A){I=JSON.parse(A.matrixGL_RH);const g=new CustomEvent("getMatrixGL_RH-"+this.uuid+"-"+this.name,{detail:{matrixGL_RH:I,name:this.name}});this.target.dispatchEvent(g)}else{I=null;const A=new CustomEvent("nftTrackingLost-"+this.uuid+"-"+this.name,{detail:{name:this.name}});this.target.dispatchEvent(A)}}isReady(){return this.ready}getUuid(){return this.uuid}getName(){return this.name}getMarkerUrl(){return this.markerURL}getEventTarget(){return this.target}destroy(){}}const s={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let w;const e=new Uint8Array(16);function G(){if(!w){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");w=crypto.getRandomValues.bind(crypto)}return w(e)}const h=[];for(let A=0;A<256;++A)h.push((A+256).toString(16).slice(1));function r(A,I=0){return(h[A[I+0]]+h[A[I+1]]+h[A[I+2]]+h[A[I+3]]+"-"+h[A[I+4]]+h[A[I+5]]+"-"+h[A[I+6]]+h[A[I+7]]+"-"+h[A[I+8]]+h[A[I+9]]+"-"+h[A[I+10]]+h[A[I+11]]+h[A[I+12]]+h[A[I+13]]+h[A[I+14]]+h[A[I+15]]).toLowerCase()}const F=function(A,I,g){if(s.randomUUID&&!I&&!A)return s.randomUUID();const B=(A=A||{}).random||(A.rng||G)();if(B[6]=15&B[6]|64,B[8]=63&B[8]|128,I){g=g||0;for(let A=0;A<16;++A)I[g+A]=B[A];return I}return r(B)},{rE:R}={rE:"0.14.7"};class y{cameraView;appData;addPath;width;height;configUrl;markerUrl;camData;autoUpdate=!0;controllers;static entities;target;uuid;version;initialized;_views;constructor(A,I,B){this.width=A,this.height=I,this.configUrl=B,this.target=window||g.g,this.uuid=F(),this.version=R,console.log("ARnft ",this.version)}static async init(A,I,g,B,C,Q){return y.initWithConfig({width:A,height:I,markerUrls:g,names:B,configUrl:C,stats:Q})}static async initWithEntities(A,I,g,B,C){return y.initWithConfig({width:A,height:I,entities:g,configUrl:B,stats:C})}static async initWithConfig(A){const I=new y(A.width,A.height,A.configUrl);null!=A.autoUpdate&&(I.autoUpdate=A.autoUpdate);try{let g,B=[];const C=A,Q=A;if(null!=C.markerUrls&&null!=C.names)null==Q.entities&&(B=C.markerUrls,g=C.names,this.entities=g.map((function(A,I,g){return{name:A[0],markerUrl:B[I][0]}})));else{if(null==Q.entities)throw"markerUrls or entities can't be undefined";this.entities=Q.entities,B=this.entities.map((A=>[A.markerUrl])),g=this.entities.map((A=>[A.name]))}return await I._initialize(B,g,A.stats)}catch(A){if(A.code)return console.error(A),Promise.reject(A)}}async _initialize(I,g,B){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),B&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],this.cameraView=new Q(this._views.video),this.cameraView.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>B?o.update():null,C=()=>B?D.update():null;I.forEach(((I,B)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[B][0],this.addPath)),this.controllers[B].initialize(this.appData.cameraPara,A,C,this.appData.oef)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame))),requestAnimationFrame(a)};return a(),this}async initializeRaw(I,g,B,Q){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),Q&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],B.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>Q?o.update():null,B=()=>Q?D.update():null;I.forEach(((I,C)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[C],this.addPath)),this.controllers[C].initialize(this.appData.cameraPara,A,B,this.appData.oef)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(B.getImage(),B.getFrame()))),requestAnimationFrame(a)};return a(),this}update(){this.initialized&&!this.autoUpdate&&null!=this.cameraView&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame)))}static getEntities(){return this.entities}getEventTarget(){return this.target}get views(){return Object.freeze(this._views)}dispose(){this.disposeVideoStream(),this.disposeAllNFTs()}disposeNFT(A){var I=new Event("terminateWorker-"+A);this.target.dispatchEvent(I)}disposeAllNFTs(){y.getEntities().forEach((A=>{this.disposeNFT(A.name)}))}disposeVideoStream(){this.cameraView.destroy();var A=new Event("stopVideoStreaming");this.target.dispatchEvent(A)}}const n={ARnft:y}})(),B=B.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
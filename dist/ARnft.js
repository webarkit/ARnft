!function(A,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.ARnft=I():A.ARnft=I()}("undefined"!=typeof self?self:this,(()=>(()=>{var A={466:function(A){var I;A.exports=(I=function(){function A(A){return C.appendChild(A.dom),A}function g(A){for(var I=0;I<C.children.length;I++)C.children[I].style.display=I===A?"block":"none";B=A}var B=0,C=document.createElement("div");C.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",C.addEventListener("click",(function(A){A.preventDefault(),g(++B%C.children.length)}),!1);var Q=(performance||Date).now(),E=Q,i=0,o=A(new I.Panel("FPS","#0ff","#002")),D=A(new I.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var a=A(new I.Panel("MB","#f08","#201"));return g(0),{REVISION:16,dom:C,addPanel:A,showPanel:g,begin:function(){Q=(performance||Date).now()},end:function(){i++;var A=(performance||Date).now();if(D.update(A-Q,200),A>E+1e3&&(o.update(1e3*i/(A-E),100),E=A,i=0,a)){var I=performance.memory;a.update(I.usedJSHeapSize/1048576,I.jsHeapSizeLimit/1048576)}return A},update:function(){Q=this.end()},domElement:C,setMode:g}},I.Panel=function(A,I,g){var B=1/0,C=0,Q=Math.round,E=Q(window.devicePixelRatio||1),i=80*E,o=48*E,D=3*E,a=2*E,t=3*E,s=15*E,w=74*E,h=30*E,G=document.createElement("canvas");G.width=i,G.height=o,G.style.cssText="width:80px;height:48px";var r=G.getContext("2d");return r.font="bold "+9*E+"px Helvetica,Arial,sans-serif",r.textBaseline="top",r.fillStyle=g,r.fillRect(0,0,i,o),r.fillStyle=I,r.fillText(A,D,a),r.fillRect(t,s,w,h),r.fillStyle=g,r.globalAlpha=.9,r.fillRect(t,s,w,h),{dom:G,update:function(o,e){B=Math.min(B,o),C=Math.max(C,o),r.fillStyle=g,r.globalAlpha=1,r.fillRect(0,0,i,s),r.fillStyle=I,r.fillText(Q(o)+" "+A+" ("+Q(B)+"-"+Q(C)+")",D,a),r.drawImage(G,t+E,s,w-E,h,t,s,w-E,h),r.fillRect(t+w-E,s,E,h),r.fillStyle=g,r.globalAlpha=.9,r.fillRect(t+w-E,s,E,Q((1-o/e)*h))}}},I)},477:A=>{"use strict";A.exports=function(A,I,g,B){var C=self||window;try{try{var Q;try{Q=new C.Blob([A])}catch(I){(Q=new(C.BlobBuilder||C.WebKitBlobBuilder||C.MozBlobBuilder||C.MSBlobBuilder)).append(A),Q=Q.getBlob()}var E=C.URL||C.webkitURL,i=E.createObjectURL(Q),o=new C[I](i,g);return E.revokeObjectURL(i),o}catch(B){return new C[I]("data:application/javascript,".concat(encodeURIComponent(A)),g)}}catch(A){if(!B)throw Error("Inline worker is not supported");return new C[I](B,g)}}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";g.d(B,{default:()=>S});class A{static createContainer(A){if(A.container.create){const A=document.createElement("div");A.id="app";const I=document.createElement("canvas");I.id="canvas";const g=document.createElement("video");g.id="video",g.setAttribute("autoplay",""),g.setAttribute("muted",""),g.setAttribute("playsinline",""),A.appendChild(g),A.appendChild(I);const B=document.getElementById("loading");return document.body.insertBefore(A,B),{container:A,canvas:I,video:g}}return{container:document.getElementById(A.container.containerName),canvas:document.getElementById(A.container.canvasName),video:document.getElementById("video")}}static createStats(A,I){if(A&&I.stats.createHtml){const A=document.createElement("div");A.id="stats",A.className="ui stats";const I=document.createElement("div");I.id="stats1",I.className="stats-item";const g=document.createElement("p");g.className="stats-item-title",g.innerText="Main",I.appendChild(g),A.appendChild(I);const B=document.createElement("div");B.id="stats2",B.className="stats-item";const C=document.createElement("p");C.className="stats-item-title",C.innerText="Worker",B.appendChild(C),A.appendChild(B);const Q=document.getElementById("loading");return document.body.insertBefore(A,Q),A}}static createLoading(A){if(A.loading.create){const I=document.createElement("div");I.id="loading";const g=document.createElement("img");g.src=A.loading.logo.src,g.alt=A.loading.logo.alt;const B=document.createElement("span");return B.setAttribute("class","loading-text"),B.innerText=A.loading.loadingMessage,I.appendChild(g),I.appendChild(B),document.body.insertBefore(I,document.body.firstChild),I}}}var I=g(466),C=g.n(I);class Q{canvas_process;context_process;_video;_facing;vw;vh;w;h;pw;ph;ox;oy;target;targetFrameRate=60;imageDataCache;_frame;lastCache=0;constructor(A){this.canvas_process=document.createElement("canvas"),this.context_process=this.canvas_process.getContext("2d",{alpha:!1}),this._video=A,this.target=window||g.g,this._frame=0}get facing(){return this._facing}get height(){return this.vh}get width(){return this.vw}get video(){return this._video}get frame(){return this._frame}get canvasProcess(){return this.canvas_process}get contextProcess(){return this.context_process}getFrame(){return this._frame}getImage(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}get image(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}prepareImage(){this.vw=this._video.videoWidth,this.vh=this._video.videoHeight;var A=320/Math.max(this.vw,this.vh/3*4);this.w=Math.floor(this.vw*A),this.h=Math.floor(this.vh*A),this.pw=Math.floor(Math.max(this.w,this.h/3*4)),this.ph=Math.floor(Math.max(this.h,this.w/4*3)),this.ox=Math.floor((this.pw-this.w)/2),this.oy=Math.floor((this.ph-this.h)/2),this.canvas_process.width=this.pw,this.canvas_process.height=this.ph,this.context_process.fillStyle="black",this.context_process.fillRect(0,0,this.pw,this.ph)}async initialize(A){if(this._facing=A.facingMode||"environment",null!=A.targetFrameRate&&(this.targetFrameRate=A.targetFrameRate),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return Promise.reject("Sorry, Your device does not support this experience.");try{const I={audio:!1,video:{facingMode:this._facing,width:{min:A.width.min,max:A.width.max}}};if(navigator.mediaDevices.enumerateDevices){const A=await navigator.mediaDevices.enumerateDevices(),g=[];let B=0;A.forEach((function(A){"videoinput"==A.kind&&(g[B++]=A.deviceId)})),g.length>1&&(I.video.deviceId={exact:g[g.length-1]})}const g=await navigator.mediaDevices.getUserMedia(I);return this._video.srcObject=g,this._video=await new Promise((A=>{this._video.onloadedmetadata=()=>A(this._video)})),this.prepareImage(),!0}catch(A){return Promise.reject(A)}}destroy(){const A=this._video;this.target.addEventListener("stopVideoStreaming",(function(){const I=A.srcObject;if(console.log("stop streaming"),null!=I){I.getTracks().forEach((function(A){A.stop()})),A.srcObject=null;let g=document.getElementById("app");null!=g&&g.remove()}}))}}window||g.g;function E(A,I){var g=320/Math.max(A,I/3*4),B=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?window.outerWidth/A:1;let C=A*g,Q=I*g;return[A*B,I*B,Math.max(C,Q/3*4),Math.max(Q,C/4*3),C,Q]}async function i(A){try{const I=await fetch(A);if(!I.ok)throw new Error("HTTP error, status = "+I.status);return I.json()}catch(A){return Promise.reject(A)}}var o=g(477),D=g.n(o);function a(){return D()('(()=>{var A={801:function(A,I,g){var B;"undefined"!=typeof self&&self,B=()=>(()=>{var A={61:(A,I,g)=>{var B=g(698).default;function C(){"use strict";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E=Object.defineProperty||function(A,I,g){A[I]=g.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",D=i.asyncIterator||"@@asyncIterator",a=i.toStringTag||"@@toStringTag";function w(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{w({},"")}catch(A){w=function(A,I,g){return A[I]=g}}function s(A,I,g,B){var C=I&&I.prototype instanceof h?I:h,Q=Object.create(C.prototype),i=new J(B||[]);return E(Q,"_invoke",{value:M(A,g,i)}),Q}function t(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}I.wrap=s;var G={};function h(){}function F(){}function R(){}var r={};w(r,o,(function(){return this}));var y=Object.getPrototypeOf,e=y&&y(y(K([])));e&&e!==g&&Q.call(e,o)&&(r=e);var S=R.prototype=h.prototype=Object.create(r);function n(A){["next","throw","return"].forEach((function(I){w(A,I,(function(A){return this._invoke(I,A)}))}))}function N(A,I){function g(C,E,i,o){var D=t(A[C],A,E);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&Q.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;E(this,"_invoke",{value:function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}})}function M(A,I,g){var B="suspendedStart";return function(C,Q){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=c(E,g);if(i){if(i===G)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var o=t(A,I,g);if("normal"===o.type){if(B=g.done?"completed":"suspendedYield",o.arg===G)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B="completed",g.method="throw",g.arg=o.arg)}}}function c(A,I){var g=I.method,B=A.iterator[g];if(void 0===B)return I.delegate=null,"throw"===g&&A.iterator.return&&(I.method="return",I.arg=void 0,c(A,I),"throw"===I.method)||"return"!==g&&(I.method="throw",I.arg=new TypeError("The iterator does not provide a \'"+g+"\' method")),G;var C=t(B,A.iterator,I.arg);if("throw"===C.type)return I.method="throw",I.arg=C.arg,I.delegate=null,G;var Q=C.arg;return Q?Q.done?(I[A.resultName]=Q.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,G):Q:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,G)}function k(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function U(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function J(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(k,this),this.reset(!0)}function K(A){if(A){var I=A[o];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:Y}}function Y(){return{value:void 0,done:!0}}return F.prototype=R,E(S,"constructor",{value:R,configurable:!0}),E(R,"constructor",{value:F,configurable:!0}),F.displayName=w(R,a,"GeneratorFunction"),I.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===F||"GeneratorFunction"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,R):(A.__proto__=R,w(A,a,"GeneratorFunction")),A.prototype=Object.create(S),A},I.awrap=function(A){return{__await:A}},n(N.prototype),w(N.prototype,D,(function(){return this})),I.AsyncIterator=N,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new N(s(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},n(S),w(S,a,"Generator"),w(S,o,(function(){return this})),w(S,"toString",(function(){return"[object Generator]"})),I.keys=function(A){var I=Object(A),g=[];for(var B in I)g.push(B);return g.reverse(),function A(){for(;g.length;){var B=g.pop();if(B in I)return A.value=B,A.done=!1,A}return A.done=!0,A}},I.values=K,J.prototype={constructor:J,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(U),!A)for(var I in this)"t"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if("root"===C.tryLoc)return g("end");if(C.tryLoc<=this.prev){var i=Q.call(C,"catchLoc"),o=Q.call(C,"finallyLoc");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method="next",this.next=C.finallyLoc,G):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),G},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),U(g),G}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;U(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:K(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),G}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function B(g){var C=I[g];if(void 0!==C)return C.exports;var Q=I[g]={exports:{}};return A[g](Q,Q.exports,B),Q.exports}B.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return B.d(I,{a:I}),I},B.d=(A,I)=>{for(var g in I)B.o(I,g)&&!B.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},B.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var C={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function Q(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function E(A){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},E(A)}function i(A){var I=function(A,I){if("object"!==E(A)||null===A)return A;var g=A[Symbol.toPrimitive];if(void 0!==g){var B=g.call(A,"string");if("object"!==E(B))return B;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(A)}(A);return"symbol"===E(I)?I:String(I)}function o(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,i(B.key),B)}}function D(A,I,g){return I&&o(A.prototype,I),g&&o(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}function a(A,I,g){return(I=i(I))in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}B.d(C,{default:()=>_A});var w,s=B(687),t=B.n(s);const G=(w="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(A={}){var I,g;(A=void 0!==A?A:{}).ready=new Promise((function(A,B){I=A,g=B}));var B,C,Q=Object.assign({},A),E="./this.program",i=(A,I)=>{throw I},o="";"undefined"!=typeof document&&document.currentScript&&(o=document.currentScript.src),w&&(o=w),o=0!==o.indexOf("blob:")?o.substr(0,o.replace(/[?#].*/,"").lastIndexOf("/")+1):"",B=A=>{try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=qI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},C=(A,I,g)=>{var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=()=>{if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=qI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)};var D,a=A.print||console.log.bind(console),s=A.printErr||console.warn.bind(console);Object.assign(A,Q),Q=null,A.arguments&&A.arguments,A.thisProgram&&(E=A.thisProgram),A.quit&&(i=A.quit),A.wasmBinary&&(D=A.wasmBinary);var t,G=A.noExitRuntime||!0;"object"!=typeof WebAssembly&&m("no native wasm support detected");var h=!1;function F(A,I){A||m(I)}var R,r,y,e,S,n,N,M,c,k="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function U(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&k)return k.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function J(A,I){return A?U(r,A,I):""}function K(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function Y(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function L(){var I=t.buffer;A.HEAP8=R=new Int8Array(I),A.HEAP16=y=new Int16Array(I),A.HEAP32=S=new Int32Array(I),A.HEAPU8=r=new Uint8Array(I),A.HEAPU16=e=new Uint16Array(I),A.HEAPU32=n=new Uint32Array(I),A.HEAPF32=N=new Float32Array(I),A.HEAPF64=M=new Float64Array(I)}var d=[],l=[],q=[],H=0,u=null,f=null;function p(I){H++,A.monitorRunDependencies&&A.monitorRunDependencies(H)}function W(I){if(H--,A.monitorRunDependencies&&A.monitorRunDependencies(H),0==H&&(null!==u&&(clearInterval(u),u=null),f)){var g=f;f=null,g()}}function m(I){A.onAbort&&A.onAbort(I),s(I="Aborted("+I+")"),h=!0,I+=". Build with -sASSERTIONS for more info.";var B=new WebAssembly.RuntimeError(I);throw g(B),B}var b,Z,O,V,x="data:application/octet-stream;base64,";function T(A){return A.startsWith(x)}function X(A){try{if(A==b&&D)return new Uint8Array(D);var I=qI(A);if(I)return I;throw"both async and sync fetching of the wasm failed"}catch(A){m(A)}}function j(A,I,g){return function(A){return D||"function"!=typeof fetch?Promise.resolve().then((function(){return X(A)})):fetch(A,{credentials:"same-origin"}).then((function(I){if(!I.ok)throw"failed to load wasm binary file at \'"+A+"\'";return I.arrayBuffer()})).catch((function(){return X(A)}))}(A).then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(g,(function(A){s("failed to asynchronously prepare wasm: "+A),m(A)}))}T(b="data:application/octet-stream;base64,")||(Z=b,b=A.locateFile?A.locateFile(Z,o):o+Z);var v={62248:(A,I,g)=>{var B=J(A),C=J(I),Q=J(g);console.log(C+B,Q)},62387:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.log(Q+C,E,i)},62565:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.log(Q+C,E,i)},62743:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.log(Q+C,E,i)},62921:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.log(Q+C,E,i)},63099:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g);console.log(Q+C,E,B)},63242:(A,I,g)=>{var B=J(A),C=J(I),Q=J(g);console.error(C+B,Q)},63385:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.error(Q+C,E,i)},63567:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.error(Q+C,E,i)},63749:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.error(Q+C,E,i)},63931:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.error(Q+C,E,i)},64113:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g);console.error(Q+C,E,B)},64260:(A,I,g)=>{var B=J(A),C=J(I),Q=J(g);console.warn(C+B,Q)},64400:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.warn(Q+C,E,i)},64581:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.warn(Q+C,E,i)},64762:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.warn(Q+C,E,i)},64943:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g),i=J(B);console.warn(Q+C,E,i)},65124:(A,I,g,B)=>{var C=J(A),Q=J(I),E=J(g);console.warn(Q+C,E,B)}};function P(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function z(I){for(;I.length>0;)I.shift()(A)}function _(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){n[this.ptr+4>>2]=A},this.get_type=function(){return n[this.ptr+4>>2]},this.set_destructor=function(A){n[this.ptr+8>>2]=A},this.get_destructor=function(){return n[this.ptr+8>>2]},this.set_refcount=function(A){S[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,R[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=R[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,R[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=R[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=S[this.ptr>>2];S[this.ptr>>2]=A+1},this.release_ref=function(){var A=S[this.ptr>>2];return S[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){n[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return n[this.ptr+16>>2]},this.get_exception_ptr=function(){if(VI(this.get_type()))return n[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var $={isAbs:A=>"/"===A.charAt(0),splitPath:A=>/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1),normalizeArray:(A,I)=>{for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:A=>{var I=$.isAbs(A),g="/"===A.substr(-1);return(A=$.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:A=>{var I=$.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:A=>{if("/"===A)return"/";var I=(A=(A=$.normalize(A)).replace(/\\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return $.normalize(A.join("/"))},join2:(A,I)=>$.normalize(A+"/"+I)},AA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:QA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=$.isAbs(B)}return(I?"/":"")+(A=$.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||"."},relative:(A,I)=>{function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=AA.resolve(A).substr(1),I=AA.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}};function IA(A,I,g){var B=g>0?g:Y(A)+1,C=new Array(B),Q=K(A,C,0,C.length);return I&&(C.length=Q),C}var gA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){gA.ttys[A]={input:[],output:[],ops:I},QA.registerDevice(A,gA.stream_ops)},stream_ops:{open:function(A){var I=gA.ttys[A.node.rdev];if(!I)throw new QA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new QA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new QA.ErrnoError(29)}if(void 0===i&&0===Q)throw new QA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new QA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new QA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if("undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\\n"),!I)return null;A.input=IA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(a(U(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(a(U(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(s(U(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(s(U(A.output,0)),A.output=[])}}};function BA(A){m()}var CA={ops_table:null,mount:function(A){return CA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(QA.isBlkdev(g)||QA.isFIFO(g))throw new QA.ErrnoError(63);CA.ops_table||(CA.ops_table={dir:{node:{getattr:CA.node_ops.getattr,setattr:CA.node_ops.setattr,lookup:CA.node_ops.lookup,mknod:CA.node_ops.mknod,rename:CA.node_ops.rename,unlink:CA.node_ops.unlink,rmdir:CA.node_ops.rmdir,readdir:CA.node_ops.readdir,symlink:CA.node_ops.symlink},stream:{llseek:CA.stream_ops.llseek}},file:{node:{getattr:CA.node_ops.getattr,setattr:CA.node_ops.setattr},stream:{llseek:CA.stream_ops.llseek,read:CA.stream_ops.read,write:CA.stream_ops.write,allocate:CA.stream_ops.allocate,mmap:CA.stream_ops.mmap,msync:CA.stream_ops.msync}},link:{node:{getattr:CA.node_ops.getattr,setattr:CA.node_ops.setattr,readlink:CA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:CA.node_ops.getattr,setattr:CA.node_ops.setattr},stream:QA.chrdev_stream_ops}});var C=QA.createNode(A,I,g,B);return QA.isDir(C.mode)?(C.node_ops=CA.ops_table.dir.node,C.stream_ops=CA.ops_table.dir.stream,C.contents={}):QA.isFile(C.mode)?(C.node_ops=CA.ops_table.file.node,C.stream_ops=CA.ops_table.file.stream,C.usedBytes=0,C.contents=null):QA.isLink(C.mode)?(C.node_ops=CA.ops_table.link.node,C.stream_ops=CA.ops_table.link.stream):QA.isChrdev(C.mode)&&(C.node_ops=CA.ops_table.chrdev.node,C.stream_ops=CA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=QA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,QA.isDir(A.mode)?I.size=4096:QA.isFile(A.mode)?I.size=A.usedBytes:QA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&CA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw QA.genericErrors[44]},mknod:function(A,I,g,B){return CA.createNode(A,I,g,B)},rename:function(A,I,g){if(QA.isDir(A.mode)){var B;try{B=QA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new QA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=QA.lookupNode(A,I);for(var B in g.contents)throw new QA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=CA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!QA.isLink(A.mode))throw new QA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===R.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(CA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&QA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new QA.ErrnoError(28);return B},allocate:function(A,I,g){CA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!QA.isFile(A.node.mode))throw new QA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==R.buffer){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=BA()))throw new QA.ErrnoError(48);R.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){return CA.stream_ops.write(A,I,0,B,g,!1),0}}},QA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(A,I={})=>{if(!(A=AA.resolve(A)))return{path:"",node:null};if((I=Object.assign({follow_mount:!0,recurse_count:0},I)).recurse_count>8)throw new QA.ErrnoError(32);for(var g=A.split("/").filter((A=>!!A)),B=QA.root,C="/",Q=0;Q<g.length;Q++){var E=Q===g.length-1;if(E&&I.parent)break;if(B=QA.lookupNode(B,g[Q]),C=$.join2(C,g[Q]),QA.isMountpoint(B)&&(!E||E&&I.follow_mount)&&(B=B.mounted.root),!E||I.follow)for(var i=0;QA.isLink(B.mode);){var o=QA.readlink(C);if(C=AA.resolve($.dirname(C),o),B=QA.lookupPath(C,{recurse_count:I.recurse_count+1}).node,i++>40)throw new QA.ErrnoError(32)}}return{path:C,node:B}},getPath:A=>{for(var I;;){if(QA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:(A,I)=>{for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%QA.nameTable.length},hashAddNode:A=>{var I=QA.hashName(A.parent.id,A.name);A.name_next=QA.nameTable[I],QA.nameTable[I]=A},hashRemoveNode:A=>{var I=QA.hashName(A.parent.id,A.name);if(QA.nameTable[I]===A)QA.nameTable[I]=A.name_next;else for(var g=QA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:(A,I)=>{var g=QA.mayLookup(A);if(g)throw new QA.ErrnoError(g,A);for(var B=QA.hashName(A.id,I),C=QA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return QA.lookup(A,I)},createNode:(A,I,g,B)=>{var C=new QA.FSNode(A,I,g,B);return QA.hashAddNode(C),C},destroyNode:A=>{QA.hashRemoveNode(A)},isRoot:A=>A===A.parent,isMountpoint:A=>!!A.mounted,isFile:A=>32768==(61440&A),isDir:A=>16384==(61440&A),isLink:A=>40960==(61440&A),isChrdev:A=>8192==(61440&A),isBlkdev:A=>24576==(61440&A),isFIFO:A=>4096==(61440&A),isSocket:A=>49152==(49152&A),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:A=>{var I=QA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:A=>{var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:(A,I)=>QA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2,mayLookup:A=>QA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2),mayCreate:(A,I)=>{try{return QA.lookupNode(A,I),20}catch(A){}return QA.nodePermissions(A,"wx")},mayDelete:(A,I,g)=>{var B;try{B=QA.lookupNode(A,I)}catch(A){return A.errno}var C=QA.nodePermissions(A,"wx");if(C)return C;if(g){if(!QA.isDir(B.mode))return 54;if(QA.isRoot(B)||QA.getPath(B)===QA.cwd())return 10}else if(QA.isDir(B.mode))return 31;return 0},mayOpen:(A,I)=>A?QA.isLink(A.mode)?32:QA.isDir(A.mode)&&("r"!==QA.flagsToPermissionString(I)||512&I)?31:QA.nodePermissions(A,QA.flagsToPermissionString(I)):44,MAX_OPEN_FDS:4096,nextfd:(A=0,I=QA.MAX_OPEN_FDS)=>{for(var g=A;g<=I;g++)if(!QA.streams[g])return g;throw new QA.ErrnoError(33)},getStream:A=>QA.streams[A],createStream:(A,I,g)=>{QA.FSStream||(QA.FSStream=function(){this.shared={}},QA.FSStream.prototype={},Object.defineProperties(QA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new QA.FSStream,A);var B=QA.nextfd(I,g);return A.fd=B,QA.streams[B]=A,A},closeStream:A=>{QA.streams[A]=null},chrdev_stream_ops:{open:A=>{var I=QA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:()=>{throw new QA.ErrnoError(70)}},major:A=>A>>8,minor:A=>255&A,makedev:(A,I)=>A<<8|I,registerDevice:(A,I)=>{QA.devices[A]={stream_ops:I}},getDevice:A=>QA.devices[A],getMounts:A=>{for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:(A,I)=>{"function"==typeof A&&(I=A,A=!1),QA.syncFSRequests++,QA.syncFSRequests>1&&s("warning: "+QA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=QA.getMounts(QA.root.mount),B=0;function C(A){return QA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((I=>{if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:(A,I,g)=>{var B,C="/"===g,Q=!g;if(C&&QA.root)throw new QA.ErrnoError(10);if(!C&&!Q){var E=QA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,QA.isMountpoint(B))throw new QA.ErrnoError(10);if(!QA.isDir(B.mode))throw new QA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?QA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:A=>{var I=QA.lookupPath(A,{follow_mount:!1});if(!QA.isMountpoint(I.node))throw new QA.ErrnoError(28);var g=I.node,B=g.mounted,C=QA.getMounts(B);Object.keys(QA.nameTable).forEach((A=>{for(var I=QA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&QA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:(A,I)=>A.node_ops.lookup(A,I),mknod:(A,I,g)=>{var B=QA.lookupPath(A,{parent:!0}).node,C=$.basename(A);if(!C||"."===C||".."===C)throw new QA.ErrnoError(28);var Q=QA.mayCreate(B,C);if(Q)throw new QA.ErrnoError(Q);if(!B.node_ops.mknod)throw new QA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:(A,I)=>(I=void 0!==I?I:438,I&=4095,I|=32768,QA.mknod(A,I,0)),mkdir:(A,I)=>(I=void 0!==I?I:511,I&=1023,I|=16384,QA.mknod(A,I,0)),mkdirTree:(A,I)=>{for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{QA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:(A,I,g)=>(void 0===g&&(g=I,I=438),I|=8192,QA.mknod(A,I,g)),symlink:(A,I)=>{if(!AA.resolve(A))throw new QA.ErrnoError(44);var g=QA.lookupPath(I,{parent:!0}).node;if(!g)throw new QA.ErrnoError(44);var B=$.basename(I),C=QA.mayCreate(g,B);if(C)throw new QA.ErrnoError(C);if(!g.node_ops.symlink)throw new QA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:(A,I)=>{var g,B,C=$.dirname(A),Q=$.dirname(I),E=$.basename(A),i=$.basename(I);if(g=QA.lookupPath(A,{parent:!0}).node,B=QA.lookupPath(I,{parent:!0}).node,!g||!B)throw new QA.ErrnoError(44);if(g.mount!==B.mount)throw new QA.ErrnoError(75);var o,D=QA.lookupNode(g,E),a=AA.relative(A,Q);if("."!==a.charAt(0))throw new QA.ErrnoError(28);if("."!==(a=AA.relative(I,C)).charAt(0))throw new QA.ErrnoError(55);try{o=QA.lookupNode(B,i)}catch(A){}if(D!==o){var w=QA.isDir(D.mode),s=QA.mayDelete(g,E,w);if(s)throw new QA.ErrnoError(s);if(s=o?QA.mayDelete(B,i,w):QA.mayCreate(B,i))throw new QA.ErrnoError(s);if(!g.node_ops.rename)throw new QA.ErrnoError(63);if(QA.isMountpoint(D)||o&&QA.isMountpoint(o))throw new QA.ErrnoError(10);if(B!==g&&(s=QA.nodePermissions(g,"w")))throw new QA.ErrnoError(s);QA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{QA.hashAddNode(D)}}},rmdir:A=>{var I=QA.lookupPath(A,{parent:!0}).node,g=$.basename(A),B=QA.lookupNode(I,g),C=QA.mayDelete(I,g,!0);if(C)throw new QA.ErrnoError(C);if(!I.node_ops.rmdir)throw new QA.ErrnoError(63);if(QA.isMountpoint(B))throw new QA.ErrnoError(10);I.node_ops.rmdir(I,g),QA.destroyNode(B)},readdir:A=>{var I=QA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new QA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:A=>{var I=QA.lookupPath(A,{parent:!0}).node;if(!I)throw new QA.ErrnoError(44);var g=$.basename(A),B=QA.lookupNode(I,g),C=QA.mayDelete(I,g,!1);if(C)throw new QA.ErrnoError(C);if(!I.node_ops.unlink)throw new QA.ErrnoError(63);if(QA.isMountpoint(B))throw new QA.ErrnoError(10);I.node_ops.unlink(I,g),QA.destroyNode(B)},readlink:A=>{var I=QA.lookupPath(A).node;if(!I)throw new QA.ErrnoError(44);if(!I.node_ops.readlink)throw new QA.ErrnoError(28);return AA.resolve(QA.getPath(I.parent),I.node_ops.readlink(I))},stat:(A,I)=>{var g=QA.lookupPath(A,{follow:!I}).node;if(!g)throw new QA.ErrnoError(44);if(!g.node_ops.getattr)throw new QA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:A=>QA.stat(A,!0),chmod:(A,I,g)=>{var B;if(!(B="string"==typeof A?QA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new QA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:(A,I)=>{QA.chmod(A,I,!0)},fchmod:(A,I)=>{var g=QA.getStream(A);if(!g)throw new QA.ErrnoError(8);QA.chmod(g.node,I)},chown:(A,I,g,B)=>{var C;if(!(C="string"==typeof A?QA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new QA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:(A,I,g)=>{QA.chown(A,I,g,!0)},fchown:(A,I,g)=>{var B=QA.getStream(A);if(!B)throw new QA.ErrnoError(8);QA.chown(B.node,I,g)},truncate:(A,I)=>{if(I<0)throw new QA.ErrnoError(28);var g;if(!(g="string"==typeof A?QA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new QA.ErrnoError(63);if(QA.isDir(g.mode))throw new QA.ErrnoError(31);if(!QA.isFile(g.mode))throw new QA.ErrnoError(28);var B=QA.nodePermissions(g,"w");if(B)throw new QA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:(A,I)=>{var g=QA.getStream(A);if(!g)throw new QA.ErrnoError(8);if(0==(2097155&g.flags))throw new QA.ErrnoError(28);QA.truncate(g.node,I)},utime:(A,I,g)=>{var B=QA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:(I,g,B)=>{if(""===I)throw new QA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?QA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==typeof I)C=I;else{I=$.normalize(I);try{C=QA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new QA.ErrnoError(20)}else C=QA.mknod(I,B,0),Q=!0;if(!C)throw new QA.ErrnoError(44);if(QA.isChrdev(C.mode)&&(g&=-513),65536&g&&!QA.isDir(C.mode))throw new QA.ErrnoError(54);if(!Q){var E=QA.mayOpen(C,g);if(E)throw new QA.ErrnoError(E)}512&g&&!Q&&QA.truncate(C,0),g&=-131713;var i=QA.createStream({node:C,path:QA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(QA.readFiles||(QA.readFiles={}),I in QA.readFiles||(QA.readFiles[I]=1)),i},close:A=>{if(QA.isClosed(A))throw new QA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{QA.closeStream(A.fd)}A.fd=null},isClosed:A=>null===A.fd,llseek:(A,I,g)=>{if(QA.isClosed(A))throw new QA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new QA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new QA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:(A,I,g,B,C)=>{if(B<0||C<0)throw new QA.ErrnoError(28);if(QA.isClosed(A))throw new QA.ErrnoError(8);if(1==(2097155&A.flags))throw new QA.ErrnoError(8);if(QA.isDir(A.node.mode))throw new QA.ErrnoError(31);if(!A.stream_ops.read)throw new QA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new QA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:(A,I,g,B,C,Q)=>{if(B<0||C<0)throw new QA.ErrnoError(28);if(QA.isClosed(A))throw new QA.ErrnoError(8);if(0==(2097155&A.flags))throw new QA.ErrnoError(8);if(QA.isDir(A.node.mode))throw new QA.ErrnoError(31);if(!A.stream_ops.write)throw new QA.ErrnoError(28);A.seekable&&1024&A.flags&&QA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new QA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:(A,I,g)=>{if(QA.isClosed(A))throw new QA.ErrnoError(8);if(I<0||g<=0)throw new QA.ErrnoError(28);if(0==(2097155&A.flags))throw new QA.ErrnoError(8);if(!QA.isFile(A.node.mode)&&!QA.isDir(A.node.mode))throw new QA.ErrnoError(43);if(!A.stream_ops.allocate)throw new QA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:(A,I,g,B,C)=>{if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new QA.ErrnoError(2);if(1==(2097155&A.flags))throw new QA.ErrnoError(2);if(!A.stream_ops.mmap)throw new QA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:(A,I,g,B,C)=>A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0,munmap:A=>0,ioctl:(A,I,g)=>{if(!A.stream_ops.ioctl)throw new QA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:(A,I={})=>{if(I.flags=I.flags||0,I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error(\'Invalid encoding type "\'+I.encoding+\'"\');var g,B=QA.open(A,I.flags),C=QA.stat(A).size,Q=new Uint8Array(C);return QA.read(B,Q,0,C,0),"utf8"===I.encoding?g=U(Q,0):"binary"===I.encoding&&(g=Q),QA.close(B),g},writeFile:(A,I,g={})=>{g.flags=g.flags||577;var B=QA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(Y(I)+1),Q=K(I,C,0,C.length);QA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");QA.write(B,I,0,I.byteLength,void 0,g.canOwn)}QA.close(B)},cwd:()=>QA.currentPath,chdir:A=>{var I=QA.lookupPath(A,{follow:!0});if(null===I.node)throw new QA.ErrnoError(44);if(!QA.isDir(I.node.mode))throw new QA.ErrnoError(54);var g=QA.nodePermissions(I.node,"x");if(g)throw new QA.ErrnoError(g);QA.currentPath=I.path},createDefaultDirectories:()=>{QA.mkdir("/tmp"),QA.mkdir("/home"),QA.mkdir("/home/web_user")},createDefaultDevices:()=>{QA.mkdir("/dev"),QA.registerDevice(QA.makedev(1,3),{read:()=>0,write:(A,I,g,B,C)=>B}),QA.mkdev("/dev/null",QA.makedev(1,3)),gA.register(QA.makedev(5,0),gA.default_tty_ops),gA.register(QA.makedev(6,0),gA.default_tty1_ops),QA.mkdev("/dev/tty",QA.makedev(5,0)),QA.mkdev("/dev/tty1",QA.makedev(6,0));var A=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return()=>(crypto.getRandomValues(A),A[0])}return()=>m("randomDevice")}();QA.createDevice("/dev","random",A),QA.createDevice("/dev","urandom",A),QA.mkdir("/dev/shm"),QA.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{QA.mkdir("/proc");var A=QA.mkdir("/proc/self");QA.mkdir("/proc/self/fd"),QA.mount({mount:()=>{var I=QA.createNode(A,"fd",16895,73);return I.node_ops={lookup:(A,I)=>{var g=+I,B=QA.getStream(g);if(!B)throw new QA.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>B.path}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams:()=>{A.stdin?QA.createDevice("/dev","stdin",A.stdin):QA.symlink("/dev/tty","/dev/stdin"),A.stdout?QA.createDevice("/dev","stdout",null,A.stdout):QA.symlink("/dev/tty","/dev/stdout"),A.stderr?QA.createDevice("/dev","stderr",null,A.stderr):QA.symlink("/dev/tty1","/dev/stderr"),QA.open("/dev/stdin",0),QA.open("/dev/stdout",1),QA.open("/dev/stderr",1)},ensureErrnoError:()=>{QA.ErrnoError||(QA.ErrnoError=function(A,I){this.name="ErrnoError",this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},QA.ErrnoError.prototype=new Error,QA.ErrnoError.prototype.constructor=QA.ErrnoError,[44].forEach((A=>{QA.genericErrors[A]=new QA.ErrnoError(A),QA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:()=>{QA.ensureErrnoError(),QA.nameTable=new Array(4096),QA.mount(CA,{},"/"),QA.createDefaultDirectories(),QA.createDefaultDevices(),QA.createSpecialDirectories(),QA.filesystems={MEMFS:CA}},init:(I,g,B)=>{QA.init.initialized=!0,QA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,QA.createStandardStreams()},quit:()=>{QA.init.initialized=!1;for(var A=0;A<QA.streams.length;A++){var I=QA.streams[A];I&&QA.close(I)}},getMode:(A,I)=>{var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:(A,I)=>{var g=QA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:(A,I)=>{try{A=(B=QA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=QA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=$.basename(A),B=QA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:(A,I,g,B)=>{A="string"==typeof A?A:QA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=$.join2(A,Q);try{QA.mkdir(E)}catch(A){}A=E}}return E},createFile:(A,I,g,B,C)=>{var Q=$.join2("string"==typeof A?A:QA.getPath(A),I),E=QA.getMode(B,C);return QA.create(Q,E)},createDataFile:(A,I,g,B,C,Q)=>{var E=I;A&&(A="string"==typeof A?A:QA.getPath(A),E=I?$.join2(A,I):A);var i=QA.getMode(B,C),o=QA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}QA.chmod(o,146|i);var s=QA.open(o,577);QA.write(s,g,0,g.length,0,Q),QA.close(s),QA.chmod(o,i)}return o},createDevice:(A,I,g,B)=>{var C=$.join2("string"==typeof A?A:QA.getPath(A),I),Q=QA.getMode(!!g,!!B);QA.createDevice.major||(QA.createDevice.major=64);var E=QA.makedev(QA.createDevice.major++,0);return QA.registerDevice(E,{open:A=>{A.seekable=!1},close:A=>{B&&B.buffer&&B.buffer.length&&B(10)},read:(A,I,B,C,Q)=>{for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new QA.ErrnoError(29)}if(void 0===o&&0===E)throw new QA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:(A,I,g,C,Q)=>{for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new QA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),QA.mkdev(C,Q,E)},forceLoadFile:A=>{if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!B)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=IA(B(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new QA.ErrnoError(29)}},createLazyFile:(A,I,g,B,C)=>{function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn\'t load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((A=>{var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=((A,I)=>{if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),C.responseType="arraybuffer",C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn\'t load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):IA(C.responseText||"",!0)})(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,a("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E={isDevice:!1,url:g},i=QA.createFile(A,I,E,B,C);E.contents?i.contents=E.contents:E.url&&(i.contents=null,i.url=E.url),Object.defineProperties(i,{usedBytes:{get:function(){return this.contents.length}}});var o={};function D(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(i.stream_ops).forEach((A=>{var I=i.stream_ops[A];o[A]=function(){return QA.forceLoadFile(i),I.apply(null,arguments)}})),o.read=(A,I,g,B,C)=>(QA.forceLoadFile(i),D(A,I,g,B,C)),o.mmap=(A,I,g,B,C)=>{QA.forceLoadFile(i);var Q=BA();if(!Q)throw new QA.ErrnoError(48);return D(A,R,Q,I,g),{ptr:Q,allocated:!0}},i.stream_ops=o,i},createPreloadedFile:(A,I,g,B,Q,E,i,o,D,a)=>{var w=I?AA.resolve($.join2(A,I)):A;function s(g){function C(g){a&&a(),o||QA.createDataFile(A,I,g,B,Q,D),E&&E(),W()}Browser.handledByPreloadPlugin(g,w,C,(()=>{i&&i(),W()}))||C(g)}p(),"string"==typeof g?function(A,I,g,B){var Q="al "+A;C(A,(I=>{F(I,\'Loading data file "\'+A+\'" failed (no arrayBuffer).\'),s(new Uint8Array(I)),Q&&W()}),(I=>{if(!g)throw\'Loading data file "\'+A+\'" failed.\';g()})),Q&&p()}(g,0,i):s(g)},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(A,I=(()=>{}),g=(()=>{}))=>{var B=QA.indexedDB();try{var C=B.open(QA.DB_NAME(),QA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=()=>{a("creating db"),C.result.createObjectStore(QA.DB_STORE_NAME)},C.onsuccess=()=>{var B=C.result.transaction([QA.DB_STORE_NAME],"readwrite"),Q=B.objectStore(QA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((A=>{var I=Q.put(QA.analyzePath(A).object.contents,A);I.onsuccess=()=>{++E+i==o&&D()},I.onerror=()=>{i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:(A,I=(()=>{}),g=(()=>{}))=>{var B=QA.indexedDB();try{var C=B.open(QA.DB_NAME(),QA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=()=>{var B=C.result;try{var Q=B.transaction([QA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(QA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((A=>{var I=E.get(A);I.onsuccess=()=>{QA.analyzePath(A).exists&&QA.unlink(A),QA.createDataFile($.dirname(A),$.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=()=>{o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},EA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if($.isAbs(I))return I;var B;if(B=-100===A?QA.cwd():EA.getStreamFromFD(A).path,0==I.length){if(!g)throw new QA.ErrnoError(44);return B}return $.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&$.normalize(I)!==$.normalize(QA.getPath(A.node)))return-54;throw A}S[g>>2]=B.dev,S[g+8>>2]=B.ino,S[g+12>>2]=B.mode,n[g+16>>2]=B.nlink,S[g+20>>2]=B.uid,S[g+24>>2]=B.gid,S[g+28>>2]=B.rdev,V=[B.size>>>0,(O=B.size,+Math.abs(O)>=1?O>0?(0|Math.min(+Math.floor(O/4294967296),4294967295))>>>0:~~+Math.ceil((O-+(~~O>>>0))/4294967296)>>>0:0)],S[g+40>>2]=V[0],S[g+44>>2]=V[1],S[g+48>>2]=4096,S[g+52>>2]=B.blocks;var C=B.atime.getTime(),Q=B.mtime.getTime(),E=B.ctime.getTime();return V=[Math.floor(C/1e3)>>>0,(O=Math.floor(C/1e3),+Math.abs(O)>=1?O>0?(0|Math.min(+Math.floor(O/4294967296),4294967295))>>>0:~~+Math.ceil((O-+(~~O>>>0))/4294967296)>>>0:0)],S[g+56>>2]=V[0],S[g+60>>2]=V[1],n[g+64>>2]=C%1e3*1e3,V=[Math.floor(Q/1e3)>>>0,(O=Math.floor(Q/1e3),+Math.abs(O)>=1?O>0?(0|Math.min(+Math.floor(O/4294967296),4294967295))>>>0:~~+Math.ceil((O-+(~~O>>>0))/4294967296)>>>0:0)],S[g+72>>2]=V[0],S[g+76>>2]=V[1],n[g+80>>2]=Q%1e3*1e3,V=[Math.floor(E/1e3)>>>0,(O=Math.floor(E/1e3),+Math.abs(O)>=1?O>0?(0|Math.min(+Math.floor(O/4294967296),4294967295))>>>0:~~+Math.ceil((O-+(~~O>>>0))/4294967296)>>>0:0)],S[g+88>>2]=V[0],S[g+92>>2]=V[1],n[g+96>>2]=E%1e3*1e3,V=[B.ino>>>0,(O=B.ino,+Math.abs(O)>=1?O>0?(0|Math.min(+Math.floor(O/4294967296),4294967295))>>>0:~~+Math.ceil((O-+(~~O>>>0))/4294967296)>>>0:0)],S[g+104>>2]=V[0],S[g+108>>2]=V[1],0},doMsync:function(A,I,g,B,C){if(!QA.isFile(I.node.mode))throw new QA.ErrnoError(43);if(2&B)return 0;var Q=r.slice(A,A+g);QA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return EA.varargs+=4,S[EA.varargs-4>>2]},getStr:function(A){return J(A)},getStreamFromFD:function(A){var I=QA.getStream(A);if(!I)throw new QA.ErrnoError(8);return I}},iA={};function oA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function DA(A){return this.fromWireType(S[A>>2])}var aA={},wA={},sA={};function tA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?"_"+A:A}function GA(A,I){return{[A=tA(A)]:function(){return I.apply(this,arguments)}}[A]}function hA(A,I){var g=GA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\\n"+g.replace(/^Error(:[^\\n]*)?\\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var FA=void 0;function RA(A){throw new FA(A)}function rA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&RA("Mismatched type converter count");for(var C=0;C<A.length;++C)MA(A[C],B[C])}A.forEach((function(A){sA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach(((A,I)=>{wA.hasOwnProperty(A)?C[I]=wA[A]:(Q.push(A),aA.hasOwnProperty(A)||(aA[A]=[]),aA[A].push((()=>{C[I]=wA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function yA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var eA=void 0;function SA(A){for(var I="",g=A;r[g];)I+=eA[r[g++]];return I}var nA=void 0;function NA(A){throw new nA(A)}function MA(A,I,g={}){if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||NA(\'type "\'+B+\'" must have a positive integer typeid pointer\'),wA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;NA("Cannot register type \'"+B+"\' twice")}if(wA[A]=I,delete sA[A],aA.hasOwnProperty(A)){var C=aA[A];delete aA[A],C.forEach((A=>A()))}}function cA(A){NA(A.$$.ptrType.registeredClass.name+" instance already deleted")}var kA=!1;function UA(A){}function JA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function KA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=KA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var YA={},LA=[];function dA(){for(;LA.length;){var A=LA.pop();A.$$.deleteScheduled=!1,A.delete()}}var lA=void 0,qA={};function HA(A,I){return I.ptrType&&I.ptr||RA("makeClassHandle requires ptr and ptrType"),!!I.smartPtrType!=!!I.smartPtr&&RA("Both smartPtrType and smartPtr must be specified"),I.count={value:1},uA(Object.create(A,{$$:{value:I}}))}function uA(A){return"undefined"==typeof FinalizationRegistry?(uA=A=>A,A):(kA=new FinalizationRegistry((A=>{JA(A.$$)})),uA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};kA.register(A,g,A)}return A},UA=A=>kA.unregister(A),uA(A))}function fA(){}function pA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||NA("Function \'"+g+"\' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function WA(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&NA("Cannot register public name \'"+I+"\' twice"),pA(A,I,I),A.hasOwnProperty(B)&&NA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function mA(A,I,g,B,C,Q,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=C,this.getActualType=Q,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function bA(A,I,g){for(;I!==g;)I.upcast||NA("Expected null or instance of "+g.name+", got an instance of "+I.name),A=I.upcast(A),I=I.baseClass;return A}function ZA(A,I){if(null===I)return this.isReference&&NA("null is not a valid "+this.name),0;I.$$||NA(\'Cannot pass "\'+EI(I)+\'" as a \'+this.name),I.$$.ptr||NA("Cannot pass deleted object as a pointer of type "+this.name);var g=I.$$.ptrType.registeredClass;return bA(I.$$.ptr,g,this.registeredClass)}function OA(A,I){var g;if(null===I)return this.isReference&&NA("null is not a valid "+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||NA(\'Cannot pass "\'+EI(I)+\'" as a \'+this.name),I.$$.ptr||NA("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&I.$$.ptrType.isConst&&NA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);var B=I.$$.ptrType.registeredClass;if(g=bA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&NA("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:NA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var C=I.clone();g=this.rawShare(g,QI.toHandle((function(){C.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:NA("Unsupporting sharing policy")}return g}function VA(A,I){if(null===I)return this.isReference&&NA("null is not a valid "+this.name),0;I.$$||NA(\'Cannot pass "\'+EI(I)+\'" as a \'+this.name),I.$$.ptr||NA("Cannot pass deleted object as a pointer of type "+this.name),I.$$.ptrType.isConst&&NA("Cannot convert argument of type "+I.$$.ptrType.name+" to parameter type "+this.name);var g=I.$$.ptrType.registeredClass;return bA(I.$$.ptr,g,this.registeredClass)}function xA(A,I,g,B,C,Q,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=C,this.pointeeType=Q,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,C||void 0!==I.baseClass?this.toWireType=OA:B?(this.toWireType=ZA,this.destructorFunction=null):(this.toWireType=VA,this.destructorFunction=null)}function TA(I,g,B){A.hasOwnProperty(I)||RA("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function XA(A){return c.get(A)}function jA(I,g,B){return I.includes("j")?function(I,g,B){var C=A["dynCall_"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):XA(g).apply(null,B)}function vA(A,I){var g,B,C,Q=(A=SA(A)).includes("j")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),jA(g,B,C)}):XA(I);return"function"!=typeof Q&&NA("unknown function pointer with signature "+A+": "+I),Q}var PA=void 0;function zA(A){var I=mI(A),g=SA(I);return pI(I),g}function _A(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||wA[I]||(sA[I]?sA[I].forEach(A):(g.push(I),B[I]=!0))})),new PA(A+": "+g.map(zA).join([", "]))}function $A(A,I){for(var g=[],B=0;B<A;B++)g.push(n[I+4*B>>2]);return g}function AI(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+typeof A+" which is not a function");var g=GA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}function II(A,I,g,B,C){var Q=I.length;Q<2&&NA("argTypes array size mismatch! Must at least get return value and \'this\' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D="void"!==I[0].name,a="",w="";for(o=0;o<Q-2;++o)a+=(0!==o?", ":"")+"arg"+o,w+=(0!==o?", ":"")+"arg"+o+"Wired";var s="return function "+tA(A)+"("+a+") {\\nif (arguments.length !== "+(Q-2)+") {\\nthrowBindingError(\'function "+A+" called with \' + arguments.length + \' arguments, expected "+(Q-2)+" args!\');\\n}\\n";i&&(s+="var destructors = [];\\n");var t=i?"destructors":"null",G=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],h=[NA,B,C,oA,I[0],I[1]];for(E&&(s+="var thisWired = classParam.toWireType("+t+", this);\\n"),o=0;o<Q-2;++o)s+="var arg"+o+"Wired = argType"+o+".toWireType("+t+", arg"+o+"); // "+I[o+2].name+"\\n",G.push("argType"+o),h.push(I[o+2]);if(E&&(w="thisWired"+(w.length>0?", ":"")+w),s+=(D?"var rv = ":"")+"invoker(fn"+(w.length>0?", ":"")+w+");\\n",i)s+="runDestructors(destructors);\\n";else for(o=E?1:2;o<I.length;++o){var F=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(s+=F+"_dtor("+F+"); // "+I[o].name+"\\n",G.push(F+"_dtor"),h.push(I[o].destructorFunction))}return D&&(s+="var ret = retType.fromWireType(rv);\\nreturn ret;\\n"),s+="}\\n",G.push(s),AI(Function,G).apply(null,h)}var gI=[],BI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function CI(A){A>4&&0==--BI[A].refcount&&(BI[A]=void 0,gI.push(A))}var QI={toValue:A=>(A||NA("Cannot use deleted val. handle = "+A),BI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=gI.length?gI.pop():BI.length;return BI[I]={refcount:1,value:A},I}}};function EI(A){if(null===A)return"null";var I=typeof A;return"object"===I||"array"===I||"function"===I?A.toString():""+A}function iI(A,I){switch(I){case 2:return function(A){return this.fromWireType(N[A>>2])};case 3:return function(A){return this.fromWireType(M[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function oI(A,I,g){switch(I){case 0:return g?function(A){return R[A]}:function(A){return r[A]};case 1:return g?function(A){return y[A>>1]}:function(A){return e[A>>1]};case 2:return g?function(A){return S[A>>2]}:function(A){return n[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var DI="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function aI(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&e[B];)++B;if((g=B<<1)-A>32&&DI)return DI.decode(r.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=y[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function wI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);y[I>>1]=E,I+=2}return y[I>>1]=0,I-B}function sI(A){return 2*A.length}function tI(A,I){for(var g=0,B="";!(g>=I/4);){var C=S[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function GI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),S[I>>2]=E,(I+=4)+4>C)break}return S[I>>2]=0,I-B}function hI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function FI(A,I){var g=wA[A];return void 0===g&&NA(I+" has unknown type "+zA(A)),g}var RI={};function rI(A){var I=RI[A];return void 0===I?SA(A):I}var yI=[],eI=[];function SI(A){return A%4==0&&(A%100!=0||A%400==0)}var nI=[0,31,60,91,121,152,182,213,244,274,305,335],NI=[0,31,59,90,120,151,181,212,243,273,304,334];function MI(A){var I=Y(A)+1,g=fI(I);return g&&K(A,R,g,I),g}var cI=[];function kI(A){var I=t.buffer;try{return t.grow(A-I.byteLength+65535>>>16),L(),1}catch(A){}}var UI={};function JI(){if(!JI.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:E||"./this.program"};for(var I in UI)void 0===UI[I]?delete A[I]:A[I]=UI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);JI.strings=g}return JI.strings}var KI=[31,29,31,30,31,30,31,31,30,31,30,31],YI=[31,28,31,30,31,30,31,31,30,31,30,31];function LI(A,I,g,B){var C=S[B+40>>2],Q={tm_sec:S[B>>2],tm_min:S[B+4>>2],tm_hour:S[B+8>>2],tm_mday:S[B+12>>2],tm_mon:S[B+16>>2],tm_year:S[B+20>>2],tm_wday:S[B+24>>2],tm_yday:S[B+28>>2],tm_isdst:S[B+32>>2],tm_gmtoff:S[B+36>>2],tm_zone:C?J(C):""},E=J(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,"0")}function t(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function G(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=SI(g.getFullYear()),C=g.getMonth(),Q=(B?KI:YI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=G(g),Q=G(B);return t(C,I)<=0?t(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var F={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return s((A.tm_year+1900)/100|0,2)},"%d":function(A){return s(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return s(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},"%j":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(SI(A.tm_year+1900)?KI:YI,A.tm_mon-1),3)},"%m":function(A){return s(A.tm_mon+1,2)},"%M":function(A){return s(A.tm_min,2)},"%n":function(){return"\\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return s(A.tm_sec,2)},"%t":function(){return"\\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&SI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&SI(A.tm_year%400-1))&&I++}return s(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\\0\\0"),F)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),F[o](Q)));var r,y,e=IA(E=E.replace(/\\0\\0/g,"%"),!1);return e.length>I?0:(r=e,y=A,R.set(r,y),e.length-1)}var dI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=QA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(dI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return QA.isDir(this.mode)}},isDevice:{get:function(){return QA.isChrdev(this.mode)}}}),QA.FSNode=dI,QA.staticInit(),FA=A.InternalError=hA(Error,"InternalError"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);eA=A}(),nA=A.BindingError=hA(Error,"BindingError"),fA.prototype.isAliasOf=function(A){if(!(this instanceof fA))return!1;if(!(A instanceof fA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,C=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)C=B.upcast(C),B=B.baseClass;return I===B&&g===C},fA.prototype.clone=function(){if(this.$$.ptr||cA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=uA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},fA.prototype.delete=function(){this.$$.ptr||cA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&NA("Object already scheduled for deletion"),UA(this),JA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},fA.prototype.isDeleted=function(){return!this.$$.ptr},fA.prototype.deleteLater=function(){return this.$$.ptr||cA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&NA("Object already scheduled for deletion"),LA.push(this),1===LA.length&&lA&&lA(dA),this.$$.deleteScheduled=!0,this},A.getInheritedInstanceCount=function(){return Object.keys(qA).length},A.getLiveInheritedInstances=function(){var A=[];for(var I in qA)qA.hasOwnProperty(I)&&A.push(qA[I]);return A},A.flushPendingDeletes=dA,A.setDelayFunction=function(A){lA=A,LA.length&&lA&&lA(dA)},xA.prototype.getPointee=function(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},xA.prototype.destructor=function(A){this.rawDestructor&&this.rawDestructor(A)},xA.prototype.argPackAdvance=8,xA.prototype.readValueFromPointer=DA,xA.prototype.deleteObject=function(A){null!==A&&A.delete()},xA.prototype.fromWireType=function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=function(A,I){return I=function(A,I){for(void 0===I&&NA("ptr should not be undefined");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),qA[I]}(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function C(){return this.isSmartPointer?HA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):HA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var Q,E=this.registeredClass.getActualType(I),i=YA[E];if(!i)return C.call(this);Q=this.isConst?i.constPointerType:i.pointerType;var o=KA(I,this.registeredClass,Q.registeredClass);return null===o?C.call(this):this.isSmartPointer?HA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o,smartPtrType:this,smartPtr:A}):HA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o})},PA=A.UnboundTypeError=hA(Error,"UnboundTypeError"),A.count_emval_handles=function(){for(var A=0,I=5;I<BI.length;++I)void 0!==BI[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<BI.length;++A)if(void 0!==BI[A])return BI[A];return null};var lI="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function qI(A){if(T(A))return function(A){try{for(var I=lI(A),g=new Uint8Array(I.length),B=0;B<I.length;++B)g[B]=I.charCodeAt(B);return g}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(x.length))}var HI,uI={h:function(A,I,g){throw new _(A).init(I,g),A},w:function(A,I,g){EA.varargs=g;try{var B=EA.getStreamFromFD(A);switch(I){case 0:return(C=EA.get())<0?-28:QA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=EA.get();return B.flags|=C,0;case 5:return C=EA.get(),y[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return S[WI()>>2]=28,-1}}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return-A.errno}},O:function(A,I,g){EA.varargs=g;try{var B=EA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=EA.get();return S[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=EA.get(),QA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return-A.errno}},P:function(A,I,g,B){EA.varargs=B;try{I=EA.getStr(I),I=EA.calculateAt(A,I);var C=B?EA.get():0;return QA.open(I,g,C).fd}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return-A.errno}},$:function(A){var I=iA[A];delete iA[A];var g=I.rawConstructor,B=I.rawDestructor,C=I.fields;rA([A],C.map((A=>A.getterReturnType)).concat(C.map((A=>A.setterArgumentType))),(A=>{var Q={};return C.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+C.length],a=I.setter,w=I.setterContext;Q[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];a(w,A,D.toWireType(g,I)),oA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in Q)I[g]=Q[g].read(A);return B(A),I},toWireType:function(A,I){for(var C in Q)if(!(C in I))throw new TypeError(\'Missing field:  "\'+C+\'"\');var E=g();for(C in Q)Q[C].write(E,I[C]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:DA,destructorFunction:B}]}))},G:function(A,I,g,B,C){},U:function(A,I,g,B,C){var Q=yA(g);MA(A,{name:I=SA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=R;else if(2===g)B=y;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=S}return this.fromWireType(B[A>>Q])},destructorFunction:null})},r:function(A,I,g,B,C,Q,E,i,o,D,a,w,s){a=SA(a),Q=vA(C,Q),i&&(i=vA(E,i)),D&&(D=vA(o,D)),s=vA(w,s);var t=tA(a);WA(t,(function(){_A("Cannot construct "+a+" due to unbound types",[B])})),rA([A,I,g],B?[B]:[],(function(I){var g,C;I=I[0],C=B?(g=I.registeredClass).instancePrototype:fA.prototype;var E=GA(t,(function(){if(Object.getPrototypeOf(this)!==o)throw new nA("Use \'new\' to construct "+a);if(void 0===w.constructor_body)throw new nA(a+" has no accessible constructor");var A=w.constructor_body[arguments.length];if(void 0===A)throw new nA("Tried to invoke ctor of "+a+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(w.constructor_body).toString()+") parameters instead!");return A.apply(this,arguments)})),o=Object.create(C,{constructor:{value:E}});E.prototype=o;var w=new mA(a,E,o,s,g,Q,i,D),G=new xA(a,w,!0,!1,!1),h=new xA(a+"*",w,!1,!1,!1),F=new xA(a+" const*",w,!1,!0,!1);return YA[A]={pointerType:h,constPointerType:F},TA(t,E),[G,h,F]}))},q:function(A,I,g,B,C,Q){F(I>0);var E=$A(I,g);C=vA(B,C),rA([],[A],(function(A){var g="constructor "+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new nA("Cannot register multiple constructors with identical number of parameters ("+(I-1)+") for class \'"+A.name+"\'! Overload resolution is currently only performed using the parameter count, not actual type info!");return A.registeredClass.constructor_body[I-1]=()=>{_A("Cannot construct "+A.name+" due to unbound types",E)},rA([],E,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=II(g,B,null,C,Q),[]})),[]}))},d:function(A,I,g,B,C,Q,E,i){var o=$A(g,B);I=SA(I),Q=vA(C,Q),rA([],[A],(function(A){var B=(A=A[0]).name+"."+I;function C(){_A("Cannot call "+B+" due to unbound types",o)}I.startsWith("@@")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,a=D[I];return void 0===a||void 0===a.overloadTable&&a.className!==A.name&&a.argCount===g-2?(C.argCount=g-2,C.className=A.name,D[I]=C):(pA(D,I,B),D[I].overloadTable[g-2]=C),rA([],o,(function(C){var i=II(B,C,A,Q,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},A:function(I,g,B){I=SA(I),rA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},T:function(A,I){MA(A,{name:I=SA(I),fromWireType:function(A){var I=QI.toValue(A);return CI(A),I},toWireType:function(A,I){return QI.toHandle(I)},argPackAdvance:8,readValueFromPointer:DA,destructorFunction:null})},z:function(A,I,g){var B=yA(g);MA(A,{name:I=SA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:iI(I,B),destructorFunction:null})},f:function(A,I,g,B,C,Q){var E=$A(I,g);A=SA(A),C=vA(B,C),WA(A,(function(){_A("Cannot call "+A+" due to unbound types",E)}),I-1),rA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return TA(A,II(A,B,null,C,Q),I-1),[]}))},g:function(A,I,g,B,C){I=SA(I),-1===C&&(C=4294967295);var Q=yA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes("unsigned");MA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:oI(I,Q,0!==B),destructorFunction:null})},b:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=n,g=I[A>>=2],C=I[A+1];return new B(I.buffer,C,g)}MA(A,{name:g=SA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},y:function(A,I){var g="std::string"===(I=SA(I));MA(A,{name:I,fromWireType:function(A){var I,B=n[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==r[i]){var o=J(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(r[C+E]);I=D.join("")}return pI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||NA("Cannot pass non-string to std::string"),B=g&&C?Y(I):I.length;var Q=fI(4+B+1),E=Q+4;if(n[Q>>2]=B,g&&C)K(I,r,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(pI(E),NA("String has UTF-16 code units that do not fit in 8 bits")),r[E+i]=o}else for(i=0;i<B;++i)r[E+i]=I[i];return null!==A&&A.push(pI,Q),Q},argPackAdvance:8,readValueFromPointer:DA,destructorFunction:function(A){pI(A)}})},m:function(A,I,g){var B,C,Q,E,i;g=SA(g),2===I?(B=aI,C=wI,E=sI,Q=()=>e,i=1):4===I&&(B=tI,C=GI,E=hI,Q=()=>n,i=2),MA(A,{name:g,fromWireType:function(A){for(var g,C=n[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return pI(A),g},toWireType:function(A,B){"string"!=typeof B&&NA("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=fI(4+Q+I);return n[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(pI,o),o},argPackAdvance:8,readValueFromPointer:DA,destructorFunction:function(A){pI(A)}})},_:function(A,I,g,B,C,Q){iA[A]={name:SA(I),rawConstructor:vA(g,B),rawDestructor:vA(C,Q),fields:[]}},Z:function(A,I,g,B,C,Q,E,i,o,D){iA[A].fields.push({fieldName:SA(I),getterReturnType:g,getter:vA(B,C),getterContext:Q,setterArgumentType:E,setter:vA(i,o),setterContext:D})},V:function(A,I){MA(A,{isVoid:!0,name:I=SA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},I:function(){throw 1/0},X:function(A,I,g){A=QI.toValue(A),I=FI(I,"emval::as");var B=[],C=QI.toHandle(B);return n[g>>2]=C,I.toWireType(B,A)},o:function(A,I,g,B){(A=yI[A])(I=QI.toValue(I),g=rI(g),null,B)},e:CI,n:function(A,I){var g=function(A,I){for(var g=new Array(A),B=0;B<A;++B)g[B]=FI(n[I+4*B>>2],"parameter "+B);return g}(A,I),B=g[0],C=B.name+"_$"+g.slice(1).map((function(A){return A.name})).join("_")+"$",Q=eI[C];if(void 0!==Q)return Q;for(var E=["retType"],i=[B],o="",D=0;D<A-1;++D)o+=(0!==D?", ":"")+"arg"+D,E.push("argType"+D),i.push(g[1+D]);var a,w,s="return function "+tA("methodCaller_"+C)+"(handle, name, destructors, args) {\\n",t=0;for(D=0;D<A-1;++D)s+="    var arg"+D+" = argType"+D+".readValueFromPointer(args"+(t?"+"+t:"")+");\\n",t+=g[D+1].argPackAdvance;for(s+="    var rv = handle[name]("+o+");\\n",D=0;D<A-1;++D)g[D+1].deleteObject&&(s+="    argType"+D+".deleteObject(arg"+D+");\\n");return B.isVoid||(s+="    return retType.toWireType(destructors, rv);\\n"),s+="};\\n",E.push(s),a=AI(Function,E).apply(null,i),w=yI.length,yI.push(a),Q=w,eI[C]=Q,Q},Y:function(A,I){return A=QI.toValue(A),I=QI.toValue(I),QI.toHandle(A[I])},j:function(A){A>4&&(BI[A].refcount+=1)},B:function(){return QI.toHandle([])},l:function(A){return QI.toHandle(rI(A))},aa:function(){return QI.toHandle({})},W:function(A){oA(QI.toValue(A)),CI(A)},s:function(A,I,g){A=QI.toValue(A),I=QI.toValue(I),g=QI.toValue(g),A[I]=g},i:function(A,I){var g=(A=FI(A,"_emval_take_value")).readValueFromPointer(I);return QI.toHandle(g)},Q:function(A,I){var g,B=new Date(1e3*(n[(g=A)>>2]+4294967296*S[g+4>>2]));S[I>>2]=B.getSeconds(),S[I+4>>2]=B.getMinutes(),S[I+8>>2]=B.getHours(),S[I+12>>2]=B.getDate(),S[I+16>>2]=B.getMonth(),S[I+20>>2]=B.getFullYear()-1900,S[I+24>>2]=B.getDay();var C=0|function(A){return(SI(A.getFullYear())?nI:NI)[A.getMonth()]+A.getDate()-1}(B);S[I+28>>2]=C,S[I+36>>2]=-60*B.getTimezoneOffset();var Q=new Date(B.getFullYear(),0,1),E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=Q.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));S[I+32>>2]=o},R:function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:"GMT"}n[A>>2]=60*o,S[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=MI(a),t=MI(w);i<E?(n[g>>2]=s,n[g+4>>2]=t):(n[g>>2]=t,n[g+4>>2]=s)},a:function(){m("")},t:function(A,I,g){return function(A,I,g){var B=function(A,I){var g;for(cI.length=0,I>>=2;g=r[A++];)I+=105!=g&I,cI.push(105==g?S[I]:M[I++>>1]),++I;return cI}(I,g);return v[A].apply(null,B)}(A,I,g)},x:function(){return Date.now()},J:function(A){var I,g=r.length,B=2147483648;if((A>>>=0)>B)return!1;for(var C=1;C<=4;C*=2){var Q=g*(1+.2/C);if(Q=Math.min(Q,A+100663296),kI(Math.min(B,(I=Math.max(A,Q))+(65536-I%65536)%65536)))return!0}return!1},K:function(A,I){var g=0;return JI().forEach((function(B,C){var Q=I+g;n[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)R[I++>>0]=A.charCodeAt(B);R[I>>0]=0}(B,Q),g+=B.length+1})),0},M:function(A,I){var g=JI();n[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),n[I>>2]=B,0},c:function(I,g){var B;B=I,G||(A.onExit&&A.onExit(B),h=!0),i(B,new P(B))},u:function(A){try{var I=EA.getStreamFromFD(A);return QA.close(I),0}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return A.errno}},N:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=n[I>>2],i=n[I+4>>2];I+=8;var o=QA.read(A,R,E,i,B);if(o<0)return-1;if(C+=o,o<i)break;void 0!==B&&(B+=o)}return C}(EA.getStreamFromFD(A),I,g);return n[B>>2]=C,0}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return A.errno}},F:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=EA.getStreamFromFD(A);return QA.llseek(E,Q,B),V=[E.position>>>0,(O=E.position,+Math.abs(O)>=1?O>0?(0|Math.min(+Math.floor(O/4294967296),4294967295))>>>0:~~+Math.ceil((O-+(~~O>>>0))/4294967296)>>>0:0)],S[C>>2]=V[0],S[C+4>>2]=V[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return A.errno}var i,o},v:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=n[I>>2],i=n[I+4>>2];I+=8;var o=QA.write(A,R,E,i,B);if(o<0)return-1;C+=o,void 0!==B&&(B+=o)}return C}(EA.getStreamFromFD(A),I,g);return n[B>>2]=C,0}catch(A){if(void 0===QA||"ErrnoError"!==A.name)throw A;return A.errno}},C:function(A,I){var g=ZI();try{return XA(A)(I)}catch(A){if(OI(g),A!==A+0)throw A;bI(1,0)}},E:function(A,I,g){var B=ZI();try{return XA(A)(I,g)}catch(A){if(OI(B),A!==A+0)throw A;bI(1,0)}},D:function(A,I,g,B){var C=ZI();try{return XA(A)(I,g,B)}catch(A){if(OI(C),A!==A+0)throw A;bI(1,0)}},k:function(A,I){var g=ZI();try{XA(A)(I)}catch(A){if(OI(g),A!==A+0)throw A;bI(1,0)}},L:function(A,I,g){var B=ZI();try{XA(A)(I,g)}catch(A){if(OI(B),A!==A+0)throw A;bI(1,0)}},S:function(A,I,g,B){var C=ZI();try{XA(A)(I,g,B)}catch(A){if(OI(C),A!==A+0)throw A;bI(1,0)}},p:function(A,I,g,B,C){var Q=ZI();try{XA(A)(I,g,B,C)}catch(A){if(OI(Q),A!==A+0)throw A;bI(1,0)}},ba:LI,H:function(A,I,g,B,C){return LI(A,I,g,B)}},fI=(function(){var I,B,C,Q,E={a:uI};function i(I,g){var B,C=I.exports;return A.asm=C,t=A.asm.ca,L(),c=A.asm.ha,B=A.asm.da,l.unshift(B),W(),C}if(p(),A.instantiateWasm)try{return A.instantiateWasm(E,i)}catch(A){s("Module.instantiateWasm callback failed with error: "+A),g(A)}(I=D,B=b,C=E,Q=function(A){i(A.instance)},I||"function"!=typeof WebAssembly.instantiateStreaming||T(B)||"function"!=typeof fetch?j(B,C,Q):fetch(B,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,C).then(Q,(function(A){return s("wasm streaming compile failed: "+A),s("falling back to ArrayBuffer instantiation"),j(B,C,Q)}))}))).catch(g)}(),function(){return(fI=A.asm.ea).apply(null,arguments)}),pI=function(){return(pI=A.asm.fa).apply(null,arguments)},WI=function(){return(WI=A.asm.ga).apply(null,arguments)},mI=A.___getTypeName=function(){return(mI=A.___getTypeName=A.asm.ia).apply(null,arguments)},bI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.ja).apply(null,arguments)},function(){return(bI=A.asm.ka).apply(null,arguments)}),ZI=function(){return(ZI=A.asm.la).apply(null,arguments)},OI=function(){return(OI=A.asm.ma).apply(null,arguments)},VI=function(){return(VI=A.asm.na).apply(null,arguments)};function xI(){function g(){HI||(HI=!0,A.calledRun=!0,h||(A.noFSInit||QA.init.initialized||QA.init(),QA.ignorePermissions=!1,gA.init(),z(l),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),q.unshift(I);var I;z(q)}()))}H>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),d.unshift(I);var I;z(d)}(),H>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),g()}),1)):g()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.oa).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm.pa).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.qa).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.ra).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.sa).apply(null,arguments)},A.FS=QA,f=function A(){HI||xI(),HI||(f=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return xI(),A.ready});function h(A,I){return function(){return A.apply(I,arguments)}}const{toString:F}=Object.prototype,{getPrototypeOf:R}=Object,r=(y=Object.create(null),A=>{const I=F.call(A);return y[I]||(y[I]=I.slice(8,-1).toLowerCase())});var y;const e=A=>(A=A.toLowerCase(),I=>r(I)===A),S=A=>I=>typeof I===A,{isArray:n}=Array,N=S("undefined"),M=e("ArrayBuffer"),c=S("string"),k=S("function"),U=S("number"),J=A=>null!==A&&"object"==typeof A,K=A=>{if("object"!==r(A))return!1;const I=R(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},Y=e("Date"),L=e("File"),d=e("Blob"),l=e("FileList"),q=e("URLSearchParams");function H(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),n(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}function u(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}const f="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:g.g,p=A=>!N(A)&&A!==f,W=(m="undefined"!=typeof Uint8Array&&R(Uint8Array),A=>m&&A instanceof m);var m;const b=e("HTMLFormElement"),Z=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),O=e("RegExp"),V=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};H(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},x="abcdefghijklmnopqrstuvwxyz",T="0123456789",X={DIGIT:T,ALPHA:x,ALPHA_DIGIT:x+x.toUpperCase()+T},j={isArray:n,isArrayBuffer:M,isBuffer:function(A){return null!==A&&!N(A)&&null!==A.constructor&&!N(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I="[object FormData]";return A&&("function"==typeof FormData&&A instanceof FormData||F.call(A)===I||k(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&M(A.buffer),I},isString:c,isNumber:U,isBoolean:A=>!0===A||!1===A,isObject:J,isPlainObject:K,isUndefined:N,isDate:Y,isFile:L,isBlob:d,isRegExp:O,isFunction:k,isStream:A=>J(A)&&k(A.pipe),isURLSearchParams:q,isTypedArray:W,isFileList:l,forEach:H,merge:function A(){const{caseless:I}=p(this)&&this||{},g={},B=(B,C)=>{const Q=I&&u(g,C)||C;K(g[Q])&&K(B)?g[Q]=A(g[Q],B):K(B)?g[Q]=A({},B):n(B)?g[Q]=B.slice():g[Q]=B};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&H(arguments[A],B);return g},extend:(A,I,g,{allOwnKeys:B}={})=>(H(I,((I,B)=>{g&&k(I)?A[B]=h(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&R(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:r,kindOfTest:e,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(n(A))return A;let I=A.length;if(!U(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:b,hasOwnProperty:Z,hasOwnProp:Z,reduceDescriptors:V,freezeMethods:A=>{V(A,((I,g)=>{if(k(A)&&-1!==["arguments","caller","callee"].indexOf(g))return!1;const B=A[g];k(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not rewrite read-only method \'"+g+"\'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return n(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I),findKey:u,global:f,isContextDefined:p,ALPHABET:X,generateString:(A=16,I=X.ALPHA_DIGIT)=>{let g="";const{length:B}=I;for(;A--;)g+=I[Math.random()*B|0];return g},isSpecCompliantForm:function(A){return!!(A&&k(A.append)&&"FormData"===A[Symbol.toStringTag]&&A[Symbol.iterator])},toJSONObject:A=>{const I=new Array(10),g=(A,B)=>{if(J(A)){if(I.indexOf(A)>=0)return;if(!("toJSON"in A)){I[B]=A;const C=n(A)?[]:{};return H(A,((A,I)=>{const Q=g(A,B+1);!N(Q)&&(C[I]=Q)})),I[B]=void 0,C}}return A};return g(A,0)}};function v(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}j.inherits(v,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:j.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const P=v.prototype,z={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{z[A]={value:A}})),Object.defineProperties(v,z),Object.defineProperty(P,"isAxiosError",{value:!0}),v.from=(A,I,g,B,C,Q)=>{const E=Object.create(P);return j.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),v.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const _=v;function $(A){return j.isPlainObject(A)||j.isArray(A)}function AA(A){return j.endsWith(A,"[]")?A.slice(0,-2):A}function IA(A,I,g){return A?A.concat(I).map((function(A,I){return A=AA(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const gA=j.toFlatObject(j,{},null,(function(A){return/^is[A-Z]/.test(A)})),BA=function(A,I,g){if(!j.isObject(A))throw new TypeError("target must be an object");I=I||new FormData;const B=(g=j.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!j.isUndefined(I[A])}))).metaTokens,C=g.visitor||D,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&j.isSpecCompliantForm(I);if(!j.isFunction(C))throw new TypeError("visitor must be a function");function o(A){if(null===A)return"";if(j.isDate(A))return A.toISOString();if(!i&&j.isBlob(A))throw new _("Blob is not supported. Use a Buffer instead.");return j.isArrayBuffer(A)||j.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function D(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(j.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(j.isArray(A)&&function(A){return j.isArray(A)&&!A.some($)}(A)||(j.isFileList(A)||j.endsWith(g,"[]"))&&(i=j.toArray(A)))return g=AA(g),i.forEach((function(A,B){!j.isUndefined(A)&&null!==A&&I.append(!0===E?IA([g],B,Q):null===E?g:g+"[]",o(A))})),!1;return!!$(A)||(I.append(IA(C,g,Q),o(A)),!1)}const a=[],w=Object.assign(gA,{defaultVisitor:D,convertValue:o,isVisitable:$});if(!j.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!j.isUndefined(g)){if(-1!==a.indexOf(g))throw Error("Circular reference detected in "+B.join("."));a.push(g),j.forEach(g,(function(g,Q){!0===(!(j.isUndefined(g)||null===g)&&C.call(I,g,j.isString(Q)?Q.trim():Q,B,w))&&A(g,B?B.concat(Q):[Q])})),a.pop()}}(A),I};function CA(A){const I={"!":"%21","\'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%20|%00/g,(function(A){return I[A]}))}function QA(A,I){this._pairs=[],A&&BA(A,this,I)}const EA=QA.prototype;EA.append=function(A,I){this._pairs.push([A,I])},EA.toString=function(A){const I=A?function(I){return A.call(this,I,CA)}:CA;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const iA=QA;function oA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function DA(A,I,g){if(!I)return A;const B=g&&g.encode||oA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):j.isURLSearchParams(I)?I.toString():new iA(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const aA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){j.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},wA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},sA={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:iA,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},isStandardBrowserEnv:(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),isStandardBrowserWebWorkerEnv:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,protocols:["http","https","file","blob","url","data"]},tA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&j.isArray(B)?B.length:Q,i?(j.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&j.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&j.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(j.isFormData(A)&&j.isFunction(A.entries)){const g={};return j.forEachEntry(A,((A,B)=>{I(function(A){return j.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},GA={"Content-Type":void 0},hA={transitional:wA,adapter:["xhr","http"],transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=j.isObject(A);if(C&&j.isHTMLForm(A)&&(A=new FormData(A)),j.isFormData(A))return B&&B?JSON.stringify(tA(A)):A;if(j.isArrayBuffer(A)||j.isBuffer(A)||j.isStream(A)||j.isFile(A)||j.isBlob(A))return A;if(j.isArrayBufferView(A))return A.buffer;if(j.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return BA(A,new sA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return sA.isNode&&j.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=j.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return BA(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A,I,g){if(j.isString(A))try{return(0,JSON.parse)(A),j.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||hA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&j.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw _.from(A,_.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:sA.classes.FormData,Blob:sA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};j.forEach(["delete","get","head"],(function(A){hA.headers[A]={}})),j.forEach(["post","put","patch"],(function(A){hA.headers[A]=j.merge(GA)}));const FA=hA,RA=j.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),rA=Symbol("internals");function yA(A){return A&&String(A).trim().toLowerCase()}function eA(A){return!1===A||null==A?A:j.isArray(A)?A.map(eA):String(A)}function SA(A,I,g,B,C){return j.isFunction(B)?B.call(this,I,g):(C&&(I=g),j.isString(I)?j.isString(B)?-1!==I.indexOf(B):j.isRegExp(B)?B.test(I):void 0:void 0)}class nA{constructor(A){A&&this.set(A)}set(A,I,g){const B=this;function C(A,I,g){const C=yA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=j.findKey(B,C);(!Q||void 0===B[Q]||!0===g||void 0===g&&!1!==B[Q])&&(B[Q||I]=eA(A))}const Q=(A,I)=>j.forEach(A,((A,g)=>C(A,g,I)));return j.isPlainObject(A)||A instanceof this.constructor?Q(A,I):j.isString(A)&&(A=A.trim())&&!/^[-_a-zA-Z]+$/.test(A.trim())?Q((A=>{const I={};let g,B,C;return A&&A.split("\\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&RA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A),I):null!=A&&C(I,A,g),this}get(A,I){if(A=yA(A)){const g=j.findKey(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(j.isFunction(I))return I.call(this,A,g);if(j.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,I){if(A=yA(A)){const g=j.findKey(this,A);return!(!g||void 0===this[g]||I&&!SA(0,this[g],g,I))}return!1}delete(A,I){const g=this;let B=!1;function C(A){if(A=yA(A)){const C=j.findKey(g,A);!C||I&&!SA(0,g[C],C,I)||(delete g[C],B=!0)}}return j.isArray(A)?A.forEach(C):C(A),B}clear(A){const I=Object.keys(this);let g=I.length,B=!1;for(;g--;){const C=I[g];A&&!SA(0,this[C],C,A,!0)||(delete this[C],B=!0)}return B}normalize(A){const I=this,g={};return j.forEach(this,((B,C)=>{const Q=j.findKey(g,C);if(Q)return I[Q]=eA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=eA(B),g[E]=!0})),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){const I=Object.create(null);return j.forEach(this,((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&j.isArray(g)?g.join(", "):g)})),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([A,I])=>A+": "+I)).join("\\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...I){const g=new this(A);return I.forEach((A=>g.set(A))),g}static accessor(A){const I=(this[rA]=this[rA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=yA(A);I[B]||(function(A,I){const g=j.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return j.isArray(A)?A.forEach(B):B(A),this}}nA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),j.freezeMethods(nA.prototype),j.freezeMethods(nA);const NA=nA;function MA(A,I){const g=this||FA,B=I||g,C=NA.from(B.headers);let Q=B.data;return j.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function cA(A){return!(!A||!A.__CANCEL__)}function kA(A,I,g){_.call(this,null==A?"canceled":A,_.ERR_CANCELED,I,g),this.name="CanceledError"}j.inherits(kA,_,{__CANCEL__:!0});const UA=kA,JA=sA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+"="+encodeURIComponent(I)),j.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),j.isString(B)&&E.push("path="+B),j.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function KA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,"")+"/"+I.replace(/^\\/+/,""):A}(A,I):I}const YA=sA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=j.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function LA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0,event:C};D[I?"download":"upload"]=!0,A(D)}}const dA={http:null,xhr:"undefined"!=typeof XMLHttpRequest&&function(A){return new Promise((function(I,g){let B=A.data;const C=NA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}j.isFormData(B)&&(sA.isStandardBrowserEnv||sA.isStandardBrowserWebWorkerEnv)&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";C.set("Authorization","Basic "+btoa(I+":"+g))}const D=KA(A.baseURL,A.url);function a(){if(!o)return;const B=NA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new _("Request failed with status code "+g.status,[_.ERR_BAD_REQUEST,_.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&"text"!==Q&&"json"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),DA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new _("Request aborted",_.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new _("Network Error",_.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||wA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new _(I,B.clarifyTimeoutError?_.ETIMEDOUT:_.ECONNABORTED,A,o)),o=null},sA.isStandardBrowserEnv){const I=(A.withCredentials||YA(D))&&A.xsrfCookieName&&JA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),"setRequestHeader"in o&&j.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),j.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&"json"!==Q&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",LA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",LA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new UA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===sA.protocols.indexOf(w)?g(new _("Unsupported protocol "+w+":",_.ERR_BAD_REQUEST,A)):o.send(B||null)}))}};function lA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new UA(null,A)}function qA(A){return lA(A),A.headers=NA.from(A.headers),A.data=MA.call(A,A.transformRequest),-1!==["post","put","patch"].indexOf(A.method)&&A.headers.setContentType("application/x-www-form-urlencoded",!1),(A=>{A=j.isArray(A)?A:[A];const{length:I}=A;let g,B;for(let C=0;C<I&&(g=A[C],!(B=j.isString(g)?dA[g.toLowerCase()]:g));C++);if(!B){if(!1===B)throw new _(`Adapter ${g} is not supported by the environment`,"ERR_NOT_SUPPORT");throw new Error(j.hasOwnProp(dA,g)?`Adapter \'${g}\' is not available in the build`:`Unknown adapter \'${g}\'`)}if(!j.isFunction(B))throw new TypeError("adapter is not a function");return B})(A.adapter||FA.adapter)(A).then((function(I){return lA(A),I.data=MA.call(A,A.transformResponse,I),I.headers=NA.from(I.headers),I}),(function(I){return cA(I)||(lA(A),I&&I.response&&(I.response.data=MA.call(A,A.transformResponse,I.response),I.response.headers=NA.from(I.response.headers))),Promise.reject(I)}))}j.forEach(dA,((A,I)=>{if(A){try{Object.defineProperty(A,"name",{value:I})}catch(A){}Object.defineProperty(A,"adapterName",{value:I})}}));const HA=A=>A instanceof NA?A.toJSON():A;function uA(A,I){I=I||{};const g={};function B(A,I,g){return j.isPlainObject(A)&&j.isPlainObject(I)?j.merge.call({caseless:g},A,I):j.isPlainObject(I)?j.merge({},I):j.isArray(I)?I.slice():I}function C(A,I,g){return j.isUndefined(I)?j.isUndefined(A)?void 0:B(void 0,A,g):B(A,I,g)}function Q(A,I){if(!j.isUndefined(I))return B(void 0,I)}function E(A,I){return j.isUndefined(I)?j.isUndefined(A)?void 0:B(void 0,A):B(void 0,I)}function i(g,C,Q){return Q in I?B(g,C):Q in A?B(void 0,g):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i,headers:(A,I)=>C(HA(A),HA(I),!0)};return j.forEach(Object.keys(A).concat(Object.keys(I)),(function(B){const Q=o[B]||C,E=Q(A[B],I[B],B);j.isUndefined(E)&&Q!==i||(g[B]=E)})),g}const fA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{fA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const pA={};fA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.3.4] Transitional option \'"+A+"\'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new _(B(C," has been removed"+(I?" in "+I:"")),_.ERR_DEPRECATED);return I&&!pA[C]&&(pA[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const WA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new _("options must be an object",_.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new _("option "+Q+" must be "+g,_.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new _("Unknown option "+Q,_.ERR_BAD_OPTION)}},validators:fA},mA=WA.validators;class bA{constructor(A){this.defaults=A,this.interceptors={request:new aA,response:new aA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=uA(this.defaults,I);const{transitional:g,paramsSerializer:B,headers:C}=I;let Q;void 0!==g&&WA.assertOptions(g,{silentJSONParsing:mA.transitional(mA.boolean),forcedJSONParsing:mA.transitional(mA.boolean),clarifyTimeoutError:mA.transitional(mA.boolean)},!1),void 0!==B&&WA.assertOptions(B,{encode:mA.function,serialize:mA.function},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase(),Q=C&&j.merge(C.common,C[I.method]),Q&&j.forEach(["delete","get","head","post","put","patch","common"],(A=>{delete C[A]})),I.headers=NA.concat(Q,C);const E=[];let i=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(i=i&&A.synchronous,E.unshift(A.fulfilled,A.rejected))}));const o=[];let D;this.interceptors.response.forEach((function(A){o.push(A.fulfilled,A.rejected)}));let a,w=0;if(!i){const A=[qA.bind(this),void 0];for(A.unshift.apply(A,E),A.push.apply(A,o),a=A.length,D=Promise.resolve(I);w<a;)D=D.then(A[w++],A[w++]);return D}a=E.length;let s=I;for(w=0;w<a;){const I=E[w++],g=E[w++];try{s=I(s)}catch(A){g.call(this,A);break}}try{D=qA.call(this,s)}catch(A){return Promise.reject(A)}for(w=0,a=o.length;w<a;)D=D.then(o[w++],o[w++]);return D}getUri(A){return DA(KA((A=uA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}j.forEach(["delete","get","head","options"],(function(A){bA.prototype[A]=function(I,g){return this.request(uA(g||{},{method:A,url:I,data:(g||{}).data}))}})),j.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(uA(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}bA.prototype[A]=I(),bA.prototype[A+"Form"]=I(!0)}));const ZA=bA;class OA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new UA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new OA((function(I){A=I})),cancel:A}}}const VA=OA,xA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(xA).forEach((([A,I])=>{xA[I]=A}));const TA=xA,XA=function A(I){const g=new ZA(I),B=h(ZA.prototype.request,g);return j.extend(B,ZA.prototype,g,{allOwnKeys:!0}),j.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(uA(I,g))},B}(FA);XA.Axios=ZA,XA.CanceledError=UA,XA.CancelToken=VA,XA.isCancel=cA,XA.VERSION="1.3.4",XA.toFormData=BA,XA.AxiosError=_,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return j.isObject(A)&&!0===A.isAxiosError},XA.mergeConfig=uA,XA.AxiosHeaders=NA,XA.formToJSON=A=>tA(j.isHTMLForm(A)?new FormData(A):A),XA.HttpStatusCode=TA,XA.default=XA;const jA=XA;var vA=function(){function A(){Q(this,A)}var g,B;return D(A,null,[{key:"fetchRemoteData",value:(B=I(t().mark((function A(I){var g;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,jA.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),new Error("Error in Utils.fetchRemoteData: ",A.t0);case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return B.apply(this,arguments)})},{key:"fetchRemoteDataCallback",value:(g=I(t().mark((function A(I,g){var B;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,jA.get(I,{responseType:"arraybuffer"}).then((function(A){var I=new Uint8Array(A.data);console.log(I),g(A)}));case 3:return B=A.sent,A.abrupt("return",B);case 7:throw A.prev=7,A.t0=A.catch(0),new Error("Error in Utils.fetchRemoteDataCallback: ",A.t0);case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A,I){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}}]),A}(),PA=function(){function A(){Q(this,A),a(this,"instance",void 0),a(this,"markerNFTCount",void 0),a(this,"cameraCount",void 0),a(this,"version",void 0),a(this,"setup",void 0),a(this,"teardown",void 0),a(this,"setupAR2",void 0),a(this,"setDebugMode",void 0),a(this,"getDebugMode",void 0),a(this,"getProcessingImage",void 0),a(this,"detectMarker",void 0),a(this,"detectNFTMarker",void 0),a(this,"getNFTMarker",void 0),a(this,"getNFTData",void 0),a(this,"setLogLevel",void 0),a(this,"getLogLevel",void 0),a(this,"NFTMarkerInfo",void 0),a(this,"setProjectionNearPlane",void 0),a(this,"getProjectionNearPlane",void 0),a(this,"setProjectionFarPlane",void 0),a(this,"getProjectionFarPlane",void 0),a(this,"setThresholdMode",void 0),a(this,"getThresholdMode",void 0),a(this,"setThreshold",void 0),a(this,"getThreshold",void 0),a(this,"setImageProcMode",void 0),a(this,"getImageProcMode",void 0),a(this,"getCameraLens",void 0),a(this,"passVideoData",void 0),this.instance,this.markerNFTCount=0,this.cameraCount=0,this.version="1.4.0",console.info("ARToolkitNFT ",this.version)}var g,B;return D(A,[{key:"init",value:(B=I(t().mark((function A(){return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return this.instance=A.sent,this._decorate(),A.abrupt("return",this);case 5:case"end":return A.stop()}}),A,this)}))),function(){return B.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","detectMarker","detectNFTMarker","getNFTMarker","getNFTData","NFTMarkerInfo","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setImageProcMode","getImageProcMode","getCameraLens","passVideoData","StringList"].forEach((function(I){A.converter()[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this.converter()[I]=this.instance[I])}},{key:"converter",value:function(){return this}},{key:"loadCamera",value:(g=I(t().mark((function A(I){var g,B;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,vA.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),new Error("Error in loadCamera function: ",A.t0);case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return g.apply(this,arguments)})},{key:"addNFTMarkers",value:function(A,I,g,B){var C=this,Q=[],E=3*I.length,i=function(I){if(0==(E-=1)){for(var B=new C.instance.StringList,i=[],o=0;o<Q.length;o++)B.push_back(Q[o]);for(var D=C.instance._addNFTMarkers(A,B),a=0;a<D.size();a++)i.push(D.get(a));console.log("add nft marker ids: ",i),g&&g(i)}},o=function(A,I){console.log("failed to load: ",A),B(I)},D=[];return I.forEach((function(A,I){var g="/markerNFT_"+C.markerNFTCount;if(Q.push(g),Array.isArray(A))A.forEach((function(A){var I=g+"."+A.split(".").pop();C.ajax(A,I,i.bind(I),o.bind(I))})),C.markerNFTCount+=1;else{var B=g+".fset",E=g+".iset",a=g+".fset3";C.ajax(A+".fset",B,i.bind(B),o.bind(B)),C.ajax(A+".iset",E,i.bind(E),o.bind(E)),C.ajax(A+".fset3",a,i.bind(a),o.bind(a)),C.markerNFTCount+=1}D.push(I)})),D}},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}},{key:"ajax",value:function(A,I,g,B){var C=this,Q=new XMLHttpRequest;Q.open("GET",A,!0),Q.responseType="arraybuffer",Q.onload=function(){if(200==this.status){var E=Q.response,i=new Uint8Array(E);!function(A,I,g){C.instance.FS.writeFile(A,I,{encoding:"binary"}),g(I)}(I,i,g)}else B(A,this.status)},Q.send()}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"NFT_MARKER",get:function(){return 0}}]),A}(),zA=function(){function A(I,g,B){Q(this,A),a(this,"id",void 0),a(this,"_width",void 0),a(this,"_height",void 0),a(this,"_cameraParam",void 0),a(this,"cameraId",void 0),a(this,"cameraLoaded",void 0),a(this,"artoolkitNFT",void 0),a(this,"listeners",void 0),a(this,"nftMarkers",void 0),a(this,"transform_mat",void 0),a(this,"transformGL_RH",void 0),a(this,"videoWidth",void 0),a(this,"videoHeight",void 0),a(this,"videoSize",void 0),a(this,"framesize",void 0),a(this,"videoLuma",void 0),a(this,"grayscaleEnabled",void 0),a(this,"grayscaleSource",void 0),a(this,"camera_mat",void 0),a(this,"nftMarkerFound",void 0),a(this,"nftMarkerFoundTime",void 0),a(this,"nftMarkerCount",void 0),a(this,"defaultMarkerWidth",void 0),a(this,"_bwpointer",void 0),this.id=-1,this._width=I,this._height=g,this._cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkitNFT,this.listeners={},this.nftMarkers=[],this.transform_mat=new Float64Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framesize=null,this.videoLuma=null,this.grayscaleEnabled=!1,this.camera_mat=null,this.nftMarkerFound=!1,this.nftMarkerFoundTime=0,this.nftMarkerCount=0,this._bwpointer=null,this.defaultMarkerWidth=1}var g,B,C,E,i,o;return D(A,[{key:"width",get:function(){return this._width},set:function(A){this._width=A}},{key:"height",get:function(){return this._height},set:function(A){this._height=A}},{key:"cameraParam",get:function(){return this._cameraParam},set:function(A){this._cameraParam=A}},{key:"process",value:function(A){var I,g,B=this.detectMarker(A);for(I in 0!=B&&console.error("[ARControllerNFT]","detectMarker error:",B),this.converter().nftMarkers)(g=this.converter().nftMarkers[I]).inPrevious=g.inCurrent,g.inCurrent=!1;var C=this.nftMarkerCount;this.detectNFTMarker();for(var Q=0;Q<C;Q++){var E=this.getNFTMarker(Q),i=PA.NFT_MARKER;if(E.found){this.nftMarkerFound=Q,this.nftMarkerFoundTime=Date.now();var o=this.trackNFTMarkerId(Q);o.matrix.set(E.pose),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else this.nftMarkerFound===Q&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}}},{key:"detectNFTMarker",value:function(){this.artoolkitNFT.detectNFTMarker(this.id)}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.converter().nftMarkers[A];return g||(this.converter().nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkitNFT.detectMarker(this.id):-99}},{key:"getNFTMarker",value:function(A){return this.artoolkitNFT.getNFTMarker(this.id,A)}},{key:"getNFTData",value:function(A,I){return this.artoolkitNFT.getNFTData(A,I)}},{key:"addEventListener",value:function(A,I){this.converter().listeners[A]||(this.converter().listeners[A]=[]),this.converter().listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.converter().listeners[A]){var g=this.converter().listeners[A].indexOf(I);g>-1&&this.converter().listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.converter().listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"setDebugMode",value:function(A){return this.artoolkitNFT.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkitNFT.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkitNFT.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkitNFT.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkitNFT.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkitNFT.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkitNFT.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkitNFT.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkitNFT.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkitNFT.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkitNFT.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkitNFT.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkitNFT.getThreshold(this.id)}},{key:"loadNFTMarker",value:(o=I(t().mark((function A(I,g,B){var C,Q=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(this.id,[I],(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return o.apply(this,arguments)})},{key:"loadNFTMarkers",value:(i=I(t().mark((function A(I,g,B){var C,Q=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(this.id,I,(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return i.apply(this,arguments)})},{key:"setImageProcMode",value:function(A){return this.artoolkitNFT.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkitNFT.getImageProcMode(this.id)}},{key:"setGrayData",value:function(A){this.grayscaleEnabled=!0,this.grayscaleSource=A}},{key:"converter",value:function(){return this}},{key:"_initialize",value:(E=I(t().mark((function A(){var I=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new PA).init();case 2:return this.artoolkitNFT=A.sent,console.log("[ARControllerNFT]","ARToolkitNFT initialized"),A.next=6,this.artoolkitNFT.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARControllerNFT]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkitNFT.setup(this.width,this.height,this.cameraId),console.log("[ARControllerNFT]","Got ID from setup",this.id),this._initNFT(),this.framesize=this._width*this._height,this.videoLuma=new Uint8Array(this.framesize/4),this.camera_mat=this.artoolkitNFT.getCameraLens(this.id),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){I.dispatchEvent({name:"load",target:I})}),1),A.abrupt("return",this);case 18:case"end":return A.stop()}}),A,this)}))),function(){return E.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkitNFT.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){if(A){var I;if(A.data&&(I=A.data),this.videoLuma)if(0==this.grayscaleEnabled)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}else 1==this.grayscaleEnabled&&(this.videoLuma=this.grayscaleSource);return!!this.videoLuma&&(this.artoolkitNFT.passVideoData(this.id,I,this.videoLuma),!0)}console.error("Error: no provided imageData to ARControllerNFT")}}],[{key:"initWithDimensions",value:(C=I(t().mark((function I(g,B,C){var Q;return t().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=new A(g,B,C),I.next=3,Q._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g){return C.apply(this,arguments)})},{key:"initWithImage",value:(B=I(t().mark((function I(g,B){var C,Q,E;return t().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.videoWidth||g.width,Q=g.videoHeight||g.height,E=new A(C,Q,B),I.next=5,E._initialize();case 5:return I.abrupt("return",I.sent);case 6:case"end":return I.stop()}}),I)}))),function(A,I){return B.apply(this,arguments)})},{key:"customInit",value:(g=I(t().mark((function I(g,B,C,Q){var E;return t().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C),Q(),I.next=4,E._initialize();case 4:return I.abrupt("return",I.sent);case 5:case"end":return I.stop()}}),I)}))),function(A,I,B,C){return g.apply(this,arguments)})}]),A}();const _A={ARToolkitNFT:PA,ARControllerNFT:zA}})(),C.default})(),A.exports=B()}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),(()=>{"use strict";var A=g(801),I=g.n(A);const{ARControllerNFT:B}=I(),C=self;C.onmessage=A=>{const I=A.data;switch(I.type){case"load":return void D(I);case"stop":i=null;break;case"process":Q=I.imagedata,a(Q,I.frame)}};let Q=null,E=0,i=null,o=null;const D=async A=>{const I=self.origin;let g,Q=[],E=A.marker.length;console.debug("Base path:",I);const D=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.camera_para);1==D?g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:A.camera_para:0==D&&(g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:I+"/"+A.camera_para),console.debug("Loading camera at:",g),B.initWithDimensions(A.pw,A.ph,g).then((async g=>{i=g;const B=i.getCameraMatrix();i.addEventListener("getNFTMarker",(A=>{o={type:"found",matrixGL_RH:JSON.stringify(A.data.matrixGL_RH)}}));const D=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.marker);for(var a=0;a<E;a++){let g;1==D?A.addPath?g=I+"/"+A.addPath+"/"+A.marker[a]:Q=A.marker[a]:0==D&&(g=A.addPath?I+"/"+A.addPath+"/"+A.marker[a]:I+"/"+A.marker[a]),Q.push(g)}console.debug("Loading NFT marker at: ",Q),await i.loadNFTMarkers(Q,(A=>{var I=0;let g=i.getNFTData(A[I],0);C.postMessage({type:"markerInfos",marker:g}),i.trackNFTMarkerId(A[I]),console.log("loadNFTMarker -> ",A[I]),C.postMessage({type:"endLoading",end:!0}),I++}),(A=>{console.error("Error: ",A," loading marker in loadNFTMarkers!")})).catch((A=>{console.error("Error in loading marker on Worker",A)})),C.postMessage({type:"loaded",proj:JSON.stringify(B)})})).catch((A=>{console.error(A)}))},a=(A,I)=>{I!==E&&(o=null,i&&i.process&&i.process(A),E=I),null!=o?C.postMessage(o):C.postMessage({type:"not found"}),A=null}})()})();\n',"Worker",void 0,void 0)}class t{worker;markerURL;_processing=!1;vw;vh;target;uuid;name;addPath;ready;constructor(A,I,B,C,Q,E){this.markerURL=A,this.vw=I,this.vh=B,this.target=window||g.g,this.uuid=C,this.name=Q,this.ready=!1,this.addPath=E}async initialize(A,I,g){this.worker=new a;const B=this.worker;return this.target.addEventListener("terminateWorker-"+this.name,(function(){B.postMessage({type:"stop"}),B.terminate()})),await this.load(A,I,g)}process(A,I){this._processing||(this._processing=!0,this.worker.postMessage({type:"process",imagedata:A,frame:I},[A.data.buffer]))}load(A,I,g){let[B,C,Q,i,o,D]=E(this.vw,this.vh);const a=new CustomEvent("getWindowSize",{detail:{sw:B,sh:C}});this.target.dispatchEvent(a),this.worker.postMessage({type:"load",pw:Q,ph:i,camera_para:A,marker:this.markerURL,addPath:this.addPath}),this.worker.onmessage=A=>{var I=A.data;switch(I.type){case"loaded":{var B=JSON.parse(I.proj);const A=Q/o,g=i/D;B[0]*=A,B[4]*=A,B[8]*=A,B[12]*=A,B[1]*=g,B[5]*=g,B[9]*=g,B[13]*=g;const C=new CustomEvent("getProjectionMatrix",{detail:{proj:B}});this.target.dispatchEvent(C);break}case"endLoading":if(1==I.end){const A=document.getElementById("loading");A&&(A.querySelector(".loading-text").innerText="Start the tracking!",setTimeout((function(){null!=A.parentElement&&A&&A.parentElement.removeChild(A)}),2e3))}this.ready=!0,this.target.dispatchEvent(new CustomEvent("nftLoaded-"+this.uuid));break;case"markerInfos":{const A=I.marker,g=new CustomEvent("getNFTData-"+this.uuid+"-"+this.name,{detail:{dpi:A.dpi,width:A.width,height:A.height}});this.target.dispatchEvent(g);break}case"found":this.found(I);break;case"not found":this.found(null)}this._processing=!1,g()},this.worker.onerror=A=>{console.error("Worker error from NFTWorker: ",A)};let t=()=>{I(),window.requestAnimationFrame(t)};return t(),Promise.resolve(!0)}found(A){let I;if(A){I=JSON.parse(A.matrixGL_RH);const g=new CustomEvent("getMatrixGL_RH-"+this.uuid+"-"+this.name,{detail:{matrixGL_RH:I,name:this.name}});this.target.dispatchEvent(g)}else{I=null;const A=new CustomEvent("nftTrackingLost-"+this.uuid+"-"+this.name,{detail:{name:this.name}});this.target.dispatchEvent(A)}}isReady(){return this.ready}getUuid(){return this.uuid}getName(){return this.name}getMarkerUrl(){return this.markerURL}getEventTarget(){return this.target}destroy(){}}const s={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let w;const h=new Uint8Array(16);function G(){if(!w&&(w="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!w))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return w(h)}const r=[];for(let A=0;A<256;++A)r.push((A+256).toString(16).slice(1));function e(A,I=0){return(r[A[I+0]]+r[A[I+1]]+r[A[I+2]]+r[A[I+3]]+"-"+r[A[I+4]]+r[A[I+5]]+"-"+r[A[I+6]]+r[A[I+7]]+"-"+r[A[I+8]]+r[A[I+9]]+"-"+r[A[I+10]]+r[A[I+11]]+r[A[I+12]]+r[A[I+13]]+r[A[I+14]]+r[A[I+15]]).toLowerCase()}const F=function(A,I,g){if(s.randomUUID&&!I&&!A)return s.randomUUID();const B=(A=A||{}).random||(A.rng||G)();if(B[6]=15&B[6]|64,B[8]=63&B[8]|128,I){g=g||0;for(let A=0;A<16;++A)I[g+A]=B[A];return I}return e(B)},R=JSON.parse('{"name":"@webarkit/ar-nft","version":"0.14.3","main":"dist/ARnft.js","types":"types/src/index.d.ts","description":"WebAR Javscript library for markerless AR","keywords":["ARToolKit","AR","ARnft","Augmented Reality","WebAR","JavaScript","jsartoolkit","jsartoolkit5","jsartoolkitNFT","NFT","Natural Feature Tracking","image tracking","markerless"],"author":{"name":"Walter Perdan","email":"github@kalwaltart.it","url":"https://www.kalwaltart.com"},"repository":{"type":"git","url":"https://github.com/webarkit/ARnft"},"homepage":"https://github.com/webarkit/ARnft","contributors":["Github Contributors (https://github.com/webarkit/ARnft/graphs/contributors)"],"bugs":{"url":"https://github.com/webarkit/ARnft/issues"},"devDependencies":{"@types/node":"^18.13.0","@types/stats.js":"^0.17.0","@types/uuid":"^9.0.1","prettier":"^2.8.4","rimraf":"^4.1.2","stats.js":"^0.17.0","ts-loader":"^9.4.2","typedoc":"^0.23.26","typescript":"^4.9.5","webpack":"^5.75.0","webpack-cli":"^5.0.1","worker-loader":"^3.0.8"},"scripts":{"build-ts":"rimraf ./dist && tsc && webpack --mode production","dev-ts":"rimraf ./dist && tsc && webpack --mode development --progress --watch","docs":"typedoc","format-check":"prettier --check .","format":"prettier --write ."},"license":"LGPL-3.0","resolutions":{},"dependencies":{"@webarkit/jsartoolkit-nft":"^1.4.0","terser-webpack-plugin":"^5.3.6","uuid":"^9.0.0"}}'),{version:y}=R;class n{cameraView;appData;addPath;width;height;configUrl;markerUrl;camData;autoUpdate=!0;controllers;static entities;target;uuid;version;initialized;_views;constructor(A,I,B){this.width=A,this.height=I,this.configUrl=B,this.target=window||g.g,this.uuid=F(),this.version=y,console.log("ARnft ",this.version)}static async init(A,I,g,B,C,Q){return n.initWithConfig({width:A,height:I,markerUrls:g,names:B,configUrl:C,stats:Q})}static async initWithEntities(A,I,g,B,C){return n.initWithConfig({width:A,height:I,entities:g,configUrl:B,stats:C})}static async initWithConfig(A){const I=new n(A.width,A.height,A.configUrl);null!=A.autoUpdate&&(I.autoUpdate=A.autoUpdate);try{let g,B=[];const C=A,Q=A;if(null!=C.markerUrls&&null!=C.names)null==Q.entities&&(B=C.markerUrls,g=C.names,this.entities=g.map((function(A,I,g){return{name:A[0],markerUrl:B[I][0]}})));else{if(null==Q.entities)throw"markerUrls or entities can't be undefined";this.entities=Q.entities,B=this.entities.map((A=>[A.markerUrl])),g=this.entities.map((A=>[A.name]))}return await I._initialize(B,g,A.stats)}catch(A){if(A.code)return console.error(A),Promise.reject(A)}}async _initialize(I,g,B){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),B&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],this.cameraView=new Q(this._views.video),this.cameraView.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>B?o.update():null,C=()=>B?D.update():null;I.forEach(((I,B)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[B][0],this.addPath)),this.controllers[B].initialize(this.appData.cameraPara,A,C)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame))),requestAnimationFrame(a)};return a(),this}async initializeRaw(I,g,B,Q){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),Q&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],B.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>Q?o.update():null,B=()=>Q?D.update():null;I.forEach(((I,C)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[C],this.addPath)),this.controllers[C].initialize(this.appData.cameraPara,A,B)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(B.getImage(),B.getFrame()))),requestAnimationFrame(a)};return a(),this}update(){this.initialized&&!this.autoUpdate&&null!=this.cameraView&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame)))}static getEntities(){return this.entities}getEventTarget(){return this.target}get views(){return Object.freeze(this._views)}dispose(){this.disposeVideoStream(),this.disposeAllNFTs()}disposeNFT(A){var I=new Event("terminateWorker-"+A);this.target.dispatchEvent(I)}disposeAllNFTs(){n.getEntities().forEach((A=>{this.disposeNFT(A.name)}))}disposeVideoStream(){this.cameraView.destroy();var A=new Event("stopVideoStreaming");this.target.dispatchEvent(A)}}const S={ARnft:n}})(),B=B.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
!function(A,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.ARnft=I():A.ARnft=I()}("undefined"!=typeof self?self:this,(()=>(()=>{var A={466:function(A){var I;A.exports=(I=function(){function A(A){return C.appendChild(A.dom),A}function g(A){for(var I=0;I<C.children.length;I++)C.children[I].style.display=I===A?"block":"none";B=A}var B=0,C=document.createElement("div");C.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",C.addEventListener("click",(function(A){A.preventDefault(),g(++B%C.children.length)}),!1);var Q=(performance||Date).now(),E=Q,i=0,o=A(new I.Panel("FPS","#0ff","#002")),D=A(new I.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var a=A(new I.Panel("MB","#f08","#201"));return g(0),{REVISION:16,dom:C,addPanel:A,showPanel:g,begin:function(){Q=(performance||Date).now()},end:function(){i++;var A=(performance||Date).now();if(D.update(A-Q,200),A>E+1e3&&(o.update(1e3*i/(A-E),100),E=A,i=0,a)){var I=performance.memory;a.update(I.usedJSHeapSize/1048576,I.jsHeapSizeLimit/1048576)}return A},update:function(){Q=this.end()},domElement:C,setMode:g}},I.Panel=function(A,I,g){var B=1/0,C=0,Q=Math.round,E=Q(window.devicePixelRatio||1),i=80*E,o=48*E,D=3*E,a=2*E,t=3*E,s=15*E,w=74*E,h=30*E,G=document.createElement("canvas");G.width=i,G.height=o,G.style.cssText="width:80px;height:48px";var r=G.getContext("2d");return r.font="bold "+9*E+"px Helvetica,Arial,sans-serif",r.textBaseline="top",r.fillStyle=g,r.fillRect(0,0,i,o),r.fillStyle=I,r.fillText(A,D,a),r.fillRect(t,s,w,h),r.fillStyle=g,r.globalAlpha=.9,r.fillRect(t,s,w,h),{dom:G,update:function(o,e){B=Math.min(B,o),C=Math.max(C,o),r.fillStyle=g,r.globalAlpha=1,r.fillRect(0,0,i,s),r.fillStyle=I,r.fillText(Q(o)+" "+A+" ("+Q(B)+"-"+Q(C)+")",D,a),r.drawImage(G,t+E,s,w-E,h,t,s,w-E,h),r.fillRect(t+w-E,s,E,h),r.fillStyle=g,r.globalAlpha=.9,r.fillRect(t+w-E,s,E,Q((1-o/e)*h))}}},I)},477:A=>{"use strict";A.exports=function(A,I,g,B){var C=self||window;try{try{var Q;try{Q=new C.Blob([A])}catch(I){(Q=new(C.BlobBuilder||C.WebKitBlobBuilder||C.MozBlobBuilder||C.MSBlobBuilder)).append(A),Q=Q.getBlob()}var E=C.URL||C.webkitURL,i=E.createObjectURL(Q),o=new C[I](i,g);return E.revokeObjectURL(i),o}catch(B){return new C[I]("data:application/javascript,".concat(encodeURIComponent(A)),g)}}catch(A){if(!B)throw Error("Inline worker is not supported");return new C[I](B,g)}}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";g.d(B,{default:()=>S});class A{static createContainer(A){if(A.container.create){const A=document.createElement("div");A.id="app";const I=document.createElement("canvas");I.id="canvas";const g=document.createElement("video");g.id="video",g.setAttribute("autoplay",""),g.setAttribute("muted",""),g.setAttribute("playsinline",""),A.appendChild(g),A.appendChild(I);const B=document.getElementById("loading");return document.body.insertBefore(A,B),{container:A,canvas:I,video:g}}return{container:document.getElementById(A.container.containerName),canvas:document.getElementById(A.container.canvasName),video:document.getElementById("video")}}static createStats(A,I){if(A&&I.stats.createHtml){const A=document.createElement("div");A.id="stats",A.className="ui stats";const I=document.createElement("div");I.id="stats1",I.className="stats-item";const g=document.createElement("p");g.className="stats-item-title",g.innerText="Main",I.appendChild(g),A.appendChild(I);const B=document.createElement("div");B.id="stats2",B.className="stats-item";const C=document.createElement("p");C.className="stats-item-title",C.innerText="Worker",B.appendChild(C),A.appendChild(B);const Q=document.getElementById("loading");return document.body.insertBefore(A,Q),A}}static createLoading(A){if(A.loading.create){const I=document.createElement("div");I.id="loading";const g=document.createElement("img");g.src=A.loading.logo.src,g.alt=A.loading.logo.alt;const B=document.createElement("span");return B.setAttribute("class","loading-text"),B.innerText=A.loading.loadingMessage,I.appendChild(g),I.appendChild(B),document.body.insertBefore(I,document.body.firstChild),I}}}var I=g(466),C=g.n(I);class Q{canvas_process;context_process;_video;_facing;vw;vh;w;h;pw;ph;ox;oy;target;targetFrameRate=60;imageDataCache;_frame;lastCache=0;constructor(A){this.canvas_process=document.createElement("canvas"),this.context_process=this.canvas_process.getContext("2d",{alpha:!1}),this._video=A,this.target=window||g.g,this._frame=0}get facing(){return this._facing}get height(){return this.vh}get width(){return this.vw}get video(){return this._video}get frame(){return this._frame}get canvasProcess(){return this.canvas_process}get contextProcess(){return this.context_process}getFrame(){return this._frame}getImage(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}get image(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}prepareImage(){this.vw=this._video.videoWidth,this.vh=this._video.videoHeight;var A=320/Math.max(this.vw,this.vh/3*4);this.w=Math.floor(this.vw*A),this.h=Math.floor(this.vh*A),this.pw=Math.floor(Math.max(this.w,this.h/3*4)),this.ph=Math.floor(Math.max(this.h,this.w/4*3)),this.ox=Math.floor((this.pw-this.w)/2),this.oy=Math.floor((this.ph-this.h)/2),this.canvas_process.width=this.pw,this.canvas_process.height=this.ph,this.context_process.fillStyle="black",this.context_process.fillRect(0,0,this.pw,this.ph)}async initialize(A){if(this._facing=A.facingMode||"environment",null!=A.targetFrameRate&&(this.targetFrameRate=A.targetFrameRate),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return Promise.reject("Sorry, Your device does not support this experience.");try{const I={audio:!1,video:{facingMode:this._facing,width:{min:A.width.min,max:A.width.max}}};if(navigator.mediaDevices.enumerateDevices){const A=await navigator.mediaDevices.enumerateDevices(),g=[];let B=0;A.forEach((function(A){"videoinput"==A.kind&&(g[B++]=A.deviceId)})),g.length>1&&(I.video.deviceId={exact:g[g.length-1]})}const g=await navigator.mediaDevices.getUserMedia(I);return this._video.srcObject=g,this._video=await new Promise((A=>{this._video.onloadedmetadata=()=>A(this._video)})),this.prepareImage(),!0}catch(A){return Promise.reject(A)}}destroy(){const A=this._video;this.target.addEventListener("stopVideoStreaming",(function(){const I=A.srcObject;if(console.log("stop streaming"),null!=I){I.getTracks().forEach((function(A){A.stop()})),A.srcObject=null;let g=document.getElementById("app");null!=g&&g.remove()}}))}}window||g.g;function E(A,I){var g=320/Math.max(A,I/3*4),B=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?window.outerWidth/A:1;let C=A*g,Q=I*g;return[A*B,I*B,Math.max(C,Q/3*4),Math.max(Q,C/4*3),C,Q]}async function i(A){try{const I=await fetch(A);if(!I.ok)throw new Error("HTTP error, status = "+I.status);return I.json()}catch(A){return Promise.reject(A)}}var o=g(477),D=g.n(o);function a(){return D()('(()=>{var A={801:function(A,I,g){var B;"undefined"!=typeof self&&self,B=()=>(()=>{var A={230:A=>{A.exports="object"==typeof self?self.FormData:window.FormData},567:()=>{},889:()=>{},431:()=>{},61:(A,I,g)=>{var B=g(698).default;function C(){"use strict";A.exports=C=function(){return I},A.exports.__esModule=!0,A.exports.default=A.exports;var I={},g=Object.prototype,Q=g.hasOwnProperty,E=Object.defineProperty||function(A,I,g){A[I]=g.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",D=i.asyncIterator||"@@asyncIterator",a=i.toStringTag||"@@toStringTag";function w(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{w({},"")}catch(A){w=function(A,I,g){return A[I]=g}}function s(A,I,g,B){var C=I&&I.prototype instanceof h?I:h,Q=Object.create(C.prototype),i=new J(B||[]);return E(Q,"_invoke",{value:n(A,g,i)}),Q}function t(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}I.wrap=s;var G={};function h(){}function R(){}function F(){}var r={};w(r,o,(function(){return this}));var y=Object.getPrototypeOf,e=y&&y(y(K([])));e&&e!==g&&Q.call(e,o)&&(r=e);var S=F.prototype=h.prototype=Object.create(r);function M(A){["next","throw","return"].forEach((function(I){w(A,I,(function(A){return this._invoke(I,A)}))}))}function N(A,I){function g(C,E,i,o){var D=t(A[C],A,E);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&Q.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;E(this,"_invoke",{value:function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}})}function n(A,I,g){var B="suspendedStart";return function(C,Q){if("executing"===B)throw new Error("Generator is already running");if("completed"===B){if("throw"===C)throw Q;return{value:void 0,done:!0}}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=c(E,g);if(i){if(i===G)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if("suspendedStart"===B)throw B="completed",g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B="executing";var o=t(A,I,g);if("normal"===o.type){if(B=g.done?"completed":"suspendedYield",o.arg===G)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B="completed",g.method="throw",g.arg=o.arg)}}}function c(A,I){var g=I.method,B=A.iterator[g];if(void 0===B)return I.delegate=null,"throw"===g&&A.iterator.return&&(I.method="return",I.arg=void 0,c(A,I),"throw"===I.method)||"return"!==g&&(I.method="throw",I.arg=new TypeError("The iterator does not provide a \'"+g+"\' method")),G;var C=t(B,A.iterator,I.arg);if("throw"===C.type)return I.method="throw",I.arg=C.arg,I.delegate=null,G;var Q=C.arg;return Q?Q.done?(I[A.resultName]=Q.value,I.next=A.nextLoc,"return"!==I.method&&(I.method="next",I.arg=void 0),I.delegate=null,G):Q:(I.method="throw",I.arg=new TypeError("iterator result is not an object"),I.delegate=null,G)}function k(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function U(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function J(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(k,this),this.reset(!0)}function K(A){if(A){var I=A[o];if(I)return I.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var g=-1,B=function I(){for(;++g<A.length;)if(Q.call(A,g))return I.value=A[g],I.done=!1,I;return I.value=void 0,I.done=!0,I};return B.next=B}}return{next:Y}}function Y(){return{value:void 0,done:!0}}return R.prototype=F,E(S,"constructor",{value:F,configurable:!0}),E(F,"constructor",{value:R,configurable:!0}),R.displayName=w(F,a,"GeneratorFunction"),I.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===R||"GeneratorFunction"===(I.displayName||I.name))},I.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,F):(A.__proto__=F,w(A,a,"GeneratorFunction")),A.prototype=Object.create(S),A},I.awrap=function(A){return{__await:A}},M(N.prototype),w(N.prototype,D,(function(){return this})),I.AsyncIterator=N,I.async=function(A,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new N(s(A,g,B,C),Q);return I.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},M(S),w(S,a,"Generator"),w(S,o,(function(){return this})),w(S,"toString",(function(){return"[object Generator]"})),I.keys=function(A){var I=Object(A),g=[];for(var B in I)g.push(B);return g.reverse(),function A(){for(;g.length;){var B=g.pop();if(B in I)return A.value=B,A.done=!1,A}return A.done=!0,A}},I.values=K,J.prototype={constructor:J,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(U),!A)for(var I in this)"t"===I.charAt(0)&&Q.call(this,I)&&!isNaN(+I.slice(1))&&(this[I]=void 0)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var I=this;function g(g,B){return E.type="throw",E.arg=A,I.next=g,B&&(I.method="next",I.arg=void 0),!!B}for(var B=this.tryEntries.length-1;B>=0;--B){var C=this.tryEntries[B],E=C.completion;if("root"===C.tryLoc)return g("end");if(C.tryLoc<=this.prev){var i=Q.call(C,"catchLoc"),o=Q.call(C,"finallyLoc");if(i&&o){if(this.prev<C.catchLoc)return g(C.catchLoc,!0);if(this.prev<C.finallyLoc)return g(C.finallyLoc)}else if(i){if(this.prev<C.catchLoc)return g(C.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<C.finallyLoc)return g(C.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&Q.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var E=C?C.completion:{};return E.type=A,E.arg=I,C?(this.method="next",this.next=C.finallyLoc,G):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),G},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),U(g),G}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;U(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,I,g){return this.delegate={iterator:K(A),resultName:I,nextLoc:g},"next"===this.method&&(this.arg=void 0),G}},I}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function B(g){var C=I[g];if(void 0!==C)return C.exports;var Q=I[g]={exports:{}};return A[g](Q,Q.exports,B),Q.exports}B.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return B.d(I,{a:I}),I},B.d=(A,I)=>{for(var g in I)B.o(I,g)&&!B.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},B.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),B.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var C={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function Q(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function E(A){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},E(A)}function i(A){var I=function(A,I){if("object"!==E(A)||null===A)return A;var g=A[Symbol.toPrimitive];if(void 0!==g){var B=g.call(A,"string");if("object"!==E(B))return B;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(A)}(A);return"symbol"===E(I)?I:String(I)}function o(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,i(B.key),B)}}function D(A,I,g){return I&&o(A.prototype,I),g&&o(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}function a(A,I,g){return(I=i(I))in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}B.d(C,{default:()=>zA});var w,s=B(687),t=B.n(s);const G=(w=(w="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){var I,g;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,B){I=A,g=B}));var C,Q,E,i,o,D=Object.assign({},A),a=[],s="./this.program",t=(A,I)=>{throw I},G="object"==typeof window,h="function"==typeof importScripts,R="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,F="";R?(F=h?B(431).dirname(F)+"/":"//",i=B(889),o=B(431),C=(A,I)=>{var g=WI(A);return g?I?g:g.toString():(A=o.normalize(A),i.readFileSync(A,I?void 0:"utf8"))},E=A=>{var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},Q=(A,I,g)=>{var B=WI(A);B&&I(B),A=o.normalize(A),i.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(s=process.argv[1].replace(/\\\\/g,"/")),a=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof EA))throw A})),process.on("unhandledRejection",(function(A){throw A})),t=(A,I)=>{if(T())throw process.exitCode=A,I;var g;(g=I)instanceof EA||e("exiting due to exception: "+g),process.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):(G||h)&&(h?F=self.location.href:"undefined"!=typeof document&&document.currentScript&&(F=document.currentScript.src),w&&(F=w),F=0!==F.indexOf("blob:")?F.substr(0,F.replace(/[?#].*/,"").lastIndexOf("/")+1):"",C=A=>{try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=WI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(uI&&n(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},h&&(E=A=>{try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=WI(A);if(g)return g;throw I}}),Q=(A,I,g)=>{var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=()=>{if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=WI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)});var r,y=A.print||console.log.bind(console),e=A.printErr||console.warn.bind(console);Object.assign(A,D),D=null,A.arguments&&(a=A.arguments),A.thisProgram&&(s=A.thisProgram),A.quit&&(t=A.quit),A.wasmBinary&&(r=A.wasmBinary);var S,M=A.noExitRuntime||!0;"object"!=typeof WebAssembly&&P("no native wasm support detected");var N=!1;function n(A,I){A||P(I)}var c,k,U,J,K,Y,L,d,l,q="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function H(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&q)return q.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function f(A,I){return A?H(U,A,I):""}function u(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function p(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function W(I){c=I,A.HEAP8=k=new Int8Array(I),A.HEAP16=J=new Int16Array(I),A.HEAP32=Y=new Int32Array(I),A.HEAPU8=U=new Uint8Array(I),A.HEAPU16=K=new Uint16Array(I),A.HEAPU32=L=new Uint32Array(I),A.HEAPF32=d=new Float32Array(I),A.HEAPF64=l=new Float64Array(I)}A.INITIAL_MEMORY;var m,b=[],Z=[],V=[];function T(){return M}var x=0,X=null,O=null;function j(I){x++,A.monitorRunDependencies&&A.monitorRunDependencies(x)}function v(I){if(x--,A.monitorRunDependencies&&A.monitorRunDependencies(x),0==x&&(null!==X&&(clearInterval(X),X=null),O)){var g=O;O=null,g()}}function P(I){A.onAbort&&A.onAbort(I),e(I="Aborted("+I+")"),N=!0,I+=". Build with -sASSERTIONS for more info.";var B=new WebAssembly.RuntimeError(I);throw g(B),B}var z,_,$,AA,IA="data:application/octet-stream;base64,";function gA(A){return A.startsWith(IA)}function BA(A){return A.startsWith("file://")}function CA(A){try{if(A==z&&r)return new Uint8Array(r);var I=WI(A);if(I)return I;if(E)return E(A);throw"both async and sync fetching of the wasm failed"}catch(A){P(A)}}gA(z="data:application/octet-stream;base64,")||(_=z,z=A.locateFile?A.locateFile(_,F):F+_);var QA={62040:(A,I,g)=>{var B=f(A),C=f(I),Q=f(g);console.log(C+B,Q)},62179:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.log(Q+C,E,i)},62357:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.log(Q+C,E,i)},62535:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.log(Q+C,E,i)},62713:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.log(Q+C,E,i)},62891:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g);console.log(Q+C,E,B)},63034:(A,I,g)=>{var B=f(A),C=f(I),Q=f(g);console.error(C+B,Q)},63177:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.error(Q+C,E,i)},63359:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.error(Q+C,E,i)},63541:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.error(Q+C,E,i)},63723:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.error(Q+C,E,i)},63905:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g);console.error(Q+C,E,B)},64052:(A,I,g)=>{var B=f(A),C=f(I),Q=f(g);console.warn(C+B,Q)},64192:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.warn(Q+C,E,i)},64373:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.warn(Q+C,E,i)},64554:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.warn(Q+C,E,i)},64735:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g),i=f(B);console.warn(Q+C,E,i)},64916:(A,I,g,B)=>{var C=f(A),Q=f(I),E=f(g);console.warn(Q+C,E,B)},65062:function(){var A=arguments,I=0;artoolkitNFT.NFTMarkerInfo||(artoolkitNFT.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkitNFT.NFTMarkerInfo;g.id=A[I++],g.error=A[I++],g.found=1,g.pose[0]=A[I++],g.pose[1]=A[I++],g.pose[2]=A[I++],g.pose[3]=A[I++],g.pose[4]=A[I++],g.pose[5]=A[I++],g.pose[6]=A[I++],g.pose[7]=A[I++],g.pose[8]=A[I++],g.pose[9]=A[I++],g.pose[10]=A[I++],g.pose[11]=A[I++]},65768:function(){var A=arguments,I=0;artoolkitNFT.NFTMarkerInfo||(artoolkitNFT.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var g=artoolkitNFT.NFTMarkerInfo;g.id=A[I++],g.error=-1,g.found=0,g.pose[0]=0,g.pose[1]=0,g.pose[2]=0,g.pose[3]=0,g.pose[4]=0,g.pose[5]=0,g.pose[6]=0,g.pose[7]=0,g.pose[8]=0,g.pose[9]=0,g.pose[10]=0,g.pose[11]=0},66397:(A,I,g,B,C,Q)=>{artoolkitNFT.frameMalloc||(artoolkitNFT.frameMalloc={});var E=artoolkitNFT.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q}};function EA(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function iA(I){for(;I.length>0;)I.shift()(A)}function oA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){L[this.ptr+4>>2]=A},this.get_type=function(){return L[this.ptr+4>>2]},this.set_destructor=function(A){L[this.ptr+8>>2]=A},this.get_destructor=function(){return L[this.ptr+8>>2]},this.set_refcount=function(A){Y[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,k[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=k[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,k[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=k[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=Y[this.ptr>>2];Y[this.ptr>>2]=A+1},this.release_ref=function(){var A=Y[this.ptr>>2];return Y[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){L[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return L[this.ptr+16>>2]},this.get_exception_ptr=function(){if(vI(this.get_type()))return L[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var DA={isAbs:A=>"/"===A.charAt(0),splitPath:A=>/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1),normalizeArray:(A,I)=>{for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:A=>{var I=DA.isAbs(A),g="/"===A.substr(-1);return(A=DA.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:A=>{var I=DA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:A=>{if("/"===A)return"/";var I=(A=(A=DA.normalize(A)).replace(/\\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return DA.normalize(A.join("/"))},join2:(A,I)=>DA.normalize(A+"/"+I)},aA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:hA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=DA.isAbs(B)}return(I?"/":"")+(A=DA.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||"."},relative:(A,I)=>{function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=aA.resolve(A).substr(1),I=aA.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}};function wA(A,I,g){var B=g>0?g:p(A)+1,C=new Array(B),Q=u(A,C,0,C.length);return I&&(C.length=Q),C}var sA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){sA.ttys[A]={input:[],output:[],ops:I},hA.registerDevice(A,sA.stream_ops)},stream_ops:{open:function(A){var I=sA.ttys[A.node.rdev];if(!I)throw new hA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new hA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new hA.ErrnoError(29)}if(void 0===i&&0===Q)throw new hA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new hA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new hA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(R){var g=Buffer.alloc(256),B=0;try{B=i.readSync(process.stdin.fd,g,0,256,-1)}catch(A){if(!A.toString().includes("EOF"))throw A;B=0}I=B>0?g.slice(0,B).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\\n");if(!I)return null;A.input=wA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(y(H(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(y(H(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(e(H(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(e(H(A.output,0)),A.output=[])}}};function tA(A){P()}var GA={ops_table:null,mount:function(A){return GA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(hA.isBlkdev(g)||hA.isFIFO(g))throw new hA.ErrnoError(63);GA.ops_table||(GA.ops_table={dir:{node:{getattr:GA.node_ops.getattr,setattr:GA.node_ops.setattr,lookup:GA.node_ops.lookup,mknod:GA.node_ops.mknod,rename:GA.node_ops.rename,unlink:GA.node_ops.unlink,rmdir:GA.node_ops.rmdir,readdir:GA.node_ops.readdir,symlink:GA.node_ops.symlink},stream:{llseek:GA.stream_ops.llseek}},file:{node:{getattr:GA.node_ops.getattr,setattr:GA.node_ops.setattr},stream:{llseek:GA.stream_ops.llseek,read:GA.stream_ops.read,write:GA.stream_ops.write,allocate:GA.stream_ops.allocate,mmap:GA.stream_ops.mmap,msync:GA.stream_ops.msync}},link:{node:{getattr:GA.node_ops.getattr,setattr:GA.node_ops.setattr,readlink:GA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:GA.node_ops.getattr,setattr:GA.node_ops.setattr},stream:hA.chrdev_stream_ops}});var C=hA.createNode(A,I,g,B);return hA.isDir(C.mode)?(C.node_ops=GA.ops_table.dir.node,C.stream_ops=GA.ops_table.dir.stream,C.contents={}):hA.isFile(C.mode)?(C.node_ops=GA.ops_table.file.node,C.stream_ops=GA.ops_table.file.stream,C.usedBytes=0,C.contents=null):hA.isLink(C.mode)?(C.node_ops=GA.ops_table.link.node,C.stream_ops=GA.ops_table.link.stream):hA.isChrdev(C.mode)&&(C.node_ops=GA.ops_table.chrdev.node,C.stream_ops=GA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=hA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,hA.isDir(A.mode)?I.size=4096:hA.isFile(A.mode)?I.size=A.usedBytes:hA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&GA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw hA.genericErrors[44]},mknod:function(A,I,g,B){return GA.createNode(A,I,g,B)},rename:function(A,I,g){if(hA.isDir(A.mode)){var B;try{B=hA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new hA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=hA.lookupNode(A,I);for(var B in g.contents)throw new hA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=GA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!hA.isLink(A.mode))throw new hA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===k.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(GA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&hA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new hA.ErrnoError(28);return B},allocate:function(A,I,g){GA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!hA.isFile(A.node.mode))throw new hA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==c){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=tA()))throw new hA.ErrnoError(48);k.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){return GA.stream_ops.write(A,I,0,B,g,!1),0}}},hA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(A,I={})=>{if(!(A=aA.resolve(A)))return{path:"",node:null};if((I=Object.assign({follow_mount:!0,recurse_count:0},I)).recurse_count>8)throw new hA.ErrnoError(32);for(var g=A.split("/").filter((A=>!!A)),B=hA.root,C="/",Q=0;Q<g.length;Q++){var E=Q===g.length-1;if(E&&I.parent)break;if(B=hA.lookupNode(B,g[Q]),C=DA.join2(C,g[Q]),hA.isMountpoint(B)&&(!E||E&&I.follow_mount)&&(B=B.mounted.root),!E||I.follow)for(var i=0;hA.isLink(B.mode);){var o=hA.readlink(C);if(C=aA.resolve(DA.dirname(C),o),B=hA.lookupPath(C,{recurse_count:I.recurse_count+1}).node,i++>40)throw new hA.ErrnoError(32)}}return{path:C,node:B}},getPath:A=>{for(var I;;){if(hA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:(A,I)=>{for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%hA.nameTable.length},hashAddNode:A=>{var I=hA.hashName(A.parent.id,A.name);A.name_next=hA.nameTable[I],hA.nameTable[I]=A},hashRemoveNode:A=>{var I=hA.hashName(A.parent.id,A.name);if(hA.nameTable[I]===A)hA.nameTable[I]=A.name_next;else for(var g=hA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:(A,I)=>{var g=hA.mayLookup(A);if(g)throw new hA.ErrnoError(g,A);for(var B=hA.hashName(A.id,I),C=hA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return hA.lookup(A,I)},createNode:(A,I,g,B)=>{var C=new hA.FSNode(A,I,g,B);return hA.hashAddNode(C),C},destroyNode:A=>{hA.hashRemoveNode(A)},isRoot:A=>A===A.parent,isMountpoint:A=>!!A.mounted,isFile:A=>32768==(61440&A),isDir:A=>16384==(61440&A),isLink:A=>40960==(61440&A),isChrdev:A=>8192==(61440&A),isBlkdev:A=>24576==(61440&A),isFIFO:A=>4096==(61440&A),isSocket:A=>49152==(49152&A),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:A=>{var I=hA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:A=>{var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:(A,I)=>hA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2,mayLookup:A=>hA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2),mayCreate:(A,I)=>{try{return hA.lookupNode(A,I),20}catch(A){}return hA.nodePermissions(A,"wx")},mayDelete:(A,I,g)=>{var B;try{B=hA.lookupNode(A,I)}catch(A){return A.errno}var C=hA.nodePermissions(A,"wx");if(C)return C;if(g){if(!hA.isDir(B.mode))return 54;if(hA.isRoot(B)||hA.getPath(B)===hA.cwd())return 10}else if(hA.isDir(B.mode))return 31;return 0},mayOpen:(A,I)=>A?hA.isLink(A.mode)?32:hA.isDir(A.mode)&&("r"!==hA.flagsToPermissionString(I)||512&I)?31:hA.nodePermissions(A,hA.flagsToPermissionString(I)):44,MAX_OPEN_FDS:4096,nextfd:(A=0,I=hA.MAX_OPEN_FDS)=>{for(var g=A;g<=I;g++)if(!hA.streams[g])return g;throw new hA.ErrnoError(33)},getStream:A=>hA.streams[A],createStream:(A,I,g)=>{hA.FSStream||(hA.FSStream=function(){this.shared={}},hA.FSStream.prototype={},Object.defineProperties(hA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new hA.FSStream,A);var B=hA.nextfd(I,g);return A.fd=B,hA.streams[B]=A,A},closeStream:A=>{hA.streams[A]=null},chrdev_stream_ops:{open:A=>{var I=hA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:()=>{throw new hA.ErrnoError(70)}},major:A=>A>>8,minor:A=>255&A,makedev:(A,I)=>A<<8|I,registerDevice:(A,I)=>{hA.devices[A]={stream_ops:I}},getDevice:A=>hA.devices[A],getMounts:A=>{for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:(A,I)=>{"function"==typeof A&&(I=A,A=!1),hA.syncFSRequests++,hA.syncFSRequests>1&&e("warning: "+hA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=hA.getMounts(hA.root.mount),B=0;function C(A){return hA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((I=>{if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:(A,I,g)=>{var B,C="/"===g,Q=!g;if(C&&hA.root)throw new hA.ErrnoError(10);if(!C&&!Q){var E=hA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,hA.isMountpoint(B))throw new hA.ErrnoError(10);if(!hA.isDir(B.mode))throw new hA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?hA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:A=>{var I=hA.lookupPath(A,{follow_mount:!1});if(!hA.isMountpoint(I.node))throw new hA.ErrnoError(28);var g=I.node,B=g.mounted,C=hA.getMounts(B);Object.keys(hA.nameTable).forEach((A=>{for(var I=hA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&hA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:(A,I)=>A.node_ops.lookup(A,I),mknod:(A,I,g)=>{var B=hA.lookupPath(A,{parent:!0}).node,C=DA.basename(A);if(!C||"."===C||".."===C)throw new hA.ErrnoError(28);var Q=hA.mayCreate(B,C);if(Q)throw new hA.ErrnoError(Q);if(!B.node_ops.mknod)throw new hA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:(A,I)=>(I=void 0!==I?I:438,I&=4095,I|=32768,hA.mknod(A,I,0)),mkdir:(A,I)=>(I=void 0!==I?I:511,I&=1023,I|=16384,hA.mknod(A,I,0)),mkdirTree:(A,I)=>{for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{hA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:(A,I,g)=>(void 0===g&&(g=I,I=438),I|=8192,hA.mknod(A,I,g)),symlink:(A,I)=>{if(!aA.resolve(A))throw new hA.ErrnoError(44);var g=hA.lookupPath(I,{parent:!0}).node;if(!g)throw new hA.ErrnoError(44);var B=DA.basename(I),C=hA.mayCreate(g,B);if(C)throw new hA.ErrnoError(C);if(!g.node_ops.symlink)throw new hA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:(A,I)=>{var g,B,C=DA.dirname(A),Q=DA.dirname(I),E=DA.basename(A),i=DA.basename(I);if(g=hA.lookupPath(A,{parent:!0}).node,B=hA.lookupPath(I,{parent:!0}).node,!g||!B)throw new hA.ErrnoError(44);if(g.mount!==B.mount)throw new hA.ErrnoError(75);var o,D=hA.lookupNode(g,E),a=aA.relative(A,Q);if("."!==a.charAt(0))throw new hA.ErrnoError(28);if("."!==(a=aA.relative(I,C)).charAt(0))throw new hA.ErrnoError(55);try{o=hA.lookupNode(B,i)}catch(A){}if(D!==o){var w=hA.isDir(D.mode),s=hA.mayDelete(g,E,w);if(s)throw new hA.ErrnoError(s);if(s=o?hA.mayDelete(B,i,w):hA.mayCreate(B,i))throw new hA.ErrnoError(s);if(!g.node_ops.rename)throw new hA.ErrnoError(63);if(hA.isMountpoint(D)||o&&hA.isMountpoint(o))throw new hA.ErrnoError(10);if(B!==g&&(s=hA.nodePermissions(g,"w")))throw new hA.ErrnoError(s);hA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{hA.hashAddNode(D)}}},rmdir:A=>{var I=hA.lookupPath(A,{parent:!0}).node,g=DA.basename(A),B=hA.lookupNode(I,g),C=hA.mayDelete(I,g,!0);if(C)throw new hA.ErrnoError(C);if(!I.node_ops.rmdir)throw new hA.ErrnoError(63);if(hA.isMountpoint(B))throw new hA.ErrnoError(10);I.node_ops.rmdir(I,g),hA.destroyNode(B)},readdir:A=>{var I=hA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new hA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:A=>{var I=hA.lookupPath(A,{parent:!0}).node;if(!I)throw new hA.ErrnoError(44);var g=DA.basename(A),B=hA.lookupNode(I,g),C=hA.mayDelete(I,g,!1);if(C)throw new hA.ErrnoError(C);if(!I.node_ops.unlink)throw new hA.ErrnoError(63);if(hA.isMountpoint(B))throw new hA.ErrnoError(10);I.node_ops.unlink(I,g),hA.destroyNode(B)},readlink:A=>{var I=hA.lookupPath(A).node;if(!I)throw new hA.ErrnoError(44);if(!I.node_ops.readlink)throw new hA.ErrnoError(28);return aA.resolve(hA.getPath(I.parent),I.node_ops.readlink(I))},stat:(A,I)=>{var g=hA.lookupPath(A,{follow:!I}).node;if(!g)throw new hA.ErrnoError(44);if(!g.node_ops.getattr)throw new hA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:A=>hA.stat(A,!0),chmod:(A,I,g)=>{var B;if(!(B="string"==typeof A?hA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new hA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:(A,I)=>{hA.chmod(A,I,!0)},fchmod:(A,I)=>{var g=hA.getStream(A);if(!g)throw new hA.ErrnoError(8);hA.chmod(g.node,I)},chown:(A,I,g,B)=>{var C;if(!(C="string"==typeof A?hA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new hA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:(A,I,g)=>{hA.chown(A,I,g,!0)},fchown:(A,I,g)=>{var B=hA.getStream(A);if(!B)throw new hA.ErrnoError(8);hA.chown(B.node,I,g)},truncate:(A,I)=>{if(I<0)throw new hA.ErrnoError(28);var g;if(!(g="string"==typeof A?hA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new hA.ErrnoError(63);if(hA.isDir(g.mode))throw new hA.ErrnoError(31);if(!hA.isFile(g.mode))throw new hA.ErrnoError(28);var B=hA.nodePermissions(g,"w");if(B)throw new hA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:(A,I)=>{var g=hA.getStream(A);if(!g)throw new hA.ErrnoError(8);if(0==(2097155&g.flags))throw new hA.ErrnoError(28);hA.truncate(g.node,I)},utime:(A,I,g)=>{var B=hA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:(I,g,B)=>{if(""===I)throw new hA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?hA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==typeof I)C=I;else{I=DA.normalize(I);try{C=hA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new hA.ErrnoError(20)}else C=hA.mknod(I,B,0),Q=!0;if(!C)throw new hA.ErrnoError(44);if(hA.isChrdev(C.mode)&&(g&=-513),65536&g&&!hA.isDir(C.mode))throw new hA.ErrnoError(54);if(!Q){var E=hA.mayOpen(C,g);if(E)throw new hA.ErrnoError(E)}512&g&&!Q&&hA.truncate(C,0),g&=-131713;var i=hA.createStream({node:C,path:hA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(hA.readFiles||(hA.readFiles={}),I in hA.readFiles||(hA.readFiles[I]=1)),i},close:A=>{if(hA.isClosed(A))throw new hA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{hA.closeStream(A.fd)}A.fd=null},isClosed:A=>null===A.fd,llseek:(A,I,g)=>{if(hA.isClosed(A))throw new hA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new hA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new hA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:(A,I,g,B,C)=>{if(B<0||C<0)throw new hA.ErrnoError(28);if(hA.isClosed(A))throw new hA.ErrnoError(8);if(1==(2097155&A.flags))throw new hA.ErrnoError(8);if(hA.isDir(A.node.mode))throw new hA.ErrnoError(31);if(!A.stream_ops.read)throw new hA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new hA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:(A,I,g,B,C,Q)=>{if(B<0||C<0)throw new hA.ErrnoError(28);if(hA.isClosed(A))throw new hA.ErrnoError(8);if(0==(2097155&A.flags))throw new hA.ErrnoError(8);if(hA.isDir(A.node.mode))throw new hA.ErrnoError(31);if(!A.stream_ops.write)throw new hA.ErrnoError(28);A.seekable&&1024&A.flags&&hA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new hA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:(A,I,g)=>{if(hA.isClosed(A))throw new hA.ErrnoError(8);if(I<0||g<=0)throw new hA.ErrnoError(28);if(0==(2097155&A.flags))throw new hA.ErrnoError(8);if(!hA.isFile(A.node.mode)&&!hA.isDir(A.node.mode))throw new hA.ErrnoError(43);if(!A.stream_ops.allocate)throw new hA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:(A,I,g,B,C)=>{if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new hA.ErrnoError(2);if(1==(2097155&A.flags))throw new hA.ErrnoError(2);if(!A.stream_ops.mmap)throw new hA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:(A,I,g,B,C)=>A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0,munmap:A=>0,ioctl:(A,I,g)=>{if(!A.stream_ops.ioctl)throw new hA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:(A,I={})=>{if(I.flags=I.flags||0,I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error(\'Invalid encoding type "\'+I.encoding+\'"\');var g,B=hA.open(A,I.flags),C=hA.stat(A).size,Q=new Uint8Array(C);return hA.read(B,Q,0,C,0),"utf8"===I.encoding?g=H(Q,0):"binary"===I.encoding&&(g=Q),hA.close(B),g},writeFile:(A,I,g={})=>{g.flags=g.flags||577;var B=hA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(p(I)+1),Q=u(I,C,0,C.length);hA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");hA.write(B,I,0,I.byteLength,void 0,g.canOwn)}hA.close(B)},cwd:()=>hA.currentPath,chdir:A=>{var I=hA.lookupPath(A,{follow:!0});if(null===I.node)throw new hA.ErrnoError(44);if(!hA.isDir(I.node.mode))throw new hA.ErrnoError(54);var g=hA.nodePermissions(I.node,"x");if(g)throw new hA.ErrnoError(g);hA.currentPath=I.path},createDefaultDirectories:()=>{hA.mkdir("/tmp"),hA.mkdir("/home"),hA.mkdir("/home/web_user")},createDefaultDevices:()=>{hA.mkdir("/dev"),hA.registerDevice(hA.makedev(1,3),{read:()=>0,write:(A,I,g,B,C)=>B}),hA.mkdev("/dev/null",hA.makedev(1,3)),sA.register(hA.makedev(5,0),sA.default_tty_ops),sA.register(hA.makedev(6,0),sA.default_tty1_ops),hA.mkdev("/dev/tty",hA.makedev(5,0)),hA.mkdev("/dev/tty1",hA.makedev(6,0));var A=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return()=>(crypto.getRandomValues(A),A[0])}if(R)try{var I=B(567);return()=>I.randomBytes(1)[0]}catch(A){}return()=>P("randomDevice")}();hA.createDevice("/dev","random",A),hA.createDevice("/dev","urandom",A),hA.mkdir("/dev/shm"),hA.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{hA.mkdir("/proc");var A=hA.mkdir("/proc/self");hA.mkdir("/proc/self/fd"),hA.mount({mount:()=>{var I=hA.createNode(A,"fd",16895,73);return I.node_ops={lookup:(A,I)=>{var g=+I,B=hA.getStream(g);if(!B)throw new hA.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>B.path}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams:()=>{A.stdin?hA.createDevice("/dev","stdin",A.stdin):hA.symlink("/dev/tty","/dev/stdin"),A.stdout?hA.createDevice("/dev","stdout",null,A.stdout):hA.symlink("/dev/tty","/dev/stdout"),A.stderr?hA.createDevice("/dev","stderr",null,A.stderr):hA.symlink("/dev/tty1","/dev/stderr"),hA.open("/dev/stdin",0),hA.open("/dev/stdout",1),hA.open("/dev/stderr",1)},ensureErrnoError:()=>{hA.ErrnoError||(hA.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},hA.ErrnoError.prototype=new Error,hA.ErrnoError.prototype.constructor=hA.ErrnoError,[44].forEach((A=>{hA.genericErrors[A]=new hA.ErrnoError(A),hA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:()=>{hA.ensureErrnoError(),hA.nameTable=new Array(4096),hA.mount(GA,{},"/"),hA.createDefaultDirectories(),hA.createDefaultDevices(),hA.createSpecialDirectories(),hA.filesystems={MEMFS:GA}},init:(I,g,B)=>{hA.init.initialized=!0,hA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,hA.createStandardStreams()},quit:()=>{hA.init.initialized=!1;for(var A=0;A<hA.streams.length;A++){var I=hA.streams[A];I&&hA.close(I)}},getMode:(A,I)=>{var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:(A,I)=>{var g=hA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:(A,I)=>{try{A=(B=hA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=hA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=DA.basename(A),B=hA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:(A,I,g,B)=>{A="string"==typeof A?A:hA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=DA.join2(A,Q);try{hA.mkdir(E)}catch(A){}A=E}}return E},createFile:(A,I,g,B,C)=>{var Q=DA.join2("string"==typeof A?A:hA.getPath(A),I),E=hA.getMode(B,C);return hA.create(Q,E)},createDataFile:(A,I,g,B,C,Q)=>{var E=I;A&&(A="string"==typeof A?A:hA.getPath(A),E=I?DA.join2(A,I):A);var i=hA.getMode(B,C),o=hA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}hA.chmod(o,146|i);var s=hA.open(o,577);hA.write(s,g,0,g.length,0,Q),hA.close(s),hA.chmod(o,i)}return o},createDevice:(A,I,g,B)=>{var C=DA.join2("string"==typeof A?A:hA.getPath(A),I),Q=hA.getMode(!!g,!!B);hA.createDevice.major||(hA.createDevice.major=64);var E=hA.makedev(hA.createDevice.major++,0);return hA.registerDevice(E,{open:A=>{A.seekable=!1},close:A=>{B&&B.buffer&&B.buffer.length&&B(10)},read:(A,I,B,C,Q)=>{for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new hA.ErrnoError(29)}if(void 0===o&&0===E)throw new hA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:(A,I,g,C,Q)=>{for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new hA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),hA.mkdev(C,Q,E)},forceLoadFile:A=>{if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!C)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=wA(C(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new hA.ErrnoError(29)}},createLazyFile:(A,I,g,B,C)=>{function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn\'t load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((A=>{var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=((A,I)=>{if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),C.responseType="arraybuffer",C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn\'t load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):wA(C.responseText||"",!0)})(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,y("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!h)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var o=hA.createFile(A,I,i,B,C);i.contents?o.contents=i.contents:i.url&&(o.contents=null,o.url=i.url),Object.defineProperties(o,{usedBytes:{get:function(){return this.contents.length}}});var D={};function a(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(o.stream_ops).forEach((A=>{var I=o.stream_ops[A];D[A]=function(){return hA.forceLoadFile(o),I.apply(null,arguments)}})),D.read=(A,I,g,B,C)=>(hA.forceLoadFile(o),a(A,I,g,B,C)),D.mmap=(A,I,g,B,C)=>{hA.forceLoadFile(o);var Q=tA();if(!Q)throw new hA.ErrnoError(48);return a(A,k,Q,I,g),{ptr:Q,allocated:!0}},o.stream_ops=D,o},createPreloadedFile:(A,I,g,B,C,E,i,o,D,a)=>{var w=I?aA.resolve(DA.join2(A,I)):A;function s(g){function Q(g){a&&a(),o||hA.createDataFile(A,I,g,B,C,D),E&&E(),v()}Browser.handledByPreloadPlugin(g,w,Q,(()=>{i&&i(),v()}))||Q(g)}j(),"string"==typeof g?function(A,I,g,B){var C="al "+A;Q(A,(I=>{n(I,\'Loading data file "\'+A+\'" failed (no arrayBuffer).\'),s(new Uint8Array(I)),C&&v()}),(I=>{if(!g)throw\'Loading data file "\'+A+\'" failed.\';g()})),C&&j()}(g,0,i):s(g)},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(A,I,g)=>{I=I||(()=>{}),g=g||(()=>{});var B=hA.indexedDB();try{var C=B.open(hA.DB_NAME(),hA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=()=>{y("creating db"),C.result.createObjectStore(hA.DB_STORE_NAME)},C.onsuccess=()=>{var B=C.result.transaction([hA.DB_STORE_NAME],"readwrite"),Q=B.objectStore(hA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((A=>{var I=Q.put(hA.analyzePath(A).object.contents,A);I.onsuccess=()=>{++E+i==o&&D()},I.onerror=()=>{i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:(A,I,g)=>{I=I||(()=>{}),g=g||(()=>{});var B=hA.indexedDB();try{var C=B.open(hA.DB_NAME(),hA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=()=>{var B=C.result;try{var Q=B.transaction([hA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(hA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((A=>{var I=E.get(A);I.onsuccess=()=>{hA.analyzePath(A).exists&&hA.unlink(A),hA.createDataFile(DA.dirname(A),DA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=()=>{o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},RA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(DA.isAbs(I))return I;var B;if(B=-100===A?hA.cwd():RA.getStreamFromFD(A).path,0==I.length){if(!g)throw new hA.ErrnoError(44);return B}return DA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&DA.normalize(I)!==DA.normalize(hA.getPath(A.node)))return-54;throw A}return Y[g>>2]=B.dev,Y[g+8>>2]=B.ino,Y[g+12>>2]=B.mode,L[g+16>>2]=B.nlink,Y[g+20>>2]=B.uid,Y[g+24>>2]=B.gid,Y[g+28>>2]=B.rdev,AA=[B.size>>>0,($=B.size,+Math.abs($)>=1?$>0?(0|Math.min(+Math.floor($/4294967296),4294967295))>>>0:~~+Math.ceil(($-+(~~$>>>0))/4294967296)>>>0:0)],Y[g+40>>2]=AA[0],Y[g+44>>2]=AA[1],Y[g+48>>2]=4096,Y[g+52>>2]=B.blocks,AA=[Math.floor(B.atime.getTime()/1e3)>>>0,($=Math.floor(B.atime.getTime()/1e3),+Math.abs($)>=1?$>0?(0|Math.min(+Math.floor($/4294967296),4294967295))>>>0:~~+Math.ceil(($-+(~~$>>>0))/4294967296)>>>0:0)],Y[g+56>>2]=AA[0],Y[g+60>>2]=AA[1],L[g+64>>2]=0,AA=[Math.floor(B.mtime.getTime()/1e3)>>>0,($=Math.floor(B.mtime.getTime()/1e3),+Math.abs($)>=1?$>0?(0|Math.min(+Math.floor($/4294967296),4294967295))>>>0:~~+Math.ceil(($-+(~~$>>>0))/4294967296)>>>0:0)],Y[g+72>>2]=AA[0],Y[g+76>>2]=AA[1],L[g+80>>2]=0,AA=[Math.floor(B.ctime.getTime()/1e3)>>>0,($=Math.floor(B.ctime.getTime()/1e3),+Math.abs($)>=1?$>0?(0|Math.min(+Math.floor($/4294967296),4294967295))>>>0:~~+Math.ceil(($-+(~~$>>>0))/4294967296)>>>0:0)],Y[g+88>>2]=AA[0],Y[g+92>>2]=AA[1],L[g+96>>2]=0,AA=[B.ino>>>0,($=B.ino,+Math.abs($)>=1?$>0?(0|Math.min(+Math.floor($/4294967296),4294967295))>>>0:~~+Math.ceil(($-+(~~$>>>0))/4294967296)>>>0:0)],Y[g+104>>2]=AA[0],Y[g+108>>2]=AA[1],0},doMsync:function(A,I,g,B,C){if(!hA.isFile(I.node.mode))throw new hA.ErrnoError(43);if(2&B)return 0;var Q=U.slice(A,A+g);hA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return RA.varargs+=4,Y[RA.varargs-4>>2]},getStr:function(A){return f(A)},getStreamFromFD:function(A){var I=hA.getStream(A);if(!I)throw new hA.ErrnoError(8);return I}},FA={};function rA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function yA(A){return this.fromWireType(Y[A>>2])}var eA={},SA={},MA={};function NA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=48&&I<=57?"_"+A:A}function nA(A,I){return A=NA(A),new Function("body","return function "+A+\'() {\\n    "use strict";    return body.apply(this, arguments);\\n};\\n\')(I)}function cA(A,I){var g=nA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\\n"+g.replace(/^Error(:[^\\n]*)?\\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var kA=void 0;function UA(A){throw new kA(A)}function JA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&UA("Mismatched type converter count");for(var C=0;C<A.length;++C)qA(A[C],B[C])}A.forEach((function(A){MA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach(((A,I)=>{SA.hasOwnProperty(A)?C[I]=SA[A]:(Q.push(A),eA.hasOwnProperty(A)||(eA[A]=[]),eA[A].push((()=>{C[I]=SA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function KA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var YA=void 0;function LA(A){for(var I="",g=A;U[g];)I+=YA[U[g++]];return I}var dA=void 0;function lA(A){throw new dA(A)}function qA(A,I,g={}){if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||lA(\'type "\'+B+\'" must have a positive integer typeid pointer\'),SA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;lA("Cannot register type \'"+B+"\' twice")}if(SA[A]=I,delete MA[A],eA.hasOwnProperty(A)){var C=eA[A];delete eA[A],C.forEach((A=>A()))}}function HA(A){lA(A.$$.ptrType.registeredClass.name+" instance already deleted")}var fA=!1;function uA(A){}function pA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function WA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=WA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var mA={},bA=[];function ZA(){for(;bA.length;){var A=bA.pop();A.$$.deleteScheduled=!1,A.delete()}}var VA=void 0,TA={};function xA(A,I){return I.ptrType&&I.ptr||UA("makeClassHandle requires ptr and ptrType"),!!I.smartPtrType!=!!I.smartPtr&&UA("Both smartPtrType and smartPtr must be specified"),I.count={value:1},XA(Object.create(A,{$$:{value:I}}))}function XA(A){return"undefined"==typeof FinalizationRegistry?(XA=A=>A,A):(fA=new FinalizationRegistry((A=>{pA(A.$$)})),XA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};fA.register(A,g,A)}return A},uA=A=>fA.unregister(A),XA(A))}function OA(){}function jA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||lA("Function \'"+g+"\' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function vA(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&lA("Cannot register public name \'"+I+"\' twice"),jA(A,I,I),A.hasOwnProperty(B)&&lA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function PA(A,I,g,B,C,Q,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=C,this.getActualType=Q,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function zA(A,I,g){for(;I!==g;)I.upcast||lA("Expected null or instance of "+g.name+", got an instance of "+I.name),A=I.upcast(A),I=I.baseClass;return A}function _A(A,I){if(null===I)return this.isReference&&lA("null is not a valid "+this.name),0;I.$$||lA(\'Cannot pass "\'+hI(I)+\'" as a \'+this.name),I.$$.ptr||lA("Cannot pass deleted object as a pointer of type "+this.name);var g=I.$$.ptrType.registeredClass;return zA(I.$$.ptr,g,this.registeredClass)}function $A(A,I){var g;if(null===I)return this.isReference&&lA("null is not a valid "+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||lA(\'Cannot pass "\'+hI(I)+\'" as a \'+this.name),I.$$.ptr||lA("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&I.$$.ptrType.isConst&&lA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);var B=I.$$.ptrType.registeredClass;if(g=zA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&lA("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:lA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var C=I.clone();g=this.rawShare(g,GI.toHandle((function(){C.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:lA("Unsupporting sharing policy")}return g}function AI(A,I){if(null===I)return this.isReference&&lA("null is not a valid "+this.name),0;I.$$||lA(\'Cannot pass "\'+hI(I)+\'" as a \'+this.name),I.$$.ptr||lA("Cannot pass deleted object as a pointer of type "+this.name),I.$$.ptrType.isConst&&lA("Cannot convert argument of type "+I.$$.ptrType.name+" to parameter type "+this.name);var g=I.$$.ptrType.registeredClass;return zA(I.$$.ptr,g,this.registeredClass)}function II(A,I,g,B,C,Q,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=C,this.pointeeType=Q,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,C||void 0!==I.baseClass?this.toWireType=$A:B?(this.toWireType=_A,this.destructorFunction=null):(this.toWireType=AI,this.destructorFunction=null)}function gI(I,g,B){A.hasOwnProperty(I)||UA("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function BI(A){return m.get(A)}function CI(I,g,B){return I.includes("j")?function(I,g,B){var C=A["dynCall_"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):BI(g).apply(null,B)}function QI(A,I){var g,B,C,Q=(A=LA(A)).includes("j")?(g=A,B=I,C=[],function(){return C.length=0,Object.assign(C,arguments),CI(g,B,C)}):BI(I);return"function"!=typeof Q&&lA("unknown function pointer with signature "+A+": "+I),Q}var EI=void 0;function iI(A){var I=xI(A),g=LA(I);return VI(I),g}function oI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||SA[I]||(MA[I]?MA[I].forEach(A):(g.push(I),B[I]=!0))})),new EI(A+": "+g.map(iI).join([", "]))}function DI(A,I){for(var g=[],B=0;B<A;B++)g.push(L[I+4*B>>2]);return g}function aI(A,I,g,B,C){var Q=I.length;Q<2&&lA("argTypes array size mismatch! Must at least get return value and \'this\' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D="void"!==I[0].name,a="",w="";for(o=0;o<Q-2;++o)a+=(0!==o?", ":"")+"arg"+o,w+=(0!==o?", ":"")+"arg"+o+"Wired";var s="return function "+NA(A)+"("+a+") {\\nif (arguments.length !== "+(Q-2)+") {\\nthrowBindingError(\'function "+A+" called with \' + arguments.length + \' arguments, expected "+(Q-2)+" args!\');\\n}\\n";i&&(s+="var destructors = [];\\n");var t=i?"destructors":"null",G=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],h=[lA,B,C,rA,I[0],I[1]];for(E&&(s+="var thisWired = classParam.toWireType("+t+", this);\\n"),o=0;o<Q-2;++o)s+="var arg"+o+"Wired = argType"+o+".toWireType("+t+", arg"+o+"); // "+I[o+2].name+"\\n",G.push("argType"+o),h.push(I[o+2]);if(E&&(w="thisWired"+(w.length>0?", ":"")+w),s+=(D?"var rv = ":"")+"invoker(fn"+(w.length>0?", ":"")+w+");\\n",i)s+="runDestructors(destructors);\\n";else for(o=E?1:2;o<I.length;++o){var R=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(s+=R+"_dtor("+R+"); // "+I[o].name+"\\n",G.push(R+"_dtor"),h.push(I[o].destructorFunction))}return D&&(s+="var ret = retType.fromWireType(rv);\\nreturn ret;\\n"),s+="}\\n",G.push(s),function(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+typeof A+" which is not a function");var g=nA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}(Function,G).apply(null,h)}var wI=[],sI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function tI(A){A>4&&0==--sI[A].refcount&&(sI[A]=void 0,wI.push(A))}var GI={toValue:A=>(A||lA("Cannot use deleted val. handle = "+A),sI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=wI.length?wI.pop():sI.length;return sI[I]={refcount:1,value:A},I}}};function hI(A){if(null===A)return"null";var I=typeof A;return"object"===I||"array"===I||"function"===I?A.toString():""+A}function RI(A,I){switch(I){case 2:return function(A){return this.fromWireType(d[A>>2])};case 3:return function(A){return this.fromWireType(l[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function FI(A,I,g){switch(I){case 0:return g?function(A){return k[A]}:function(A){return U[A]};case 1:return g?function(A){return J[A>>1]}:function(A){return K[A>>1]};case 2:return g?function(A){return Y[A>>2]}:function(A){return L[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var rI="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function yI(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&K[B];)++B;if((g=B<<1)-A>32&&rI)return rI.decode(U.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=J[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function eI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);J[I>>1]=E,I+=2}return J[I>>1]=0,I-B}function SI(A){return 2*A.length}function MI(A,I){for(var g=0,B="";!(g>=I/4);){var C=Y[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function NI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),Y[I>>2]=E,(I+=4)+4>C)break}return Y[I>>2]=0,I-B}function nI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function cI(A){return A%4==0&&(A%100!=0||A%400==0)}var kI=[0,31,60,91,121,152,182,213,244,274,305,335],UI=[0,31,59,90,120,151,181,212,243,273,304,334];function JI(A){var I=p(A)+1,g=ZI(I);return g&&u(A,k,g,I),g}var KI=[];function YI(A){try{return S.grow(A-c.byteLength+65535>>>16),W(S.buffer),1}catch(A){}}var LI={};function dI(){if(!dI.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"};for(var I in LI)void 0===LI[I]?delete A[I]:A[I]=LI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);dI.strings=g}return dI.strings}var lI=[31,29,31,30,31,30,31,31,30,31,30,31],qI=[31,28,31,30,31,30,31,31,30,31,30,31];function HI(A,I,g,B){var C=Y[B+40>>2],Q={tm_sec:Y[B>>2],tm_min:Y[B+4>>2],tm_hour:Y[B+8>>2],tm_mday:Y[B+12>>2],tm_mon:Y[B+16>>2],tm_year:Y[B+20>>2],tm_wday:Y[B+24>>2],tm_yday:Y[B+28>>2],tm_isdst:Y[B+32>>2],tm_gmtoff:Y[B+36>>2],tm_zone:C?f(C):""},E=f(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,"0")}function t(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function G(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=cI(g.getFullYear()),C=g.getMonth(),Q=(B?lI:qI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=G(g),Q=G(B);return t(C,I)<=0?t(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return s((A.tm_year+1900)/100|0,2)},"%d":function(A){return s(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return s(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},"%j":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(cI(A.tm_year+1900)?lI:qI,A.tm_mon-1),3)},"%m":function(A){return s(A.tm_mon+1,2)},"%M":function(A){return s(A.tm_min,2)},"%n":function(){return"\\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return s(A.tm_sec,2)},"%t":function(){return"\\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&cI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&cI(A.tm_year%400-1))&&I++}return s(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\\0\\0"),R)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),R[o](Q)));var F=wA(E=E.replace(/\\0\\0/g,"%"),!1);return F.length>I?0:(function(A,I){k.set(A,I)}(F,A),F.length-1)}var fI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=hA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(fI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return hA.isDir(this.mode)}},isDevice:{get:function(){return hA.isChrdev(this.mode)}}}),hA.FSNode=fI,hA.staticInit(),kA=A.InternalError=cA(Error,"InternalError"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);YA=A}(),dA=A.BindingError=cA(Error,"BindingError"),OA.prototype.isAliasOf=function(A){if(!(this instanceof OA))return!1;if(!(A instanceof OA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,C=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)C=B.upcast(C),B=B.baseClass;return I===B&&g===C},OA.prototype.clone=function(){if(this.$$.ptr||HA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=XA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},OA.prototype.delete=function(){this.$$.ptr||HA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&lA("Object already scheduled for deletion"),uA(this),pA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},OA.prototype.isDeleted=function(){return!this.$$.ptr},OA.prototype.deleteLater=function(){return this.$$.ptr||HA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&lA("Object already scheduled for deletion"),bA.push(this),1===bA.length&&VA&&VA(ZA),this.$$.deleteScheduled=!0,this},A.getInheritedInstanceCount=function(){return Object.keys(TA).length},A.getLiveInheritedInstances=function(){var A=[];for(var I in TA)TA.hasOwnProperty(I)&&A.push(TA[I]);return A},A.flushPendingDeletes=ZA,A.setDelayFunction=function(A){VA=A,bA.length&&VA&&VA(ZA)},II.prototype.getPointee=function(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},II.prototype.destructor=function(A){this.rawDestructor&&this.rawDestructor(A)},II.prototype.argPackAdvance=8,II.prototype.readValueFromPointer=yA,II.prototype.deleteObject=function(A){null!==A&&A.delete()},II.prototype.fromWireType=function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=function(A,I){return I=function(A,I){for(void 0===I&&lA("ptr should not be undefined");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),TA[I]}(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function C(){return this.isSmartPointer?xA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):xA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var Q,E=this.registeredClass.getActualType(I),i=mA[E];if(!i)return C.call(this);Q=this.isConst?i.constPointerType:i.pointerType;var o=WA(I,this.registeredClass,Q.registeredClass);return null===o?C.call(this):this.isSmartPointer?xA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o,smartPtrType:this,smartPtr:A}):xA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o})},EI=A.UnboundTypeError=cA(Error,"UnboundTypeError"),A.count_emval_handles=function(){for(var A=0,I=5;I<sI.length;++I)void 0!==sI[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<sI.length;++A)if(void 0!==sI[A])return sI[A];return null};var uI=!1,pI="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function WI(A){if(gA(A))return function(A){if("boolean"==typeof R&&R){var I=Buffer.from(A,"base64");return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=pI(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(IA.length))}var mI,bI={h:function(A){return ZI(A+24)+24},g:function(A,I,g){throw new oA(A).init(I,g),A},r:function(A,I,g){RA.varargs=g;try{var B=RA.getStreamFromFD(A);switch(I){case 0:return(C=RA.get())<0?-28:hA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=RA.get();return B.flags|=C,0;case 5:return C=RA.get(),J[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return Y[TI()>>2]=28,-1}}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return-A.errno}},J:function(A,I,g){RA.varargs=g;try{var B=RA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=RA.get();return Y[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=RA.get(),hA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return-A.errno}},K:function(A,I,g,B){RA.varargs=B;try{I=RA.getStr(I),I=RA.calculateAt(A,I);var C=B?RA.get():0;return hA.open(I,g,C).fd}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return-A.errno}},U:function(A){var I=FA[A];delete FA[A];var g=I.rawConstructor,B=I.rawDestructor,C=I.fields;JA([A],C.map((A=>A.getterReturnType)).concat(C.map((A=>A.setterArgumentType))),(A=>{var Q={};return C.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+C.length],a=I.setter,w=I.setterContext;Q[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];a(w,A,D.toWireType(g,I)),rA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in Q)I[g]=Q[g].read(A);return B(A),I},toWireType:function(A,I){for(var C in Q)if(!(C in I))throw new TypeError(\'Missing field:  "\'+C+\'"\');var E=g();for(C in Q)Q[C].write(E,I[C]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:yA,destructorFunction:B}]}))},B:function(A,I,g,B,C){},O:function(A,I,g,B,C){var Q=KA(g);qA(A,{name:I=LA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=k;else if(2===g)B=J;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=Y}return this.fromWireType(B[A>>Q])},destructorFunction:null})},o:function(A,I,g,B,C,Q,E,i,o,D,a,w,s){a=LA(a),Q=QI(C,Q),i&&(i=QI(E,i)),D&&(D=QI(o,D)),s=QI(w,s);var t=NA(a);vA(t,(function(){oI("Cannot construct "+a+" due to unbound types",[B])})),JA([A,I,g],B?[B]:[],(function(I){var g,C;I=I[0],C=B?(g=I.registeredClass).instancePrototype:OA.prototype;var E=nA(t,(function(){if(Object.getPrototypeOf(this)!==o)throw new dA("Use \'new\' to construct "+a);if(void 0===w.constructor_body)throw new dA(a+" has no accessible constructor");var A=w.constructor_body[arguments.length];if(void 0===A)throw new dA("Tried to invoke ctor of "+a+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(w.constructor_body).toString()+") parameters instead!");return A.apply(this,arguments)})),o=Object.create(C,{constructor:{value:E}});E.prototype=o;var w=new PA(a,E,o,s,g,Q,i,D),G=new II(a,w,!0,!1,!1),h=new II(a+"*",w,!1,!1,!1),R=new II(a+" const*",w,!1,!0,!1);return mA[A]={pointerType:h,constPointerType:R},gI(t,E),[G,h,R]}))},n:function(A,I,g,B,C,Q){n(I>0);var E=DI(I,g);C=QI(B,C),JA([],[A],(function(A){var g="constructor "+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new dA("Cannot register multiple constructors with identical number of parameters ("+(I-1)+") for class \'"+A.name+"\'! Overload resolution is currently only performed using the parameter count, not actual type info!");return A.registeredClass.constructor_body[I-1]=()=>{oI("Cannot construct "+A.name+" due to unbound types",E)},JA([],E,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=aI(g,B,null,C,Q),[]})),[]}))},d:function(A,I,g,B,C,Q,E,i){var o=DI(g,B);I=LA(I),Q=QI(C,Q),JA([],[A],(function(A){var B=(A=A[0]).name+"."+I;function C(){oI("Cannot call "+B+" due to unbound types",o)}I.startsWith("@@")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,a=D[I];return void 0===a||void 0===a.overloadTable&&a.className!==A.name&&a.argCount===g-2?(C.argCount=g-2,C.className=A.name,D[I]=C):(jA(D,I,B),D[I].overloadTable[g-2]=C),JA([],o,(function(C){var i=aI(B,C,A,Q,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},v:function(I,g,B){I=LA(I),JA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},N:function(A,I){qA(A,{name:I=LA(I),fromWireType:function(A){var I=GI.toValue(A);return tI(A),I},toWireType:function(A,I){return GI.toHandle(I)},argPackAdvance:8,readValueFromPointer:yA,destructorFunction:null})},u:function(A,I,g){var B=KA(g);qA(A,{name:I=LA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:RI(I,B),destructorFunction:null})},e:function(A,I,g,B,C,Q){var E=DI(I,g);A=LA(A),C=QI(B,C),vA(A,(function(){oI("Cannot call "+A+" due to unbound types",E)}),I-1),JA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return gI(A,aI(A,B,null,C,Q),I-1),[]}))},f:function(A,I,g,B,C){I=LA(I),-1===C&&(C=4294967295);var Q=KA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes("unsigned");qA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:FI(I,Q,0!==B),destructorFunction:null})},b:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=L,g=I[A>>=2],C=I[A+1];return new B(c,C,g)}qA(A,{name:g=LA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},t:function(A,I){var g="std::string"===(I=LA(I));qA(A,{name:I,fromWireType:function(A){var I,B=L[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==U[i]){var o=f(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(U[C+E]);I=D.join("")}return VI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||lA("Cannot pass non-string to std::string"),B=g&&C?p(I):I.length;var Q=ZI(4+B+1),E=Q+4;if(L[Q>>2]=B,g&&C)u(I,U,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(VI(E),lA("String has UTF-16 code units that do not fit in 8 bits")),U[E+i]=o}else for(i=0;i<B;++i)U[E+i]=I[i];return null!==A&&A.push(VI,Q),Q},argPackAdvance:8,readValueFromPointer:yA,destructorFunction:function(A){VI(A)}})},l:function(A,I,g){var B,C,Q,E,i;g=LA(g),2===I?(B=yI,C=eI,E=SI,Q=()=>K,i=1):4===I&&(B=MI,C=NI,E=nI,Q=()=>L,i=2),qA(A,{name:g,fromWireType:function(A){for(var g,C=L[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return VI(A),g},toWireType:function(A,B){"string"!=typeof B&&lA("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=ZI(4+Q+I);return L[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(VI,o),o},argPackAdvance:8,readValueFromPointer:yA,destructorFunction:function(A){VI(A)}})},T:function(A,I,g,B,C,Q){FA[A]={name:LA(I),rawConstructor:QI(g,B),rawDestructor:QI(C,Q),fields:[]}},S:function(A,I,g,B,C,Q,E,i,o,D){FA[A].fields.push({fieldName:LA(I),getterReturnType:g,getter:QI(B,C),getterContext:Q,setterArgumentType:E,setter:QI(i,o),setterContext:D})},P:function(A,I){qA(A,{isVoid:!0,name:I=LA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},D:function(){throw 1/0},Q:tI,R:function(A){A>4&&(sI[A].refcount+=1)},m:function(A,I){var g,B;void 0===(B=SA[g=A])&&lA("_emval_take_value has unknown type "+iI(g));var C=(A=B).readValueFromPointer(I);return GI.toHandle(C)},L:function(A,I){var g,B=new Date(1e3*(L[(g=A)>>2]+4294967296*Y[g+4>>2]));Y[I>>2]=B.getSeconds(),Y[I+4>>2]=B.getMinutes(),Y[I+8>>2]=B.getHours(),Y[I+12>>2]=B.getDate(),Y[I+16>>2]=B.getMonth(),Y[I+20>>2]=B.getFullYear()-1900,Y[I+24>>2]=B.getDay();var C=0|function(A){return(cI(A.getFullYear())?kI:UI)[A.getMonth()]+A.getDate()-1}(B);Y[I+28>>2]=C,Y[I+36>>2]=-60*B.getTimezoneOffset();var Q=new Date(B.getFullYear(),0,1),E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=Q.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));Y[I+32>>2]=o},M:function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:"GMT"}L[A>>2]=60*o,Y[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=JI(a),t=JI(w);i<E?(L[g>>2]=s,L[g+4>>2]=t):(L[g>>2]=t,L[g+4>>2]=s)},a:function(){P("")},i:function(A,I,g){var B=function(A,I){var g;for(KI.length=0,I>>=2;g=U[A++];)I+=105!=g&I,KI.push(105==g?Y[I]:l[I++>>1]),++I;return KI}(I,g);return QA[A].apply(null,B)},s:function(){return Date.now()},E:function(A){var I,g=U.length,B=2147483648;if((A>>>=0)>B)return!1;for(var C=1;C<=4;C*=2){var Q=g*(1+.2/C);if(Q=Math.min(Q,A+100663296),YI(Math.min(B,(I=Math.max(A,Q))+(65536-I%65536)%65536)))return!0}return!1},F:function(A,I){var g=0;return dI().forEach((function(B,C){var Q=I+g;L[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)k[I++>>0]=A.charCodeAt(B);k[I>>0]=0}(B,Q),g+=B.length+1})),0},G:function(A,I){var g=dI();L[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),L[I>>2]=B,0},c:function(I,g){var B;B=I,T()||(A.onExit&&A.onExit(B),N=!0),t(B,new EA(B))},p:function(A){try{var I=RA.getStreamFromFD(A);return hA.close(I),0}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return A.errno}},I:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=L[I>>2],i=L[I+4>>2];I+=8;var o=hA.read(A,k,E,i,void 0);if(o<0)return-1;if(C+=o,o<i)break}return C}(RA.getStreamFromFD(A),I,g);return L[B>>2]=C,0}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return A.errno}},A:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=RA.getStreamFromFD(A);return hA.llseek(E,Q,B),AA=[E.position>>>0,($=E.position,+Math.abs($)>=1?$>0?(0|Math.min(+Math.floor($/4294967296),4294967295))>>>0:~~+Math.ceil(($-+(~~$>>>0))/4294967296)>>>0:0)],Y[C>>2]=AA[0],Y[C+4>>2]=AA[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return A.errno}var i,o},q:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=L[I>>2],i=L[I+4>>2];I+=8;var o=hA.write(A,k,E,i,void 0);if(o<0)return-1;C+=o}return C}(RA.getStreamFromFD(A),I,g);return L[B>>2]=C,0}catch(A){if(void 0===hA||!(A instanceof hA.ErrnoError))throw A;return A.errno}},w:function(A,I){var g=OI();try{return BI(A)(I)}catch(A){if(jI(g),A!==A+0)throw A;XI(1,0)}},y:function(A,I,g){var B=OI();try{return BI(A)(I,g)}catch(A){if(jI(B),A!==A+0)throw A;XI(1,0)}},x:function(A,I,g,B){var C=OI();try{return BI(A)(I,g,B)}catch(A){if(jI(C),A!==A+0)throw A;XI(1,0)}},j:function(A,I){var g=OI();try{BI(A)(I)}catch(A){if(jI(g),A!==A+0)throw A;XI(1,0)}},z:function(A,I,g){var B=OI();try{BI(A)(I,g)}catch(A){if(jI(B),A!==A+0)throw A;XI(1,0)}},H:function(A,I,g,B){var C=OI();try{BI(A)(I,g,B)}catch(A){if(jI(C),A!==A+0)throw A;XI(1,0)}},k:function(A,I,g,B,C){var Q=OI();try{BI(A)(I,g,B,C)}catch(A){if(jI(Q),A!==A+0)throw A;XI(1,0)}},V:HI,C:function(A,I,g,B,C){return HI(A,I,g,B)}},ZI=(function(){var I={a:bI};function B(I,g){var B,C=I.exports;A.asm=C,W((S=A.asm.W).buffer),m=A.asm.$,B=A.asm.X,Z.unshift(B),v()}function C(A){B(A.instance)}function E(A){return function(){if(!r&&(G||h)){if("function"==typeof fetch&&!BA(z))return fetch(z,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at \'"+z+"\'";return A.arrayBuffer()})).catch((function(){return CA(z)}));if(Q)return new Promise((function(A,I){Q(z,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return CA(z)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){e("failed to asynchronously prepare wasm: "+A),P(A)}))}if(j(),A.instantiateWasm)try{return A.instantiateWasm(I,B)}catch(A){e("Module.instantiateWasm callback failed with error: "+A),g(A)}(r||"function"!=typeof WebAssembly.instantiateStreaming||gA(z)||BA(z)||R||"function"!=typeof fetch?E(C):fetch(z,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(C,(function(A){return e("wasm streaming compile failed: "+A),e("falling back to ArrayBuffer instantiation"),E(C)}))}))).catch(g)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.X).apply(null,arguments)},A._malloc=function(){return(ZI=A._malloc=A.asm.Y).apply(null,arguments)}),VI=A._free=function(){return(VI=A._free=A.asm.Z).apply(null,arguments)},TI=A.___errno_location=function(){return(TI=A.___errno_location=A.asm._).apply(null,arguments)},xI=A.___getTypeName=function(){return(xI=A.___getTypeName=A.asm.aa).apply(null,arguments)},XI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.ba).apply(null,arguments)},A._setThrew=function(){return(XI=A._setThrew=A.asm.ca).apply(null,arguments)}),OI=A.stackSave=function(){return(OI=A.stackSave=A.asm.da).apply(null,arguments)},jI=A.stackRestore=function(){return(jI=A.stackRestore=A.asm.ea).apply(null,arguments)},vI=A.___cxa_is_pointer_type=function(){return(vI=A.___cxa_is_pointer_type=A.asm.fa).apply(null,arguments)};function PI(g){function B(){mI||(mI=!0,A.calledRun=!0,N||(A.noFSInit||hA.init.initialized||hA.init(),hA.ignorePermissions=!1,sA.init(),iA(Z),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),V.unshift(I);var I;iA(V)}()))}g=g||a,x>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),b.unshift(I);var I;iA(b)}(),x>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),B()}),1)):B()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.ga).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm.ha).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.ia).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.ja).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ka).apply(null,arguments)},A.FS=hA,O=function A(){mI||PI(),mI||(O=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return PI(),A.ready});function h(A,I){return function(){return A.apply(I,arguments)}}const{toString:R}=Object.prototype,{getPrototypeOf:F}=Object,r=(y=Object.create(null),A=>{const I=R.call(A);return y[I]||(y[I]=I.slice(8,-1).toLowerCase())});var y;const e=A=>(A=A.toLowerCase(),I=>r(I)===A),S=A=>I=>typeof I===A,{isArray:M}=Array,N=S("undefined"),n=e("ArrayBuffer"),c=S("string"),k=S("function"),U=S("number"),J=A=>null!==A&&"object"==typeof A,K=A=>{if("object"!==r(A))return!1;const I=F(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},Y=e("Date"),L=e("File"),d=e("Blob"),l=e("FileList"),q=e("URLSearchParams");function H(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),M(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}function f(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}const u="undefined"==typeof self?void 0===g.g?void 0:g.g:self,p=A=>!N(A)&&A!==u,W=(m="undefined"!=typeof Uint8Array&&F(Uint8Array),A=>m&&A instanceof m);var m;const b=e("HTMLFormElement"),Z=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),V=e("RegExp"),T=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};H(g,((g,C)=>{!1!==I(g,C,A)&&(B[C]=g)})),Object.defineProperties(A,B)},x={isArray:M,isArrayBuffer:n,isBuffer:function(A){return null!==A&&!N(A)&&null!==A.constructor&&!N(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{const I="[object FormData]";return A&&("function"==typeof FormData&&A instanceof FormData||R.call(A)===I||k(A.toString)&&A.toString()===I)},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&n(A.buffer),I},isString:c,isNumber:U,isBoolean:A=>!0===A||!1===A,isObject:J,isPlainObject:K,isUndefined:N,isDate:Y,isFile:L,isBlob:d,isRegExp:V,isFunction:k,isStream:A=>J(A)&&k(A.pipe),isURLSearchParams:q,isTypedArray:W,isFileList:l,forEach:H,merge:function A(){const{caseless:I}=p(this)&&this||{},g={},B=(B,C)=>{const Q=I&&f(g,C)||C;K(g[Q])&&K(B)?g[Q]=A(g[Q],B):K(B)?g[Q]=A({},B):M(B)?g[Q]=B.slice():g[Q]=B};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&H(arguments[A],B);return g},extend:(A,I,g,{allOwnKeys:B}={})=>(H(I,((I,B)=>{g&&k(I)?A[B]=h(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&F(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:r,kindOfTest:e,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(M(A))return A;let I=A.length;if(!U(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:b,hasOwnProperty:Z,hasOwnProp:Z,reduceDescriptors:T,freezeMethods:A=>{T(A,((I,g)=>{if(k(A)&&-1!==["arguments","caller","callee"].indexOf(g))return!1;const B=A[g];k(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not rewrite read-only method \'"+g+"\'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return M(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I),findKey:f,global:u,isContextDefined:p,toJSONObject:A=>{const I=new Array(10),g=(A,B)=>{if(J(A)){if(I.indexOf(A)>=0)return;if(!("toJSON"in A)){I[B]=A;const C=M(A)?[]:{};return H(A,((A,I)=>{const Q=g(A,B+1);!N(Q)&&(C[I]=Q)})),I[B]=void 0,C}}return A};return g(A,0)}};function X(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}x.inherits(X,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:x.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const O=X.prototype,j={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{j[A]={value:A}})),Object.defineProperties(X,j),Object.defineProperty(O,"isAxiosError",{value:!0}),X.from=(A,I,g,B,C,Q)=>{const E=Object.create(O);return x.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),X.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const v=X,P=B(230);function z(A){return x.isPlainObject(A)||x.isArray(A)}function _(A){return x.endsWith(A,"[]")?A.slice(0,-2):A}function $(A,I,g){return A?A.concat(I).map((function(A,I){return A=_(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const AA=x.toFlatObject(x,{},null,(function(A){return/^is[A-Z]/.test(A)})),IA=function(A,I,g){if(!x.isObject(A))throw new TypeError("target must be an object");I=I||new(P||FormData);const B=(g=x.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!x.isUndefined(I[A])}))).metaTokens,C=g.visitor||a,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&(o=I)&&x.isFunction(o.append)&&"FormData"===o[Symbol.toStringTag]&&o[Symbol.iterator];var o;if(!x.isFunction(C))throw new TypeError("visitor must be a function");function D(A){if(null===A)return"";if(x.isDate(A))return A.toISOString();if(!i&&x.isBlob(A))throw new v("Blob is not supported. Use a Buffer instead.");return x.isArrayBuffer(A)||x.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function a(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(x.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(x.isArray(A)&&function(A){return x.isArray(A)&&!A.some(z)}(A)||x.isFileList(A)||x.endsWith(g,"[]")&&(i=x.toArray(A)))return g=_(g),i.forEach((function(A,B){!x.isUndefined(A)&&null!==A&&I.append(!0===E?$([g],B,Q):null===E?g:g+"[]",D(A))})),!1;return!!z(A)||(I.append($(C,g,Q),D(A)),!1)}const w=[],s=Object.assign(AA,{defaultVisitor:a,convertValue:D,isVisitable:z});if(!x.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!x.isUndefined(g)){if(-1!==w.indexOf(g))throw Error("Circular reference detected in "+B.join("."));w.push(g),x.forEach(g,(function(g,Q){!0===(!(x.isUndefined(g)||null===g)&&C.call(I,g,x.isString(Q)?Q.trim():Q,B,s))&&A(g,B?B.concat(Q):[Q])})),w.pop()}}(A),I};function gA(A){const I={"!":"%21","\'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%20|%00/g,(function(A){return I[A]}))}function BA(A,I){this._pairs=[],A&&IA(A,this,I)}const CA=BA.prototype;CA.append=function(A,I){this._pairs.push([A,I])},CA.toString=function(A){const I=A?function(I){return A.call(this,I,gA)}:gA;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const QA=BA;function EA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function iA(A,I,g){if(!I)return A;const B=g&&g.encode||EA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):x.isURLSearchParams(I)?I.toString():new QA(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const oA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){x.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},DA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},aA="undefined"!=typeof URLSearchParams?URLSearchParams:QA,wA=FormData,sA=(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),tA={isBrowser:!0,classes:{URLSearchParams:aA,FormData:wA,Blob},isStandardBrowserEnv:sA,protocols:["http","https","file","blob","url","data"]},GA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&x.isArray(B)?B.length:Q,i?(x.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&x.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&x.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(x.isFormData(A)&&x.isFunction(A.entries)){const g={};return x.forEachEntry(A,((A,B)=>{I(function(A){return x.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},hA={"Content-Type":void 0},RA={transitional:DA,adapter:["xhr","http"],transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=x.isObject(A);if(C&&x.isHTMLForm(A)&&(A=new FormData(A)),x.isFormData(A))return B&&B?JSON.stringify(GA(A)):A;if(x.isArrayBuffer(A)||x.isBuffer(A)||x.isStream(A)||x.isFile(A)||x.isBlob(A))return A;if(x.isArrayBufferView(A))return A.buffer;if(x.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return IA(A,new tA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return tA.isNode&&x.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=x.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return IA(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A,I,g){if(x.isString(A))try{return(0,JSON.parse)(A),x.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||RA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&x.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw v.from(A,v.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:tA.classes.FormData,Blob:tA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};x.forEach(["delete","get","head"],(function(A){RA.headers[A]={}})),x.forEach(["post","put","patch"],(function(A){RA.headers[A]=x.merge(hA)}));const FA=RA,rA=x.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),yA=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function SA(A){return!1===A||null==A?A:x.isArray(A)?A.map(SA):String(A)}function MA(A,I,g,B){return x.isFunction(B)?B.call(this,I,g):x.isString(I)?x.isString(B)?-1!==I.indexOf(B):x.isRegExp(B)?B.test(I):void 0:void 0}class NA{constructor(A){A&&this.set(A)}set(A,I,g){const B=this;function C(A,I,g){const C=eA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=x.findKey(B,C);(!Q||void 0===B[Q]||!0===g||void 0===g&&!1!==B[Q])&&(B[Q||I]=SA(A))}const Q=(A,I)=>x.forEach(A,((A,g)=>C(A,g,I)));return x.isPlainObject(A)||A instanceof this.constructor?Q(A,I):x.isString(A)&&(A=A.trim())&&!/^[-_a-zA-Z]+$/.test(A.trim())?Q((A=>{const I={};let g,B,C;return A&&A.split("\\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&rA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A),I):null!=A&&C(I,A,g),this}get(A,I){if(A=eA(A)){const g=x.findKey(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(x.isFunction(I))return I.call(this,A,g);if(x.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,I){if(A=eA(A)){const g=x.findKey(this,A);return!(!g||I&&!MA(0,this[g],g,I))}return!1}delete(A,I){const g=this;let B=!1;function C(A){if(A=eA(A)){const C=x.findKey(g,A);!C||I&&!MA(0,g[C],C,I)||(delete g[C],B=!0)}}return x.isArray(A)?A.forEach(C):C(A),B}clear(){return Object.keys(this).forEach(this.delete.bind(this))}normalize(A){const I=this,g={};return x.forEach(this,((B,C)=>{const Q=x.findKey(g,C);if(Q)return I[Q]=SA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=SA(B),g[E]=!0})),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){const I=Object.create(null);return x.forEach(this,((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&x.isArray(g)?g.join(", "):g)})),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([A,I])=>A+": "+I)).join("\\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...I){const g=new this(A);return I.forEach((A=>g.set(A))),g}static accessor(A){const I=(this[yA]=this[yA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=eA(A);I[B]||(function(A,I){const g=x.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return x.isArray(A)?A.forEach(B):B(A),this}}NA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent"]),x.freezeMethods(NA.prototype),x.freezeMethods(NA);const nA=NA;function cA(A,I){const g=this||FA,B=I||g,C=nA.from(B.headers);let Q=B.data;return x.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function kA(A){return!(!A||!A.__CANCEL__)}function UA(A,I,g){v.call(this,null==A?"canceled":A,v.ERR_CANCELED,I,g),this.name="CanceledError"}x.inherits(UA,v,{__CANCEL__:!0});const JA=UA,KA=tA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+"="+encodeURIComponent(I)),x.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),x.isString(B)&&E.push("path="+B),x.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function YA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,"")+"/"+I.replace(/^\\/+/,""):A}(A,I):I}const LA=tA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=x.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function dA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0,event:C};D[I?"download":"upload"]=!0,A(D)}}const lA={http:null,xhr:"undefined"!=typeof XMLHttpRequest&&function(A){return new Promise((function(I,g){let B=A.data;const C=nA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}x.isFormData(B)&&tA.isStandardBrowserEnv&&C.setContentType(!1);let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";C.set("Authorization","Basic "+btoa(I+":"+g))}const D=YA(A.baseURL,A.url);function a(){if(!o)return;const B=nA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new v("Request failed with status code "+g.status,[v.ERR_BAD_REQUEST,v.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&"text"!==Q&&"json"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),iA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new v("Request aborted",v.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new v("Network Error",v.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||DA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new v(I,B.clarifyTimeoutError?v.ETIMEDOUT:v.ECONNABORTED,A,o)),o=null},tA.isStandardBrowserEnv){const I=(A.withCredentials||LA(D))&&A.xsrfCookieName&&KA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),"setRequestHeader"in o&&x.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),x.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&"json"!==Q&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",dA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",dA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new JA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===tA.protocols.indexOf(w)?g(new v("Unsupported protocol "+w+":",v.ERR_BAD_REQUEST,A)):o.send(B||null)}))}};function qA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new JA}function HA(A){return qA(A),A.headers=nA.from(A.headers),A.data=cA.call(A,A.transformRequest),-1!==["post","put","patch"].indexOf(A.method)&&A.headers.setContentType("application/x-www-form-urlencoded",!1),(A=>{A=x.isArray(A)?A:[A];const{length:I}=A;let g,B;for(let C=0;C<I&&(g=A[C],!(B=x.isString(g)?lA[g.toLowerCase()]:g));C++);if(!B){if(!1===B)throw new v(`Adapter ${g} is not supported by the environment`,"ERR_NOT_SUPPORT");throw new Error(x.hasOwnProp(lA,g)?`Adapter \'${g}\' is not available in the build`:`Unknown adapter \'${g}\'`)}if(!x.isFunction(B))throw new TypeError("adapter is not a function");return B})(A.adapter||FA.adapter)(A).then((function(I){return qA(A),I.data=cA.call(A,A.transformResponse,I),I.headers=nA.from(I.headers),I}),(function(I){return kA(I)||(qA(A),I&&I.response&&(I.response.data=cA.call(A,A.transformResponse,I.response),I.response.headers=nA.from(I.response.headers))),Promise.reject(I)}))}x.forEach(lA,((A,I)=>{if(A){try{Object.defineProperty(A,"name",{value:I})}catch(A){}Object.defineProperty(A,"adapterName",{value:I})}}));const fA=A=>A instanceof nA?A.toJSON():A;function uA(A,I){I=I||{};const g={};function B(A,I,g){return x.isPlainObject(A)&&x.isPlainObject(I)?x.merge.call({caseless:g},A,I):x.isPlainObject(I)?x.merge({},I):x.isArray(I)?I.slice():I}function C(A,I,g){return x.isUndefined(I)?x.isUndefined(A)?void 0:B(void 0,A,g):B(A,I,g)}function Q(A,I){if(!x.isUndefined(I))return B(void 0,I)}function E(A,I){return x.isUndefined(I)?x.isUndefined(A)?void 0:B(void 0,A):B(void 0,I)}function i(g,C,Q){return Q in I?B(g,C):Q in A?B(void 0,g):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i,headers:(A,I)=>C(fA(A),fA(I),!0)};return x.forEach(Object.keys(A).concat(Object.keys(I)),(function(B){const Q=o[B]||C,E=Q(A[B],I[B],B);x.isUndefined(E)&&Q!==i||(g[B]=E)})),g}const pA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{pA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const WA={};pA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.2.0] Transitional option \'"+A+"\'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new v(B(C," has been removed"+(I?" in "+I:"")),v.ERR_DEPRECATED);return I&&!WA[C]&&(WA[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const mA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new v("options must be an object",v.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new v("option "+Q+" must be "+g,v.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new v("Unknown option "+Q,v.ERR_BAD_OPTION)}},validators:pA},bA=mA.validators;class ZA{constructor(A){this.defaults=A,this.interceptors={request:new oA,response:new oA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=uA(this.defaults,I);const{transitional:g,paramsSerializer:B,headers:C}=I;let Q;void 0!==g&&mA.assertOptions(g,{silentJSONParsing:bA.transitional(bA.boolean),forcedJSONParsing:bA.transitional(bA.boolean),clarifyTimeoutError:bA.transitional(bA.boolean)},!1),void 0!==B&&mA.assertOptions(B,{encode:bA.function,serialize:bA.function},!0),I.method=(I.method||this.defaults.method||"get").toLowerCase(),Q=C&&x.merge(C.common,C[I.method]),Q&&x.forEach(["delete","get","head","post","put","patch","common"],(A=>{delete C[A]})),I.headers=nA.concat(Q,C);const E=[];let i=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(i=i&&A.synchronous,E.unshift(A.fulfilled,A.rejected))}));const o=[];let D;this.interceptors.response.forEach((function(A){o.push(A.fulfilled,A.rejected)}));let a,w=0;if(!i){const A=[HA.bind(this),void 0];for(A.unshift.apply(A,E),A.push.apply(A,o),a=A.length,D=Promise.resolve(I);w<a;)D=D.then(A[w++],A[w++]);return D}a=E.length;let s=I;for(w=0;w<a;){const I=E[w++],g=E[w++];try{s=I(s)}catch(A){g.call(this,A);break}}try{D=HA.call(this,s)}catch(A){return Promise.reject(A)}for(w=0,a=o.length;w<a;)D=D.then(o[w++],o[w++]);return D}getUri(A){return iA(YA((A=uA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}x.forEach(["delete","get","head","options"],(function(A){ZA.prototype[A]=function(I,g){return this.request(uA(g||{},{method:A,url:I,data:(g||{}).data}))}})),x.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(uA(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}ZA.prototype[A]=I(),ZA.prototype[A+"Form"]=I(!0)}));const VA=ZA;class TA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new JA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new TA((function(I){A=I})),cancel:A}}}const xA=TA,XA=function A(I){const g=new VA(I),B=h(VA.prototype.request,g);return x.extend(B,VA.prototype,g,{allOwnKeys:!0}),x.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(uA(I,g))},B}(FA);XA.Axios=VA,XA.CanceledError=JA,XA.CancelToken=xA,XA.isCancel=kA,XA.VERSION="1.2.0",XA.toFormData=IA,XA.AxiosError=v,XA.Cancel=XA.CanceledError,XA.all=function(A){return Promise.all(A)},XA.spread=function(A){return function(I){return A.apply(null,I)}},XA.isAxiosError=function(A){return x.isObject(A)&&!0===A.isAxiosError},XA.AxiosHeaders=nA,XA.formToJSON=A=>GA(x.isHTMLForm(A)?new FormData(A):A),XA.default=XA;const OA=XA;var jA=function(){function A(){Q(this,A)}var g,B;return D(A,null,[{key:"fetchRemoteData",value:(B=I(t().mark((function A(I){var g;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,OA.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return B.apply(this,arguments)})},{key:"fetchRemoteDataCallback",value:(g=I(t().mark((function A(I,g){var B;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,OA.get(I,{responseType:"arraybuffer"}).then((function(A){var I=new Uint8Array(A.data);console.log(I),g(A)}));case 3:return B=A.sent,A.abrupt("return",B);case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A,I){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}}]),A}(),vA=function(){function A(){Q(this,A),a(this,"instance",void 0),a(this,"markerNFTCount",void 0),a(this,"cameraCount",void 0),a(this,"version",void 0),a(this,"setup",void 0),a(this,"teardown",void 0),a(this,"setupAR2",void 0),a(this,"setDebugMode",void 0),a(this,"getDebugMode",void 0),a(this,"getProcessingImage",void 0),a(this,"detectMarker",void 0),a(this,"detectNFTMarker",void 0),a(this,"getNFTMarker",void 0),a(this,"getNFTData",void 0),a(this,"setLogLevel",void 0),a(this,"getLogLevel",void 0),a(this,"frameMalloc",void 0),a(this,"NFTMarkerInfo",void 0),a(this,"setProjectionNearPlane",void 0),a(this,"getProjectionNearPlane",void 0),a(this,"setProjectionFarPlane",void 0),a(this,"getProjectionFarPlane",void 0),a(this,"setThresholdMode",void 0),a(this,"getThresholdMode",void 0),a(this,"setThreshold",void 0),a(this,"getThreshold",void 0),a(this,"setImageProcMode",void 0),a(this,"getImageProcMode",void 0),this.instance,this.markerNFTCount=0,this.cameraCount=0,this.version="1.1.8",console.info("ARToolkitNFT ",this.version)}var g,C;return D(A,[{key:"init",value:(C=I(t().mark((function A(){return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return this.instance=A.sent,this._decorate(),("undefined"!=typeof window?window:B.g).artoolkitNFT=this,A.abrupt("return",this);case 7:case"end":return A.stop()}}),A,this)}))),function(){return C.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","detectMarker","detectNFTMarker","getNFTMarker","getNFTData","frameMalloc","NFTMarkerInfo","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setImageProcMode","getImageProcMode","StringList"].forEach((function(I){A.converter()[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this.converter()[I]=this.instance[I])}},{key:"converter",value:function(){return this}},{key:"loadCamera",value:(g=I(t().mark((function A(I){var g,B;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,jA.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return g.apply(this,arguments)})},{key:"addNFTMarkers",value:function(A,I,g,B){var C=this,Q=[],E=3*I.length,i=function(I){if(0==(E-=1)){for(var B=new C.instance.StringList,i=[],o=0;o<Q.length;o++)B.push_back(Q[o]);for(var D=C.instance._addNFTMarkers(A,B),a=0;a<D.size();a++)i.push(D.get(a));console.log("add nft marker ids: ",i),g&&g(i)}},o=function(A,I){console.log("failed to load: ",A),B(I)},D=[];return I.forEach((function(A,I){var g="/markerNFT_"+C.markerNFTCount;if(Q.push(g),Array.isArray(A))A.forEach((function(A){var I=g+"."+A.split(".").pop();C.ajax(A,I,i.bind(I),o.bind(I))})),C.markerNFTCount+=1;else{var B=g+".fset",E=g+".iset",a=g+".fset3";C.ajax(A+".fset",B,i.bind(B),o.bind(B)),C.ajax(A+".iset",E,i.bind(E),o.bind(E)),C.ajax(A+".fset3",a,i.bind(a),o.bind(a)),C.markerNFTCount+=1}D.push(I)})),D}},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}},{key:"ajax",value:function(A,I,g,B){var C=this,Q=new XMLHttpRequest;Q.open("GET",A,!0),Q.responseType="arraybuffer",Q.onload=function(){if(200==this.status){var E=Q.response,i=new Uint8Array(E);!function(A,I,g){C.instance.FS.writeFile(A,I,{encoding:"binary"}),g(I)}(I,i,g)}else B(A,this.status)},Q.send()}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"NFT_MARKER",get:function(){return 0}}]),A}(),PA=function(){function A(I,g,B){Q(this,A),a(this,"id",void 0),a(this,"width",void 0),a(this,"height",void 0),a(this,"cameraParam",void 0),a(this,"cameraId",void 0),a(this,"cameraLoaded",void 0),a(this,"artoolkitNFT",void 0),a(this,"listeners",void 0),a(this,"nftMarkers",void 0),a(this,"transform_mat",void 0),a(this,"marker_transform_mat",void 0),a(this,"transformGL_RH",void 0),a(this,"videoWidth",void 0),a(this,"videoHeight",void 0),a(this,"videoSize",void 0),a(this,"framepointer",void 0),a(this,"framesize",void 0),a(this,"dataHeap",void 0),a(this,"videoLuma",void 0),a(this,"camera_mat",void 0),a(this,"videoLumaPointer",void 0),a(this,"nftMarkerFound",void 0),a(this,"nftMarkerFoundTime",void 0),a(this,"nftMarkerCount",void 0),a(this,"defaultMarkerWidth",void 0),a(this,"_bwpointer",void 0),this.id=-1,this.width=I,this.height=g,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkitNFT,this.listeners={},this.nftMarkers={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:1},this.transform_mat=new Float64Array(16),this.transformGL_RH=new Float64Array(16),this.marker_transform_mat=null,this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.videoLumaPointer=null,this.nftMarkerFound=!1,this.nftMarkerFoundTime=0,this.nftMarkerCount=0,this._bwpointer=null,this.defaultMarkerWidth=1}var g,B,C,E,i;return D(A,[{key:"process",value:function(A){var I,g,B=this.detectMarker(A);for(I in 0!=B&&console.error("[ARControllerNFT]","detectMarker error:",B),this.nftMarkers)(g=this.converter().nftMarkers[I]).inPrevious=g.inCurrent,g.inCurrent=!1;var C=this.nftMarkerCount;this.detectNFTMarker();for(var Q=0;Q<C;Q++){var E=this.getNFTMarker(Q),i=vA.NFT_MARKER;if(E.found){this.nftMarkerFound=Q,this.nftMarkerFoundTime=Date.now();var o=this.trackNFTMarkerId(Q);o.matrix.set(E.pose),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else this.nftMarkerFound===Q&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}}},{key:"detectNFTMarker",value:function(){this.artoolkitNFT.detectNFTMarker(this.id)}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.converter().nftMarkers[A];return g||(this.converter().nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkitNFT.detectMarker(this.id):-99}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkitNFT.getNFTMarker(this.id,A))return this.artoolkitNFT.NFTMarkerInfo}},{key:"getNFTData",value:function(A,I){return this.artoolkitNFT.getNFTData(A,I)}},{key:"addEventListener",value:function(A,I){this.converter().listeners[A]||(this.converter().listeners[A]=[]),this.converter().listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.converter().listeners[A]){var g=this.converter().listeners[A].indexOf(I);g>-1&&this.converter().listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.converter().listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"setDebugMode",value:function(A){return this.artoolkitNFT.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkitNFT.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkitNFT.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkitNFT.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkitNFT.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkitNFT.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkitNFT.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkitNFT.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkitNFT.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkitNFT.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkitNFT.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkitNFT.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkitNFT.getThreshold(this.id)}},{key:"loadNFTMarker",value:(i=I(t().mark((function A(I,g,B){var C,Q=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(this.id,[I],(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return i.apply(this,arguments)})},{key:"loadNFTMarkers",value:(E=I(t().mark((function A(I,g,B){var C,Q=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(this.id,I,(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)}))),function(A,I,g){return E.apply(this,arguments)})},{key:"setImageProcMode",value:function(A){return this.artoolkitNFT.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkitNFT.getImageProcMode(this.id)}},{key:"converter",value:function(){return this}},{key:"_initialize",value:(C=I(t().mark((function A(){var I,g=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new vA).init();case 2:return this.artoolkitNFT=A.sent,console.log("[ARControllerNFT]","ARToolkitNFT initialized"),A.next=6,this.artoolkitNFT.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARControllerNFT]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkitNFT.setup(this.width,this.height,this.cameraId),console.log("[ARControllerNFT]","Got ID from setup",this.id),this._initNFT(),I=this.artoolkitNFT.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkitNFT.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkitNFT.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkitNFT.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkitNFT.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return C.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkitNFT.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){if(A){var I;if(A.data&&(I=A.data),this.videoLuma)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}console.error("Error: no provided imageData to ARControllerNFT")}}],[{key:"initWithDimensions",value:(B=I(t().mark((function I(g,B,C){var Q;return t().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=new A(g,B,C),I.next=3,Q._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=I(t().mark((function I(g,B){var C,Q,E;return t().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.videoWidth||g.width,Q=g.videoHeight||g.height,E=new A(C,Q,B),I.next=5,E._initialize();case 5:return I.abrupt("return",I.sent);case 6:case"end":return I.stop()}}),I)}))),function(A,I){return g.apply(this,arguments)})}]),A}();const zA={ARToolkitNFT:vA,ARControllerNFT:PA}})(),C.default})(),A.exports=B()}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),(()=>{"use strict";var A=g(801),I=g.n(A);const{ARControllerNFT:B}=I(),C=self;C.onmessage=A=>{const I=A.data;switch(I.type){case"load":return void D(I);case"stop":i=null;break;case"process":Q=I.imagedata,a(Q,I.frame)}};let Q=null,E=0,i=null,o=null;const D=async A=>{const I=self.origin;let g,Q=[],E=A.marker.length;console.debug("Base path:",I);const D=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.camera_para);1==D?g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:A.camera_para:0==D&&(g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:I+"/"+A.camera_para),console.debug("Loading camera at:",g),B.initWithDimensions(A.pw,A.ph,g).then((async g=>{i=g;const B=i.getCameraMatrix();i.addEventListener("getNFTMarker",(A=>{o={type:"found",matrixGL_RH:JSON.stringify(A.data.matrixGL_RH)}}));const D=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.marker);for(var a=0;a<E;a++){let g;1==D?A.addPath?g=I+"/"+A.addPath+"/"+A.marker[a]:Q=A.marker[a]:0==D&&(g=A.addPath?I+"/"+A.addPath+"/"+A.marker[a]:I+"/"+A.marker[a]),Q.push(g)}console.debug("Loading NFT marker at: ",Q),await i.loadNFTMarkers(Q,(A=>{var I=0;let g=i.getNFTData(A[I],0);C.postMessage({type:"markerInfos",marker:g}),i.trackNFTMarkerId(A[I]),console.log("loadNFTMarker -> ",A[I]),console.log(A[I]),C.postMessage({type:"endLoading",end:!0}),I++}),(A=>{console.error("Error: ",A," loading marker in loadNFTMarkers!")})).catch((A=>{console.error("Error in loading marker on Worker",A)})),C.postMessage({type:"loaded",proj:JSON.stringify(B)})})).catch((A=>{console.error(A)}))},a=(A,I)=>{I!==E&&(o=null,i&&i.process&&i.process(A),E=I),null!=o?C.postMessage(o):C.postMessage({type:"not found"}),A=null}})()})();\n',"Worker",void 0,void 0)}class t{worker;markerURL;_processing=!1;vw;vh;target;uuid;name;addPath;ready;constructor(A,I,B,C,Q,E){this.markerURL=A,this.vw=I,this.vh=B,this.target=window||g.g,this.uuid=C,this.name=Q,this.ready=!1,this.addPath=E}async initialize(A,I,g){this.worker=new a;const B=this.worker;return this.target.addEventListener("terminateWorker-"+this.name,(function(){B.postMessage({type:"stop"}),B.terminate()})),await this.load(A,I,g)}process(A,I){this._processing||(this._processing=!0,this.worker.postMessage({type:"process",imagedata:A,frame:I},[A.data.buffer]))}load(A,I,g){let[B,C,Q,i,o,D]=E(this.vw,this.vh);const a=new CustomEvent("getWindowSize",{detail:{sw:B,sh:C}});this.target.dispatchEvent(a),this.worker.postMessage({type:"load",pw:Q,ph:i,camera_para:A,marker:this.markerURL,addPath:this.addPath}),this.worker.onmessage=A=>{var I=A.data;switch(I.type){case"loaded":{var B=JSON.parse(I.proj);const A=Q/o,g=i/D;B[0]*=A,B[4]*=A,B[8]*=A,B[12]*=A,B[1]*=g,B[5]*=g,B[9]*=g,B[13]*=g;const C=new CustomEvent("getProjectionMatrix",{detail:{proj:B}});this.target.dispatchEvent(C);break}case"endLoading":if(1==I.end){const A=document.getElementById("loading");A&&(A.querySelector(".loading-text").innerText="Start the tracking!",setTimeout((function(){null!=A.parentElement&&A&&A.parentElement.removeChild(A)}),2e3))}this.ready=!0,this.target.dispatchEvent(new CustomEvent("nftLoaded-"+this.uuid));break;case"markerInfos":{const A=I.marker,g=new CustomEvent("getNFTData-"+this.uuid+"-"+this.name,{detail:{dpi:A.dpi,width:A.width,height:A.height}});this.target.dispatchEvent(g);break}case"found":this.found(I);break;case"not found":this.found(null)}this._processing=!1,g()},this.worker.onerror=A=>{console.error("Worker error from NFTWorker: ",A)};let t=()=>{I(),window.requestAnimationFrame(t)};return t(),Promise.resolve(!0)}found(A){let I;if(A){I=JSON.parse(A.matrixGL_RH);const g=new CustomEvent("getMatrixGL_RH-"+this.uuid+"-"+this.name,{detail:{matrixGL_RH:I,name:this.name}});this.target.dispatchEvent(g)}else{I=null;const A=new CustomEvent("nftTrackingLost-"+this.uuid+"-"+this.name,{detail:{name:this.name}});this.target.dispatchEvent(A)}}isReady(){return this.ready}getUuid(){return this.uuid}getName(){return this.name}getMarkerUrl(){return this.markerURL}getEventTarget(){return this.target}destroy(){}}const s={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let w;const h=new Uint8Array(16);function G(){if(!w&&(w="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!w))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return w(h)}const r=[];for(let A=0;A<256;++A)r.push((A+256).toString(16).slice(1));function e(A,I=0){return(r[A[I+0]]+r[A[I+1]]+r[A[I+2]]+r[A[I+3]]+"-"+r[A[I+4]]+r[A[I+5]]+"-"+r[A[I+6]]+r[A[I+7]]+"-"+r[A[I+8]]+r[A[I+9]]+"-"+r[A[I+10]]+r[A[I+11]]+r[A[I+12]]+r[A[I+13]]+r[A[I+14]]+r[A[I+15]]).toLowerCase()}const R=function(A,I,g){if(s.randomUUID&&!I&&!A)return s.randomUUID();const B=(A=A||{}).random||(A.rng||G)();if(B[6]=15&B[6]|64,B[8]=63&B[8]|128,I){g=g||0;for(let A=0;A<16;++A)I[g+A]=B[A];return I}return e(B)},F=JSON.parse('{"name":"@webarkit/ar-nft","version":"0.14.2","main":"dist/ARnft.js","types":"types/src/index.d.ts","description":"WebAR Javscript library for markerless AR","keywords":["ARToolKit","AR","ARnft","Augmented Reality","WebAR","JavaScript","jsartoolkit","jsartoolkit5","jsartoolkitNFT","NFT","Natural Feature Tracking","image tracking","markerless"],"author":{"name":"Walter Perdan","email":"github@kalwaltart.it","url":"https://www.kalwaltart.com"},"repository":{"type":"git","url":"https://github.com/webarkit/ARnft"},"homepage":"https://github.com/webarkit/ARnft","contributors":["Github Contributors (https://github.com/webarkit/ARnft/graphs/contributors)"],"bugs":{"url":"https://github.com/webarkit/ARnft/issues"},"devDependencies":{"@types/node":"^16.18.3","@types/stats.js":"^0.17.0","@types/uuid":"^8.3.4","prettier":"^2.7.1","rimraf":"^3.0.2","stats.js":"^0.17.0","ts-loader":"^9.4.1","typedoc":"^0.23.21","typescript":"^4.8.4","webpack":"^5.75.0","webpack-cli":"^4.10.0","worker-loader":"^3.0.8"},"scripts":{"build-ts":"rimraf ./build && tsc && webpack --mode production","dev-ts":"rimraf ./build && tsc && webpack --mode development --progress --watch","docs":"typedoc","format-check":"prettier --check .","format":"prettier --write ."},"license":"LGPL-3.0","resolutions":{},"dependencies":{"@webarkit/jsartoolkit-nft":"https://github.com/webarkit/jsartoolkitNFT.git#385074c6c15ef8b80746b95e17bb0ecdf6bee410","terser-webpack-plugin":"^5.3.6","uuid":"^9.0.0"}}'),{version:y}=F;class n{cameraView;appData;addPath;width;height;configUrl;markerUrl;camData;autoUpdate=!0;controllers;static entities;target;uuid;version;initialized;_views;constructor(A,I,B){this.width=A,this.height=I,this.configUrl=B,this.target=window||g.g,this.uuid=R(),this.version=y,console.log("ARnft ",this.version)}static async init(A,I,g,B,C,Q){return n.initWithConfig({width:A,height:I,markerUrls:g,names:B,configUrl:C,stats:Q})}static async initWithEntities(A,I,g,B,C){return n.initWithConfig({width:A,height:I,entities:g,configUrl:B,stats:C})}static async initWithConfig(A){const I=new n(A.width,A.height,A.configUrl);null!=A.autoUpdate&&(I.autoUpdate=A.autoUpdate);try{let g,B=[];const C=A,Q=A;if(null!=C.markerUrls&&null!=C.names)null==Q.entities&&(B=C.markerUrls,g=C.names,this.entities=g.map((function(A,I,g){return{name:A[0],markerUrl:B[I][0]}})));else{if(null==Q.entities)throw"markerUrls or entities can't be undefined";this.entities=Q.entities,B=this.entities.map((A=>[A.markerUrl])),g=this.entities.map((A=>[A.name]))}return await I._initialize(B,g,A.stats)}catch(A){if(A.code)return console.error(A),Promise.reject(A)}}async _initialize(I,g,B){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),B&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],this.cameraView=new Q(this._views.video),this.cameraView.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>B?o.update():null,C=()=>B?D.update():null;I.forEach(((I,B)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[B][0],this.addPath)),this.controllers[B].initialize(this.appData.cameraPara,A,C)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame))),requestAnimationFrame(a)};return a(),this}async initializeRaw(I,g,B,Q){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),Q&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],B.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>Q?o.update():null,B=()=>Q?D.update():null;I.forEach(((I,C)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[C],this.addPath)),this.controllers[C].initialize(this.appData.cameraPara,A,B)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(B.getImage(),B.getFrame()))),requestAnimationFrame(a)};return a(),this}update(){this.initialized&&!this.autoUpdate&&null!=this.cameraView&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame)))}static getEntities(){return this.entities}getEventTarget(){return this.target}get views(){return Object.freeze(this._views)}dispose(){this.disposeVideoStream(),this.disposeAllNFTs()}disposeNFT(A){var I=new Event("terminateWorker-"+A);this.target.dispatchEvent(I)}disposeAllNFTs(){n.getEntities().forEach((A=>{this.disposeNFT(A.name)}))}disposeVideoStream(){this.cameraView.destroy();var A=new Event("stopVideoStreaming");this.target.dispatchEvent(A)}}const S={ARnft:n}})(),B=B.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
!function(A,I){"object"==typeof exports&&"object"==typeof module?module.exports=I():"function"==typeof define&&define.amd?define([],I):"object"==typeof exports?exports.ARnft=I():A.ARnft=I()}("undefined"!=typeof self?self:this,(()=>(()=>{var A={466:function(A){var I;A.exports=((I=function(){function A(A){return C.appendChild(A.dom),A}function g(A){for(var I=0;I<C.children.length;I++)C.children[I].style.display=I===A?"block":"none";B=A}var B=0,C=document.createElement("div");C.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",C.addEventListener("click",(function(A){A.preventDefault(),g(++B%C.children.length)}),!1);var Q=(performance||Date).now(),E=Q,i=0,o=A(new I.Panel("FPS","#0ff","#002")),D=A(new I.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var a=A(new I.Panel("MB","#f08","#201"));return g(0),{REVISION:16,dom:C,addPanel:A,showPanel:g,begin:function(){Q=(performance||Date).now()},end:function(){i++;var A=(performance||Date).now();if(D.update(A-Q,200),A>E+1e3&&(o.update(1e3*i/(A-E),100),E=A,i=0,a)){var I=performance.memory;a.update(I.usedJSHeapSize/1048576,I.jsHeapSizeLimit/1048576)}return A},update:function(){Q=this.end()},domElement:C,setMode:g}}).Panel=function(A,I,g){var B=1/0,C=0,Q=Math.round,E=Q(window.devicePixelRatio||1),i=80*E,o=48*E,D=3*E,a=2*E,t=3*E,s=15*E,w=74*E,G=30*E,h=document.createElement("canvas");h.width=i,h.height=o,h.style.cssText="width:80px;height:48px";var e=h.getContext("2d");return e.font="bold "+9*E+"px Helvetica,Arial,sans-serif",e.textBaseline="top",e.fillStyle=g,e.fillRect(0,0,i,o),e.fillStyle=I,e.fillText(A,D,a),e.fillRect(t,s,w,G),e.fillStyle=g,e.globalAlpha=.9,e.fillRect(t,s,w,G),{dom:h,update:function(o,r){B=Math.min(B,o),C=Math.max(C,o),e.fillStyle=g,e.globalAlpha=1,e.fillRect(0,0,i,s),e.fillStyle=I,e.fillText(Q(o)+" "+A+" ("+Q(B)+"-"+Q(C)+")",D,a),e.drawImage(h,t+E,s,w-E,G,t,s,w-E,G),e.fillRect(t+w-E,s,E,G),e.fillStyle=g,e.globalAlpha=.9,e.fillRect(t+w-E,s,E,Q((1-o/r)*G))}}},I)},477:A=>{"use strict";A.exports=function(A,I,g,B){var C=self||window;try{try{var Q;try{Q=new C.Blob([A])}catch(I){(Q=new(C.BlobBuilder||C.WebKitBlobBuilder||C.MozBlobBuilder||C.MSBlobBuilder)).append(A),Q=Q.getBlob()}var E=C.URL||C.webkitURL,i=E.createObjectURL(Q),o=new C[I](i,g);return E.revokeObjectURL(i),o}catch(B){return new C[I]("data:application/javascript,".concat(encodeURIComponent(A)),g)}}catch(A){if(!B)throw Error("Inline worker is not supported");return new C[I](B,g)}}}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";g.d(B,{default:()=>n});class A{static createContainer(A){if(A.container.create){const A=document.createElement("div");A.id="app";const I=document.createElement("canvas");I.id="canvas";const g=document.createElement("video");g.id="video",g.setAttribute("autoplay",""),g.setAttribute("muted",""),g.setAttribute("playsinline",""),A.appendChild(g),A.appendChild(I);const B=document.getElementById("loading");return document.body.insertBefore(A,B),{container:A,canvas:I,video:g}}return{container:document.getElementById(A.container.containerName),canvas:document.getElementById(A.container.canvasName),video:document.getElementById("video")}}static createStats(A,I){if(A&&I.stats.createHtml){const A=document.createElement("div");A.id="stats",A.className="ui stats";const I=document.createElement("div");I.id="stats1",I.className="stats-item";const g=document.createElement("p");g.className="stats-item-title",g.innerText="Main",I.appendChild(g),A.appendChild(I);const B=document.createElement("div");B.id="stats2",B.className="stats-item";const C=document.createElement("p");C.className="stats-item-title",C.innerText="Worker",B.appendChild(C),A.appendChild(B);const Q=document.getElementById("loading");return document.body.insertBefore(A,Q),A}}static createLoading(A){if(A.loading.create){const I=document.createElement("div");I.id="loading";const g=document.createElement("img");g.src=A.loading.logo.src,g.alt=A.loading.logo.alt;const B=document.createElement("span");return B.setAttribute("class","loading-text"),B.innerText=A.loading.loadingMessage,I.appendChild(g),I.appendChild(B),document.body.insertBefore(I,document.body.firstChild),I}}}var I=g(466),C=g.n(I);class Q{canvas_process;context_process;_video;_facing;vw;vh;w;h;pw;ph;ox;oy;target;targetFrameRate=60;imageDataCache;_frame;lastCache=0;constructor(A){this.canvas_process=document.createElement("canvas"),this.context_process=this.canvas_process.getContext("2d",{alpha:!1}),this._video=A,this.target=window||g.g,this._frame=0}get facing(){return this._facing}get height(){return this.vh}get width(){return this.vw}get video(){return this._video}get frame(){return this._frame}get canvasProcess(){return this.canvas_process}get contextProcess(){return this.context_process}getFrame(){return this._frame}getImage(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}get image(){const A=Date.now();if(A-this.lastCache>1e3/this.targetFrameRate){this.context_process.drawImage(this.video,0,0,this.vw,this.vh,this.ox,this.oy,this.w,this.h);const I=this.context_process.getImageData(0,0,this.pw,this.ph);null==this.imageDataCache?this.imageDataCache=I.data:this.imageDataCache.set(I.data),this.lastCache=A,this._frame++}return new ImageData(this.imageDataCache.slice(),this.pw,this.ph)}prepareImage(){this.vw=this._video.videoWidth,this.vh=this._video.videoHeight;var A=320/Math.max(this.vw,this.vh/3*4);this.w=Math.floor(this.vw*A),this.h=Math.floor(this.vh*A),this.pw=Math.floor(Math.max(this.w,this.h/3*4)),this.ph=Math.floor(Math.max(this.h,this.w/4*3)),this.ox=Math.floor((this.pw-this.w)/2),this.oy=Math.floor((this.ph-this.h)/2),this.canvas_process.width=this.pw,this.canvas_process.height=this.ph,this.context_process.fillStyle="black",this.context_process.fillRect(0,0,this.pw,this.ph)}async initialize(A){if(this._facing=A.facingMode||"environment",null!=A.targetFrameRate&&(this.targetFrameRate=A.targetFrameRate),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return Promise.reject("Sorry, Your device does not support this experience.");try{const I={audio:!1,video:{facingMode:this._facing,width:{min:A.width.min,max:A.width.max}}};if(navigator.mediaDevices.enumerateDevices){const A=await navigator.mediaDevices.enumerateDevices(),g=[];let B=0;A.forEach((function(A){"videoinput"==A.kind&&(g[B++]=A.deviceId)})),g.length>1&&(I.video.deviceId={exact:g[g.length-1]})}const g=await navigator.mediaDevices.getUserMedia(I);return this._video.srcObject=g,this._video=await new Promise((A=>{this._video.onloadedmetadata=()=>A(this._video)})),this.prepareImage(),!0}catch(A){return Promise.reject(A)}}destroy(){const A=this._video;this.target.addEventListener("stopVideoStreaming",(function(){const I=A.srcObject;if(console.log("stop streaming"),null!=I){I.getTracks().forEach((function(A){A.stop()})),A.srcObject=null;let g=document.getElementById("app");null!=g&&g.remove()}}))}}function E(A,I){var g=320/Math.max(A,I/3*4),B=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?window.outerWidth/A:1;let C=A*g,Q=I*g;return[A*B,I*B,Math.max(C,Q/3*4),Math.max(Q,C/4*3),C,Q]}async function i(A){try{const I=await fetch(A);if(!I.ok)throw new Error("HTTP error, status = "+I.status);return I.json()}catch(A){return Promise.reject(A)}}var o=g(477),D=g.n(o);function a(){return D()('(()=>{var A={801:function(A,I,g){var B;"undefined"!=typeof self&&self,B=()=>(()=>{var A={61:(A,I,g)=>{var B=g(698).default;function C(){"use strict";A.exports=C=function(){return g},A.exports.__esModule=!0,A.exports.default=A.exports;var I,g={},Q=Object.prototype,E=Q.hasOwnProperty,i=Object.defineProperty||function(A,I,g){A[I]=g.value},o="function"==typeof Symbol?Symbol:{},D=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",w=o.toStringTag||"@@toStringTag";function s(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{s({},"")}catch(I){s=function(A,I,g){return A[I]=g}}function t(A,I,g,B){var C=I&&I.prototype instanceof e?I:e,Q=Object.create(C.prototype),E=new l(B||[]);return i(Q,"_invoke",{value:K(A,g,E)}),Q}function G(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}g.wrap=t;var h="suspendedStart",R="suspendedYield",F="executing",r="completed",y={};function e(){}function S(){}function N(){}var n={};s(n,D,(function(){return this}));var M=Object.getPrototypeOf,c=M&&M(M(H([])));c&&c!==Q&&E.call(c,D)&&(n=c);var k=N.prototype=e.prototype=Object.create(n);function U(A){["next","throw","return"].forEach((function(I){s(A,I,(function(A){return this._invoke(I,A)}))}))}function J(A,I){function g(C,Q,i,o){var D=G(A[C],A,Q);if("throw"!==D.type){var a=D.arg,w=a.value;return w&&"object"==B(w)&&E.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,i,o)}),(function(A){g("throw",A,i,o)})):I.resolve(w).then((function(A){a.value=A,i(a)}),(function(A){return g("throw",A,i,o)}))}o(D.arg)}var C;i(this,"_invoke",{value:function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}})}function K(A,g,B){var C=h;return function(Q,E){if(C===F)throw new Error("Generator is already running");if(C===r){if("throw"===Q)throw E;return{value:I,done:!0}}for(B.method=Q,B.arg=E;;){var i=B.delegate;if(i){var o=Y(i,B);if(o){if(o===y)continue;return o}}if("next"===B.method)B.sent=B._sent=B.arg;else if("throw"===B.method){if(C===h)throw C=r,B.arg;B.dispatchException(B.arg)}else"return"===B.method&&B.abrupt("return",B.arg);C=F;var D=G(A,g,B);if("normal"===D.type){if(C=B.done?r:R,D.arg===y)continue;return{value:D.arg,done:B.done}}"throw"===D.type&&(C=r,B.method="throw",B.arg=D.arg)}}}function Y(A,g){var B=g.method,C=A.iterator[B];if(C===I)return g.delegate=null,"throw"===B&&A.iterator.return&&(g.method="return",g.arg=I,Y(A,g),"throw"===g.method)||"return"!==B&&(g.method="throw",g.arg=new TypeError("The iterator does not provide a \'"+B+"\' method")),y;var Q=G(C,A.iterator,g.arg);if("throw"===Q.type)return g.method="throw",g.arg=Q.arg,g.delegate=null,y;var E=Q.arg;return E?E.done?(g[A.resultName]=E.value,g.next=A.nextLoc,"return"!==g.method&&(g.method="next",g.arg=I),g.delegate=null,y):E:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,y)}function L(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function d(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function l(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(L,this),this.reset(!0)}function H(A){if(A||""===A){var g=A[D];if(g)return g.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var C=-1,Q=function g(){for(;++C<A.length;)if(E.call(A,C))return g.value=A[C],g.done=!1,g;return g.value=I,g.done=!0,g};return Q.next=Q}}throw new TypeError(B(A)+" is not iterable")}return S.prototype=N,i(k,"constructor",{value:N,configurable:!0}),i(N,"constructor",{value:S,configurable:!0}),S.displayName=s(N,w,"GeneratorFunction"),g.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===S||"GeneratorFunction"===(I.displayName||I.name))},g.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,N):(A.__proto__=N,s(A,w,"GeneratorFunction")),A.prototype=Object.create(k),A},g.awrap=function(A){return{__await:A}},U(J.prototype),s(J.prototype,a,(function(){return this})),g.AsyncIterator=J,g.async=function(A,I,B,C,Q){void 0===Q&&(Q=Promise);var E=new J(t(A,I,B,C),Q);return g.isGeneratorFunction(I)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},U(k),s(k,w,"Generator"),s(k,D,(function(){return this})),s(k,"toString",(function(){return"[object Generator]"})),g.keys=function(A){var I=Object(A),g=[];for(var B in I)g.push(B);return g.reverse(),function A(){for(;g.length;){var B=g.pop();if(B in I)return A.value=B,A.done=!1,A}return A.done=!0,A}},g.values=H,l.prototype={constructor:l,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=I,this.done=!1,this.delegate=null,this.method="next",this.arg=I,this.tryEntries.forEach(d),!A)for(var g in this)"t"===g.charAt(0)&&E.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=I)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var g=this;function B(B,C){return i.type="throw",i.arg=A,g.next=B,C&&(g.method="next",g.arg=I),!!C}for(var C=this.tryEntries.length-1;C>=0;--C){var Q=this.tryEntries[C],i=Q.completion;if("root"===Q.tryLoc)return B("end");if(Q.tryLoc<=this.prev){var o=E.call(Q,"catchLoc"),D=E.call(Q,"finallyLoc");if(o&&D){if(this.prev<Q.catchLoc)return B(Q.catchLoc,!0);if(this.prev<Q.finallyLoc)return B(Q.finallyLoc)}else if(o){if(this.prev<Q.catchLoc)return B(Q.catchLoc,!0)}else{if(!D)throw new Error("try statement without catch or finally");if(this.prev<Q.finallyLoc)return B(Q.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var B=this.tryEntries[g];if(B.tryLoc<=this.prev&&E.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var C=B;break}}C&&("break"===A||"continue"===A)&&C.tryLoc<=I&&I<=C.finallyLoc&&(C=null);var Q=C?C.completion:{};return Q.type=A,Q.arg=I,C?(this.method="next",this.next=C.finallyLoc,y):this.complete(Q)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),y},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),d(g),y}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;d(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,g,B){return this.delegate={iterator:H(A),resultName:g,nextLoc:B},"next"===this.method&&(this.arg=I),y}},g}A.exports=C,A.exports.__esModule=!0,A.exports.default=A.exports},698:A=>{function I(g){return A.exports=I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,I(g)}A.exports=I,A.exports.__esModule=!0,A.exports.default=A.exports},687:(A,I,g)=>{var B=g(61)();A.exports=B;try{regeneratorRuntime=B}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=B:Function("r","regeneratorRuntime = r")(B)}}},I={};function B(g){var C=I[g];if(void 0!==C)return C.exports;var Q=I[g]={exports:{}};return A[g](Q,Q.exports,B),Q.exports}B.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return B.d(I,{a:I}),I},B.d=(A,I)=>{for(var g in I)B.o(I,g)&&!B.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},B.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),B.r=A=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})};var C={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function Q(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function E(A){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},E(A)}function i(A){var I=function(A,I){if("object"!==E(A)||null===A)return A;var g=A[Symbol.toPrimitive];if(void 0!==g){var B=g.call(A,"string");if("object"!==E(B))return B;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(A)}(A);return"symbol"===E(I)?I:String(I)}function o(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,i(B.key),B)}}function D(A,I,g){return I&&o(A.prototype,I),g&&o(A,g),Object.defineProperty(A,"prototype",{writable:!1}),A}function a(A,I,g){return(I=i(I))in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}B.r(C),B.d(C,{ARControllerNFT:()=>AI,ARToolkitNFT:()=>$A});var w,s=B(687),t=B.n(s);const G=(w="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(A={}){var I,g;(A=void 0!==A?A:{}).ready=new Promise((function(A,B){I=A,g=B}));var B,C,Q,E=Object.assign({},A),i="./this.program",o=(A,I)=>{throw I},D="";"undefined"!=typeof document&&document.currentScript&&(D=document.currentScript.src),w&&(D=w),D=0!==D.indexOf("blob:")?D.substr(0,D.replace(/[?#].*/,"").lastIndexOf("/")+1):"",B=A=>{try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=HI(A);if(g)return function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B))}return I.join("")}(g);throw I}},C=(A,I,g)=>{var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=()=>{if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=HI(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)};var a,s=A.print||console.log.bind(console),t=A.printErr||console.warn.bind(console);Object.assign(A,E),E=null,A.arguments&&A.arguments,A.thisProgram&&(i=A.thisProgram),A.quit&&(o=A.quit),A.wasmBinary&&(a=A.wasmBinary);var G,h=A.noExitRuntime||!0;"object"!=typeof WebAssembly&&b("no native wasm support detected");var R=!1;function F(A,I){A||b(I)}var r,y,e,S,N,n,M,c,k,U="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function J(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.buffer&&U)return U.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function K(A,I){return A?J(y,A,I):""}function Y(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function L(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}function d(){var I=G.buffer;A.HEAP8=r=new Int8Array(I),A.HEAP16=e=new Int16Array(I),A.HEAP32=N=new Int32Array(I),A.HEAPU8=y=new Uint8Array(I),A.HEAPU16=S=new Uint16Array(I),A.HEAPU32=n=new Uint32Array(I),A.HEAPF32=M=new Float32Array(I),A.HEAPF64=c=new Float64Array(I)}var l=[],H=[],q=[],p=0,u=null,f=null;function W(I){p++,A.monitorRunDependencies&&A.monitorRunDependencies(p)}function m(I){if(p--,A.monitorRunDependencies&&A.monitorRunDependencies(p),0==p&&(null!==u&&(clearInterval(u),u=null),f)){var g=f;f=null,g()}}function b(I){A.onAbort&&A.onAbort(I),t(I="Aborted("+I+")"),R=!0,I+=". Build with -sASSERTIONS for more info.";var B=new WebAssembly.RuntimeError(I);throw g(B),B}var Z,O,x,T,V="data:application/octet-stream;base64,";function X(A){return A.startsWith(V)}function j(A){try{if(A==Z&&a)return new Uint8Array(a);var I=HI(A);if(I)return I;if(Q)return Q(A);throw"both async and sync fetching of the wasm failed"}catch(A){b(A)}}function v(A,I,g){return function(A){return a||"function"!=typeof fetch?Promise.resolve().then((function(){return j(A)})):fetch(A,{credentials:"same-origin"}).then((function(I){if(!I.ok)throw"failed to load wasm binary file at \'"+A+"\'";return I.arrayBuffer()})).catch((function(){return j(A)}))}(A).then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(g,(function(A){t("failed to asynchronously prepare wasm: "+A),b(A)}))}X(Z="data:application/octet-stream;base64,")||(O=Z,Z=A.locateFile?A.locateFile(O,D):D+O);var P={62336:(A,I,g)=>{var B=K(A),C=K(I),Q=K(g);console.log(C+B,Q)},62475:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.log(Q+C,E,i)},62653:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.log(Q+C,E,i)},62831:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.log(Q+C,E,i)},63009:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.log(Q+C,E,i)},63187:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g);console.log(Q+C,E,B)},63330:(A,I,g)=>{var B=K(A),C=K(I),Q=K(g);console.error(C+B,Q)},63473:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.error(Q+C,E,i)},63655:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.error(Q+C,E,i)},63837:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.error(Q+C,E,i)},64019:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.error(Q+C,E,i)},64201:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g);console.error(Q+C,E,B)},64348:(A,I,g)=>{var B=K(A),C=K(I),Q=K(g);console.warn(C+B,Q)},64488:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.warn(Q+C,E,i)},64669:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.warn(Q+C,E,i)},64850:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.warn(Q+C,E,i)},65031:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g),i=K(B);console.warn(Q+C,E,i)},65212:(A,I,g,B)=>{var C=K(A),Q=K(I),E=K(g);console.warn(Q+C,E,B)}};function z(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function _(I){for(;I.length>0;)I.shift()(A)}function $(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){n[this.ptr+4>>2]=A},this.get_type=function(){return n[this.ptr+4>>2]},this.set_destructor=function(A){n[this.ptr+8>>2]=A},this.get_destructor=function(){return n[this.ptr+8>>2]},this.set_refcount=function(A){N[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,r[this.ptr+12>>0]=A},this.get_caught=function(){return 0!=r[this.ptr+12>>0]},this.set_rethrown=function(A){A=A?1:0,r[this.ptr+13>>0]=A},this.get_rethrown=function(){return 0!=r[this.ptr+13>>0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=N[this.ptr>>2];N[this.ptr>>2]=A+1},this.release_ref=function(){var A=N[this.ptr>>2];return N[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){n[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return n[this.ptr+16>>2]},this.get_exception_ptr=function(){if(xI(this.get_type()))return n[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var AA={isAbs:A=>"/"===A.charAt(0),splitPath:A=>/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(A).slice(1),normalizeArray:(A,I)=>{for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:A=>{var I=AA.isAbs(A),g="/"===A.substr(-1);return(A=AA.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:A=>{var I=AA.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:A=>{if("/"===A)return"/";var I=(A=(A=AA.normalize(A)).replace(/\\/$/,"")).lastIndexOf("/");return-1===I?A:A.substr(I+1)},join:function(){var A=Array.prototype.slice.call(arguments);return AA.normalize(A.join("/"))},join2:(A,I)=>AA.normalize(A+"/"+I)},IA={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:EA.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I=AA.isAbs(B)}return(I?"/":"")+(A=AA.normalizeArray(A.split("/").filter((A=>!!A)),!I).join("/"))||"."},relative:(A,I)=>{function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=IA.resolve(A).substr(1),I=IA.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}};function gA(A,I,g){var B=g>0?g:L(A)+1,C=new Array(B),Q=Y(A,C,0,C.length);return I&&(C.length=Q),C}var BA={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){BA.ttys[A]={input:[],output:[],ops:I},EA.registerDevice(A,BA.stream_ops)},stream_ops:{open:function(A){var I=BA.ttys[A.node.rdev];if(!I)throw new EA.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.fsync(A.tty)},fsync:function(A){A.tty.ops.fsync(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new EA.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new EA.ErrnoError(29)}if(void 0===i&&0===Q)throw new EA.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new EA.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new EA.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if("undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\\n"),!I)return null;A.input=gA(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(s(J(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(s(J(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(t(J(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},fsync:function(A){A.output&&A.output.length>0&&(t(J(A.output,0)),A.output=[])}}};function CA(A){b()}var QA={ops_table:null,mount:function(A){return QA.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(EA.isBlkdev(g)||EA.isFIFO(g))throw new EA.ErrnoError(63);QA.ops_table||(QA.ops_table={dir:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr,lookup:QA.node_ops.lookup,mknod:QA.node_ops.mknod,rename:QA.node_ops.rename,unlink:QA.node_ops.unlink,rmdir:QA.node_ops.rmdir,readdir:QA.node_ops.readdir,symlink:QA.node_ops.symlink},stream:{llseek:QA.stream_ops.llseek}},file:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr},stream:{llseek:QA.stream_ops.llseek,read:QA.stream_ops.read,write:QA.stream_ops.write,allocate:QA.stream_ops.allocate,mmap:QA.stream_ops.mmap,msync:QA.stream_ops.msync}},link:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr,readlink:QA.node_ops.readlink},stream:{}},chrdev:{node:{getattr:QA.node_ops.getattr,setattr:QA.node_ops.setattr},stream:EA.chrdev_stream_ops}});var C=EA.createNode(A,I,g,B);return EA.isDir(C.mode)?(C.node_ops=QA.ops_table.dir.node,C.stream_ops=QA.ops_table.dir.stream,C.contents={}):EA.isFile(C.mode)?(C.node_ops=QA.ops_table.file.node,C.stream_ops=QA.ops_table.file.stream,C.usedBytes=0,C.contents=null):EA.isLink(C.mode)?(C.node_ops=QA.ops_table.link.node,C.stream_ops=QA.ops_table.link.stream):EA.isChrdev(C.mode)&&(C.node_ops=QA.ops_table.chrdev.node,C.stream_ops=QA.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C,A.timestamp=C.timestamp),C},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array(0)},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)>>>0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I)if(0==I)A.contents=null,A.usedBytes=0;else{var g=A.contents;A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=EA.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,EA.isDir(A.mode)?I.size=4096:EA.isFile(A.mode)?I.size=A.usedBytes:EA.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&QA.resizeFileStorage(A,I.size)},lookup:function(A,I){throw EA.genericErrors[44]},mknod:function(A,I,g,B){return QA.createNode(A,I,g,B)},rename:function(A,I,g){if(EA.isDir(A.mode)){var B;try{B=EA.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new EA.ErrnoError(55)}delete A.parent.contents[A.name],A.parent.timestamp=Date.now(),A.name=g,I.contents[g]=A,I.timestamp=A.parent.timestamp,A.parent=I},unlink:function(A,I){delete A.contents[I],A.timestamp=Date.now()},rmdir:function(A,I){var g=EA.lookupNode(A,I);for(var B in g.contents)throw new EA.ErrnoError(55);delete A.contents[I],A.timestamp=Date.now()},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=QA.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!EA.isLink(A.mode))throw new EA.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(I.buffer===r.buffer&&(Q=!1),!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(QA.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&EA.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new EA.ErrnoError(28);return B},allocate:function(A,I,g){QA.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C){if(!EA.isFile(A.node.mode))throw new EA.ErrnoError(43);var Q,E,i=A.node.contents;if(2&C||i.buffer!==r.buffer){if((g>0||g+I<i.length)&&(i=i.subarray?i.subarray(g,g+I):Array.prototype.slice.call(i,g,g+I)),E=!0,!(Q=CA()))throw new EA.ErrnoError(48);r.set(i,Q)}else E=!1,Q=i.byteOffset;return{ptr:Q,allocated:E}},msync:function(A,I,g,B,C){return QA.stream_ops.write(A,I,0,B,g,!1),0}}},EA={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(A,I={})=>{if(!(A=IA.resolve(A)))return{path:"",node:null};if((I=Object.assign({follow_mount:!0,recurse_count:0},I)).recurse_count>8)throw new EA.ErrnoError(32);for(var g=A.split("/").filter((A=>!!A)),B=EA.root,C="/",Q=0;Q<g.length;Q++){var E=Q===g.length-1;if(E&&I.parent)break;if(B=EA.lookupNode(B,g[Q]),C=AA.join2(C,g[Q]),EA.isMountpoint(B)&&(!E||E&&I.follow_mount)&&(B=B.mounted.root),!E||I.follow)for(var i=0;EA.isLink(B.mode);){var o=EA.readlink(C);if(C=IA.resolve(AA.dirname(C),o),B=EA.lookupPath(C,{recurse_count:I.recurse_count+1}).node,i++>40)throw new EA.ErrnoError(32)}}return{path:C,node:B}},getPath:A=>{for(var I;;){if(EA.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:(A,I)=>{for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%EA.nameTable.length},hashAddNode:A=>{var I=EA.hashName(A.parent.id,A.name);A.name_next=EA.nameTable[I],EA.nameTable[I]=A},hashRemoveNode:A=>{var I=EA.hashName(A.parent.id,A.name);if(EA.nameTable[I]===A)EA.nameTable[I]=A.name_next;else for(var g=EA.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:(A,I)=>{var g=EA.mayLookup(A);if(g)throw new EA.ErrnoError(g,A);for(var B=EA.hashName(A.id,I),C=EA.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return EA.lookup(A,I)},createNode:(A,I,g,B)=>{var C=new EA.FSNode(A,I,g,B);return EA.hashAddNode(C),C},destroyNode:A=>{EA.hashRemoveNode(A)},isRoot:A=>A===A.parent,isMountpoint:A=>!!A.mounted,isFile:A=>32768==(61440&A),isDir:A=>16384==(61440&A),isLink:A=>40960==(61440&A),isChrdev:A=>8192==(61440&A),isBlkdev:A=>24576==(61440&A),isFIFO:A=>4096==(61440&A),isSocket:A=>49152==(49152&A),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:A=>{var I=EA.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:A=>{var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:(A,I)=>EA.ignorePermissions||(!I.includes("r")||292&A.mode)&&(!I.includes("w")||146&A.mode)&&(!I.includes("x")||73&A.mode)?0:2,mayLookup:A=>EA.nodePermissions(A,"x")||(A.node_ops.lookup?0:2),mayCreate:(A,I)=>{try{return EA.lookupNode(A,I),20}catch(A){}return EA.nodePermissions(A,"wx")},mayDelete:(A,I,g)=>{var B;try{B=EA.lookupNode(A,I)}catch(A){return A.errno}var C=EA.nodePermissions(A,"wx");if(C)return C;if(g){if(!EA.isDir(B.mode))return 54;if(EA.isRoot(B)||EA.getPath(B)===EA.cwd())return 10}else if(EA.isDir(B.mode))return 31;return 0},mayOpen:(A,I)=>A?EA.isLink(A.mode)?32:EA.isDir(A.mode)&&("r"!==EA.flagsToPermissionString(I)||512&I)?31:EA.nodePermissions(A,EA.flagsToPermissionString(I)):44,MAX_OPEN_FDS:4096,nextfd:(A=0,I=EA.MAX_OPEN_FDS)=>{for(var g=A;g<=I;g++)if(!EA.streams[g])return g;throw new EA.ErrnoError(33)},getStream:A=>EA.streams[A],createStream:(A,I,g)=>{EA.FSStream||(EA.FSStream=function(){this.shared={}},EA.FSStream.prototype={},Object.defineProperties(EA.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(A){this.shared.flags=A}},position:{get:function(){return this.shared.position},set:function(A){this.shared.position=A}}})),A=Object.assign(new EA.FSStream,A);var B=EA.nextfd(I,g);return A.fd=B,EA.streams[B]=A,A},closeStream:A=>{EA.streams[A]=null},chrdev_stream_ops:{open:A=>{var I=EA.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:()=>{throw new EA.ErrnoError(70)}},major:A=>A>>8,minor:A=>255&A,makedev:(A,I)=>A<<8|I,registerDevice:(A,I)=>{EA.devices[A]={stream_ops:I}},getDevice:A=>EA.devices[A],getMounts:A=>{for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:(A,I)=>{"function"==typeof A&&(I=A,A=!1),EA.syncFSRequests++,EA.syncFSRequests>1&&t("warning: "+EA.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=EA.getMounts(EA.root.mount),B=0;function C(A){return EA.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((I=>{if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:(A,I,g)=>{var B,C="/"===g,Q=!g;if(C&&EA.root)throw new EA.ErrnoError(10);if(!C&&!Q){var E=EA.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,EA.isMountpoint(B))throw new EA.ErrnoError(10);if(!EA.isDir(B.mode))throw new EA.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?EA.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:A=>{var I=EA.lookupPath(A,{follow_mount:!1});if(!EA.isMountpoint(I.node))throw new EA.ErrnoError(28);var g=I.node,B=g.mounted,C=EA.getMounts(B);Object.keys(EA.nameTable).forEach((A=>{for(var I=EA.nameTable[A];I;){var g=I.name_next;C.includes(I.mount)&&EA.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:(A,I)=>A.node_ops.lookup(A,I),mknod:(A,I,g)=>{var B=EA.lookupPath(A,{parent:!0}).node,C=AA.basename(A);if(!C||"."===C||".."===C)throw new EA.ErrnoError(28);var Q=EA.mayCreate(B,C);if(Q)throw new EA.ErrnoError(Q);if(!B.node_ops.mknod)throw new EA.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:(A,I)=>(I=void 0!==I?I:438,I&=4095,I|=32768,EA.mknod(A,I,0)),mkdir:(A,I)=>(I=void 0!==I?I:511,I&=1023,I|=16384,EA.mknod(A,I,0)),mkdirTree:(A,I)=>{for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{EA.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:(A,I,g)=>(void 0===g&&(g=I,I=438),I|=8192,EA.mknod(A,I,g)),symlink:(A,I)=>{if(!IA.resolve(A))throw new EA.ErrnoError(44);var g=EA.lookupPath(I,{parent:!0}).node;if(!g)throw new EA.ErrnoError(44);var B=AA.basename(I),C=EA.mayCreate(g,B);if(C)throw new EA.ErrnoError(C);if(!g.node_ops.symlink)throw new EA.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:(A,I)=>{var g,B,C=AA.dirname(A),Q=AA.dirname(I),E=AA.basename(A),i=AA.basename(I);if(g=EA.lookupPath(A,{parent:!0}).node,B=EA.lookupPath(I,{parent:!0}).node,!g||!B)throw new EA.ErrnoError(44);if(g.mount!==B.mount)throw new EA.ErrnoError(75);var o,D=EA.lookupNode(g,E),a=IA.relative(A,Q);if("."!==a.charAt(0))throw new EA.ErrnoError(28);if("."!==(a=IA.relative(I,C)).charAt(0))throw new EA.ErrnoError(55);try{o=EA.lookupNode(B,i)}catch(A){}if(D!==o){var w=EA.isDir(D.mode),s=EA.mayDelete(g,E,w);if(s)throw new EA.ErrnoError(s);if(s=o?EA.mayDelete(B,i,w):EA.mayCreate(B,i))throw new EA.ErrnoError(s);if(!g.node_ops.rename)throw new EA.ErrnoError(63);if(EA.isMountpoint(D)||o&&EA.isMountpoint(o))throw new EA.ErrnoError(10);if(B!==g&&(s=EA.nodePermissions(g,"w")))throw new EA.ErrnoError(s);EA.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{EA.hashAddNode(D)}}},rmdir:A=>{var I=EA.lookupPath(A,{parent:!0}).node,g=AA.basename(A),B=EA.lookupNode(I,g),C=EA.mayDelete(I,g,!0);if(C)throw new EA.ErrnoError(C);if(!I.node_ops.rmdir)throw new EA.ErrnoError(63);if(EA.isMountpoint(B))throw new EA.ErrnoError(10);I.node_ops.rmdir(I,g),EA.destroyNode(B)},readdir:A=>{var I=EA.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new EA.ErrnoError(54);return I.node_ops.readdir(I)},unlink:A=>{var I=EA.lookupPath(A,{parent:!0}).node;if(!I)throw new EA.ErrnoError(44);var g=AA.basename(A),B=EA.lookupNode(I,g),C=EA.mayDelete(I,g,!1);if(C)throw new EA.ErrnoError(C);if(!I.node_ops.unlink)throw new EA.ErrnoError(63);if(EA.isMountpoint(B))throw new EA.ErrnoError(10);I.node_ops.unlink(I,g),EA.destroyNode(B)},readlink:A=>{var I=EA.lookupPath(A).node;if(!I)throw new EA.ErrnoError(44);if(!I.node_ops.readlink)throw new EA.ErrnoError(28);return IA.resolve(EA.getPath(I.parent),I.node_ops.readlink(I))},stat:(A,I)=>{var g=EA.lookupPath(A,{follow:!I}).node;if(!g)throw new EA.ErrnoError(44);if(!g.node_ops.getattr)throw new EA.ErrnoError(63);return g.node_ops.getattr(g)},lstat:A=>EA.stat(A,!0),chmod:(A,I,g)=>{var B;if(!(B="string"==typeof A?EA.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new EA.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:(A,I)=>{EA.chmod(A,I,!0)},fchmod:(A,I)=>{var g=EA.getStream(A);if(!g)throw new EA.ErrnoError(8);EA.chmod(g.node,I)},chown:(A,I,g,B)=>{var C;if(!(C="string"==typeof A?EA.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new EA.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:(A,I,g)=>{EA.chown(A,I,g,!0)},fchown:(A,I,g)=>{var B=EA.getStream(A);if(!B)throw new EA.ErrnoError(8);EA.chown(B.node,I,g)},truncate:(A,I)=>{if(I<0)throw new EA.ErrnoError(28);var g;if(!(g="string"==typeof A?EA.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new EA.ErrnoError(63);if(EA.isDir(g.mode))throw new EA.ErrnoError(31);if(!EA.isFile(g.mode))throw new EA.ErrnoError(28);var B=EA.nodePermissions(g,"w");if(B)throw new EA.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:(A,I)=>{var g=EA.getStream(A);if(!g)throw new EA.ErrnoError(8);if(0==(2097155&g.flags))throw new EA.ErrnoError(28);EA.truncate(g.node,I)},utime:(A,I,g)=>{var B=EA.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:(I,g,B)=>{if(""===I)throw new EA.ErrnoError(44);var C;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?EA.modeStringToFlags(g):g)?4095&B|32768:0,"object"==typeof I)C=I;else{I=AA.normalize(I);try{C=EA.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var Q=!1;if(64&g)if(C){if(128&g)throw new EA.ErrnoError(20)}else C=EA.mknod(I,B,0),Q=!0;if(!C)throw new EA.ErrnoError(44);if(EA.isChrdev(C.mode)&&(g&=-513),65536&g&&!EA.isDir(C.mode))throw new EA.ErrnoError(54);if(!Q){var E=EA.mayOpen(C,g);if(E)throw new EA.ErrnoError(E)}512&g&&!Q&&EA.truncate(C,0),g&=-131713;var i=EA.createStream({node:C,path:EA.getPath(C),flags:g,seekable:!0,position:0,stream_ops:C.stream_ops,ungotten:[],error:!1});return i.stream_ops.open&&i.stream_ops.open(i),!A.logReadFiles||1&g||(EA.readFiles||(EA.readFiles={}),I in EA.readFiles||(EA.readFiles[I]=1)),i},close:A=>{if(EA.isClosed(A))throw new EA.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{EA.closeStream(A.fd)}A.fd=null},isClosed:A=>null===A.fd,llseek:(A,I,g)=>{if(EA.isClosed(A))throw new EA.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new EA.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new EA.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:(A,I,g,B,C)=>{if(B<0||C<0)throw new EA.ErrnoError(28);if(EA.isClosed(A))throw new EA.ErrnoError(8);if(1==(2097155&A.flags))throw new EA.ErrnoError(8);if(EA.isDir(A.node.mode))throw new EA.ErrnoError(31);if(!A.stream_ops.read)throw new EA.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new EA.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:(A,I,g,B,C,Q)=>{if(B<0||C<0)throw new EA.ErrnoError(28);if(EA.isClosed(A))throw new EA.ErrnoError(8);if(0==(2097155&A.flags))throw new EA.ErrnoError(8);if(EA.isDir(A.node.mode))throw new EA.ErrnoError(31);if(!A.stream_ops.write)throw new EA.ErrnoError(28);A.seekable&&1024&A.flags&&EA.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new EA.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);return E||(A.position+=i),i},allocate:(A,I,g)=>{if(EA.isClosed(A))throw new EA.ErrnoError(8);if(I<0||g<=0)throw new EA.ErrnoError(28);if(0==(2097155&A.flags))throw new EA.ErrnoError(8);if(!EA.isFile(A.node.mode)&&!EA.isDir(A.node.mode))throw new EA.ErrnoError(43);if(!A.stream_ops.allocate)throw new EA.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:(A,I,g,B,C)=>{if(0!=(2&B)&&0==(2&C)&&2!=(2097155&A.flags))throw new EA.ErrnoError(2);if(1==(2097155&A.flags))throw new EA.ErrnoError(2);if(!A.stream_ops.mmap)throw new EA.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C)},msync:(A,I,g,B,C)=>A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0,munmap:A=>0,ioctl:(A,I,g)=>{if(!A.stream_ops.ioctl)throw new EA.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:(A,I={})=>{if(I.flags=I.flags||0,I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error(\'Invalid encoding type "\'+I.encoding+\'"\');var g,B=EA.open(A,I.flags),C=EA.stat(A).size,Q=new Uint8Array(C);return EA.read(B,Q,0,C,0),"utf8"===I.encoding?g=J(Q,0):"binary"===I.encoding&&(g=Q),EA.close(B),g},writeFile:(A,I,g={})=>{g.flags=g.flags||577;var B=EA.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(L(I)+1),Q=Y(I,C,0,C.length);EA.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");EA.write(B,I,0,I.byteLength,void 0,g.canOwn)}EA.close(B)},cwd:()=>EA.currentPath,chdir:A=>{var I=EA.lookupPath(A,{follow:!0});if(null===I.node)throw new EA.ErrnoError(44);if(!EA.isDir(I.node.mode))throw new EA.ErrnoError(54);var g=EA.nodePermissions(I.node,"x");if(g)throw new EA.ErrnoError(g);EA.currentPath=I.path},createDefaultDirectories:()=>{EA.mkdir("/tmp"),EA.mkdir("/home"),EA.mkdir("/home/web_user")},createDefaultDevices:()=>{EA.mkdir("/dev"),EA.registerDevice(EA.makedev(1,3),{read:()=>0,write:(A,I,g,B,C)=>B}),EA.mkdev("/dev/null",EA.makedev(1,3)),BA.register(EA.makedev(5,0),BA.default_tty_ops),BA.register(EA.makedev(6,0),BA.default_tty1_ops),EA.mkdev("/dev/tty",EA.makedev(5,0)),EA.mkdev("/dev/tty1",EA.makedev(6,0));var A=function(){if("object"==typeof crypto&&"function"==typeof crypto.getRandomValues){var A=new Uint8Array(1);return()=>(crypto.getRandomValues(A),A[0])}return()=>b("randomDevice")}();EA.createDevice("/dev","random",A),EA.createDevice("/dev","urandom",A),EA.mkdir("/dev/shm"),EA.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{EA.mkdir("/proc");var A=EA.mkdir("/proc/self");EA.mkdir("/proc/self/fd"),EA.mount({mount:()=>{var I=EA.createNode(A,"fd",16895,73);return I.node_ops={lookup:(A,I)=>{var g=+I,B=EA.getStream(g);if(!B)throw new EA.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>B.path}};return C.parent=C,C}},I}},{},"/proc/self/fd")},createStandardStreams:()=>{A.stdin?EA.createDevice("/dev","stdin",A.stdin):EA.symlink("/dev/tty","/dev/stdin"),A.stdout?EA.createDevice("/dev","stdout",null,A.stdout):EA.symlink("/dev/tty","/dev/stdout"),A.stderr?EA.createDevice("/dev","stderr",null,A.stderr):EA.symlink("/dev/tty1","/dev/stderr"),EA.open("/dev/stdin",0),EA.open("/dev/stdout",1),EA.open("/dev/stderr",1)},ensureErrnoError:()=>{EA.ErrnoError||(EA.ErrnoError=function(A,I){this.name="ErrnoError",this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},EA.ErrnoError.prototype=new Error,EA.ErrnoError.prototype.constructor=EA.ErrnoError,[44].forEach((A=>{EA.genericErrors[A]=new EA.ErrnoError(A),EA.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:()=>{EA.ensureErrnoError(),EA.nameTable=new Array(4096),EA.mount(QA,{},"/"),EA.createDefaultDirectories(),EA.createDefaultDevices(),EA.createSpecialDirectories(),EA.filesystems={MEMFS:QA}},init:(I,g,B)=>{EA.init.initialized=!0,EA.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,EA.createStandardStreams()},quit:()=>{EA.init.initialized=!1;for(var A=0;A<EA.streams.length;A++){var I=EA.streams[A];I&&EA.close(I)}},getMode:(A,I)=>{var g=0;return A&&(g|=365),I&&(g|=146),g},findObject:(A,I)=>{var g=EA.analyzePath(A,I);return g.exists?g.object:null},analyzePath:(A,I)=>{try{A=(B=EA.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=EA.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=AA.basename(A),B=EA.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createPath:(A,I,g,B)=>{A="string"==typeof A?A:EA.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=AA.join2(A,Q);try{EA.mkdir(E)}catch(A){}A=E}}return E},createFile:(A,I,g,B,C)=>{var Q=AA.join2("string"==typeof A?A:EA.getPath(A),I),E=EA.getMode(B,C);return EA.create(Q,E)},createDataFile:(A,I,g,B,C,Q)=>{var E=I;A&&(A="string"==typeof A?A:EA.getPath(A),E=I?AA.join2(A,I):A);var i=EA.getMode(B,C),o=EA.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}EA.chmod(o,146|i);var s=EA.open(o,577);EA.write(s,g,0,g.length,0,Q),EA.close(s),EA.chmod(o,i)}return o},createDevice:(A,I,g,B)=>{var C=AA.join2("string"==typeof A?A:EA.getPath(A),I),Q=EA.getMode(!!g,!!B);EA.createDevice.major||(EA.createDevice.major=64);var E=EA.makedev(EA.createDevice.major++,0);return EA.registerDevice(E,{open:A=>{A.seekable=!1},close:A=>{B&&B.buffer&&B.buffer.length&&B(10)},read:(A,I,B,C,Q)=>{for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new EA.ErrnoError(29)}if(void 0===o&&0===E)throw new EA.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:(A,I,g,C,Q)=>{for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new EA.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),EA.mkdev(C,Q,E)},forceLoadFile:A=>{if(A.isDevice||A.isFolder||A.link||A.contents)return!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!B)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=gA(B(A.url),!0),A.usedBytes=A.contents.length}catch(A){throw new EA.ErrnoError(29)}},createLazyFile:(A,I,g,B,C)=>{function Q(){this.lengthKnown=!1,this.chunks=[]}var E;if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn\'t load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((A=>{var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=((A,I)=>{if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),C.responseType="arraybuffer",C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn\'t load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):gA(C.responseText||"",!0)})(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,s("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";E={isDevice:!1,url:g};var i=EA.createFile(A,I,E,B,C);E.contents?i.contents=E.contents:E.url&&(i.contents=null,i.url=E.url),Object.defineProperties(i,{usedBytes:{get:function(){return this.contents.length}}});var o={};function D(A,I,g,B,C){var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E}return Object.keys(i.stream_ops).forEach((A=>{var I=i.stream_ops[A];o[A]=function(){return EA.forceLoadFile(i),I.apply(null,arguments)}})),o.read=(A,I,g,B,C)=>(EA.forceLoadFile(i),D(A,I,g,B,C)),o.mmap=(A,I,g,B,C)=>{EA.forceLoadFile(i);var Q=CA();if(!Q)throw new EA.ErrnoError(48);return D(A,r,Q,I,g),{ptr:Q,allocated:!0}},i.stream_ops=o,i},createPreloadedFile:(A,I,g,B,Q,E,i,o,D,a)=>{var w=I?IA.resolve(AA.join2(A,I)):A;function s(g){function C(g){a&&a(),o||EA.createDataFile(A,I,g,B,Q,D),E&&E(),m()}Browser.handledByPreloadPlugin(g,w,C,(()=>{i&&i(),m()}))||C(g)}W(),"string"==typeof g?function(A,I,g,B){var Q="al "+A;C(A,(I=>{F(I,\'Loading data file "\'+A+\'" failed (no arrayBuffer).\'),s(new Uint8Array(I)),Q&&m()}),(I=>{if(!g)throw\'Loading data file "\'+A+\'" failed.\';g()})),Q&&W()}(g,0,i):s(g)},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(A,I=(()=>{}),g=(()=>{}))=>{var B=EA.indexedDB();try{var C=B.open(EA.DB_NAME(),EA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=()=>{s("creating db"),C.result.createObjectStore(EA.DB_STORE_NAME)},C.onsuccess=()=>{var B=C.result.transaction([EA.DB_STORE_NAME],"readwrite"),Q=B.objectStore(EA.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((A=>{var I=Q.put(EA.analyzePath(A).object.contents,A);I.onsuccess=()=>{++E+i==o&&D()},I.onerror=()=>{i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:(A,I=(()=>{}),g=(()=>{}))=>{var B=EA.indexedDB();try{var C=B.open(EA.DB_NAME(),EA.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=()=>{var B=C.result;try{var Q=B.transaction([EA.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(EA.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((A=>{var I=E.get(A);I.onsuccess=()=>{EA.analyzePath(A).exists&&EA.unlink(A),EA.createDataFile(AA.dirname(A),AA.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=()=>{o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},iA={DEFAULT_POLLMASK:5,calculateAt:function(A,I,g){if(AA.isAbs(I))return I;var B;if(B=-100===A?EA.cwd():iA.getStreamFromFD(A).path,0==I.length){if(!g)throw new EA.ErrnoError(44);return B}return AA.join2(B,I)},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&AA.normalize(I)!==AA.normalize(EA.getPath(A.node)))return-54;throw A}N[g>>2]=B.dev,N[g+8>>2]=B.ino,N[g+12>>2]=B.mode,n[g+16>>2]=B.nlink,N[g+20>>2]=B.uid,N[g+24>>2]=B.gid,N[g+28>>2]=B.rdev,T=[B.size>>>0,(x=B.size,+Math.abs(x)>=1?x>0?(0|Math.min(+Math.floor(x/4294967296),4294967295))>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)],N[g+40>>2]=T[0],N[g+44>>2]=T[1],N[g+48>>2]=4096,N[g+52>>2]=B.blocks;var C=B.atime.getTime(),Q=B.mtime.getTime(),E=B.ctime.getTime();return T=[Math.floor(C/1e3)>>>0,(x=Math.floor(C/1e3),+Math.abs(x)>=1?x>0?(0|Math.min(+Math.floor(x/4294967296),4294967295))>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)],N[g+56>>2]=T[0],N[g+60>>2]=T[1],n[g+64>>2]=C%1e3*1e3,T=[Math.floor(Q/1e3)>>>0,(x=Math.floor(Q/1e3),+Math.abs(x)>=1?x>0?(0|Math.min(+Math.floor(x/4294967296),4294967295))>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)],N[g+72>>2]=T[0],N[g+76>>2]=T[1],n[g+80>>2]=Q%1e3*1e3,T=[Math.floor(E/1e3)>>>0,(x=Math.floor(E/1e3),+Math.abs(x)>=1?x>0?(0|Math.min(+Math.floor(x/4294967296),4294967295))>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)],N[g+88>>2]=T[0],N[g+92>>2]=T[1],n[g+96>>2]=E%1e3*1e3,T=[B.ino>>>0,(x=B.ino,+Math.abs(x)>=1?x>0?(0|Math.min(+Math.floor(x/4294967296),4294967295))>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)],N[g+104>>2]=T[0],N[g+108>>2]=T[1],0},doMsync:function(A,I,g,B,C){if(!EA.isFile(I.node.mode))throw new EA.ErrnoError(43);if(2&B)return 0;var Q=y.slice(A,A+g);EA.msync(I,Q,C,g,B)},varargs:void 0,get:function(){return iA.varargs+=4,N[iA.varargs-4>>2]},getStr:function(A){return K(A)},getStreamFromFD:function(A){var I=EA.getStream(A);if(!I)throw new EA.ErrnoError(8);return I}},oA={};function DA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function aA(A){return this.fromWireType(N[A>>2])}var wA={},sA={},tA={},GA=48,hA=57;function RA(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=GA&&I<=hA?"_"+A:A}function FA(A,I){return{[A=RA(A)]:function(){return I.apply(this,arguments)}}[A]}function rA(A,I){var g=FA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\\n"+g.replace(/^Error(:[^\\n]*)?\\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var yA=void 0;function eA(A){throw new yA(A)}function SA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&eA("Mismatched type converter count");for(var C=0;C<A.length;++C)UA(A[C],B[C])}A.forEach((function(A){tA[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach(((A,I)=>{sA.hasOwnProperty(A)?C[I]=sA[A]:(Q.push(A),wA.hasOwnProperty(A)||(wA[A]=[]),wA[A].push((()=>{C[I]=sA[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function NA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}var nA=void 0;function MA(A){for(var I="",g=A;y[g];)I+=nA[y[g++]];return I}var cA=void 0;function kA(A){throw new cA(A)}function UA(A,I,g={}){if(!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||kA(\'type "\'+B+\'" must have a positive integer typeid pointer\'),sA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;kA("Cannot register type \'"+B+"\' twice")}if(sA[A]=I,delete tA[A],wA.hasOwnProperty(A)){var C=wA[A];delete wA[A],C.forEach((A=>A()))}}function JA(A){kA(A.$$.ptrType.registeredClass.name+" instance already deleted")}var KA=!1;function YA(A){}function LA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function dA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=dA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var lA={},HA=[];function qA(){for(;HA.length;){var A=HA.pop();A.$$.deleteScheduled=!1,A.delete()}}var pA=void 0,uA={};function fA(A,I){return I.ptrType&&I.ptr||eA("makeClassHandle requires ptr and ptrType"),!!I.smartPtrType!=!!I.smartPtr&&eA("Both smartPtrType and smartPtr must be specified"),I.count={value:1},WA(Object.create(A,{$$:{value:I}}))}function WA(A){return"undefined"==typeof FinalizationRegistry?(WA=A=>A,A):(KA=new FinalizationRegistry((A=>{LA(A.$$)})),WA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};KA.register(A,g,A)}return A},YA=A=>KA.unregister(A),WA(A))}function mA(){}function bA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||kA("Function \'"+g+"\' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function ZA(A,I,g,B,C,Q,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=C,this.getActualType=Q,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function OA(A,I,g){for(;I!==g;)I.upcast||kA("Expected null or instance of "+g.name+", got an instance of "+I.name),A=I.upcast(A),I=I.baseClass;return A}function xA(A,I){if(null===I)return this.isReference&&kA("null is not a valid "+this.name),0;I.$$||kA(\'Cannot pass "\'+EI(I)+\'" as a \'+this.name),I.$$.ptr||kA("Cannot pass deleted object as a pointer of type "+this.name);var g=I.$$.ptrType.registeredClass;return OA(I.$$.ptr,g,this.registeredClass)}function TA(A,I){var g;if(null===I)return this.isReference&&kA("null is not a valid "+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||kA(\'Cannot pass "\'+EI(I)+\'" as a \'+this.name),I.$$.ptr||kA("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&I.$$.ptrType.isConst&&kA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);var B=I.$$.ptrType.registeredClass;if(g=OA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&kA("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:kA("Cannot convert argument of type "+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var C=I.clone();g=this.rawShare(g,QI.toHandle((function(){C.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:kA("Unsupporting sharing policy")}return g}function VA(A,I){if(null===I)return this.isReference&&kA("null is not a valid "+this.name),0;I.$$||kA(\'Cannot pass "\'+EI(I)+\'" as a \'+this.name),I.$$.ptr||kA("Cannot pass deleted object as a pointer of type "+this.name),I.$$.ptrType.isConst&&kA("Cannot convert argument of type "+I.$$.ptrType.name+" to parameter type "+this.name);var g=I.$$.ptrType.registeredClass;return OA(I.$$.ptr,g,this.registeredClass)}function XA(A,I,g,B,C,Q,E,i,o,D,a){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=C,this.pointeeType=Q,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=a,C||void 0!==I.baseClass?this.toWireType=TA:B?(this.toWireType=xA,this.destructorFunction=null):(this.toWireType=VA,this.destructorFunction=null)}function jA(A){return k.get(A)}function vA(I,g){var B,C,Q,E=(I=MA(I)).includes("j")?(B=I,C=g,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),function(I,g,B){return I.includes("j")?function(I,g,B){var C=A["dynCall_"+I];return B&&B.length?C.apply(null,[g].concat(B)):C.call(null,g)}(I,g,B):jA(g).apply(null,B)}(B,C,Q)}):jA(g);return"function"!=typeof E&&kA("unknown function pointer with signature "+I+": "+g),E}var PA=void 0;function zA(A){var I=mI(A),g=MA(I);return fI(I),g}function _A(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||sA[I]||(tA[I]?tA[I].forEach(A):(g.push(I),B[I]=!0))})),new PA(A+": "+g.map(zA).join([", "]))}function $A(A,I){for(var g=[],B=0;B<A;B++)g.push(n[I+4*B>>2]);return g}function AI(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+typeof A+" which is not a function");var g=FA(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}function II(A,I,g,B,C){var Q=I.length;Q<2&&kA("argTypes array size mismatch! Must at least get return value and \'this\' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D="void"!==I[0].name,a="",w="";for(o=0;o<Q-2;++o)a+=(0!==o?", ":"")+"arg"+o,w+=(0!==o?", ":"")+"arg"+o+"Wired";var s="return function "+RA(A)+"("+a+") {\\nif (arguments.length !== "+(Q-2)+") {\\nthrowBindingError(\'function "+A+" called with \' + arguments.length + \' arguments, expected "+(Q-2)+" args!\');\\n}\\n";i&&(s+="var destructors = [];\\n");var t=i?"destructors":"null",G=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],h=[kA,B,C,DA,I[0],I[1]];for(E&&(s+="var thisWired = classParam.toWireType("+t+", this);\\n"),o=0;o<Q-2;++o)s+="var arg"+o+"Wired = argType"+o+".toWireType("+t+", arg"+o+"); // "+I[o+2].name+"\\n",G.push("argType"+o),h.push(I[o+2]);if(E&&(w="thisWired"+(w.length>0?", ":"")+w),s+=(D?"var rv = ":"")+"invoker(fn"+(w.length>0?", ":"")+w+");\\n",i)s+="runDestructors(destructors);\\n";else for(o=E?1:2;o<I.length;++o){var R=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(s+=R+"_dtor("+R+"); // "+I[o].name+"\\n",G.push(R+"_dtor"),h.push(I[o].destructorFunction))}return D&&(s+="var ret = retType.fromWireType(rv);\\nreturn ret;\\n"),s+="}\\n",G.push(s),AI(Function,G).apply(null,h)}var gI=[],BI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function CI(A){A>4&&0==--BI[A].refcount&&(BI[A]=void 0,gI.push(A))}var QI={toValue:A=>(A||kA("Cannot use deleted val. handle = "+A),BI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=gI.length?gI.pop():BI.length;return BI[I]={refcount:1,value:A},I}}};function EI(A){if(null===A)return"null";var I=typeof A;return"object"===I||"array"===I||"function"===I?A.toString():""+A}function iI(A,I){switch(I){case 2:return function(A){return this.fromWireType(M[A>>2])};case 3:return function(A){return this.fromWireType(c[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function oI(A,I,g){switch(I){case 0:return g?function(A){return r[A]}:function(A){return y[A]};case 1:return g?function(A){return e[A>>1]}:function(A){return S[A>>1]};case 2:return g?function(A){return N[A>>2]}:function(A){return n[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}var DI="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function aI(A,I){for(var g=A,B=g>>1,C=B+I/2;!(B>=C)&&S[B];)++B;if((g=B<<1)-A>32&&DI)return DI.decode(y.subarray(A,g));for(var Q="",E=0;!(E>=I/2);++E){var i=e[A+2*E>>1];if(0==i)break;Q+=String.fromCharCode(i)}return Q}function wI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);e[I>>1]=E,I+=2}return e[I>>1]=0,I-B}function sI(A){return 2*A.length}function tI(A,I){for(var g=0,B="";!(g>=I/4);){var C=N[A+4*g>>2];if(0==C)break;if(++g,C>=65536){var Q=C-65536;B+=String.fromCharCode(55296|Q>>10,56320|1023&Q)}else B+=String.fromCharCode(C)}return B}function GI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),N[I>>2]=E,(I+=4)+4>C)break}return N[I>>2]=0,I-B}function hI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function RI(A,I){var g=sA[A];return void 0===g&&kA(I+" has unknown type "+zA(A)),g}var FI={};function rI(A){var I=FI[A];return void 0===I?MA(A):I}var yI=[],eI=[];function SI(A){return A%4==0&&(A%100!=0||A%400==0)}var NI=[0,31,60,91,121,152,182,213,244,274,305,335],nI=[0,31,59,90,120,151,181,212,243,273,304,334];function MI(A){var I=L(A)+1,g=uI(I);return g&&Y(A,r,g,I),g}var cI=[];function kI(A){var I=G.buffer;try{return G.grow(A-I.byteLength+65535>>>16),d(),1}catch(A){}}var UI={};function JI(){if(!JI.strings){var A={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:i||"./this.program"};for(var I in UI)void 0===UI[I]?delete A[I]:A[I]=UI[I];var g=[];for(var I in A)g.push(I+"="+A[I]);JI.strings=g}return JI.strings}var KI=[31,29,31,30,31,30,31,31,30,31,30,31],YI=[31,28,31,30,31,30,31,31,30,31,30,31];function LI(A,I,g,B){var C=N[B+40>>2],Q={tm_sec:N[B>>2],tm_min:N[B+4>>2],tm_hour:N[B+8>>2],tm_mday:N[B+12>>2],tm_mon:N[B+16>>2],tm_year:N[B+20>>2],tm_wday:N[B+24>>2],tm_yday:N[B+28>>2],tm_isdst:N[B+32>>2],tm_gmtoff:N[B+36>>2],tm_zone:C?K(C):""},E=K(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function s(A,I){return w(A,I,"0")}function t(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function G(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function h(A){var I=function(A,I){for(var g=new Date(A.getTime());I>0;){var B=SI(g.getFullYear()),C=g.getMonth(),Q=(B?KI:YI)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=G(g),Q=G(B);return t(C,I)<=0?t(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return s((A.tm_year+1900)/100|0,2)},"%d":function(A){return s(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return h(A).toString().substring(2)},"%G":function(A){return h(A)},"%H":function(A){return s(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),s(I,2)},"%j":function(A){return s(A.tm_mday+function(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}(SI(A.tm_year+1900)?KI:YI,A.tm_mon-1),3)},"%m":function(A){return s(A.tm_mon+1,2)},"%M":function(A){return s(A.tm_min,2)},"%n":function(){return"\\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return s(A.tm_sec,2)},"%t":function(){return"\\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=A.tm_yday+7-A.tm_wday;return s(Math.floor(I/7),2)},"%V":function(A){var I=Math.floor((A.tm_yday+7-(A.tm_wday+6)%7)/7);if((A.tm_wday+371-A.tm_yday-2)%7<=2&&I++,I){if(53==I){var g=(A.tm_wday+371-A.tm_yday)%7;4==g||3==g&&SI(A.tm_year)||(I=1)}}else{I=52;var B=(A.tm_wday+7-A.tm_yday-1)%7;(4==B||5==B&&SI(A.tm_year%400-1))&&I++}return s(I,2)},"%w":function(A){return A.tm_wday},"%W":function(A){var I=A.tm_yday+7-(A.tm_wday+6)%7;return s(Math.floor(I/7),2)},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in E=E.replace(/%%/g,"\\0\\0"),R)E.includes(o)&&(E=E.replace(new RegExp(o,"g"),R[o](Q)));var F,y,e=gA(E=E.replace(/\\0\\0/g,"%"),!1);return e.length>I?0:(F=e,y=A,r.set(F,y),e.length-1)}var dI=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=EA.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B};Object.defineProperties(dI.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return EA.isDir(this.mode)}},isDevice:{get:function(){return EA.isChrdev(this.mode)}}}),EA.FSNode=dI,EA.staticInit(),yA=A.InternalError=rA(Error,"InternalError"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);nA=A}(),cA=A.BindingError=rA(Error,"BindingError"),mA.prototype.isAliasOf=function(A){if(!(this instanceof mA))return!1;if(!(A instanceof mA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,C=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)C=B.upcast(C),B=B.baseClass;return I===B&&g===C},mA.prototype.clone=function(){if(this.$$.ptr||JA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=WA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I},mA.prototype.delete=function(){this.$$.ptr||JA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&kA("Object already scheduled for deletion"),YA(this),LA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)},mA.prototype.isDeleted=function(){return!this.$$.ptr},mA.prototype.deleteLater=function(){return this.$$.ptr||JA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&kA("Object already scheduled for deletion"),HA.push(this),1===HA.length&&pA&&pA(qA),this.$$.deleteScheduled=!0,this},A.getInheritedInstanceCount=function(){return Object.keys(uA).length},A.getLiveInheritedInstances=function(){var A=[];for(var I in uA)uA.hasOwnProperty(I)&&A.push(uA[I]);return A},A.flushPendingDeletes=qA,A.setDelayFunction=function(A){pA=A,HA.length&&pA&&pA(qA)},XA.prototype.getPointee=function(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A},XA.prototype.destructor=function(A){this.rawDestructor&&this.rawDestructor(A)},XA.prototype.argPackAdvance=8,XA.prototype.readValueFromPointer=aA,XA.prototype.deleteObject=function(A){null!==A&&A.delete()},XA.prototype.fromWireType=function(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=function(A,I){return I=function(A,I){for(void 0===I&&kA("ptr should not be undefined");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),uA[I]}(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function C(){return this.isSmartPointer?fA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):fA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var Q,E=this.registeredClass.getActualType(I),i=lA[E];if(!i)return C.call(this);Q=this.isConst?i.constPointerType:i.pointerType;var o=dA(I,this.registeredClass,Q.registeredClass);return null===o?C.call(this):this.isSmartPointer?fA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o,smartPtrType:this,smartPtr:A}):fA(Q.registeredClass.instancePrototype,{ptrType:Q,ptr:o})},PA=A.UnboundTypeError=rA(Error,"UnboundTypeError"),A.count_emval_handles=function(){for(var A=0,I=5;I<BI.length;++I)void 0!==BI[I]&&++A;return A},A.get_first_emval=function(){for(var A=5;A<BI.length;++A)if(void 0!==BI[A])return BI[A];return null};var lI="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function HI(A){if(X(A))return function(A){try{for(var I=lI(A),g=new Uint8Array(I.length),B=0;B<I.length;++B)g[B]=I.charCodeAt(B);return g}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice(V.length))}var qI,pI={g:function(A,I,g){throw new $(A).init(I,g),A},v:function(A,I,g){iA.varargs=g;try{var B=iA.getStreamFromFD(A);switch(I){case 0:return(C=iA.get())<0?-28:EA.createStream(B,C).fd;case 1:case 2:case 6:case 7:return 0;case 3:return B.flags;case 4:var C=iA.get();return B.flags|=C,0;case 5:return C=iA.get(),e[C+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return N[WI()>>2]=28,-1}}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return-A.errno}},N:function(A,I,g){iA.varargs=g;try{var B=iA.getStreamFromFD(A);switch(I){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return B.tty?0:-59;case 21519:if(!B.tty)return-59;var C=iA.get();return N[C>>2]=0,0;case 21520:return B.tty?-28:-59;case 21531:return C=iA.get(),EA.ioctl(B,I,C);default:return-28}}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return-A.errno}},O:function(A,I,g,B){iA.varargs=B;try{I=iA.getStr(I),I=iA.calculateAt(A,I);var C=B?iA.get():0;return EA.open(I,g,C).fd}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return-A.errno}},_:function(A){var I=oA[A];delete oA[A];var g=I.rawConstructor,B=I.rawDestructor,C=I.fields;SA([A],C.map((A=>A.getterReturnType)).concat(C.map((A=>A.setterArgumentType))),(A=>{var Q={};return C.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+C.length],a=I.setter,w=I.setterContext;Q[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];a(w,A,D.toWireType(g,I)),DA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in Q)I[g]=Q[g].read(A);return B(A),I},toWireType:function(A,I){for(var C in Q)if(!(C in I))throw new TypeError(\'Missing field:  "\'+C+\'"\');var E=g();for(C in Q)Q[C].write(E,I[C]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:aA,destructorFunction:B}]}))},F:function(A,I,g,B,C){},T:function(A,I,g,B,C){var Q=NA(g);UA(A,{name:I=MA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=r;else if(2===g)B=e;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=N}return this.fromWireType(B[A>>Q])},destructorFunction:null})},l:function(I,g,B,C,Q,E,i,o,D,a,w,s,t){w=MA(w),E=vA(Q,E),o&&(o=vA(i,o)),a&&(a=vA(D,a)),t=vA(s,t);var G=RA(w);!function(I,g,B){A.hasOwnProperty(I)?(kA("Cannot register public name \'"+I+"\' twice"),bA(A,I,I),A.hasOwnProperty(B)&&kA("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[void 0]=g):A[I]=g}(G,(function(){_A("Cannot construct "+w+" due to unbound types",[C])})),SA([I,g,B],C?[C]:[],(function(g){var B,Q;g=g[0],Q=C?(B=g.registeredClass).instancePrototype:mA.prototype;var i=FA(G,(function(){if(Object.getPrototypeOf(this)!==D)throw new cA("Use \'new\' to construct "+w);if(void 0===s.constructor_body)throw new cA(w+" has no accessible constructor");var A=s.constructor_body[arguments.length];if(void 0===A)throw new cA("Tried to invoke ctor of "+w+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(s.constructor_body).toString()+") parameters instead!");return A.apply(this,arguments)})),D=Object.create(Q,{constructor:{value:i}});i.prototype=D;var s=new ZA(w,i,D,t,B,E,o,a),h=new XA(w,s,!0,!1,!1),R=new XA(w+"*",s,!1,!1,!1),F=new XA(w+" const*",s,!1,!0,!1);return lA[I]={pointerType:R,constPointerType:F},function(I,g,B){A.hasOwnProperty(I)||eA("Replacing nonexistant public symbol"),A[I].overloadTable,A[I]=g,A[I].argCount=void 0}(G,i),[h,R,F]}))},j:function(A,I,g,B,C,Q){F(I>0);var E=$A(I,g);C=vA(B,C),SA([],[A],(function(A){var g="constructor "+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new cA("Cannot register multiple constructors with identical number of parameters ("+(I-1)+") for class \'"+A.name+"\'! Overload resolution is currently only performed using the parameter count, not actual type info!");return A.registeredClass.constructor_body[I-1]=()=>{_A("Cannot construct "+A.name+" due to unbound types",E)},SA([],E,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=II(g,B,null,C,Q),[]})),[]}))},b:function(A,I,g,B,C,Q,E,i){var o=$A(g,B);I=MA(I),Q=vA(C,Q),SA([],[A],(function(A){var B=(A=A[0]).name+"."+I;function C(){_A("Cannot call "+B+" due to unbound types",o)}I.startsWith("@@")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,a=D[I];return void 0===a||void 0===a.overloadTable&&a.className!==A.name&&a.argCount===g-2?(C.argCount=g-2,C.className=A.name,D[I]=C):(bA(D,I,B),D[I].overloadTable[g-2]=C),SA([],o,(function(C){var i=II(B,C,A,Q,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},z:function(I,g,B){I=MA(I),SA([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))},S:function(A,I){UA(A,{name:I=MA(I),fromWireType:function(A){var I=QI.toValue(A);return CI(A),I},toWireType:function(A,I){return QI.toHandle(I)},argPackAdvance:8,readValueFromPointer:aA,destructorFunction:null})},y:function(A,I,g){var B=NA(g);UA(A,{name:I=MA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:iI(I,B),destructorFunction:null})},f:function(A,I,g,B,C){I=MA(I),-1===C&&(C=4294967295);var Q=NA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes("unsigned");UA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:oI(I,Q,0!==B),destructorFunction:null})},c:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=n,g=I[A>>=2],C=I[A+1];return new B(I.buffer,C,g)}UA(A,{name:g=MA(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})},x:function(A,I){var g="std::string"===(I=MA(I));UA(A,{name:I,fromWireType:function(A){var I,B=n[A>>2],C=A+4;if(g)for(var Q=C,E=0;E<=B;++E){var i=C+E;if(E==B||0==y[i]){var o=K(Q,i-Q);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),Q=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(y[C+E]);I=D.join("")}return fI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var C="string"==typeof I;C||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||kA("Cannot pass non-string to std::string"),B=g&&C?L(I):I.length;var Q=uI(4+B+1),E=Q+4;if(n[Q>>2]=B,g&&C)Y(I,y,E,B+1);else if(C)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(fI(E),kA("String has UTF-16 code units that do not fit in 8 bits")),y[E+i]=o}else for(i=0;i<B;++i)y[E+i]=I[i];return null!==A&&A.push(fI,Q),Q},argPackAdvance:8,readValueFromPointer:aA,destructorFunction:function(A){fI(A)}})},n:function(A,I,g){var B,C,Q,E,i;g=MA(g),2===I?(B=aI,C=wI,E=sI,Q=()=>S,i=1):4===I&&(B=tI,C=GI,E=hI,Q=()=>n,i=2),UA(A,{name:g,fromWireType:function(A){for(var g,C=n[A>>2],E=Q(),o=A+4,D=0;D<=C;++D){var a=A+4+D*I;if(D==C||0==E[a>>i]){var w=B(o,a-o);void 0===g?g=w:(g+=String.fromCharCode(0),g+=w),o=a+I}}return fI(A),g},toWireType:function(A,B){"string"!=typeof B&&kA("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=uI(4+Q+I);return n[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(fI,o),o},argPackAdvance:8,readValueFromPointer:aA,destructorFunction:function(A){fI(A)}})},Z:function(A,I,g,B,C,Q){oA[A]={name:MA(I),rawConstructor:vA(g,B),rawDestructor:vA(C,Q),fields:[]}},Y:function(A,I,g,B,C,Q,E,i,o,D){oA[A].fields.push({fieldName:MA(I),getterReturnType:g,getter:vA(B,C),getterContext:Q,setterArgumentType:E,setter:vA(i,o),setterContext:D})},U:function(A,I){UA(A,{isVoid:!0,name:I=MA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},H:function(){throw 1/0},W:function(A,I,g){A=QI.toValue(A),I=RI(I,"emval::as");var B=[],C=QI.toHandle(B);return n[g>>2]=C,I.toWireType(B,A)},q:function(A,I,g,B){(A=yI[A])(I=QI.toValue(I),g=rI(g),null,B)},e:CI,o:function(A,I){var g=function(A,I){for(var g=new Array(A),B=0;B<A;++B)g[B]=RI(n[I+4*B>>2],"parameter "+B);return g}(A,I),B=g[0],C=B.name+"_$"+g.slice(1).map((function(A){return A.name})).join("_")+"$",Q=eI[C];if(void 0!==Q)return Q;for(var E=["retType"],i=[B],o="",D=0;D<A-1;++D)o+=(0!==D?", ":"")+"arg"+D,E.push("argType"+D),i.push(g[1+D]);var a,w,s="return function "+RA("methodCaller_"+C)+"(handle, name, destructors, args) {\\n",t=0;for(D=0;D<A-1;++D)s+="    var arg"+D+" = argType"+D+".readValueFromPointer(args"+(t?"+"+t:"")+");\\n",t+=g[D+1].argPackAdvance;for(s+="    var rv = handle[name]("+o+");\\n",D=0;D<A-1;++D)g[D+1].deleteObject&&(s+="    argType"+D+".deleteObject(arg"+D+");\\n");return B.isVoid||(s+="    return retType.toWireType(destructors, rv);\\n"),s+="};\\n",E.push(s),a=AI(Function,E).apply(null,i),w=yI.length,yI.push(a),Q=w,eI[C]=Q,Q},X:function(A,I){return A=QI.toValue(A),I=QI.toValue(I),QI.toHandle(A[I])},i:function(A){A>4&&(BI[A].refcount+=1)},A:function(){return QI.toHandle([])},m:function(A){return QI.toHandle(rI(A))},$:function(){return QI.toHandle({})},V:function(A){DA(QI.toValue(A)),CI(A)},r:function(A,I,g){A=QI.toValue(A),I=QI.toValue(I),g=QI.toValue(g),A[I]=g},h:function(A,I){var g=(A=RI(A,"_emval_take_value")).readValueFromPointer(I);return QI.toHandle(g)},P:function(A,I){var g,B=new Date(1e3*(n[(g=A)>>2]+4294967296*N[g+4>>2]));N[I>>2]=B.getSeconds(),N[I+4>>2]=B.getMinutes(),N[I+8>>2]=B.getHours(),N[I+12>>2]=B.getDate(),N[I+16>>2]=B.getMonth(),N[I+20>>2]=B.getFullYear()-1900,N[I+24>>2]=B.getDay();var C=0|function(A){return(SI(A.getFullYear())?NI:nI)[A.getMonth()]+A.getDate()-1}(B);N[I+28>>2]=C,N[I+36>>2]=-60*B.getTimezoneOffset();var Q=new Date(B.getFullYear(),0,1),E=new Date(B.getFullYear(),6,1).getTimezoneOffset(),i=Q.getTimezoneOffset(),o=0|(E!=i&&B.getTimezoneOffset()==Math.min(i,E));N[I+32>>2]=o},R:function(A,I,g){var B=(new Date).getFullYear(),C=new Date(B,0,1),Q=new Date(B,6,1),E=C.getTimezoneOffset(),i=Q.getTimezoneOffset(),o=Math.max(E,i);function D(A){var I=A.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return I?I[1]:"GMT"}n[A>>2]=60*o,N[I>>2]=Number(E!=i);var a=D(C),w=D(Q),s=MI(a),t=MI(w);i<E?(n[g>>2]=s,n[g+4>>2]=t):(n[g>>2]=t,n[g+4>>2]=s)},a:function(){b("")},s:function(A,I,g){return function(A,I,g){var B=function(A,I){var g;for(cI.length=0,I>>=2;g=y[A++];)I+=105!=g&I,cI.push(105==g?N[I]:c[I++>>1]),++I;return cI}(I,g);return P[A].apply(null,B)}(A,I,g)},w:function(){return Date.now()},I:function(A){var I,g=y.length,B=2147483648;if((A>>>=0)>B)return!1;for(var C=1;C<=4;C*=2){var Q=g*(1+.2/C);if(Q=Math.min(Q,A+100663296),kI(Math.min(B,(I=Math.max(A,Q))+(65536-I%65536)%65536)))return!0}return!1},K:function(A,I){var g=0;return JI().forEach((function(B,C){var Q=I+g;n[A+4*C>>2]=Q,function(A,I,g){for(var B=0;B<A.length;++B)r[I++>>0]=A.charCodeAt(B);r[I>>0]=0}(B,Q),g+=B.length+1})),0},L:function(A,I){var g=JI();n[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),n[I>>2]=B,0},d:function(I,g){var B;B=I,h||(A.onExit&&A.onExit(B),R=!0),o(B,new z(B))},t:function(A){try{var I=iA.getStreamFromFD(A);return EA.close(I),0}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return A.errno}},M:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=n[I>>2],i=n[I+4>>2];I+=8;var o=EA.read(A,r,E,i,B);if(o<0)return-1;if(C+=o,o<i)break;void 0!==B&&(B+=o)}return C}(iA.getStreamFromFD(A),I,g);return n[B>>2]=C,0}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return A.errno}},E:function(A,I,g,B,C){try{var Q=(o=g)+2097152>>>0<4194305-!!(i=I)?(i>>>0)+4294967296*o:NaN;if(isNaN(Q))return 61;var E=iA.getStreamFromFD(A);return EA.llseek(E,Q,B),T=[E.position>>>0,(x=E.position,+Math.abs(x)>=1?x>0?(0|Math.min(+Math.floor(x/4294967296),4294967295))>>>0:~~+Math.ceil((x-+(~~x>>>0))/4294967296)>>>0:0)],N[C>>2]=T[0],N[C+4>>2]=T[1],E.getdents&&0===Q&&0===B&&(E.getdents=null),0}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return A.errno}var i,o},u:function(A,I,g,B){try{var C=function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=n[I>>2],i=n[I+4>>2];I+=8;var o=EA.write(A,r,E,i,B);if(o<0)return-1;C+=o,void 0!==B&&(B+=o)}return C}(iA.getStreamFromFD(A),I,g);return n[B>>2]=C,0}catch(A){if(void 0===EA||"ErrnoError"!==A.name)throw A;return A.errno}},B:function(A,I){var g=ZI();try{return jA(A)(I)}catch(A){if(OI(g),A!==A+0)throw A;bI(1,0)}},D:function(A,I,g){var B=ZI();try{return jA(A)(I,g)}catch(A){if(OI(B),A!==A+0)throw A;bI(1,0)}},C:function(A,I,g,B){var C=ZI();try{return jA(A)(I,g,B)}catch(A){if(OI(C),A!==A+0)throw A;bI(1,0)}},k:function(A,I){var g=ZI();try{jA(A)(I)}catch(A){if(OI(g),A!==A+0)throw A;bI(1,0)}},J:function(A,I,g){var B=ZI();try{jA(A)(I,g)}catch(A){if(OI(B),A!==A+0)throw A;bI(1,0)}},Q:function(A,I,g,B){var C=ZI();try{jA(A)(I,g,B)}catch(A){if(OI(C),A!==A+0)throw A;bI(1,0)}},p:function(A,I,g,B,C){var Q=ZI();try{jA(A)(I,g,B,C)}catch(A){if(OI(Q),A!==A+0)throw A;bI(1,0)}},aa:LI,G:function(A,I,g,B,C){return LI(A,I,g,B)}},uI=(function(){var I,B,C,Q,E={a:pI};function i(I,g){var B,C=I.exports;return A.asm=C,G=A.asm.ba,d(),k=A.asm.ga,B=A.asm.ca,H.unshift(B),m(),C}if(W(),A.instantiateWasm)try{return A.instantiateWasm(E,i)}catch(A){t("Module.instantiateWasm callback failed with error: "+A),g(A)}(I=a,B=Z,C=E,Q=function(A){i(A.instance)},I||"function"!=typeof WebAssembly.instantiateStreaming||X(B)||"function"!=typeof fetch?v(B,C,Q):fetch(B,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,C).then(Q,(function(A){return t("wasm streaming compile failed: "+A),t("falling back to ArrayBuffer instantiation"),v(B,C,Q)}))}))).catch(g)}(),function(){return(uI=A.asm.da).apply(null,arguments)}),fI=function(){return(fI=A.asm.ea).apply(null,arguments)},WI=function(){return(WI=A.asm.fa).apply(null,arguments)},mI=A.___getTypeName=function(){return(mI=A.___getTypeName=A.asm.ha).apply(null,arguments)},bI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.ia).apply(null,arguments)},function(){return(bI=A.asm.ja).apply(null,arguments)}),ZI=function(){return(ZI=A.asm.ka).apply(null,arguments)},OI=function(){return(OI=A.asm.la).apply(null,arguments)},xI=function(){return(xI=A.asm.ma).apply(null,arguments)};function TI(){function g(){qI||(qI=!0,A.calledRun=!0,R||(A.noFSInit||EA.init.initialized||EA.init(),EA.ignorePermissions=!1,BA.init(),_(H),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),q.unshift(I);var I;_(q)}()))}p>0||(function(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),l.unshift(I);var I;_(l)}(),p>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),g()}),1)):g()))}if(A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.na).apply(null,arguments)},A.dynCall_viijii=function(){return(A.dynCall_viijii=A.asm.oa).apply(null,arguments)},A.dynCall_iiiiij=function(){return(A.dynCall_iiiiij=A.asm.pa).apply(null,arguments)},A.dynCall_iiiiijj=function(){return(A.dynCall_iiiiijj=A.asm.qa).apply(null,arguments)},A.dynCall_iiiiiijj=function(){return(A.dynCall_iiiiiijj=A.asm.ra).apply(null,arguments)},A.FS=EA,f=function A(){qI||TI(),qI||(f=A)},A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return TI(),A.ready});var h;function R(){return(h=h||I(t().mark((function A(){return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A)})))).apply(this,arguments)}function F(A,I){return function(){return A.apply(I,arguments)}}const{toString:r}=Object.prototype,{getPrototypeOf:y}=Object,e=(S=Object.create(null),A=>{const I=r.call(A);return S[I]||(S[I]=I.slice(8,-1).toLowerCase())});var S;const N=A=>(A=A.toLowerCase(),I=>e(I)===A),n=A=>I=>typeof I===A,{isArray:M}=Array,c=n("undefined"),k=N("ArrayBuffer"),U=n("string"),J=n("function"),K=n("number"),Y=A=>null!==A&&"object"==typeof A,L=A=>{if("object"!==e(A))return!1;const I=y(A);return!(null!==I&&I!==Object.prototype&&null!==Object.getPrototypeOf(I)||Symbol.toStringTag in A||Symbol.iterator in A)},d=N("Date"),l=N("File"),H=N("Blob"),q=N("FileList"),p=N("URLSearchParams");function u(A,I,{allOwnKeys:g=!1}={}){if(null==A)return;let B,C;if("object"!=typeof A&&(A=[A]),M(A))for(B=0,C=A.length;B<C;B++)I.call(null,A[B],B,A);else{const C=g?Object.getOwnPropertyNames(A):Object.keys(A),Q=C.length;let E;for(B=0;B<Q;B++)E=C[B],I.call(null,A[E],E,A)}}function f(A,I){I=I.toLowerCase();const g=Object.keys(A);let B,C=g.length;for(;C-- >0;)if(B=g[C],I===B.toLowerCase())return B;return null}const W="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:g.g,m=A=>!c(A)&&A!==W,b=(Z="undefined"!=typeof Uint8Array&&y(Uint8Array),A=>Z&&A instanceof Z);var Z;const O=N("HTMLFormElement"),x=(({hasOwnProperty:A})=>(I,g)=>A.call(I,g))(Object.prototype),T=N("RegExp"),V=(A,I)=>{const g=Object.getOwnPropertyDescriptors(A),B={};u(g,((g,C)=>{let Q;!1!==(Q=I(g,C,A))&&(B[C]=Q||g)})),Object.defineProperties(A,B)},X="abcdefghijklmnopqrstuvwxyz",j="0123456789",v={DIGIT:j,ALPHA:X,ALPHA_DIGIT:X+X.toUpperCase()+j},P=N("AsyncFunction"),z={isArray:M,isArrayBuffer:k,isBuffer:function(A){return null!==A&&!c(A)&&null!==A.constructor&&!c(A.constructor)&&J(A.constructor.isBuffer)&&A.constructor.isBuffer(A)},isFormData:A=>{let I;return A&&("function"==typeof FormData&&A instanceof FormData||J(A.append)&&("formdata"===(I=e(A))||"object"===I&&J(A.toString)&&"[object FormData]"===A.toString()))},isArrayBufferView:function(A){let I;return I="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&k(A.buffer),I},isString:U,isNumber:K,isBoolean:A=>!0===A||!1===A,isObject:Y,isPlainObject:L,isUndefined:c,isDate:d,isFile:l,isBlob:H,isRegExp:T,isFunction:J,isStream:A=>Y(A)&&J(A.pipe),isURLSearchParams:p,isTypedArray:b,isFileList:q,forEach:u,merge:function A(){const{caseless:I}=m(this)&&this||{},g={},B=(B,C)=>{const Q=I&&f(g,C)||C;L(g[Q])&&L(B)?g[Q]=A(g[Q],B):L(B)?g[Q]=A({},B):M(B)?g[Q]=B.slice():g[Q]=B};for(let A=0,I=arguments.length;A<I;A++)arguments[A]&&u(arguments[A],B);return g},extend:(A,I,g,{allOwnKeys:B}={})=>(u(I,((I,B)=>{g&&J(I)?A[B]=F(I,g):A[B]=I}),{allOwnKeys:B}),A),trim:A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,""),stripBOM:A=>(65279===A.charCodeAt(0)&&(A=A.slice(1)),A),inherits:(A,I,g,B)=>{A.prototype=Object.create(I.prototype,B),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:I.prototype}),g&&Object.assign(A.prototype,g)},toFlatObject:(A,I,g,B)=>{let C,Q,E;const i={};if(I=I||{},null==A)return I;do{for(C=Object.getOwnPropertyNames(A),Q=C.length;Q-- >0;)E=C[Q],B&&!B(E,A,I)||i[E]||(I[E]=A[E],i[E]=!0);A=!1!==g&&y(A)}while(A&&(!g||g(A,I))&&A!==Object.prototype);return I},kindOf:e,kindOfTest:N,endsWith:(A,I,g)=>{A=String(A),(void 0===g||g>A.length)&&(g=A.length),g-=I.length;const B=A.indexOf(I,g);return-1!==B&&B===g},toArray:A=>{if(!A)return null;if(M(A))return A;let I=A.length;if(!K(I))return null;const g=new Array(I);for(;I-- >0;)g[I]=A[I];return g},forEachEntry:(A,I)=>{const g=(A&&A[Symbol.iterator]).call(A);let B;for(;(B=g.next())&&!B.done;){const g=B.value;I.call(A,g[0],g[1])}},matchAll:(A,I)=>{let g;const B=[];for(;null!==(g=A.exec(I));)B.push(g);return B},isHTMLForm:O,hasOwnProperty:x,hasOwnProp:x,reduceDescriptors:V,freezeMethods:A=>{V(A,((I,g)=>{if(J(A)&&-1!==["arguments","caller","callee"].indexOf(g))return!1;const B=A[g];J(B)&&(I.enumerable=!1,"writable"in I?I.writable=!1:I.set||(I.set=()=>{throw Error("Can not rewrite read-only method \'"+g+"\'")}))}))},toObjectSet:(A,I)=>{const g={},B=A=>{A.forEach((A=>{g[A]=!0}))};return M(A)?B(A):B(String(A).split(I)),g},toCamelCase:A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,(function(A,I,g){return I.toUpperCase()+g})),noop:()=>{},toFiniteNumber:(A,I)=>(A=+A,Number.isFinite(A)?A:I),findKey:f,global:W,isContextDefined:m,ALPHABET:v,generateString:(A=16,I=v.ALPHA_DIGIT)=>{let g="";const{length:B}=I;for(;A--;)g+=I[Math.random()*B|0];return g},isSpecCompliantForm:function(A){return!!(A&&J(A.append)&&"FormData"===A[Symbol.toStringTag]&&A[Symbol.iterator])},toJSONObject:A=>{const I=new Array(10),g=(A,B)=>{if(Y(A)){if(I.indexOf(A)>=0)return;if(!("toJSON"in A)){I[B]=A;const C=M(A)?[]:{};return u(A,((A,I)=>{const Q=g(A,B+1);!c(Q)&&(C[I]=Q)})),I[B]=void 0,C}}return A};return g(A,0)},isAsyncFn:P,isThenable:A=>A&&(Y(A)||J(A))&&J(A.then)&&J(A.catch)};function _(A,I,g,B,C){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=A,this.name="AxiosError",I&&(this.code=I),g&&(this.config=g),B&&(this.request=B),C&&(this.response=C)}z.inherits(_,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:z.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const $=_.prototype,AA={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((A=>{AA[A]={value:A}})),Object.defineProperties(_,AA),Object.defineProperty($,"isAxiosError",{value:!0}),_.from=(A,I,g,B,C,Q)=>{const E=Object.create($);return z.toFlatObject(A,E,(function(A){return A!==Error.prototype}),(A=>"isAxiosError"!==A)),_.call(E,A.message,I,g,B,C),E.cause=A,E.name=A.name,Q&&Object.assign(E,Q),E};const IA=_;function gA(A){return z.isPlainObject(A)||z.isArray(A)}function BA(A){return z.endsWith(A,"[]")?A.slice(0,-2):A}function CA(A,I,g){return A?A.concat(I).map((function(A,I){return A=BA(A),!g&&I?"["+A+"]":A})).join(g?".":""):I}const QA=z.toFlatObject(z,{},null,(function(A){return/^is[A-Z]/.test(A)})),EA=function(A,I,g){if(!z.isObject(A))throw new TypeError("target must be an object");I=I||new FormData;const B=(g=z.toFlatObject(g,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(A,I){return!z.isUndefined(I[A])}))).metaTokens,C=g.visitor||D,Q=g.dots,E=g.indexes,i=(g.Blob||"undefined"!=typeof Blob&&Blob)&&z.isSpecCompliantForm(I);if(!z.isFunction(C))throw new TypeError("visitor must be a function");function o(A){if(null===A)return"";if(z.isDate(A))return A.toISOString();if(!i&&z.isBlob(A))throw new IA("Blob is not supported. Use a Buffer instead.");return z.isArrayBuffer(A)||z.isTypedArray(A)?i&&"function"==typeof Blob?new Blob([A]):Buffer.from(A):A}function D(A,g,C){let i=A;if(A&&!C&&"object"==typeof A)if(z.endsWith(g,"{}"))g=B?g:g.slice(0,-2),A=JSON.stringify(A);else if(z.isArray(A)&&function(A){return z.isArray(A)&&!A.some(gA)}(A)||(z.isFileList(A)||z.endsWith(g,"[]"))&&(i=z.toArray(A)))return g=BA(g),i.forEach((function(A,B){!z.isUndefined(A)&&null!==A&&I.append(!0===E?CA([g],B,Q):null===E?g:g+"[]",o(A))})),!1;return!!gA(A)||(I.append(CA(C,g,Q),o(A)),!1)}const a=[],w=Object.assign(QA,{defaultVisitor:D,convertValue:o,isVisitable:gA});if(!z.isObject(A))throw new TypeError("data must be an object");return function A(g,B){if(!z.isUndefined(g)){if(-1!==a.indexOf(g))throw Error("Circular reference detected in "+B.join("."));a.push(g),z.forEach(g,(function(g,Q){!0===(!(z.isUndefined(g)||null===g)&&C.call(I,g,z.isString(Q)?Q.trim():Q,B,w))&&A(g,B?B.concat(Q):[Q])})),a.pop()}}(A),I};function iA(A){const I={"!":"%21","\'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%20|%00/g,(function(A){return I[A]}))}function oA(A,I){this._pairs=[],A&&EA(A,this,I)}const DA=oA.prototype;DA.append=function(A,I){this._pairs.push([A,I])},DA.toString=function(A){const I=A?function(I){return A.call(this,I,iA)}:iA;return this._pairs.map((function(A){return I(A[0])+"="+I(A[1])}),"").join("&")};const aA=oA;function wA(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function sA(A,I,g){if(!I)return A;const B=g&&g.encode||wA,C=g&&g.serialize;let Q;if(Q=C?C(I,g):z.isURLSearchParams(I)?I.toString():new aA(I,g).toString(B),Q){const I=A.indexOf("#");-1!==I&&(A=A.slice(0,I)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}const tA=class{constructor(){this.handlers=[]}use(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1}eject(A){this.handlers[A]&&(this.handlers[A]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(A){z.forEach(this.handlers,(function(I){null!==I&&A(I)}))}},GA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},hA={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:aA,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},isStandardBrowserEnv:(()=>{let A;return("undefined"==typeof navigator||"ReactNative"!==(A=navigator.product)&&"NativeScript"!==A&&"NS"!==A)&&"undefined"!=typeof window&&"undefined"!=typeof document})(),isStandardBrowserWebWorkerEnv:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,protocols:["http","https","file","blob","url","data"]},RA=function(A){function I(A,g,B,C){let Q=A[C++];const E=Number.isFinite(+Q),i=C>=A.length;return Q=!Q&&z.isArray(B)?B.length:Q,i?(z.hasOwnProp(B,Q)?B[Q]=[B[Q],g]:B[Q]=g,!E):(B[Q]&&z.isObject(B[Q])||(B[Q]=[]),I(A,g,B[Q],C)&&z.isArray(B[Q])&&(B[Q]=function(A){const I={},g=Object.keys(A);let B;const C=g.length;let Q;for(B=0;B<C;B++)Q=g[B],I[Q]=A[Q];return I}(B[Q])),!E)}if(z.isFormData(A)&&z.isFunction(A.entries)){const g={};return z.forEachEntry(A,((A,B)=>{I(function(A){return z.matchAll(/\\w+|\\[(\\w*)]/g,A).map((A=>"[]"===A[0]?"":A[1]||A[0]))}(A),B,g,0)})),g}return null},FA={transitional:GA,adapter:hA.isNode?"http":"xhr",transformRequest:[function(A,I){const g=I.getContentType()||"",B=g.indexOf("application/json")>-1,C=z.isObject(A);if(C&&z.isHTMLForm(A)&&(A=new FormData(A)),z.isFormData(A))return B&&B?JSON.stringify(RA(A)):A;if(z.isArrayBuffer(A)||z.isBuffer(A)||z.isStream(A)||z.isFile(A)||z.isBlob(A))return A;if(z.isArrayBufferView(A))return A.buffer;if(z.isURLSearchParams(A))return I.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),A.toString();let Q;if(C){if(g.indexOf("application/x-www-form-urlencoded")>-1)return function(A,I){return EA(A,new hA.classes.URLSearchParams,Object.assign({visitor:function(A,I,g,B){return hA.isNode&&z.isBuffer(A)?(this.append(I,A.toString("base64")),!1):B.defaultVisitor.apply(this,arguments)}},I))}(A,this.formSerializer).toString();if((Q=z.isFileList(A))||g.indexOf("multipart/form-data")>-1){const I=this.env&&this.env.FormData;return EA(Q?{"files[]":A}:A,I&&new I,this.formSerializer)}}return C||B?(I.setContentType("application/json",!1),function(A,I,g){if(z.isString(A))try{return(0,JSON.parse)(A),z.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){const I=this.transitional||FA.transitional,g=I&&I.forcedJSONParsing,B="json"===this.responseType;if(A&&z.isString(A)&&(g&&!this.responseType||B)){const g=!(I&&I.silentJSONParsing)&&B;try{return JSON.parse(A)}catch(A){if(g){if("SyntaxError"===A.name)throw IA.from(A,IA.ERR_BAD_RESPONSE,this,null,this.response);throw A}}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:hA.classes.FormData,Blob:hA.classes.Blob},validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};z.forEach(["delete","get","head","post","put","patch"],(A=>{FA.headers[A]={}}));const rA=FA,yA=z.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),eA=Symbol("internals");function SA(A){return A&&String(A).trim().toLowerCase()}function NA(A){return!1===A||null==A?A:z.isArray(A)?A.map(NA):String(A)}function nA(A,I,g,B,C){return z.isFunction(B)?B.call(this,I,g):(C&&(I=g),z.isString(I)?z.isString(B)?-1!==I.indexOf(B):z.isRegExp(B)?B.test(I):void 0:void 0)}class MA{constructor(A){A&&this.set(A)}set(A,I,g){const B=this;function C(A,I,g){const C=SA(I);if(!C)throw new Error("header name must be a non-empty string");const Q=z.findKey(B,C);(!Q||void 0===B[Q]||!0===g||void 0===g&&!1!==B[Q])&&(B[Q||I]=NA(A))}const Q=(A,I)=>z.forEach(A,((A,g)=>C(A,g,I)));return z.isPlainObject(A)||A instanceof this.constructor?Q(A,I):z.isString(A)&&(A=A.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&\'*+.]+$/.test(A.trim())?Q((A=>{const I={};let g,B,C;return A&&A.split("\\n").forEach((function(A){C=A.indexOf(":"),g=A.substring(0,C).trim().toLowerCase(),B=A.substring(C+1).trim(),!g||I[g]&&yA[g]||("set-cookie"===g?I[g]?I[g].push(B):I[g]=[B]:I[g]=I[g]?I[g]+", "+B:B)})),I})(A),I):null!=A&&C(I,A,g),this}get(A,I){if(A=SA(A)){const g=z.findKey(this,A);if(g){const A=this[g];if(!I)return A;if(!0===I)return function(A){const I=Object.create(null),g=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;let B;for(;B=g.exec(A);)I[B[1]]=B[2];return I}(A);if(z.isFunction(I))return I.call(this,A,g);if(z.isRegExp(I))return I.exec(A);throw new TypeError("parser must be boolean|regexp|function")}}}has(A,I){if(A=SA(A)){const g=z.findKey(this,A);return!(!g||void 0===this[g]||I&&!nA(0,this[g],g,I))}return!1}delete(A,I){const g=this;let B=!1;function C(A){if(A=SA(A)){const C=z.findKey(g,A);!C||I&&!nA(0,g[C],C,I)||(delete g[C],B=!0)}}return z.isArray(A)?A.forEach(C):C(A),B}clear(A){const I=Object.keys(this);let g=I.length,B=!1;for(;g--;){const C=I[g];A&&!nA(0,this[C],C,A,!0)||(delete this[C],B=!0)}return B}normalize(A){const I=this,g={};return z.forEach(this,((B,C)=>{const Q=z.findKey(g,C);if(Q)return I[Q]=NA(B),void delete I[C];const E=A?function(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,((A,I,g)=>I.toUpperCase()+g))}(C):String(C).trim();E!==C&&delete I[C],I[E]=NA(B),g[E]=!0})),this}concat(...A){return this.constructor.concat(this,...A)}toJSON(A){const I=Object.create(null);return z.forEach(this,((g,B)=>{null!=g&&!1!==g&&(I[B]=A&&z.isArray(g)?g.join(", "):g)})),I}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([A,I])=>A+": "+I)).join("\\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(A){return A instanceof this?A:new this(A)}static concat(A,...I){const g=new this(A);return I.forEach((A=>g.set(A))),g}static accessor(A){const I=(this[eA]=this[eA]={accessors:{}}).accessors,g=this.prototype;function B(A){const B=SA(A);I[B]||(function(A,I){const g=z.toCamelCase(" "+I);["get","set","has"].forEach((B=>{Object.defineProperty(A,B+g,{value:function(A,g,C){return this[B].call(this,I,A,g,C)},configurable:!0})}))}(g,A),I[B]=!0)}return z.isArray(A)?A.forEach(B):B(A),this}}MA.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),z.reduceDescriptors(MA.prototype,(({value:A},I)=>{let g=I[0].toUpperCase()+I.slice(1);return{get:()=>A,set(A){this[g]=A}}})),z.freezeMethods(MA);const cA=MA;function kA(A,I){const g=this||rA,B=I||g,C=cA.from(B.headers);let Q=B.data;return z.forEach(A,(function(A){Q=A.call(g,Q,C.normalize(),I?I.status:void 0)})),C.normalize(),Q}function UA(A){return!(!A||!A.__CANCEL__)}function JA(A,I,g){IA.call(this,null==A?"canceled":A,IA.ERR_CANCELED,I,g),this.name="CanceledError"}z.inherits(JA,IA,{__CANCEL__:!0});const KA=JA,YA=hA.isStandardBrowserEnv?{write:function(A,I,g,B,C,Q){const E=[];E.push(A+"="+encodeURIComponent(I)),z.isNumber(g)&&E.push("expires="+new Date(g).toGMTString()),z.isString(B)&&E.push("path="+B),z.isString(C)&&E.push("domain="+C),!0===Q&&E.push("secure"),document.cookie=E.join("; ")},read:function(A){const I=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}};function LA(A,I){return A&&!/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(I)?function(A,I){return I?A.replace(/\\/+$/,"")+"/"+I.replace(/^\\/+/,""):A}(A,I):I}const dA=hA.isStandardBrowserEnv?function(){const A=/(msie|trident)/i.test(navigator.userAgent),I=document.createElement("a");let g;function B(g){let B=g;return A&&(I.setAttribute("href",B),B=I.href),I.setAttribute("href",B),{href:I.href,protocol:I.protocol?I.protocol.replace(/:$/,""):"",host:I.host,search:I.search?I.search.replace(/^\\?/,""):"",hash:I.hash?I.hash.replace(/^#/,""):"",hostname:I.hostname,port:I.port,pathname:"/"===I.pathname.charAt(0)?I.pathname:"/"+I.pathname}}return g=B(window.location.href),function(A){const I=z.isString(A)?B(A):A;return I.protocol===g.protocol&&I.host===g.host}}():function(){return!0};function lA(A,I){let g=0;const B=function(A,I){A=A||10;const g=new Array(A),B=new Array(A);let C,Q=0,E=0;return I=void 0!==I?I:1e3,function(i){const o=Date.now(),D=B[E];C||(C=o),g[Q]=i,B[Q]=o;let a=E,w=0;for(;a!==Q;)w+=g[a++],a%=A;if(Q=(Q+1)%A,Q===E&&(E=(E+1)%A),o-C<I)return;const s=D&&o-D;return s?Math.round(1e3*w/s):void 0}}(50,250);return C=>{const Q=C.loaded,E=C.lengthComputable?C.total:void 0,i=Q-g,o=B(i);g=Q;const D={loaded:Q,total:E,progress:E?Q/E:void 0,bytes:i,rate:o||void 0,estimated:o&&E&&Q<=E?(E-Q)/o:void 0,event:C};D[I?"download":"upload"]=!0,A(D)}}const HA={http:null,xhr:"undefined"!=typeof XMLHttpRequest&&function(A){return new Promise((function(I,g){let B=A.data;const C=cA.from(A.headers).normalize(),Q=A.responseType;let E;function i(){A.cancelToken&&A.cancelToken.unsubscribe(E),A.signal&&A.signal.removeEventListener("abort",E)}z.isFormData(B)&&(hA.isStandardBrowserEnv||hA.isStandardBrowserWebWorkerEnv?C.setContentType(!1):C.setContentType("multipart/form-data;",!1));let o=new XMLHttpRequest;if(A.auth){const I=A.auth.username||"",g=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";C.set("Authorization","Basic "+btoa(I+":"+g))}const D=LA(A.baseURL,A.url);function a(){if(!o)return;const B=cA.from("getAllResponseHeaders"in o&&o.getAllResponseHeaders());!function(A,I,g){const B=g.config.validateStatus;g.status&&B&&!B(g.status)?I(new IA("Request failed with status code "+g.status,[IA.ERR_BAD_REQUEST,IA.ERR_BAD_RESPONSE][Math.floor(g.status/100)-4],g.config,g.request,g)):A(g)}((function(A){I(A),i()}),(function(A){g(A),i()}),{data:Q&&"text"!==Q&&"json"!==Q?o.response:o.responseText,status:o.status,statusText:o.statusText,headers:B,config:A,request:o}),o=null}if(o.open(A.method.toUpperCase(),sA(D,A.params,A.paramsSerializer),!0),o.timeout=A.timeout,"onloadend"in o?o.onloadend=a:o.onreadystatechange=function(){o&&4===o.readyState&&(0!==o.status||o.responseURL&&0===o.responseURL.indexOf("file:"))&&setTimeout(a)},o.onabort=function(){o&&(g(new IA("Request aborted",IA.ECONNABORTED,A,o)),o=null)},o.onerror=function(){g(new IA("Network Error",IA.ERR_NETWORK,A,o)),o=null},o.ontimeout=function(){let I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded";const B=A.transitional||GA;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(new IA(I,B.clarifyTimeoutError?IA.ETIMEDOUT:IA.ECONNABORTED,A,o)),o=null},hA.isStandardBrowserEnv){const I=(A.withCredentials||dA(D))&&A.xsrfCookieName&&YA.read(A.xsrfCookieName);I&&C.set(A.xsrfHeaderName,I)}void 0===B&&C.setContentType(null),"setRequestHeader"in o&&z.forEach(C.toJSON(),(function(A,I){o.setRequestHeader(I,A)})),z.isUndefined(A.withCredentials)||(o.withCredentials=!!A.withCredentials),Q&&"json"!==Q&&(o.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&o.addEventListener("progress",lA(A.onDownloadProgress,!0)),"function"==typeof A.onUploadProgress&&o.upload&&o.upload.addEventListener("progress",lA(A.onUploadProgress)),(A.cancelToken||A.signal)&&(E=I=>{o&&(g(!I||I.type?new KA(null,A,o):I),o.abort(),o=null)},A.cancelToken&&A.cancelToken.subscribe(E),A.signal&&(A.signal.aborted?E():A.signal.addEventListener("abort",E)));const w=function(A){const I=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return I&&I[1]||""}(D);w&&-1===hA.protocols.indexOf(w)?g(new IA("Unsupported protocol "+w+":",IA.ERR_BAD_REQUEST,A)):o.send(B||null)}))}};z.forEach(HA,((A,I)=>{if(A){try{Object.defineProperty(A,"name",{value:I})}catch(A){}Object.defineProperty(A,"adapterName",{value:I})}}));const qA=A=>{A=z.isArray(A)?A:[A];const{length:I}=A;let g,B;for(let C=0;C<I&&(g=A[C],!(B=z.isString(g)?HA[g.toLowerCase()]:g));C++);if(!B){if(!1===B)throw new IA(`Adapter ${g} is not supported by the environment`,"ERR_NOT_SUPPORT");throw new Error(z.hasOwnProp(HA,g)?`Adapter \'${g}\' is not available in the build`:`Unknown adapter \'${g}\'`)}if(!z.isFunction(B))throw new TypeError("adapter is not a function");return B};function pA(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new KA(null,A)}function uA(A){return pA(A),A.headers=cA.from(A.headers),A.data=kA.call(A,A.transformRequest),-1!==["post","put","patch"].indexOf(A.method)&&A.headers.setContentType("application/x-www-form-urlencoded",!1),qA(A.adapter||rA.adapter)(A).then((function(I){return pA(A),I.data=kA.call(A,A.transformResponse,I),I.headers=cA.from(I.headers),I}),(function(I){return UA(I)||(pA(A),I&&I.response&&(I.response.data=kA.call(A,A.transformResponse,I.response),I.response.headers=cA.from(I.response.headers))),Promise.reject(I)}))}const fA=A=>A instanceof cA?A.toJSON():A;function WA(A,I){I=I||{};const g={};function B(A,I,g){return z.isPlainObject(A)&&z.isPlainObject(I)?z.merge.call({caseless:g},A,I):z.isPlainObject(I)?z.merge({},I):z.isArray(I)?I.slice():I}function C(A,I,g){return z.isUndefined(I)?z.isUndefined(A)?void 0:B(void 0,A,g):B(A,I,g)}function Q(A,I){if(!z.isUndefined(I))return B(void 0,I)}function E(A,I){return z.isUndefined(I)?z.isUndefined(A)?void 0:B(void 0,A):B(void 0,I)}function i(g,C,Q){return Q in I?B(g,C):Q in A?B(void 0,g):void 0}const o={url:Q,method:Q,data:Q,baseURL:E,transformRequest:E,transformResponse:E,paramsSerializer:E,timeout:E,timeoutMessage:E,withCredentials:E,adapter:E,responseType:E,xsrfCookieName:E,xsrfHeaderName:E,onUploadProgress:E,onDownloadProgress:E,decompress:E,maxContentLength:E,maxBodyLength:E,beforeRedirect:E,transport:E,httpAgent:E,httpsAgent:E,cancelToken:E,socketPath:E,responseEncoding:E,validateStatus:i,headers:(A,I)=>C(fA(A),fA(I),!0)};return z.forEach(Object.keys(Object.assign({},A,I)),(function(B){const Q=o[B]||C,E=Q(A[B],I[B],B);z.isUndefined(E)&&Q!==i||(g[B]=E)})),g}const mA={};["object","boolean","number","function","string","symbol"].forEach(((A,I)=>{mA[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));const bA={};mA.transitional=function(A,I,g){function B(A,I){return"[Axios v1.5.0] Transitional option \'"+A+"\'"+I+(g?". "+g:"")}return(g,C,Q)=>{if(!1===A)throw new IA(B(C," has been removed"+(I?" in "+I:"")),IA.ERR_DEPRECATED);return I&&!bA[C]&&(bA[C]=!0,console.warn(B(C," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,C,Q)}};const ZA={assertOptions:function(A,I,g){if("object"!=typeof A)throw new IA("options must be an object",IA.ERR_BAD_OPTION_VALUE);const B=Object.keys(A);let C=B.length;for(;C-- >0;){const Q=B[C],E=I[Q];if(E){const I=A[Q],g=void 0===I||E(I,Q,A);if(!0!==g)throw new IA("option "+Q+" must be "+g,IA.ERR_BAD_OPTION_VALUE)}else if(!0!==g)throw new IA("Unknown option "+Q,IA.ERR_BAD_OPTION)}},validators:mA},OA=ZA.validators;class xA{constructor(A){this.defaults=A,this.interceptors={request:new tA,response:new tA}}request(A,I){"string"==typeof A?(I=I||{}).url=A:I=A||{},I=WA(this.defaults,I);const{transitional:g,paramsSerializer:B,headers:C}=I;void 0!==g&&ZA.assertOptions(g,{silentJSONParsing:OA.transitional(OA.boolean),forcedJSONParsing:OA.transitional(OA.boolean),clarifyTimeoutError:OA.transitional(OA.boolean)},!1),null!=B&&(z.isFunction(B)?I.paramsSerializer={serialize:B}:ZA.assertOptions(B,{encode:OA.function,serialize:OA.function},!0)),I.method=(I.method||this.defaults.method||"get").toLowerCase();let Q=C&&z.merge(C.common,C[I.method]);C&&z.forEach(["delete","get","head","post","put","patch","common"],(A=>{delete C[A]})),I.headers=cA.concat(Q,C);const E=[];let i=!0;this.interceptors.request.forEach((function(A){"function"==typeof A.runWhen&&!1===A.runWhen(I)||(i=i&&A.synchronous,E.unshift(A.fulfilled,A.rejected))}));const o=[];let D;this.interceptors.response.forEach((function(A){o.push(A.fulfilled,A.rejected)}));let a,w=0;if(!i){const A=[uA.bind(this),void 0];for(A.unshift.apply(A,E),A.push.apply(A,o),a=A.length,D=Promise.resolve(I);w<a;)D=D.then(A[w++],A[w++]);return D}a=E.length;let s=I;for(w=0;w<a;){const I=E[w++],g=E[w++];try{s=I(s)}catch(A){g.call(this,A);break}}try{D=uA.call(this,s)}catch(A){return Promise.reject(A)}for(w=0,a=o.length;w<a;)D=D.then(o[w++],o[w++]);return D}getUri(A){return sA(LA((A=WA(this.defaults,A)).baseURL,A.url),A.params,A.paramsSerializer)}}z.forEach(["delete","get","head","options"],(function(A){xA.prototype[A]=function(I,g){return this.request(WA(g||{},{method:A,url:I,data:(g||{}).data}))}})),z.forEach(["post","put","patch"],(function(A){function I(I){return function(g,B,C){return this.request(WA(C||{},{method:A,headers:I?{"Content-Type":"multipart/form-data"}:{},url:g,data:B}))}}xA.prototype[A]=I(),xA.prototype[A+"Form"]=I(!0)}));const TA=xA;class VA{constructor(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");let I;this.promise=new Promise((function(A){I=A}));const g=this;this.promise.then((A=>{if(!g._listeners)return;let I=g._listeners.length;for(;I-- >0;)g._listeners[I](A);g._listeners=null})),this.promise.then=A=>{let I;const B=new Promise((A=>{g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A,B,C){g.reason||(g.reason=new KA(A,B,C),I(g.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]}unsubscribe(A){if(!this._listeners)return;const I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}static source(){let A;return{token:new VA((function(I){A=I})),cancel:A}}}const XA=VA,jA={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(jA).forEach((([A,I])=>{jA[I]=A}));const vA=jA,PA=function A(I){const g=new TA(I),B=F(TA.prototype.request,g);return z.extend(B,TA.prototype,g,{allOwnKeys:!0}),z.extend(B,g,null,{allOwnKeys:!0}),B.create=function(g){return A(WA(I,g))},B}(rA);PA.Axios=TA,PA.CanceledError=KA,PA.CancelToken=XA,PA.isCancel=UA,PA.VERSION="1.5.0",PA.toFormData=EA,PA.AxiosError=IA,PA.Cancel=PA.CanceledError,PA.all=function(A){return Promise.all(A)},PA.spread=function(A){return function(I){return A.apply(null,I)}},PA.isAxiosError=function(A){return z.isObject(A)&&!0===A.isAxiosError},PA.mergeConfig=WA,PA.AxiosHeaders=cA,PA.formToJSON=A=>RA(z.isHTMLForm(A)?new FormData(A):A),PA.getAdapter=qA,PA.HttpStatusCode=vA,PA.default=PA;const zA=PA;var _A=function(A,g){function B(){Q(this,B)}return D(B,null,[{key:"fetchRemoteData",value:function(g){return(A=A||I(t().mark((function A(I){var g;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,zA.get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),new Error("Error in Utils.fetchRemoteData: ",A.t0);case 10:case"end":return A.stop()}}),A,null,[[0,7]])})))).apply(this,arguments)}},{key:"fetchRemoteDataCallback",value:function(A,B){return(g=g||I(t().mark((function A(I,g){var B;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,zA.get(I,{responseType:"arraybuffer"}).then((function(A){var I=new Uint8Array(A.data);console.log(I),g(A)}));case 3:return B=A.sent,A.abrupt("return",B);case 7:throw A.prev=7,A.t0=A.catch(0),new Error("Error in Utils.fetchRemoteDataCallback: ",A.t0);case 10:case"end":return A.stop()}}),A,null,[[0,7]])})))).apply(this,arguments)}},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}}]),B}(),$A=function(A,g){function B(){Q(this,B),a(this,"instance",void 0),a(this,"markerNFTCount",void 0),a(this,"cameraCount",void 0),a(this,"version",void 0),a(this,"NFTMarkerInfo",void 0),a(this,"FS",void 0),a(this,"StringList",void 0),a(this,"nftMarkers",void 0),this.instance,this.markerNFTCount=0,this.cameraCount=0,this.version="1.5.0",console.info("ARToolkitNFT ",this.version)}return D(B,[{key:"init",value:function(){return(A=A||I(t().mark((function A(){var I;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,R();case 2:return I=A.sent,this.instance=new I.ARToolKitNFT,this.FS=I.FS,this.StringList=I.StringList,this.nftMarkers=I.nftMarkers,B.ERROR_MARKER_INDEX_OUT_OF_BOUNDS=I.ERROR_MARKER_INDEX_OUT_OF_BOUNDS,B.AR_DEBUG_DISABLE=I.AR_DEBUG_DISABLE,B.AR_DEBUG_ENABLE=I.AR_DEBUG_ENABLE,B.AR_DEFAULT_DEBUG_MODE=I.AR_DEFAULT_DEBUG_MODE,B.AR_DEFAULT_LABELING_THRESH=I.AR_DEFAULT_LABELING_THRESH,B.AR_IMAGE_PROC_FRAME_IMAGE=I.AR_IMAGE_PROC_FRAME_IMAGE,B.AR_IMAGE_PROC_FIELD_IMAGE=I.AR_IMAGE_PROC_FIELD_IMAGE,B.AR_DEFAULT_IMAGE_PROC_MODE=I.AR_DEFAULT_IMAGE_PROC_MODE,B.AR_MAX_LOOP_COUNT=I.AR_MAX_LOOP_COUNT,B.AR_LOOP_BREAK_THRESH=I.AR_LOOP_BREAK_THRESH,B.AR_LOG_LEVEL_DEBUG=I.AR_LOG_LEVEL_DEBUG,B.AR_LOG_LEVEL_INFO=I.AR_LOG_LEVEL_INFO,B.AR_LOG_LEVEL_WARN=I.AR_LOG_LEVEL_WARN,B.AR_LOG_LEVEL_ERROR=I.AR_LOG_LEVEL_ERROR,B.AR_LOG_LEVEL_REL_INFO=I.AR_LOG_LEVEL_REL_INFO,B.AR_LABELING_THRESH_MODE_MANUAL=I.AR_LABELING_THRESH_MODE_MANUAL,B.AR_LABELING_THRESH_MODE_AUTO_MEDIAN=I.AR_LABELING_THRESH_MODE_AUTO_MEDIAN,B.AR_LABELING_THRESH_MODE_AUTO_OTSU=I.AR_LABELING_THRESH_MODE_AUTO_OTSU,B.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE=I.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE,B.AR_MARKER_INFO_CUTOFF_PHASE_NONE=I.AR_MARKER_INFO_CUTOFF_PHASE_NONE,B.AR_MARKER_INFO_CUTOFF_PHASE_PATTERN_EXTRACTION=I.AR_MARKER_INFO_CUTOFF_PHASE_PATTERN_EXTRACTION,B.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_GENERIC=I.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_GENERIC,B.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONTRAST=I.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONTRAST,B.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_NOT_FOUND=I.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_NOT_FOUND,B.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_EDC_FAIL=I.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_EDC_FAIL,B.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONFIDENCE=I.AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONFIDENCE,B.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR=I.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR,B.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR_MULTI=I.AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR_MULTI,B.AR_MARKER_INFO_CUTOFF_PHASE_HEURISTIC_TROUBLESOME_MATRIX_CODES=I.AR_MARKER_INFO_CUTOFF_PHASE_HEURISTIC_TROUBLESOME_MATRIX_CODES,A.abrupt("return",this);case 37:case"end":return A.stop()}}),A,this)})))).apply(this,arguments)}},{key:"setup",value:function(A,I,g){return this.instance.setup(A,I,g)}},{key:"teardown",value:function(){this.instance.teardown()}},{key:"setupAR2",value:function(){this.instance.setupAR2()}},{key:"setDebugMode",value:function(A){return this.instance.setDebugMode(A)}},{key:"getDebugMode",value:function(){return this.instance.getDebugMode()}},{key:"getProcessingImage",value:function(){return this.instance.getProcessingImage()}},{key:"detectMarker",value:function(){return this.instance.detectMarker()}},{key:"detectNFTMarker",value:function(){return this.instance.detectNFTMarker()}},{key:"getNFTMarker",value:function(A){return this.instance.getNFTMarker(A)}},{key:"getNFTData",value:function(A){return this.instance.getNFTData(A)}},{key:"setLogLevel",value:function(A){return this.instance.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.instance.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){this.instance.setProjectionNearPlane(A)}},{key:"getProjectionNearPlane",value:function(){return this.instance.getProjectionNearPlane()}},{key:"setProjectionFarPlane",value:function(A){this.instance.setProjectionFarPlane(A)}},{key:"getProjectionFarPlane",value:function(){return this.instance.getProjectionFarPlane()}},{key:"setThresholdMode",value:function(A){return this.instance.setThresholdMode(A)}},{key:"getThresholdMode",value:function(){return this.instance.getThresholdMode()}},{key:"setThreshold",value:function(A){return this.instance.setThreshold(A)}},{key:"getThreshold",value:function(){return this.instance.getThreshold()}},{key:"setImageProcMode",value:function(A){return this.instance.setImageProcMode(A)}},{key:"getImageProcMode",value:function(){return this.instance.getImageProcMode()}},{key:"getCameraLens",value:function(){return this.instance.getCameraLens()}},{key:"passVideoData",value:function(A,I){this.instance.passVideoData(A,I)}},{key:"loadCamera",value:function(A){return(g=g||I(t().mark((function A(I){var g,B;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,_A.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),new Error("Error in loadCamera function: ",A.t0);case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])})))).apply(this,arguments)}},{key:"addNFTMarkers",value:function(A,I,g){var B=this,C=[],Q=3*A.length,E=function(A){if(0==(Q-=1)){for(var g=new B.StringList,E=[],i=0;i<C.length;i++)g.push_back(C[i]);for(var o=B.instance._addNFTMarkers(g),D=0;D<o.size();D++)E.push(o.get(D));console.log("add nft marker ids: ",E),I&&I(E)}},i=function(A,I){console.log("failed to load: ",A),g(I)},o=[];return A.forEach((function(A,I){var g="/markerNFT_"+B.markerNFTCount;if(C.push(g),Array.isArray(A))A.forEach((function(A){var I=g+"."+A.split(".").pop();B.ajax(A,I,E.bind(I),i.bind(I))})),B.markerNFTCount+=1;else{var Q=g+".fset",D=g+".iset",a=g+".fset3";B.ajax(A+".fset",Q,E.bind(Q),i.bind(Q)),B.ajax(A+".iset",D,E.bind(D),i.bind(D)),B.ajax(A+".fset3",a,E.bind(a),i.bind(a)),B.markerNFTCount+=1}o.push(I)})),o}},{key:"_storeDataFile",value:function(A,I){this.FS.writeFile(I,A,{encoding:"binary"})}},{key:"ajax",value:function(A,I,g,B){var C=this,Q=new XMLHttpRequest;Q.open("GET",A,!0),Q.responseType="arraybuffer",Q.onload=function(){if(200==this.status){var E=Q.response,i=new Uint8Array(E);!function(A,I,g){C.FS.writeFile(A,I,{encoding:"binary"}),g(I)}(I,i,g)}else B(A,this.status)},Q.send()}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"NFT_MARKER",get:function(){return 0}}]),B}();a($A,"ERROR_MARKER_INDEX_OUT_OF_BOUNDS",void 0),a($A,"AR_DEBUG_DISABLE",void 0),a($A,"AR_DEBUG_ENABLE",void 0),a($A,"AR_DEFAULT_DEBUG_MODE",void 0),a($A,"AR_DEFAULT_LABELING_THRESH",void 0),a($A,"AR_IMAGE_PROC_FRAME_IMAGE",void 0),a($A,"AR_IMAGE_PROC_FIELD_IMAGE",void 0),a($A,"AR_DEFAULT_IMAGE_PROC_MODE",void 0),a($A,"AR_MAX_LOOP_COUNT",void 0),a($A,"AR_LOOP_BREAK_THRESH",void 0),a($A,"AR_LOG_LEVEL_DEBUG",void 0),a($A,"AR_LOG_LEVEL_INFO",void 0),a($A,"AR_LOG_LEVEL_WARN",void 0),a($A,"AR_LOG_LEVEL_ERROR",void 0),a($A,"AR_LOG_LEVEL_REL_INFO",void 0),a($A,"AR_LABELING_THRESH_MODE_MANUAL",void 0),a($A,"AR_LABELING_THRESH_MODE_AUTO_MEDIAN",void 0),a($A,"AR_LABELING_THRESH_MODE_AUTO_OTSU",void 0),a($A,"AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_NONE",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_PATTERN_EXTRACTION",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_GENERIC",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONTRAST",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_NOT_FOUND",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_BARCODE_EDC_FAIL",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_MATCH_CONFIDENCE",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_POSE_ERROR_MULTI",void 0),a($A,"AR_MARKER_INFO_CUTOFF_PHASE_HEURISTIC_TROUBLESOME_MATRIX_CODES",void 0);var AI=function(A,g,B,C,E,i){function o(A,I,g){Q(this,o),a(this,"id",void 0),a(this,"_width",void 0),a(this,"_height",void 0),a(this,"_cameraParam",void 0),a(this,"cameraId",void 0),a(this,"artoolkitNFT",void 0),a(this,"FS",void 0),a(this,"StringList",void 0),a(this,"listeners",void 0),a(this,"nftMarkers",void 0),a(this,"transform_mat",void 0),a(this,"transformGL_RH",void 0),a(this,"camera_mat",void 0),a(this,"videoWidth",void 0),a(this,"videoHeight",void 0),a(this,"videoSize",void 0),a(this,"framesize",void 0),a(this,"videoLuma",void 0),a(this,"grayscaleEnabled",void 0),a(this,"grayscaleSource",void 0),a(this,"nftMarkerFound",void 0),a(this,"nftMarkerFoundTime",void 0),a(this,"nftMarkerCount",void 0),a(this,"defaultMarkerWidth",void 0),a(this,"_bwpointer",void 0),this.id=-1,this._width=A,this._height=I,this._cameraParam=g,this.cameraId=-1,this.artoolkitNFT,this.listeners={},this.nftMarkers=[],this.transform_mat=new Float64Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=A,this.videoHeight=I,this.videoSize=this.videoWidth*this.videoHeight,this.framesize=null,this.videoLuma=null,this.grayscaleEnabled=!1,this.camera_mat=null,this.nftMarkerFound=!1,this.nftMarkerFoundTime=0,this.nftMarkerCount=0,this._bwpointer=null,this.defaultMarkerWidth=1}return D(o,[{key:"width",get:function(){return this._width},set:function(A){this._width=A}},{key:"height",get:function(){return this._height},set:function(A){this._height=A}},{key:"cameraParam",get:function(){return this._cameraParam},set:function(A){this._cameraParam=A}},{key:"process",value:function(A){var I,g,B=this.detectMarker(A);for(I in 0!=B&&console.error("[ARControllerNFT]","detectMarker error:",B),this.converter().nftMarkers)(g=this.converter().nftMarkers[I]).inPrevious=g.inCurrent,g.inCurrent=!1;var C=this.nftMarkerCount;this.detectNFTMarker();for(var Q=0;Q<C;Q++){var E=this.getNFTMarker(Q),i=$A.NFT_MARKER;if(E.found){this.nftMarkerFound=Q,this.nftMarkerFoundTime=Date.now();var o=this.trackNFTMarkerId(Q);o.matrix.set(E.pose),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else this.nftMarkerFound===Q&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}}},{key:"detectNFTMarker",value:function(){return this.artoolkitNFT.detectNFTMarker()}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.converter().nftMarkers[A];return g||(this.converter().nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkitNFT.detectMarker():-99}},{key:"getNFTMarker",value:function(A){return this.artoolkitNFT.getNFTMarker(A)}},{key:"getNFTData",value:function(A){return this.artoolkitNFT.getNFTData(A)}},{key:"addEventListener",value:function(A,I){this.converter().listeners[A]||(this.converter().listeners[A]=[]),this.converter().listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.converter().listeners[A]){var g=this.converter().listeners[A].indexOf(I);g>-1&&this.converter().listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.converter().listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"setDebugMode",value:function(A){return this.artoolkitNFT.setDebugMode(A)}},{key:"getDebugMode",value:function(){return this.artoolkitNFT.getDebugMode()}},{key:"getProcessingImage",value:function(){return this.artoolkitNFT.getProcessingImage()}},{key:"setLogLevel",value:function(A){return this.artoolkitNFT.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkitNFT.getLogLevel()}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkitNFT.setProjectionNearPlane(A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkitNFT.getProjectionNearPlane()}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkitNFT.setProjectionFarPlane(A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkitNFT.getProjectionFarPlane()}},{key:"setThresholdMode",value:function(A){return this.artoolkitNFT.setThresholdMode(A)}},{key:"getThresholdMode",value:function(){return this.artoolkitNFT.getThresholdMode()}},{key:"setThreshold",value:function(A){return this.artoolkitNFT.setThreshold(A)}},{key:"getThreshold",value:function(){return this.artoolkitNFT.getThreshold()}},{key:"loadNFTMarker",value:function(g,B,C){return(A=A||I(t().mark((function A(I,g,B){var C,Q=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers([I],(function(A){Q.nftMarkerCount+=A.length,g(A[0])}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)})))).apply(this,arguments)}},{key:"loadNFTMarkers",value:function(A,B,C){return(g=g||I(t().mark((function A(I,g,B){var C,Q=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkitNFT.addNFTMarkers(I,(function(A){Q.nftMarkerCount+=A.length,g(A)}),B);case 2:return C=A.sent,A.abrupt("return",C);case 4:case"end":return A.stop()}}),A,this)})))).apply(this,arguments)}},{key:"setImageProcMode",value:function(A){return this.artoolkitNFT.setImageProcMode(A)}},{key:"getImageProcMode",value:function(){return this.artoolkitNFT.getImageProcMode()}},{key:"setGrayData",value:function(A){this.grayscaleEnabled=!0,this.grayscaleSource=A}},{key:"converter",value:function(){return this}},{key:"_initialize",value:function(){return(B=B||I(t().mark((function A(){var I=this;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new $A).init();case 2:return this.artoolkitNFT=A.sent,this.FS=this.artoolkitNFT.FS,this.StringList=this.artoolkitNFT.StringList,console.log("[ARControllerNFT]","ARToolkitNFT initialized"),A.next=8,this.artoolkitNFT.loadCamera(this.cameraParam);case 8:return this.cameraId=A.sent,console.log("[ARControllerNFT]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkitNFT.setup(this.width,this.height,this.cameraId),console.log("[ARControllerNFT]","Got ID from setup",this.id),this._initNFT(),this.framesize=this._width*this._height,this.videoLuma=new Uint8Array(this.framesize/4),this.camera_mat=this.artoolkitNFT.getCameraLens(),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){I.dispatchEvent({name:"load",target:I})}),1),A.abrupt("return",this);case 20:case"end":return A.stop()}}),A,this)})))).apply(this,arguments)}},{key:"_initNFT",value:function(){this.artoolkitNFT.setupAR2()}},{key:"_copyImageToHeap",value:function(A){if(A){var I;if(A.data&&(I=A.data),this.videoLuma)if(0==this.grayscaleEnabled)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}else 1==this.grayscaleEnabled&&(this.videoLuma=this.grayscaleSource);return!!this.videoLuma&&(this.artoolkitNFT.passVideoData(I,this.videoLuma),!0)}console.error("Error: no provided imageData to ARControllerNFT")}}],[{key:"initWithDimensions",value:function(A,g,B){return(C=C||I(t().mark((function A(I,g,B){var C;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C=new o(I,g,B),A.next=3,C._initialize();case 3:return A.abrupt("return",A.sent);case 4:case"end":return A.stop()}}),A)})))).apply(this,arguments)}},{key:"initWithImage",value:function(A,g){return(E=E||I(t().mark((function A(I,g){var B,C,Q;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return B=I.videoWidth||I.width,C=I.videoHeight||I.height,Q=new o(B,C,g),A.next=5,Q._initialize();case 5:return A.abrupt("return",A.sent);case 6:case"end":return A.stop()}}),A)})))).apply(this,arguments)}},{key:"customInit",value:function(A,g,B,C){return(i=i||I(t().mark((function A(I,g,B,C){var Q;return t().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return Q=new o(I,g,B),C(),A.next=4,Q._initialize();case 4:return A.abrupt("return",A.sent);case 5:case"end":return A.stop()}}),A)})))).apply(this,arguments)}}]),o}()})(),C})(),A.exports=B()}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B].call(Q.exports,Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),(()=>{"use strict";var A=g(801),I=g.n(A),B={d:(A,I)=>{for(var g in I)B.o(I,g)&&!B.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},o:(A,I)=>Object.prototype.hasOwnProperty.call(A,I)},C={};B.d(C,{L:()=>Q});class Q{minCutOff;beta;dCutOff;xPrev;dxPrev;tPrev;initialized;constructor(A,I){this.minCutOff=A,this.beta=I,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}smoothingFactor(A,I){const g=2*Math.PI*I*A;return g/(g+1)}exponentialSmoothing(A,I,g){return A*I+(1-A)*g}reset(){this.initialized=!1}filter(A,I){if(!this.initialized)return this.initialized=!0,this.xPrev=I,this.dxPrev=I.map((()=>0)),this.tPrev=A,I;const{xPrev:g,tPrev:B,dxPrev:C}=this,Q=A-B,E=this.smoothingFactor(Q,this.dCutOff),i=[],o=[],D=[];for(let A=0;A<I.length;A++){i[A]=(I[A]-g[A])/Q,o[A]=this.exponentialSmoothing(E,i[A],C[A]);const B=this.minCutOff+this.beta*Math.abs(o[A]),a=this.smoothingFactor(Q,B);D[A]=this.exponentialSmoothing(a,I[A],g[A])}return this.xPrev=D,this.dxPrev=o,this.tPrev=A,D}}var E=C.L;const{ARControllerNFT:i}=I(),o=self;o.onmessage=A=>{const I=A.data;switch(I.type){case"load":return void h(I);case"stop":w=null;break;case"process":D=I.imagedata,R(D,I.frame)}};let D=null,a=0,w=null,s=null;let t=0;const G=new E(1e-4,.01),h=async A=>{const I=self.origin;let g,B=[],C=A.marker.length;console.debug("Base path:",I);const Q=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.camera_para);1==Q?g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:A.camera_para:0==Q&&(g=A.addPath?I+"/"+A.addPath+"/"+A.camera_para:I+"/"+A.camera_para),console.debug("Loading camera at:",g),i.initWithDimensions(A.pw,A.ph,g).then((async g=>{w=g;const Q=w.getCameraMatrix();w.addEventListener("getNFTMarker",(A=>{let I;var g;g=A.data.matrixGL_RH,t+=1,I=t>5?G.filter(Date.now(),g):g,s={type:"found",matrixGL_RH:JSON.stringify(I)}}));const E=/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#()?&//=]*)/gim.test(A.marker);for(var i=0;i<C;i++){let g;1==E?A.addPath?g=I+"/"+A.addPath+"/"+A.marker[i]:B=A.marker[i]:0==E&&(g=A.addPath?I+"/"+A.addPath+"/"+A.marker[i]:I+"/"+A.marker[i]),B.push(g)}console.debug("Loading NFT marker at: ",B),await w.loadNFTMarkers(B,(A=>{var I=0;let g=w.getNFTData(A[I],0);o.postMessage({type:"markerInfos",marker:g}),w.trackNFTMarkerId(A[I]),console.log("loadNFTMarker -> ",A[I]),o.postMessage({type:"endLoading",end:!0}),I++}),(A=>{console.error("Error: ",A," loading marker in loadNFTMarkers!")})).catch((A=>{console.error("Error in loading marker on Worker",A)})),o.postMessage({type:"loaded",proj:JSON.stringify(Q)})})).catch((A=>{console.error(A)}))},R=(A,I)=>{I!==a&&(s=null,w&&w.process&&w.process(A),a=I),null!=s?o.postMessage(s):o.postMessage({type:"not found"}),A=null}})()})();\n',"Worker",void 0,void 0)}class t{worker;markerURL;_processing=!1;vw;vh;target;uuid;name;addPath;ready;constructor(A,I,B,C,Q,E){this.markerURL=A,this.vw=I,this.vh=B,this.target=window||g.g,this.uuid=C,this.name=Q,this.ready=!1,this.addPath=E}async initialize(A,I,g){this.worker=new a;const B=this.worker;return this.target.addEventListener("terminateWorker-"+this.name,(function(){B.postMessage({type:"stop"}),B.terminate()})),await this.load(A,I,g)}process(A,I){this._processing||(this._processing=!0,this.worker.postMessage({type:"process",imagedata:A,frame:I},[A.data.buffer]))}load(A,I,g){let[B,C,Q,i,o,D]=E(this.vw,this.vh);const a=new CustomEvent("getWindowSize",{detail:{sw:B,sh:C}});this.target.dispatchEvent(a),this.worker.postMessage({type:"load",pw:Q,ph:i,camera_para:A,marker:this.markerURL,addPath:this.addPath}),this.worker.onmessage=A=>{var I=A.data;switch(I.type){case"loaded":{var B=JSON.parse(I.proj);const A=Q/o,g=i/D;B[0]*=A,B[4]*=A,B[8]*=A,B[12]*=A,B[1]*=g,B[5]*=g,B[9]*=g,B[13]*=g;const C=new CustomEvent("getProjectionMatrix",{detail:{proj:B}});this.target.dispatchEvent(C);break}case"endLoading":if(1==I.end){const A=document.getElementById("loading");A&&(A.querySelector(".loading-text").innerText="Start the tracking!",setTimeout((function(){null!=A.parentElement&&A&&A.parentElement.removeChild(A)}),2e3))}this.ready=!0,this.target.dispatchEvent(new CustomEvent("nftLoaded-"+this.uuid));break;case"markerInfos":{const A=I.marker,g=new CustomEvent("getNFTData-"+this.uuid+"-"+this.name,{detail:{dpi:A.dpi,width:A.width,height:A.height}});this.target.dispatchEvent(g);break}case"found":this.found(I);break;case"not found":this.found(null)}this._processing=!1,g()},this.worker.onerror=A=>{console.error("Worker error from NFTWorker: ",A)};let t=()=>{I(),window.requestAnimationFrame(t)};return t(),Promise.resolve(!0)}found(A){let I;if(A){I=JSON.parse(A.matrixGL_RH);const g=new CustomEvent("getMatrixGL_RH-"+this.uuid+"-"+this.name,{detail:{matrixGL_RH:I,name:this.name}});this.target.dispatchEvent(g)}else{I=null;const A=new CustomEvent("nftTrackingLost-"+this.uuid+"-"+this.name,{detail:{name:this.name}});this.target.dispatchEvent(A)}}isReady(){return this.ready}getUuid(){return this.uuid}getName(){return this.name}getMarkerUrl(){return this.markerURL}getEventTarget(){return this.target}destroy(){}}const s={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let w;const G=new Uint8Array(16);function h(){if(!w&&(w="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!w))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return w(G)}const e=[];for(let A=0;A<256;++A)e.push((A+256).toString(16).slice(1));function r(A,I=0){return e[A[I+0]]+e[A[I+1]]+e[A[I+2]]+e[A[I+3]]+"-"+e[A[I+4]]+e[A[I+5]]+"-"+e[A[I+6]]+e[A[I+7]]+"-"+e[A[I+8]]+e[A[I+9]]+"-"+e[A[I+10]]+e[A[I+11]]+e[A[I+12]]+e[A[I+13]]+e[A[I+14]]+e[A[I+15]]}const R=function(A,I,g){if(s.randomUUID&&!I&&!A)return s.randomUUID();const B=(A=A||{}).random||(A.rng||h)();if(B[6]=15&B[6]|64,B[8]=63&B[8]|128,I){g=g||0;for(let A=0;A<16;++A)I[g+A]=B[A];return I}return r(B)},{version:F}={version:"0.14.5"};class y{cameraView;appData;addPath;width;height;configUrl;markerUrl;camData;autoUpdate=!0;controllers;static entities;target;uuid;version;initialized;_views;constructor(A,I,B){this.width=A,this.height=I,this.configUrl=B,this.target=window||g.g,this.uuid=R(),this.version=F,console.log("ARnft ",this.version)}static async init(A,I,g,B,C,Q){return y.initWithConfig({width:A,height:I,markerUrls:g,names:B,configUrl:C,stats:Q})}static async initWithEntities(A,I,g,B,C){return y.initWithConfig({width:A,height:I,entities:g,configUrl:B,stats:C})}static async initWithConfig(A){const I=new y(A.width,A.height,A.configUrl);null!=A.autoUpdate&&(I.autoUpdate=A.autoUpdate);try{let g,B=[];const C=A,Q=A;if(null!=C.markerUrls&&null!=C.names)null==Q.entities&&(B=C.markerUrls,g=C.names,this.entities=g.map((function(A,I,g){return{name:A[0],markerUrl:B[I][0]}})));else{if(null==Q.entities)throw"markerUrls or entities can't be undefined";this.entities=Q.entities,B=this.entities.map((A=>[A.markerUrl])),g=this.entities.map((A=>[A.name]))}return await I._initialize(B,g,A.stats)}catch(A){if(A.code)return console.error(A),Promise.reject(A)}}async _initialize(I,g,B){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),B&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],this.cameraView=new Q(this._views.video),this.cameraView.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>B?o.update():null,C=()=>B?D.update():null;I.forEach(((I,B)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[B][0],this.addPath)),this.controllers[B].initialize(this.appData.cameraPara,A,C)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame))),requestAnimationFrame(a)};return a(),this}async initializeRaw(I,g,B,Q){const E=new Event("initARnft");let o,D;this.target.dispatchEvent(E),console.log("ARnft init() %cstart...","color: yellow; background-color: blue; border-radius: 4px; padding: 2px"),i(this.configUrl).then((I=>{this.appData=I,this.addPath=I.addPath,this._views=A.createContainer(this.appData),this._views.loading=A.createLoading(this.appData),this._views.stats=A.createStats(this.appData.stats.createHtml,this.appData),Q&&(o=new(C()),o.showPanel(0),document.getElementById("stats1").appendChild(o.dom),D=new(C()),D.showPanel(0),document.getElementById("stats2").appendChild(D.dom));var g=new Event("containerEvent");return document.dispatchEvent(g),this.controllers=[],B.initialize(this.appData.videoSettings)})).then((()=>{const A=()=>Q?o.update():null,B=()=>Q?D.update():null;I.forEach(((I,C)=>{this.controllers.push(new t(I,this.width,this.height,this.uuid,g[C],this.addPath)),this.controllers[C].initialize(this.appData.cameraPara,A,B)})),this.initialized=!0})).catch((function(A){return Promise.reject(A)})),this.target.addEventListener("nftLoaded-"+this.uuid,(()=>{0===this.controllers.filter((A=>!1===A.isReady())).length&&this.target.dispatchEvent(new CustomEvent("ARnftIsReady"))}));let a=()=>{this.initialized&&this.autoUpdate&&this.controllers.forEach((A=>A.process(B.getImage(),B.getFrame()))),requestAnimationFrame(a)};return a(),this}update(){this.initialized&&!this.autoUpdate&&null!=this.cameraView&&this.controllers.forEach((A=>A.process(this.cameraView.image,this.cameraView.frame)))}static getEntities(){return this.entities}getEventTarget(){return this.target}get views(){return Object.freeze(this._views)}dispose(){this.disposeVideoStream(),this.disposeAllNFTs()}disposeNFT(A){var I=new Event("terminateWorker-"+A);this.target.dispatchEvent(I)}disposeAllNFTs(){y.getEntities().forEach((A=>{this.disposeNFT(A.name)}))}disposeVideoStream(){this.cameraView.destroy();var A=new Event("stopVideoStreaming");this.target.dispatchEvent(A)}}const n={ARnft:y}})(),B=B.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,